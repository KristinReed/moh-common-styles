var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.8","fields":["title","body"],"fieldVectors":[["title/classes/AbstractBaseForm.html",[0,0.015,1,2.96]],["body/classes/AbstractBaseForm.html",[0,0.019,1,4.715,2,2.174,3,0.16,4,0.19,5,0.102,6,5.783,7,1.89,8,4.006,9,0.205,10,0.75,11,2.861,12,5.58,13,0.831,14,2.714,15,5.415,16,4.188,17,2.287,18,4.209,19,0.85,20,3.038,21,4.14,22,0.669,23,6.834,24,1.066,25,0.011,26,0.531,27,0.297,28,0.649,29,1.176,30,4.768,31,5.452,32,1.628,33,1.868,34,5.042,35,0.727,36,0.704,37,1.066,38,5.43,39,3.376,40,4.209,41,5.042,42,1.768,43,3.823,44,1.416,45,1.975,46,3.877,47,5.042,48,1.819,49,0.821,50,5.43,51,5.042,52,2.213,53,4.715,54,4.005,55,5.452,56,4.715,57,1.299,58,1.167,59,5.452,60,0.437,61,5.58,62,4.834,63,5.43,64,5.042,65,2.736,66,3.66,67,4.715,68,3.823,69,2.174,70,2.582,71,0.262,72,2.322,73,0.44,74,2.106,75,1.096,76,2.322,77,0.16,78,3.182,79,5.43,80,5.43,81,5.43,82,4.332,83,0.007,84,0.008,85,0.007]],["title/classes/AbstractForm.html",[0,0.015,86,3.423]],["body/classes/AbstractForm.html",[0,0.019,1,5.822,2,2.124,3,0.156,4,0.186,5,0.1,6,5.542,7,1.196,8,3.914,9,0.201,10,0.739,11,2.841,12,5.104,13,0.818,14,2.658,15,5.753,16,4.119,17,2.456,18,4.148,19,0.841,20,2.968,21,4.054,22,0.69,24,1.051,25,0.011,26,0.523,27,0.304,28,0.64,29,1.144,30,5.914,31,4.233,32,1.762,33,1.45,34,3.914,35,0.71,36,0.688,37,0.828,39,2.621,40,3.267,41,3.914,42,1.372,43,2.968,44,1.573,45,1.958,46,3.844,47,5.459,48,1.803,49,0.901,51,3.914,52,1.718,53,3.66,54,3.109,55,4.233,56,3.66,57,1.114,58,1.214,59,4.233,60,0.394,61,4.646,62,4.148,64,3.914,65,2.124,66,2.841,67,3.66,68,2.968,69,2.124,70,2.523,71,0.272,72,2.269,73,0.43,74,2.869,75,1.071,76,2.269,77,0.156,78,3.109,83,0.006,84,0.008,85,0.006,86,5.373,87,1.477,88,6.834,89,2.194,90,6.735,91,4.646,92,4.969,93,4.148,94,2.841,95,4.659,96,4.659,97,5.306,98,5.306,99,4.969,100,3.768,101,5.914,102,4.659,103,4.659,104,4.659,105,4.659,106,0.904,107,2.621,108,0.624,109,3.109,110,5.306,111,5.306]],["title/classes/AbstractFormControl.html",[0,0.015,112,2.041]],["body/classes/AbstractFormControl.html",[0,0.02,2,1.683,3,0.124,4,0.147,5,0.079,6,5.891,7,1.678,9,0.159,10,0.634,11,2.333,13,0.702,14,2.597,17,2.351,22,0.698,24,1.161,25,0.011,26,0.578,27,0.311,28,0.748,29,1.06,32,1.375,35,1.074,36,1.021,37,0.901,42,1.494,44,1.54,49,0.881,58,1.297,60,0.435,71,0.26,73,0.341,75,0.849,77,0.124,83,0.005,84,0.007,85,0.005,87,1.267,94,1.487,108,0.679,112,2.746,113,3.692,114,0.702,115,1.487,116,2.797,117,3.533,118,2.333,119,2.404,120,0.955,121,2.171,122,1.601,123,2.919,124,2.919,125,3.69,126,3.69,127,3.803,128,1.571,129,4.161,130,2.558,131,3.431,132,2.419,133,4.205,134,4.205,135,4.205,136,1.361,137,1.683,138,1.533,139,1.401,140,1.487,141,1.631,142,1.166,143,4.205,144,1.533,145,4.205,146,2.745,147,1.533,148,4.205,149,2.464,150,3.431,151,3.377,152,4.205,153,3.539,154,3.183,155,4.164,156,2.556,157,0.897,158,2.234,159,2,160,4.205,161,2.919,162,4.205,163,4.205,164,1.798,165,4.205,166,4.205,167,4.205,168,4.205,169,4.607,170,1.123,171,2.161,172,1.272,173,2.901,174,3.692,175,3.692,176,1.487,177,4.205,178,2.648,179,2,180,0.449,181,2.901,182,2.252,183,2.733,184,4.205,185,2.24,186,4.607,187,2.648,188,3.354,189,1.487,190,2.733,191,1.443,192,2.901,193,2.136,194,2.733,195,4.205,196,2.59,197,2.352,198,3.102,199,2.252,200,3.692,201,1.175,202,5.775,203,4.867,204,4.205,205,1.861,206,3.354,207,3.354,208,2.312,209,6.596,210,3.354,211,2.901,212,3.692,213,4.205,214,2.24,215,0.696,216,3.102,217,2.352,218,2.352,219,4.205,220,3.102,221,4.205,222,4.205,223,4.205,224,5.775,225,4.205,226,4.205,227,4.205,228,7.101,229,2.733,230,5.775,231,3.754,232,4.205,233,2.252,234,2.077,235,4.205,236,1.861,237,3.984,238,0.696,239,4.205]],["title/classes/AbstractHttpService.html",[0,0.015,240,2.4]],["body/classes/AbstractHttpService.html",[0,0.023,2,1.677,3,0.123,4,0.147,5,0.079,9,0.158,10,0.632,13,0.862,14,2.664,17,2.689,19,0.476,22,0.667,24,1.269,25,0.011,26,0.597,27,0.314,28,0.73,29,0.821,35,0.561,36,0.543,37,0.899,49,0.864,60,0.385,61,5.128,62,2.58,69,3.327,70,1.992,71,0.26,77,0.123,78,2.455,83,0.005,84,0.007,85,0.005,100,3.223,108,0.874,136,1.356,156,1.854,157,1.405,158,1.318,170,1.385,176,2.037,201,1.271,214,2.553,220,4.25,231,3.744,240,3.223,241,6.131,242,3.554,243,3.679,244,4.766,245,3.032,246,4.279,247,5.781,248,5.656,249,4.857,250,5.428,251,5.058,252,4.596,253,2.845,254,6.527,255,3.679,256,4.366,257,5.761,258,4.891,259,4.19,260,5.805,261,4.596,262,5.058,263,4.19,264,5.058,265,5.93,266,4.19,267,4.055,268,5.286,269,5.656,270,2.306,271,4.279,272,5.058,273,4.596,274,2.165,275,4.592,276,3.744,277,4.891,278,4.19,279,4.596,280,5.781,281,5.128,282,3.744,283,5.058,284,4.25,285,2.641,286,5.058,287,5.058,288,5.058,289,5.484,290,4.19,291,5.058,292,4.19,293,5.058,294,6.744,295,3.812,296,4.19,297,5.058,298,4.25,299,1.812,300,1.229,301,1.977,302,5.058,303,3.032,304,6.226,305,2.295,306,5.058,307,5.058,308,3.974,309,4.596,310,4.19,311,4.19,312,3.744,313,4.596,314,2.455,315,2.455,316,1.792,317,3.679,318,3.679,319,2.344,320,3.526,321,2.153,322,3.342,323,3.679,324,2.58,325,4.19,326,5.761,327,5.761,328,4.19,329,1.992,330,4.19,331,5.761,332,5.761,333,2.153,334,4.19,335,2.89,336,4.19,337,4.19,338,1.733,339,3.342,340,4.596,341,4.19,342,1.92,343,5.058,344,2.58,345,4.596,346,3.342,347,4.19,348,3.679,349,3.679,350,3.679,351,2.74,352,4.19,353,4.19,354,2.89,355,1.438]],["title/injectables/AbstractPageGuardService.html",[356,1.35,357,2.96]],["body/injectables/AbstractPageGuardService.html",[0,0.027,3,0.172,4,0.205,5,0.11,9,0.221,13,0.979,14,2.805,22,0.58,24,0.912,25,0.011,26,0.454,27,0.221,28,0.555,29,1.148,49,0.786,57,1.367,60,0.452,65,2.865,69,2.865,71,0.205,73,0.474,77,0.172,83,0.007,84,0.009,85,0.007,114,0.87,120,1.391,157,1.248,241,5.705,245,3.597,356,2.251,357,5.558,358,3.005,359,4.035,360,4.507,361,4.315,362,3.677,363,2.395,364,6.427,365,6.284,366,7.156,367,4.937,368,6.284,369,6.284,370,3.677,371,5.28,372,5.709,373,2.531,374,5.558,375,2.011,376,2.251,377,2.188,378,7.156,379,5.558,380,6.79,381,5.848,382,5.135,383,5.848]],["title/injectables/AbstractPgCheckService.html",[356,1.35,384,2.789]],["body/injectables/AbstractPgCheckService.html",[0,0.025,3,0.17,4,0.202,5,0.109,9,0.219,13,0.935,14,2.863,22,0.65,24,0.902,25,0.011,26,0.449,27,0.219,28,0.549,29,1.195,49,0.881,60,0.481,65,2.846,69,2.846,71,0.202,73,0.469,77,0.17,83,0.007,84,0.009,85,0.007,114,0.703,120,1.453,241,6.079,245,3.291,356,2.236,358,2.972,360,3.976,361,3.806,362,2.972,363,2.287,364,5.67,365,5.079,368,5.079,369,5.079,370,2.972,371,4.267,372,4.614,373,2.045,375,1.997,376,2.236,377,2.173,379,5.537,384,5.355,385,5.684,386,5.079,387,5.67,388,6.241,389,4.739,390,6.403,391,5.677,392,6.403,393,5.784,394,5.784,395,5.079,396,5.784,397,5.784,398,3.389]],["title/classes/AbstractReactForm.html",[0,0.015,399,3.423]],["body/classes/AbstractReactForm.html",[0,0.017,1,5.714,2,1.939,3,0.143,4,0.169,5,0.091,6,5.527,7,1.092,8,3.573,9,0.183,10,0.697,11,2.761,12,4.887,13,0.772,14,2.594,15,5.632,16,4.032,17,2.387,18,3.91,19,0.805,20,2.709,21,3.957,22,0.685,24,1.173,25,0.011,26,0.584,27,0.309,28,0.714,29,1.112,31,3.864,32,1.687,33,1.324,34,3.573,35,0.85,36,0.823,37,0.755,39,2.392,40,2.983,41,3.573,42,1.253,43,3.552,44,1.546,45,1.892,46,3.714,47,5.227,48,1.742,49,0.909,51,3.573,52,1.568,53,3.341,54,2.838,55,3.864,56,3.341,57,1.05,58,1.218,59,3.864,60,0.371,61,4.381,62,3.91,64,3.573,65,1.939,66,2.594,67,3.341,68,2.709,69,1.939,70,2.303,71,0.248,75,0.977,76,2.071,77,0.143,78,2.838,83,0.006,84,0.008,85,0.006,87,1.393,88,5.575,91,4.381,92,4.685,93,3.91,94,2.761,95,4.252,96,4.252,99,4.685,100,3.552,101,5.575,102,4.252,103,4.252,104,4.252,105,4.252,106,1.081,107,3.136,108,0.746,128,1.687,179,3.02,190,4.127,193,1.568,201,1.05,208,2.542,300,1.033,354,3.341,399,5.066,400,6.391,401,8.694,402,6.35,403,6.35,404,6.35,405,4.843,406,7.807,407,4.843,408,6.35,409,6.35,410,4.843,411,2.116,412,4.843,413,3.573,414,4.843,415,4.843,416,1.939,417,2.594,418,4.843,419,7.084,420,4.843,421,4.252,422,3.864,423,4.843,424,3.341,425,3.341,426,2.709,427,5.066,428,4.843,429,4.843]],["title/classes/AbstractTestPage.html",[0,0.015,430,3.166]],["body/classes/AbstractTestPage.html",[0,0.022,2,1.135,3,0.155,4,0.099,5,0.099,9,0.107,10,0.476,13,0.527,14,1.91,16,3.311,18,2.671,22,0.678,24,1.174,25,0.011,26,0.664,27,0.303,28,0.715,33,1.832,35,0.79,36,1.007,44,0.782,46,2.914,48,1.743,49,0.925,52,1.404,53,5.191,57,1.245,58,1.226,60,0.515,67,4.07,68,2.426,69,2.362,71,0.099,77,0.084,83,0.003,84,0.005,85,0.003,108,0.846,120,1.109,132,2.419,142,0.875,157,1.573,172,1.19,180,0.472,197,3.75,201,0.469,205,1.92,214,3.134,233,2.323,234,2.914,237,3.634,269,3.46,271,2.819,274,1.63,285,1.989,299,1.364,301,1.489,305,1.404,308,1.956,342,1.966,351,4.138,370,2.229,375,1.658,430,4.352,431,7.372,432,5.208,433,2.49,434,3.809,435,1.19,436,3.46,437,5.18,438,4.215,439,1.568,440,2.542,441,2.542,442,6.703,443,5.899,444,3.2,445,4.337,446,1.842,447,4.625,448,5.267,449,5.899,450,5.899,451,4.337,452,4.337,453,5.899,454,4.337,455,5.899,456,4.337,457,5.899,458,5.899,459,4.357,460,6.703,461,5.899,462,5.899,463,4.337,464,4.337,465,4.337,466,4.337,467,6.357,468,4.337,469,1.484,470,2.836,471,4.337,472,2.426,473,2.323,474,3.159,475,3.46,476,3.457,477,4.337,478,3.031,479,2.836,480,3.2,481,3.809,482,3.809,483,4.337,484,4.337,485,3.809,486,2.836,487,2.992,488,3.46,489,4.337,490,3.46,491,3.809,492,5.899,493,2.836,494,4.337,495,1.4,496,4.07,497,2.819,498,3.809,499,4.337,500,2.836,501,4.337,502,6.317,503,5.348,504,4.963,505,4.337,506,2.836,507,1.989,508,3.633,509,4.78,510,6.973,511,7.194,512,2.836,513,4.337,514,2.836,515,3.2,516,2.836,517,2.836,518,4.337,519,2.836,520,4.337,521,1.289,522,4.706,523,2.836,524,2.836,525,4.337,526,2.836,527,4.337,528,2.819,529,4.337,530,2.914,531,2.705,532,4.706,533,4.385,534,5.899,535,4.337,536,4.706,537,4.337,538,2.836,539,2.992,540,5.18,541,2.836,542,3.46,543,3.46,544,3.809,545,2.426,546,2.671,547,4.337,548,4.337,549,4.337,550,3.809,551,4.337,552,5.899,553,3.46,554,2.542,555,4.337,556,3.809,557,3.809,558,3.2,559,2.836,560,2.836,561,2.819,562,4.337,563,2.836,564,1.989,565,4.337,566,5.899,567,2.836,568,5.267,569,3.031,570,2.229,571,1.062,572,3.809,573,2.142,574,2.063,575,2.671,576,3.457,577,3.46,578,3.2,579,3.809,580,3.2,581,3.46,582,4.337,583,3.809,584,4.337,585,2.819,586,3.3,587,3.2,588,5.899,589,5.18,590,3.3,591,3.928,592,4.352,593,4.337,594,2.836,595,1.855,596,4.337,597,4.337,598,2.426,599,2.819,600,3.809,601,4.337,602,4.337,603,2.836,604,5.146,605,4.337,606,2.836,607,3.46,608,4.337,609,1.662,610,0.714,611,4.337,612,2.836,613,2.836,614,2.836,615,2.836,616,2.836,617,2.836,618,2.836,619,2.836,620,2.836,621,2.836,622,2.836,623,2.262,624,2.836,625,2.836,626,2.262,627,4.337,628,4.337,629,3.809,630,2.836,631,2.836,632,2.836,633,2.836,634,1.255,635,4.337,636,2.836,637,2.836,638,4.337,639,2.836,640,2.836,641,2.836,642,2.836,643,2.836,644,2.836,645,2.836,646,2.836,647,2.836,648,2.836,649,2.836,650,2.836,651,2.836]],["title/components/AccordionCommonComponent.html",[180,0.251,652,1.11]],["body/components/AccordionCommonComponent.html",[0,0.017,3,0.144,4,0.171,5,0.12,9,0.185,10,0.702,13,0.777,19,0.809,22,0.635,25,0.011,26,0.553,27,0.269,29,0.911,32,1.523,35,0.856,36,0.829,37,0.998,44,1.153,45,1.232,48,1.482,49,0.538,57,1.058,58,0.764,60,0.441,71,0.224,72,2.094,73,0.397,77,0.188,83,0.006,84,0.008,85,0.006,114,0.777,115,1.606,120,1.178,122,1.702,142,1.291,157,1.045,170,0.834,172,1.178,180,0.416,215,0.81,375,1.797,435,1.492,446,1.199,469,1.232,495,1.302,571,1.199,610,1.609,652,1.953,653,1.302,654,1.338,655,1.415,656,4.299,657,7.122,658,1.104,659,1.497,660,6.395,661,1.327,662,6.395,663,1.327,664,6.395,665,7.834,666,7.122,667,4.825,668,4.896,669,4.896,670,4.896,671,4.896,672,4.412,673,6.395,674,4.896,675,2.418,676,2.328,677,1.302,678,1.654,679,2.182,680,1.415,681,1.415,682,1.166,683,1.415,684,1.232,685,1.415,686,1.232,687,1.415,688,1.266,689,1.415,690,1.266,691,1.415,692,1.266,693,1.415,694,1.266,695,1.338,696,1.415,697,1.232,698,1.848,699,1.266,700,1.338,701,1.415,702,1.266,703,1.415,704,1.266,705,1.415,706,1.232,707,1.415,708,1.415,709,1.232,710,1.415,711,1.266,712,1.415,713,1.232,714,1.415,715,1.266,716,2.058,717,1.266,718,1.199,719,1.199,720,1.848,721,1.266,722,1.302,723,1.415,724,1.232,725,1.415,726,1.266,727,1.415,728,1.266,729,1.415,730,1.199,731,1.415,732,1.266,733,1.415,734,1.302,735,1.376,736,1.415,737,1.232,738,1.166,739,1.415,740,1.232,741,1.415,742,1.199,743,1.415,744,1.232,745,1.338,746,1.266,747,1.415,748,1.302,749,1.415,750,1.266,751,1.415,752,1.232,753,1.415,754,1.266,755,1.338,756,1.266,757,1.232,758,1.376,759,1.074,760,1.232,761,1.415,762,1.232,763,1.415,764,1.232,765,1.415,766,1.232,767,1.415,768,1.232,769,1.415,770,1.232,771,1.415,772,1.232,773,1.415,774,1.232,775,1.338,776,1.415]],["title/interfaces/AddrLabelList.html",[777,0.539,778,2.96]],["body/interfaces/AddrLabelList.html",[0,0.011,3,0.09,4,0.107,5,0.057,7,1.035,9,0.116,10,0.504,11,1.081,19,0.347,25,0.011,26,0.237,27,0.271,28,0.765,29,1.158,33,1.255,35,0.615,36,1.035,37,1.257,39,1.51,52,0.99,58,0.86,60,0.514,65,1.224,71,0.25,73,0.248,74,2.138,75,0.617,77,0.181,83,0.004,84,0.006,85,0.004,87,0.67,106,1.044,108,0.902,109,1.791,114,0.371,115,1.035,116,1.725,118,1.081,119,1.114,122,0.689,128,1.753,130,1.185,139,1.019,144,1.114,146,1.53,147,1.114,158,0.962,159,1.454,161,1.353,172,1.344,180,0.358,181,3.167,182,2.459,187,2.105,189,1.081,191,1.049,192,3.167,194,3.584,197,1.71,199,1.637,201,1.141,205,1.353,208,2.63,214,1.78,229,1.987,233,1.637,234,1.51,238,0.506,270,1.224,274,1.149,299,1.734,300,1.472,301,1.049,329,1.454,333,1.571,338,2.28,342,1.838,351,1.454,362,1.571,363,1.364,376,0.962,377,1.404,411,2.385,416,2.207,435,0.506,439,0.813,459,1.987,473,1.637,508,2.827,521,1.364,531,1.401,564,1.401,569,1.571,573,4.116,574,3.795,585,3.584,586,1.71,591,1.791,595,1.307,659,0.506,661,0.634,663,0.634,682,1.093,719,0.748,722,1.221,738,1.093,777,0.692,778,4.228,779,1.019,780,1.576,781,1.576,782,2.255,783,4.847,784,5.241,785,5.241,786,4.108,787,4.895,788,1.187,789,1.507,790,2.568,791,2.358,792,1.963,793,2.268,794,1.149,795,2.568,796,2.255,797,4.234,798,2.255,799,3.584,800,3.245,801,2.109,802,3.167,803,1.987,804,3.775,805,3.395,806,2.984,807,2.255,808,3.984,809,4.532,810,2.109,811,2.255,812,2.438,813,2.438,814,2.438,815,1.51,816,1.791,817,1.882,818,1.637,819,1.401,820,2.568,821,3.662,822,2.69,823,2.109,824,2.438,825,2.438,826,2.255,827,2.109,828,2.438,829,2.547,830,5.709,831,2.255,832,2.109,833,2.255,834,2.255,835,2.69,836,2.438,837,2.255,838,2.438,839,4.043,840,2.255,841,2.438,842,2.255,843,2.109,844,3.662,845,2.438,846,2.438,847,3.662,848,2.827,849,2.438,850,2.438,851,2.438,852,2.438,853,2.438,854,2.358,855,2.622,856,1.791,857,3.012,858,2.438,859,2.438,860,2.438,861,4.228,862,1.791,863,0.883,864,2.255,865,2.438,866,2.438,867,3.662,868,6.12,869,3.662,870,2.69,871,3.662,872,6.008,873,4.398,874,1.571,875,2.255,876,1.987,877,2.438,878,2.438,879,2.438,880,2.438,881,2.438,882,2.438,883,4.889,884,1.307,885,2.438,886,2.438,887,3.662,888,2.827,889,1.791,890,3.662,891,5.241,892,5.504,893,5.241,894,2.438,895,2.438,896,3.662,897,2.438,898,3.662,899,2.69,900,2.438,901,2.255,902,2.438,903,2.438,904,1.71,905,2.438,906,2.438,907,3.584,908,2.438,909,2.438,910,2.438,911,3.387,912,2.984,913,3.662,914,3.662,915,3.662,916,3.662,917,2.438,918,1.307,919,2.438,920,2.438,921,3.803,922,2.109,923,2.438,924,1.224,925,2.438,926,2.438,927,2.438,928,2.255,929,1.791,930,2.438,931,2.438,932,2.438,933,2.109,934,2.438,935,4.889,936,2.438,937,2.438,938,2.438,939,2.438,940,2.438,941,4.068,942,2.109,943,2.438,944,4.228,945,3.662,946,3.167,947,3.662,948,4.398,949,2.109,950,2.438,951,2.438,952,2.109,953,1.987,954,1.791,955,1.882,956,1.51,957,2.438,958,2.438,959,2.438,960,3.387,961,2.438,962,2.438,963,2.255,964,2.438,965,2.255,966,2.183,967,2.438,968,2.438,969,2.255,970,2.438,971,1.882,972,2.438,973,2.255,974,2.255,975,2.438,976,2.438,977,2.438,978,2.438,979,2.438,980,2.438,981,2.438,982,2.438,983,2.438,984,2.438,985,2.438,986,2.438,987,2.438,988,2.438,989,3.662,990,2.438,991,2.438]],["title/classes/Address.html",[0,0.015,797,2.205]],["body/classes/Address.html",[0,0.024,2,1.816,3,0.134,4,0.159,5,0.085,9,0.171,10,0.804,13,0.739,22,0.702,24,0.948,25,0.011,26,0.472,27,0.321,28,0.747,29,1.144,33,1.662,35,0.607,36,0.588,37,0.707,49,0.804,58,0.948,60,0.511,77,0.134,83,0.005,84,0.007,85,0.005,91,4.194,108,0.861,120,1.469,156,2.69,157,0.967,158,1.427,176,2.887,179,2.157,182,3.256,185,2.357,201,0.75,238,0.75,253,3.003,299,2.305,300,0.967,312,5.221,342,1.512,355,1.557,434,5.338,439,1.206,472,3.401,475,4.85,573,3.387,574,3.261,599,3.951,738,1.633,786,3.672,797,4.431,820,4.494,829,2.659,835,4.845,875,5.059,918,2.6,924,2.933,966,2.891,971,4.223,992,3.982,993,3.346,994,2.793,995,7.053,996,6.857,997,6.021,998,6.905,999,5.47,1000,6.857,1001,5.054,1002,7.864,1003,6.857,1004,4.535,1005,4.535,1006,7.326,1007,6.433,1008,4.535,1009,4.535,1010,4.535,1011,4.535,1012,4.535,1013,4.535,1014,6.079,1015,6.513,1016,6.433,1017,3.562,1018,4.85,1019,4.85,1020,4.535,1021,4.535,1022,5.338,1023,4.535,1024,4.535,1025,6.079,1026,6.079,1027,4.535,1028,5.338,1029,5.338,1030,4.194,1031,6.079,1032,6.079,1033,4.85,1034,6.079,1035,6.079,1036,5.338,1037,6.079,1038,6.079,1039,6.079,1040,3.951,1041,4.535,1042,4.535,1043,4.535,1044,4.535,1045,4.535,1046,4.535,1047,3.744,1048,4.535,1049,3.982,1050,4.535,1051,7.64,1052,6.021,1053,2.793,1054,5.338,1055,4.85,1056,6.857,1057,4.535,1058,4.535,1059,4.535,1060,4.535,1061,4.535,1062,4.535,1063,4.535,1064,4.535,1065,4.535,1066,4.535,1067,4.535,1068,4.535,1069,4.535]],["title/classes/Base.html",[0,0.015,7,0.967]],["body/classes/Base.html",[0,0.03,2,2.556,3,0.188,4,0.223,5,0.12,7,1.87,9,0.241,10,0.828,19,0.912,22,0.611,25,0.011,27,0.241,35,0.855,36,0.828,60,0.441,71,0.223,77,0.188,83,0.008,84,0.009,85,0.008,120,1.328,121,3.018,136,2.442,138,2.75,139,2.514,140,2.668,141,2.925,142,1.675,157,1.362,312,4.904,320,4.04,321,3.281,994,4.646,1070,5.606,1071,7.544,1072,4.22,1073,4.646,1074,3.726,1075,4.421,1076,7.544]],["title/components/ButtonComponent.html",[180,0.251,684,1.08]],["body/components/ButtonComponent.html",[0,0.021,3,0.126,4,0.15,5,0.11,9,0.162,10,0.641,11,2.352,13,0.71,19,0.756,22,0.653,24,0.667,25,0.011,26,0.555,27,0.283,28,0.406,29,0.832,32,1.391,35,1.093,36,0.863,37,0.911,44,1.053,45,1.075,48,2.007,49,0.641,57,0.966,58,0.911,60,0.341,66,3.127,71,0.204,72,1.827,73,0.346,74,2.58,75,0.862,77,0.172,83,0.005,84,0.007,85,0.005,89,1.767,114,0.71,115,1.5,122,1.612,132,2.225,142,1.179,157,0.912,170,0.995,172,1.183,176,2.065,180,0.462,215,0.707,238,0.707,285,1.959,305,2.315,363,1.736,375,1.641,377,1.785,435,1.482,446,1.046,469,1.075,495,1.136,558,3.153,571,1.046,595,2.497,598,3.267,610,1.469,626,3.409,652,1.105,653,1.136,654,1.168,655,1.235,658,0.963,659,1.489,661,1.212,663,1.212,676,2.777,677,1.136,678,1.51,679,2.066,680,1.235,681,1.235,682,1.018,683,1.235,684,1.799,685,1.235,686,1.075,687,1.235,688,1.105,689,1.235,690,1.105,691,1.235,692,1.105,693,1.235,694,1.105,695,1.168,696,1.235,697,1.075,698,1.687,699,1.105,700,1.168,701,1.235,702,1.105,703,1.235,704,1.105,705,1.235,706,1.075,707,1.235,708,1.235,709,1.075,710,1.235,711,1.105,712,1.235,713,1.075,714,1.235,715,1.105,716,1.922,717,1.105,718,1.046,719,1.046,720,1.687,721,1.105,722,1.136,723,1.235,724,1.075,725,1.235,726,1.105,727,1.235,728,1.105,729,1.235,730,1.046,731,1.235,732,1.105,733,1.235,734,1.136,735,1.201,736,1.235,737,1.075,738,1.018,739,1.235,740,1.075,741,1.235,742,1.046,743,1.235,744,1.075,745,1.168,746,1.105,747,1.235,748,1.136,749,1.235,750,1.105,751,1.235,752,1.075,753,1.235,754,1.105,755,1.168,756,1.105,757,1.075,758,1.201,759,0.937,760,1.075,761,1.235,762,1.075,763,1.235,764,1.075,765,1.235,766,1.075,767,1.235,768,1.075,769,1.235,770,1.075,771,1.235,772,1.075,773,1.235,774,1.075,775,1.168,776,1.235,788,1.51,789,1.954,791,2.845,792,2.845,793,2.111,810,4.028,819,2.677,1077,3.752,1078,4.589,1079,4.308,1080,5.839,1081,2.884,1082,4.308,1083,4.028,1084,5.839,1085,5.839,1086,5.839,1087,5.839,1088,5.839,1089,5.127,1090,4.028,1091,4,1092,5.127,1093,3.422,1094,5.127,1095,4.658,1096,5.839,1097,5.127,1098,5.127,1099,5.127,1100,6.652,1101,2.195,1102,5.307,1103,5.839,1104,7.149,1105,4.658,1106,4.273,1107,4.273,1108,4.273,1109,4.273,1110,4.273,1111,5.127,1112,4.273,1113,1.606,1114,4.589,1115,5.839,1116,6.785,1117,3.752]],["title/components/ButtonGroupComponent.html",[180,0.251,686,1.08]],["body/components/ButtonGroupComponent.html",[0,0.014,3,0.113,4,0.135,5,0.102,9,0.145,10,0.596,11,2.225,13,0.66,19,0.715,22,0.687,24,1.066,25,0.011,26,0.597,27,0.312,28,0.649,29,1.118,32,1.293,35,1.068,36,1.035,37,1.066,42,1.864,44,0.979,45,0.968,48,1.819,49,0.791,57,0.898,58,1.224,60,0.399,71,0.19,72,1.646,73,0.312,74,2.44,75,0.777,77,0.16,83,0.005,84,0.007,85,0.005,89,1.592,106,1.164,114,0.66,115,0.868,116,2.365,118,2.225,119,2.293,120,1.237,123,2.403,124,2.403,130,2.106,132,2.142,142,1.096,144,1.979,146,2.278,147,1.979,157,0.821,164,2.322,170,0.656,172,1.272,180,0.368,187,1.765,189,1.361,191,2.16,205,2.403,215,0.637,238,0.637,299,1.708,342,2.097,363,2.031,373,1.92,375,1.526,376,1.708,377,2.089,398,3.687,435,1.474,439,1.444,446,0.942,469,0.968,487,3.746,495,1.023,571,0.942,610,1.366,652,0.995,653,1.023,654,1.052,655,1.112,658,0.868,659,1.482,661,1.127,663,1.127,677,1.023,678,1.404,679,1.975,680,1.112,681,1.112,682,0.917,683,1.112,684,0.968,685,1.112,686,1.975,687,1.112,688,0.995,689,1.112,690,0.995,691,1.112,692,0.995,693,1.112,694,0.995,695,1.052,696,1.112,697,0.968,698,1.569,699,0.995,700,1.052,701,1.112,702,0.995,703,1.112,704,0.995,705,1.112,706,0.968,707,1.112,708,1.112,709,0.968,710,1.112,711,0.995,712,1.112,713,0.968,714,1.112,715,0.995,716,1.818,717,0.995,718,0.942,719,0.942,720,1.569,721,0.995,722,1.023,723,1.112,724,0.968,725,1.112,726,0.995,727,1.112,728,0.995,729,1.112,730,0.942,731,1.112,732,0.995,733,1.112,734,1.023,735,1.082,736,1.112,737,0.968,738,0.917,739,1.112,740,0.968,741,1.112,742,1.54,743,1.112,744,0.968,745,1.052,746,0.995,747,1.112,748,1.023,749,1.112,750,0.995,751,1.112,752,0.968,753,1.112,754,0.995,755,1.052,756,0.995,757,0.968,758,1.082,759,0.844,760,0.968,761,1.112,762,0.968,763,1.112,764,0.968,765,1.112,766,0.968,767,1.112,768,0.968,769,1.112,770,0.968,771,1.112,772,0.968,773,1.112,774,0.968,775,1.052,776,1.112,788,1.404,789,1.868,791,3.082,792,2.691,793,3.108,819,2.49,829,1.493,1040,4.442,1079,4.006,1101,2.041,1114,4.341,1118,7.48,1119,6.796,1120,3.38,1121,4.768,1122,4.768,1123,4.332,1124,4.768,1125,4.332,1126,2.49,1127,4.332,1128,5.43,1129,5.43,1130,6.292,1131,5.43,1132,7.207,1133,4.341,1134,5.02,1135,5.43,1136,3.849,1137,3.849,1138,3.849,1139,3.849,1140,3.849,1141,3.849,1142,3.849,1143,3.849,1144,3.849,1145,3.849,1146,5.43,1147,3.849,1148,3.849,1149,3.849,1150,5.43,1151,3.849,1152,3.849,1153,3.071,1154,3.849,1155,3.38,1156,5.43]],["title/injectables/CaptchaDataService.html",[356,1.35,1157,2.789]],["body/injectables/CaptchaDataService.html",[0,0.023,3,0.152,4,0.181,5,0.097,9,0.195,13,0.804,19,0.586,22,0.624,24,1.201,25,0.011,26,0.598,27,0.291,28,0.732,49,0.802,60,0.528,70,2.453,71,0.27,73,0.418,77,0.195,83,0.006,84,0.008,85,0.006,93,5.298,108,0.958,120,1.402,128,1.229,201,0.853,244,4.279,250,5.038,256,5.018,275,4.494,282,3.353,315,3.023,316,2.206,356,2.297,358,2.651,1157,4.3,1158,6.353,1159,4.115,1160,6.615,1161,6.615,1162,6.615,1163,5.159,1164,5.159,1165,6.412,1166,6.993,1167,5.159,1168,6.501,1169,6.412,1170,7.028,1171,5.159,1172,6.412,1173,7.369,1174,7.155,1175,5.159,1176,4.53,1177,4.309,1178,3.806,1179,6.412,1180,3.177,1181,3.806,1182,5.038,1183,4.53,1184,3.353,1185,6.412,1186,6.412,1187,5.809,1188,4.53,1189,5.809,1190,6.412]],["title/modules/CaptchaModule.html",[1191,2.643,1192,2.789]],["body/modules/CaptchaModule.html",[0,0.02,3,0.167,4,0.198,5,0.106,13,0.688,22,0.459,25,0.011,49,0.621,71,0.301,73,0.459,75,1.142,77,0.167,83,0.007,84,0.008,85,0.007,108,0.665,153,2.691,180,0.331,245,2.999,300,1.207,305,1.832,315,3.316,320,3.031,362,4.207,375,1.59,376,2.625,435,1.16,439,1.864,440,4.109,543,5.594,609,3.316,676,2.691,677,1.505,688,2.265,780,1.943,781,1.943,811,5.174,924,2.266,999,5.594,1074,2.795,1157,5.498,1168,4.515,1170,4.515,1182,5.257,1191,4.693,1192,5.734,1193,3.485,1194,5.649,1195,6.079,1196,4.969,1197,4.969,1198,4.969,1199,4.969,1200,5.594,1201,4.175,1202,5.659,1203,7.62,1204,5.659,1205,7.62,1206,6.158,1207,5.257,1208,5.659,1209,4.969,1210,5.659,1211,4.969,1212,5.659,1213,3.904,1214,5.659,1215,4.969,1216,6.158,1217,5.659,1218,4.969,1219,6.158,1220,4.515]],["title/injectables/CheckCompleteBaseService.html",[356,1.35,1221,3.166]],["body/injectables/CheckCompleteBaseService.html",[0,0.026,3,0.117,4,0.139,5,0.075,9,0.276,10,0.611,13,0.676,14,1.289,17,2.372,19,0.632,20,2.227,21,3.734,22,0.687,24,1.138,25,0.011,26,0.567,27,0.299,28,0.693,29,1.207,33,1.088,35,0.858,36,0.9,37,1.082,49,0.912,57,1.331,58,1.179,60,0.495,65,2.922,69,3.261,71,0.224,73,0.323,76,1.703,77,0.164,83,0.005,84,0.007,85,0.005,106,1.181,108,0.931,114,0.484,120,1.446,128,1.801,157,0.849,176,1.408,196,3.425,201,1.148,208,2.226,245,2.378,253,2.747,299,1.749,300,1.186,305,1.8,355,2.2,356,1.749,358,2.046,360,3.881,361,2.978,373,2.266,375,1.119,379,4.786,384,3.615,385,2.747,389,3.947,390,5.534,391,4.728,392,5.534,395,3.496,439,1.478,472,4.805,473,2.978,507,3.181,521,1.653,554,3.755,598,3.111,634,1.762,777,0.698,899,4.065,924,2.226,955,3.425,956,3.426,994,3.425,1001,5.216,1081,2.747,1221,4.103,1222,6.795,1223,3.176,1224,4.883,1225,4.103,1226,3.615,1227,5.627,1228,5.112,1229,5.627,1230,5.627,1231,6.091,1232,4.786,1233,4.509,1234,5.112,1235,5.112,1236,5.561,1237,3.982,1238,3.982,1239,3.982,1240,3.982,1241,3.755,1242,2.2,1243,3.615,1244,3.982,1245,4.883,1246,4.065,1247,3.982,1248,4.883,1249,3.836,1250,5.578,1251,3.982,1252,3.982,1253,4.883,1254,3.982,1255,4.883,1256,4.883,1257,3.836,1258,3.982,1259,4.883,1260,4.883,1261,3.982,1262,4.728,1263,3.982,1264,3.982,1265,3.982,1266,3.982,1267,3.982,1268,4.728,1269,3.176,1270,3.496,1271,3.496,1272,2.938,1273,3.496,1274,3.176,1275,3.496,1276,3.496,1277,2.046,1278,2.046,1279,4.883,1280,4.883,1281,5.627,1282,5.384,1283,5.627,1284,4.103,1285,3.836,1286,4.436,1287,3.836,1288,4.436,1289,3.496,1290,3.496,1291,3.496,1292,3.496,1293,2.747,1294,3.496,1295,3.496,1296,3.496,1297,3.496,1298,2.938,1299,3.496,1300,3.496,1301,3.176,1302,3.496,1303,3.496]],["title/components/CheckboxComponent.html",[180,0.251,690,1.11]],["body/components/CheckboxComponent.html",[0,0.012,3,0.104,4,0.124,5,0.096,7,0.796,9,0.133,10,0.561,11,1.806,13,0.621,14,2.128,17,2.009,19,0.58,22,0.706,24,1.197,25,0.011,26,0.625,27,0.324,28,0.754,29,1.131,32,1.216,35,1.088,36,1.079,37,1.088,42,1.938,44,1.185,45,0.888,48,1.183,49,0.892,57,0.845,58,1.268,60,0.425,71,0.23,72,1.51,73,0.286,75,0.713,77,0.15,83,0.004,84,0.006,85,0.004,87,1.12,89,2.112,94,2.944,112,4.004,114,0.621,115,1.352,116,2.254,117,3.734,118,1.806,119,1.861,120,1.153,121,1.919,122,1.689,123,2.26,124,2.26,125,2.857,126,2.857,127,3.212,128,1.216,129,3.515,130,2.548,131,3.205,132,2.227,136,1.143,137,1.414,138,1.287,139,1.177,140,1.249,141,1.369,142,1.211,144,1.287,146,2.19,147,1.287,149,2.069,150,3.281,151,2.428,153,1.679,154,2.811,155,2.857,156,1.563,157,1.089,158,1.111,159,1.679,161,1.563,164,2.565,170,0.601,171,1.814,172,1.202,180,0.407,191,1.212,193,1.653,215,0.584,238,0.584,329,1.679,342,2.324,375,1.435,411,1.177,426,1.975,435,1.466,439,1.854,444,3.767,446,0.864,469,0.888,487,5.547,495,0.939,531,1.619,571,0.864,610,1.285,652,0.913,653,0.939,654,0.965,655,1.02,658,0.796,659,1.475,661,1.06,663,1.06,677,0.939,678,1.321,679,1.899,680,1.02,681,1.02,682,0.841,683,1.02,684,0.888,685,1.02,686,0.888,687,1.02,688,0.913,689,1.02,690,1.7,691,1.02,692,0.913,693,1.02,694,0.913,695,0.965,696,1.02,697,0.888,698,1.476,699,0.913,700,0.965,701,1.02,702,0.913,703,1.02,704,0.913,705,1.02,706,0.888,707,1.02,708,1.02,709,0.888,710,1.02,711,0.913,712,1.02,713,0.888,714,1.02,715,0.913,716,1.733,717,0.913,718,0.864,719,0.864,720,1.476,721,0.913,722,0.939,723,1.02,724,0.888,725,1.02,726,0.913,727,1.02,728,0.913,729,1.02,730,0.864,731,1.02,732,0.913,733,1.02,734,0.939,735,0.992,736,1.02,737,0.888,738,0.841,739,1.02,740,0.888,741,1.02,742,0.864,743,1.02,744,0.888,745,0.965,746,0.913,747,1.02,748,0.939,749,1.02,750,0.913,751,1.02,752,0.888,753,1.02,754,0.913,755,0.965,756,0.913,757,0.888,758,0.992,759,0.774,760,0.888,761,1.02,762,0.888,763,1.02,764,0.888,765,1.02,766,0.888,767,1.02,768,0.888,769,1.02,770,0.888,771,1.02,772,0.888,773,1.02,774,0.888,775,0.965,776,1.02,788,1.321,789,1.796,848,3.145,863,1.02,1040,4.272,1101,1.919,1113,1.919,1114,4.138,1134,4.785,1155,4.484,1304,3.101,1305,5.106,1306,5.106,1307,3.316,1308,5.998,1309,5.106,1310,1.891,1311,3.531,1312,3.531,1313,5.106,1314,3.767,1315,3.319,1316,3.531,1317,3.531,1318,2.175,1319,2.175,1320,2.175,1321,3.531,1322,3.531,1323,3.531,1324,5.106,1325,3.531,1326,3.531,1327,2.175,1328,2.175,1329,2.175,1330,2.175,1331,2.175,1332,2.175,1333,2.175,1334,2.175,1335,3.082,1336,3.531,1337,5.106,1338,3.531,1339,1.891,1340,3.531,1341,3.531,1342,2.175,1343,2.175,1344,2.175,1345,1.975,1346,1.891,1347,3.531,1348,2.436,1349,3.531,1350,3.531,1351,1.679,1352,1.975,1353,3.531,1354,3.531,1355,3.531,1356,3.145]],["title/components/CityComponent.html",[180,0.251,692,1.11]],["body/components/CityComponent.html",[0,0.011,3,0.094,4,0.112,5,0.089,7,0.72,9,0.121,10,0.521,11,1.677,13,0.576,14,2.028,17,1.915,19,0.539,22,0.705,24,1.21,25,0.011,26,0.636,27,0.324,28,0.757,29,0.806,32,1.13,35,1.053,36,1.117,37,0.498,42,1.62,44,1.021,45,0.804,48,1.099,49,0.884,57,0.785,58,1.256,60,0.496,71,0.219,73,0.259,75,0.645,77,0.094,83,0.004,84,0.006,85,0.004,87,1.04,89,1.321,94,2.895,108,0.375,112,3.946,114,0.576,115,1.276,116,2.127,117,3.584,118,1.677,119,1.729,120,1.107,121,1.783,122,1.637,123,2.099,124,2.099,125,2.654,126,2.654,127,3.031,128,1.13,129,3.316,130,2.595,131,3.105,132,2.158,136,1.034,137,1.279,138,1.164,139,1.064,140,1.129,141,1.238,142,1.142,144,1.164,146,2.088,147,1.164,149,1.871,150,3.19,151,2.256,153,1.519,154,2.679,155,2.654,156,1.413,157,0.681,158,1.005,159,1.519,161,1.413,164,2.029,170,0.808,171,1.641,172,1.16,180,0.331,189,1.129,191,1.096,193,1.034,215,0.528,238,0.785,253,2.343,300,0.681,303,2.029,329,1.519,435,1.456,446,0.782,469,0.804,495,0.849,571,0.782,590,3.166,610,1.194,652,0.826,653,0.849,654,0.873,655,0.923,658,0.72,659,1.467,661,0.984,663,0.984,677,0.849,678,1.227,679,1.81,680,0.923,681,0.923,682,0.761,683,0.923,684,0.804,685,0.923,686,0.804,687,0.923,688,0.826,689,0.923,690,0.826,691,0.923,692,1.62,693,0.923,694,0.826,695,0.873,696,0.923,697,0.804,698,1.371,699,0.826,700,0.873,701,0.923,702,0.826,703,0.923,704,0.826,705,0.923,706,0.804,707,0.923,708,0.923,709,0.804,710,0.923,711,0.826,712,0.923,713,0.804,714,0.923,715,0.826,716,1.635,717,0.826,718,0.782,719,0.782,720,1.371,721,0.826,722,0.849,723,0.923,724,0.804,725,0.923,726,0.826,727,0.923,728,0.826,729,0.923,730,0.782,731,0.923,732,0.826,733,0.923,734,0.849,735,0.897,736,0.923,737,0.804,738,0.761,739,0.923,740,0.804,741,0.923,742,0.782,743,0.923,744,0.804,745,0.873,746,0.826,747,0.923,748,0.849,749,0.923,750,0.826,751,0.923,752,0.804,753,0.923,754,0.826,755,0.873,756,0.826,757,0.804,758,0.897,759,0.7,760,0.804,761,0.923,762,0.804,763,0.923,764,0.804,765,0.923,766,0.804,767,0.923,768,0.804,769,0.923,770,0.804,771,0.923,772,0.804,773,0.923,774,0.804,775,0.873,776,0.923,780,1.628,781,1.628,786,4.081,788,1.464,789,1.985,829,2.429,863,0.923,884,2.029,1052,5.5,1093,2.78,1101,1.783,1113,2.354,1307,3.183,1310,1.71,1318,1.967,1319,1.967,1320,1.967,1327,1.967,1328,1.967,1329,1.967,1330,1.967,1331,1.967,1332,1.967,1333,1.967,1334,1.967,1335,3.439,1339,1.71,1342,1.967,1343,1.967,1344,1.967,1345,1.787,1346,1.71,1351,1.519,1352,1.787,1356,2.921,1357,2.804,1358,4.743,1359,4.743,1360,3.166,1361,3.316,1362,3.166,1363,3.485,1364,3.485,1365,3.031,1366,3.193,1367,3.193,1368,4.743,1369,2.54,1370,3.193,1371,3.083,1372,3.193,1373,3.193,1374,4.743,1375,3.193,1376,3.193,1377,3.193,1378,2.076,1379,3.193,1380,2.076,1381,3.193,1382,3.193,1383,2.437,1384,3.083,1385,2.78,1386,3.784,1387,3.083,1388,2.772,1389,3.272,1390,3.272,1391,3.272,1392,3.193,1393,3.193,1394,3.193,1395,1.967,1396,3.193,1397,1.967,1398,1.321,1399,1.962,1400,1.321,1401,1.962,1402,1.962,1403,1.962,1404,1.321,1405,1.321,1406,1.962,1407,1.962,1408,1.321,1409,1.321,1410,1.321,1411,1.321,1412,1.321,1413,1.962,1414,1.899,1415,1.321,1416,1.962,1417,1.962,1418,1.321,1419,1.962,1420,1.321,1421,1.321,1422,1.321,1423,1.321,1424,2.591,1425,1.321,1426,1.321,1427,1.321,1428,1.321,1429,1.321,1430,1.321,1431,1.321,1432,1.321,1433,1.321,1434,1.321,1435,1.321,1436,1.321,1437,1.321,1438,1.321,1439,1.321,1440,1.321,1441,1.962,1442,1.321,1443,1.321,1444,1.321,1445,1.321,1446,1.321,1447,1.321,1448,1.321,1449,1.321,1450,1.321,1451,1.321,1452,1.321,1453,1.321,1454,1.321,1455,1.962,1456,1.321,1457,1.321,1458,1.321,1459,1.321,1460,1.321,1461,1.096,1462,1.321,1463,1.321,1464,1.321,1465,1.321,1466,1.321,1467,1.321,1468,1.321,1469,1.321,1470,1.871,1471,2.076,1472,3.784]],["title/interfaces/CommonAttachmentJson.html",[777,0.539,1473,2.643]],["body/interfaces/CommonAttachmentJson.html",[0,0.026,3,0.154,4,0.183,5,0.146,9,0.198,10,0.733,17,1.599,25,0.011,26,0.406,27,0.302,28,0.497,49,0.574,52,1.693,54,3.064,60,0.506,71,0.183,77,0.241,83,0.006,84,0.008,85,0.006,108,0.784,114,0.635,120,0.865,136,1.693,170,1.252,178,2.397,185,2.028,199,2.8,214,2.028,218,2.925,236,2.314,238,0.865,242,2.236,267,4.767,295,3.495,300,1.423,301,1.795,305,1.693,320,3.936,321,2.687,342,1.743,355,2.29,373,1.849,438,3.064,478,2.687,507,2.397,521,2.622,545,2.925,777,0.838,779,1.743,822,3.064,1242,1.795,1461,1.795,1473,4.526,1474,3.22,1475,5.517,1476,5.734,1477,5.517,1478,3.399,1479,3.733,1480,4.792,1481,3.064,1482,3.22,1483,4.306,1484,3.399,1485,3.399,1486,3.399,1487,3.399,1488,3.22,1489,3.399,1490,3.399,1491,3.399,1492,3.064,1493,3.607,1494,3.607,1495,3.607,1496,3.607,1497,3.607,1498,3.22,1499,3.22,1500,3.607,1501,3.399,1502,3.607,1503,3.607,1504,3.399,1505,3.399,1506,3.399,1507,5.198,1508,4.777,1509,3.22,1510,3.607,1511,4.603,1512,3.607,1513,2.8,1514,3.607,1515,3.399,1516,3.607,1517,4.603,1518,3.399,1519,3.399,1520,3.607,1521,3.607,1522,3.607,1523,3.399,1524,2.925,1525,3.607,1526,3.607,1527,3.607,1528,3.607,1529,3.607,1530,3.607,1531,3.399,1532,3.607,1533,2.487,1534,3.399,1535,3.607,1536,3.607,1537,4.536,1538,4.603,1539,4.603,1540,4.603,1541,3.733,1542,3.607,1543,4.603,1544,4.603,1545,3.607,1546,4.603,1547,4.337]],["title/classes/CommonImage.html",[0,0.015,295,2.041]],["body/classes/CommonImage.html",[0,0.025,2,1.858,3,0.137,4,0.162,5,0.139,9,0.175,10,0.678,13,0.75,17,1.419,19,0.527,22,0.701,24,0.724,25,0.011,26,0.574,27,0.33,28,0.731,35,0.621,36,0.602,49,0.762,52,1.999,54,3.617,60,0.512,70,2.207,71,0.162,77,0.233,83,0.006,84,0.007,85,0.006,108,0.726,114,0.564,120,0.768,136,1.502,157,1.317,170,1.311,178,2.128,185,1.8,199,3.306,214,1.8,218,2.596,236,2.054,238,0.768,242,2.64,267,4.272,295,3.516,300,1.577,301,1.593,305,1.999,320,4.123,321,2.384,342,2.058,355,2.381,373,2.183,438,2.719,478,3.172,507,2.128,521,2.604,545,3.453,777,0.775,822,2.719,1242,1.593,1461,2.381,1473,4.272,1474,2.858,1475,4.259,1476,5.574,1477,4.259,1478,3.016,1479,3.453,1480,4.957,1481,2.719,1482,2.858,1483,4.333,1484,3.016,1485,3.016,1486,3.016,1487,3.016,1488,2.858,1489,3.016,1490,3.016,1491,3.016,1492,2.719,1493,3.201,1494,3.201,1495,3.201,1496,3.201,1497,3.201,1498,2.858,1499,2.858,1500,3.201,1501,3.016,1502,3.201,1503,3.201,1504,3.016,1505,3.016,1506,4.013,1507,5.4,1508,5.146,1509,3.802,1510,4.259,1511,4.259,1512,3.201,1513,3.306,1514,4.259,1515,4.013,1516,4.786,1517,5.311,1518,4.013,1519,4.013,1520,4.259,1521,4.259,1522,4.259,1523,3.016,1524,3.881,1525,4.786,1526,4.786,1527,4.786,1528,4.786,1529,3.201,1530,3.201,1531,4.013,1532,4.259,1533,2.936,1534,4.806,1535,3.201,1536,3.201,1537,4.333,1538,4.259,1539,4.259,1540,4.259,1541,3.453,1542,3.201,1543,4.259,1544,4.259,1545,3.201,1546,4.259,1547,4.013,1548,6.173,1549,4.641,1550,4.641,1551,4.641,1552,4.641,1553,4.641,1554,4.641,1555,4.641,1556,4.641,1557,4.641,1558,4.641,1559,4.641,1560,4.641,1561,4.641]],["title/classes/CommonImageProcessingError.html",[0,0.015,1492,2.514]],["body/classes/CommonImageProcessingError.html",[0,0.026,2,2.015,3,0.148,4,0.176,5,0.149,9,0.19,10,0.715,17,1.539,19,0.572,22,0.656,24,0.785,25,0.011,26,0.506,27,0.316,28,0.808,49,0.553,52,1.629,54,2.949,60,0.506,70,2.393,71,0.176,77,0.239,83,0.006,84,0.008,85,0.006,108,0.765,114,0.612,120,1.308,136,1.629,170,1.229,178,2.308,185,1.952,199,2.695,214,1.952,218,2.816,236,2.227,238,0.833,242,2.152,267,4.01,295,3.85,300,1.389,301,1.728,305,1.629,320,3.865,321,2.586,342,1.677,355,2.235,373,1.78,438,2.949,478,2.586,507,2.308,521,2.604,545,2.816,777,0.818,822,2.949,1242,1.728,1461,1.728,1473,4.01,1474,3.099,1475,4.492,1476,5.265,1477,4.492,1478,3.271,1479,3.642,1480,4.744,1481,2.949,1482,3.099,1483,4.744,1484,3.271,1485,3.271,1486,3.271,1487,3.271,1488,3.099,1489,3.271,1490,3.271,1491,3.271,1492,3.815,1493,4.979,1494,4.979,1495,3.472,1496,3.472,1497,3.472,1498,3.099,1499,3.099,1500,3.472,1501,3.271,1502,3.472,1503,3.472,1504,4.96,1505,5.137,1506,3.271,1507,5.137,1508,4.691,1509,3.099,1510,3.472,1511,4.492,1512,3.472,1513,2.695,1514,3.472,1515,3.271,1516,3.472,1517,4.492,1518,3.271,1519,3.271,1520,3.472,1521,3.472,1522,3.472,1523,3.271,1524,2.816,1525,3.472,1526,3.472,1527,3.472,1528,3.472,1529,3.472,1530,3.472,1531,3.271,1532,3.472,1533,2.393,1534,3.271,1535,3.472,1536,3.472,1537,4.472,1538,4.492,1539,4.492,1540,4.492,1541,3.642,1542,3.472,1543,4.492,1544,4.492,1545,3.472,1546,4.492,1547,4.232,1562,5.033,1563,6.511,1564,5.033,1565,6.511,1566,5.033]],["title/interfaces/CommonImageScaleFactors.html",[777,0.539,1537,2.514]],["body/interfaces/CommonImageScaleFactors.html",[0,0.026,3,0.153,4,0.181,5,0.145,9,0.196,10,0.728,13,0.806,17,1.583,22,0.42,24,0.808,25,0.011,26,0.515,27,0.301,28,0.63,49,0.728,52,1.676,54,3.034,60,0.5,71,0.181,77,0.24,83,0.006,84,0.008,85,0.006,108,0.779,114,0.629,120,0.857,136,1.676,170,1.246,178,2.374,185,2.008,199,2.773,214,2.008,218,2.896,236,2.291,238,0.857,242,2.214,267,4.083,295,3.479,300,1.414,301,1.777,305,1.676,320,3.917,321,2.66,342,1.726,355,2.276,373,1.831,438,3.034,478,2.66,507,2.374,521,2.641,545,2.896,777,0.833,779,1.726,822,3.034,1242,1.777,1461,1.777,1473,4.083,1474,3.188,1475,4.574,1476,5.321,1477,4.574,1478,3.365,1479,3.709,1480,4.78,1481,3.034,1482,3.188,1483,4.286,1484,3.365,1485,3.365,1486,3.365,1487,3.365,1488,3.188,1489,3.365,1490,3.365,1491,3.365,1492,3.034,1493,3.572,1494,3.572,1495,3.572,1496,3.572,1497,3.572,1498,3.188,1499,3.188,1500,3.572,1501,3.365,1502,3.572,1503,3.572,1504,3.365,1505,3.365,1506,3.365,1507,5.182,1508,4.755,1509,3.188,1510,3.572,1511,4.574,1512,3.572,1513,2.773,1514,3.572,1515,3.365,1516,3.572,1517,4.574,1518,3.365,1519,3.365,1520,3.572,1521,3.572,1522,3.572,1523,3.365,1524,2.896,1525,3.572,1526,3.572,1527,3.572,1528,3.572,1529,3.572,1530,3.572,1531,3.365,1532,3.572,1533,2.462,1534,3.365,1535,3.572,1536,3.572,1537,4.78,1538,5.5,1539,5.5,1540,5.046,1541,3.709,1542,3.572,1543,4.574,1544,4.574,1545,3.572,1546,4.574,1547,4.755,1567,5.822,1568,5.177]],["title/classes/CommonImageScaleFactorsImpl.html",[0,0.015,1541,2.4]],["body/classes/CommonImageScaleFactorsImpl.html",[0,0.026,2,2.04,3,0.15,4,0.178,5,0.144,9,0.193,10,0.72,13,0.797,17,1.558,19,0.579,22,0.621,24,1.024,25,0.011,26,0.564,27,0.307,28,0.689,49,0.72,52,1.65,54,2.986,60,0.498,71,0.178,77,0.239,83,0.006,84,0.008,85,0.006,108,0.771,114,0.797,120,0.843,136,1.65,170,1.236,178,2.336,185,1.976,199,2.729,214,1.976,218,2.85,236,2.255,238,0.843,242,2.179,267,4.042,295,3.452,300,1.4,301,1.749,305,1.65,320,3.888,321,2.618,342,1.698,355,2.253,373,1.802,438,2.986,478,2.618,507,2.336,521,2.646,545,2.85,777,0.824,822,2.986,1242,1.749,1461,1.749,1473,4.042,1474,3.138,1475,4.527,1476,5.289,1477,4.527,1478,3.312,1479,3.671,1480,4.759,1481,2.986,1482,3.138,1483,4.254,1484,3.312,1485,3.312,1486,3.312,1487,3.312,1488,3.138,1489,3.312,1490,3.312,1491,3.312,1492,2.986,1493,3.515,1494,3.515,1495,3.515,1496,3.515,1497,3.515,1498,3.138,1499,3.138,1500,3.515,1501,3.312,1502,3.515,1503,3.515,1504,3.312,1505,3.312,1506,3.312,1507,5.157,1508,4.719,1509,3.138,1510,3.515,1511,4.527,1512,3.515,1513,2.729,1514,3.515,1515,3.312,1516,3.515,1517,4.527,1518,3.312,1519,3.312,1520,3.515,1521,3.515,1522,3.515,1523,3.312,1524,2.85,1525,3.515,1526,3.515,1527,3.515,1528,3.515,1529,3.515,1530,3.515,1531,3.312,1532,3.515,1533,2.423,1534,3.312,1535,3.515,1536,3.515,1537,4.759,1538,5.289,1539,5.289,1540,5.008,1541,4.061,1542,4.527,1543,5.289,1544,4.527,1545,4.527,1546,4.527,1547,4.719,1567,5.762,1569,6.562,1570,5.095,1571,5.095]],["title/interfaces/CommonLogMessage.html",[777,0.539,1572,3.423]],["body/interfaces/CommonLogMessage.html",[0,0.015,3,0.194,4,0.147,5,0.079,9,0.159,10,0.634,14,1.362,17,2.276,22,0.341,25,0.011,26,0.513,27,0.268,28,0.4,33,1.15,42,1.925,60,0.486,66,2.253,69,2.313,71,0.261,73,0.341,77,0.194,78,2.466,83,0.005,84,0.007,85,0.005,87,0.923,94,1.488,108,0.957,120,1.092,128,1.773,131,2.471,156,1.862,170,1.417,172,0.696,179,2.001,182,2.253,183,2.735,198,4.263,201,1.092,212,3.695,214,2.241,238,0.956,240,3.232,242,1.8,244,3.867,245,2.471,246,2.735,249,3.104,250,3.986,254,5.073,256,3.558,258,4.552,260,5.241,261,5.264,268,3.756,270,2.313,276,2.735,277,4.552,281,2.903,282,2.735,284,3.104,285,1.929,289,4.263,299,1.324,300,1.681,303,1.8,305,1.362,312,4.289,315,2.466,316,1.8,342,1.926,345,6.136,350,5.073,351,2.748,356,1.818,375,1.183,411,1.926,417,2.253,475,3.357,531,1.929,546,2.591,570,2.969,586,2.354,592,3.104,634,2.557,777,0.726,779,1.403,820,2.354,857,3.257,918,1.8,924,1.685,928,3.104,929,2.466,953,2.735,1029,5.073,1033,3.357,1075,3.867,1083,2.903,1092,3.695,1113,3.126,1177,3.974,1180,3.558,1277,2.162,1278,2.162,1315,2.735,1461,1.983,1478,2.735,1479,3.232,1501,4.289,1509,3.558,1513,2.253,1531,2.735,1572,6.284,1573,3.357,1574,3.104,1575,4.208,1576,5.778,1577,3.104,1578,4.609,1579,5.073,1580,3.357,1581,4.609,1582,5.794,1583,4.208,1584,2.903,1585,4.208,1586,4.208,1587,3.104,1588,3.695,1589,5.073,1590,4.208,1591,7.445,1592,4.208,1593,5.778,1594,5.778,1595,7.103,1596,5.778,1597,3.104,1598,5.778,1599,5.778,1600,5.778,1601,4.208,1602,5.778,1603,4.208,1604,4.868,1605,4.77,1606,4.208,1607,4.208,1608,5.778,1609,5.794,1610,5.073,1611,4.868,1612,3.357,1613,3.695,1614,4.208,1615,3.756,1616,4.208,1617,4.208,1618,4.208,1619,4.208,1620,4.208,1621,4.208,1622,4.208,1623,4.208,1624,4.208,1625,3.986,1626,4.208,1627,4.208,1628,4.208,1629,4.208,1630,4.208,1631,4.208,1632,4.208,1633,4.208,1634,4.208,1635,3.695,1636,3.357,1637,3.357,1638,3.357,1639,5.778,1640,3.104,1641,4.208,1642,4.208,1643,4.208,1644,4.208,1645,3.695,1646,4.208,1647,4.208,1648,4.208,1649,4.208,1650,3.357,1651,3.386,1652,2.591,1653,3.695,1654,3.357,1655,3.104,1656,4.208,1657,3.695,1658,4.208,1659,4.208,1660,5.073,1661,2.903,1662,3.695,1663,3.357,1664,5.073,1665,4.208,1666,3.695,1667,3.695,1668,3.695,1669,4.208,1670,3.695,1671,4.208,1672,3.695,1673,3.695,1674,3.695,1675,2.735,1676,4.208,1677,3.695,1678,4.208,1679,4.208,1680,4.208,1681,4.208,1682,4.208,1683,4.208,1684,4.208,1685,4.208,1686,4.208]],["title/components/ConfirmTemplateComponent.html",[180,0.251,694,1.11]],["body/components/ConfirmTemplateComponent.html",[0,0.017,3,0.141,4,0.168,5,0.119,7,1.689,9,0.181,10,0.693,19,0.801,22,0.648,25,0.011,26,0.548,27,0.239,32,1.503,35,0.845,36,0.819,44,1.138,45,1.207,48,1.462,57,1.044,60,0.28,71,0.221,73,0.389,77,0.186,83,0.006,84,0.008,85,0.006,87,1.384,94,1.697,108,0.829,120,1.044,121,2.372,136,1.554,137,1.921,138,1.749,139,1.599,140,1.697,141,1.861,142,1.423,170,1.075,172,1.044,180,0.412,215,0.794,253,3.117,344,2.955,355,1.647,435,1.491,446,1.175,469,1.207,495,1.276,571,1.175,610,1.588,652,1.241,653,1.875,654,1.312,655,1.387,658,1.082,659,1.496,661,1.31,663,1.31,677,1.276,678,1.632,679,2.165,680,1.387,681,1.387,682,1.143,683,1.387,684,1.207,685,1.387,686,1.207,687,1.387,688,1.241,689,1.387,690,1.241,691,1.387,692,1.241,693,1.387,694,1.938,695,2.226,696,1.387,697,1.207,698,1.824,699,1.241,700,1.312,701,1.387,702,1.241,703,1.387,704,1.241,705,1.387,706,1.207,707,1.387,708,1.387,709,1.207,710,1.387,711,1.241,712,1.387,713,1.207,714,1.387,715,1.241,716,2.038,717,1.241,718,1.175,719,1.175,720,1.824,721,1.241,722,1.276,723,1.387,724,1.207,725,1.387,726,1.241,727,1.387,728,1.241,729,1.387,730,1.175,731,1.387,732,1.241,733,1.387,734,1.276,735,1.349,736,1.387,737,1.207,738,1.143,739,1.387,740,1.207,741,1.387,742,1.175,743,1.387,744,1.207,745,1.312,746,1.241,747,1.387,748,1.276,749,1.387,750,1.241,751,1.387,752,1.207,753,1.387,754,1.241,755,1.312,756,1.241,757,1.207,758,1.349,759,1.052,760,1.207,761,1.387,762,1.207,763,1.387,764,1.207,765,1.387,766,1.207,767,1.387,768,1.207,769,1.387,770,1.207,771,1.387,772,1.207,773,1.387,774,1.207,775,1.312,776,1.387,794,1.804,854,2.052,863,1.387,1242,1.647,1479,2.685,1504,4.584,1687,6.375,1688,5.896,1689,3.828,1690,6.311,1691,6.311,1692,7.053,1693,7.053,1694,7.053,1695,6.311,1696,6.193,1697,7.053,1698,4.799,1699,4.799,1700,4.799,1701,4.799,1702,4.799,1703,4.799,1704,3.828,1705,3.828,1706,4.799,1707,4.799,1708,4.799]],["title/classes/Container.html",[0,0.015,1709,2.643]],["body/classes/Container.html",[0,0.026,2,1.632,3,0.217,4,0.143,5,0.077,7,0.919,9,0.154,10,0.621,13,0.687,16,3.462,17,2.55,19,0.796,22,0.67,24,1.012,25,0.011,26,0.504,27,0.301,28,0.616,29,0.999,35,0.869,36,0.842,37,0.882,44,1.504,46,4.12,48,0.945,49,0.808,52,1.83,58,1.148,60,0.483,65,3.277,70,1.939,71,0.227,76,1.744,77,0.217,83,0.005,84,0.007,85,0.005,87,1.24,106,0.963,108,0.665,114,0.687,128,1.86,132,1.929,157,0.87,176,1.442,208,2.263,233,3.028,285,2.592,316,1.744,333,3.335,375,1.97,416,1.632,436,5.177,439,2.117,459,4.219,503,4.51,623,5.177,667,4.316,678,1.462,755,1.114,756,1.054,777,0.71,863,1.634,942,2.813,1241,3.803,1246,3.313,1611,5.431,1709,5.236,1710,3.253,1711,4.171,1712,4.51,1713,4.964,1714,4.964,1715,5.591,1716,5.591,1717,6.154,1718,4.107,1719,5.754,1720,4.964,1721,4.964,1722,4.964,1723,4.964,1724,4.964,1725,4.964,1726,4.171,1727,4.964,1728,4.964,1729,4.964,1730,4.964,1731,4.51,1732,4.171,1733,4.964,1734,4.51,1735,4.964,1736,5.699,1737,5.255,1738,5.177,1739,4.477,1740,5.177,1741,5.654,1742,5.699,1743,6.154,1744,6.154,1745,4.077,1746,5.654,1747,4.788,1748,4.077,1749,4.219,1750,4.077,1751,4.964,1752,4.788,1753,4.077,1754,4.077,1755,6.076,1756,4.077,1757,6.076,1758,4.964,1759,4.077,1760,4.964,1761,4.964,1762,5.591,1763,4.077,1764,4.077,1765,4.077,1766,4.964,1767,4.077,1768,5.171,1769,4.077,1770,4.964,1771,3.58,1772,3.58,1773,3.58,1774,3.58,1775,3.58,1776,3.58,1777,3.58,1778,3.58,1779,3.58,1780,3.58,1781,4.964,1782,3.58,1783,3.58,1784,3.58,1785,3.58,1786,4.477,1787,4.964,1788,3.58,1789,4.964,1790,3.58,1791,4.51,1792,3.58,1793,3.58]],["title/injectables/ContainerService.html",[356,1.35,1719,2.96]],["body/injectables/ContainerService.html",[0,0.018,3,0.151,4,0.179,5,0.096,9,0.193,10,0.722,13,0.799,16,3.592,19,0.826,22,0.703,24,1.134,25,0.011,26,0.565,27,0.313,28,0.691,29,1.158,35,1.171,36,1.114,37,1.026,41,4.853,43,4.548,49,0.843,58,1.197,60,0.449,71,0.23,73,0.414,77,0.194,83,0.006,84,0.008,85,0.006,106,1.385,132,2.361,201,0.846,238,1.386,316,2.187,356,2.069,358,2.627,413,5.998,899,3.854,954,3.854,1277,2.627,1278,2.627,1719,4.538,1737,5.608,1739,5.017,1740,5.801,1747,3.772,1752,5.86,1755,4.079,1786,5.017,1794,4.49,1795,7.272,1796,7.272,1797,7.272,1798,7.272,1799,7.272,1800,7.272,1801,7.272,1802,7.272,1803,7.677,1804,6.577,1805,5.113,1806,5.113,1807,6.577,1808,5.113,1809,5.113,1810,5.113,1811,5.113,1812,5.775,1813,5.113,1814,6.577,1815,5.113,1816,6.974,1817,5.113,1818,6.577,1819,5.113,1820,8.681,1821,5.113,1822,6.577,1823,5.113,1824,5.113,1825,6.577,1826,5.113,1827,5.113,1828,5.113,1829,5.113,1830,5.113]],["title/components/CoreBreadcrumbComponent.html",[180,0.251,699,1.11]],["body/components/CoreBreadcrumbComponent.html",[0,0.017,3,0.138,4,0.164,5,0.117,7,1.672,9,0.177,13,0.754,19,0.791,22,0.503,25,0.011,26,0.541,28,0.589,33,1.279,44,1.119,45,1.177,48,1.438,49,0.514,52,2.009,57,1.027,58,0.73,68,3.472,71,0.164,73,0.379,77,0.183,83,0.006,84,0.008,85,0.006,92,4.579,114,0.754,115,1.57,122,1.672,142,1.253,157,0.998,170,0.797,180,0.407,215,0.774,299,1.952,375,1.957,435,1.489,439,1.65,446,1.145,469,1.177,478,3.189,495,1.244,504,4.282,546,3.822,569,3.189,571,1.145,576,3.637,577,4.951,583,5.45,587,4.579,610,1.866,652,1.21,653,1.244,654,1.279,655,1.352,658,1.055,659,1.495,661,1.288,663,1.288,677,1.244,678,1.605,679,2.144,680,1.352,681,1.352,682,1.114,683,1.352,684,1.177,685,1.352,686,1.177,687,1.352,688,1.21,689,1.352,690,1.21,691,1.352,692,1.21,693,1.352,694,1.21,695,1.279,696,1.352,697,1.177,698,1.794,699,1.919,700,2.213,701,1.352,702,1.21,703,1.352,704,1.21,705,1.352,706,1.177,707,1.352,708,1.352,709,1.177,710,1.352,711,1.21,712,1.352,713,1.177,714,1.352,715,1.21,716,2.013,717,1.21,718,1.145,719,1.145,720,1.794,721,1.21,722,1.244,723,1.352,724,1.177,725,1.352,726,1.21,727,1.352,728,1.21,729,1.352,730,1.145,731,1.352,732,1.21,733,1.352,734,1.244,735,1.315,736,1.352,737,1.177,738,1.114,739,1.352,740,1.177,741,1.352,742,1.145,743,1.352,744,1.177,745,1.279,746,1.21,747,1.352,748,1.244,749,1.352,750,1.21,751,1.352,752,1.177,753,1.352,754,1.21,755,1.279,756,1.21,757,1.177,758,1.315,759,1.026,760,1.177,761,1.352,762,1.177,763,1.352,764,1.177,765,1.352,766,1.177,767,1.352,768,1.177,769,1.352,770,1.177,771,1.352,772,1.177,773,1.352,774,1.177,775,1.279,776,1.352,780,2.13,781,2.13,855,2.951,994,3.822,1640,4.579,1831,6.116,1832,5.556,1833,4.108,1834,5.473,1835,8.22,1836,7.418,1837,6.206,1838,6.206,1839,6.206,1840,6.206,1841,6.206,1842,6.206,1843,4.282,1844,6.206,1845,6.206,1846,6.206,1847,6.206,1848,6.206,1849,6.206,1850,6.206,1851,4.678,1852,4.678]],["title/interfaces/CountryList.html",[777,0.539,799,2.789]],["body/interfaces/CountryList.html",[0,0.007,3,0.059,4,0.07,5,0.037,7,0.738,9,0.075,10,0.359,11,0.704,19,0.226,25,0.011,27,0.124,28,0.311,29,0.688,35,0.266,36,0.877,37,0.511,42,1.078,58,0.754,60,0.421,71,0.169,73,0.161,75,0.402,77,0.169,83,0.002,84,0.004,85,0.002,87,0.436,106,0.339,108,0.385,114,0.242,115,0.738,116,1.23,118,0.704,119,0.725,120,0.329,122,0.449,123,0.881,124,0.881,127,1.066,128,0.474,130,0.772,131,2.066,132,0.591,146,1.61,150,1.4,153,1.557,154,1.4,157,1.939,158,1.312,159,0.946,161,0.881,170,0.339,171,1.022,172,1.146,180,0.191,185,0.772,187,1.501,188,1.587,189,1.157,190,1.293,191,1.123,194,1.293,201,0.799,206,1.587,207,1.587,208,0.797,210,1.587,238,0.883,300,0.425,303,0.851,329,0.946,349,1.747,373,0.704,435,0.329,569,1.022,573,2.386,574,0.946,581,1.587,590,1.113,654,0.544,659,0.329,661,0.413,663,0.413,702,0.515,777,0.524,779,0.663,780,1.123,781,1.123,786,1.066,788,1.078,789,1.459,794,0.748,799,3.47,800,1.617,801,1.373,802,2.258,829,1.873,856,1.918,862,1.166,863,0.575,884,0.851,956,0.983,960,2.415,963,1.468,1054,4.688,1093,1.166,1113,1.567,1116,1.747,1307,1.557,1346,1.066,1351,0.946,1361,1.166,1363,1.225,1365,1.066,1369,1.066,1383,1.022,1384,1.293,1385,1.166,1387,1.293,1388,1.449,1389,1.373,1390,1.373,1391,1.373,1398,0.823,1399,1.354,1400,0.823,1401,1.354,1402,1.354,1403,1.354,1404,0.823,1405,0.823,1406,1.354,1407,1.354,1408,0.823,1409,0.823,1410,0.823,1411,0.823,1412,0.823,1413,1.354,1414,1.31,1415,0.823,1416,1.354,1417,1.354,1418,0.823,1419,1.354,1420,0.823,1421,0.823,1422,0.823,1423,0.823,1424,1.998,1425,0.823,1426,0.823,1427,0.823,1428,0.823,1429,0.823,1430,0.823,1431,0.823,1432,0.823,1433,0.823,1434,0.823,1435,0.823,1436,0.823,1437,0.823,1438,0.823,1439,0.823,1440,0.823,1441,1.354,1442,0.823,1443,0.823,1444,0.823,1445,0.823,1446,0.823,1447,0.823,1448,0.823,1449,0.823,1450,0.823,1451,0.823,1452,0.823,1453,0.823,1454,0.823,1455,1.354,1456,0.823,1457,0.823,1458,0.823,1459,0.823,1460,0.823,1461,0.683,1462,0.823,1463,0.823,1464,0.823,1465,0.823,1466,0.823,1467,0.823,1468,0.823,1469,0.823,1470,1.166,1757,2.611,1853,1.747,1854,4.169,1855,9.088,1856,3.273,1857,1.99,1858,1.99,1859,1.99,1860,1.99,1861,7.42,1862,1.99,1863,1.99,1864,1.99,1865,1.99,1866,1.99,1867,1.99,1868,3.273,1869,1.99,1870,1.99,1871,1.99,1872,1.99,1873,1.99,1874,1.99,1875,1.99,1876,1.99,1877,1.99,1878,1.99,1879,1.99,1880,1.99,1881,1.99,1882,1.99,1883,1.99,1884,1.99,1885,1.99,1886,1.99,1887,1.99,1888,1.99,1889,1.99,1890,1.99,1891,1.99,1892,1.99,1893,1.99,1894,1.99,1895,1.99,1896,1.99,1897,1.99,1898,1.99,1899,1.99,1900,1.99,1901,1.99,1902,1.99,1903,1.99,1904,1.99,1905,1.99,1906,1.99,1907,1.99,1908,1.99,1909,1.99,1910,1.99,1911,1.99,1912,1.99,1913,1.99,1914,1.99,1915,3.273,1916,1.99,1917,1.99,1918,1.99,1919,1.99,1920,1.99,1921,1.99,1922,1.99,1923,1.99,1924,1.99,1925,3.854,1926,1.99,1927,1.99,1928,1.99,1929,2.258,1930,1.99,1931,1.99,1932,3.273,1933,1.99,1934,1.99,1935,1.99,1936,1.99,1937,1.99,1938,1.99,1939,1.99,1940,1.99,1941,1.99,1942,1.99,1943,1.99,1944,1.99,1945,1.99,1946,1.99,1947,1.99,1948,1.99,1949,1.99,1950,1.99,1951,1.99,1952,1.747,1953,1.99,1954,1.99,1955,7.204,1956,1.99,1957,1.99,1958,1.99,1959,1.99,1960,1.99,1961,3.273,1962,1.99,1963,1.99,1964,1.99,1965,1.99,1966,1.99,1967,1.99,1968,1.99,1969,1.99,1970,1.99,1971,1.99,1972,3.273,1973,1.99,1974,4.169,1975,1.99,1976,1.99,1977,1.99,1978,1.99,1979,1.99,1980,1.99,1981,1.99,1982,1.99,1983,1.99,1984,1.99,1985,1.99,1986,1.99,1987,1.99,1988,1.99,1989,1.99,1990,1.99,1991,1.99,1992,1.99,1993,1.99,1994,1.99,1995,1.99,1996,1.99,1997,1.99,1998,1.99,1999,1.99,2000,1.99,2001,1.99,2002,1.99,2003,1.99,2004,1.99,2005,1.99,2006,1.99,2007,1.99,2008,1.99,2009,4.831,2010,1.99,2011,1.99,2012,1.99,2013,1.99,2014,1.99,2015,1.99,2016,1.99,2017,1.99,2018,1.99,2019,1.99,2020,1.99,2021,1.99,2022,1.99,2023,1.99,2024,1.99,2025,1.99,2026,1.99,2027,1.99,2028,4.831,2029,1.99,2030,1.99,2031,1.99,2032,1.99,2033,1.99,2034,1.587,2035,1.99,2036,1.99,2037,1.99,2038,1.99,2039,1.99,2040,3.273,2041,1.99,2042,1.99,2043,1.99,2044,1.99,2045,1.747,2046,1.99,2047,1.99,2048,1.99,2049,1.99,2050,1.99,2051,1.99,2052,1.99,2053,1.99,2054,1.99,2055,1.99,2056,1.99,2057,1.99,2058,1.99,2059,1.99,2060,1.99,2061,1.99,2062,1.99,2063,1.99,2064,1.99,2065,1.99,2066,1.99,2067,1.99,2068,1.99,2069,1.99,2070,1.99,2071,1.99,2072,1.99,2073,1.99,2074,1.99,2075,1.99,2076,1.99,2077,1.99,2078,1.99,2079,1.99,2080,1.99,2081,1.99,2082,1.99,2083,1.99,2084,1.99,2085,1.99,2086,1.99,2087,1.99,2088,1.99,2089,1.99,2090,1.99,2091,1.99,2092,1.99,2093,1.99,2094,1.99,2095,1.99,2096,1.99,2097,1.99,2098,1.99,2099,1.99,2100,1.99,2101,1.99,2102,1.99,2103,1.99,2104,1.99,2105,1.99,2106,1.99,2107,1.99,2108,1.99,2109,1.99,2110,1.99,2111,1.99,2112,1.99,2113,1.99,2114,1.99,2115,1.99,2116,3.273,2117,3.273,2118,1.99,2119,1.99,2120,1.99,2121,1.99,2122,1.99,2123,3.273,2124,1.99,2125,1.99,2126,1.99,2127,1.99,2128,1.99,2129,1.99,2130,1.99,2131,1.99,2132,1.99,2133,1.99,2134,1.99,2135,1.99,2136,1.99,2137,1.99,2138,1.99,2139,1.99,2140,1.99,2141,1.99,2142,1.99,2143,1.99,2144,1.99,2145,1.99,2146,1.99,2147,1.99,2148,1.99,2149,1.99,2150,1.99,2151,1.99,2152,1.99,2153,1.99,2154,1.99,2155,1.99,2156,1.99,2157,1.99,2158,1.99,2159,1.99,2160,1.99,2161,1.99,2162,1.99,2163,1.99,2164,1.99,2165,1.99,2166,1.99,2167,1.99,2168,1.99,2169,1.99,2170,1.99,2171,1.99,2172,1.99,2173,3.661,2174,1.99,2175,1.99,2176,1.99,2177,1.99,2178,1.99,2179,1.99,2180,1.99,2181,1.99,2182,1.99,2183,1.99,2184,1.99,2185,1.99,2186,1.99,2187,1.99,2188,1.99,2189,1.99,2190,3.273,2191,1.99,2192,1.99,2193,1.99,2194,1.99,2195,1.99,2196,1.99,2197,1.99,2198,1.99,2199,1.99,2200,1.99,2201,1.99,2202,1.99,2203,1.99,2204,1.99,2205,1.99,2206,1.99,2207,1.99,2208,1.99,2209,1.99,2210,1.99,2211,1.99,2212,1.99,2213,1.99,2214,1.99,2215,1.99,2216,1.99,2217,1.99,2218,1.99,2219,1.99,2220,1.99,2221,1.99,2222,1.99,2223,1.99,2224,1.99,2225,1.99,2226,1.99,2227,1.747,2228,1.99,2229,1.99,2230,1.99,2231,1.99,2232,1.99,2233,1.99,2234,1.99,2235,1.99,2236,1.99,2237,1.99,2238,1.99,2239,1.99,2240,1.99,2241,1.99,2242,1.99,2243,1.99,2244,1.99,2245,1.99,2246,1.99,2247,1.99,2248,1.99,2249,1.99,2250,1.99,2251,1.99,2252,1.99,2253,1.99,2254,1.99,2255,6.068,2256,1.99,2257,1.99,2258,1.99,2259,1.99,2260,1.99,2261,1.99,2262,1.99,2263,1.99,2264,1.99,2265,1.99,2266,1.99,2267,1.99,2268,1.99,2269,1.99,2270,1.99,2271,1.99,2272,1.99,2273,1.99,2274,1.99,2275,1.99,2276,1.99,2277,1.99,2278,1.99,2279,1.99,2280,1.99,2281,1.99,2282,1.99,2283,1.99,2284,1.99,2285,1.99,2286,1.99,2287,1.99,2288,1.99,2289,1.99,2290,1.99,2291,1.99,2292,1.99,2293,1.99,2294,1.99,2295,1.99,2296,1.99,2297,1.99,2298,1.99,2299,1.99,2300,1.99,2301,1.99,2302,1.99,2303,1.99,2304,1.99,2305,1.99,2306,1.99,2307,1.99,2308,1.99,2309,1.99,2310,4.831,2311,1.99,2312,1.99,2313,1.99,2314,1.99,2315,3.273,2316,1.99,2317,1.99,2318,1.99,2319,1.99,2320,1.99,2321,1.99,2322,1.99,2323,1.99,2324,1.99,2325,1.99,2326,1.99,2327,1.99,2328,1.99,2329,1.99,2330,1.99,2331,1.99,2332,1.99,2333,1.99,2334,1.99,2335,1.99,2336,3.273,2337,1.99,2338,1.99,2339,1.99,2340,1.99,2341,1.99,2342,1.99,2343,5.339,2344,1.99,2345,1.99,2346,1.99,2347,1.99,2348,1.99,2349,1.99,2350,1.99,2351,1.99,2352,1.99,2353,1.99,2354,1.99,2355,1.99,2356,1.99,2357,1.99,2358,1.99,2359,1.99,2360,1.99,2361,1.99,2362,1.99,2363,1.99,2364,1.99,2365,1.99,2366,1.99,2367,1.99,2368,1.99,2369,1.99,2370,1.99,2371,1.99,2372,1.99,2373,1.99,2374,1.99,2375,1.99,2376,1.99,2377,1.99,2378,1.99,2379,1.99,2380,1.99,2381,1.99,2382,1.99,2383,1.99,2384,1.99,2385,1.99,2386,1.99,2387,1.99,2388,1.99,2389,1.99,2390,3.273,2391,1.99,2392,1.99,2393,1.99,2394,1.99,2395,1.99,2396,1.99,2397,1.99,2398,1.99,2399,1.99,2400,1.99,2401,1.99,2402,1.99,2403,1.99,2404,1.99,2405,1.747,2406,1.99,2407,1.99,2408,1.99,2409,1.99,2410,1.99,2411,1.587,2412,1.166,2413,1.293,2414,1.468,2415,1.747,2416,1.747,2417,1.468,2418,1.747]],["title/interfaces/DateErrorMsg.html",[777,0.539,2419,3.166]],["body/interfaces/DateErrorMsg.html",[0,0.012,3,0.098,4,0.116,5,0.062,7,1.1,9,0.125,10,0.536,11,1.173,19,0.377,25,0.011,27,0.278,28,0.777,29,0.825,33,0.907,35,0.91,37,0.903,39,1.639,42,2.115,43,1.856,48,1.131,49,0.364,52,1.074,58,0.995,60,0.5,66,1.777,71,0.238,72,1.419,73,0.269,74,2.244,75,0.67,77,0.171,83,0.004,84,0.006,85,0.004,87,0.728,93,2.044,106,0.831,107,2.41,108,0.836,109,1.944,114,0.403,115,1.1,116,1.834,118,1.173,119,1.209,120,0.807,122,0.748,132,1.45,139,1.106,144,1.209,146,1.626,147,1.209,157,0.708,170,0.565,172,1.353,176,1.726,178,2.926,180,0.469,185,1.892,187,1.521,189,1.173,191,1.987,193,1.074,198,2.448,201,0.807,205,2.16,208,2.317,229,2.157,234,1.639,236,3.253,238,0.958,270,2.317,271,3.172,274,2.175,299,1.044,300,1.041,301,1.139,303,1.419,305,1.074,308,2.289,313,2.647,324,2.044,329,2.752,335,2.289,338,1.372,342,1.106,355,2.19,363,1.45,373,1.173,376,1.044,377,1.492,411,2.514,416,1.328,417,2.613,425,3.366,426,1.856,435,0.549,439,1.539,474,2.613,488,3.893,497,2.157,531,1.521,533,2.289,553,2.647,561,2.157,564,2.654,591,2.859,592,2.448,595,2.475,610,1.228,659,0.549,661,0.689,663,0.689,675,3.802,678,0.858,706,1.228,777,0.801,779,1.106,780,1.675,781,1.675,788,1.262,789,1.334,790,2.73,791,2.475,792,2.087,793,2.41,794,1.247,815,1.639,816,3.391,817,2.044,818,1.777,819,1.521,854,1.419,863,0.959,874,2.507,876,4.42,888,3.005,904,1.856,918,1.419,933,2.289,954,2.859,1047,2.044,1053,2.044,1072,2.73,1073,3.005,1074,2.41,1075,3.739,1093,1.944,1126,1.521,1225,2.448,1242,1.675,1243,2.157,1315,2.157,1398,1.372,1399,2.018,1400,1.372,1401,2.018,1402,2.018,1403,2.018,1404,1.372,1405,1.372,1406,2.018,1407,2.018,1408,1.372,1409,1.372,1410,1.372,1411,1.372,1412,1.372,1413,2.018,1414,2.317,1415,1.372,1416,2.018,1417,2.018,1418,1.372,1419,2.018,1420,1.372,1421,1.372,1422,1.372,1423,1.372,1424,2.639,1425,1.372,1426,1.372,1427,1.372,1428,1.372,1429,1.372,1430,1.372,1431,1.372,1432,1.372,1433,1.372,1434,1.372,1435,1.372,1436,1.372,1437,1.372,1438,1.372,1439,1.372,1440,1.372,1441,2.018,1442,1.372,1443,1.372,1444,1.372,1445,1.372,1446,1.372,1447,1.372,1448,1.372,1449,1.372,1450,1.372,1451,1.372,1452,1.372,1453,1.372,1454,1.372,1455,2.018,1456,1.372,1457,1.372,1458,1.372,1459,1.372,1460,1.372,1461,1.139,1462,1.372,1463,1.372,1464,1.372,1465,1.372,1466,1.372,1467,1.372,1468,1.372,1469,1.372,1479,2.73,1524,3.238,1533,1.578,1578,3.893,1615,5.356,1652,2.044,1675,2.157,2419,4.27,2420,2.448,2421,3.893,2422,3.366,2423,6.454,2424,6.454,2425,6.454,2426,6.454,2427,6.758,2428,3.366,2429,3.762,2430,3.893,2431,5.603,2432,3.6,2433,4.285,2434,5.971,2435,4.285,2436,6.016,2437,2.448,2438,2.647,2439,5.864,2440,2.914,2441,2.647,2442,2.914,2443,2.914,2444,2.914,2445,1.777,2446,2.914,2447,2.914,2448,2.914,2449,5.672,2450,2.914,2451,2.914,2452,2.914,2453,3.893,2454,4.285,2455,4.285,2456,4.285,2457,3.005,2458,4.285,2459,2.914,2460,2.448,2461,2.914,2462,2.914,2463,2.914,2464,2.914,2465,4.617,2466,2.647,2467,3.893,2468,5.082,2469,1.944,2470,2.914,2471,2.914,2472,2.289,2473,4.285,2474,2.647,2475,2.914,2476,4.708,2477,2.647,2478,2.914,2479,2.914,2480,2.914,2481,2.914,2482,2.914,2483,3.366,2484,2.914,2485,3.6,2486,2.914,2487,3.6,2488,2.914,2489,2.914,2490,2.914,2491,2.914,2492,2.914,2493,2.914,2494,2.914,2495,2.914,2496,2.914,2497,3.6,2498,6.244,2499,2.914,2500,2.914,2501,2.914,2502,2.914,2503,2.914,2504,2.914,2505,2.914,2506,2.914,2507,2.914,2508,2.914,2509,2.914,2510,2.914,2511,2.914,2512,2.914,2513,4.285,2514,2.914,2515,4.285,2516,2.914,2517,2.647,2518,2.914,2519,5.603,2520,3.6,2521,5.082,2522,2.914,2523,2.914,2524,4.617,2525,2.914,2526,2.914,2527,2.914,2528,2.647,2529,2.157,2530,2.647,2531,2.914,2532,2.647,2533,2.914,2534,2.914,2535,2.647,2536,2.914,2537,4.285,2538,3.6,2539,2.914,2540,2.914,2541,2.914,2542,2.914,2543,2.647,2544,2.914,2545,2.914,2546,2.914,2547,2.914,2548,2.157]],["title/directives/DateFieldFormatDirective.html",[215,0.71,760,1.08]],["body/directives/DateFieldFormatDirective.html",[0,0.022,3,0.184,4,0.218,5,0.117,9,0.236,22,0.603,25,0.011,27,0.236,71,0.218,73,0.506,77,0.184,83,0.008,84,0.009,85,0.008,172,1.316,201,1.231,205,3.52,215,1.231,238,1.032,355,2.142,521,1.855,658,1.407,659,1.231,759,1.368,760,1.872,788,1.925,789,2.174,1101,2.797,1113,2.989,1362,3.491,2412,4.361,2549,6.983,2550,5.479,2551,7.442,2552,7.952,2553,6.534,2554,6.24,2555,5.479,2556,6.24,2557,5.937,2558,6.24,2559,4.978,2560,6.24,2561,6.24,2562,6.24,2563,6.24,2564,6.24,2565,6.24,2566,8.414,2567,6.24,2568,6.24,2569,7.442,2570,6.24,2571,6.24,2572,6.24]],["title/components/DatepickerComponent.html",[180,0.251,706,1.08]],["body/components/DatepickerComponent.html",[0,0.009,3,0.072,4,0.086,5,0.073,7,1.23,9,0.093,10,0.425,11,1.698,13,0.471,19,0.546,22,0.684,24,1.069,25,0.011,26,0.572,27,0.311,28,0.651,29,0.9,32,0.922,33,0.67,35,1.042,36,0.889,37,0.851,39,1.211,42,1.868,43,1.372,44,0.699,45,0.617,48,1.463,49,0.809,52,1.254,57,0.641,58,1.149,60,0.438,66,1.313,71,0.208,72,1.049,73,0.199,74,2.115,75,0.495,77,0.142,83,0.003,84,0.005,85,0.003,87,0.849,89,1.014,93,1.51,94,0.867,106,0.818,107,2.694,108,0.742,109,1.437,114,0.471,115,1.082,116,1.805,118,1.698,119,1.75,120,1.134,121,1.456,122,1.23,123,1.714,124,1.714,130,1.502,132,0.729,136,0.794,137,0.982,138,0.894,139,1.291,140,0.867,141,0.951,142,0.969,144,1.412,146,1.818,147,1.412,157,0.523,170,0.66,172,1.274,176,1.929,178,1.776,180,0.45,185,1.502,187,1.124,189,0.867,191,1.648,193,1.254,198,1.809,201,0.641,205,1.085,208,2.378,215,0.406,229,1.594,234,1.211,236,2.794,238,0.794,270,1.551,271,3.546,274,2.232,299,0.771,300,0.826,301,1.33,303,1.657,305,1.254,308,1.692,313,3.09,324,1.51,329,2.283,335,1.692,338,1.014,342,0.817,355,1.872,363,1.621,373,1.37,376,1.218,377,1.668,411,2.284,416,1.551,417,1.313,425,1.692,426,2.167,435,1.427,439,1.579,446,0.6,469,0.617,474,2.571,488,4.351,495,0.652,497,1.594,531,1.124,533,2.672,553,1.956,561,1.594,564,2.501,571,0.6,591,3.196,592,2.858,595,2.54,610,1.589,652,0.634,653,0.652,654,0.67,655,0.709,658,0.553,659,1.442,661,0.804,663,0.804,675,3.883,677,0.652,678,1.242,679,1.576,680,0.709,681,0.709,682,0.584,683,0.709,684,0.617,685,0.709,686,0.617,687,0.709,688,0.634,689,0.709,690,0.634,691,0.709,692,0.634,693,0.709,694,0.634,695,0.67,696,0.709,697,0.617,698,1.119,699,0.634,700,0.67,701,0.709,702,0.634,703,0.709,704,0.634,705,0.709,706,1.589,707,0.709,708,0.709,709,0.617,710,0.709,711,0.634,712,0.709,713,0.617,714,0.709,715,0.634,716,1.387,717,0.634,718,0.6,719,0.6,720,1.119,721,0.634,722,0.652,723,0.709,724,0.617,725,0.709,726,0.634,727,0.709,728,0.634,729,0.709,730,0.6,731,0.709,732,0.634,733,0.709,734,0.652,735,0.689,736,0.709,737,0.617,738,0.584,739,0.709,740,0.617,741,0.709,742,0.6,743,0.709,744,0.617,745,0.67,746,0.634,747,0.709,748,0.652,749,0.709,750,0.634,751,0.709,752,0.617,753,0.709,754,0.634,755,0.67,756,0.634,757,0.617,758,0.689,759,0.538,760,0.617,761,0.709,762,0.617,763,0.709,764,0.617,765,0.709,766,0.617,767,0.709,768,0.617,769,0.709,770,0.617,771,0.709,772,0.617,773,0.709,774,0.617,775,0.67,776,0.709,777,0.685,780,1.33,781,1.33,788,1.002,789,1.312,790,2.686,791,2.54,792,2.053,793,2.371,794,0.922,815,1.211,816,3.196,817,1.51,818,1.313,819,1.776,854,1.049,863,0.709,874,2.803,876,4.696,888,2.957,904,2.167,918,1.049,933,1.692,954,2.813,1047,1.51,1053,1.51,1072,1.372,1073,1.51,1074,1.211,1075,2.813,1091,1.372,1093,1.437,1101,1.456,1113,0.922,1126,1.776,1225,1.809,1242,1.33,1243,2.518,1315,1.594,1398,1.014,1399,1.602,1400,1.014,1401,1.602,1402,1.602,1403,1.602,1404,1.014,1405,1.014,1406,1.602,1407,1.602,1408,1.014,1409,1.014,1410,1.014,1411,1.014,1412,1.014,1413,1.602,1414,1.922,1415,1.014,1416,1.602,1417,1.602,1418,1.014,1419,1.602,1420,1.014,1421,1.014,1422,1.014,1423,1.014,1424,2.256,1425,1.014,1426,1.014,1427,1.014,1428,1.014,1429,1.014,1430,1.014,1431,1.014,1432,1.014,1433,1.014,1434,1.014,1435,1.014,1436,1.014,1437,1.014,1438,1.014,1439,1.014,1440,1.014,1441,1.602,1442,1.014,1443,1.014,1444,1.014,1445,1.014,1446,1.014,1447,1.014,1448,1.014,1449,1.014,1450,1.014,1451,1.014,1452,1.014,1453,1.014,1454,1.014,1455,1.602,1456,1.014,1457,1.014,1458,1.014,1459,1.014,1460,1.014,1461,0.842,1462,1.014,1463,1.014,1464,1.014,1465,1.014,1466,1.014,1467,1.014,1468,1.014,1469,1.014,1479,2.167,1524,3.699,1533,1.842,1578,3.09,1615,5.471,1652,1.51,1675,2.518,2419,3.542,2420,1.809,2421,1.956,2422,1.692,2423,4.216,2424,4.216,2425,4.216,2426,4.216,2427,4.79,2428,1.692,2429,3.546,2430,1.956,2431,2.153,2432,4.024,2433,4.216,2434,6.343,2435,4.216,2436,6.143,2437,1.809,2438,1.956,2439,6.066,2440,3.401,2441,3.09,2442,3.401,2443,3.401,2444,3.401,2445,2.074,2446,3.401,2447,3.401,2448,3.401,2449,5.879,2450,3.401,2451,4.216,2452,5.215,2453,4.351,2454,5.215,2455,4.79,2456,4.79,2457,3.359,2458,5.215,2459,3.401,2460,2.858,2461,3.401,2462,3.401,2463,4.216,2464,3.401,2465,4.351,2466,3.09,2467,4.351,2468,5.544,2469,2.27,2470,3.401,2471,4.216,2472,2.672,2473,4.79,2474,3.09,2475,3.401,2476,4.878,2477,1.956,2478,3.401,2479,4.216,2480,3.401,2481,4.216,2482,3.401,2483,2.672,2484,2.153,2485,2.858,2486,2.153,2487,2.858,2488,2.153,2489,3.401,2490,2.153,2491,2.153,2492,2.153,2493,2.153,2494,2.153,2495,3.401,2496,2.153,2497,2.858,2498,5.544,2499,2.153,2500,2.153,2501,2.153,2502,2.153,2503,2.153,2504,2.153,2505,2.153,2506,2.153,2507,2.153,2508,2.153,2509,2.153,2510,2.153,2511,2.153,2512,2.153,2513,3.401,2514,2.153,2515,3.401,2516,2.153,2517,1.956,2518,2.153,2519,4.79,2520,2.858,2521,4.216,2522,2.153,2523,2.153,2524,3.83,2525,2.153,2526,2.153,2527,2.153,2528,1.956,2529,1.594,2530,1.956,2531,2.153,2532,1.956,2533,2.153,2534,2.153,2535,1.956,2536,3.401,2537,3.401,2538,2.858,2539,2.153,2540,2.153,2541,4.79,2542,2.153,2543,1.956,2544,2.153,2545,4.216,2546,2.153,2547,3.401,2548,2.518,2573,3.873,2574,3.873,2575,3.873,2576,2.858,2577,3.873,2578,2.452,2579,2.452,2580,2.452,2581,2.452,2582,2.452,2583,2.452,2584,2.452,2585,2.452,2586,2.452,2587,2.452,2588,2.452,2589,2.452,2590,2.452,2591,2.452,2592,2.452,2593,2.452,2594,2.452,2595,2.452,2596,2.452,2597,2.452,2598,2.452,2599,2.452,2600,2.452,2601,2.452,2602,2.452,2603,2.452,2604,2.452,2605,3.873,2606,3.873,2607,3.873,2608,3.873,2609,3.873,2610,3.873,2611,3.873]],["title/injectables/DefaultPageGuardService.html",[356,1.35,2612,3.166]],["body/injectables/DefaultPageGuardService.html",[0,0.018,3,0.147,4,0.174,5,0.094,9,0.188,10,0.71,13,0.786,14,1.613,18,3.067,19,0.735,22,0.638,24,1.009,25,0.011,26,0.502,27,0.287,28,0.614,29,1.171,35,1.018,36,0.986,37,1.12,49,0.71,57,1.431,60,0.46,69,3.043,71,0.251,73,0.404,77,0.212,83,0.006,84,0.008,85,0.006,106,0.848,108,0.893,114,0.605,120,1.336,128,1.54,157,1.063,183,3.238,201,1.336,238,1.07,245,3.251,333,3.323,356,2.034,357,5.244,358,2.559,359,3.436,360,3.618,363,2.399,374,4.461,375,1.817,376,2.034,377,1.977,379,5.434,380,6.674,382,4.373,530,2.46,956,2.46,1053,3.067,1228,5.729,1234,6.064,1235,6.647,1268,5.608,1277,2.559,1278,2.559,1301,3.973,1581,3.973,1718,4.731,2612,5.956,2613,7.089,2614,8.331,2615,7.601,2616,6.467,2617,7.601,2618,6.467,2619,6.467,2620,4.981,2621,7.217,2622,6.467,2623,4.981,2624,4.981,2625,4.981,2626,6.306,2627,4.981,2628,4.373,2629,5.678,2630,5.678,2631,6.467,2632,4.981,2633,4.981,2634,6.467,2635,4.981,2636,4.981,2637,5.159,2638,3.973,2639,4.981,2640,4.981]],["title/components/DropdownComponent.html",[180,0.251,571,1.05]],["body/components/DropdownComponent.html",[0,0.015,3,0.122,4,0.145,5,0.108,7,1.592,9,0.157,10,0.628,13,0.696,19,0.65,22,0.697,24,1.102,25,0.011,26,0.61,27,0.32,28,0.727,29,1.091,32,1.363,35,1.1,36,1.065,37,0.893,42,1.916,44,1.032,45,1.044,48,1.326,49,0.719,57,0.947,58,1.195,60,0.474,71,0.229,73,0.336,75,0.838,77,0.122,83,0.005,84,0.007,85,0.005,87,1.255,89,1.717,94,1.468,106,0.975,114,0.696,115,0.936,116,2.462,118,2.317,119,2.388,120,1.403,121,2.151,123,2.533,124,2.533,130,2.22,132,2.412,136,1.344,137,1.662,138,1.513,139,1.383,140,1.468,141,1.609,142,1.322,144,2.086,146,2.354,147,2.086,150,3.168,154,2.448,164,2.448,170,0.707,172,1.343,180,0.383,187,1.903,189,1.468,191,1.425,215,0.687,338,2.367,435,1.48,446,1.016,469,1.044,495,1.103,522,4.566,571,1.729,610,1.44,652,1.073,653,1.103,654,1.134,655,1.199,658,0.936,659,1.487,661,1.188,663,1.188,677,1.103,678,1.48,679,2.041,680,1.199,681,1.199,682,0.988,683,1.199,684,1.044,685,1.199,686,1.044,687,1.199,688,1.073,689,1.199,690,1.073,691,1.199,692,1.073,693,1.199,694,1.073,695,1.134,696,1.199,697,1.044,698,1.654,699,1.073,700,1.134,701,1.199,702,1.073,703,1.199,704,1.073,705,1.199,706,1.044,707,1.199,708,1.199,709,1.044,710,1.199,711,1.073,712,1.199,713,1.044,714,1.199,715,1.073,716,1.893,717,1.073,718,1.016,719,1.016,720,1.654,721,1.073,722,1.103,723,1.199,724,1.044,725,1.199,726,1.073,727,1.199,728,1.073,729,1.199,730,1.016,731,1.199,732,1.073,733,1.199,734,1.103,735,1.166,736,1.199,737,1.044,738,0.988,739,1.199,740,1.044,741,1.199,742,1.016,743,1.199,744,1.044,745,1.134,746,1.073,747,1.199,748,1.103,749,1.199,750,1.073,751,1.199,752,1.044,753,1.199,754,1.073,755,1.134,756,1.073,757,1.044,758,1.166,759,0.91,760,1.044,761,1.199,762,1.044,763,1.199,764,1.044,765,1.199,766,1.044,767,1.199,768,1.044,769,1.199,770,1.044,771,1.199,772,1.044,773,1.199,774,1.044,775,1.134,776,1.199,791,1.775,793,2.05,794,1.56,863,1.199,1241,3.839,1307,3.523,1310,2.223,1339,2.223,1351,1.974,1363,4.035,2476,4.833,2524,3.311,2641,3.644,2642,5.724,2643,5.724,2644,6.551,2645,6.551,2646,6.551,2647,5.753,2648,5.724,2649,4.15,2650,4.15,2651,4.15,2652,4.15,2653,4.15,2654,4.15,2655,4.15,2656,4.15,2657,4.15,2658,4.15,2659,4.15,2660,4.15,2661,4.15,2662,4.15]],["title/directives/DuplicateCheckDirective.html",[215,0.71,762,1.08]],["body/directives/DuplicateCheckDirective.html",[0,0.02,3,0.168,4,0.199,5,0.107,9,0.215,13,0.855,22,0.57,24,0.887,25,0.011,26,0.442,27,0.289,28,0.54,29,1.002,32,1.675,33,1.554,49,0.624,60,0.495,71,0.246,73,0.461,75,1.148,77,0.207,83,0.007,84,0.009,85,0.007,106,1.301,108,0.964,114,0.855,158,2.402,172,1.164,193,2.704,201,0.941,208,2.816,215,1.164,217,4.272,299,1.789,314,3.332,363,2.091,376,2.213,377,2.151,411,2.784,424,3.923,507,2.607,528,5.186,576,3.332,634,3.38,658,1.282,659,1.164,695,1.554,759,1.247,762,2.008,1126,3.225,2663,6.706,2664,6.093,2665,4.994,2666,4.703,2667,6.706,2668,4.475,2669,8.466,2670,5.687,2671,3.502,2672,5.144,2673,5.687,2674,4.332,2675,3.697,2676,6.706,2677,5.687,2678,5.687,2679,3.502,2680,3.697,2681,5.687]],["title/components/EmailComponent.html",[180,0.251,709,1.08]],["body/components/EmailComponent.html",[0,0.012,3,0.097,4,0.115,5,0.091,7,0.743,9,0.125,10,0.533,11,1.718,13,0.59,14,2.06,17,1.945,19,0.552,22,0.708,24,1.219,25,0.011,26,0.629,27,0.325,28,0.761,29,0.822,32,1.157,33,1.328,35,1.061,36,1.121,37,0.514,42,1.835,44,1.04,45,0.83,48,1.125,49,0.897,57,0.804,58,1.263,60,0.477,71,0.223,73,0.267,75,0.666,77,0.097,83,0.007,84,0.006,85,0.004,87,1.065,89,1.364,94,2.911,106,0.562,108,0.678,112,3.965,114,0.59,115,1.3,117,3.632,118,1.718,119,1.77,120,1.122,121,1.826,122,1.654,123,2.15,124,2.15,125,2.717,126,2.717,127,3.088,128,1.793,129,3.379,130,2.63,131,3.137,132,2.18,136,1.068,137,1.32,138,1.202,139,1.099,140,1.166,141,1.279,142,1.164,144,1.202,146,2.12,147,1.202,149,1.932,150,3.219,151,3.225,153,1.568,154,2.721,155,2.717,156,1.459,157,1.036,158,1.037,159,1.568,161,1.459,164,2.077,170,0.562,171,1.694,172,1.122,180,0.337,189,1.166,191,1.132,193,1.068,201,0.546,215,0.546,216,4.694,238,0.804,253,2.399,285,2.227,299,1.528,300,0.703,373,1.718,411,2.12,424,3.351,432,2.991,435,1.459,439,1.291,446,0.807,469,0.83,495,0.877,554,2.846,571,0.807,590,3.226,610,1.222,652,0.853,653,0.877,654,0.901,655,0.953,658,0.743,659,1.47,661,1.008,663,1.008,677,0.877,678,1.256,679,1.838,680,0.953,681,0.953,682,0.785,683,0.953,684,0.83,685,0.953,686,0.83,687,0.953,688,0.853,689,0.953,690,0.853,691,0.953,692,0.853,693,0.953,694,0.853,695,0.901,696,0.953,697,0.83,698,1.404,699,0.853,700,0.901,701,0.953,702,0.853,703,0.953,704,0.853,705,0.953,706,0.83,707,0.953,708,0.953,709,1.601,710,0.953,711,0.853,712,0.953,713,0.83,714,0.953,715,0.853,716,1.666,717,0.853,718,0.807,719,0.807,720,1.404,721,0.853,722,0.877,723,0.953,724,0.83,725,0.953,726,0.853,727,0.953,728,0.853,729,0.953,730,0.807,731,0.953,732,0.853,733,0.953,734,0.877,735,0.927,736,0.953,737,0.83,738,0.785,739,0.953,740,0.83,741,0.953,742,0.807,743,0.953,744,0.83,745,0.901,746,0.853,747,0.953,748,0.877,749,0.953,750,0.853,751,0.953,752,0.83,753,0.953,754,0.853,755,0.901,756,0.853,757,0.83,758,0.927,759,0.723,760,0.83,761,0.953,762,0.83,763,0.953,764,0.83,765,0.953,766,0.83,767,0.953,768,0.83,769,0.953,770,0.83,771,0.953,772,0.83,773,0.953,774,0.83,775,0.901,776,0.953,788,1.491,789,2.005,829,2.467,863,0.953,1101,1.826,1113,2.167,1307,3.225,1310,1.766,1314,3.584,1318,2.031,1319,2.031,1320,2.031,1327,2.031,1328,2.031,1329,2.031,1330,2.031,1331,2.031,1332,2.031,1333,2.031,1334,2.031,1335,3.485,1339,1.766,1342,2.031,1343,2.031,1344,2.031,1345,1.845,1346,1.766,1351,1.568,1352,1.845,1356,2.991,1360,3.226,1361,3.379,1362,3.226,1364,3.551,1365,3.088,1369,2.601,1378,2.143,1380,2.143,1395,2.031,1397,2.031,1470,1.932,1471,2.143,2680,3.157,2682,2.895,2683,3.584,2684,2.846,2685,4.265,2686,6.441,2687,4.857,2688,4.857,2689,3.088,2690,4.857,2691,3.297,2692,4.857,2693,3.297,2694,3.875,2695,3.297,2696,4.857,2697,3.297,2698,3.297,2699,3.297,2700,3.297,2701,3.297,2702,3.297,2703,3.297,2704,5.766,2705,3.157,2706,4.857,2707,4.857,2708,3.297,2709,3.297,2710,2.399,2711,4.857,2712,3.297,2713,3.297,2714,7.094,2715,2.631,2716,2.631,2717,2.631,2718,2.895,2719,3.297,2720,4.857]],["title/components/ErrorContainerComponent.html",[180,0.251,711,1.11]],["body/components/ErrorContainerComponent.html",[0,0.018,3,0.152,4,0.181,5,0.125,9,0.196,19,0.831,22,0.537,25,0.011,26,0.568,27,0.196,29,0.944,32,1.578,35,0.692,36,0.671,37,1.034,44,1.195,45,1.301,48,1.535,57,1.096,71,0.181,73,0.419,77,0.152,83,0.006,84,0.008,85,0.006,142,1.337,170,1.412,172,1.096,180,0.427,215,0.856,435,1.496,446,1.266,469,1.301,495,1.375,571,1.266,610,1.667,652,1.338,653,1.375,654,1.414,655,1.495,658,1.166,659,1.5,661,1.375,663,1.375,677,1.375,678,1.714,679,2.228,680,1.495,681,1.495,682,1.232,683,1.495,684,1.301,685,1.495,686,1.301,687,1.495,688,1.338,689,1.495,690,1.338,691,1.495,692,1.338,693,1.495,694,1.338,695,1.414,696,1.495,697,1.301,698,1.915,699,1.338,700,1.414,701,1.495,702,1.338,703,1.495,704,1.338,705,1.495,706,1.301,707,1.495,708,1.495,709,1.301,710,1.495,711,1.994,712,1.495,713,1.301,714,1.495,715,1.338,716,2.113,717,1.338,718,1.266,719,1.266,720,1.915,721,1.338,722,1.375,723,1.495,724,1.301,725,1.495,726,1.338,727,1.495,728,1.338,729,1.495,730,1.266,731,1.495,732,1.338,733,1.495,734,1.375,735,1.454,736,1.495,737,1.301,738,1.232,739,1.495,740,1.301,741,1.495,742,1.266,743,1.495,744,1.301,745,1.414,746,1.338,747,1.495,748,1.375,749,1.495,750,1.338,751,1.495,752,1.301,753,1.495,754,1.338,755,1.414,756,1.338,757,1.301,758,1.454,759,1.134,760,1.301,761,1.495,762,1.301,763,1.495,764,1.301,765,1.495,766,1.301,767,1.495,768,1.301,769,1.495,770,1.301,771,1.495,772,1.301,773,1.495,774,1.301,775,1.414,776,1.495,1709,4.081,2721,6.42,2722,5.833,2723,4.542,2724,6.626,2725,6.626,2726,7.311,2727,6.626]],["title/interfaces/ErrorMessage.html",[131,1.835,777,0.539]],["body/interfaces/ErrorMessage.html",[3,0.19,4,0.226,5,0.121,9,0.244,10,0.834,22,0.523,25,0.011,27,0.244,28,0.721,36,0.985,42,2.154,60,0.514,77,0.238,83,0.008,84,0.009,85,0.008,108,0.759,131,3.247,132,2.257,158,2.389,169,5.15,176,2.283,201,1.256,238,1.068,634,3.361,777,0.811,779,2.152,1335,3.902,1574,4.763,1605,3.783,2445,3.458,2710,3.189,2728,6.668,2729,5.669,2730,6.456,2731,5.669,2732,6.456,2733,5.669,2734,6.668,2735,5.669,2736,5.669,2737,6.456]],["title/interfaces/FileUploaderMsg.html",[777,0.539,2738,3.423]],["body/interfaces/FileUploaderMsg.html",[0,0.007,3,0.12,4,0.067,5,0.153,7,0.719,9,0.198,10,0.576,12,3.622,19,0.219,21,2.015,25,0.011,26,0.408,27,0.179,28,0.183,29,0.748,33,1.295,37,0.977,42,1.679,44,0.575,51,1.423,52,1.938,53,1.331,57,0.319,58,0.882,60,0.379,71,0.271,72,0.825,73,0.156,74,1.582,75,0.389,76,0.825,77,0.094,83,0.004,84,0.004,85,0.002,87,0.423,91,2.814,106,1.194,108,0.946,114,0.234,115,0.719,122,0.435,128,1.546,138,0.703,140,1.442,154,1.744,156,0.854,158,1.883,170,1.348,172,1.107,179,0.917,180,0.238,185,2.036,193,0.624,197,1.079,201,1.38,208,0.772,214,0.748,218,1.079,231,2.073,233,1.033,234,2.793,236,0.854,238,1.218,242,0.825,245,1.744,260,2.353,270,1.277,274,0.725,275,1.708,276,1.254,285,0.884,295,3.396,299,1.003,301,1.4,305,0.624,309,3.781,316,1.744,319,1.079,320,1.033,322,1.539,323,4.61,324,1.188,338,0.798,339,2.545,340,1.539,342,1.063,343,1.694,354,2.814,355,2.355,363,0.573,367,3.622,370,0.991,373,0.682,377,0.59,398,1.869,416,1.277,417,3.029,421,1.694,422,2.545,435,0.528,441,2.39,472,1.079,473,1.033,476,1.13,498,1.694,502,1.694,507,1.463,521,1.681,528,1.254,530,0.953,539,1.331,542,1.539,554,1.869,558,3.009,561,3.891,575,1.188,576,1.13,586,1.079,599,1.254,604,1.423,607,1.539,609,1.869,610,1.321,629,1.694,653,0.513,654,0.527,658,0.92,659,0.319,661,0.4,663,0.4,672,2.201,675,0.953,676,0.917,713,0.485,777,0.242,779,0.643,780,1.095,781,1.095,788,1.055,789,1.435,790,1.785,791,1.364,792,2.027,794,0.725,815,0.953,816,1.13,818,1.708,819,0.884,820,1.079,839,2.39,840,1.423,848,1.188,854,0.825,857,0.884,863,0.557,870,1.13,904,1.079,912,2.073,918,1.364,922,1.331,954,1.13,956,0.953,971,2.512,999,1.539,1075,1.869,1081,1.576,1105,1.539,1113,2.514,1114,4.319,1133,1.331,1177,1.785,1201,2.353,1213,1.331,1218,1.694,1242,2.055,1250,1.423,1315,2.073,1348,1.331,1371,1.254,1384,2.073,1387,1.254,1398,0.798,1399,1.319,1400,0.798,1401,1.319,1402,1.319,1403,1.319,1404,0.798,1405,0.798,1406,1.319,1407,1.319,1408,0.798,1409,0.798,1410,0.798,1411,0.798,1412,0.798,1413,1.319,1414,1.277,1415,0.798,1416,1.319,1417,1.319,1418,0.798,1419,1.319,1420,0.798,1421,0.798,1422,0.798,1423,0.798,1424,1.96,1425,0.798,1426,0.798,1427,0.798,1428,0.798,1429,0.798,1430,0.798,1431,0.798,1432,0.798,1433,0.798,1434,0.798,1435,0.798,1436,0.798,1437,0.798,1438,0.798,1439,0.798,1440,0.798,1441,1.319,1442,0.798,1443,0.798,1444,0.798,1445,0.798,1446,0.798,1447,0.798,1448,0.798,1449,0.798,1450,0.798,1451,0.798,1452,0.798,1453,0.798,1454,0.798,1455,1.319,1456,0.798,1457,0.798,1458,0.798,1459,0.798,1460,0.798,1461,1.4,1462,0.798,1463,0.798,1464,0.798,1465,0.798,1466,0.798,1467,0.798,1468,0.798,1469,0.798,1480,4.965,1482,1.188,1483,1.869,1488,1.188,1492,3.314,1498,1.188,1505,2.073,1506,2.651,1513,2.538,1519,2.073,1523,3.081,1524,3.838,1533,0.917,1537,1.869,1541,1.079,1547,1.254,1604,4.416,1610,2.801,1611,2.353,1651,1.869,1652,2.512,1654,1.539,1655,1.423,1661,1.331,1675,1.254,1715,1.539,1768,1.423,2045,1.694,2227,1.694,2413,1.254,2428,2.201,2429,1.254,2432,2.353,2445,1.033,2457,1.965,2466,1.539,2520,1.423,2557,1.539,2684,1.869,2733,2.801,2738,3.254,2739,1.694,2740,1.539,2741,2.801,2742,2.201,2743,1.929,2744,3.19,2745,1.423,2746,1.331,2747,4.079,2748,4.512,2749,3.009,2750,1.929,2751,3.582,2752,2.512,2753,2.814,2754,3.19,2755,3.19,2756,1.929,2757,3.19,2758,3.19,2759,1.929,2760,3.19,2761,1.929,2762,1.929,2763,1.929,2764,1.929,2765,1.929,2766,1.929,2767,1.188,2768,1.929,2769,1.929,2770,1.929,2771,1.929,2772,3.582,2773,1.929,2774,3.254,2775,1.929,2776,3.19,2777,2.801,2778,3.19,2779,1.929,2780,3.19,2781,3.19,2782,1.929,2783,3.19,2784,3.19,2785,1.929,2786,1.254,2787,1.539,2788,1.694,2789,1.254,2790,1.539,2791,1.929,2792,1.929,2793,1.423,2794,1.423,2795,1.929,2796,4.079,2797,1.929,2798,1.929,2799,1.929,2800,1.929,2801,1.929,2802,1.929,2803,1.929,2804,1.929,2805,1.929,2806,1.929,2807,1.929,2808,1.929,2809,3.497,2810,1.929,2811,1.929,2812,1.539,2813,1.929,2814,1.929,2815,7.141,2816,1.929,2817,1.929,2818,1.694,2819,1.929,2820,1.423,2821,1.929,2822,1.929,2823,1.539,2824,2.545,2825,1.929,2826,4.079,2827,1.929,2828,1.929,2829,1.539,2830,1.929,2831,1.929,2832,1.929,2833,1.929,2834,3.19,2835,1.929,2836,1.929,2837,1.929,2838,1.929,2839,1.694,2840,1.929,2841,3.19,2842,1.929,2843,1.929,2844,4.079,2845,4.079,2846,1.929,2847,3.19,2848,2.801,2849,1.929,2850,2.801,2851,1.929,2852,1.929,2853,1.694,2854,1.929,2855,1.929,2856,1.929,2857,1.929,2858,1.929,2859,1.929,2860,1.929,2861,4.079,2862,1.694,2863,1.929,2864,1.694,2865,2.801,2866,3.19,2867,3.19,2868,1.929,2869,1.929,2870,1.694,2871,1.929,2872,1.929,2873,3.582,2874,1.929,2875,1.331,2876,3.19,2877,1.694,2878,2.814,2879,1.13,2880,4.188,2881,4.079,2882,1.694,2883,1.539,2884,1.929,2885,1.929,2886,1.539,2887,1.929,2888,4.74,2889,1.331,2890,3.19,2891,1.929,2892,1.13,2893,1.929,2894,4.079,2895,4.172,2896,4.966,2897,1.033,2898,4.74,2899,1.929,2900,1.929,2901,1.539,2902,1.929,2903,1.929,2904,1.929,2905,3.19,2906,1.539,2907,1.929,2908,1.929,2909,3.19,2910,1.929,2911,1.929,2912,1.929,2913,1.929,2914,1.929,2915,1.929,2916,1.929,2917,1.423,2918,1.929,2919,4.079,2920,3.19,2921,3.27,2922,1.423,2923,1.694,2924,5.986,2925,1.929,2926,1.423,2927,1.929,2928,1.929,2929,3.582,2930,1.539,2931,1.929,2932,1.929,2933,1.539,2934,1.929,2935,3.19,2936,1.929,2937,1.929,2938,1.929,2939,3.582,2940,1.929,2941,1.539,2942,1.929,2943,1.694,2944,1.423,2945,1.929,2946,1.929,2947,1.929,2948,1.929,2949,1.694,2950,1.539,2951,1.929,2952,3.19,2953,4.079,2954,1.929,2955,1.929,2956,1.929,2957,1.929,2958,1.929,2959,1.929,2960,1.929,2961,1.929,2962,4.079,2963,1.929,2964,1.929,2965,1.929,2966,1.929,2967,1.929,2968,1.929,2969,1.929,2970,1.929,2971,1.929,2972,1.929,2973,2.353,2974,3.19,2975,3.19,2976,1.929,2977,1.929,2978,7.362,2979,5.655,2980,3.19,2981,4.079,2982,3.19,2983,5.25,2984,1.929,2985,1.929,2986,1.929,2987,3.19,2988,4.079,2989,1.929,2990,1.929,2991,1.929,2992,4.162,2993,5.25,2994,1.929,2995,2.545,2996,5.986,2997,1.694,2998,1.331,2999,1.694,3000,1.539,3001,4.74,3002,1.929,3003,1.929,3004,5.25,3005,1.929,3006,1.929,3007,1.929,3008,1.929,3009,1.929,3010,1.929,3011,1.929,3012,1.929,3013,3.19,3014,1.929,3015,1.929,3016,1.929,3017,3.19,3018,3.19,3019,4.079,3020,1.929,3021,3.19,3022,1.929,3023,1.929,3024,1.929,3025,1.929,3026,3.19,3027,3.19,3028,1.929,3029,1.929,3030,1.929,3031,1.929,3032,1.929,3033,1.929,3034,1.929,3035,1.929,3036,4.74,3037,1.929,3038,3.19,3039,1.929,3040,1.694,3041,1.539,3042,1.929,3043,3.19,3044,1.929,3045,1.929,3046,4.74,3047,1.929,3048,1.929,3049,6.492,3050,1.929,3051,1.694,3052,2.801,3053,3.19,3054,1.929,3055,1.929,3056,4.079,3057,1.929,3058,5.25,3059,4.079,3060,4.079,3061,5.25,3062,1.929,3063,1.929,3064,1.929,3065,1.423,3066,1.929,3067,1.929,3068,1.423,3069,1.929,3070,1.929,3071,1.929,3072,3.19,3073,4.74,3074,4.74,3075,1.929,3076,5.655,3077,1.694,3078,1.423,3079,1.694,3080,1.929,3081,1.929,3082,3.19,3083,1.929,3084,3.19,3085,1.929,3086,1.929,3087,1.929,3088,3.19,3089,2.801,3090,1.929,3091,1.929,3092,1.929,3093,1.929,3094,1.929,3095,1.929,3096,1.929,3097,1.929,3098,1.929,3099,4.74,3100,1.929,3101,1.423,3102,1.929,3103,4.74,3104,3.19,3105,4.079,3106,4.74,3107,1.929,3108,1.929,3109,1.929,3110,1.929,3111,1.929,3112,1.929,3113,1.929,3114,1.929,3115,1.929,3116,1.929,3117,3.19,3118,4.079,3119,3.19,3120,1.929,3121,3.19,3122,1.929,3123,1.929,3124,1.929,3125,1.929,3126,1.929,3127,1.929,3128,4.079,3129,1.694,3130,1.929,3131,1.929,3132,1.929,3133,1.929,3134,1.254,3135,5.25,3136,4.74,3137,1.929,3138,1.929,3139,3.19,3140,1.694,3141,1.929,3142,1.929,3143,1.929,3144,1.929,3145,1.929,3146,1.929,3147,1.929,3148,1.929,3149,1.929,3150,1.929,3151,1.929,3152,1.929,3153,1.929,3154,1.929,3155,1.929,3156,1.929,3157,1.929,3158,3.19,3159,1.929,3160,1.929,3161,1.929,3162,3.19,3163,3.19,3164,4.74,3165,5.25,3166,1.694,3167,1.423,3168,1.929,3169,1.694,3170,1.694,3171,2.801,3172,1.929,3173,1.929,3174,1.929,3175,1.929,3176,1.929,3177,1.929,3178,1.929,3179,1.929,3180,1.929,3181,1.929,3182,4.079,3183,3.19,3184,1.929,3185,1.929,3186,1.929,3187,1.929,3188,3.19,3189,1.929,3190,1.929,3191,1.929,3192,4.74,3193,1.929,3194,1.929,3195,1.929,3196,3.19,3197,1.929,3198,1.929,3199,1.929,3200,1.929,3201,1.929,3202,1.929,3203,1.929,3204,1.929,3205,1.539,3206,1.929,3207,1.929,3208,1.929,3209,1.929,3210,3.19,3211,1.929,3212,1.929,3213,1.929,3214,1.929,3215,1.929,3216,1.929,3217,1.929,3218,1.929,3219,1.929,3220,1.929,3221,3.19,3222,3.19,3223,3.19,3224,1.929,3225,1.929,3226,3.19,3227,1.929,3228,1.929,3229,1.929,3230,1.929,3231,1.929,3232,1.929,3233,1.929,3234,1.929,3235,1.423,3236,1.929,3237,1.929,3238,1.929,3239,1.929,3240,1.929,3241,1.929,3242,1.929,3243,1.929,3244,1.929,3245,1.929,3246,1.929,3247,1.929,3248,1.694,3249,1.929,3250,1.929,3251,3.19,3252,3.19,3253,1.929,3254,1.929,3255,1.694,3256,1.929,3257,1.929]],["title/components/FormActionBarComponent.html",[180,0.251,715,1.11]],["body/components/FormActionBarComponent.html",[0,0.014,3,0.119,4,0.141,5,0.105,9,0.152,13,0.681,15,4.447,16,2.768,19,0.733,22,0.653,24,0.628,25,0.011,26,0.541,27,0.287,28,0.382,29,1.149,32,1.335,33,1.1,35,0.981,36,0.95,37,1.006,42,1.041,44,1.432,45,2.213,46,2.768,48,1.299,49,0.615,57,0.927,58,0.628,60,0.328,71,0.226,73,0.326,74,2.5,75,0.813,77,0.119,83,0.005,84,0.007,85,0.005,100,2.252,106,1.292,108,0.473,114,0.681,115,1.453,122,1.571,142,1.131,170,1.098,172,1.255,180,0.377,185,1.561,215,0.666,238,0.666,363,1.666,377,1.713,416,1.612,417,2.156,435,1.477,446,0.986,469,1.013,495,1.07,571,0.986,575,2.479,610,1.41,652,1.041,653,1.07,654,1.1,655,1.163,658,0.908,659,1.485,661,1.163,663,1.163,677,1.07,678,1.449,679,2.014,680,1.163,681,1.163,682,0.959,683,1.163,684,1.013,685,1.163,686,1.013,687,1.163,688,1.041,689,1.163,690,1.041,691,1.163,692,1.041,693,1.163,694,1.041,695,1.1,696,1.163,697,1.013,698,1.619,699,1.041,700,1.1,701,1.163,702,1.041,703,1.163,704,1.041,705,1.163,706,1.013,707,1.163,708,1.163,709,1.013,710,1.163,711,1.041,712,1.163,713,1.013,714,1.163,715,1.803,716,1.863,717,1.041,718,0.986,719,0.986,720,1.619,721,1.041,722,1.07,723,1.163,724,1.013,725,1.163,726,1.041,727,1.163,728,1.041,729,1.163,730,0.986,731,1.163,732,1.041,733,1.163,734,1.07,735,1.131,736,1.163,737,1.013,738,0.959,739,1.163,740,1.013,741,1.163,742,0.986,743,1.163,744,1.013,745,1.1,746,1.041,747,1.163,748,1.07,749,1.163,750,1.041,751,1.163,752,1.013,753,1.163,754,1.041,755,1.1,756,1.041,757,1.013,758,1.131,759,0.883,760,1.013,761,1.163,762,1.013,763,1.163,764,1.013,765,1.163,766,1.013,767,1.163,768,1.013,769,1.163,770,1.013,771,1.163,772,1.013,773,1.163,774,1.013,775,1.1,776,1.163,780,1.924,781,1.924,788,1.449,789,1.905,791,2.757,792,2.757,819,2.57,924,1.612,1099,4.921,1101,2.106,1102,5.143,1111,4.921,1113,1.513,1117,3.535,1398,1.665,1399,2.318,1400,1.665,1401,2.318,1402,2.318,1403,2.318,1404,1.665,1405,1.665,1406,2.318,1407,2.318,1408,1.665,1409,1.665,1410,1.665,1411,1.665,1412,1.665,1413,2.318,1414,2.244,1415,1.665,1416,2.318,1417,2.318,1418,1.665,1419,2.318,1420,1.665,1421,1.665,1422,1.665,1423,1.665,1424,2.883,1425,1.665,1426,1.665,1427,1.665,1428,1.665,1429,1.665,1430,1.665,1431,1.665,1432,1.665,1433,1.665,1434,1.665,1435,1.665,1436,1.665,1437,1.665,1438,1.665,1439,1.665,1440,1.665,1441,2.318,1442,1.665,1443,1.665,1444,1.665,1445,1.665,1446,1.665,1447,1.665,1448,1.665,1449,1.665,1450,1.665,1451,1.665,1452,1.665,1453,1.665,1454,1.665,1455,2.318,1456,1.665,1457,1.665,1458,1.665,1459,1.665,1460,1.665,1461,1.382,1462,1.665,1463,1.665,1464,1.665,1465,1.665,1466,1.665,1467,1.665,1468,1.665,1469,1.665,1737,4.447,1739,5.055,1786,4.447,1791,3.212,2530,3.212,2921,2.777,3077,3.535,3101,2.97,3258,6.513,3259,6.024,3260,2.97,3261,4.471,3262,4.471,3263,6.446,3264,4.921,3265,4.026,3266,4.026,3267,4.026,3268,4.026,3269,3.535,3270,3.535,3271,3.535,3272,3.212,3273,4.026,3274,4.026,3275,4.026,3276,4.026,3277,4.026,3278,3.535,3279,4.026,3280,4.026,3281,3.535,3282,4.026,3283,4.026]],["title/components/FormSubmitBarComponent.html",[180,0.251,717,1.11]],["body/components/FormSubmitBarComponent.html",[0,0.014,2,2.201,3,0.115,4,0.137,5,0.103,9,0.148,13,0.668,15,4.382,16,2.715,19,0.722,22,0.639,25,0.011,26,0.493,27,0.298,29,1.123,32,1.309,35,0.971,36,0.941,37,1.074,44,1.516,45,0.986,46,2.715,48,1.274,49,0.43,57,1.244,58,0.611,60,0.321,71,0.192,73,0.317,74,2.463,75,0.791,77,0.115,83,0.005,84,0.007,85,0.005,106,1.173,114,0.668,115,1.432,122,1.553,142,1.11,157,0.836,170,0.936,172,1.244,176,1.944,180,0.424,215,0.648,238,0.648,274,2.066,299,1.729,338,2.274,363,1.634,370,2.825,377,1.681,435,1.475,446,0.959,469,2.2,495,1.041,497,3.573,504,4.751,571,0.959,576,3.221,610,1.383,652,1.013,653,1.041,654,1.071,655,1.132,658,0.883,659,1.483,661,1.141,663,1.141,677,1.041,678,1.422,679,1.99,680,1.132,681,1.132,682,0.933,683,1.132,684,0.986,685,1.132,686,0.986,687,1.132,688,1.013,689,1.132,690,1.013,691,1.132,692,1.013,693,1.132,694,1.013,695,1.071,696,1.132,697,0.986,698,1.589,699,1.013,700,1.071,701,1.132,702,1.013,703,1.132,704,1.013,705,1.132,706,0.986,707,1.132,708,1.132,709,0.986,710,1.132,711,1.013,712,1.132,713,0.986,714,1.132,715,1.013,716,1.836,717,1.781,718,0.959,719,1.555,720,1.589,721,1.013,722,1.041,723,1.132,724,0.986,725,1.132,726,1.013,727,1.132,728,1.013,729,1.132,730,0.959,731,1.132,732,1.013,733,1.132,734,1.041,735,1.101,736,1.132,737,0.986,738,0.933,739,1.132,740,0.986,741,1.132,742,0.959,743,1.132,744,0.986,745,1.071,746,1.013,747,1.132,748,1.041,749,1.132,750,1.013,751,1.132,752,0.986,753,1.132,754,1.013,755,1.071,756,1.013,757,0.986,758,1.101,759,0.859,760,0.986,761,1.132,762,0.986,763,1.132,764,0.986,765,1.132,766,0.986,767,1.132,768,0.986,769,1.132,770,0.986,771,1.132,772,0.986,773,1.132,774,0.986,775,1.071,776,1.132,780,1.887,781,1.887,788,1.422,789,1.882,791,2.716,792,2.716,819,2.521,874,2.825,884,2.351,924,2.201,994,3.386,1101,2.066,1102,5.067,1398,1.62,1399,2.274,1400,1.62,1401,2.274,1402,2.274,1403,2.274,1404,1.62,1405,1.62,1406,2.274,1407,2.274,1408,1.62,1409,1.62,1410,1.62,1411,1.62,1412,1.62,1413,2.274,1414,2.201,1415,1.62,1416,2.274,1417,2.274,1418,1.62,1419,2.274,1420,1.62,1421,1.62,1422,1.62,1423,1.62,1424,2.849,1425,1.62,1426,1.62,1427,1.62,1428,1.62,1429,1.62,1430,1.62,1431,1.62,1432,1.62,1433,1.62,1434,1.62,1435,1.62,1436,1.62,1437,1.62,1438,1.62,1439,1.62,1440,1.62,1441,2.274,1442,1.62,1443,1.62,1444,1.62,1445,1.62,1446,1.62,1447,1.62,1448,1.62,1449,1.62,1450,1.62,1451,1.62,1452,1.62,1453,1.62,1454,1.62,1455,2.274,1456,1.62,1457,1.62,1458,1.62,1459,1.62,1460,1.62,1461,1.344,1462,1.62,1463,1.62,1464,1.62,1465,1.62,1466,1.62,1467,1.62,1468,1.62,1469,1.62,1737,4.382,1739,5.004,1786,4.382,1843,3.793,2469,3.221,2705,3.573,2895,4.056,3258,6.392,3259,5.911,3260,2.89,3261,4.386,3262,4.386,3264,3.439,3269,3.439,3284,6.887,3285,4.827,3286,4.386,3287,5.497,3288,5.497,3289,5.497,3290,4.827,3291,6.352,3292,5.497,3293,3.917,3294,3.917,3295,4.827,3296,5.494,3297,6.887,3298,5.497,3299,5.497,3300,4.386,3301,5.497,3302,3.917,3303,3.917]],["title/components/FullNameComponent.html",[180,0.251,718,1.05]],["body/components/FullNameComponent.html",[0,0.012,3,0.098,4,0.116,5,0.092,7,1.438,9,0.125,10,0.535,11,2.045,13,0.593,19,0.657,22,0.691,24,0.902,25,0.011,26,0.644,27,0.317,28,0.549,29,0.909,32,1.161,33,1.333,35,1.062,36,1.068,37,0.761,42,1.95,44,0.879,45,0.834,48,1.13,49,0.7,57,0.807,58,1.176,60,0.497,71,0.238,72,1.417,73,0.269,74,1.285,75,0.669,77,0.17,83,0.004,84,0.006,85,0.004,87,1.069,94,1.172,106,0.83,114,0.593,115,1.304,116,2.174,118,2.045,119,2.108,120,1.353,121,1.833,122,1.438,123,2.158,124,2.158,128,1.693,130,1.891,136,1.073,137,1.327,138,1.208,139,1.105,140,1.172,141,1.285,142,1.167,144,1.777,146,2.126,147,1.777,157,0.707,164,2.085,170,0.564,172,1.216,178,1.52,180,0.397,187,1.52,189,1.172,191,2.333,205,2.823,215,0.548,238,0.548,298,3.597,299,1.534,301,1.674,319,1.854,363,1.449,373,1.724,375,1.37,376,1.534,377,1.491,435,1.46,446,1.416,469,0.834,495,0.881,530,3.15,570,2.505,571,0.811,610,1.227,652,0.857,653,0.881,654,0.906,655,0.958,658,0.747,659,1.47,661,1.012,663,1.012,677,0.881,678,1.261,679,1.843,680,0.958,681,0.958,682,0.789,683,0.958,684,0.834,685,0.958,686,0.834,687,0.958,688,0.857,689,0.958,690,0.857,691,0.958,692,0.857,693,0.958,694,0.857,695,0.906,696,0.958,697,0.834,698,1.409,699,0.857,700,0.906,701,0.958,702,0.857,703,0.958,704,0.857,705,0.958,706,0.834,707,0.958,708,0.958,709,0.834,710,0.958,711,0.857,712,0.958,713,0.834,714,0.958,715,0.857,716,1.671,717,0.857,718,1.845,719,1.799,720,1.409,721,0.857,722,0.881,723,0.958,724,0.834,725,0.958,726,0.857,727,0.958,728,0.857,729,0.958,730,0.811,731,0.958,732,0.857,733,0.958,734,0.881,735,0.931,736,0.958,737,0.834,738,0.789,739,0.958,740,0.834,741,0.958,742,0.811,743,0.958,744,0.834,745,0.906,746,0.857,747,0.958,748,0.881,749,0.958,750,0.857,751,0.958,752,0.834,753,0.958,754,0.857,755,0.906,756,0.857,757,0.834,758,0.931,759,0.727,760,0.834,761,0.958,762,0.834,763,0.958,764,0.834,765,0.958,766,0.834,767,0.958,768,0.834,769,0.958,770,0.834,771,0.958,772,0.834,773,0.958,774,0.834,775,0.906,776,0.958,777,0.416,788,1.261,789,1.581,791,2.473,792,1.417,793,2.857,794,1.246,863,0.958,884,2.085,1017,2.857,1101,1.833,1126,2.235,1133,3.99,1213,3.364,1287,3.364,1385,2.857,1732,2.445,2705,3.169,2742,2.287,2767,4.377,2878,3.364,3304,6.803,3305,6.291,3306,2.644,3307,4.705,3308,5.088,3309,3.89,3310,3.89,3311,3.89,3312,3.99,3313,4.614,3314,4.614,3315,4.614,3316,5.079,3317,5.014,3318,4.267,3319,6.452,3320,6.452,3321,6.452,3322,5.079,3323,4.876,3324,3.314,3325,3.314,3326,3.314,3327,3.314,3328,3.314,3329,3.314,3330,3.314,3331,3.314,3332,3.314,3333,3.314,3334,3.314,3335,3.314,3336,4.267,3337,3.314,3338,3.314,3339,3.314,3340,3.314,3341,3.737,3342,3.597,3343,3.314,3344,3.89,3345,3.364,3346,4.281,3347,4.281,3348,4.281,3349,4.281,3350,3.89,3351,3.314,3352,3.314,3353,2.91,3354,2.644,3355,4.281,3356,2.644,3357,5.079,3358,2.644,3359,5.079,3360,2.644,3361,5.079,3362,2.445,3363,2.445,3364,2.91,3365,2.91,3366,2.91,3367,2.91,3368,2.91,3369,2.91,3370,5.079,3371,5.079,3372,2.91,3373,2.91,3374,6.241,3375,7.108]],["title/interfaces/FullNameErrorMsg.html",[777,0.539,3336,3.166]],["body/interfaces/FullNameErrorMsg.html",[0,0.018,3,0.146,4,0.174,5,0.093,7,1.454,9,0.187,10,0.708,11,1.754,19,0.564,25,0.011,26,0.611,27,0.244,28,0.721,29,0.919,33,1.356,35,0.664,36,0.984,37,0.774,42,2.153,58,1.184,60,0.509,71,0.275,72,2.121,73,0.402,74,1.923,75,1.001,77,0.211,83,0.006,84,0.008,85,0.006,87,1.088,106,0.845,114,0.603,115,1.454,116,2.424,118,1.754,119,1.808,120,1.255,122,1.118,128,1.536,144,1.808,146,2.149,147,1.808,164,2.121,172,1.358,178,2.274,180,0.419,187,2.274,189,1.754,191,2.7,205,2.854,238,0.82,298,3.659,299,1.56,301,1.702,319,2.774,363,1.474,373,1.754,375,1.394,376,1.56,377,1.516,435,0.82,446,1.214,530,3.185,570,2.548,659,0.82,661,1.029,663,1.029,718,1.754,719,1.754,777,0.623,779,1.653,788,1.668,789,1.763,791,2.758,792,2.121,793,3.185,794,1.864,863,1.433,884,2.121,1017,2.906,1126,2.274,1133,3.421,1213,3.421,1287,3.421,1385,2.906,1732,3.659,2705,3.224,2742,3.421,2767,4.413,2878,3.421,3304,3.956,3305,3.659,3306,3.956,3307,4.758,3308,5.145,3309,3.956,3310,3.956,3311,3.956,3312,3.421,3313,3.956,3314,3.956,3315,3.956,3316,4.355,3317,5.949,3318,3.659,3319,4.355,3320,4.355,3321,4.355,3322,4.355,3336,5.287,3341,3.779,3342,3.659,3344,3.956,3345,3.421,3346,4.355,3347,4.355,3348,4.355,3349,4.355,3350,3.956,3353,4.355,3354,3.956,3355,5.663,3356,3.956,3357,6.293,3358,3.956,3359,6.293,3360,3.956,3361,6.293,3362,3.659,3363,3.659,3364,4.355,3365,4.355,3366,4.355,3367,4.355,3368,4.355,3369,4.355,3370,6.293,3371,6.293,3372,4.355,3373,4.355]],["title/interfaces/GeoAddressResult.html",[777,0.539,795,2.4]],["body/interfaces/GeoAddressResult.html",[0,0.018,3,0.153,4,0.182,5,0.098,9,0.197,10,0.73,14,1.685,17,2.442,25,0.011,26,0.404,27,0.302,37,1.038,60,0.518,62,3.206,71,0.286,73,0.422,77,0.196,78,3.05,83,0.006,84,0.008,85,0.006,87,1.142,106,0.887,108,0.939,170,1.316,201,1.374,214,2.019,238,1.101,240,3.722,242,3.415,244,3.05,245,2.226,246,3.383,256,4.097,258,5.059,265,5.308,275,3.563,276,3.383,277,4.59,281,3.591,300,1.419,315,3.05,316,2.226,319,2.912,324,3.206,356,2.093,370,2.675,564,2.387,570,3.419,573,4.153,574,3.998,575,3.206,576,3.05,595,2.226,777,0.654,779,1.735,786,4.613,795,4.102,797,3.419,800,3.622,820,2.912,835,5.015,907,3.383,924,2.084,1177,4.102,1241,3.05,1277,2.675,1278,2.675,1533,2.475,1577,3.84,1597,3.84,1612,4.153,1625,3.591,2548,3.383,2752,3.206,2897,2.788,2921,3.591,3376,4.153,3377,7.012,3378,4.153,3379,3.206,3380,4.571,3381,4.571,3382,6.439,3383,4.571,3384,4.571,3385,4.571,3386,4.571,3387,4.571,3388,4.571,3389,4.571,3390,4.571,3391,4.571,3392,4.571,3393,4.571,3394,4.571,3395,4.571,3396,4.571,3397,4.571,3398,4.571,3399,4.571,3400,5.842,3401,4.571,3402,4.571,3403,4.571,3404,4.571,3405,4.571,3406,4.571,3407,4.571,3408,4.571,3409,4.571,3410,4.571,3411,5.842,3412,4.571,3413,4.571,3414,4.571,3415,4.571,3416,4.571,3417,4.571]],["title/components/GeocoderInputComponent.html",[180,0.251,721,1.11]],["body/components/GeocoderInputComponent.html",[0,0.01,3,0.081,4,0.096,5,0.079,7,1.306,9,0.104,10,0.464,12,2.916,13,0.514,19,0.312,22,0.689,24,1.201,25,0.011,26,0.619,27,0.315,28,0.741,29,1.097,32,1.007,35,1.031,36,1.023,37,1.184,40,1.688,43,2.364,44,0.762,45,0.69,48,0.979,49,0.845,52,2.231,56,1.891,57,0.699,58,1.271,60,0.465,71,0.261,73,0.222,75,0.553,77,0.081,83,0.006,84,0.005,85,0.009,87,0.927,89,1.134,94,0.97,106,0.467,108,0.681,114,0.514,115,1.163,116,1.938,118,1.824,119,1.88,120,1.383,121,1.588,122,1.306,123,2.282,124,2.282,128,1.695,130,2,132,1.861,136,0.888,137,1.098,138,0.999,139,0.914,140,0.97,141,1.063,142,1.041,144,0.999,146,2.204,147,0.999,150,2.677,153,2.01,154,1.807,157,0.585,158,1.33,164,1.173,170,0.987,172,1.177,180,0.301,185,1.063,187,1.938,189,0.97,190,1.782,191,1.451,201,1.036,215,0.454,238,1.208,242,2.828,244,1.607,268,3.767,275,3.353,285,1.257,299,0.862,300,0.585,301,1.451,312,1.782,316,1.173,317,2.407,318,2.407,319,1.534,335,2.916,342,0.914,351,2.756,354,3.558,355,0.941,375,1.449,411,1.719,417,1.468,435,1.44,439,0.729,446,0.671,469,0.69,495,0.729,508,2.603,531,1.938,558,3.805,571,0.671,573,1.354,574,1.304,578,2.023,585,3.352,591,1.607,599,1.782,600,2.407,604,3.118,610,1.063,652,0.709,653,0.729,654,0.749,655,0.792,658,0.618,659,1.453,661,0.877,663,0.877,675,1.354,676,1.304,677,0.729,678,1.093,679,1.675,680,0.792,681,0.792,682,0.653,683,0.792,684,0.69,685,0.792,686,0.69,687,0.792,688,0.709,689,0.792,690,0.709,691,0.792,692,0.709,693,0.792,694,0.709,695,0.749,696,0.792,697,0.69,698,1.221,699,0.709,700,0.749,701,0.792,702,0.709,703,0.792,704,0.709,705,0.792,706,0.69,707,0.792,708,0.792,709,0.69,710,0.792,711,0.709,712,0.792,713,0.69,714,0.792,715,0.709,716,1.49,717,0.709,718,0.671,719,0.671,720,1.221,721,1.499,722,2.048,723,0.792,724,0.69,725,0.792,726,0.709,727,0.792,728,0.709,729,0.792,730,0.671,731,0.792,732,0.709,733,0.792,734,0.729,735,0.77,736,0.792,737,0.69,738,0.653,739,0.792,740,0.69,741,0.792,742,0.671,743,0.792,744,0.69,745,0.749,746,0.709,747,0.792,748,0.729,749,0.792,750,0.709,751,0.792,752,0.69,753,0.792,754,0.709,755,0.749,756,1.334,757,0.69,758,0.77,759,0.601,760,0.69,761,0.792,762,0.69,763,0.792,764,0.69,765,0.792,766,0.69,767,0.792,768,0.69,769,0.792,770,0.69,771,0.792,772,0.69,773,0.792,774,0.69,775,0.749,776,0.792,788,1.334,789,1.41,790,2.885,794,1.03,795,2.364,796,2.023,797,4.236,798,2.023,800,2.547,803,1.782,805,2.603,807,2.023,815,1.354,829,2.428,831,4.619,843,2.916,863,0.792,888,1.688,904,2.364,924,1.692,929,1.607,953,3.767,956,2.862,966,2.01,969,3.118,973,2.023,974,2.023,1053,3.176,1091,2.364,1101,1.588,1113,1.938,1177,1.534,1180,2.603,1307,2.977,1310,1.468,1339,1.468,1351,1.304,1360,2.364,1362,3.502,1378,2.747,1625,2.916,1816,5.497,2432,4.276,2437,2.023,2535,2.187,2538,2.023,2557,4.114,2576,3.118,2684,2.477,2694,3.372,2736,2.407,2742,3.998,2753,2.916,2820,3.805,2848,2.407,2850,2.407,2892,1.607,2897,1.468,2917,2.023,2999,2.407,3248,3.711,3285,4.528,3354,2.187,3379,4.383,3418,7.464,3419,6.781,3420,2.407,3421,4.226,3422,5.157,3423,4.226,3424,4.226,3425,5.157,3426,5.157,3427,5.157,3428,5.157,3429,5.157,3430,6.26,3431,5.157,3432,4.226,3433,4.226,3434,4.226,3435,4.226,3436,4.226,3437,4.226,3438,2.742,3439,2.742,3440,2.742,3441,2.742,3442,2.742,3443,2.742,3444,2.742,3445,4.226,3446,2.742,3447,2.742,3448,4.226,3449,2.742,3450,4.226,3451,2.742,3452,4.226,3453,2.742,3454,4.226,3455,5.795,3456,2.742,3457,2.742,3458,2.742,3459,4.226,3460,2.742,3461,2.742,3462,2.742,3463,2.742,3464,2.742,3465,2.742,3466,2.742,3467,2.742,3468,4.226,3469,2.742,3470,4.226,3471,2.742,3472,4.226,3473,4.226,3474,2.742,3475,5.089,3476,4.226,3477,2.742,3478,2.742,3479,2.742,3480,2.742,3481,2.742,3482,2.742,3483,2.742,3484,2.742,3485,2.742,3486,2.742,3487,2.742,3488,2.742,3489,2.742,3490,5.157,3491,2.742,3492,4.226,3493,4.226,3494,5.157,3495,5.157,3496,2.742,3497,4.226,3498,2.742,3499,2.742,3500,2.742,3501,2.742,3502,2.407,3503,2.742,3504,2.742,3505,2.742,3506,2.742,3507,2.742,3508,2.742,3509,2.742,3510,2.742,3511,2.742,3512,2.407,3513,2.742,3514,2.742,3515,2.742,3516,2.742,3517,2.407,3518,2.742,3519,2.187,3520,2.742,3521,2.742,3522,4.226,3523,2.187,3524,2.742,3525,2.742,3526,2.742,3527,2.742,3528,2.742,3529,5.795,3530,4.226]],["title/injectables/GeocoderService.html",[356,1.35,3379,2.643]],["body/injectables/GeocoderService.html",[0,0.015,3,0.122,4,0.145,5,0.078,9,0.157,10,0.627,13,0.795,14,2.397,17,2.711,19,0.471,22,0.69,24,1.305,25,0.011,26,0.638,27,0.32,28,0.77,29,0.59,35,0.945,36,0.915,37,1.021,49,0.891,60,0.492,61,3.943,62,2.551,69,3.064,70,1.97,71,0.268,73,0.336,77,0.168,78,2.427,83,0.005,84,0.007,85,0.005,87,1.253,94,2.827,106,0.705,108,0.87,157,1.396,170,1.382,201,1.298,214,1.606,220,3.055,231,2.692,238,1.083,240,4.639,242,3.166,244,3.835,245,1.771,246,4.812,247,5.018,248,5.22,249,5.205,250,4.514,251,5.018,252,4.559,255,3.637,256,4.345,258,5.28,260,4.216,261,3.304,262,3.637,264,3.637,265,5.629,267,4.03,268,3.715,269,4.559,270,1.658,271,2.692,272,3.637,273,3.304,274,1.557,275,4.345,276,4.254,277,5.28,279,3.304,280,3.637,281,4.514,282,2.692,283,3.637,284,3.055,285,1.899,286,3.637,287,3.637,288,3.637,289,4.216,291,3.637,293,3.637,294,5.746,295,3.355,297,3.637,298,3.055,299,1.303,300,1.505,301,1.422,302,3.637,303,2.444,304,5.018,305,1.85,306,3.637,307,3.637,308,2.857,309,3.304,315,2.427,316,1.771,319,2.317,324,2.551,356,1.798,358,2.128,370,2.128,564,1.899,570,2.128,573,3.485,574,3.355,575,2.551,576,3.349,585,3.715,595,2.444,777,0.52,786,4.201,795,3.661,797,3.362,800,3.232,820,3.197,835,4.485,907,2.692,924,2.288,1177,4.141,1241,3.349,1277,2.128,1278,2.128,1533,1.97,1577,3.055,1597,3.055,1612,3.304,1625,2.857,2548,3.715,2752,2.551,2897,2.218,2921,2.857,3376,3.304,3377,5.018,3378,3.304,3379,3.52,3380,5.746,3381,5.018,3382,6.888,3383,5.018,3384,3.637,3385,5.018,3386,3.637,3387,3.637,3388,3.637,3389,3.637,3390,3.637,3391,3.637,3392,3.637,3393,3.637,3394,3.637,3395,3.637,3396,3.637,3397,3.637,3398,3.637,3399,5.018,3400,5.746,3401,5.018,3402,5.018,3403,5.018,3404,3.637,3405,3.637,3406,3.637,3407,3.637,3408,3.637,3409,3.637,3410,3.637,3411,5.018,3412,3.637,3413,3.637,3414,3.637,3415,3.637,3416,3.637,3417,3.637,3531,5.715,3532,5.715,3533,4.141,3534,4.141,3535,4.141,3536,4.141,3537,4.141,3538,4.141,3539,4.141,3540,4.141,3541,4.141,3542,4.141,3543,4.141,3544,4.141,3545,4.141]],["title/components/HeaderComponent.html",[180,0.251,724,1.08]],["body/components/HeaderComponent.html",[0,0.015,3,0.124,4,0.147,5,0.109,9,0.159,10,0.635,13,0.703,19,0.478,20,2.356,21,3.8,22,0.668,24,0.902,25,0.011,26,0.578,27,0.291,28,0.549,29,0.824,32,1.377,35,0.951,36,0.921,44,1.043,45,1.06,48,1.339,49,0.78,57,0.956,58,0.902,60,0.49,68,3.234,69,1.686,71,0.231,73,0.341,76,1.801,77,0.124,83,0.005,84,0.007,85,0.005,108,0.776,114,0.703,115,1.488,120,1.092,122,1.602,128,1.832,142,1.167,157,0.898,170,0.717,172,1.176,180,0.386,215,0.697,303,1.801,305,1.872,319,2.356,338,1.742,435,1.481,446,1.031,469,1.06,478,4.123,480,5.242,481,5.076,482,5.076,495,1.12,528,2.737,554,3.387,571,1.031,610,1.936,652,1.089,653,1.12,654,1.151,655,1.217,658,0.949,659,1.488,661,1.2,663,1.2,677,1.12,678,1.495,679,2.053,680,1.217,681,1.217,682,1.003,683,1.217,684,1.06,685,1.217,686,1.06,687,1.217,688,1.089,689,1.217,690,1.089,691,1.217,692,1.089,693,1.217,694,1.089,695,1.151,696,1.217,697,1.06,698,1.671,699,1.089,700,1.151,701,1.217,702,1.089,703,1.217,704,1.089,705,1.217,706,1.06,707,1.217,708,1.217,709,1.06,710,1.217,711,1.089,712,1.217,713,1.06,714,1.217,715,1.089,716,1.908,717,1.089,718,1.031,719,1.031,720,1.671,721,1.089,722,1.12,723,1.217,724,1.936,725,1.217,726,1.089,727,1.217,728,1.089,729,1.217,730,1.031,731,1.217,732,1.089,733,1.217,734,1.12,735,1.183,736,1.217,737,1.06,738,1.003,739,1.217,740,1.06,741,1.217,742,1.031,743,1.217,744,1.06,745,1.151,746,1.089,747,1.217,748,1.12,749,1.217,750,1.089,751,1.217,752,1.06,753,1.217,754,1.089,755,1.151,756,1.089,757,1.06,758,1.183,759,0.923,760,1.06,761,1.217,762,1.06,763,1.217,764,1.06,765,1.217,766,1.06,767,1.217,768,1.06,769,1.217,770,1.06,771,1.217,772,1.06,773,1.217,774,1.06,775,1.151,776,1.217,857,1.931,1081,2.855,1083,3.988,1091,2.356,1184,2.737,1242,1.445,1315,2.737,1637,4.612,1661,2.905,2441,4.612,2477,4.612,2529,2.737,2753,2.905,3523,4.612,3546,3.697,3547,5.781,3548,5.781,3549,6.239,3550,4.265,3551,4.612,3552,3.988,3553,7.105,3554,7.105,3555,5.781,3556,5.781,3557,5.781,3558,5.781,3559,5.781,3560,6.601,3561,6.601,3562,7.105,3563,5.781,3564,7.105,3565,6.601,3566,7.447,3567,6.601,3568,5.781,3569,5.781,3570,4.211,3571,4.211,3572,4.211,3573,4.211,3574,4.211,3575,5.781,3576,4.211,3577,4.211,3578,4.211,3579,5.076,3580,3.697,3581,3.697,3582,3.697,3583,4.211,3584,4.211,3585,4.211,3586,4.211,3587,4.211,3588,4.211,3589,4.211,3590,5.781,3591,4.211,3592,4.211,3593,4.211,3594,4.211,3595,4.211,3596,4.211,3597,4.211]],["title/interfaces/IRadioItems.html",[777,0.539,3598,3.166]],["body/interfaces/IRadioItems.html",[0,0.018,3,0.152,4,0.18,5,0.097,9,0.194,10,0.725,19,0.584,25,0.011,27,0.291,28,0.627,33,1.405,35,0.884,36,1.131,37,0.802,42,1.707,44,1.315,58,1.137,60,0.476,70,2.445,71,0.269,73,0.417,75,1.037,77,0.215,83,0.006,84,0.008,85,0.006,87,1.127,106,0.875,108,0.604,112,3.139,114,0.625,115,1.488,117,2.753,120,0.85,122,1.159,131,2.823,132,2.555,144,1.874,146,2.2,147,1.874,150,2.823,154,2.823,157,1.097,164,2.198,171,2.641,172,1.347,176,2.334,180,0.386,189,1.818,191,2.265,193,1.664,197,4.303,238,0.85,274,1.932,300,1.097,375,1.445,416,3.185,435,0.85,439,1.755,521,1.962,653,1.367,659,0.85,661,1.067,663,1.067,742,1.785,777,0.645,779,1.713,788,1.707,789,1.993,829,2.827,855,3.139,863,1.485,929,3.867,1078,4.553,1082,4.869,1127,5.816,1153,4.101,1307,3.139,1335,3.391,1345,2.876,1346,2.753,1351,2.445,1352,2.876,1365,2.753,1584,4.553,2680,3.341,2812,4.101,3550,4.869,3598,5.869,3599,4.101,3600,6.859,3601,5.795,3602,5.265,3603,5.795,3604,6.401,3605,5.265,3606,5.795,3607,6.754,3608,5.795,3609,6.754,3610,5.795,3611,5.795,3612,6.401,3613,4.101,3614,4.514,3615,4.514,3616,4.514,3617,6.754,3618,4.101,3619,4.514,3620,4.514]],["title/interfaces/ISpaEnvResponse.html",[777,0.539,3621,3.423]],["body/interfaces/ISpaEnvResponse.html",[0,0.017,3,0.168,4,0.113,5,0.061,9,0.122,10,0.525,16,2.814,17,1.463,25,0.011,27,0.305,29,0.898,33,1.557,35,0.433,37,1.099,43,1.808,44,1.028,47,2.384,52,1.549,58,0.983,60,0.519,66,1.73,69,1.294,71,0.262,72,1.382,73,0.262,74,1.855,75,0.652,77,0.168,78,1.893,83,0.004,84,0.006,85,0.004,87,0.709,106,1.324,108,0.67,114,0.581,115,1.079,116,1.798,118,1.143,119,1.178,120,1.165,122,1.079,128,1.14,140,1.692,144,1.178,146,1.595,147,1.178,156,1.43,157,0.689,164,1.382,170,1.324,172,1.287,176,2.378,180,0.368,182,2.562,187,1.481,189,1.143,191,1.642,201,0.535,220,3.53,234,1.596,238,1.165,240,2.677,242,2.694,244,1.893,245,1.382,246,2.1,256,2.947,258,4.346,268,2.1,270,2.522,274,1.214,275,3.052,276,2.1,277,3.301,282,4.095,284,2.384,289,4.648,300,1.021,305,2.423,315,1.893,316,1.382,338,1.336,342,1.595,344,1.99,345,2.578,363,1.422,371,5.891,373,1.692,375,1.601,376,1.016,377,1.463,411,1.077,416,1.294,422,3.817,427,2.578,435,0.943,447,2.837,469,1.585,472,2.677,473,1.73,476,1.893,478,1.66,487,2.229,490,5.025,491,5.003,495,1.99,496,5.163,497,2.1,504,2.229,545,1.808,546,1.99,586,1.808,598,1.808,604,3.53,609,2.804,610,0.813,634,1.43,659,0.535,661,0.67,663,0.67,667,1.99,675,1.596,676,1.537,697,1.585,777,0.406,779,1.077,788,1.629,789,1.838,791,2.437,792,2.046,793,2.363,810,2.229,819,1.481,839,2.804,848,3.88,857,3.229,918,1.382,924,1.916,966,2.996,1030,3.931,1113,1.214,1126,1.481,1177,3.762,1178,2.384,1180,2.947,1226,2.1,1257,3.301,1287,2.229,1481,1.893,1515,2.1,1533,1.537,1577,2.384,1587,3.53,1597,2.384,1604,2.384,1605,2.804,1613,2.837,1625,2.229,1651,3.339,1652,1.99,1653,4.201,1657,2.837,1660,4.201,1661,2.229,1662,2.837,1663,2.578,1664,2.837,1666,2.837,1667,4.201,1668,2.837,1670,2.837,1731,3.817,1762,5.025,1768,2.384,1952,4.201,2413,3.11,2445,3.374,2467,2.578,2529,3.11,2741,2.837,2746,3.301,2752,2.947,2787,2.578,2788,2.837,2789,3.11,2818,2.837,2862,2.837,2870,2.837,2880,2.578,2882,4.201,2943,4.201,2944,3.53,2992,2.837,3052,2.837,3134,4.095,3235,3.53,3312,2.229,3552,3.301,3621,4.546,3622,2.837,3623,2.578,3624,2.384,3625,7.043,3626,6.184,3627,4.785,3628,5.905,3629,6.299,3630,6.299,3631,6.299,3632,6.299,3633,6.299,3634,6.299,3635,6.299,3636,6.299,3637,6.299,3638,6.299,3639,6.299,3640,6.299,3641,6.299,3642,3.231,3643,3.231,3644,3.231,3645,2.837,3646,3.231,3647,3.231,3648,3.231,3649,3.231,3650,3.231,3651,2.837,3652,3.231,3653,4.785,3654,4.785,3655,4.201,3656,6.299,3657,6.299,3658,4.785,3659,3.817,3660,4.785,3661,4.785,3662,5.905,3663,5.025,3664,4.785,3665,4.785,3666,4.201,3667,4.201,3668,3.817,3669,4.201,3670,4.785,3671,4.785,3672,4.785,3673,7.043,3674,4.785,3675,4.785,3676,4.785,3677,4.785,3678,4.785,3679,4.785,3680,4.785,3681,4.785,3682,4.785,3683,4.785,3684,4.785,3685,4.785,3686,4.785,3687,4.785,3688,4.201,3689,3.231,3690,3.231,3691,2.837,3692,3.231,3693,2.837,3694,2.578,3695,3.231,3696,2.578,3697,3.231,3698,4.785,3699,2.578,3700,3.231,3701,3.231,3702,3.231,3703,3.231,3704,3.231,3705,4.785,3706,3.231,3707,2.837,3708,2.837,3709,3.231,3710,3.231,3711,2.837,3712,3.231,3713,4.201,3714,2.837,3715,3.231,3716,3.231,3717,4.785,3718,4.785,3719,4.785,3720,3.231,3721,3.231,3722,3.231,3723,5.698,3724,3.231,3725,3.231,3726,2.837,3727,3.231,3728,2.837,3729,3.231,3730,3.231,3731,3.231,3732,3.231,3733,2.578,3734,3.231,3735,3.231,3736,2.837,3737,3.231,3738,3.231,3739,3.231,3740,3.231,3741,3.231,3742,3.231,3743,3.231,3744,4.785,3745,3.231,3746,3.231,3747,3.231,3748,3.231,3749,3.231,3750,3.231,3751,3.231,3752,2.384,3753,3.231,3754,3.231,3755,3.231,3756,3.231,3757,3.231,3758,3.231,3759,3.231,3760,3.231,3761,3.231,3762,3.231,3763,3.231,3764,3.231,3765,6.299,3766,6.299,3767,3.231,3768,3.231,3769,3.231,3770,3.231,3771,3.231,3772,3.231,3773,3.231,3774,3.231,3775,3.231,3776,3.231,3777,3.231,3778,3.231,3779,3.231]],["title/guards/LoadPageGuardService.html",[360,2.4,374,2.96]],["body/guards/LoadPageGuardService.html",[0,0.016,3,0.132,4,0.156,5,0.084,9,0.169,13,0.885,14,2.203,16,3.596,19,0.507,20,2.498,21,3.867,22,0.59,24,1.136,25,0.011,26,0.565,27,0.275,28,0.691,29,1.115,44,1.313,49,0.747,52,1.948,57,1.417,60,0.398,65,2.915,71,0.255,73,0.362,76,1.909,77,0.132,83,0.005,84,0.007,85,0.005,106,0.76,108,0.856,114,0.543,122,1.356,128,1.734,156,1.976,157,0.953,179,2.861,182,2.391,183,3.91,186,4.799,196,4.19,201,0.995,245,3.525,274,2.261,275,4.07,305,2.203,316,1.909,338,2.488,356,1.892,357,5.841,359,3.08,361,4.192,362,3.091,363,1.788,367,4.15,374,5.747,375,1.691,376,2.463,377,2.226,387,4.799,439,1.935,473,4.192,474,3.222,536,5.808,539,3.08,595,2.573,854,2.91,855,3.235,856,4.587,874,3.091,1030,4.15,1081,2.971,1184,2.902,1232,4.15,1233,3.91,1242,1.533,1249,4.15,1257,4.15,1277,2.294,1278,2.294,1285,4.694,1293,5.022,1650,4.799,1651,3.525,1718,3.525,2612,4.438,2628,3.92,2875,4.694,2879,3.987,2998,5.841,3167,4.438,3780,6.673,3781,5.282,3782,5.282,3783,5.282,3784,6.874,3785,7.237,3786,7.237,3787,5.282,3788,4.799,3789,5.282,3790,5.282,3791,3.525,3792,5.282,3793,6.016,3794,6.016,3795,5.282,3796,3.92,3797,5.282,3798,4.465,3799,3.92,3800,3.92,3801,7.025,3802,7.025,3803,4.465,3804,5.974,3805,3.92,3806,4.465,3807,5.282,3808,3.92,3809,4.465]],["title/interfaces/Maxlengths.html",[777,0.539,808,2.789]],["body/interfaces/Maxlengths.html",[0,0.011,3,0.091,4,0.108,5,0.058,7,1.042,9,0.117,10,0.508,11,1.091,19,0.351,25,0.011,26,0.24,27,0.249,28,0.73,29,1.16,33,1.264,35,0.619,36,1.037,37,1.259,39,1.524,52,0.999,58,0.865,60,0.512,65,1.235,71,0.251,73,0.25,74,2.15,75,0.623,77,0.182,83,0.004,84,0.006,85,0.004,87,0.677,106,1.049,108,0.904,109,1.808,114,0.375,115,1.042,116,1.738,118,1.091,119,1.125,122,0.696,128,1.758,130,1.197,139,1.029,144,1.125,146,1.541,147,1.125,158,0.971,159,1.468,161,1.366,172,1.347,180,0.36,181,3.19,182,2.476,187,2.12,189,1.091,191,1.059,192,3.19,194,3.604,197,1.726,199,1.653,201,1.146,205,1.366,208,2.641,214,1.793,229,2.006,233,1.653,234,1.524,238,0.511,270,1.235,274,1.16,299,1.744,300,1.477,301,1.059,329,1.468,333,1.586,338,2.293,342,1.848,351,1.468,362,1.586,363,1.374,376,0.971,377,1.414,411,2.393,416,2.22,435,0.511,439,0.82,459,2.006,473,1.653,508,2.848,521,1.374,531,1.415,564,1.415,569,1.586,573,4.122,574,3.802,585,3.604,586,1.726,591,1.808,595,1.32,659,0.511,661,0.64,663,0.64,682,1.101,719,0.755,722,1.229,738,1.101,777,0.696,778,3.825,779,1.029,780,1.587,781,1.587,782,2.277,783,3.411,784,3.689,785,3.689,786,4.118,787,4.908,788,1.196,789,1.516,790,2.587,791,2.371,792,1.977,793,2.284,794,1.16,795,2.587,796,2.277,797,4.308,798,2.277,799,3.604,800,3.258,801,2.129,802,3.19,803,2.006,804,3.793,805,3.415,806,3.006,807,2.277,808,4.288,809,4.551,810,2.129,811,2.277,812,2.462,813,2.462,814,2.462,815,1.524,816,1.808,817,1.901,818,1.653,819,1.415,820,2.587,821,3.689,822,2.709,823,2.129,824,2.462,825,2.462,826,2.277,827,2.129,828,2.462,829,2.558,830,5.728,831,2.277,832,2.129,833,2.277,834,2.277,835,2.709,836,2.462,837,2.277,838,2.462,839,4.058,840,2.277,841,2.462,842,2.277,843,2.129,844,3.689,845,2.462,846,2.462,847,3.689,848,2.848,849,2.462,850,2.462,851,2.462,852,2.462,853,2.462,854,2.371,855,2.637,856,1.808,857,3.024,858,2.462,859,2.462,860,2.462,861,4.249,862,1.808,863,0.892,864,2.277,865,2.462,866,2.462,867,3.689,868,6.134,869,3.689,870,2.709,871,3.689,872,6.023,873,4.424,874,1.586,875,2.277,876,2.006,877,2.462,878,2.462,879,2.462,880,2.462,881,2.462,882,2.462,883,4.913,884,1.32,885,2.462,886,2.462,887,3.689,888,2.848,889,1.808,890,3.689,891,5.262,892,5.524,893,5.262,894,2.462,895,2.462,896,3.689,897,2.462,898,3.689,899,2.709,900,2.462,901,2.277,902,2.462,903,2.462,904,1.726,905,2.462,906,2.462,907,3.604,908,2.462,909,2.462,910,2.462,911,3.411,912,3.006,913,3.689,914,3.689,915,3.689,916,3.689,917,2.462,918,1.32,919,2.462,920,2.462,921,3.825,922,2.129,923,2.462,924,1.235,925,2.462,926,2.462,927,2.462,928,2.277,929,1.808,930,2.462,931,2.462,932,2.462,933,2.129,934,2.462,935,4.913,936,2.462,937,2.462,938,2.462,939,2.462,940,2.462,941,4.091,942,2.129,943,2.462,944,4.249,945,3.689,946,3.19,947,3.689,948,4.424,949,2.129,950,2.462,951,2.462,952,2.129,953,2.006,954,1.808,955,1.901,956,1.524,957,2.462,958,2.462,959,2.462,960,3.411,961,2.462,962,2.462,963,2.277,964,2.462,965,2.277,966,2.199,967,2.462,968,2.462,969,2.277,970,2.462,971,1.901,972,2.462,973,2.277,974,2.277,975,2.462,976,2.462,977,2.462,978,2.462,979,2.462,980,2.462,981,2.462,982,2.462,983,2.462,984,2.462,985,2.462,986,2.462,987,2.462,988,2.462,989,3.689,990,2.462,991,2.462]],["title/classes/MoHCommonLibraryError.html",[0,0.015,173,2.96]],["body/classes/MoHCommonLibraryError.html",[0,0.024,2,2.665,3,0.196,4,0.233,5,0.125,19,0.756,22,0.539,24,1.038,25,0.011,26,0.517,27,0.252,28,0.632,60,0.477,70,3.166,77,0.196,83,0.008,84,0.009,85,0.008,87,1.695,170,1.391,173,5.333,1605,3.901,1652,4.1,3810,6.788,3811,5.845,3812,7.731,3813,6.657,3814,6.657,3815,6.657,3816,7.731,3817,7.731,3818,6.657,3819,6.657,3820,6.657]],["title/components/NameComponent.html",[180,0.251,446,1.05]],["body/components/NameComponent.html",[0,0.011,3,0.092,4,0.109,5,0.087,7,0.701,9,0.118,10,0.51,11,2.34,13,0.565,14,2.001,17,1.89,19,0.528,22,0.706,24,1.202,25,0.011,26,0.645,27,0.323,28,0.752,29,0.943,32,1.107,33,1.271,35,1.047,36,1.114,37,0.869,42,1.796,44,1.005,45,0.782,48,1.077,49,0.887,57,0.769,58,1.249,60,0.472,71,0.216,73,0.252,75,0.628,77,0.092,83,0.004,84,0.006,85,0.004,87,1.02,89,1.286,94,2.882,106,0.792,107,1.536,108,0.778,112,3.929,114,0.565,115,1.256,116,2.093,117,3.544,118,1.644,119,1.695,120,1.224,121,1.748,122,1.622,123,2.058,124,2.058,125,2.601,126,2.601,127,2.983,128,1.576,129,3.264,130,2.566,131,3.078,132,2.139,136,1.007,137,1.245,138,1.133,139,1.036,140,1.1,141,1.206,142,1.124,144,1.133,146,2.06,147,1.133,149,1.822,150,3.165,151,3.147,153,1.479,154,2.644,155,2.601,156,1.376,157,0.992,158,0.978,159,1.479,161,1.376,164,1.989,170,0.53,171,1.598,172,1.149,180,0.326,189,1.1,191,1.067,193,1.007,201,0.922,215,0.514,216,4.561,236,2.465,238,0.769,253,2.297,299,1.463,300,0.663,303,1.989,373,1.644,411,2.206,424,3.208,432,2.864,435,1.454,439,1.236,446,1.513,469,0.782,495,0.827,521,0.924,554,2.725,571,0.761,590,3.116,610,1.17,652,0.804,653,0.827,654,0.85,655,0.899,658,0.701,659,1.465,661,0.965,663,0.965,677,0.827,678,1.203,679,1.786,680,0.899,681,0.899,682,0.74,683,0.899,684,0.782,685,0.899,686,0.782,687,0.899,688,0.804,689,0.899,690,0.804,691,0.899,692,0.804,693,0.899,694,0.804,695,0.85,696,0.899,697,0.782,698,1.344,699,0.804,700,0.85,701,0.899,702,0.804,703,0.899,704,0.804,705,0.899,706,0.782,707,0.899,708,0.899,709,0.782,710,0.899,711,0.804,712,0.899,713,0.782,714,0.899,715,0.804,716,1.61,717,0.804,718,0.761,719,0.761,720,1.344,721,0.804,722,0.827,723,0.899,724,0.782,725,0.899,726,0.804,727,0.899,728,0.804,729,0.899,730,0.761,731,0.899,732,0.804,733,0.899,734,0.827,735,0.874,736,0.899,737,0.782,738,0.74,739,0.899,740,0.782,741,0.899,742,0.761,743,0.899,744,0.782,745,0.85,746,0.804,747,0.899,748,0.827,749,0.899,750,0.804,751,0.899,752,0.782,753,0.899,754,0.804,755,0.85,756,0.804,757,0.782,758,0.874,759,0.682,760,0.782,761,0.899,762,0.782,763,0.899,764,0.782,765,0.899,766,0.782,767,0.899,768,0.782,769,0.899,770,0.782,771,0.899,772,0.782,773,0.899,774,0.782,775,0.85,776,0.899,788,1.441,789,1.967,829,2.397,863,0.899,884,1.989,1017,2.725,1101,1.748,1113,2.093,1242,1.912,1307,3.147,1310,1.665,1314,3.431,1318,1.915,1319,1.915,1320,1.915,1327,1.915,1328,1.915,1329,1.915,1330,1.915,1331,1.915,1332,1.915,1333,1.915,1334,1.915,1335,3.698,1339,1.665,1342,1.915,1343,1.915,1344,1.915,1345,1.739,1346,1.665,1351,1.479,1352,1.739,1356,2.864,1360,3.116,1361,3.264,1362,3.702,1364,3.43,1365,2.983,1369,2.49,1378,2.021,1380,2.021,1383,2.862,1385,2.725,1387,3.022,1388,2.929,1389,3.208,1390,3.208,1391,3.208,1395,1.915,1397,1.915,1470,1.822,1471,2.021,1472,3.71,1636,3.71,2412,2.725,2680,3.022,2683,3.431,2684,2.725,2685,4.083,2689,1.665,2694,3.71,2710,3.053,2715,2.48,2716,2.48,2717,2.48,2718,2.73,2897,2.49,3310,3.71,3311,3.71,3341,3.264,3342,2.294,3344,3.71,3345,4.264,3821,2.73,3822,4.891,3823,5.57,3824,3.109,3825,3.109,3826,3.109,3827,4.65,3828,3.109,3829,3.109,3830,4.65,3831,3.109,3832,3.109,3833,3.109,3834,3.109,3835,3.109,3836,3.109,3837,3.109,3838,5.57,3839,3.109,3840,3.109,3841,3.109,3842,3.109,3843,3.109,3844,3.109,3845,7.197,3846,4.65,3847,4.65,3848,1.915,3849,3.109,3850,4.083]],["title/components/PageFrameworkComponent.html",[180,0.251,726,1.11]],["body/components/PageFrameworkComponent.html",[0,0.015,3,0.129,4,0.153,5,0.112,9,0.165,13,0.721,22,0.481,25,0.011,26,0.523,27,0.165,32,1.414,35,1.01,36,0.568,44,1.071,45,1.101,48,1.375,49,0.481,57,1.396,58,0.683,71,0.153,73,0.355,77,0.175,83,0.005,84,0.007,85,0.005,114,0.721,115,1.518,122,1.628,142,1.198,157,0.934,170,1.011,172,0.982,176,2.554,180,0.394,215,0.724,301,2.037,375,1.668,426,3.32,435,1.484,446,1.071,469,1.101,495,1.164,504,4.095,546,4.447,571,1.071,610,1.817,652,1.132,653,1.79,654,1.196,655,1.265,658,0.987,659,1.491,661,1.232,663,1.232,677,1.164,678,1.535,679,2.087,680,1.265,681,1.265,682,1.042,683,1.265,684,1.101,685,1.265,686,1.101,687,1.265,688,1.132,689,1.265,690,1.132,691,1.265,692,1.132,693,1.265,694,1.132,695,1.196,696,1.265,697,1.101,698,1.715,699,1.132,700,1.196,701,1.265,702,1.132,703,1.265,704,1.132,705,1.265,706,1.101,707,1.265,708,1.265,709,1.101,710,1.265,711,1.132,712,1.265,713,1.101,714,1.265,715,1.132,716,1.946,717,1.132,718,1.071,719,1.071,720,1.715,721,1.132,722,1.164,723,1.265,724,1.101,725,1.265,726,1.868,727,1.265,728,1.132,729,1.265,730,1.071,731,1.265,732,1.132,733,1.265,734,1.164,735,1.23,736,1.265,737,1.101,738,1.042,739,1.265,740,1.101,741,1.265,742,1.071,743,1.265,744,1.101,745,1.196,746,1.132,747,1.265,748,1.164,749,1.265,750,1.132,751,1.265,752,1.101,753,1.265,754,1.132,755,1.196,756,1.132,757,1.101,758,1.23,759,0.96,760,1.101,761,1.265,762,1.101,763,1.265,764,1.101,765,1.265,766,1.101,767,1.265,768,1.101,769,1.265,770,1.101,771,1.265,772,1.101,773,1.265,774,1.101,775,1.196,776,1.265,780,2.037,781,2.037,884,2.538,1121,5.212,1246,3.478,1398,1.81,1399,2.455,1400,1.81,1401,2.455,1402,2.455,1403,2.455,1404,1.81,1405,1.81,1406,2.455,1407,2.455,1408,1.81,1409,1.81,1410,1.81,1411,1.81,1412,1.81,1413,2.455,1414,2.376,1415,1.81,1416,2.455,1417,2.455,1418,1.81,1419,2.455,1420,1.81,1421,1.81,1422,1.81,1423,1.81,1424,2.987,1425,1.81,1426,1.81,1427,1.81,1428,1.81,1429,1.81,1430,1.81,1431,1.81,1432,1.81,1433,1.81,1434,1.81,1435,1.81,1436,1.81,1437,1.81,1438,1.81,1439,1.81,1440,1.81,1441,2.455,1442,1.81,1443,1.81,1444,1.81,1445,1.81,1446,1.81,1447,1.81,1448,1.81,1449,1.81,1450,1.81,1451,1.81,1452,1.81,1453,1.81,1454,1.81,1455,2.455,1456,1.81,1457,1.81,1458,1.81,1459,1.81,1460,1.81,1461,1.502,1462,1.81,1463,1.81,1464,1.81,1465,1.81,1466,1.81,1467,1.81,1468,1.81,1469,1.81,1638,4.735,1654,4.735,1663,4.735,2745,3.229,2793,4.379,2794,4.379,3296,6.021,3300,5.761,3307,4.379,3550,4.379,3667,5.212,3851,5.373,3852,5.373,3853,3.843,3854,5.212,3855,5.212,3856,5.935,3857,5.935,3858,5.935,3859,5.212,3860,4.379,3861,7.221,3862,5.212,3863,5.935,3864,5.935,3865,4.735,3866,4.377,3867,4.377]],["title/interfaces/PageList.html",[777,0.539,3868,3.166]],["body/interfaces/PageList.html",[0,0.018,3,0.147,4,0.175,5,0.094,9,0.321,10,0.711,17,1.527,19,0.567,21,3.551,22,0.405,25,0.011,27,0.272,29,1.084,36,0.648,37,1.187,49,0.548,57,0.826,60,0.497,65,2.593,69,3.046,71,0.227,73,0.405,76,2.136,77,0.191,83,0.006,84,0.008,85,0.006,106,0.85,108,0.967,128,1.189,146,2.397,201,1.304,208,3.234,300,1.065,355,2.612,356,2.038,411,2.536,413,3.684,472,2.794,521,2.343,634,3.182,777,0.627,779,1.664,829,2.512,870,2.926,955,3.075,956,3.2,1001,5.439,1090,3.445,1180,3.075,1233,3.246,1242,2.224,1246,2.926,1277,2.566,1278,2.566,1282,5.816,1284,4.779,1298,4.779,1574,3.684,1718,2.926,2548,5.418,2638,3.984,2752,3.075,3791,4.885,3868,5.96,3869,5.168,3870,3.984,3871,4.994,3872,4.385,3873,4.385,3874,5.688,3875,6.922,3876,6.313,3877,4.385,3878,4.385,3879,4.385,3880,6.681,3881,4.385,3882,4.385,3883,4.385,3884,4.385,3885,4.385,3886,4.385,3887,4.385,3888,4.385,3889,4.385,3890,4.385,3891,4.385,3892,5.688,3893,5.688,3894,4.385,3895,4.385,3896,4.385,3897,4.385,3898,4.385,3899,6.313,3900,4.385,3901,4.385,3902,4.385,3903,4.385,3904,4.385,3905,4.385,3906,4.385]],["title/interfaces/PageListInterface.html",[777,0.539,1262,3.166]],["body/interfaces/PageListInterface.html",[0,0.025,3,0.142,4,0.168,5,0.09,9,0.283,10,0.694,14,1.557,17,2.159,19,0.547,21,3.488,22,0.39,25,0.011,27,0.239,29,1.192,33,1.315,36,0.624,37,1.101,49,0.528,57,1.289,58,0.986,60,0.493,65,3.201,69,3.201,71,0.247,73,0.39,76,2.057,77,0.186,83,0.006,84,0.008,85,0.006,106,1.277,108,0.972,114,0.585,120,1.368,128,1.506,157,1.026,176,2.236,196,2.963,201,1.241,208,2.531,245,2.057,299,1.513,300,1.349,305,1.557,355,2.424,356,1.989,360,3.537,361,2.576,373,2.236,379,3.319,384,4.109,385,3.319,389,3.893,390,3.838,391,3.549,392,3.838,439,1.279,472,3.95,473,2.576,507,3.238,521,1.43,554,3.704,598,2.691,634,2.798,777,0.887,779,1.603,899,3.704,924,1.926,955,4.349,956,3.123,994,2.963,1001,5.517,1081,2.376,1221,3.549,1222,5.043,1223,3.838,1224,4.224,1225,3.549,1226,3.127,1227,4.224,1228,3.838,1229,4.224,1230,4.224,1231,4.224,1232,3.319,1233,3.127,1234,3.838,1235,3.838,1241,3.704,1242,2.17,1243,3.127,1245,4.224,1246,3.704,1248,4.224,1249,3.319,1250,5.21,1253,4.224,1255,4.224,1256,4.224,1257,3.319,1259,4.224,1260,4.224,1262,5.21,1268,4.664,1269,3.838,1270,4.224,1271,4.224,1272,3.549,1273,4.224,1274,3.838,1275,5.551,1276,5.551,1277,2.472,1278,2.472,1279,5.551,1280,5.551,1281,6.2,1282,5.747,1283,6.2,1284,4.664,1285,4.361,1286,5.043,1287,4.361,1288,5.043,1289,4.224,1290,4.224,1291,4.224,1292,4.224,1293,3.319,1294,4.224,1295,4.224,1296,4.224,1297,4.224,1298,3.549,1299,4.224,1300,4.224,1301,3.838,1302,4.224,1303,4.224,1574,3.549,3907,4.811]],["title/components/PageSectionComponent.html",[180,0.251,728,1.11]],["body/components/PageSectionComponent.html",[0,0.016,3,0.133,4,0.158,5,0.114,9,0.17,13,0.735,19,0.776,22,0.554,25,0.011,26,0.531,27,0.17,32,1.441,35,0.603,36,0.584,44,1.091,45,1.133,48,1.402,49,0.494,57,1.366,58,0.702,71,0.158,73,0.365,77,0.133,83,0.005,84,0.007,85,0.005,92,3.322,114,0.735,115,1.54,122,1.647,142,1.221,170,1.03,172,1.13,180,0.399,215,0.745,299,1.417,300,0.961,338,1.863,416,1.803,435,1.486,446,1.102,469,1.133,478,2.314,495,1.197,509,2.773,530,2.224,571,1.102,610,1.522,652,1.165,653,1.197,654,1.231,655,1.301,658,1.015,659,1.492,661,1.256,663,1.256,677,1.197,678,1.767,679,2.111,680,1.301,681,1.301,682,1.072,683,1.301,684,1.133,685,1.301,686,1.133,687,1.301,688,1.165,689,1.301,690,1.165,691,1.301,692,1.165,693,1.301,694,1.165,695,1.231,696,1.301,697,1.133,698,1.748,699,1.165,700,1.231,701,1.301,702,1.165,703,1.301,704,1.165,705,1.301,706,1.133,707,1.301,708,1.301,709,1.133,710,1.301,711,1.165,712,1.301,713,1.133,714,1.301,715,1.165,716,1.975,717,1.165,718,1.102,719,1.102,720,1.748,721,1.165,722,1.197,723,1.301,724,1.133,725,1.301,726,1.165,727,1.301,728,1.889,729,1.301,730,1.102,731,1.301,732,1.165,733,1.301,734,1.197,735,1.265,736,1.301,737,1.133,738,1.072,739,1.301,740,1.133,741,1.301,742,1.102,743,1.301,744,1.133,745,1.231,746,1.165,747,1.301,748,1.197,749,1.301,750,1.165,751,1.301,752,1.133,753,1.301,754,1.165,755,1.231,756,1.165,757,1.133,758,1.265,759,0.988,760,1.133,761,1.301,762,1.133,763,1.301,764,1.133,765,1.301,766,1.133,767,1.301,768,1.133,769,1.301,770,1.133,771,1.301,772,1.133,773,1.301,774,1.133,775,1.231,776,1.301,780,2.077,781,2.077,832,3.107,1078,3.107,1226,2.927,1398,1.863,1399,2.503,1400,1.863,1401,2.503,1402,2.503,1403,2.503,1404,1.863,1405,1.863,1406,2.503,1407,2.503,1408,1.863,1409,1.863,1410,1.863,1411,1.863,1412,1.863,1413,2.503,1414,2.422,1415,1.863,1416,2.503,1417,2.503,1418,1.863,1419,2.503,1420,1.863,1421,1.863,1422,1.863,1423,1.863,1424,3.022,1425,1.863,1426,1.863,1427,1.863,1428,1.863,1429,1.863,1430,1.863,1431,1.863,1432,1.863,1433,1.863,1434,1.863,1435,1.863,1436,1.863,1437,1.863,1438,1.863,1439,1.863,1440,1.863,1441,2.503,1442,1.863,1443,1.863,1444,1.863,1445,1.863,1446,1.863,1447,1.863,1448,1.863,1449,1.863,1450,1.863,1451,1.863,1452,1.863,1453,1.863,1454,1.863,1455,2.503,1456,1.863,1457,1.863,1458,1.863,1459,1.863,1460,1.863,1461,1.546,1462,1.863,1463,1.863,1464,1.863,1465,1.863,1466,1.863,1467,1.863,1468,1.863,1469,1.863,2684,2.639,2745,3.322,2793,4.464,2794,4.464,3169,3.954,3296,5.828,3552,4.714,3651,3.954,3851,5.828,3862,6.415,3865,4.827,3908,5.828,3909,3.954,3910,6.05,3911,6.05,3912,6.05,3913,6.05,3914,4.503,3915,4.503,3916,7.622,3917,4.503,3918,4.503,3919,4.503,3920,4.503,3921,3.954,3922,4.503,3923,4.503,3924,4.503,3925,4.503]],["title/injectables/PageStateService.html",[356,1.35,1718,2.514]],["body/injectables/PageStateService.html",[0,0.015,3,0.128,4,0.151,5,0.081,9,0.3,10,0.647,13,0.716,17,1.323,19,0.669,20,2.421,21,3.831,22,0.683,24,1.277,25,0.011,26,0.636,27,0.313,28,0.778,29,1.024,35,1.006,36,1.006,37,1.121,49,0.918,57,0.716,58,1.173,60,0.508,65,2.877,69,3.105,70,2.058,71,0.206,73,0.351,76,1.851,77,0.174,83,0.005,84,0.007,85,0.005,106,0.737,108,0.933,128,1.595,146,2.506,158,1.361,201,1.244,208,3.177,300,0.923,355,2.467,356,1.853,358,2.224,411,2.73,413,3.193,472,2.421,521,2.305,634,2.607,777,0.543,829,2.284,870,2.536,955,2.665,956,2.909,1001,4.063,1090,2.986,1180,2.665,1232,4.063,1233,4.352,1242,2.022,1246,2.536,1277,2.224,1278,2.224,1282,5.723,1284,4.345,1298,4.345,1718,3.451,2548,5.25,2638,3.452,2752,2.665,3791,4.799,3868,6.11,3869,6.765,3870,3.452,3872,5.879,3873,5.172,3874,6.311,3875,6.602,3876,5.879,3877,3.8,3878,3.8,3879,3.8,3880,6.311,3881,3.8,3882,3.8,3883,3.8,3884,3.8,3885,3.8,3886,3.8,3887,3.8,3888,3.8,3889,3.8,3890,3.8,3891,5.879,3892,5.172,3893,5.172,3894,5.879,3895,3.8,3896,3.8,3897,3.8,3898,6.311,3899,5.879,3900,3.8,3901,5.879,3902,3.8,3903,5.879,3904,3.8,3905,3.8,3906,3.8,3926,5.172,3927,6.696,3928,5.89,3929,4.328,3930,4.328,3931,4.328,3932,4.328,3933,4.328,3934,4.328,3935,4.328,3936,4.328,3937,4.328,3938,4.328,3939,4.328,3940,4.328,3941,4.328,3942,4.328,3943,4.328,3944,4.328,3945,4.328,3946,4.328]],["title/components/PasswordComponent.html",[180,0.251,730,1.05]],["body/components/PasswordComponent.html",[0,0.01,3,0.081,4,0.096,5,0.079,7,1.305,9,0.103,10,0.463,13,0.513,19,0.585,22,0.689,24,0.903,25,0.011,26,0.535,27,0.315,28,0.55,29,0.942,32,1.227,33,0.748,35,1.083,36,1.056,37,0.976,39,2.085,40,1.686,42,1.71,44,0.929,45,0.689,46,2.085,48,0.978,49,0.687,52,0.886,57,0.698,58,0.903,60,0.499,71,0.203,73,0.222,74,2.426,75,0.553,77,0.152,83,0.003,84,0.005,85,0.003,87,0.926,94,0.968,106,0.986,108,0.496,109,1.604,114,0.513,115,1.162,120,1.304,121,2.351,122,1.305,128,1.896,132,1.859,136,0.886,137,1.096,138,0.998,139,1.407,140,0.968,141,1.062,142,1.04,157,0.901,161,2.28,170,0.878,172,1.29,178,2.362,180,0.416,193,0.886,201,0.698,203,3.801,211,1.889,214,1.062,215,0.698,234,1.352,236,1.868,237,1.889,238,0.698,270,1.096,300,0.584,301,1.449,305,1.367,321,1.407,333,1.407,342,0.913,344,3.566,351,3.471,355,1.988,363,1.255,375,1.448,377,1.291,435,1.44,439,0.728,446,0.67,469,0.689,476,1.604,495,0.728,507,2.362,508,1.686,521,1.859,531,1.255,545,2.362,564,1.255,570,2.169,571,0.67,595,1.171,598,1.532,610,1.062,626,4.62,652,0.708,653,0.728,654,0.748,655,0.791,658,0.617,659,1.453,661,0.876,663,0.876,677,0.728,678,1.092,679,1.673,680,0.791,681,0.791,682,0.652,683,0.791,684,0.689,685,0.791,686,0.689,687,0.791,688,0.708,689,0.791,690,0.708,691,0.791,692,0.708,693,0.791,694,0.708,695,0.748,696,0.791,697,0.689,698,1.22,699,0.708,700,0.748,701,0.791,702,0.708,703,0.791,704,0.708,705,0.791,706,0.689,707,0.791,708,0.791,709,0.689,710,0.791,711,0.708,712,0.791,713,0.689,714,0.791,715,0.708,716,1.489,717,0.708,718,0.67,719,0.67,720,1.22,721,0.708,722,0.728,723,0.791,724,0.689,725,0.791,726,0.708,727,0.791,728,0.708,729,0.791,730,1.618,731,0.791,732,0.708,733,0.791,734,0.728,735,0.769,736,0.791,737,0.689,738,0.652,739,0.791,740,0.689,741,0.791,742,0.67,743,0.791,744,0.689,745,0.748,746,0.708,747,0.791,748,0.728,749,0.791,750,0.708,751,0.791,752,0.689,753,0.791,754,0.708,755,0.748,756,0.708,757,0.689,758,0.769,759,0.6,760,0.689,761,0.791,762,0.689,763,0.791,764,0.689,765,0.791,766,0.689,767,0.791,768,0.689,769,0.791,770,0.689,771,0.791,772,0.689,773,0.791,774,0.689,775,0.748,776,0.791,777,0.53,780,1.449,781,1.449,788,1.498,789,1.807,790,2.882,791,2.204,792,2.204,794,1.029,815,1.352,816,1.604,817,1.686,818,1.466,819,1.936,823,3.555,855,2.754,863,0.791,904,2.362,918,1.171,1091,1.532,1101,1.587,1113,2.484,1123,3.368,1242,0.94,1360,1.532,1369,2.261,1371,1.78,1388,2.769,1398,1.132,1399,1.746,1400,1.132,1401,1.746,1402,1.746,1403,1.746,1404,1.132,1405,1.132,1406,1.746,1407,1.746,1408,1.132,1409,1.132,1410,1.132,1411,1.132,1412,1.132,1413,1.746,1414,1.69,1415,1.132,1416,1.746,1417,1.746,1418,1.132,1419,1.746,1420,1.132,1421,1.132,1422,1.132,1423,1.132,1424,2.395,1425,1.132,1426,1.132,1427,1.132,1428,1.132,1429,1.132,1430,1.132,1431,1.132,1432,1.132,1433,1.132,1434,1.132,1435,1.132,1436,1.132,1437,1.132,1438,1.132,1439,1.132,1440,1.132,1441,1.746,1442,1.132,1443,1.132,1444,1.132,1445,1.132,1446,1.132,1447,1.132,1448,1.132,1449,1.132,1450,1.132,1451,1.132,1452,1.132,1453,1.132,1454,1.132,1455,1.746,1456,1.132,1457,1.132,1458,1.132,1459,1.132,1460,1.132,1461,0.94,1462,1.132,1463,1.132,1464,1.132,1465,1.132,1466,1.132,1467,1.132,1468,1.132,1469,1.132,1499,5.234,1605,1.604,1675,1.78,1704,4.62,1711,3.115,2412,3.019,2414,3.801,2417,2.02,2429,3.764,2457,1.686,2497,2.02,2553,3.707,2555,2.404,2559,3.368,2576,3.115,2689,3.101,2710,2.085,2789,3.764,2824,2.184,2875,3.995,2879,1.604,2889,2.912,2944,3.115,3065,2.02,3205,3.368,3312,3.555,3318,3.801,3362,2.02,3363,2.02,3374,3.707,3659,4.62,3668,3.368,3752,2.02,3947,2.184,3948,5.804,3949,3.707,3950,3.368,3951,3.368,3952,3.707,3953,3.707,3954,3.707,3955,3.707,3956,5.493,3957,3.707,3958,3.707,3959,4.524,3960,4.524,3961,4.524,3962,4.524,3963,6.048,3964,4.524,3965,4.524,3966,4.222,3967,4.524,3968,4.524,3969,4.524,3970,4.524,3971,4.524,3972,4.222,3973,4.616,3974,2.738,3975,2.738,3976,2.738,3977,2.738,3978,3.115,3979,2.738,3980,2.738,3981,3.707,3982,2.738,3983,2.738,3984,2.738,3985,2.738,3986,2.738,3987,2.738,3988,2.738,3989,2.738,3990,2.738,3991,2.738,3992,3.707,3993,3.707,3994,3.707,3995,3.707,3996,3.707,3997,2.738,3998,2.738,3999,3.707,4000,2.738,4001,2.738,4002,2.738,4003,3.368,4004,2.738,4005,2.738,4006,2.738,4007,2.738,4008,2.738,4009,2.738,4010,2.738,4011,3.707,4012,4.11,4013,2.404,4014,1.889,4015,2.404,4016,2.404,4017,2.404,4018,2.404,4019,2.184,4020,4.524,4021,4.524,4022,3.707,4023,2.404,4024,2.404,4025,2.404,4026,2.404,4027,2.404,4028,2.404,4029,3.707,4030,2.404,4031,3.707,4032,2.404,4033,3.707,4034,2.404,4035,2.404,4036,3.707,4037,3.707,4038,2.404,4039,2.404,4040,2.404,4041,2.404,4042,2.404,4043,2.404,4044,2.184,4045,2.404,4046,2.404,4047,6.61,4048,4.222,4049,2.738,4050,4.222,4051,4.222,4052,5.085,4053,4.222,4054,4.222,4055,4.222,4056,4.222,4057,2.738]],["title/interfaces/PasswordErrorMsg.html",[777,0.539,3973,3.166]],["body/interfaces/PasswordErrorMsg.html",[0,0.014,3,0.117,4,0.139,5,0.075,7,1.254,9,0.151,10,0.611,19,0.453,25,0.011,27,0.242,28,0.718,29,0.913,32,0.949,33,1.521,35,0.858,36,0.722,37,1,39,2.748,40,2.454,42,2.048,44,1.003,46,1.968,52,1.29,60,0.507,71,0.243,73,0.323,74,2.831,75,0.804,77,0.189,83,0.005,84,0.007,85,0.005,87,0.874,106,0.948,108,0.654,109,2.335,114,0.484,115,1.254,120,1.148,121,1.498,122,0.898,128,1.739,132,1.184,139,1.328,157,0.85,161,1.763,170,0.948,172,1.374,178,2.939,180,0.442,193,1.801,201,0.92,203,4.73,211,2.749,214,1.545,215,0.659,234,1.968,236,1.763,237,2.749,238,0.92,270,1.595,300,0.85,301,1.368,305,1.29,321,2.047,333,2.047,342,1.328,351,2.646,355,1.91,363,1.184,375,1.564,377,1.218,435,0.659,439,1.059,476,2.335,507,2.551,508,2.454,521,1.654,531,1.827,545,2.229,564,1.827,570,2.047,595,1.704,598,3.112,659,0.659,661,0.827,663,0.827,730,1.362,777,0.699,779,1.328,780,1.91,781,1.91,788,1.795,789,1.897,790,3.112,791,2.379,792,2.379,794,1.498,815,1.968,816,2.335,817,2.454,818,2.134,819,1.827,823,2.749,863,1.151,904,2.229,918,2.379,1113,2.608,1123,3.179,1242,1.368,1360,2.229,1369,2.134,1371,2.59,1388,2.837,1398,1.648,1399,2.301,1400,1.648,1401,2.301,1402,2.301,1403,2.301,1404,1.648,1405,1.648,1406,2.301,1407,2.301,1408,1.648,1409,1.648,1410,1.648,1411,1.648,1412,1.648,1413,2.301,1414,2.227,1415,1.648,1416,2.301,1417,2.301,1418,1.648,1419,2.301,1420,1.648,1421,1.648,1422,1.648,1423,1.648,1424,2.87,1425,1.648,1426,1.648,1427,1.648,1428,1.648,1429,1.648,1430,1.648,1431,1.648,1432,1.648,1433,1.648,1434,1.648,1435,1.648,1436,1.648,1437,1.648,1438,1.648,1439,1.648,1440,1.648,1441,2.301,1442,1.648,1443,1.648,1444,1.648,1445,1.648,1446,1.648,1447,1.648,1448,1.648,1449,1.648,1450,1.648,1451,1.648,1452,1.648,1453,1.648,1454,1.648,1455,2.301,1456,1.648,1457,1.648,1458,1.648,1459,1.648,1460,1.648,1461,1.368,1462,1.648,1463,1.648,1464,1.648,1465,1.648,1466,1.648,1467,1.648,1468,1.648,1469,1.648,1499,5.269,1605,2.335,1675,2.59,1711,2.94,2412,2.335,2414,2.94,2417,2.94,2429,3.616,2457,3.426,2497,2.94,2559,4.438,2689,4.156,2710,1.968,2789,3.616,2824,3.179,2879,2.335,2889,2.749,2944,2.94,3065,2.94,3205,3.179,3312,2.749,3318,2.94,3362,2.94,3363,2.94,3659,4.438,3668,3.179,3752,2.94,3947,3.179,3948,6.093,3949,3.499,3950,3.179,3951,3.179,3952,3.499,3953,3.499,3954,3.499,3955,3.499,3956,4.885,3957,3.499,3958,3.499,3959,3.499,3960,3.499,3961,3.499,3962,3.499,3963,3.499,3964,3.499,3965,3.499,3967,3.499,3968,3.499,3969,3.499,3970,3.499,3971,3.499,3973,5.119,3978,2.94,3981,3.499,3992,3.499,3993,3.499,3994,3.499,3995,3.499,3996,3.499,3999,3.499,4003,3.179,4011,4.885,4012,5.114,4013,3.499,4014,2.749,4015,3.499,4016,3.499,4017,3.499,4018,3.499,4019,3.179,4020,5.629,4021,6.64,4022,4.885,4023,3.499,4024,3.499,4025,3.499,4026,3.499,4027,3.499,4028,3.499,4029,4.885,4030,3.499,4031,4.885,4032,3.499,4033,4.885,4034,3.499,4035,3.499,4036,4.885,4037,4.885,4038,3.499,4039,3.499,4040,3.499,4041,3.499,4042,3.499,4043,3.499,4044,3.179,4045,3.499,4046,3.499]],["title/classes/Person.html",[0,0.015,2767,2.643]],["body/classes/Person.html",[0,0.023,2,1.707,3,0.126,4,0.149,5,0.08,7,1.686,9,0.161,10,0.64,13,0.709,22,0.69,24,0.909,25,0.011,26,0.664,27,0.309,28,0.554,35,1.001,36,0.862,49,0.923,58,0.909,60,0.506,71,0.204,77,0.126,83,0.005,84,0.007,85,0.005,87,1.279,94,1.508,108,0.879,120,1.441,121,2.191,136,1.38,137,1.707,138,1.554,139,1.421,140,1.508,141,1.653,142,0.861,157,0.91,158,1.341,176,2.062,179,2.773,201,0.705,242,2.493,253,2.88,300,0.91,301,2.001,312,3.79,342,1.943,411,2.381,416,2.86,438,3.417,521,1.733,530,3.814,719,1.748,854,1.823,855,2.028,899,3.417,971,4.399,993,4.302,994,3.591,1022,3.744,1072,3.262,1073,3.591,1074,2.88,1075,3.417,1348,2.941,1615,4.862,2472,5.454,2474,5.698,2767,5.134,3078,4.902,3307,5.27,3308,6.16,3313,5.301,3314,5.301,3315,5.301,3356,6.16,3358,6.513,3360,5.967,4058,3.744,4059,6.644,4060,6.644,4061,7.479,4062,7.143,4063,6.644,4064,6.644,4065,6.567,4066,7.143,4067,4.264,4068,4.264,4069,4.264,4070,5.83,4071,4.264,4072,4.264,4073,4.264,4074,4.264,4075,4.264,4076,5.83,4077,5.83,4078,5.83,4079,4.264,4080,4.264,4081,7.479,4082,4.264,4083,4.264,4084,5.83,4085,4.264,4086,4.264,4087,5.83,4088,7.143,4089,4.264,4090,4.264,4091,3.79,4092,5.83,4093,5.12,4094,4.264,4095,4.264,4096,6.644,4097,5.83,4098,5.83,4099,5.83,4100,3.401,4101,3.744,4102,4.264,4103,4.264,4104,7.722,4105,4.264,4106,4.264,4107,8.404,4108,6.644,4109,4.264,4110,4.264,4111,5.83,4112,5.83,4113,4.264,4114,4.264,4115,4.264,4116,4.264,4117,4.264]],["title/components/PostalCodeComponent.html",[180,0.251,737,1.08]],["body/components/PostalCodeComponent.html",[0,0.011,3,0.089,4,0.106,5,0.086,7,1.376,9,0.115,10,0.501,11,1.94,13,0.554,19,0.518,22,0.696,24,1.172,25,0.011,26,0.612,27,0.32,28,0.738,29,1.017,32,1.086,35,1.025,36,1.117,37,0.712,42,1.693,44,0.823,45,0.763,48,1.057,49,0.84,57,0.755,58,1.243,60,0.484,71,0.229,73,0.246,75,0.612,77,0.089,83,0.004,84,0.006,85,0.004,87,1,89,1.254,94,1.072,106,0.777,108,0.536,114,0.554,115,1.237,116,2.062,118,1.94,119,1.999,120,1.083,121,1.715,122,1.376,123,2.428,124,2.428,126,2.552,127,3.268,128,1.306,130,2.127,131,3.141,132,2.233,136,0.981,137,1.213,138,1.105,139,1.01,140,1.072,141,1.175,142,1.107,144,1.105,146,2.292,147,1.105,150,2.799,153,2.169,154,1.951,158,0.953,159,2.169,161,2.019,164,1.296,170,0.934,172,1.215,180,0.321,185,1.175,187,2.092,188,2.418,189,1.613,190,1.97,191,1.566,194,1.97,206,2.418,207,2.418,208,1.213,210,2.418,215,0.501,236,2.019,238,0.755,253,2.253,300,0.973,303,1.951,329,1.441,333,2.819,351,1.441,416,1.213,435,1.451,446,0.742,469,0.763,495,0.806,521,1.814,571,0.742,590,3.069,610,1.148,652,0.784,653,0.806,654,0.828,655,0.876,658,0.683,659,1.463,661,0.947,663,0.947,677,0.806,678,1.18,679,1.764,680,0.876,681,0.876,682,0.722,683,0.876,684,0.763,685,0.876,686,0.763,687,0.876,688,0.784,689,0.876,690,0.784,691,0.876,692,0.784,693,0.876,694,0.784,695,0.828,696,0.876,697,0.763,698,1.318,699,0.784,700,0.828,701,0.876,702,0.784,703,0.876,704,0.784,705,0.876,706,0.763,707,0.876,708,0.876,709,0.763,710,0.876,711,0.784,712,0.876,713,0.763,714,0.876,715,0.784,716,1.585,717,0.784,718,0.742,719,0.742,720,1.318,721,0.784,722,0.806,723,0.876,724,0.763,725,0.876,726,0.784,727,0.876,728,0.784,729,0.876,730,0.742,731,0.876,732,0.784,733,0.876,734,0.806,735,0.852,736,0.876,737,1.536,738,1.852,739,0.876,740,0.763,741,0.876,742,0.742,743,0.876,744,0.763,745,0.828,746,0.784,747,0.876,748,0.806,749,0.876,750,0.784,751,0.876,752,0.763,753,0.876,754,0.784,755,0.828,756,0.784,757,0.763,758,0.852,759,0.665,760,0.763,761,0.876,762,0.763,763,0.876,764,0.763,765,0.876,766,0.763,767,0.876,768,0.763,769,0.876,770,0.763,771,0.876,772,0.763,773,0.876,774,0.763,775,0.828,776,0.876,780,1.566,781,1.566,787,3.565,788,1.419,789,1.951,794,1.139,829,2.538,857,3.153,862,2.673,863,0.876,884,1.951,889,3.214,901,3.366,1040,1.97,1101,1.715,1113,2.294,1226,2.965,1307,3.113,1310,1.623,1339,1.623,1351,1.441,1361,3.576,1365,2.938,1369,2.443,1380,1.97,1383,2.344,1384,2.965,1385,3.576,1386,3.639,1388,2.019,1395,1.867,1397,1.867,1398,1.254,1399,1.887,1400,1.254,1401,1.887,1402,1.887,1403,1.887,1404,1.254,1405,1.254,1406,1.887,1407,1.887,1408,1.254,1409,1.254,1410,1.254,1411,1.254,1412,1.254,1413,1.887,1414,1.826,1415,1.254,1416,1.887,1417,1.887,1418,1.254,1419,1.887,1420,1.254,1421,1.254,1422,1.254,1423,1.254,1424,2.524,1425,1.254,1426,1.254,1427,1.254,1428,1.254,1429,1.254,1430,1.254,1431,1.254,1432,1.254,1433,1.254,1434,1.254,1435,1.254,1436,1.254,1437,1.254,1438,1.254,1439,1.254,1440,1.254,1441,1.887,1442,1.254,1443,1.254,1444,1.254,1445,1.254,1446,1.254,1447,1.254,1448,1.254,1449,1.254,1450,1.254,1451,1.254,1452,1.254,1453,1.254,1454,1.254,1455,1.887,1456,1.254,1457,1.254,1458,1.254,1459,1.254,1460,1.254,1461,1.04,1462,1.254,1463,1.254,1464,1.254,1465,1.254,1466,1.254,1467,1.254,1468,1.254,1469,1.254,1470,1.776,1929,3.147,2412,3.214,2414,4.047,2415,4.816,2416,4.816,2417,2.236,2418,2.661,2469,2.673,2472,3.147,2786,1.97,3317,3.366,3345,4.21,4118,6.338,4119,6.854,4120,2.661,4121,4.562,4122,4.562,4123,4.562,4124,5.485,4125,4.562,4126,3.031,4127,3.031,4128,3.031,4129,3.031,4130,4.562,4131,3.031,4132,3.031,4133,4.562,4134,3.031,4135,3.031,4136,3.031,4137,3.031,4138,3.031,4139,3.031,4140,3.031,4141,3.031,4142,3.031,4143,3.031,4144,4.562,4145,3.031,4146,3.031,4147,3.031,4148,3.031,4149,4.562,4150,4.562,4151,4.562,4152,3.639,4153,3.366,4154,3.031,4155,3.031,4156,3.031,4157,3.031,4158,2.661,4159,3.031,4160,7.136,4161,2.661,4162,2.236,4163,3.031,4164,3.031,4165,4.562,4166,4.562,4167,4.562,4168,4.562]],["title/components/ProvinceComponent.html",[180,0.251,740,1.08]],["body/components/ProvinceComponent.html",[0,0.01,3,0.084,4,0.1,5,0.082,7,0.984,9,0.108,10,0.479,11,1.543,13,0.53,14,1.918,17,1.811,19,0.496,22,0.702,24,1.176,25,0.011,26,0.611,27,0.323,28,0.739,29,0.997,32,1.039,35,1.054,36,1.113,37,0.826,42,1.809,44,0.955,45,0.719,48,1.011,49,0.864,57,0.722,58,1.228,60,0.485,71,0.235,73,0.232,75,0.577,77,0.188,83,0.003,84,0.005,85,0.003,87,0.957,89,1.182,94,2.839,106,0.743,108,0.513,112,3.876,114,0.53,115,1.193,116,1.074,117,3.416,118,1.543,119,1.59,120,1.055,121,1.64,122,1.577,123,1.931,124,1.931,125,2.441,126,2.441,127,2.834,128,1.039,129,3.101,130,2.474,131,2.991,132,2.079,136,0.925,137,1.144,138,1.042,139,0.953,140,1.011,141,1.108,142,1.068,144,1.042,146,1.974,147,1.042,149,1.675,150,3.084,151,2.075,153,1.359,154,2.533,155,2.441,156,1.265,157,1.712,158,1.373,159,1.359,161,1.265,164,1.866,170,0.743,171,1.469,172,1.223,180,0.309,189,1.011,191,0.981,193,0.925,201,0.876,215,0.473,238,0.876,253,2.155,300,0.61,303,1.866,329,1.359,435,1.445,446,0.7,469,0.719,495,0.76,569,2.242,571,0.7,573,3.928,574,3.515,590,2.961,610,1.098,652,0.739,653,0.76,654,0.781,655,0.826,658,0.644,659,1.457,661,0.906,663,0.906,677,0.76,678,1.129,679,1.712,680,0.826,681,0.826,682,0.681,683,0.826,684,0.719,685,0.826,686,0.719,687,0.826,688,0.739,689,0.826,690,0.739,691,0.826,692,0.739,693,0.826,694,0.739,695,0.781,696,0.826,697,0.719,698,1.261,699,0.739,700,0.781,701,0.826,702,0.739,703,0.826,704,0.739,705,0.826,706,0.719,707,0.826,708,0.826,709,0.719,710,0.826,711,0.739,712,0.826,713,0.719,714,0.826,715,0.739,716,1.529,717,0.739,718,0.7,719,0.7,720,1.261,721,0.739,722,0.76,723,0.826,724,0.719,725,0.826,726,0.739,727,0.826,728,0.739,729,0.826,730,0.7,731,0.826,732,0.739,733,0.826,734,0.76,735,0.803,736,0.826,737,0.719,738,0.681,739,0.826,740,1.49,741,0.826,742,0.7,743,0.826,744,0.719,745,0.781,746,0.739,747,0.826,748,0.76,749,0.826,750,0.739,751,0.826,752,0.719,753,0.826,754,0.739,755,0.781,756,0.739,757,0.719,758,0.803,759,0.627,760,0.719,761,0.826,762,0.719,763,0.826,764,0.719,765,0.826,766,0.719,767,0.826,768,0.719,769,0.826,770,0.719,771,0.826,772,0.719,773,0.826,774,0.719,775,0.781,776,0.826,777,0.359,780,1.498,781,1.498,788,1.369,789,1.912,794,1.074,800,3.965,803,1.858,804,4.308,805,1.76,806,3.44,829,2.474,862,2.557,863,0.826,884,1.866,944,3.01,946,1.972,949,1.972,952,1.972,966,2.075,1055,5.089,1093,2.557,1101,1.64,1113,2.226,1307,3.034,1310,1.531,1318,1.76,1319,1.76,1320,1.76,1327,1.76,1328,1.76,1329,1.76,1330,1.76,1331,1.76,1332,1.76,1333,1.76,1334,1.76,1335,3.278,1339,1.531,1342,1.76,1343,1.76,1344,1.76,1345,1.599,1346,1.531,1351,1.359,1352,1.599,1356,2.687,1360,2.961,1361,3.101,1362,2.961,1363,3.259,1364,3.259,1365,2.834,1369,2.337,1378,1.858,1380,1.858,1383,2.242,1384,2.836,1385,2.557,1387,2.836,1388,2.621,1389,3.01,1390,3.01,1391,3.01,1395,1.76,1397,1.76,1398,1.182,1399,1.805,1400,1.182,1401,1.805,1402,1.805,1403,1.805,1404,1.182,1405,1.182,1406,1.805,1407,1.805,1408,1.182,1409,1.182,1410,1.182,1411,1.182,1412,1.182,1413,1.805,1414,1.747,1415,1.182,1416,1.805,1417,1.805,1418,1.182,1419,1.805,1420,1.182,1421,1.182,1422,1.182,1423,1.182,1424,2.45,1425,1.182,1426,1.182,1427,1.182,1428,1.182,1429,1.182,1430,1.182,1431,1.182,1432,1.182,1433,1.182,1434,1.182,1435,1.182,1436,1.805,1437,1.182,1438,1.182,1439,1.182,1440,1.182,1441,1.805,1442,1.182,1443,1.182,1444,1.182,1445,1.182,1446,1.182,1447,1.182,1448,1.182,1449,1.182,1450,1.182,1451,1.182,1452,1.182,1453,1.182,1454,1.182,1455,1.805,1456,1.182,1457,1.182,1458,1.182,1459,1.182,1460,1.182,1461,0.981,1462,1.182,1463,1.182,1464,1.182,1465,1.182,1466,1.182,1467,1.182,1468,1.182,1469,1.182,1470,1.675,1471,1.858,1472,3.481,1925,2.28,1929,1.972,2034,2.28,2411,4.222,2413,2.836,3000,2.28,4153,2.109,4169,2.28,4170,3.832,4171,3.832,4172,2.858,4173,2.858,4174,3.832,4175,2.858,4176,2.858,4177,2.858,4178,2.858,4179,2.858,4180,2.858,4181,4.364,4182,2.858,4183,2.858,4184,2.858,4185,2.858,4186,2.858,4187,2.858,4188,2.858,4189,2.858,4190,2.858,4191,2.858,4192,7.157,4193,2.51,4194,2.51,4195,2.51,4196,2.51,4197,2.51,4198,2.51,4199,2.51,4200,2.51,4201,2.51,4202,2.51,4203,2.51,4204,2.51,4205,2.51,4206,2.51,4207,2.51,4208,2.51,4209,2.51,4210,2.51,4211,2.51,4212,2.51,4213,2.51,4214,2.51,4215,2.51,4216,2.51,4217,2.28,4218,2.51]],["title/interfaces/ProvinceList.html",[777,0.539,804,2.643]],["body/interfaces/ProvinceList.html",[0,0.015,3,0.128,4,0.152,5,0.081,7,0.976,9,0.164,10,0.647,19,0.492,25,0.011,27,0.253,28,0.56,29,0.84,36,1.074,37,0.676,42,1.732,44,0.781,58,0.676,60,0.503,71,0.271,73,0.351,75,0.874,77,0.222,83,0.005,84,0.007,85,0.005,87,0.95,106,0.738,108,0.693,112,2.802,114,0.526,115,1.328,116,1.628,117,2.319,120,0.717,122,0.976,130,1.679,131,2.52,132,1.287,150,2.52,154,2.52,157,1.844,158,1.362,170,0.738,171,2.225,172,1.355,180,0.344,189,1.532,191,1.487,193,1.402,201,1.108,238,1.108,300,0.924,303,1.852,329,2.06,435,0.717,569,2.225,573,4.269,574,3.419,590,2.423,659,0.717,661,0.899,663,0.899,740,1.09,777,0.544,779,1.444,780,2.023,781,2.023,788,1.732,789,2.055,794,1.628,800,4.234,803,2.815,804,4.631,805,2.667,806,3.83,829,2.788,862,2.538,863,1.252,884,1.852,944,4.065,946,2.988,949,2.988,952,2.988,966,2.802,1055,5.999,1093,2.538,1113,2.518,1307,2.802,1335,3.442,1345,2.423,1346,2.319,1351,2.06,1352,2.423,1360,2.423,1361,2.538,1362,2.423,1363,2.667,1364,2.667,1365,2.319,1369,2.319,1383,2.225,1384,2.815,1385,2.538,1387,2.815,1388,2.608,1389,2.988,1390,2.988,1391,2.988,1398,1.791,1399,2.437,1400,1.791,1401,2.437,1402,2.437,1403,2.437,1404,1.791,1405,1.791,1406,2.437,1407,2.437,1408,1.791,1409,1.791,1410,1.791,1411,1.791,1412,1.791,1413,2.437,1414,2.359,1415,1.791,1416,2.437,1417,2.437,1418,1.791,1419,2.437,1420,1.791,1421,1.791,1422,1.791,1423,1.791,1424,2.974,1425,1.791,1426,1.791,1427,1.791,1428,1.791,1429,1.791,1430,1.791,1431,1.791,1432,1.791,1433,1.791,1434,1.791,1435,1.791,1436,2.437,1437,1.791,1438,1.791,1439,1.791,1440,1.791,1441,2.437,1442,1.791,1443,1.791,1444,1.791,1445,1.791,1446,1.791,1447,1.791,1448,1.791,1449,1.791,1450,1.791,1451,1.791,1452,1.791,1453,1.791,1454,1.791,1455,2.437,1456,1.791,1457,1.791,1458,1.791,1459,1.791,1460,1.791,1461,1.487,1462,1.791,1463,1.791,1464,1.791,1465,1.791,1466,1.791,1467,1.791,1468,1.791,1469,1.791,1470,2.538,1471,2.815,1925,3.455,1929,2.988,2034,3.455,2411,3.455,2413,2.815,3000,3.455,4153,3.195,4169,3.455,4170,3.803,4171,3.803,4174,3.803,4192,7.661,4193,3.803,4194,3.803,4195,3.803,4196,3.803,4197,3.803,4198,3.803,4199,3.803,4200,3.803,4201,3.803,4202,3.803,4203,3.803,4204,3.803,4205,3.803,4206,3.803,4207,3.803,4208,3.803,4209,3.803,4210,3.803,4211,3.803,4212,3.803,4213,3.803,4214,3.803,4215,3.803,4216,3.803,4217,3.455,4218,3.803]],["title/components/RadioComponent.html",[180,0.251,742,1.05]],["body/components/RadioComponent.html",[0,0.012,3,0.098,4,0.116,5,0.092,7,0.747,9,0.125,10,0.535,11,1.724,13,0.593,14,2.065,17,1.95,19,0.554,22,0.708,24,1.237,25,0.011,26,0.635,27,0.326,28,0.77,29,0.824,32,1.161,33,0.906,35,1.047,36,1.119,37,0.902,42,1.649,44,1.226,45,0.834,48,1.13,49,0.898,57,0.807,58,1.294,60,0.464,70,2.319,71,0.223,73,0.269,75,0.669,77,0.17,83,0.004,84,0.006,85,0.004,87,1.069,89,1.371,94,2.914,106,0.83,108,0.39,112,3.968,114,0.593,115,1.304,117,3.64,118,1.724,119,1.777,120,1.124,121,1.833,122,1.656,123,2.823,124,2.823,125,2.728,126,2.728,127,3.097,128,1.161,129,3.389,130,2.473,131,3.142,132,2.43,136,1.073,137,1.327,138,1.208,139,1.105,140,1.172,141,1.285,142,1.167,144,2.108,146,2.513,147,2.108,149,1.942,150,3.224,151,2.319,153,1.576,154,2.727,155,2.728,156,1.467,157,0.707,158,1.043,159,1.576,161,1.467,164,2.473,170,0.564,171,1.703,172,1.176,176,1.172,180,0.338,189,1.172,191,1.674,193,1.073,197,2.728,215,0.548,238,0.548,253,2.408,274,1.246,300,0.707,375,0.931,416,2.721,435,1.46,439,0.881,446,0.811,469,0.834,495,0.881,521,0.985,571,0.811,610,1.227,652,0.857,653,1.296,654,0.906,655,0.958,658,0.747,659,1.47,661,1.012,663,1.012,677,0.881,678,1.261,679,1.843,680,0.958,681,0.958,682,0.789,683,0.958,684,0.834,685,0.958,686,0.834,687,0.958,688,0.857,689,0.958,690,0.857,691,0.958,692,0.857,693,0.958,694,0.857,695,0.906,696,0.958,697,0.834,698,1.409,699,0.857,700,0.906,701,0.958,702,0.857,703,0.958,704,0.857,705,0.958,706,0.834,707,0.958,708,0.958,709,0.834,710,0.958,711,0.857,712,0.958,713,0.834,714,0.958,715,0.857,716,1.671,717,0.857,718,0.811,719,0.811,720,1.409,721,0.857,722,0.881,723,0.958,724,0.834,725,0.958,726,0.857,727,0.958,728,0.857,729,0.958,730,0.811,731,0.958,732,0.857,733,0.958,734,0.881,735,0.931,736,0.958,737,0.834,738,0.789,739,0.958,740,0.834,741,0.958,742,1.664,743,0.958,744,0.834,745,0.906,746,0.857,747,0.958,748,0.881,749,0.958,750,0.857,751,0.958,752,0.834,753,0.958,754,0.857,755,0.906,756,0.857,757,0.834,758,0.931,759,0.727,760,0.834,761,0.958,762,0.834,763,0.958,764,0.834,765,0.958,766,0.834,767,0.958,768,0.834,769,0.958,770,0.834,771,0.958,772,0.834,773,0.958,774,0.834,775,0.906,776,0.958,777,0.416,788,1.261,789,1.743,829,2.636,855,1.576,863,0.958,929,1.942,1078,2.287,1082,2.445,1101,1.833,1127,4.614,1153,2.644,1307,3.232,1310,1.775,1318,2.041,1319,2.041,1320,2.041,1327,2.041,1328,2.041,1329,2.041,1330,2.041,1331,2.041,1332,2.041,1333,2.041,1334,2.041,1335,2.972,1339,1.775,1342,2.041,1343,2.041,1344,2.041,1345,1.854,1346,1.775,1351,1.576,1352,1.854,1356,3.003,1365,3.097,1395,2.041,1397,2.041,1584,2.287,2680,2.154,2812,5.422,3550,2.445,3598,4.705,3599,2.644,3600,5.862,3601,2.91,3602,2.644,3603,2.91,3604,5.079,3605,2.644,3606,2.91,3607,5.968,3608,2.91,3609,5.968,3610,2.91,3611,2.91,3612,5.6,3613,2.644,3614,4.281,3615,4.281,3616,5.079,3617,5.6,3618,3.89,3619,4.281,3620,2.91,4219,4.876,4220,4.876,4221,3.314,4222,3.314,4223,3.314,4224,3.314,4225,4.876,4226,3.314,4227,3.314,4228,3.314,4229,3.314,4230,3.314,4231,3.314,4232,3.314,4233,3.314,4234,3.314,4235,4.876]],["title/interfaces/ReadOnlyFields.html",[777,0.539,809,2.96]],["body/interfaces/ReadOnlyFields.html",[0,0.011,3,0.091,4,0.108,5,0.058,7,1.042,9,0.117,10,0.508,11,1.091,19,0.351,25,0.011,26,0.24,27,0.249,28,0.73,29,1.217,33,1.264,35,0.619,36,1.037,37,1.259,39,1.524,52,0.999,58,0.865,60,0.503,65,1.235,71,0.251,73,0.25,74,2.15,75,0.623,77,0.182,83,0.004,84,0.006,85,0.004,87,0.677,106,1.049,108,0.904,109,1.808,114,0.375,115,1.042,116,1.738,118,1.091,119,1.125,122,0.696,128,1.758,130,1.197,139,1.029,144,1.125,146,1.541,147,1.125,158,0.971,159,1.468,161,1.366,172,1.347,180,0.36,181,3.19,182,2.476,187,2.12,189,1.091,191,1.059,192,3.19,194,3.604,197,1.726,199,1.653,201,1.146,205,1.366,208,2.641,214,1.793,229,2.006,233,1.653,234,1.524,238,0.511,270,1.235,274,1.16,299,1.744,300,1.477,301,1.059,329,1.468,333,1.586,338,2.293,342,1.848,351,1.468,362,1.586,363,1.374,376,0.971,377,1.414,411,2.393,416,2.22,435,0.511,439,0.82,459,2.006,473,1.653,508,2.848,521,1.374,531,1.415,564,1.415,569,1.586,573,4.122,574,3.802,585,3.604,586,1.726,591,1.808,595,1.32,659,0.511,661,0.64,663,0.64,682,1.101,719,0.755,722,1.229,738,1.101,777,0.696,778,3.825,779,1.029,780,1.587,781,1.587,782,2.277,783,3.411,784,3.689,785,3.689,786,4.118,787,4.908,788,1.196,789,1.516,790,2.587,791,2.371,792,1.977,793,2.284,794,1.16,795,2.587,796,2.277,797,4.308,798,2.277,799,3.604,800,3.258,801,2.129,802,3.19,803,2.006,804,3.793,805,3.415,806,3.006,807,2.277,808,4.003,809,4.777,810,2.129,811,2.277,812,2.462,813,2.462,814,2.462,815,1.524,816,1.808,817,1.901,818,1.653,819,1.415,820,2.587,821,3.689,822,2.709,823,2.129,824,2.462,825,2.462,826,2.277,827,2.129,828,2.462,829,2.558,830,5.728,831,2.277,832,2.129,833,2.277,834,2.277,835,2.709,836,2.462,837,2.277,838,2.462,839,4.058,840,2.277,841,2.462,842,2.277,843,2.129,844,3.689,845,2.462,846,2.462,847,3.689,848,2.848,849,2.462,850,2.462,851,2.462,852,2.462,853,2.462,854,2.371,855,2.637,856,1.808,857,3.024,858,2.462,859,2.462,860,2.462,861,4.249,862,1.808,863,0.892,864,2.277,865,2.462,866,2.462,867,3.689,868,6.134,869,3.689,870,2.709,871,3.689,872,6.023,873,4.424,874,1.586,875,2.277,876,2.006,877,2.462,878,2.462,879,2.462,880,2.462,881,2.462,882,2.462,883,4.913,884,1.32,885,2.462,886,2.462,887,3.689,888,2.848,889,1.808,890,3.689,891,5.262,892,5.524,893,5.262,894,2.462,895,2.462,896,3.689,897,2.462,898,3.689,899,2.709,900,2.462,901,2.277,902,2.462,903,2.462,904,1.726,905,2.462,906,2.462,907,3.604,908,2.462,909,2.462,910,2.462,911,3.411,912,3.006,913,3.689,914,3.689,915,3.689,916,3.689,917,2.462,918,1.32,919,2.462,920,2.462,921,3.825,922,2.129,923,2.462,924,1.235,925,2.462,926,2.462,927,2.462,928,2.277,929,1.808,930,2.462,931,2.462,932,2.462,933,2.129,934,2.462,935,4.913,936,2.462,937,2.462,938,2.462,939,2.462,940,2.462,941,4.091,942,2.129,943,2.462,944,4.249,945,3.689,946,3.19,947,3.689,948,4.424,949,2.129,950,2.462,951,2.462,952,2.129,953,2.006,954,1.808,955,1.901,956,1.524,957,2.462,958,2.462,959,2.462,960,3.411,961,2.462,962,2.462,963,2.277,964,2.462,965,2.277,966,2.199,967,2.462,968,2.462,969,2.277,970,2.462,971,1.901,972,2.462,973,2.277,974,2.277,975,2.462,976,2.462,977,2.462,978,2.462,979,2.462,980,2.462,981,2.462,982,2.462,983,2.462,984,2.462,985,2.462,986,2.462,987,2.462,988,2.462,989,3.689,990,2.462,991,2.462]],["title/guards/RouteGuardService.html",[360,2.4,389,2.643]],["body/guards/RouteGuardService.html",[0,0.016,3,0.137,4,0.162,5,0.087,9,0.175,13,0.842,14,1.996,16,3.65,19,0.526,20,2.592,21,3.908,22,0.599,24,1.153,25,0.011,26,0.574,27,0.279,28,0.702,29,1.127,37,1.153,44,1.112,49,0.761,52,1.5,57,1.223,60,0.405,65,2.775,71,0.259,73,0.375,76,1.981,77,0.137,83,0.006,84,0.007,85,0.006,106,1.05,108,0.93,114,0.563,122,1.39,128,1.76,179,2.203,183,4.008,186,3.696,196,3.798,201,1.02,245,3.384,274,1.741,275,4.121,305,1.5,316,1.981,338,1.916,356,1.94,359,3.196,361,3.712,362,2.381,363,1.833,375,1.733,376,2.325,377,2.119,384,5.332,385,3.196,387,4.919,388,6.488,389,5.052,398,2.715,439,1.639,473,4.121,474,2.481,536,5.895,595,1.981,854,2.964,855,3.296,856,4.637,874,2.381,1030,4.254,1081,2.288,1184,3.012,1232,3.196,1233,3.012,1242,1.59,1249,4.254,1250,3.418,1257,3.196,1269,3.696,1277,2.381,1278,2.381,1285,4.254,1293,4.254,1650,3.696,1651,2.715,2621,4.068,2626,4.068,2875,4.782,2879,4.062,2998,5.786,3167,3.418,3781,4.068,3782,4.068,3783,4.068,3784,6.756,3785,7.203,3786,7.203,3787,4.068,3788,3.696,3789,5.415,3790,5.415,3791,3.613,3792,5.415,3795,5.415,3796,4.068,3797,5.415,3799,4.068,3800,4.068,3801,7.091,3802,7.091,3804,6.086,3805,4.068,3807,5.415,3808,4.068,4236,6.756,4237,6.167,4238,6.167,4239,4.633,4240,4.633,4241,4.633,4242,4.633,4243,4.633,4244,4.633,4245,4.633,4246,4.633,4247,4.633]],["title/interfaces/SampleImageInterface.html",[777,0.539,4248,3.166]],["body/interfaces/SampleImageInterface.html",[0,0.022,3,0.184,4,0.218,5,0.117,7,1.677,9,0.236,10,0.816,19,0.708,25,0.011,27,0.3,28,0.706,58,1.16,60,0.514,71,0.278,72,2.666,73,0.505,77,0.219,83,0.008,84,0.009,85,0.008,87,1.367,120,1.315,172,1.315,180,0.435,435,1.031,496,4.3,659,1.031,661,1.293,663,1.293,667,5.18,675,3.079,676,2.964,744,1.568,745,2.173,777,0.783,779,2.078,794,2.343,863,1.801,1481,3.653,2746,5.131,2809,4.599,3624,4.599,3694,4.973,3696,4.973,3791,4.824,4248,5.864,4249,4.973,4250,4.599,4251,7.228,4252,5.473,4253,5.473,4254,5.473,4255,5.473,4256,5.473]],["title/components/SampleModalComponent.html",[180,0.251,744,1.08]],["body/components/SampleModalComponent.html",[0,0.017,3,0.138,4,0.163,5,0.117,7,1.671,9,0.177,10,0.681,13,0.753,19,0.791,22,0.656,25,0.011,26,0.541,27,0.28,32,1.477,35,0.83,36,0.804,44,1.118,45,1.175,48,1.437,49,0.681,57,1.026,58,1.156,60,0.463,71,0.244,72,1.997,73,0.378,77,0.183,83,0.006,84,0.007,85,0.006,87,1.36,89,1.932,94,1.652,120,1.401,121,2.33,136,1.512,137,1.87,138,1.702,139,1.557,140,1.652,141,1.811,142,1.405,170,0.795,172,1.151,180,0.407,215,0.773,435,1.489,446,1.143,469,1.175,495,1.242,496,4.277,571,1.143,610,1.56,652,1.208,653,1.242,654,1.277,655,1.35,658,1.053,659,1.495,661,1.287,663,1.287,667,4.884,675,2.307,676,2.221,677,1.242,678,1.603,679,2.142,680,1.35,681,1.35,682,1.112,683,1.35,684,1.175,685,1.35,686,1.175,687,1.35,688,1.208,689,1.35,690,1.208,691,1.35,692,1.208,693,1.35,694,1.208,695,1.277,696,1.35,697,1.175,698,1.792,699,1.208,700,1.277,701,1.35,702,1.208,703,1.35,704,1.208,705,1.35,706,1.175,707,1.35,708,1.35,709,1.175,710,1.35,711,1.208,712,1.35,713,1.175,714,1.35,715,1.208,716,2.011,717,1.208,718,1.143,719,1.143,720,1.792,721,1.208,722,1.242,723,1.35,724,1.175,725,1.35,726,1.208,727,1.35,728,1.208,729,1.35,730,1.143,731,1.35,732,1.208,733,1.35,734,1.242,735,1.313,736,1.35,737,1.175,738,1.112,739,1.35,740,1.175,741,1.35,742,1.143,743,1.35,744,1.865,745,2.212,746,1.208,747,1.35,748,1.242,749,1.35,750,1.208,751,1.35,752,1.175,753,1.35,754,1.208,755,1.277,756,1.208,757,1.175,758,1.313,759,1.024,760,1.175,761,1.35,762,1.175,763,1.35,764,1.175,765,1.35,766,1.175,767,1.35,768,1.175,769,1.35,770,1.175,771,1.35,772,1.175,773,1.35,774,1.175,775,1.277,776,1.35,777,0.586,794,1.755,863,1.35,1481,3.633,2746,4.801,2809,5.134,3624,3.446,3662,5.444,3694,5.914,3696,4.946,3791,2.737,4248,5.134,4249,6.455,4250,5.97,4251,4.101,4252,5.444,4253,6.111,4254,4.101,4255,6.509,4256,4.101,4257,6.2,4258,4.671,4259,4.671,4260,4.671,4261,4.671,4262,6.2]],["title/injectables/ServerPayload.html",[356,1.35,1181,3.166]],["body/injectables/ServerPayload.html",[0,0.024,3,0.161,4,0.191,5,0.103,9,0.206,10,0.753,22,0.637,25,0.011,27,0.297,60,0.524,71,0.275,73,0.443,77,0.202,83,0.007,84,0.008,85,0.007,93,5.342,108,0.972,120,1.241,128,1.301,201,0.904,244,4.394,250,5.173,256,4.618,275,4.429,282,3.55,315,3.2,316,2.336,356,2.359,358,2.806,1157,3.55,1158,6.464,1159,4.357,1165,6.022,1166,6.584,1168,5.982,1169,6.022,1170,7.031,1172,6.022,1173,7.261,1174,6.906,1176,4.795,1177,4.4,1178,4.029,1179,6.584,1180,3.363,1181,5.06,1182,5.59,1183,6.584,1184,3.55,1185,6.584,1186,6.584,1187,6.022,1188,4.795,1189,6.022,1190,6.584,4263,5.461,4264,5.461,4265,5.461,4266,5.461]],["title/modules/SharedCoreModule.html",[1191,2.643,4267,2.789]],["body/modules/SharedCoreModule.html",[0,0.011,3,0.09,4,0.107,5,0.057,25,0.011,45,1.152,71,0.311,73,0.247,74,1.776,75,0.615,76,1.303,77,0.09,83,0.004,84,0.006,85,0.004,201,0.504,205,1.349,321,1.566,351,1.449,362,2.353,376,1.441,446,1.905,469,1.152,509,1.876,569,1.566,571,1.905,652,2.013,675,2.718,676,2.178,677,0.81,682,1.854,684,1.959,686,1.959,690,2.013,692,2.013,694,2.013,697,1.959,699,2.013,702,2.013,704,2.013,706,1.959,709,1.959,711,2.013,713,1.959,715,2.013,717,2.013,718,1.905,721,2.013,724,1.959,726,2.013,728,2.013,730,1.905,732,2.013,734,2.07,737,1.959,740,1.959,742,1.905,744,1.959,746,2.013,748,2.07,750,2.013,752,1.959,754,2.013,756,1.184,757,1.959,759,0.668,760,1.959,762,1.959,764,1.959,766,1.959,768,1.959,770,1.959,772,1.959,774,1.959,889,1.785,924,1.22,966,1.449,1074,1.505,1119,2.431,1191,1.876,1193,1.876,1194,3.796,1195,4.39,1200,3.654,1201,2.248,1207,2.102,1216,4.021,1219,4.021,1220,2.431,1688,2.248,1832,2.431,2436,2.431,2664,2.431,2722,2.431,2740,2.431,3259,3.379,3305,2.248,3378,2.431,3419,2.431,3623,2.431,3852,2.431,3908,2.431,4119,2.431,4250,2.248,4267,5.905,4268,2.675,4269,2.675,4270,2.675,4271,2.675,4272,2.675,4273,3.047,4274,3.047,4275,4.58,4276,5.503,4277,4.58,4278,3.047,4279,3.047,4280,3.047,4281,2.431,4282,4.58,4283,3.047,4284,3.047,4285,3.047,4286,4.58,4287,3.047,4288,3.047,4289,3.047,4290,3.047,4291,3.047,4292,3.047,4293,4.58,4294,5.503,4295,3.047,4296,3.047,4297,3.047,4298,4.58,4299,2.675,4300,3.047,4301,3.047,4302,3.047,4303,3.047,4304,3.047,4305,3.047,4306,3.047,4307,3.047,4308,3.047,4309,3.047,4310,4.58,4311,3.047,4312,3.047,4313,2.675,4314,3.047,4315,3.047,4316,3.047,4317,3.047,4318,3.047,4319,3.047,4320,3.047,4321,3.047,4322,3.047,4323,3.047,4324,3.047,4325,3.047,4326,3.379,4327,3.047,4328,3.047,4329,2.431,4330,3.047,4331,3.047,4332,3.047,4333,3.047,4334,3.047,4335,3.047,4336,3.047,4337,3.047,4338,3.047,4339,3.047,4340,2.431,4341,3.047,4342,3.047,4343,3.047,4344,3.047,4345,3.047,4346,3.047,4347,3.047,4348,3.047,4349,3.047,4350,3.047,4351,4.832,4352,3.047,4353,3.047,4354,3.047,4355,3.047,4356,3.047]],["title/interfaces/SimpleDate.html",[777,0.539,4357,3.166]],["body/interfaces/SimpleDate.html",[3,0.196,4,0.232,5,0.125,9,0.251,10,0.847,25,0.011,27,0.308,77,0.196,83,0.008,84,0.009,85,0.008,157,1.415,176,2.346,521,2.626,777,0.969,779,2.211,2422,4.577,2483,5.795,2485,6.197,2487,6.197,4357,5.692,4358,5.825,4359,5.825,4360,6.634,4361,6.634,4362,5.825,4363,5.825]],["title/components/SinComponent.html",[180,0.251,746,1.11]],["body/components/SinComponent.html",[0,0.01,3,0.087,4,0.103,5,0.084,7,0.662,9,0.111,10,0.489,11,1.575,13,0.541,14,1.944,17,1.836,19,0.506,22,0.704,24,1.184,25,0.011,26,0.615,27,0.322,28,0.743,29,0.766,32,1.06,35,1.033,36,1.118,37,0.458,42,1.996,44,0.97,45,0.739,48,1.032,49,0.886,56,3.072,57,0.737,58,1.235,60,0.481,71,0.226,73,0.238,75,0.592,77,0.087,83,0.007,84,0.005,85,0.004,87,0.977,89,1.214,94,2.853,106,0.916,108,0.83,112,3.893,114,0.541,115,1.213,117,3.457,118,1.575,119,1.623,120,1.068,121,1.674,122,1.591,123,1.971,124,1.971,125,2.491,126,2.491,127,2.881,128,1.732,129,3.152,130,2.503,131,3.019,132,2.213,136,0.95,137,1.175,138,1.07,139,0.978,140,1.038,141,1.138,142,1.086,144,1.07,146,2.001,147,1.07,149,1.72,150,3.11,151,3.357,153,1.396,154,2.568,155,2.491,156,1.299,157,0.95,158,0.923,159,1.396,161,1.299,164,1.904,170,0.758,171,1.508,172,1.124,176,1.575,178,2.753,179,1.396,180,0.377,189,1.038,191,1.008,193,0.95,201,0.89,205,1.971,215,0.486,216,4.43,236,3.503,238,0.737,253,2.199,270,1.783,300,0.95,333,1.508,338,1.214,355,2.061,411,2.265,416,1.175,417,2.385,425,3.072,432,2.742,435,1.447,446,0.719,469,0.739,495,0.78,521,2.352,528,3.903,564,1.346,571,0.719,590,3.01,610,1.12,652,0.759,653,0.78,654,0.802,655,0.848,658,0.662,659,1.46,661,0.924,663,0.924,677,0.78,678,1.152,679,1.735,680,0.848,681,0.848,682,0.699,683,0.848,684,0.739,685,0.848,686,0.739,687,0.848,688,0.759,689,0.848,690,0.759,691,0.848,692,0.759,693,0.848,694,0.759,695,0.802,696,0.848,697,0.739,698,1.287,699,0.759,700,0.802,701,0.848,702,0.759,703,0.848,704,0.759,705,0.848,706,0.739,707,0.848,708,0.848,709,0.739,710,0.848,711,0.759,712,0.848,713,0.739,714,0.848,715,0.759,716,1.555,717,0.759,718,0.719,719,0.719,720,1.287,721,0.759,722,0.78,723,0.848,724,0.739,725,0.848,726,0.759,727,0.848,728,0.759,729,0.848,730,0.719,731,0.848,732,0.759,733,0.848,734,0.78,735,0.825,736,0.848,737,0.739,738,0.699,739,0.848,740,0.739,741,0.848,742,0.719,743,0.848,744,0.739,745,0.802,746,1.553,747,0.848,748,0.78,749,0.848,750,0.759,751,0.848,752,0.739,753,0.848,754,0.759,755,0.802,756,0.759,757,0.739,758,0.825,759,0.644,760,0.739,761,0.848,762,0.739,763,0.848,764,0.739,765,0.848,766,0.739,767,0.848,768,0.739,769,0.848,770,0.739,771,0.848,772,0.739,773,0.848,774,0.739,775,0.802,776,0.848,777,0.559,788,1.391,789,1.929,829,2.503,854,2.568,863,0.848,889,3.152,918,1.255,1040,1.908,1101,1.674,1113,2.257,1242,2.216,1307,3.07,1310,1.572,1318,1.808,1319,1.808,1320,1.808,1327,1.808,1328,1.808,1329,1.808,1330,1.808,1331,1.808,1332,1.808,1333,1.808,1334,1.808,1335,3.627,1339,1.572,1342,1.808,1343,1.808,1344,1.808,1345,1.642,1346,1.572,1351,1.396,1352,1.642,1356,2.742,1360,3.01,1361,3.152,1362,3.01,1363,3.313,1364,3.313,1365,2.881,1369,2.385,1378,1.908,1380,1.908,1395,1.808,1397,1.808,1470,1.72,1471,1.908,1513,2.385,2421,3.552,2422,3.072,2428,3.072,2429,2.894,2430,3.552,2469,3.152,2715,2.342,2716,2.342,2717,2.342,2786,1.908,2789,1.908,2892,3.152,2897,2.385,2926,3.285,3350,2.342,3688,3.91,3713,2.578,3850,3.91,4158,2.578,4161,2.578,4162,2.166,4364,2.578,4365,6.198,4366,4.453,4367,4.453,4368,6.005,4369,4.453,4370,4.453,4371,2.935,4372,4.453,4373,2.935,4374,2.935,4375,6.794,4376,2.935,4377,4.453,4378,2.935,4379,2.935,4380,2.935,4381,2.935,4382,2.935,4383,2.935,4384,2.935,4385,4.453,4386,4.453,4387,2.935,4388,2.935,4389,2.935,4390,2.935,4391,2.935,4392,7.272,4393,5.38,4394,2.935,4395,2.935,4396,2.578,4397,4.453,4398,2.935,4399,6.455,4400,2.578,4401,2.935,4402,2.935,4403,2.935,4404,2.935,4405,2.935,4406,2.935,4407,2.578,4408,2.935,4409,2.935,4410,2.935,4411,4.453]],["title/components/ThumbnailComponent.html",[180,0.251,750,1.11]],["body/components/ThumbnailComponent.html",[0,0.015,3,0.122,4,0.145,5,0.108,9,0.157,10,0.628,13,0.696,19,0.472,22,0.672,24,0.893,25,0.011,26,0.575,27,0.302,28,0.544,29,0.815,32,1.363,35,0.766,36,0.742,37,0.893,44,1.032,45,1.044,48,1.326,49,0.775,57,0.947,58,1.102,60,0.243,71,0.229,72,1.775,73,0.336,77,0.122,83,0.005,84,0.007,85,0.005,89,1.717,114,0.696,115,1.477,120,1.084,122,1.592,128,1.56,142,1.155,170,0.975,172,1.084,180,0.383,201,0.687,215,0.687,238,0.687,295,3.116,322,3.311,435,1.48,446,1.016,469,1.044,495,1.103,521,1.701,561,2.698,571,1.016,610,1.44,652,1.073,653,1.103,654,1.134,655,1.199,658,0.936,659,1.487,661,1.188,663,1.188,675,2.05,676,1.974,677,1.103,678,1.48,679,2.041,680,1.199,681,1.199,682,0.988,683,1.199,684,1.044,685,1.199,686,1.044,687,1.199,688,1.073,689,1.199,690,1.073,691,1.199,692,1.073,693,1.199,694,1.073,695,1.134,696,1.199,697,1.044,698,1.654,699,1.073,700,1.134,701,1.199,702,1.073,703,1.199,704,1.073,705,1.199,706,1.044,707,1.199,708,1.199,709,1.044,710,1.199,711,1.073,712,1.199,713,1.044,714,1.199,715,1.073,716,1.893,717,1.073,718,1.016,719,1.016,720,1.654,721,1.073,722,1.103,723,1.199,724,1.044,725,1.199,726,1.073,727,1.199,728,1.073,729,1.199,730,1.016,731,1.199,732,1.073,733,1.199,734,1.103,735,1.166,736,1.199,737,1.044,738,0.988,739,1.199,740,1.044,741,1.199,742,1.016,743,1.199,744,1.044,745,1.134,746,1.073,747,1.199,748,1.103,749,1.199,750,1.826,751,1.199,752,1.044,753,1.199,754,1.073,755,1.134,756,1.073,757,1.044,758,1.166,759,0.91,760,1.044,761,1.199,762,1.044,763,1.199,764,1.044,765,1.199,766,1.044,767,1.199,768,1.044,769,1.199,770,1.044,771,1.199,772,1.044,773,1.199,774,1.044,775,1.134,776,1.199,780,1.965,781,1.965,788,1.48,789,1.93,862,4.138,918,2.448,1101,2.151,1398,1.717,1399,2.367,1400,1.717,1401,2.367,1402,2.367,1403,2.367,1404,1.717,1405,1.717,1406,2.367,1407,2.367,1408,1.717,1409,1.717,1410,1.717,1411,1.717,1412,1.717,1413,2.367,1414,2.291,1415,1.717,1416,2.367,1417,2.367,1418,1.717,1419,2.367,1420,1.717,1421,1.717,1422,1.717,1423,1.717,1424,2.921,1425,1.717,1426,1.717,1427,1.717,1428,1.717,1429,1.717,1430,1.717,1431,1.717,1432,1.717,1433,1.717,1434,1.717,1435,1.717,1436,1.717,1437,1.717,1438,1.717,1439,1.717,1440,1.717,1441,2.367,1442,1.717,1443,1.717,1444,1.717,1445,1.717,1446,1.717,1447,1.717,1448,1.717,1449,1.717,1450,1.717,1451,1.717,1452,1.717,1453,1.717,1454,1.717,1455,2.367,1456,1.717,1457,1.717,1458,1.717,1459,1.717,1460,1.717,1461,1.425,1462,1.717,1463,1.717,1464,1.717,1465,1.717,1466,1.717,1467,1.717,1468,1.717,1469,1.717,2745,3.062,2746,4.52,2793,4.223,2794,4.223,2873,3.644,2895,4.223,2897,2.223,2950,4.566,2995,3.311,3129,3.644,3235,4.223,3707,5.026,3708,5.753,3736,5.753,4412,3.644,4413,5.724,4414,5.724,4415,6.551,4416,8.296,4417,6.551,4418,6.551,4419,6.551,4420,6.551,4421,5.724,4422,5.724,4423,4.15,4424,4.15,4425,4.15,4426,4.15,4427,4.15,4428,4.15,4429,4.15,4430,4.15,4431,4.15,4432,7.062,4433,4.15,4434,4.15,4435,5.724,4436,4.15,4437,4.15,4438,4.15,4439,5.724,4440,7.062,4441,4.15,4442,5.724,4443,5.724]],["title/components/ToggleComponent.html",[180,0.251,752,1.08]],["body/components/ToggleComponent.html",[0,0.016,3,0.134,4,0.159,5,0.115,7,1.654,9,0.172,10,0.669,13,0.741,19,0.781,22,0.638,25,0.011,26,0.534,27,0.277,29,0.868,32,1.452,35,0.609,36,0.59,44,1.099,45,1.146,48,1.412,49,0.5,57,1.008,58,0.71,60,0.402,71,0.213,73,0.369,77,0.134,83,0.006,84,0.007,85,0.006,87,1.337,94,1.61,114,0.741,115,1.549,120,1.008,121,2.291,122,1.654,132,2.042,136,1.474,137,1.823,138,1.659,139,1.517,140,1.61,141,1.766,142,1.387,170,1.038,172,1.137,180,0.402,215,0.753,238,0.753,342,2.29,435,1.487,446,1.114,469,1.146,495,1.21,571,1.114,610,1.534,652,1.177,653,1.21,654,1.244,655,1.316,658,1.026,659,1.493,661,1.265,663,1.265,677,1.21,678,1.576,679,2.12,680,1.316,681,1.316,682,1.084,683,1.316,684,1.146,685,1.316,686,1.146,687,1.316,688,1.177,689,1.316,690,1.177,691,1.316,692,1.177,693,1.316,694,1.177,695,1.244,696,1.316,697,1.146,698,1.761,699,1.177,700,1.244,701,1.316,702,1.177,703,1.316,704,1.177,705,1.316,706,1.146,707,1.316,708,1.316,709,1.146,710,1.316,711,1.177,712,1.316,713,1.146,714,1.316,715,1.177,716,1.986,717,1.177,718,1.114,719,1.114,720,1.761,721,1.177,722,1.21,723,1.316,724,1.146,725,1.316,726,1.177,727,1.316,728,1.177,729,1.316,730,1.114,731,1.316,732,1.177,733,1.316,734,1.21,735,1.279,736,1.316,737,1.146,738,1.084,739,1.316,740,1.146,741,1.316,742,1.114,743,1.316,744,1.146,745,1.244,746,1.177,747,1.316,748,1.21,749,1.316,750,1.177,751,1.316,752,1.846,753,1.316,754,1.177,755,1.244,756,1.177,757,1.146,758,1.279,759,0.998,760,1.146,761,1.316,762,1.146,763,1.316,764,1.146,765,1.316,766,1.146,767,1.316,768,1.146,769,1.316,770,1.146,771,1.316,772,1.146,773,1.316,774,1.146,775,1.244,776,1.316,780,2.092,781,2.092,788,1.576,789,2.006,794,1.711,863,1.316,1101,2.291,1125,4.862,1134,5.481,1398,1.883,1399,2.521,1400,1.883,1401,2.521,1402,2.521,1403,2.521,1404,1.883,1405,1.883,1406,2.521,1407,2.521,1408,1.883,1409,1.883,1410,1.883,1411,1.883,1412,1.883,1413,2.521,1414,2.44,1415,1.883,1416,2.521,1417,2.521,1418,1.883,1419,2.521,1420,1.883,1421,1.883,1422,1.883,1423,1.883,1424,3.035,1425,1.883,1426,1.883,1427,1.883,1428,1.883,1429,1.883,1430,1.883,1431,1.883,1432,1.883,1433,1.883,1434,1.883,1435,1.883,1436,1.883,1437,1.883,1438,1.883,1439,1.883,1440,1.883,1441,2.521,1442,1.883,1443,1.883,1444,1.883,1445,1.883,1446,1.883,1447,1.883,1448,1.883,1449,1.883,1450,1.883,1451,1.883,1452,1.883,1453,1.883,1454,1.883,1455,2.521,1456,1.883,1457,1.883,1458,1.883,1459,1.883,1460,1.883,1461,1.563,1462,1.883,1463,1.883,1464,1.883,1465,1.883,1466,1.883,1467,1.883,1468,1.883,1469,1.883,4444,3.998,4445,6.095,4446,6.095,4447,6.095,4448,4.553,4449,4.553,4450,4.553]],["title/directives/ValidateBcPostalDirective.html",[215,0.71,764,1.08]],["body/directives/ValidateBcPostalDirective.html",[0,0.021,3,0.173,4,0.205,5,0.11,9,0.222,13,0.871,22,0.475,24,0.915,25,0.011,26,0.456,27,0.271,28,0.557,33,1.603,49,0.644,60,0.343,71,0.251,73,0.475,75,1.184,77,0.211,83,0.007,84,0.009,85,0.007,106,1.319,107,2.897,108,0.91,114,0.871,151,3.409,176,2.074,193,2.611,196,3.613,201,1.186,215,1.281,217,4.332,218,3.282,314,3.437,363,2.131,376,2.255,377,2.192,398,3.437,411,2.757,439,1.56,634,2.596,658,1.322,659,1.186,738,1.397,759,1.286,764,2.029,787,3.813,857,2.69,966,3.682,1015,6.434,1016,6.295,1017,3.437,1018,4.68,1019,4.68,1030,4.047,1126,3.287,1249,4.047,1348,4.047,1388,2.596,2666,4.768,2668,4.726,2671,3.613,2672,5.094,2674,4.415,2679,4.415,2689,3.142,2710,2.897,3848,3.613,4118,5.289,4152,4.68,4326,5.289,4451,5.151,4452,7.082,4453,5.866,4454,5.866,4455,5.151]],["title/directives/ValidateCityDirective.html",[215,0.71,766,1.08]],["body/directives/ValidateCityDirective.html",[0,0.021,3,0.176,4,0.209,5,0.112,9,0.226,13,0.881,22,0.484,24,0.931,25,0.011,26,0.464,27,0.274,28,0.567,49,0.655,60,0.349,71,0.254,73,0.484,75,1.205,77,0.214,83,0.009,84,0.009,85,0.007,106,1.329,107,2.948,108,0.917,114,0.881,151,3.446,193,2.627,201,1.291,215,1.199,217,4.365,314,3.498,363,2.154,376,2.279,377,2.215,411,2.771,634,2.642,658,1.346,659,1.199,759,1.309,766,2.041,786,3.197,1126,3.322,1383,3.067,1388,2.642,2666,4.805,2668,4.572,2671,3.676,2672,5.119,2674,4.462,2679,4.462,2689,3.197,2710,3.579,2892,3.498,3078,4.404,3341,4.246,3848,3.676,4456,6.362,4457,5.241,4458,7.124,4459,5.969,4460,5.241,4461,4.762]],["title/directives/ValidateNameDirective.html",[215,0.71,768,1.08]],["body/directives/ValidateNameDirective.html",[0,0.021,3,0.175,4,0.208,5,0.112,9,0.224,13,0.877,22,0.481,24,0.925,25,0.011,26,0.561,27,0.273,28,0.563,49,0.651,60,0.347,71,0.253,73,0.481,75,1.197,77,0.213,83,0.007,84,0.009,85,0.007,106,1.325,107,2.93,108,0.915,114,0.877,151,3.433,193,2.687,201,1.194,214,2.3,215,1.194,217,4.353,314,3.476,363,2.145,375,1.667,376,2.271,377,2.207,398,4.23,411,2.766,634,2.626,658,1.337,659,1.194,759,1.301,768,2.037,1017,3.476,1126,3.31,1383,3.048,1388,2.626,2666,4.792,2668,4.56,2671,3.653,2672,5.11,2674,4.446,2679,4.446,2689,3.177,2710,3.565,3341,4.23,3342,4.377,3848,3.653,4462,6.338,4463,5.209,4464,7.109,4465,5.932]],["title/directives/ValidatePostalcodeDirective.html",[215,0.71,770,1.08]],["body/directives/ValidatePostalcodeDirective.html",[0,0.019,3,0.154,4,0.183,5,0.098,9,0.198,13,0.811,22,0.596,24,0.816,25,0.011,26,0.407,27,0.293,28,0.497,29,1.22,32,1.59,35,0.894,36,0.866,37,1.041,49,0.575,60,0.43,71,0.234,73,0.424,75,1.056,77,0.197,83,0.006,84,0.008,85,0.006,106,1.416,107,2.585,108,0.977,114,0.811,158,2.313,172,1.216,193,2.59,201,1.216,215,1.105,217,4.113,314,3.067,363,1.984,376,2.1,377,2.041,411,2.666,634,3.254,658,1.18,659,1.105,738,1.246,759,1.148,770,1.948,827,5.735,857,2.4,864,3.861,966,2.489,1015,5.326,1017,3.067,1018,4.175,1019,4.175,1126,3.061,1383,2.689,1388,2.316,2666,4.528,2668,4.308,2671,3.223,2672,5.037,2674,4.112,2675,3.402,2679,4.769,2689,2.803,2710,3.825,2892,3.912,3317,3.861,3341,4.687,3848,3.223,4118,5.713,4152,4.175,4326,5.713,4455,4.595,4461,5.326,4466,4.595,4467,6.455,4468,8.313,4469,5.233,4470,5.233,4471,5.233,4472,5.233,4473,5.233,4474,6.676,4475,6.676,4476,5.233,4477,5.233,4478,4.595,4479,5.233,4480,5.233,4481,5.862,4482,5.233]],["title/directives/ValidateRegionDirective.html",[215,0.71,772,1.08]],["body/directives/ValidateRegionDirective.html",[0,0.021,3,0.176,4,0.209,5,0.112,9,0.225,13,0.88,22,0.483,24,0.93,25,0.011,26,0.463,27,0.274,28,0.566,49,0.655,60,0.348,71,0.253,73,0.483,75,1.204,77,0.213,83,0.009,84,0.009,85,0.007,106,1.328,107,2.945,108,0.917,114,0.88,151,3.444,193,2.626,201,1.29,215,1.198,217,4.363,314,3.494,363,2.152,376,2.278,377,2.214,411,2.77,634,2.639,658,1.344,659,1.198,759,1.308,772,2.041,1017,3.494,1126,3.32,1383,3.064,1388,2.639,2666,4.803,2668,4.57,2671,3.672,2672,5.118,2674,4.46,2679,4.46,2689,3.193,2710,3.577,3078,4.399,3341,4.243,3848,3.672,4340,5.777,4460,5.236,4483,6.358,4484,5.236,4485,7.122,4486,5.963,4487,5.963]],["title/directives/ValidateStreetDirective.html",[215,0.71,774,1.08]],["body/directives/ValidateStreetDirective.html",[0,0.021,3,0.176,4,0.209,5,0.112,9,0.226,13,0.881,22,0.484,24,0.931,25,0.011,26,0.464,27,0.274,28,0.567,49,0.655,60,0.349,71,0.254,73,0.484,75,1.205,77,0.214,83,0.009,84,0.009,85,0.007,106,1.329,107,2.948,108,0.917,114,0.881,151,3.446,193,2.627,201,1.291,215,1.199,217,4.365,314,3.498,363,2.154,376,2.279,377,2.215,411,2.771,634,2.642,658,1.346,659,1.199,759,1.309,774,2.041,775,2.218,835,3.498,1126,3.322,1383,3.067,1388,2.642,2666,4.805,2668,4.572,2671,3.676,2672,5.119,2674,4.462,2679,4.462,2689,3.197,2710,3.579,2892,3.498,3341,4.246,3848,3.676,4461,5.78,4478,5.241,4488,6.362,4489,5.241,4490,5.969]],["title/components/WizardProgressBarComponent.html",[180,0.251,754,1.11]],["body/components/WizardProgressBarComponent.html",[0,0.012,3,0.103,4,0.123,5,0.096,9,0.133,10,0.558,13,0.618,19,0.399,20,1.962,21,3.581,22,0.651,24,0.793,25,0.011,26,0.54,27,0.274,28,0.483,32,1.21,35,0.47,36,0.455,44,0.917,45,0.883,46,3.236,48,1.177,49,0.763,57,0.841,58,0.932,65,2.034,67,3.506,69,1.404,71,0.243,72,1.5,73,0.284,76,1.5,77,0.103,83,0.004,84,0.006,85,0.004,89,2.102,100,3.343,108,0.702,114,0.618,115,1.347,120,0.989,122,1.477,128,1.781,142,1.026,157,0.748,158,1.599,170,1.116,172,0.841,180,0.349,185,1.36,201,1.15,215,0.58,270,1.404,273,2.798,300,0.748,301,1.744,316,2.555,319,1.962,355,1.204,435,1.465,446,0.859,469,0.883,480,2.588,495,0.933,521,2.155,530,1.733,531,1.608,571,0.859,609,2.978,610,1.279,652,0.907,653,0.933,654,0.959,655,1.014,658,0.791,659,1.475,661,1.055,663,1.055,675,2.51,676,2.417,677,0.933,678,1.314,679,1.893,680,1.014,681,1.014,682,0.835,683,1.014,684,0.883,685,1.014,686,0.883,687,1.014,688,0.907,689,1.014,690,0.907,691,1.014,692,0.907,693,1.014,694,0.907,695,0.959,696,1.014,697,0.883,698,1.468,699,0.907,700,0.959,701,1.014,702,0.907,703,1.014,704,0.907,705,1.014,706,0.883,707,1.014,708,1.014,709,0.883,710,1.014,711,0.907,712,1.014,713,0.883,714,1.014,715,0.907,716,1.727,717,0.907,718,0.859,719,0.859,720,1.468,721,0.907,722,0.933,723,1.014,724,0.883,725,1.014,726,0.907,727,1.014,728,0.907,729,1.014,730,0.859,731,1.014,732,0.907,733,1.014,734,0.933,735,0.986,736,1.014,737,0.883,738,0.835,739,1.014,740,0.883,741,1.014,742,0.859,743,1.014,744,0.883,745,0.959,746,0.907,747,1.014,748,0.933,749,1.014,750,0.907,751,1.014,752,0.883,753,1.014,754,1.694,755,2.044,756,2.268,757,0.883,758,0.986,759,0.769,760,0.883,761,1.014,762,0.883,763,1.014,764,0.883,765,1.014,766,0.883,767,1.014,768,0.883,769,1.014,770,0.883,771,1.014,772,0.883,773,1.014,774,0.883,775,0.959,776,1.014,780,1.744,781,1.744,832,2.42,854,2.173,924,1.404,1028,4.462,1047,2.16,1072,2.843,1074,2.51,1091,2.843,1114,4.122,1184,2.28,1242,2.051,1371,3.303,1398,1.451,1399,2.102,1400,1.451,1401,2.102,1402,2.102,1403,2.102,1404,1.451,1405,1.451,1406,2.102,1407,2.102,1408,1.451,1409,1.451,1410,1.451,1411,1.451,1412,1.451,1413,2.102,1414,2.034,1415,1.451,1416,2.102,1417,2.102,1418,1.451,1419,2.102,1420,1.451,1421,1.451,1422,1.451,1423,1.451,1424,2.71,1425,1.451,1426,1.451,1427,1.451,1428,1.451,1429,1.451,1430,1.451,1431,1.451,1432,1.451,1433,1.451,1434,1.451,1435,1.451,1436,1.451,1437,1.451,1438,1.451,1439,1.451,1440,1.451,1441,2.102,1442,1.451,1443,1.451,1444,1.451,1445,1.451,1446,1.451,1447,1.451,1448,1.451,1449,1.451,1450,1.451,1451,1.451,1452,1.451,1453,1.451,1454,1.451,1455,2.102,1456,1.451,1457,1.451,1458,1.451,1459,1.451,1460,1.451,1461,1.204,1462,1.451,1463,1.451,1464,1.451,1465,1.451,1466,1.451,1467,1.451,1468,1.451,1469,1.451,1513,1.878,1651,2.978,1652,2.16,1661,2.42,1672,3.08,1674,3.08,1709,3.129,1716,4.767,1734,5.226,1738,4.767,1747,4.408,1749,3.884,2469,3.839,2529,3.303,2731,3.08,2742,4.52,2752,2.16,2753,2.42,2820,4.408,2839,3.08,2864,6.106,2878,2.42,2998,3.506,3260,2.588,3261,4.054,3262,4.054,3270,3.08,3271,3.08,3278,3.08,3281,4.462,3309,4.054,3579,5.247,3580,3.08,3581,3.08,3582,3.08,3699,4.054,4162,2.588,4281,6.475,4362,4.462,4491,7.127,4492,5.975,4493,5.082,4494,5.975,4495,5.975,4496,5.975,4497,6.551,4498,5.082,4499,6.551,4500,5.082,4501,3.508,4502,3.508,4503,5.082,4504,3.508,4505,3.508,4506,3.508,4507,3.508,4508,5.082,4509,4.462,4510,5.082,4511,5.247,4512,4.462,4513,5.082,4514,4.462,4515,5.082,4516,5.975,4517,5.082,4518,3.508,4519,3.508,4520,3.508,4521,3.508,4522,3.508,4523,3.508,4524,3.508,4525,3.508,4526,3.508,4527,3.508,4528,3.508,4529,3.508,4530,5.975,4531,3.508,4532,3.508,4533,3.508,4534,3.508,4535,2.588,4536,3.508,4537,3.508,4538,3.508,4539,6.954,4540,3.508,4541,5.082,4542,3.508,4543,3.508,4544,3.508,4545,3.508,4546,3.508,4547,5.082,4548,3.508,4549,3.508,4550,3.508,4551,3.508,4552,3.508,4553,3.508,4554,3.508,4555,3.508,4556,3.508,4557,3.508,4558,3.508,4559,3.508,4560,3.508,4561,3.508,4562,5.082]],["title/interfaces/WizardProgressItem.html",[777,0.539,1749,2.789]],["body/interfaces/WizardProgressItem.html",[0,0.025,3,0.208,4,0.169,5,0.091,7,1.087,9,0.182,10,0.695,16,2.382,17,2.384,19,0.72,25,0.011,27,0.239,29,0.902,37,0.752,44,1.443,46,3.952,48,1.117,52,1.561,58,0.752,60,0.494,65,3.351,71,0.247,76,2.062,77,0.221,83,0.006,84,0.008,85,0.006,87,1.058,106,0.821,108,0.744,114,0.586,128,1.684,132,2.101,176,1.705,208,2.535,233,2.583,285,2.211,316,2.062,333,3.633,375,1.78,416,1.931,436,5.052,439,1.996,459,4.595,503,3.847,623,5.64,667,4.928,678,1.247,755,1.318,756,1.247,777,0.795,779,1.607,863,1.394,942,3.327,1241,3.711,1246,2.826,1611,5.539,1709,5.096,1710,3.847,1711,3.558,1712,3.847,1713,4.235,1714,4.235,1715,5.052,1716,5.052,1717,5.56,1718,3.711,1719,5.52,1720,4.235,1721,4.235,1722,4.235,1723,4.235,1724,4.235,1725,4.235,1726,3.558,1727,4.235,1728,4.235,1729,4.235,1730,4.235,1731,3.847,1732,3.558,1733,4.235,1734,3.847,1735,4.235,1736,4.235,1737,5.179,1738,3.847,1739,3.327,1740,3.847,1742,4.235,1743,4.235,1744,4.235,1747,4.672,1749,4.595,1751,4.235,1752,4.672,1755,5.64,1757,5.64,1758,4.235,1760,4.235,1761,4.235,1762,5.052,1766,4.235,1768,4.672,1770,4.235,1771,4.235,1772,4.235,1773,4.235,1774,4.235,1775,4.235,1776,4.235,1777,4.235,1778,4.235,1779,4.235,1780,4.235,1781,5.56,1782,4.235,1783,4.235,1784,4.235,1785,4.235,1786,4.877,1787,5.56,1788,4.235,1789,5.56,1790,4.235,1791,5.052,1792,4.235,1793,4.235]],["title/components/XiconButtonComponent.html",[180,0.251,757,1.08]],["body/components/XiconButtonComponent.html",[0,0.016,3,0.136,4,0.161,5,0.115,9,0.174,13,0.746,19,0.785,22,0.64,25,0.011,26,0.537,27,0.261,32,1.462,33,1.258,42,1.191,44,1.108,45,1.158,48,1.83,49,0.674,57,1.016,58,0.958,60,0.359,71,0.215,73,0.373,77,0.136,83,0.006,84,0.007,85,0.006,114,0.746,115,1.558,122,1.662,132,2.465,142,1.239,170,1.177,172,1.016,173,3.176,174,4.042,180,0.404,185,2.381,201,0.762,203,3.396,215,0.762,231,3.991,238,1.143,285,2.111,398,2.698,432,2.835,435,1.489,439,1.633,446,1.127,469,1.158,495,1.224,546,2.835,571,1.127,587,4.53,610,1.545,652,1.191,653,1.224,654,1.258,655,1.33,658,1.038,659,1.494,661,1.274,663,1.274,672,5.085,677,1.224,678,1.588,679,2.13,680,1.33,681,1.33,682,1.096,683,1.33,684,1.158,685,1.33,686,1.158,687,1.33,688,1.191,689,1.33,690,1.191,691,1.33,692,1.191,693,1.33,694,1.191,695,1.258,696,1.33,697,1.158,698,1.774,699,1.191,700,1.258,701,1.33,702,1.191,703,1.33,704,1.191,705,1.33,706,1.158,707,1.33,708,1.33,709,1.158,710,1.33,711,1.191,712,1.33,713,1.158,714,1.33,715,1.191,716,1.997,717,1.191,718,1.127,719,1.127,720,1.774,721,1.191,722,1.224,723,1.33,724,1.158,725,1.33,726,1.191,727,1.33,728,1.191,729,1.33,730,1.127,731,1.33,732,1.191,733,1.33,734,1.224,735,1.294,736,1.33,737,1.158,738,1.096,739,1.33,740,1.158,741,1.33,742,1.127,743,1.33,744,1.158,745,1.258,746,1.191,747,1.33,748,1.224,749,1.33,750,1.191,751,1.33,752,1.158,753,1.33,754,1.191,755,1.258,756,1.191,757,1.855,758,2.331,759,1.01,760,1.158,761,1.33,762,1.158,763,1.33,764,1.158,765,1.33,766,1.158,767,1.33,768,1.158,769,1.33,770,1.158,771,1.33,772,1.158,773,1.33,774,1.158,775,1.258,776,1.33,788,1.787,789,2.204,839,2.698,884,1.969,918,1.969,1047,2.835,1081,2.274,1097,5.392,1098,5.392,1101,2.308,1645,4.042,3519,4.899,3733,4.899,4329,6.432,4563,7.08,4564,3.673,4565,7.371,4566,5.512,4567,6.14,4568,4.604,4569,6.472,4570,4.604,4571,4.604,4572,4.604,4573,4.604,4574,4.604,4575,4.604,4576,6.14,4577,4.604,4578,4.604,4579,4.604,4580,4.604,4581,4.604,4582,4.604,4583,4.604]],["title/changelog.html",[4584,2.1,4585,2.1,4586,3.147]],["body/changelog.html",[0,0.018,2,0.603,3,0.044,5,0.11,7,0.34,13,0.315,14,2.092,18,2.097,19,0.171,22,0.122,24,0.235,25,0.007,26,0.437,27,0.098,28,0.246,32,0.359,33,1.105,34,1.111,35,0.904,36,0.524,37,0.235,39,1.279,40,0.928,42,1.377,43,0.843,44,1.239,46,1.279,48,0.6,52,0.488,57,1.094,60,0.266,64,1.111,65,1.363,66,0.807,68,0.843,69,1.037,71,0.091,77,0.119,82,2.066,83,0.002,84,0.004,85,0.003,93,3.063,107,0.744,108,0.304,112,0.716,116,0.973,118,0.916,120,0.428,125,0.843,132,2.042,140,1.204,142,1.186,150,0.644,154,1.948,155,1.905,156,2.201,158,0.474,170,1.126,172,1.041,175,2.99,176,1.883,178,1.187,179,1.231,180,0.462,181,2.789,183,0.979,185,2.18,190,2.628,192,1.786,193,2.092,196,2.097,197,0.843,199,0.807,200,1.323,205,2.201,208,0.603,211,1.786,214,0.584,215,0.428,217,0.843,218,4.482,231,0.979,233,0.807,236,1.507,237,2.349,238,0.93,240,0.843,242,1.456,245,2.607,248,1.202,252,1.202,270,1.363,271,0.979,274,0.973,279,1.202,295,1.231,300,1.342,303,1.456,305,0.488,320,0.807,324,0.928,329,1.62,335,2.349,338,3.313,339,2.717,340,1.202,342,0.863,344,0.928,346,2.066,348,1.323,351,1.62,354,2.349,360,1.905,370,1.33,373,0.533,375,0.728,389,0.928,391,1.91,398,0.883,400,1.202,411,1.135,416,1.363,417,2.165,424,1.786,425,3.673,426,1.905,427,1.202,430,1.111,432,1.595,435,1.46,437,2.274,438,3.686,439,1.562,440,5.165,441,5.159,444,1.111,474,0.807,476,0.883,478,1.33,480,1.111,485,1.323,487,4.053,495,0.905,496,3.431,507,2.962,509,2.097,515,2.513,521,0.77,522,3.225,528,0.979,530,2.249,531,3.032,532,1.202,533,1.039,539,1.039,542,1.202,544,1.323,554,0.883,557,1.323,561,0.979,564,0.691,569,1.33,570,1.33,571,0.369,573,1.997,574,2.166,576,1.517,578,5.226,579,1.323,580,1.91,581,1.202,586,1.905,587,1.111,591,1.517,595,1.107,598,2.262,599,0.979,607,1.202,609,0.883,610,0.379,653,0.905,672,2.349,678,0.39,682,1.339,684,0.651,686,1.017,688,0.39,695,0.412,697,1.146,704,1.178,709,0.379,713,0.379,718,0.369,719,0.634,724,0.651,730,0.634,732,0.39,735,1.651,737,0.379,738,1.339,742,1.217,745,0.708,752,0.857,757,0.379,777,0.189,779,0.502,780,0.889,781,0.889,783,1.111,786,1.824,787,1.683,793,1.682,797,3.731,800,0.744,808,0.979,815,1.279,818,1.824,820,1.905,826,1.111,827,1.039,829,0.584,833,1.111,834,1.111,835,2.669,837,1.111,839,2.369,842,1.111,848,0.928,854,1.456,855,0.716,856,2.914,857,3.248,861,3.431,876,0.979,884,0.644,888,2.49,889,0.883,899,0.883,907,2.628,911,1.91,912,2.214,918,2.607,921,1.039,924,0.603,929,1.517,941,1.111,954,2.914,956,1.279,966,1.231,995,2.274,1007,2.99,1040,0.979,1047,3.063,1049,1.323,1053,2.49,1072,2.978,1073,0.928,1078,1.039,1081,3.545,1082,1.91,1083,1.786,1090,1.039,1091,3.287,1094,1.323,1095,1.202,1113,1.28,1124,2.274,1125,2.717,1126,0.691,1177,1.449,1182,3.431,1191,1.595,1192,1.683,1207,1.039,1209,2.274,1213,2.349,1241,0.883,1242,1.169,1243,0.979,1246,2.369,1268,1.111,1272,1.111,1274,2.066,1286,1.202,1288,1.202,1293,1.039,1314,1.111,1348,3.673,1363,3.279,1364,2.097,1386,1.202,1388,0.667,1480,1.517,1498,0.928,1507,0.979,1509,0.928,1518,1.683,1524,0.843,1533,1.231,1534,0.979,1580,1.202,1584,1.039,1587,2.983,1588,1.323,1604,1.111,1605,2.914,1609,2.99,1615,4.72,1635,1.323,1651,3.12,1673,1.323,1705,1.202,1709,2.097,1712,1.202,1726,1.111,1749,0.979,1812,2.274,1834,4.147,1843,1.786,2412,0.883,2428,2.789,2439,3.633,2445,0.807,2453,2.717,2457,0.928,2460,1.91,2469,0.883,2472,2.349,2483,3.142,2485,1.111,2487,1.111,2517,1.202,2532,2.066,2538,1.111,2543,1.202,2576,1.111,2637,2.717,2647,2.274,2668,0.883,2675,0.979,2680,2.628,2683,1.91,2686,2.99,2705,2.96,2710,0.744,2749,1.111,2751,1.323,2753,1.039,2786,4.088,2787,1.202,2789,1.683,2790,2.717,2809,2.513,2823,2.066,2829,2.066,2853,1.323,2877,2.274,2878,1.786,2879,0.883,2892,0.883,2895,2.983,2896,1.323,2897,4.173,2901,5.154,2906,5.276,2917,3.36,2922,1.111,2926,2.983,2930,4.484,2933,4.247,2941,2.066,2949,3.999,2950,1.202,2973,1.91,2995,2.066,2997,2.99,3040,1.323,3041,1.202,3051,1.323,3065,6.349,3068,1.111,3079,1.323,3089,1.323,3101,1.91,3134,0.979,3140,1.323,3167,2.513,3170,2.274,3171,1.323,3255,1.323,3272,2.066,3286,4.484,3290,1.323,3300,1.202,3379,1.595,3475,1.323,3517,1.323,3523,2.066,3549,3.55,3551,2.066,3552,1.039,3600,5.651,3602,1.202,3605,2.066,3613,1.202,3626,1.323,3628,2.274,3663,1.202,3666,1.323,3691,5.523,3693,4.935,3699,1.202,3714,2.274,3726,1.323,3728,2.274,3733,1.202,3752,1.91,3788,1.202,3791,0.883,3822,1.323,3854,1.323,3859,2.274,3921,1.323,3926,2.274,3950,2.066,3978,1.91,4003,2.066,4014,4.656,4019,1.202,4052,2.274,4065,2.274,4091,0.979,4093,3.999,4100,1.202,4162,2.983,4357,1.91,4365,5.159,4396,1.323,4400,1.323,4407,2.274,4509,2.274,4514,2.274,4535,1.111,4566,1.202,4569,4.367,4584,0.883,4585,1.996,4586,4.675,4587,6.977,4588,4.043,4589,5.324,4590,6.29,4591,1.506,4592,8.581,4593,1.506,4594,1.506,4595,1.506,4596,2.589,4597,1.506,4598,3.406,4599,1.506,4600,1.506,4601,6.507,4602,1.506,4603,1.506,4604,1.506,4605,1.506,4606,8.419,4607,1.506,4608,1.506,4609,1.506,4610,4.554,4611,1.506,4612,1.506,4613,1.506,4614,1.506,4615,1.506,4616,1.506,4617,1.506,4618,1.506,4619,1.506,4620,7.714,4621,2.066,4622,1.506,4623,1.506,4624,1.506,4625,1.506,4626,1.506,4627,1.506,4628,1.506,4629,1.506,4630,4.043,4631,1.506,4632,1.506,4633,1.506,4634,1.506,4635,1.506,4636,1.506,4637,1.506,4638,1.506,4639,1.506,4640,1.506,4641,6.29,4642,1.506,4643,1.506,4644,1.506,4645,1.506,4646,1.506,4647,1.506,4648,1.506,4649,1.506,4650,1.506,4651,7.176,4652,1.506,4653,4.043,4654,1.506,4655,1.506,4656,1.506,4657,1.506,4658,1.506,4659,1.506,4660,3.55,4661,1.506,4662,1.506,4663,1.506,4664,3.406,4665,5.875,4666,1.506,4667,1.506,4668,1.506,4669,1.506,4670,1.506,4671,1.506,4672,1.506,4673,1.506,4674,1.506,4675,1.506,4676,1.506,4677,1.506,4678,1.506,4679,1.506,4680,1.506,4681,2.274,4682,2.589,4683,1.506,4684,1.506,4685,1.506,4686,2.589,4687,1.506,4688,1.506,4689,2.589,4690,2.589,4691,2.589,4692,1.506,4693,1.506,4694,1.506,4695,1.506,4696,1.506,4697,2.589,4698,1.506,4699,1.506,4700,1.506,4701,1.506,4702,1.506,4703,3.55,4704,1.506,4705,1.506,4706,1.506,4707,1.506,4708,1.506,4709,1.506,4710,1.506,4711,1.506,4712,1.506,4713,1.506,4714,1.506,4715,2.589,4716,1.506,4717,1.506,4718,1.506,4719,1.506,4720,1.506,4721,1.506,4722,1.506,4723,1.506,4724,1.506,4725,1.506,4726,1.506,4727,1.506,4728,1.506,4729,2.589,4730,1.506,4731,1.506,4732,1.506,4733,1.506,4734,1.506,4735,5.324,4736,3.406,4737,2.589,4738,1.506,4739,1.506,4740,3.55,4741,3.406,4742,1.506,4743,1.506,4744,1.506,4745,1.506,4746,1.506,4747,1.506,4748,1.506,4749,1.506,4750,1.506,4751,1.506,4752,1.506,4753,1.506,4754,1.506,4755,1.506,4756,1.506,4757,1.506,4758,1.506,4759,1.506,4760,1.506,4761,3.406,4762,4.974,4763,1.506,4764,1.506,4765,1.506,4766,1.506,4767,1.506,4768,2.589,4769,1.506,4770,1.506,4771,2.589,4772,3.406,4773,1.506,4774,1.506,4775,1.506,4776,4.554,4777,1.506,4778,1.506,4779,1.506,4780,1.506,4781,1.506,4782,1.506,4783,1.506,4784,2.589,4785,1.506,4786,1.506,4787,3.999,4788,1.506,4789,1.506,4790,3.406,4791,1.506,4792,1.506,4793,2.066,4794,2.589,4795,1.506,4796,1.506,4797,1.506,4798,1.506,4799,1.506,4800,1.506,4801,1.506,4802,1.506,4803,1.506,4804,1.506,4805,1.506,4806,1.506,4807,1.506,4808,1.506,4809,1.506,4810,1.506,4811,1.506,4812,1.506,4813,1.506,4814,1.506,4815,1.506,4816,1.506,4817,1.506,4818,1.506,4819,4.817,4820,2.717,4821,1.506,4822,1.323,4823,1.506,4824,1.506,4825,1.506,4826,1.506,4827,1.323,4828,1.506,4829,2.589,4830,1.506,4831,1.506,4832,1.506,4833,1.506,4834,1.506,4835,1.506,4836,1.506,4837,1.506,4838,1.506,4839,1.506,4840,1.506,4841,1.506,4842,1.506,4843,1.506,4844,1.506,4845,1.323,4846,1.506,4847,1.506,4848,1.506,4849,2.589,4850,1.506,4851,1.506,4852,1.506,4853,1.506,4854,1.506,4855,1.506,4856,1.506,4857,1.506,4858,1.323,4859,1.506,4860,1.506,4861,1.506,4862,1.506,4863,1.506,4864,1.506,4865,1.506,4866,1.506,4867,1.506,4868,1.506,4869,3.406,4870,1.323,4871,1.506,4872,1.506,4873,2.589,4874,1.506,4875,2.589,4876,1.506,4877,1.506,4878,1.506,4879,1.506,4880,1.506,4881,1.506,4882,1.506,4883,1.506,4884,1.506,4885,1.506,4886,1.506,4887,1.506,4888,1.506,4889,1.506,4890,1.506,4891,2.589,4892,1.506,4893,1.506,4894,1.506,4895,1.506,4896,1.506,4897,1.506,4898,1.506,4899,1.506,4900,1.506,4901,1.202,4902,1.506,4903,1.506,4904,1.506,4905,1.506,4906,1.506,4907,1.506,4908,1.506,4909,1.506,4910,1.506,4911,1.506,4912,1.506,4913,1.506,4914,1.506,4915,1.506,4916,1.506,4917,1.506,4918,1.506,4919,1.506,4920,1.506,4921,1.506,4922,1.506,4923,1.506,4924,1.506,4925,2.589,4926,1.506,4927,1.506,4928,1.506,4929,1.506,4930,1.506,4931,2.589,4932,1.506,4933,1.506,4934,1.506,4935,1.323,4936,6.983,4937,3.55,4938,1.506,4939,1.506,4940,1.506,4941,4.554,4942,1.506,4943,1.506,4944,1.506,4945,1.506,4946,1.506,4947,1.506,4948,1.506,4949,1.039,4950,1.506,4951,1.506,4952,4.043,4953,1.506,4954,1.506,4955,1.506,4956,1.506,4957,2.589,4958,1.506,4959,1.506,4960,1.506,4961,1.506,4962,1.506,4963,1.506,4964,1.506,4965,1.506,4966,1.506,4967,1.506,4968,1.506,4969,1.506,4970,1.506,4971,1.506,4972,1.506,4973,1.506,4974,1.506,4975,1.506,4976,1.506,4977,2.589,4978,1.506,4979,1.506,4980,1.506,4981,2.589,4982,1.506,4983,1.506,4984,1.506,4985,1.506,4986,1.506,4987,1.506,4988,1.506,4989,4.043,4990,1.506,4991,1.506,4992,1.506,4993,1.506,4994,1.506,4995,1.506,4996,1.506,4997,1.506,4998,6.613,4999,1.506,5000,1.506,5001,1.506,5002,1.506,5003,4.043,5004,1.506,5005,1.506,5006,3.406,5007,1.506,5008,1.506,5009,1.506,5010,1.323,5011,1.506,5012,4.043,5013,1.506,5014,1.506,5015,1.506,5016,1.506,5017,1.506,5018,1.506,5019,1.506,5020,1.506,5021,1.506,5022,1.506,5023,1.506,5024,1.506,5025,1.506,5026,1.506,5027,1.506,5028,1.506,5029,1.202,5030,1.506,5031,4.554,5032,1.323,5033,1.506,5034,1.506,5035,1.506,5036,1.506,5037,1.506,5038,1.506,5039,1.506,5040,1.506,5041,1.506,5042,1.506,5043,1.506,5044,1.506,5045,3.406,5046,1.506,5047,1.506,5048,1.506,5049,1.506,5050,1.506,5051,1.506,5052,1.506,5053,1.506,5054,1.506,5055,1.506,5056,1.506,5057,1.506,5058,1.506,5059,1.506,5060,1.506,5061,1.506,5062,1.506,5063,1.323,5064,1.506,5065,1.506,5066,2.589,5067,1.506,5068,1.506,5069,1.506,5070,2.589,5071,1.506,5072,1.323,5073,1.506,5074,1.506,5075,1.506,5076,1.506,5077,1.506,5078,1.506,5079,3.225,5080,1.506,5081,1.506,5082,1.506,5083,3.55,5084,1.506,5085,1.506,5086,1.506,5087,1.506,5088,1.506,5089,1.506,5090,1.506,5091,2.274,5092,1.506,5093,1.506,5094,1.506,5095,1.506,5096,1.506,5097,1.323,5098,1.323,5099,1.323,5100,1.506,5101,1.506,5102,1.506,5103,1.506,5104,2.99,5105,1.506,5106,1.506,5107,1.506,5108,1.506,5109,1.506,5110,2.99,5111,2.066,5112,1.506,5113,1.506,5114,1.506,5115,1.506,5116,1.506,5117,1.506,5118,1.506,5119,1.506,5120,1.506,5121,1.506,5122,1.506,5123,1.506,5124,1.506,5125,1.506,5126,1.506,5127,1.506,5128,1.506,5129,1.506,5130,1.506,5131,1.506,5132,1.506,5133,1.506,5134,1.506,5135,1.506,5136,1.506,5137,1.506,5138,1.506,5139,1.506,5140,1.506,5141,1.506,5142,1.506,5143,1.506,5144,1.506,5145,1.506,5146,1.506,5147,1.506,5148,1.506,5149,1.323,5150,1.506,5151,1.506,5152,1.506,5153,1.506,5154,1.506,5155,1.506,5156,1.506,5157,1.506,5158,1.506,5159,1.506,5160,1.506,5161,1.506,5162,1.506,5163,1.506,5164,1.323,5165,1.506,5166,1.506,5167,1.323,5168,1.506,5169,1.506,5170,1.323,5171,1.506,5172,1.506,5173,1.323,5174,1.506,5175,1.506,5176,4.043,5177,1.506,5178,2.274,5179,1.506,5180,1.506,5181,1.202,5182,1.506,5183,1.506,5184,1.506,5185,1.506,5186,1.506,5187,1.506,5188,1.506,5189,1.323,5190,1.323,5191,1.506,5192,2.589,5193,1.506,5194,1.506,5195,1.506,5196,1.323,5197,1.506,5198,1.506,5199,1.323,5200,1.111,5201,1.506,5202,1.506,5203,1.506,5204,1.506,5205,1.506,5206,1.506,5207,1.506,5208,1.506,5209,1.506,5210,1.506,5211,1.506,5212,1.506,5213,1.506,5214,1.506,5215,1.506,5216,1.039,5217,1.323,5218,1.506,5219,1.323,5220,1.506,5221,1.506,5222,1.506,5223,2.589,5224,1.506,5225,1.506,5226,1.506,5227,1.506,5228,1.506,5229,2.274,5230,1.506,5231,1.506,5232,1.506,5233,1.506,5234,1.506,5235,1.506,5236,1.506,5237,1.506,5238,1.506,5239,1.506,5240,1.506,5241,1.506,5242,1.506,5243,1.506,5244,1.506,5245,1.506,5246,1.506,5247,1.506,5248,1.506,5249,1.506]],["title/coverage.html",[5250,5.142]],["body/coverage.html",[0,0.028,1,1.945,5,0.053,6,4.057,7,0.973,8,3.872,25,0.011,27,0.107,44,0.509,45,1.086,57,1.049,82,2.249,83,0.003,84,0.005,85,0.003,86,2.249,112,1.341,113,2.476,131,1.206,138,1.028,158,2.732,169,2.249,173,1.945,180,0.508,205,1.248,215,1.188,238,0.466,240,1.577,241,3.872,242,1.206,243,2.476,295,1.341,344,1.736,355,3.092,356,2.363,357,1.945,359,4.614,360,2.416,374,1.945,384,1.833,385,1.945,386,2.476,389,1.736,399,2.249,400,2.249,430,2.08,431,2.476,432,1.736,433,2.476,446,0.69,469,1.086,472,2.416,521,0.838,571,0.69,652,0.729,656,2.476,682,0.671,684,0.709,686,0.709,688,0.729,690,0.729,692,0.729,694,0.729,697,0.709,699,0.729,702,0.729,704,0.729,706,0.709,709,0.709,711,0.729,713,0.709,715,0.729,717,0.729,718,0.69,721,0.729,724,0.709,726,0.729,728,0.729,730,0.69,732,0.729,734,0.75,737,0.709,740,0.709,742,0.69,744,0.709,746,0.729,748,0.75,750,0.729,752,0.709,754,0.729,756,1.117,757,0.709,760,0.709,762,0.709,764,0.709,766,0.709,768,0.709,770,0.709,772,0.709,774,0.709,775,0.771,777,1.045,778,1.945,782,4.339,795,1.577,797,1.449,799,1.833,800,1.393,801,1.945,802,1.945,804,1.736,805,1.736,806,1.833,808,1.833,809,1.945,855,1.341,861,4.057,921,6.054,966,2.053,992,2.476,1070,2.476,1075,2.53,1077,2.476,1118,2.476,1119,2.249,1120,2.476,1157,1.833,1158,3.445,1159,3.445,1181,2.08,1221,2.08,1222,3.445,1223,3.445,1262,2.08,1304,2.476,1335,1.449,1357,2.476,1371,5.247,1473,1.736,1474,3.904,1482,3.904,1492,1.652,1537,1.652,1541,1.577,1572,2.249,1573,4.186,1587,2.08,1605,1.652,1687,2.249,1688,2.08,1689,2.249,1709,1.736,1710,3.445,1718,1.652,1719,1.945,1749,1.833,1752,2.08,1794,3.791,1831,2.476,1832,2.249,1833,2.476,1853,5.872,2405,2.476,2419,2.08,2420,3.872,2469,1.652,2483,1.945,2549,2.476,2550,2.476,2612,2.08,2613,4.608,2629,2.476,2630,2.476,2641,2.476,2663,4.608,2664,4.186,2665,4.608,2667,2.476,2676,2.476,2682,2.476,2721,2.476,2722,2.249,2723,2.476,2728,5.164,2729,5.164,2734,2.476,2738,2.249,2739,5.567,2740,5.058,2748,2.249,2767,1.736,2772,2.476,2774,2.249,2879,3.446,2883,3.445,2886,3.445,2889,3.62,2892,3.075,2897,1.51,2901,2.249,2906,4.186,2917,3.186,2921,3.62,2922,3.186,2926,2.08,2930,4.692,2933,2.249,2941,2.249,3258,3.445,3259,3.186,3260,3.872,3272,2.249,3304,3.445,3305,3.186,3306,3.445,3336,2.08,3345,1.945,3376,3.445,3379,1.736,3418,2.476,3419,2.249,3420,2.476,3546,2.476,3598,2.08,3599,3.445,3618,2.249,3621,2.249,3622,3.791,3623,3.445,3624,4.339,3780,2.476,3810,2.476,3811,2.476,3821,2.476,3851,3.445,3852,2.249,3853,2.476,3868,2.08,3869,3.445,3870,3.445,3908,2.249,3909,2.476,3947,4.186,3973,2.08,3978,2.08,4012,2.249,4058,2.476,4118,4.934,4119,2.249,4120,2.476,4169,5.058,4217,2.249,4236,2.476,4248,2.08,4249,3.445,4250,3.186,4271,2.476,4272,2.476,4281,2.249,4313,2.476,4326,4.677,4329,2.249,4340,3.445,4351,2.476,4357,2.08,4358,2.476,4359,2.476,4364,2.476,4412,2.476,4444,2.476,4451,3.791,4452,2.476,4456,3.791,4457,3.791,4458,2.476,4462,3.791,4463,3.791,4464,2.476,4466,4.608,4467,2.476,4481,2.476,4483,3.791,4484,3.791,4485,2.476,4488,3.791,4489,3.791,4491,2.476,4563,2.476,4564,2.249,4681,2.476,4703,3.791,4787,2.476,4819,1.945,4858,2.476,4937,2.476,5250,2.476,5251,2.819,5252,5.881,5253,2.476,5254,2.819,5255,2.819,5256,2.819,5257,7.18,5258,4.318,5259,7.847,5260,8.911,5261,8.072,5262,7.641,5263,2.819,5264,2.819,5265,2.819,5266,2.819,5267,2.819,5268,2.819,5269,2.819,5270,2.819,5271,2.819,5272,2.819,5273,2.819,5274,5.248,5275,2.819,5276,2.819,5277,4.318,5278,2.819,5279,2.819,5280,4.318,5281,4.318,5282,5.248,5283,2.819,5284,2.819,5285,6.688,5286,6.688,5287,2.819,5288,6.34,5289,5.881,5290,2.819,5291,2.819,5292,2.819,5293,2.819,5294,2.819,5295,4.318,5296,2.819,5297,4.318,5298,2.819,5299,2.819,5300,2.819,5301,2.819,5302,2.819,5303,2.819,5304,6.961,5305,2.819,5306,4.318,5307,2.819,5308,2.819,5309,4.318,5310,2.819,5311,2.819,5312,2.819,5313,2.819,5314,4.318,5315,2.819,5316,2.819,5317,2.819,5318,2.819,5319,2.819,5320,2.819,5321,2.819,5322,2.819,5323,2.819,5324,2.819,5325,2.819,5326,2.819,5327,2.819,5328,2.819,5329,2.819,5330,2.819,5331,5.248,5332,4.318,5333,2.819,5334,2.819,5335,2.819,5336,2.476,5337,2.819,5338,2.819,5339,2.819,5340,2.819,5341,2.819,5342,2.819,5343,2.819,5344,2.819,5345,5.248,5346,5.248,5347,2.819,5348,2.249,5349,4.318,5350,2.819,5351,4.318,5352,8.132,5353,2.819,5354,2.819,5355,4.318,5356,2.819,5357,2.819,5358,2.819,5359,2.819,5360,2.819,5361,2.819,5362,2.819,5363,2.819,5364,2.819,5365,2.819,5366,2.819,5367,2.819,5368,6.688,5369,2.819,5370,2.819,5371,2.819,5372,2.819,5373,2.819,5374,2.819,5375,5.248,5376,5.248,5377,2.819,5378,2.819,5379,7.512,5380,6.34,5381,2.819,5382,2.819,5383,2.819,5384,6.34,5385,2.819,5386,2.819,5387,2.819,5388,2.819,5389,2.819,5390,4.318,5391,2.819,5392,2.819,5393,2.819]],["title/dependencies.html",[1073,2.207,1074,2.549]],["body/dependencies.html",[25,0.011,73,0.519,75,1.293,76,2.74,83,0.008,84,0.009,85,0.008,316,2.74,321,3.292,351,3.046,367,4.419,509,3.945,569,3.292,609,4.429,675,3.164,676,3.595,700,1.751,889,3.754,1074,3.164,1075,3.754,1178,4.726,1215,6.637,1220,5.11,1480,3.754,1615,4.164,2748,5.11,2749,5.577,2774,5.11,2777,5.625,4100,5.11,4299,5.625,4827,5.625,4845,5.625,4935,5.625,5072,5.625,5394,6.406,5395,8.789,5396,6.406,5397,6.406,5398,6.406,5399,6.406,5400,6.406,5401,6.406,5402,6.406,5403,5.625,5404,6.406,5405,6.406,5406,6.406,5407,6.406,5408,6.406,5409,6.406]],["title/miscellaneous/enumerations.html",[5410,3.147,5411,4.531]],["body/miscellaneous/enumerations.html",[3,0.219,9,0.235,25,0.011,35,0.993,36,1.16,83,0.008,84,0.009,85,0.008,170,1.431,344,3.822,355,2.13,474,3.324,540,5.45,543,4.951,854,3.172,855,2.952,856,3.637,1242,2.546,1474,3.822,1483,4.347,1484,4.034,1485,4.034,1486,4.034,1487,4.034,1488,3.822,1489,4.034,1490,4.034,1491,4.034,1573,4.951,1579,6.514,1580,5.918,1581,5.918,1582,6.514,1589,5.45,1687,4.951,1688,4.579,1689,5.918,1696,6.514,1704,4.951,2173,5.45,2420,4.579,2449,5.918,2465,5.918,2875,4.282,2879,3.637,2883,4.951,2886,4.951,5253,5.45,5410,5.45,5411,5.45,5412,6.206,5413,7.418,5414,6.206,5415,6.206,5416,7.418,5417,6.206,5418,6.206,5419,6.206,5420,6.206,5421,6.206,5422,6.206,5423,6.206,5424,6.206,5425,6.206]],["title/index.html",[9,0.135,4584,2.1,4585,2.1]],["body/index.html",[25,0.011,71,0.223,83,0.008,84,0.009,85,0.008,142,1.522,270,2.553,281,4.4,361,3.416,362,3.277,370,3.277,376,2.006,435,1.372,440,4.703,441,3.737,469,1.605,580,4.705,870,3.737,1072,4.218,1079,4.705,1194,4.4,1207,4.4,1834,5.562,2413,4.146,2445,4.037,2684,3.737,2767,3.928,2880,5.088,3068,4.705,3512,5.6,3655,6.62,3951,5.088,4044,5.088,4267,4.9,4512,5.6,4584,3.737,4585,3.737,4819,5.722,4822,6.62,5010,6.62,5149,5.6,5200,4.705,5426,6.378,5427,6.378,5428,6.378,5429,7.539,5430,6.378,5431,6.378,5432,6.378,5433,6.378,5434,7.539,5435,6.378,5436,6.378,5437,6.378,5438,6.378,5439,6.378,5440,6.378,5441,6.378,5442,6.378,5443,6.378]],["title/license.html",[4584,2.1,4585,2.1,5348,2.859]],["body/license.html",[5,0.125,25,0.01,42,1.716,83,0.008,84,0.009,85,0.008,182,3.553,373,2.346,426,3.711,439,1.764,574,3.155,800,3.277,965,4.895,971,4.086,1636,5.292,1929,4.577,3134,5.303,3519,5.292,4153,4.895,5348,6.966,5444,6.634,5445,6.634,5446,6.634,5447,6.634,5448,6.634,5449,6.634,5450,6.634,5451,6.634,5452,6.634,5453,6.634,5454,6.634,5455,5.825,5456,6.634,5457,7.715,5458,6.634,5459,6.634,5460,6.634,5461,6.634,5462,6.634,5463,6.634,5464,6.634,5465,6.634,5466,6.634,5467,6.634]],["title/modules.html",[1193,3.606]],["body/modules.html",[25,0.01,83,0.008,84,0.01,85,0.008,609,4.642,1192,4.514,1193,4.277,2865,6.956,4267,4.514,4870,6.956,5468,7.922]],["title/overview.html",[5469,5.142]],["body/overview.html",[2,1.633,25,0.011,83,0.005,84,0.007,85,0.005,142,0.823,358,2.096,376,1.283,446,1.912,571,1.912,652,2.02,676,1.94,677,1.085,682,1.861,684,1.966,686,1.966,688,2.02,690,2.02,692,2.02,694,2.02,697,1.966,699,2.02,702,2.02,704,2.02,706,1.966,709,1.966,711,2.02,713,1.966,715,2.02,717,2.02,718,1.912,721,2.02,724,1.966,726,2.02,728,2.02,730,1.912,732,2.02,734,2.077,737,1.966,740,1.966,742,1.912,744,1.966,746,2.02,748,2.077,750,2.02,752,1.966,754,2.02,757,1.966,759,0.895,760,1.966,762,1.966,764,1.966,766,1.966,768,1.966,770,1.966,772,1.966,774,1.966,779,1.36,854,2.419,924,1.633,1074,2.015,1157,4.22,1191,2.513,1192,5.078,1193,2.513,1194,2.815,1195,3.255,1196,3.583,1197,3.583,1198,3.583,1199,3.583,1200,4.512,1201,3.01,1285,2.815,2889,2.815,2897,2.185,2922,3.01,4267,5.937,4268,3.583,4269,3.583,4270,3.583,5336,3.583,5469,3.583,5470,4.08]],["title/todo.html",[33,0.979,4584,2.1,4585,2.1]],["body/todo.html",[25,0.011,29,1.169,33,2.293,35,0.826,37,0.963,42,1.597,44,1.113,83,0.007,84,0.009,85,0.007,100,3.454,120,1.223,142,1.246,150,2.64,172,1.31,185,3.339,193,1.999,211,4.259,274,2.779,299,2.326,367,4.259,370,3.172,426,3.454,435,1.021,439,1.966,440,3.617,441,3.617,530,3.049,580,4.554,598,3.454,672,4.259,758,1.735,788,1.597,918,3.713,953,4.013,997,5.421,998,5.421,1047,5.303,1091,3.454,1095,5.899,1133,5.461,1362,4.137,1638,4.925,1655,4.554,1705,4.925,2412,3.617,2437,4.554,2438,4.925,2786,4.013,3235,4.554,3286,4.925,4363,5.421,4564,4.925,4566,4.925,4587,5.421,5091,5.421,5471,6.173,5472,6.173,5473,6.173,5474,6.173,5475,6.173,5476,6.173,5477,6.173,5478,6.173,5479,6.173,5480,6.173,5481,6.173,5482,6.173,5483,6.173,5484,6.173,5485,6.173,5486,6.173,5487,6.173,5488,6.173,5489,6.173]],["title/additional-documentation/getting-started.html",[57,0.509,4584,1.803,4585,1.803,4949,2.122]],["body/additional-documentation/getting-started.html",[0,0.018,2,3.365,5,0.098,13,0.631,14,2.152,25,0.011,66,2.783,71,0.303,77,0.216,83,0.006,84,0.008,85,0.006,87,1.139,91,4.585,100,2.907,142,1.611,153,2.471,172,0.86,179,3.16,182,3.559,201,0.86,238,0.86,240,4.099,242,2.842,245,3.303,246,3.377,249,3.833,268,3.377,270,2.08,274,1.953,285,2.382,295,2.471,299,1.634,301,1.783,303,2.222,305,1.682,356,1.634,358,3.415,361,3.559,362,3.415,363,1.975,372,5.302,375,1.46,376,2.091,435,1.459,439,1.381,440,5.152,441,4.525,474,2.783,497,3.377,507,2.382,546,3.2,556,4.562,564,2.382,570,2.67,572,4.562,575,3.2,586,2.907,700,1.42,779,2.215,795,2.907,797,3.765,818,2.783,843,3.585,857,2.382,870,3.045,874,2.67,1033,4.145,1081,3.282,1093,3.045,1105,4.145,1122,4.562,1182,5.055,1191,4.093,1192,4.32,1194,4.585,1206,4.562,1207,5.328,1226,3.377,1414,2.08,1483,3.045,1513,2.783,1541,2.907,1640,3.833,1655,3.833,1726,4.903,1843,3.585,2445,2.783,2476,4.903,2528,4.145,2684,3.045,2705,3.377,2790,4.145,2829,4.145,3134,4.32,3379,4.093,3552,4.585,3645,4.562,3855,4.562,3860,3.833,3865,4.145,4091,3.377,4267,5.02,4511,4.562,4584,3.045,4585,3.045,4740,6.434,4819,3.585,5032,4.562,5063,4.562,5097,6.781,5098,4.562,5099,4.562,5111,4.145,5170,6.781,5190,5.835,5490,5.196,5491,4.562,5492,4.562,5493,7.982,5494,5.196,5495,5.196,5496,5.196,5497,5.196,5498,5.196,5499,5.196,5500,5.196,5501,5.196,5502,5.196,5503,5.196,5504,5.196,5505,5.196,5506,5.196,5507,5.196,5508,5.196,5509,5.196,5510,5.196,5511,5.196,5512,4.145,5513,5.196,5514,5.196,5515,4.562,5516,5.196,5517,6.646,5518,5.196,5519,5.196]],["title/additional-documentation/local-development.html",[57,0.509,2675,2,4091,2,4949,2.122]],["body/additional-documentation/local-development.html",[25,0.01,83,0.008,84,0.01,85,0.008,142,1.412,2675,4.547,4091,4.547,5216,5.488]],["title/additional-documentation/local-development/schematics.html",[57,0.593,4949,2.472,5216,2.472]],["body/additional-documentation/local-development/schematics.html",[5,0.095,25,0.011,26,0.562,42,1.308,57,0.837,62,3.116,68,2.83,74,1.962,83,0.006,84,0.008,85,0.006,99,3.733,100,3.655,106,0.862,142,1.319,179,2.406,180,0.296,185,1.962,234,3.227,238,1.31,274,2.874,285,3.317,299,2.055,303,2.164,338,2.993,346,4.036,361,3.499,375,1.422,417,2.709,426,3.655,435,1.365,439,1.924,440,5.026,441,2.965,444,3.733,474,2.709,476,2.965,509,4.023,515,5.641,530,3.227,531,3.506,575,3.116,577,4.036,595,2.164,599,3.289,667,3.116,792,2.164,815,3.227,819,2.32,857,2.995,874,3.718,884,2.164,922,3.49,993,5.338,1072,4.765,1074,2.499,1081,2.499,1089,4.442,1090,3.49,1091,4.278,1193,4.023,1211,4.442,1272,3.733,1508,3.289,1533,3.107,1584,3.49,1651,2.965,1677,4.442,1834,3.733,1843,3.49,2445,2.709,2457,3.116,2520,3.733,2529,3.289,2637,6.315,2683,3.733,2684,2.965,2735,5.736,2786,3.289,2820,4.82,2923,4.442,2929,4.442,2939,4.442,2973,5.338,3041,4.036,3068,3.733,3101,3.733,3166,4.442,3295,4.442,3669,4.442,3711,4.442,3791,2.965,3860,4.82,4014,5.275,4535,6.167,4601,4.442,4620,4.442,4621,4.036,4660,4.442,4793,5.772,4820,5.212,4901,4.036,5029,4.036,5079,4.036,5104,4.442,5110,5.736,5178,4.442,5181,6.1,5189,4.442,5199,6.353,5200,4.82,5216,6.066,5217,6.714,5219,4.442,5403,5.736,5455,4.442,5492,4.442,5512,6.795,5515,4.442,5520,4.442,5521,4.442,5522,5.059,5523,6.533,5524,4.442,5525,5.059,5526,5.059,5527,5.059,5528,7.646,5529,6.533,5530,5.059,5531,5.059,5532,5.059,5533,5.059,5534,5.059,5535,5.059,5536,5.059,5537,5.059,5538,5.059,5539,4.442,5540,5.736,5541,5.059,5542,5.059,5543,5.059,5544,6.533,5545,5.059,5546,5.059,5547,5.059,5548,5.059,5549,5.059,5550,5.059,5551,5.059,5552,5.059,5553,5.059,5554,5.059,5555,5.059,5556,5.059,5557,5.059,5558,5.059,5559,5.059,5560,5.059,5561,5.059,5562,5.059,5563,5.059,5564,5.059,5565,5.059,5566,5.059,5567,5.059,5568,5.059,5569,5.059,5570,5.059,5571,5.059,5572,5.059,5573,5.059,5574,5.059,5575,5.059,5576,5.059,5577,5.059,5578,5.059,5579,5.059,5580,5.059,5581,5.059,5582,4.442]],["title/additional-documentation/local-development/components.html",[57,0.593,142,0.723,4949,2.472]],["body/additional-documentation/local-development/components.html",[5,0.096,18,4.046,22,0.414,25,0.01,26,0.51,39,2.521,42,1.32,68,2.855,71,0.23,83,0.006,84,0.008,85,0.006,99,3.766,100,4.441,106,0.869,142,1.326,176,2.323,179,3.124,180,0.298,233,2.733,238,0.844,270,2.043,274,2.983,285,3.012,300,1.089,303,2.183,305,2.57,361,3.891,364,4.072,370,2.623,371,3.766,373,2.323,375,1.434,435,1.452,439,1.357,440,5.061,441,4.907,474,2.733,476,2.991,490,4.072,509,4.046,510,4.482,515,5.66,530,2.521,532,5.241,533,4.532,539,3.521,550,4.482,564,3.012,570,2.623,578,4.847,589,4.482,595,2.183,788,1.699,815,2.521,839,2.991,854,2.81,857,2.34,874,4.079,912,3.318,993,6.178,1036,4.482,1053,3.143,1072,4.733,1073,3.143,1074,2.521,1079,3.766,1081,2.521,1083,3.521,1193,3.143,1243,3.318,1637,4.072,1640,3.766,2422,4.532,2445,4.685,2460,4.847,2675,4.987,2749,3.766,2823,4.072,2973,3.766,2998,3.521,3134,3.318,3502,5.769,3551,5.241,3663,4.072,3860,3.766,4014,5.702,4091,4.723,4101,4.482,4535,5.36,4621,4.072,4793,5.241,4819,3.521,4820,4.072,4901,5.241,5029,4.072,5079,4.072,5083,4.482,5111,4.072,5164,4.482,5167,5.769,5173,4.482,5181,6.12,5196,4.482,5200,4.847,5216,5.885,5229,4.482,5491,4.482,5512,6.805,5520,4.482,5521,5.769,5524,4.482,5539,5.769,5540,5.769,5582,4.482,5583,5.104,5584,5.104,5585,5.104,5586,5.104,5587,6.57,5588,6.57,5589,6.57,5590,5.104,5591,5.104,5592,5.104,5593,5.104,5594,6.57,5595,5.104,5596,5.104,5597,5.104,5598,5.104,5599,5.104,5600,6.57,5601,7.266,5602,5.104,5603,5.104,5604,7.266,5605,5.104,5606,5.104,5607,5.104,5608,5.104,5609,5.104,5610,5.104,5611,5.104,5612,5.104,5613,5.104,5614,5.104,5615,5.104,5616,5.104,5617,5.104,5618,5.104,5619,5.104,5620,5.104,5621,5.104,5622,5.104]]],"invertedIndex":[["",{"_index":25,"title":{},"body":{"classes/AbstractBaseForm.html":{},"classes/AbstractForm.html":{},"classes/AbstractFormControl.html":{},"classes/AbstractHttpService.html":{},"injectables/AbstractPageGuardService.html":{},"injectables/AbstractPgCheckService.html":{},"classes/AbstractReactForm.html":{},"classes/AbstractTestPage.html":{},"components/AccordionCommonComponent.html":{},"interfaces/AddrLabelList.html":{},"classes/Address.html":{},"classes/Base.html":{},"components/ButtonComponent.html":{},"components/ButtonGroupComponent.html":{},"injectables/CaptchaDataService.html":{},"modules/CaptchaModule.html":{},"injectables/CheckCompleteBaseService.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"interfaces/CommonAttachmentJson.html":{},"classes/CommonImage.html":{},"classes/CommonImageProcessingError.html":{},"interfaces/CommonImageScaleFactors.html":{},"classes/CommonImageScaleFactorsImpl.html":{},"interfaces/CommonLogMessage.html":{},"components/ConfirmTemplateComponent.html":{},"classes/Container.html":{},"injectables/ContainerService.html":{},"components/CoreBreadcrumbComponent.html":{},"interfaces/CountryList.html":{},"interfaces/DateErrorMsg.html":{},"directives/DateFieldFormatDirective.html":{},"components/DatepickerComponent.html":{},"injectables/DefaultPageGuardService.html":{},"components/DropdownComponent.html":{},"directives/DuplicateCheckDirective.html":{},"components/EmailComponent.html":{},"components/ErrorContainerComponent.html":{},"interfaces/ErrorMessage.html":{},"interfaces/FileUploaderMsg.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/FullNameComponent.html":{},"interfaces/FullNameErrorMsg.html":{},"interfaces/GeoAddressResult.html":{},"components/GeocoderInputComponent.html":{},"injectables/GeocoderService.html":{},"components/HeaderComponent.html":{},"interfaces/IRadioItems.html":{},"interfaces/ISpaEnvResponse.html":{},"guards/LoadPageGuardService.html":{},"interfaces/Maxlengths.html":{},"classes/MoHCommonLibraryError.html":{},"components/NameComponent.html":{},"components/PageFrameworkComponent.html":{},"interfaces/PageList.html":{},"interfaces/PageListInterface.html":{},"components/PageSectionComponent.html":{},"injectables/PageStateService.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"classes/Person.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{},"components/RadioComponent.html":{},"interfaces/ReadOnlyFields.html":{},"guards/RouteGuardService.html":{},"interfaces/SampleImageInterface.html":{},"components/SampleModalComponent.html":{},"injectables/ServerPayload.html":{},"modules/SharedCoreModule.html":{},"interfaces/SimpleDate.html":{},"components/SinComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"directives/ValidateBcPostalDirective.html":{},"directives/ValidateCityDirective.html":{},"directives/ValidateNameDirective.html":{},"directives/ValidatePostalcodeDirective.html":{},"directives/ValidateRegionDirective.html":{},"directives/ValidateStreetDirective.html":{},"components/WizardProgressBarComponent.html":{},"interfaces/WizardProgressItem.html":{},"components/XiconButtonComponent.html":{},"changelog.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"todo.html":{},"additional-documentation/getting-started.html":{},"additional-documentation/local-development.html":{},"additional-documentation/local-development/schematics.html":{},"additional-documentation/local-development/components.html":{}}}],["0",{"_index":355,"title":{},"body":{"classes/AbstractHttpService.html":{},"classes/Address.html":{},"injectables/CheckCompleteBaseService.html":{},"interfaces/CommonAttachmentJson.html":{},"classes/CommonImage.html":{},"classes/CommonImageProcessingError.html":{},"interfaces/CommonImageScaleFactors.html":{},"classes/CommonImageScaleFactorsImpl.html":{},"components/ConfirmTemplateComponent.html":{},"interfaces/DateErrorMsg.html":{},"directives/DateFieldFormatDirective.html":{},"components/DatepickerComponent.html":{},"interfaces/FileUploaderMsg.html":{},"components/GeocoderInputComponent.html":{},"interfaces/PageList.html":{},"interfaces/PageListInterface.html":{},"injectables/PageStateService.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"components/SinComponent.html":{},"components/WizardProgressBarComponent.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{}}}],["0.0.17",{"_index":5208,"title":{},"body":{"changelog.html":{}}}],["0.0.18",{"_index":5206,"title":{},"body":{"changelog.html":{}}}],["0.0.19",{"_index":5202,"title":{},"body":{"changelog.html":{}}}],["0.0.20",{"_index":5188,"title":{},"body":{"changelog.html":{}}}],["0.0.21",{"_index":5175,"title":{},"body":{"changelog.html":{}}}],["0.0.22",{"_index":5172,"title":{},"body":{"changelog.html":{}}}],["0.0.23",{"_index":5169,"title":{},"body":{"changelog.html":{}}}],["0.0.24",{"_index":5166,"title":{},"body":{"changelog.html":{}}}],["0.0.25",{"_index":5161,"title":{},"body":{"changelog.html":{}}}],["0.0.26",{"_index":5158,"title":{},"body":{"changelog.html":{}}}],["0.0.27",{"_index":5155,"title":{},"body":{"changelog.html":{}}}],["0.0.28",{"_index":5153,"title":{},"body":{"changelog.html":{}}}],["0.0.29",{"_index":5151,"title":{},"body":{"changelog.html":{}}}],["0.0.30",{"_index":5147,"title":{},"body":{"changelog.html":{}}}],["0.0.31",{"_index":5137,"title":{},"body":{"changelog.html":{}}}],["0.0.32",{"_index":5123,"title":{},"body":{"changelog.html":{}}}],["0.0.33",{"_index":5107,"title":{},"body":{"changelog.html":{}}}],["0.0.34",{"_index":5103,"title":{},"body":{"changelog.html":{}}}],["0.1.2",{"_index":5400,"title":{},"body":{"dependencies.html":{}}}],["0.5",{"_index":3150,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["0.8.26",{"_index":5409,"title":{},"body":{"dependencies.html":{}}}],["0.8to",{"_index":3032,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["0/1",{"_index":5260,"title":{},"body":{"coverage.html":{}}}],["0/10",{"_index":5299,"title":{},"body":{"coverage.html":{}}}],["0/12",{"_index":5313,"title":{},"body":{"coverage.html":{}}}],["0/13",{"_index":5343,"title":{},"body":{"coverage.html":{}}}],["0/2",{"_index":5257,"title":{},"body":{"coverage.html":{}}}],["0/3",{"_index":5288,"title":{},"body":{"coverage.html":{}}}],["0/4",{"_index":5304,"title":{},"body":{"coverage.html":{}}}],["0/5",{"_index":5252,"title":{},"body":{"coverage.html":{}}}],["0/6",{"_index":5277,"title":{},"body":{"coverage.html":{}}}],["0/7",{"_index":5330,"title":{},"body":{"coverage.html":{}}}],["0/8",{"_index":5276,"title":{},"body":{"coverage.html":{}}}],["00",{"_index":4921,"title":{},"body":{"changelog.html":{}}}],["000000000",{"_index":4408,"title":{},"body":{"components/SinComponent.html":{}}}],["009d779",{"_index":4738,"title":{},"body":{"changelog.html":{}}}],["01",{"_index":4589,"title":{},"body":{"changelog.html":{}}}],["015602c",{"_index":4770,"title":{},"body":{"changelog.html":{}}}],["017bd5f",{"_index":5235,"title":{},"body":{"changelog.html":{}}}],["01d17d3",{"_index":5244,"title":{},"body":{"changelog.html":{}}}],["02",{"_index":4610,"title":{},"body":{"changelog.html":{}}}],["02cb2c5",{"_index":4823,"title":{},"body":{"changelog.html":{}}}],["03",{"_index":4660,"title":{},"body":{"changelog.html":{},"additional-documentation/local-development/schematics.html":{}}}],["03c1243",{"_index":5074,"title":{},"body":{"changelog.html":{}}}],["04",{"_index":4998,"title":{},"body":{"changelog.html":{}}}],["05",{"_index":4735,"title":{},"body":{"changelog.html":{}}}],["06",{"_index":4601,"title":{},"body":{"changelog.html":{},"additional-documentation/local-development/schematics.html":{}}}],["0699178",{"_index":4915,"title":{},"body":{"changelog.html":{}}}],["07",{"_index":4936,"title":{},"body":{"changelog.html":{}}}],["08",{"_index":4590,"title":{},"body":{"changelog.html":{}}}],["0803cae",{"_index":4684,"title":{},"body":{"changelog.html":{}}}],["0881790",{"_index":4692,"title":{},"body":{"changelog.html":{}}}],["09",{"_index":4651,"title":{},"body":{"changelog.html":{}}}],["09ae712",{"_index":5020,"title":{},"body":{"changelog.html":{}}}],["09c1a1b",{"_index":4683,"title":{},"body":{"changelog.html":{}}}],["09ce95a",{"_index":5112,"title":{},"body":{"changelog.html":{}}}],["0b0ffca",{"_index":4656,"title":{},"body":{"changelog.html":{}}}],["0ba1d1e",{"_index":5037,"title":{},"body":{"changelog.html":{}}}],["0ed3875",{"_index":4853,"title":{},"body":{"changelog.html":{}}}],["0s",{"_index":5055,"title":{},"body":{"changelog.html":{}}}],["1",{"_index":1242,"title":{},"body":{"injectables/CheckCompleteBaseService.html":{},"interfaces/CommonAttachmentJson.html":{},"classes/CommonImage.html":{},"classes/CommonImageProcessingError.html":{},"interfaces/CommonImageScaleFactors.html":{},"classes/CommonImageScaleFactorsImpl.html":{},"components/ConfirmTemplateComponent.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"interfaces/FileUploaderMsg.html":{},"components/HeaderComponent.html":{},"guards/LoadPageGuardService.html":{},"components/NameComponent.html":{},"interfaces/PageList.html":{},"interfaces/PageListInterface.html":{},"injectables/PageStateService.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"guards/RouteGuardService.html":{},"components/SinComponent.html":{},"components/WizardProgressBarComponent.html":{},"changelog.html":{},"miscellaneous/enumerations.html":{}}}],["1.0.0",{"_index":5096,"title":{},"body":{"changelog.html":{}}}],["1.0.1",{"_index":5089,"title":{},"body":{"changelog.html":{}}}],["1.0.2",{"_index":5087,"title":{},"body":{"changelog.html":{}}}],["1.1.0",{"_index":5075,"title":{},"body":{"changelog.html":{}}}],["1.1.1",{"_index":5072,"title":{},"body":{"changelog.html":{},"dependencies.html":{}}}],["1.2.0",{"_index":5069,"title":{},"body":{"changelog.html":{}}}],["1.3.0",{"_index":5062,"title":{},"body":{"changelog.html":{}}}],["1.4.0",{"_index":5060,"title":{},"body":{"changelog.html":{}}}],["1.5.0",{"_index":5054,"title":{},"body":{"changelog.html":{}}}],["1.6.0",{"_index":5044,"title":{},"body":{"changelog.html":{}}}],["1.6.1",{"_index":5041,"title":{},"body":{"changelog.html":{}}}],["1.6.2",{"_index":5038,"title":{},"body":{"changelog.html":{}}}],["1.7.0",{"_index":5025,"title":{},"body":{"changelog.html":{}}}],["1.8.0",{"_index":5017,"title":{},"body":{"changelog.html":{}}}],["1/1",{"_index":5261,"title":{},"body":{"coverage.html":{}}}],["1/11",{"_index":5303,"title":{},"body":{"coverage.html":{}}}],["1/14",{"_index":5284,"title":{},"body":{"coverage.html":{}}}],["1/17",{"_index":5278,"title":{},"body":{"coverage.html":{}}}],["1/18",{"_index":5296,"title":{},"body":{"coverage.html":{}}}],["1/2",{"_index":5342,"title":{},"body":{"coverage.html":{}}}],["1/28",{"_index":5287,"title":{},"body":{"coverage.html":{}}}],["1/3",{"_index":5286,"title":{},"body":{"coverage.html":{}}}],["1/4",{"_index":5282,"title":{},"body":{"coverage.html":{}}}],["1/5",{"_index":5344,"title":{},"body":{"coverage.html":{}}}],["1/6",{"_index":5274,"title":{},"body":{"coverage.html":{}}}],["1/7",{"_index":5314,"title":{},"body":{"coverage.html":{}}}],["1/8",{"_index":5295,"title":{},"body":{"coverage.html":{}}}],["1/9",{"_index":5279,"title":{},"body":{"coverage.html":{}}}],["10",{"_index":2897,"title":{},"body":{"interfaces/FileUploaderMsg.html":{},"interfaces/GeoAddressResult.html":{},"components/GeocoderInputComponent.html":{},"injectables/GeocoderService.html":{},"components/NameComponent.html":{},"components/SinComponent.html":{},"components/ThumbnailComponent.html":{},"changelog.html":{},"coverage.html":{},"overview.html":{}}}],["10.256s",{"_index":5092,"title":{},"body":{"changelog.html":{}}}],["10/31",{"_index":5294,"title":{},"body":{"coverage.html":{}}}],["10/38",{"_index":5298,"title":{},"body":{"coverage.html":{}}}],["10/58",{"_index":5290,"title":{},"body":{"coverage.html":{}}}],["100",{"_index":1371,"title":{},"body":{"components/CityComponent.html":{},"interfaces/FileUploaderMsg.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"components/WizardProgressBarComponent.html":{},"coverage.html":{}}}],["1024",{"_index":3119,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["1048576",{"_index":3137,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["108e46b",{"_index":4765,"title":{},"body":{"changelog.html":{}}}],["10^10",{"_index":3995,"title":{},"body":{"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{}}}],["11",{"_index":2901,"title":{},"body":{"interfaces/FileUploaderMsg.html":{},"changelog.html":{},"coverage.html":{}}}],["111",{"_index":4375,"title":{},"body":{"components/SinComponent.html":{}}}],["12",{"_index":2906,"title":{},"body":{"interfaces/FileUploaderMsg.html":{},"changelog.html":{},"coverage.html":{}}}],["1251212",{"_index":4828,"title":{},"body":{"changelog.html":{}}}],["126d876",{"_index":4972,"title":{},"body":{"changelog.html":{}}}],["13",{"_index":2917,"title":{},"body":{"interfaces/FileUploaderMsg.html":{},"components/GeocoderInputComponent.html":{},"changelog.html":{},"coverage.html":{}}}],["1303722",{"_index":4847,"title":{},"body":{"changelog.html":{}}}],["14",{"_index":2922,"title":{},"body":{"interfaces/FileUploaderMsg.html":{},"changelog.html":{},"coverage.html":{},"overview.html":{}}}],["14bce6e",{"_index":4750,"title":{},"body":{"changelog.html":{}}}],["15",{"_index":2926,"title":{},"body":{"interfaces/FileUploaderMsg.html":{},"components/SinComponent.html":{},"changelog.html":{},"coverage.html":{}}}],["151f173",{"_index":5100,"title":{},"body":{"changelog.html":{}}}],["15px",{"_index":5048,"title":{},"body":{"changelog.html":{}}}],["16",{"_index":2930,"title":{},"body":{"interfaces/FileUploaderMsg.html":{},"changelog.html":{},"coverage.html":{}}}],["1650a23",{"_index":4926,"title":{},"body":{"changelog.html":{}}}],["16be24b",{"_index":4824,"title":{},"body":{"changelog.html":{}}}],["16da113",{"_index":4919,"title":{},"body":{"changelog.html":{}}}],["17",{"_index":2933,"title":{},"body":{"interfaces/FileUploaderMsg.html":{},"changelog.html":{},"coverage.html":{}}}],["18",{"_index":2941,"title":{},"body":{"interfaces/FileUploaderMsg.html":{},"changelog.html":{},"coverage.html":{}}}],["180",{"_index":4436,"title":{},"body":{"components/ThumbnailComponent.html":{}}}],["185148b",{"_index":5115,"title":{},"body":{"changelog.html":{}}}],["185px",{"_index":2508,"title":{},"body":{"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{}}}],["18d69c6",{"_index":5140,"title":{},"body":{"changelog.html":{}}}],["19",{"_index":2949,"title":{},"body":{"interfaces/FileUploaderMsg.html":{},"changelog.html":{}}}],["19/23",{"_index":5256,"title":{},"body":{"coverage.html":{}}}],["1901",{"_index":4674,"title":{},"body":{"changelog.html":{}}}],["197",{"_index":4617,"title":{},"body":{"changelog.html":{}}}],["1].iscomplete",{"_index":1295,"title":{},"body":{"injectables/CheckCompleteBaseService.html":{},"interfaces/PageListInterface.html":{}}}],["1a1",{"_index":4151,"title":{},"body":{"components/PostalCodeComponent.html":{}}}],["1a288cd",{"_index":5242,"title":{},"body":{"changelog.html":{}}}],["1c51f01",{"_index":4878,"title":{},"body":{"changelog.html":{}}}],["1c8242e",{"_index":5125,"title":{},"body":{"changelog.html":{}}}],["1ea543d",{"_index":5150,"title":{},"body":{"changelog.html":{}}}],["1f1a0f9",{"_index":4830,"title":{},"body":{"changelog.html":{}}}],["2",{"_index":854,"title":{},"body":{"interfaces/AddrLabelList.html":{},"components/ConfirmTemplateComponent.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"interfaces/FileUploaderMsg.html":{},"guards/LoadPageGuardService.html":{},"interfaces/Maxlengths.html":{},"classes/Person.html":{},"interfaces/ReadOnlyFields.html":{},"guards/RouteGuardService.html":{},"components/SinComponent.html":{},"components/WizardProgressBarComponent.html":{},"changelog.html":{},"miscellaneous/enumerations.html":{},"overview.html":{},"additional-documentation/local-development/components.html":{}}}],["2.0",{"_index":5448,"title":{},"body":{"license.html":{}}}],["2.0.0",{"_index":3859,"title":{},"body":{"components/PageFrameworkComponent.html":{},"changelog.html":{}}}],["2.0.1",{"_index":4997,"title":{},"body":{"changelog.html":{}}}],["2.0.550",{"_index":5406,"title":{},"body":{"dependencies.html":{}}}],["2.0unless",{"_index":5452,"title":{},"body":{"license.html":{}}}],["2.1.0",{"_index":4981,"title":{},"body":{"changelog.html":{}}}],["2.1.1",{"_index":4976,"title":{},"body":{"changelog.html":{}}}],["2.1.2",{"_index":4970,"title":{},"body":{"changelog.html":{}}}],["2.1.3",{"_index":4963,"title":{},"body":{"changelog.html":{}}}],["2.1.4",{"_index":4960,"title":{},"body":{"changelog.html":{}}}],["2.1.5",{"_index":4955,"title":{},"body":{"changelog.html":{}}}],["2.10.0",{"_index":4903,"title":{},"body":{"changelog.html":{}}}],["2.11.0",{"_index":4898,"title":{},"body":{"changelog.html":{}}}],["2.12.0",{"_index":4893,"title":{},"body":{"changelog.html":{}}}],["2.13.0",{"_index":4890,"title":{},"body":{"changelog.html":{}}}],["2.14.0",{"_index":4888,"title":{},"body":{"changelog.html":{}}}],["2.15.0",{"_index":4886,"title":{},"body":{"changelog.html":{}}}],["2.16.0",{"_index":4884,"title":{},"body":{"changelog.html":{}}}],["2.16.2",{"_index":5398,"title":{},"body":{"dependencies.html":{}}}],["2.17.0",{"_index":4872,"title":{},"body":{"changelog.html":{}}}],["2.17.1",{"_index":4862,"title":{},"body":{"changelog.html":{}}}],["2.18.0",{"_index":4857,"title":{},"body":{"changelog.html":{}}}],["2.18.1",{"_index":4855,"title":{},"body":{"changelog.html":{}}}],["2.19.0",{"_index":4852,"title":{},"body":{"changelog.html":{}}}],["2.2.0",{"_index":4948,"title":{},"body":{"changelog.html":{}}}],["2.20.0",{"_index":4848,"title":{},"body":{"changelog.html":{}}}],["2.20.1",{"_index":4845,"title":{},"body":{"changelog.html":{},"dependencies.html":{}}}],["2.21.0",{"_index":4838,"title":{},"body":{"changelog.html":{}}}],["2.22.0",{"_index":4836,"title":{},"body":{"changelog.html":{}}}],["2.23.0",{"_index":4832,"title":{},"body":{"changelog.html":{}}}],["2.24.0",{"_index":4827,"title":{},"body":{"changelog.html":{},"dependencies.html":{}}}],["2.26.0",{"_index":4817,"title":{},"body":{"changelog.html":{}}}],["2.27.0",{"_index":4809,"title":{},"body":{"changelog.html":{}}}],["2.27.1",{"_index":4807,"title":{},"body":{"changelog.html":{}}}],["2.27.2",{"_index":4802,"title":{},"body":{"changelog.html":{}}}],["2.28.0",{"_index":4800,"title":{},"body":{"changelog.html":{}}}],["2.3.0",{"_index":4945,"title":{},"body":{"changelog.html":{}}}],["2.4.0",{"_index":4944,"title":{},"body":{"changelog.html":{}}}],["2.5.0",{"_index":4942,"title":{},"body":{"changelog.html":{}}}],["2.5.1",{"_index":4935,"title":{},"body":{"changelog.html":{},"dependencies.html":{}}}],["2.5.2",{"_index":4934,"title":{},"body":{"changelog.html":{}}}],["2.5.4",{"_index":5404,"title":{},"body":{"dependencies.html":{}}}],["2.6.0",{"_index":4928,"title":{},"body":{"changelog.html":{}}}],["2.7.0",{"_index":4924,"title":{},"body":{"changelog.html":{}}}],["2.7.1",{"_index":4920,"title":{},"body":{"changelog.html":{}}}],["2.8.0",{"_index":4912,"title":{},"body":{"changelog.html":{}}}],["2.8.1",{"_index":4909,"title":{},"body":{"changelog.html":{}}}],["2.9.0",{"_index":4906,"title":{},"body":{"changelog.html":{}}}],["2/12",{"_index":5315,"title":{},"body":{"coverage.html":{}}}],["2/13",{"_index":5318,"title":{},"body":{"coverage.html":{}}}],["2/23",{"_index":5301,"title":{},"body":{"coverage.html":{}}}],["2/27",{"_index":5310,"title":{},"body":{"coverage.html":{}}}],["2/3",{"_index":5326,"title":{},"body":{"coverage.html":{}}}],["2/31",{"_index":5281,"title":{},"body":{"coverage.html":{}}}],["2/34",{"_index":5306,"title":{},"body":{"coverage.html":{}}}],["2/5",{"_index":5339,"title":{},"body":{"coverage.html":{}}}],["2/9",{"_index":5300,"title":{},"body":{"coverage.html":{}}}],["20",{"_index":4703,"title":{},"body":{"changelog.html":{},"coverage.html":{}}}],["2017",{"_index":5445,"title":{},"body":{"license.html":{}}}],["2019",{"_index":4620,"title":{},"body":{"changelog.html":{},"additional-documentation/local-development/schematics.html":{}}}],["201px",{"_index":2510,"title":{},"body":{"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{}}}],["2020",{"_index":4588,"title":{},"body":{"changelog.html":{}}}],["20fa6ea",{"_index":4632,"title":{},"body":{"changelog.html":{}}}],["21",{"_index":5336,"title":{},"body":{"coverage.html":{},"overview.html":{}}}],["21afb82",{"_index":4730,"title":{},"body":{"changelog.html":{}}}],["22",{"_index":4787,"title":{},"body":{"changelog.html":{},"coverage.html":{}}}],["2235059",{"_index":4835,"title":{},"body":{"changelog.html":{}}}],["224e362",{"_index":4815,"title":{},"body":{"changelog.html":{}}}],["22710b7",{"_index":5133,"title":{},"body":{"changelog.html":{}}}],["22fd6aa",{"_index":4611,"title":{},"body":{"changelog.html":{}}}],["23",{"_index":4782,"title":{},"body":{"changelog.html":{}}}],["238c01d",{"_index":5141,"title":{},"body":{"changelog.html":{}}}],["23fe745",{"_index":4667,"title":{},"body":{"changelog.html":{}}}],["24",{"_index":4873,"title":{},"body":{"changelog.html":{}}}],["25",{"_index":861,"title":{},"body":{"interfaces/AddrLabelList.html":{},"interfaces/Maxlengths.html":{},"interfaces/ReadOnlyFields.html":{},"changelog.html":{},"coverage.html":{}}}],["250",{"_index":862,"title":{},"body":{"interfaces/AddrLabelList.html":{},"interfaces/CountryList.html":{},"interfaces/Maxlengths.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{},"interfaces/ReadOnlyFields.html":{},"components/ThumbnailComponent.html":{}}}],["255",{"_index":2694,"title":{},"body":{"components/EmailComponent.html":{},"components/GeocoderInputComponent.html":{},"components/NameComponent.html":{}}}],["26",{"_index":4858,"title":{},"body":{"changelog.html":{},"coverage.html":{}}}],["26(a",{"_index":3674,"title":{},"body":{"interfaces/ISpaEnvResponse.html":{}}}],["2600",{"_index":3152,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["2625608",{"_index":5234,"title":{},"body":{"changelog.html":{}}}],["2637a7a",{"_index":4671,"title":{},"body":{"changelog.html":{}}}],["27",{"_index":4681,"title":{},"body":{"changelog.html":{},"coverage.html":{}}}],["27b488b",{"_index":4841,"title":{},"body":{"changelog.html":{}}}],["28",{"_index":4776,"title":{},"body":{"changelog.html":{}}}],["28d9585",{"_index":4778,"title":{},"body":{"changelog.html":{}}}],["29",{"_index":4761,"title":{},"body":{"changelog.html":{}}}],["29c5160",{"_index":4867,"title":{},"body":{"changelog.html":{}}}],["29e521c",{"_index":4885,"title":{},"body":{"changelog.html":{}}}],["2a511e7",{"_index":5018,"title":{},"body":{"changelog.html":{}}}],["2c0b127",{"_index":4900,"title":{},"body":{"changelog.html":{}}}],["2c2f322",{"_index":4965,"title":{},"body":{"changelog.html":{}}}],["2c5c994",{"_index":5232,"title":{},"body":{"changelog.html":{}}}],["2ddfc23",{"_index":5126,"title":{},"body":{"changelog.html":{}}}],["2ebd235",{"_index":4806,"title":{},"body":{"changelog.html":{}}}],["2f4836b",{"_index":4604,"title":{},"body":{"changelog.html":{}}}],["3",{"_index":855,"title":{},"body":{"interfaces/AddrLabelList.html":{},"components/CoreBreadcrumbComponent.html":{},"interfaces/IRadioItems.html":{},"guards/LoadPageGuardService.html":{},"interfaces/Maxlengths.html":{},"components/PasswordComponent.html":{},"classes/Person.html":{},"components/RadioComponent.html":{},"interfaces/ReadOnlyFields.html":{},"guards/RouteGuardService.html":{},"changelog.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{}}}],["3.0.0",{"_index":4587,"title":{},"body":{"changelog.html":{},"todo.html":{}}}],["3.2.0",{"_index":5405,"title":{},"body":{"dependencies.html":{}}}],["3/14",{"_index":5337,"title":{},"body":{"coverage.html":{}}}],["3/32",{"_index":5297,"title":{},"body":{"coverage.html":{}}}],["3/34",{"_index":5309,"title":{},"body":{"coverage.html":{}}}],["30",{"_index":2997,"title":{},"body":{"interfaces/FileUploaderMsg.html":{},"changelog.html":{}}}],["300",{"_index":4432,"title":{},"body":{"components/ThumbnailComponent.html":{}}}],["31",{"_index":4937,"title":{},"body":{"changelog.html":{},"coverage.html":{}}}],["32",{"_index":3978,"title":{},"body":{"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"changelog.html":{},"coverage.html":{}}}],["322d58c",{"_index":4700,"title":{},"body":{"changelog.html":{}}}],["33",{"_index":5285,"title":{},"body":{"coverage.html":{}}}],["3300",{"_index":3155,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["34f0a40",{"_index":4810,"title":{},"body":{"changelog.html":{}}}],["35",{"_index":5323,"title":{},"body":{"coverage.html":{}}}],["355945207",{"_index":4018,"title":{},"body":{"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{}}}],["35d0bba",{"_index":5243,"title":{},"body":{"changelog.html":{}}}],["36476f8",{"_index":5071,"title":{},"body":{"changelog.html":{}}}],["36eeddb",{"_index":4726,"title":{},"body":{"changelog.html":{}}}],["38",{"_index":5470,"title":{},"body":{"overview.html":{}}}],["3868c50",{"_index":5086,"title":{},"body":{"changelog.html":{}}}],["38c822b",{"_index":4773,"title":{},"body":{"changelog.html":{}}}],["39",{"_index":5340,"title":{},"body":{"coverage.html":{}}}],["3a06f99",{"_index":5036,"title":{},"body":{"changelog.html":{}}}],["3a5677b",{"_index":4940,"title":{},"body":{"changelog.html":{}}}],["3a98fb0",{"_index":5144,"title":{},"body":{"changelog.html":{}}}],["3ac6d4d",{"_index":5182,"title":{},"body":{"changelog.html":{}}}],["3b207b9",{"_index":4704,"title":{},"body":{"changelog.html":{}}}],["3b90e60",{"_index":5201,"title":{},"body":{"changelog.html":{}}}],["3d0a6bc",{"_index":5174,"title":{},"body":{"changelog.html":{}}}],["3f1149e",{"_index":4927,"title":{},"body":{"changelog.html":{}}}],["3f42b31",{"_index":5047,"title":{},"body":{"changelog.html":{}}}],["3f6a466",{"_index":4743,"title":{},"body":{"changelog.html":{}}}],["3ff09e0",{"_index":4695,"title":{},"body":{"changelog.html":{}}}],["4",{"_index":2875,"title":{},"body":{"interfaces/FileUploaderMsg.html":{},"guards/LoadPageGuardService.html":{},"components/PasswordComponent.html":{},"guards/RouteGuardService.html":{},"miscellaneous/enumerations.html":{}}}],["4.3.1",{"_index":5402,"title":{},"body":{"dependencies.html":{}}}],["4/10",{"_index":5333,"title":{},"body":{"coverage.html":{}}}],["4/16",{"_index":5329,"title":{},"body":{"coverage.html":{}}}],["4/29",{"_index":5280,"title":{},"body":{"coverage.html":{}}}],["4/40",{"_index":5254,"title":{},"body":{"coverage.html":{}}}],["4/5",{"_index":2506,"title":{},"body":{"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{}}}],["40",{"_index":5332,"title":{},"body":{"coverage.html":{}}}],["400/500",{"_index":283,"title":{},"body":{"classes/AbstractHttpService.html":{},"injectables/GeocoderService.html":{}}}],["41f5609",{"_index":5102,"title":{},"body":{"changelog.html":{}}}],["4295b03",{"_index":5056,"title":{},"body":{"changelog.html":{}}}],["4766a2b",{"_index":5168,"title":{},"body":{"changelog.html":{}}}],["479804f",{"_index":5222,"title":{},"body":{"changelog.html":{}}}],["47d614a",{"_index":5023,"title":{},"body":{"changelog.html":{}}}],["483b735",{"_index":4908,"title":{},"body":{"changelog.html":{}}}],["48966c0",{"_index":5228,"title":{},"body":{"changelog.html":{}}}],["48dfa9d",{"_index":5220,"title":{},"body":{"changelog.html":{}}}],["48e2120",{"_index":4718,"title":{},"body":{"changelog.html":{}}}],["492934b",{"_index":4719,"title":{},"body":{"changelog.html":{}}}],["496c252",{"_index":4871,"title":{},"body":{"changelog.html":{}}}],["4b884a6",{"_index":5237,"title":{},"body":{"changelog.html":{}}}],["4bb54c0",{"_index":4783,"title":{},"body":{"changelog.html":{}}}],["4d39002",{"_index":4911,"title":{},"body":{"changelog.html":{}}}],["4d5992a",{"_index":5116,"title":{},"body":{"changelog.html":{}}}],["4e8eb9b",{"_index":5203,"title":{},"body":{"changelog.html":{}}}],["4f3e59f",{"_index":4851,"title":{},"body":{"changelog.html":{}}}],["4f8f2e7",{"_index":4861,"title":{},"body":{"changelog.html":{}}}],["5",{"_index":2879,"title":{},"body":{"interfaces/FileUploaderMsg.html":{},"guards/LoadPageGuardService.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"guards/RouteGuardService.html":{},"changelog.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{}}}],["5/10",{"_index":5334,"title":{},"body":{"coverage.html":{}}}],["5/14",{"_index":5324,"title":{},"body":{"coverage.html":{}}}],["5/16",{"_index":5338,"title":{},"body":{"coverage.html":{}}}],["5/39",{"_index":5312,"title":{},"body":{"coverage.html":{}}}],["50",{"_index":2921,"title":{},"body":{"interfaces/FileUploaderMsg.html":{},"components/FormActionBarComponent.html":{},"interfaces/GeoAddressResult.html":{},"injectables/GeocoderService.html":{},"coverage.html":{}}}],["503b449",{"_index":4685,"title":{},"body":{"changelog.html":{}}}],["5069fe8",{"_index":4905,"title":{},"body":{"changelog.html":{}}}],["50ms",{"_index":3279,"title":{},"body":{"components/FormActionBarComponent.html":{}}}],["510ad9e",{"_index":4837,"title":{},"body":{"changelog.html":{}}}],["51bfe3b",{"_index":5078,"title":{},"body":{"changelog.html":{}}}],["51f2ea4",{"_index":4798,"title":{},"body":{"changelog.html":{}}}],["532a3ec",{"_index":5154,"title":{},"body":{"changelog.html":{}}}],["5362c67",{"_index":4780,"title":{},"body":{"changelog.html":{}}}],["53a109b",{"_index":5121,"title":{},"body":{"changelog.html":{}}}],["5441be2",{"_index":4785,"title":{},"body":{"changelog.html":{}}}],["57b73dd",{"_index":4652,"title":{},"body":{"changelog.html":{}}}],["58",{"_index":5327,"title":{},"body":{"coverage.html":{}}}],["5910979",{"_index":4840,"title":{},"body":{"changelog.html":{}}}],["5965aec",{"_index":4897,"title":{},"body":{"changelog.html":{}}}],["5a7c37b",{"_index":4978,"title":{},"body":{"changelog.html":{}}}],["5b18c5f",{"_index":4999,"title":{},"body":{"changelog.html":{}}}],["5b88093",{"_index":5068,"title":{},"body":{"changelog.html":{}}}],["5bb54fc",{"_index":4929,"title":{},"body":{"changelog.html":{}}}],["5d8f61d",{"_index":4992,"title":{},"body":{"changelog.html":{}}}],["6",{"_index":2883,"title":{},"body":{"interfaces/FileUploaderMsg.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{}}}],["6.4.0",{"_index":5407,"title":{},"body":{"dependencies.html":{}}}],["6.4.1",{"_index":5430,"title":{},"body":{"index.html":{}}}],["6/7",{"_index":5317,"title":{},"body":{"coverage.html":{}}}],["60befc2",{"_index":4918,"title":{},"body":{"changelog.html":{}}}],["61b54fd",{"_index":4759,"title":{},"body":{"changelog.html":{}}}],["61c0cdc",{"_index":4774,"title":{},"body":{"changelog.html":{}}}],["6242bea",{"_index":5214,"title":{},"body":{"changelog.html":{}}}],["6254d29",{"_index":5009,"title":{},"body":{"changelog.html":{}}}],["636c1d5",{"_index":4693,"title":{},"body":{"changelog.html":{}}}],["6427f10",{"_index":4874,"title":{},"body":{"changelog.html":{}}}],["650025e",{"_index":5215,"title":{},"body":{"changelog.html":{}}}],["655a0fd",{"_index":4733,"title":{},"body":{"changelog.html":{}}}],["65b8144",{"_index":5197,"title":{},"body":{"changelog.html":{}}}],["66",{"_index":5325,"title":{},"body":{"coverage.html":{}}}],["6650ef8",{"_index":4766,"title":{},"body":{"changelog.html":{}}}],["66e58e7",{"_index":4889,"title":{},"body":{"changelog.html":{}}}],["66f9608",{"_index":5109,"title":{},"body":{"changelog.html":{}}}],["6775a4d",{"_index":5027,"title":{},"body":{"changelog.html":{}}}],["679ac15",{"_index":4745,"title":{},"body":{"changelog.html":{}}}],["67b6f78",{"_index":4922,"title":{},"body":{"changelog.html":{}}}],["67c4797",{"_index":5152,"title":{},"body":{"changelog.html":{}}}],["6b8cedd",{"_index":5014,"title":{},"body":{"changelog.html":{}}}],["6c09982",{"_index":5042,"title":{},"body":{"changelog.html":{}}}],["6caf36c",{"_index":5209,"title":{},"body":{"changelog.html":{}}}],["6d5649d",{"_index":5246,"title":{},"body":{"changelog.html":{}}}],["6f093d2",{"_index":4995,"title":{},"body":{"changelog.html":{}}}],["7",{"_index":2886,"title":{},"body":{"interfaces/FileUploaderMsg.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{}}}],["7.2.7",{"_index":5395,"title":{},"body":{"dependencies.html":{}}}],["7/12",{"_index":5328,"title":{},"body":{"coverage.html":{}}}],["7/14",{"_index":5335,"title":{},"body":{"coverage.html":{}}}],["716da42",{"_index":4631,"title":{},"body":{"changelog.html":{}}}],["71eb531",{"_index":4763,"title":{},"body":{"changelog.html":{}}}],["7226b37",{"_index":5131,"title":{},"body":{"changelog.html":{}}}],["730f9c7",{"_index":4816,"title":{},"body":{"changelog.html":{}}}],["73247f2",{"_index":4622,"title":{},"body":{"changelog.html":{}}}],["7355610",{"_index":4813,"title":{},"body":{"changelog.html":{}}}],["7398e93",{"_index":4895,"title":{},"body":{"changelog.html":{}}}],["7400a64",{"_index":4988,"title":{},"body":{"changelog.html":{}}}],["7567a75",{"_index":4643,"title":{},"body":{"changelog.html":{}}}],["788c3d1",{"_index":4706,"title":{},"body":{"changelog.html":{}}}],["7a5b7bc",{"_index":4649,"title":{},"body":{"changelog.html":{}}}],["7bf5025",{"_index":4696,"title":{},"body":{"changelog.html":{}}}],["7c7ca2f",{"_index":4708,"title":{},"body":{"changelog.html":{}}}],["7c99c1e",{"_index":4923,"title":{},"body":{"changelog.html":{}}}],["7d274e8",{"_index":4863,"title":{},"body":{"changelog.html":{}}}],["7d2e7cd",{"_index":5138,"title":{},"body":{"changelog.html":{}}}],["7e270d8",{"_index":4705,"title":{},"body":{"changelog.html":{}}}],["7e674de",{"_index":4654,"title":{},"body":{"changelog.html":{}}}],["7eaf326",{"_index":5193,"title":{},"body":{"changelog.html":{}}}],["7f968a4",{"_index":5204,"title":{},"body":{"changelog.html":{}}}],["7fd6537",{"_index":5191,"title":{},"body":{"changelog.html":{}}}],["7febf6d",{"_index":5053,"title":{},"body":{"changelog.html":{}}}],["7ff8510",{"_index":5064,"title":{},"body":{"changelog.html":{}}}],["8",{"_index":2889,"title":{},"body":{"interfaces/FileUploaderMsg.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"coverage.html":{},"overview.html":{}}}],["8.9.4",{"_index":5428,"title":{},"body":{"index.html":{}}}],["8/29",{"_index":5302,"title":{},"body":{"coverage.html":{}}}],["8/40",{"_index":5283,"title":{},"body":{"coverage.html":{}}}],["8004583",{"_index":5239,"title":{},"body":{"changelog.html":{}}}],["81",{"_index":5321,"title":{},"body":{"coverage.html":{}}}],["82",{"_index":5255,"title":{},"body":{"coverage.html":{}}}],["8248e61",{"_index":4748,"title":{},"body":{"changelog.html":{}}}],["8361a0e",{"_index":4947,"title":{},"body":{"changelog.html":{}}}],["8380850",{"_index":4892,"title":{},"body":{"changelog.html":{}}}],["83d31d",{"_index":4864,"title":{},"body":{"changelog.html":{}}}],["85",{"_index":5316,"title":{},"body":{"coverage.html":{}}}],["85d3767",{"_index":4634,"title":{},"body":{"changelog.html":{}}}],["85eab15",{"_index":5171,"title":{},"body":{"changelog.html":{}}}],["867f969",{"_index":4959,"title":{},"body":{"changelog.html":{}}}],["88bc3f3",{"_index":4818,"title":{},"body":{"changelog.html":{}}}],["8a22405",{"_index":5226,"title":{},"body":{"changelog.html":{}}}],["8aa41ec",{"_index":4826,"title":{},"body":{"changelog.html":{}}}],["8d79d30",{"_index":5142,"title":{},"body":{"changelog.html":{}}}],["8e823c5",{"_index":5019,"title":{},"body":{"changelog.html":{}}}],["8f24e2e",{"_index":5022,"title":{},"body":{"changelog.html":{}}}],["8f6886f",{"_index":4958,"title":{},"body":{"changelog.html":{}}}],["8fc79af",{"_index":4791,"title":{},"body":{"changelog.html":{}}}],["9",{"_index":2892,"title":{},"body":{"interfaces/FileUploaderMsg.html":{},"components/GeocoderInputComponent.html":{},"components/SinComponent.html":{},"directives/ValidateCityDirective.html":{},"directives/ValidatePostalcodeDirective.html":{},"directives/ValidateStreetDirective.html":{},"changelog.html":{},"coverage.html":{}}}],["9.0.0",{"_index":5401,"title":{},"body":{"dependencies.html":{}}}],["9/10",{"_index":5320,"title":{},"body":{"coverage.html":{}}}],["9/11",{"_index":5322,"title":{},"body":{"coverage.html":{}}}],["9/23",{"_index":5341,"title":{},"body":{"coverage.html":{}}}],["9/49",{"_index":5275,"title":{},"body":{"coverage.html":{}}}],["90",{"_index":5319,"title":{},"body":{"coverage.html":{}}}],["901885e",{"_index":4882,"title":{},"body":{"changelog.html":{}}}],["92c2dc4",{"_index":4640,"title":{},"body":{"changelog.html":{}}}],["95b1122",{"_index":4594,"title":{},"body":{"changelog.html":{}}}],["96a58b1",{"_index":5076,"title":{},"body":{"changelog.html":{}}}],["978250b",{"_index":4933,"title":{},"body":{"changelog.html":{}}}],["9855d9c",{"_index":4902,"title":{},"body":{"changelog.html":{}}}],["996cad7",{"_index":4887,"title":{},"body":{"changelog.html":{}}}],["9])[a",{"_index":4478,"title":{},"body":{"directives/ValidatePostalcodeDirective.html":{},"directives/ValidateStreetDirective.html":{}}}],["9][a",{"_index":4475,"title":{},"body":{"directives/ValidatePostalcodeDirective.html":{}}}],["9a38474",{"_index":4856,"title":{},"body":{"changelog.html":{}}}],["9dc5375",{"_index":4868,"title":{},"body":{"changelog.html":{}}}],["9e5d3aa",{"_index":4688,"title":{},"body":{"changelog.html":{}}}],["9f5a04e",{"_index":5132,"title":{},"body":{"changelog.html":{}}}],["_",{"_index":187,"title":{},"body":{"classes/AbstractFormControl.html":{},"interfaces/AddrLabelList.html":{},"components/ButtonGroupComponent.html":{},"interfaces/CountryList.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"components/DropdownComponent.html":{},"components/FullNameComponent.html":{},"interfaces/FullNameErrorMsg.html":{},"components/GeocoderInputComponent.html":{},"interfaces/ISpaEnvResponse.html":{},"interfaces/Maxlengths.html":{},"components/PostalCodeComponent.html":{},"interfaces/ReadOnlyFields.html":{}}}],["_applicationheadermap",{"_index":3722,"title":{},"body":{"interfaces/ISpaEnvResponse.html":{}}}],["_bypassguards",{"_index":1227,"title":{},"body":{"injectables/CheckCompleteBaseService.html":{},"interfaces/PageListInterface.html":{}}}],["_continue",{"_index":3795,"title":{},"body":{"guards/LoadPageGuardService.html":{},"guards/RouteGuardService.html":{}}}],["_continue(pageurl",{"_index":3797,"title":{},"body":{"guards/LoadPageGuardService.html":{},"guards/RouteGuardService.html":{}}}],["_defaulterrmsg",{"_index":117,"title":{},"body":{"classes/AbstractFormControl.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"components/EmailComponent.html":{},"interfaces/IRadioItems.html":{},"components/NameComponent.html":{},"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{},"components/RadioComponent.html":{},"components/SinComponent.html":{}}}],["_defaulterrmsg.duplicate",{"_index":4411,"title":{},"body":{"components/SinComponent.html":{}}}],["_defaulterrmsg.invalid",{"_index":3850,"title":{},"body":{"components/NameComponent.html":{},"components/SinComponent.html":{}}}],["_defaulterrmsg.invalidchar",{"_index":1472,"title":{},"body":{"components/CityComponent.html":{},"components/NameComponent.html":{},"components/ProvinceComponent.html":{}}}],["_defaulterrmsg.invalidemail",{"_index":2720,"title":{},"body":{"components/EmailComponent.html":{}}}],["_defaulterrmsg.required",{"_index":1356,"title":{},"body":{"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"components/EmailComponent.html":{},"components/NameComponent.html":{},"components/ProvinceComponent.html":{},"components/RadioComponent.html":{},"components/SinComponent.html":{}}}],["_find",{"_index":3903,"title":{},"body":{"interfaces/PageList.html":{},"injectables/PageStateService.html":{}}}],["_find(path",{"_index":3929,"title":{},"body":{"injectables/PageStateService.html":{}}}],["_headers",{"_index":246,"title":{},"body":{"classes/AbstractHttpService.html":{},"interfaces/CommonLogMessage.html":{},"interfaces/GeoAddressResult.html":{},"injectables/GeocoderService.html":{},"interfaces/ISpaEnvResponse.html":{},"additional-documentation/getting-started.html":{}}}],["_label",{"_index":202,"title":{},"body":{"classes/AbstractFormControl.html":{}}}],["_log(message",{"_index":1618,"title":{},"body":{"interfaces/CommonLogMessage.html":{}}}],["_logerror(errormessage",{"_index":1621,"title":{},"body":{"interfaces/CommonLogMessage.html":{}}}],["_markallastouched",{"_index":402,"title":{},"body":{"classes/AbstractReactForm.html":{}}}],["_markallastouched(fg",{"_index":404,"title":{},"body":{"classes/AbstractReactForm.html":{}}}],["_name",{"_index":4107,"title":{},"body":{"classes/Person.html":{}}}],["_name.concat",{"_index":4108,"title":{},"body":{"classes/Person.html":{}}}],["_not_",{"_index":612,"title":{},"body":{"classes/AbstractTestPage.html":{}}}],["_onchange",{"_index":118,"title":{},"body":{"classes/AbstractFormControl.html":{},"interfaces/AddrLabelList.html":{},"components/ButtonGroupComponent.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"interfaces/CountryList.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"components/DropdownComponent.html":{},"components/EmailComponent.html":{},"components/FullNameComponent.html":{},"interfaces/FullNameErrorMsg.html":{},"components/GeocoderInputComponent.html":{},"interfaces/ISpaEnvResponse.html":{},"interfaces/Maxlengths.html":{},"components/NameComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"components/RadioComponent.html":{},"interfaces/ReadOnlyFields.html":{},"components/SinComponent.html":{},"changelog.html":{}}}],["_only_",{"_index":4522,"title":{},"body":{"components/WizardProgressBarComponent.html":{}}}],["_ontouched",{"_index":119,"title":{},"body":{"classes/AbstractFormControl.html":{},"interfaces/AddrLabelList.html":{},"components/ButtonGroupComponent.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"interfaces/CountryList.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"components/DropdownComponent.html":{},"components/EmailComponent.html":{},"components/FullNameComponent.html":{},"interfaces/FullNameErrorMsg.html":{},"components/GeocoderInputComponent.html":{},"interfaces/ISpaEnvResponse.html":{},"interfaces/Maxlengths.html":{},"components/NameComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"components/RadioComponent.html":{},"interfaces/ReadOnlyFields.html":{},"components/SinComponent.html":{}}}],["_sendlog(message",{"_index":1642,"title":{},"body":{"interfaces/CommonLogMessage.html":{}}}],["_starturl",{"_index":1228,"title":{},"body":{"injectables/CheckCompleteBaseService.html":{},"injectables/DefaultPageGuardService.html":{},"interfaces/PageListInterface.html":{}}}],["_subscriptions",{"_index":1736,"title":{},"body":{"classes/Container.html":{},"interfaces/WizardProgressItem.html":{}}}],["_value",{"_index":3616,"title":{},"body":{"interfaces/IRadioItems.html":{},"components/RadioComponent.html":{}}}],["a11y",{"_index":4741,"title":{},"body":{"changelog.html":{}}}],["a1a",{"_index":4150,"title":{},"body":{"components/PostalCodeComponent.html":{}}}],["a1b8211",{"_index":4728,"title":{},"body":{"changelog.html":{}}}],["a1bd381",{"_index":4753,"title":{},"body":{"changelog.html":{}}}],["a27faa9",{"_index":4986,"title":{},"body":{"changelog.html":{}}}],["a33bb9d",{"_index":4687,"title":{},"body":{"changelog.html":{}}}],["a512eb0",{"_index":4996,"title":{},"body":{"changelog.html":{}}}],["a702d6d",{"_index":5061,"title":{},"body":{"changelog.html":{}}}],["a73785f",{"_index":4717,"title":{},"body":{"changelog.html":{}}}],["a79007f",{"_index":4618,"title":{},"body":{"changelog.html":{}}}],["a7efeee",{"_index":4756,"title":{},"body":{"changelog.html":{}}}],["a9aaf59",{"_index":5002,"title":{},"body":{"changelog.html":{}}}],["a9cafca",{"_index":5165,"title":{},"body":{"changelog.html":{}}}],["aa",{"_index":4984,"title":{},"body":{"changelog.html":{}}}],["aa2b7f9",{"_index":4831,"title":{},"body":{"changelog.html":{}}}],["aad93b5",{"_index":4954,"title":{},"body":{"changelog.html":{}}}],["ab",{"_index":1436,"title":{},"body":{"components/CityComponent.html":{},"interfaces/CountryList.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"interfaces/FileUploaderMsg.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{}}}],["abad941",{"_index":4597,"title":{},"body":{"changelog.html":{}}}],["ability",{"_index":4849,"title":{},"body":{"changelog.html":{}}}],["abiltiy",{"_index":4917,"title":{},"body":{"changelog.html":{}}}],["abilty",{"_index":4833,"title":{},"body":{"changelog.html":{}}}],["abort",{"_index":2904,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["above",{"_index":3860,"title":{},"body":{"components/PageFrameworkComponent.html":{},"additional-documentation/getting-started.html":{},"additional-documentation/local-development/schematics.html":{},"additional-documentation/local-development/components.html":{}}}],["absolute",{"_index":5238,"title":{},"body":{"changelog.html":{}}}],["absractformcontrol",{"_index":4625,"title":{},"body":{"changelog.html":{}}}],["abstract",{"_index":14,"title":{},"body":{"classes/AbstractBaseForm.html":{},"classes/AbstractForm.html":{},"classes/AbstractFormControl.html":{},"classes/AbstractHttpService.html":{},"injectables/AbstractPageGuardService.html":{},"injectables/AbstractPgCheckService.html":{},"classes/AbstractReactForm.html":{},"classes/AbstractTestPage.html":{},"injectables/CheckCompleteBaseService.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"interfaces/CommonLogMessage.html":{},"injectables/DefaultPageGuardService.html":{},"components/EmailComponent.html":{},"interfaces/GeoAddressResult.html":{},"injectables/GeocoderService.html":{},"guards/LoadPageGuardService.html":{},"components/NameComponent.html":{},"interfaces/PageListInterface.html":{},"components/ProvinceComponent.html":{},"components/RadioComponent.html":{},"guards/RouteGuardService.html":{},"components/SinComponent.html":{},"changelog.html":{},"additional-documentation/getting-started.html":{}}}],["abstractapi",{"_index":4779,"title":{},"body":{"changelog.html":{}}}],["abstractbaseform",{"_index":1,"title":{"classes/AbstractBaseForm.html":{}},"body":{"classes/AbstractBaseForm.html":{},"classes/AbstractForm.html":{},"classes/AbstractReactForm.html":{},"coverage.html":{}}}],["abstractbaseform:10",{"_index":96,"title":{},"body":{"classes/AbstractForm.html":{},"classes/AbstractReactForm.html":{}}}],["abstractbaseform:12",{"_index":103,"title":{},"body":{"classes/AbstractForm.html":{},"classes/AbstractReactForm.html":{}}}],["abstractbaseform:14",{"_index":102,"title":{},"body":{"classes/AbstractForm.html":{},"classes/AbstractReactForm.html":{}}}],["abstractbaseform:24",{"_index":104,"title":{},"body":{"classes/AbstractForm.html":{},"classes/AbstractReactForm.html":{}}}],["abstractbaseform:8",{"_index":95,"title":{},"body":{"classes/AbstractForm.html":{},"classes/AbstractReactForm.html":{}}}],["abstractcontrol",{"_index":2672,"title":{},"body":{"directives/DuplicateCheckDirective.html":{},"directives/ValidateBcPostalDirective.html":{},"directives/ValidateCityDirective.html":{},"directives/ValidateNameDirective.html":{},"directives/ValidatePostalcodeDirective.html":{},"directives/ValidateRegionDirective.html":{},"directives/ValidateStreetDirective.html":{}}}],["abstractform",{"_index":86,"title":{"classes/AbstractForm.html":{}},"body":{"classes/AbstractForm.html":{},"coverage.html":{}}}],["abstractformcontrol",{"_index":112,"title":{"classes/AbstractFormControl.html":{}},"body":{"classes/AbstractFormControl.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"components/EmailComponent.html":{},"interfaces/IRadioItems.html":{},"components/NameComponent.html":{},"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{},"components/RadioComponent.html":{},"components/SinComponent.html":{},"changelog.html":{},"coverage.html":{}}}],["abstractformcontrol:11",{"_index":1342,"title":{},"body":{"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"components/EmailComponent.html":{},"components/NameComponent.html":{},"components/ProvinceComponent.html":{},"components/RadioComponent.html":{},"components/SinComponent.html":{}}}],["abstractformcontrol:14",{"_index":1320,"title":{},"body":{"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"components/EmailComponent.html":{},"components/NameComponent.html":{},"components/ProvinceComponent.html":{},"components/RadioComponent.html":{},"components/SinComponent.html":{}}}],["abstractformcontrol:16",{"_index":1318,"title":{},"body":{"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"components/EmailComponent.html":{},"components/NameComponent.html":{},"components/ProvinceComponent.html":{},"components/RadioComponent.html":{},"components/SinComponent.html":{}}}],["abstractformcontrol:19",{"_index":1319,"title":{},"body":{"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"components/EmailComponent.html":{},"components/NameComponent.html":{},"components/ProvinceComponent.html":{},"components/RadioComponent.html":{},"components/SinComponent.html":{}}}],["abstractformcontrol:23",{"_index":1343,"title":{},"body":{"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"components/EmailComponent.html":{},"components/NameComponent.html":{},"components/ProvinceComponent.html":{},"components/RadioComponent.html":{},"components/SinComponent.html":{}}}],["abstractformcontrol:24",{"_index":1344,"title":{},"body":{"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"components/EmailComponent.html":{},"components/NameComponent.html":{},"components/ProvinceComponent.html":{},"components/RadioComponent.html":{},"components/SinComponent.html":{}}}],["abstractformcontrol:27",{"_index":1327,"title":{},"body":{"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"components/EmailComponent.html":{},"components/NameComponent.html":{},"components/ProvinceComponent.html":{},"components/RadioComponent.html":{},"components/SinComponent.html":{}}}],["abstractformcontrol:32",{"_index":1334,"title":{},"body":{"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"components/EmailComponent.html":{},"components/NameComponent.html":{},"components/ProvinceComponent.html":{},"components/RadioComponent.html":{},"components/SinComponent.html":{}}}],["abstractformcontrol:35",{"_index":1328,"title":{},"body":{"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"components/EmailComponent.html":{},"components/NameComponent.html":{},"components/ProvinceComponent.html":{},"components/RadioComponent.html":{},"components/SinComponent.html":{}}}],["abstractformcontrol:40",{"_index":1329,"title":{},"body":{"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"components/EmailComponent.html":{},"components/NameComponent.html":{},"components/ProvinceComponent.html":{},"components/RadioComponent.html":{},"components/SinComponent.html":{}}}],["abstractformcontrol:45",{"_index":1331,"title":{},"body":{"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"components/EmailComponent.html":{},"components/NameComponent.html":{},"components/ProvinceComponent.html":{},"components/RadioComponent.html":{},"components/SinComponent.html":{}}}],["abstractformcontrol:49",{"_index":1332,"title":{},"body":{"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"components/EmailComponent.html":{},"components/NameComponent.html":{},"components/ProvinceComponent.html":{},"components/RadioComponent.html":{},"components/SinComponent.html":{}}}],["abstractformcontrol:68",{"_index":1330,"title":{},"body":{"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"components/EmailComponent.html":{},"components/NameComponent.html":{},"components/ProvinceComponent.html":{},"components/RadioComponent.html":{},"components/SinComponent.html":{}}}],["abstractformcontrol:88",{"_index":1333,"title":{},"body":{"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"components/EmailComponent.html":{},"components/NameComponent.html":{},"components/ProvinceComponent.html":{},"components/RadioComponent.html":{},"components/SinComponent.html":{}}}],["abstractguardservice",{"_index":366,"title":{},"body":{"injectables/AbstractPageGuardService.html":{}}}],["abstracthttpservice",{"_index":240,"title":{"classes/AbstractHttpService.html":{}},"body":{"classes/AbstractHttpService.html":{},"interfaces/CommonLogMessage.html":{},"interfaces/GeoAddressResult.html":{},"injectables/GeocoderService.html":{},"interfaces/ISpaEnvResponse.html":{},"changelog.html":{},"coverage.html":{},"additional-documentation/getting-started.html":{}}}],["abstracthttpservice:13",{"_index":3545,"title":{},"body":{"injectables/GeocoderService.html":{}}}],["abstracthttpservice:18",{"_index":3544,"title":{},"body":{"injectables/GeocoderService.html":{}}}],["abstracthttpservice:24",{"_index":3537,"title":{},"body":{"injectables/GeocoderService.html":{}}}],["abstracthttpservice:32",{"_index":3539,"title":{},"body":{"injectables/GeocoderService.html":{}}}],["abstracthttpservice:40",{"_index":3540,"title":{},"body":{"injectables/GeocoderService.html":{}}}],["abstracthttpservice:61",{"_index":3538,"title":{},"body":{"injectables/GeocoderService.html":{}}}],["abstracthttpservice:64",{"_index":3536,"title":{},"body":{"injectables/GeocoderService.html":{}}}],["abstracthttpservice:75",{"_index":3541,"title":{},"body":{"injectables/GeocoderService.html":{}}}],["abstractpageguardservice",{"_index":357,"title":{"injectables/AbstractPageGuardService.html":{}},"body":{"injectables/AbstractPageGuardService.html":{},"injectables/DefaultPageGuardService.html":{},"guards/LoadPageGuardService.html":{},"coverage.html":{}}}],["abstractpgcheckservice",{"_index":384,"title":{"injectables/AbstractPgCheckService.html":{}},"body":{"injectables/AbstractPgCheckService.html":{},"injectables/CheckCompleteBaseService.html":{},"interfaces/PageListInterface.html":{},"guards/RouteGuardService.html":{},"coverage.html":{}}}],["abstractpgservice",{"_index":4242,"title":{},"body":{"guards/RouteGuardService.html":{}}}],["abstractreactform",{"_index":399,"title":{"classes/AbstractReactForm.html":{}},"body":{"classes/AbstractReactForm.html":{},"coverage.html":{}}}],["abstracttestpage",{"_index":430,"title":{"classes/AbstractTestPage.html":{}},"body":{"classes/AbstractTestPage.html":{},"changelog.html":{},"coverage.html":{}}}],["abw",{"_index":1883,"title":{},"body":{"interfaces/CountryList.html":{}}}],["ac7406b",{"_index":5093,"title":{},"body":{"changelog.html":{}}}],["ac9d61c",{"_index":4950,"title":{},"body":{"changelog.html":{}}}],["acbbdc1",{"_index":5090,"title":{},"body":{"changelog.html":{}}}],["acc",{"_index":3165,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["accept",{"_index":2870,"title":{},"body":{"interfaces/FileUploaderMsg.html":{},"interfaces/ISpaEnvResponse.html":{}}}],["accepting",{"_index":4602,"title":{},"body":{"changelog.html":{}}}],["access",{"_index":91,"title":{},"body":{"classes/AbstractForm.html":{},"classes/AbstractReactForm.html":{},"classes/Address.html":{},"interfaces/FileUploaderMsg.html":{},"additional-documentation/getting-started.html":{}}}],["accessed",{"_index":931,"title":{},"body":{"interfaces/AddrLabelList.html":{},"interfaces/Maxlengths.html":{},"interfaces/ReadOnlyFields.html":{}}}],["accessibility",{"_index":4569,"title":{},"body":{"components/XiconButtonComponent.html":{},"changelog.html":{}}}],["accessible",{"_index":2477,"title":{},"body":{"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"components/HeaderComponent.html":{}}}],["accessors",{"_index":253,"title":{},"body":{"classes/AbstractHttpService.html":{},"classes/Address.html":{},"injectables/CheckCompleteBaseService.html":{},"components/CityComponent.html":{},"components/ConfirmTemplateComponent.html":{},"components/EmailComponent.html":{},"components/NameComponent.html":{},"classes/Person.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"components/RadioComponent.html":{},"components/SinComponent.html":{}}}],["accidentally",{"_index":4980,"title":{},"body":{"changelog.html":{}}}],["accordion",{"_index":660,"title":{},"body":{"components/AccordionCommonComponent.html":{}}}],["accordion'},{'name",{"_index":681,"title":{},"body":{"components/AccordionCommonComponent.html":{},"components/ButtonComponent.html":{},"components/ButtonGroupComponent.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"components/ConfirmTemplateComponent.html":{},"components/CoreBreadcrumbComponent.html":{},"components/DatepickerComponent.html":{},"components/DropdownComponent.html":{},"components/EmailComponent.html":{},"components/ErrorContainerComponent.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/FullNameComponent.html":{},"components/GeocoderInputComponent.html":{},"components/HeaderComponent.html":{},"components/NameComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"components/RadioComponent.html":{},"components/SampleModalComponent.html":{},"components/SinComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{},"components/XiconButtonComponent.html":{}}}],["accordion.component.html",{"_index":664,"title":{},"body":{"components/AccordionCommonComponent.html":{}}}],["accordion.component.scss",{"_index":662,"title":{},"body":{"components/AccordionCommonComponent.html":{}}}],["accordioncommoncomponent",{"_index":652,"title":{"components/AccordionCommonComponent.html":{}},"body":{"components/AccordionCommonComponent.html":{},"components/ButtonComponent.html":{},"components/ButtonGroupComponent.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"components/ConfirmTemplateComponent.html":{},"components/CoreBreadcrumbComponent.html":{},"components/DatepickerComponent.html":{},"components/DropdownComponent.html":{},"components/EmailComponent.html":{},"components/ErrorContainerComponent.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/FullNameComponent.html":{},"components/GeocoderInputComponent.html":{},"components/HeaderComponent.html":{},"components/NameComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"components/RadioComponent.html":{},"components/SampleModalComponent.html":{},"modules/SharedCoreModule.html":{},"components/SinComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{},"components/XiconButtonComponent.html":{},"coverage.html":{},"overview.html":{}}}],["accordioncomponent",{"_index":657,"title":{},"body":{"components/AccordionCommonComponent.html":{}}}],["accordionmodule",{"_index":4316,"title":{},"body":{"modules/SharedCoreModule.html":{}}}],["accordionmodule.forroot",{"_index":4356,"title":{},"body":{"modules/SharedCoreModule.html":{}}}],["accusamus",{"_index":1437,"title":{},"body":{"components/CityComponent.html":{},"interfaces/CountryList.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"interfaces/FileUploaderMsg.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{}}}],["aceb028",{"_index":4877,"title":{},"body":{"changelog.html":{}}}],["acl",{"_index":3723,"title":{},"body":{"interfaces/ISpaEnvResponse.html":{}}}],["act",{"_index":3680,"title":{},"body":{"interfaces/ISpaEnvResponse.html":{}}}],["action",{"_index":45,"title":{},"body":{"classes/AbstractBaseForm.html":{},"classes/AbstractForm.html":{},"classes/AbstractReactForm.html":{},"components/AccordionCommonComponent.html":{},"components/ButtonComponent.html":{},"components/ButtonGroupComponent.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"components/ConfirmTemplateComponent.html":{},"components/CoreBreadcrumbComponent.html":{},"components/DatepickerComponent.html":{},"components/DropdownComponent.html":{},"components/EmailComponent.html":{},"components/ErrorContainerComponent.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/FullNameComponent.html":{},"components/GeocoderInputComponent.html":{},"components/HeaderComponent.html":{},"components/NameComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"components/RadioComponent.html":{},"components/SampleModalComponent.html":{},"modules/SharedCoreModule.html":{},"components/SinComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{},"components/XiconButtonComponent.html":{},"coverage.html":{}}}],["activatedroutesnapshot",{"_index":3801,"title":{},"body":{"guards/LoadPageGuardService.html":{},"guards/RouteGuardService.html":{}}}],["active",{"_index":1807,"title":{},"body":{"injectables/ContainerService.html":{}}}],["activeindex",{"_index":4494,"title":{},"body":{"components/WizardProgressBarComponent.html":{}}}],["actual",{"_index":2528,"title":{},"body":{"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"additional-documentation/getting-started.html":{}}}],["actual_component",{"_index":776,"title":{},"body":{"components/AccordionCommonComponent.html":{},"components/ButtonComponent.html":{},"components/ButtonGroupComponent.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"components/ConfirmTemplateComponent.html":{},"components/CoreBreadcrumbComponent.html":{},"components/DatepickerComponent.html":{},"components/DropdownComponent.html":{},"components/EmailComponent.html":{},"components/ErrorContainerComponent.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/FullNameComponent.html":{},"components/GeocoderInputComponent.html":{},"components/HeaderComponent.html":{},"components/NameComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"components/RadioComponent.html":{},"components/SampleModalComponent.html":{},"components/SinComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{},"components/XiconButtonComponent.html":{}}}],["adam",{"_index":5442,"title":{},"body":{"index.html":{}}}],["add",{"_index":338,"title":{},"body":{"classes/AbstractHttpService.html":{},"interfaces/AddrLabelList.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"components/DropdownComponent.html":{},"interfaces/FileUploaderMsg.html":{},"components/FormSubmitBarComponent.html":{},"components/HeaderComponent.html":{},"interfaces/ISpaEnvResponse.html":{},"guards/LoadPageGuardService.html":{},"interfaces/Maxlengths.html":{},"components/PageSectionComponent.html":{},"interfaces/ReadOnlyFields.html":{},"guards/RouteGuardService.html":{},"components/SinComponent.html":{},"changelog.html":{},"additional-documentation/local-development/schematics.html":{}}}],["added",{"_index":218,"title":{},"body":{"classes/AbstractFormControl.html":{},"interfaces/CommonAttachmentJson.html":{},"classes/CommonImage.html":{},"classes/CommonImageProcessingError.html":{},"interfaces/CommonImageScaleFactors.html":{},"classes/CommonImageScaleFactorsImpl.html":{},"interfaces/FileUploaderMsg.html":{},"directives/ValidateBcPostalDirective.html":{},"changelog.html":{}}}],["adding",{"_index":1843,"title":{},"body":{"components/CoreBreadcrumbComponent.html":{},"components/FormSubmitBarComponent.html":{},"changelog.html":{},"additional-documentation/getting-started.html":{},"additional-documentation/local-development/schematics.html":{}}}],["addition",{"_index":3479,"title":{},"body":{"components/GeocoderInputComponent.html":{}}}],["additional",{"_index":4949,"title":{"additional-documentation/getting-started.html":{},"additional-documentation/local-development.html":{},"additional-documentation/local-development/schematics.html":{},"additional-documentation/local-development/components.html":{}},"body":{"changelog.html":{}}}],["additionaldocumentation",{"_index":5028,"title":{},"body":{"changelog.html":{}}}],["addline(line",{"_index":910,"title":{},"body":{"interfaces/AddrLabelList.html":{},"interfaces/Maxlengths.html":{},"interfaces/ReadOnlyFields.html":{}}}],["addpackagejsonscript",{"_index":5385,"title":{},"body":{"coverage.html":{}}}],["addpackagetopackagejson",{"_index":5377,"title":{},"body":{"coverage.html":{}}}],["addr",{"_index":843,"title":{},"body":{"interfaces/AddrLabelList.html":{},"components/GeocoderInputComponent.html":{},"interfaces/Maxlengths.html":{},"interfaces/ReadOnlyFields.html":{},"additional-documentation/getting-started.html":{}}}],["addr.city",{"_index":3507,"title":{},"body":{"components/GeocoderInputComponent.html":{}}}],["addr.country",{"_index":3508,"title":{},"body":{"components/GeocoderInputComponent.html":{}}}],["addr.province",{"_index":3510,"title":{},"body":{"components/GeocoderInputComponent.html":{}}}],["addr.street",{"_index":3511,"title":{},"body":{"components/GeocoderInputComponent.html":{}}}],["address",{"_index":797,"title":{"classes/Address.html":{}},"body":{"interfaces/AddrLabelList.html":{},"classes/Address.html":{},"interfaces/GeoAddressResult.html":{},"components/GeocoderInputComponent.html":{},"injectables/GeocoderService.html":{},"interfaces/Maxlengths.html":{},"interfaces/ReadOnlyFields.html":{},"changelog.html":{},"coverage.html":{},"additional-documentation/getting-started.html":{}}}],["address'},{'name",{"_index":683,"title":{},"body":{"components/AccordionCommonComponent.html":{},"components/ButtonComponent.html":{},"components/ButtonGroupComponent.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"components/ConfirmTemplateComponent.html":{},"components/CoreBreadcrumbComponent.html":{},"components/DatepickerComponent.html":{},"components/DropdownComponent.html":{},"components/EmailComponent.html":{},"components/ErrorContainerComponent.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/FullNameComponent.html":{},"components/GeocoderInputComponent.html":{},"components/HeaderComponent.html":{},"components/NameComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"components/RadioComponent.html":{},"components/SampleModalComponent.html":{},"components/SinComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{},"components/XiconButtonComponent.html":{}}}],["address();the",{"_index":5513,"title":{},"body":{"additional-documentation/getting-started.html":{}}}],["address(val",{"_index":828,"title":{},"body":{"interfaces/AddrLabelList.html":{},"interfaces/Maxlengths.html":{},"interfaces/ReadOnlyFields.html":{}}}],["address.addressline2",{"_index":841,"title":{},"body":{"interfaces/AddrLabelList.html":{},"interfaces/Maxlengths.html":{},"interfaces/ReadOnlyFields.html":{}}}],["address.component.html",{"_index":813,"title":{},"body":{"interfaces/AddrLabelList.html":{},"interfaces/Maxlengths.html":{},"interfaces/ReadOnlyFields.html":{}}}],["address.component.scss",{"_index":814,"title":{},"body":{"interfaces/AddrLabelList.html":{},"interfaces/Maxlengths.html":{},"interfaces/ReadOnlyFields.html":{}}}],["address.model.ts",{"_index":5480,"title":{},"body":{"todo.html":{}}}],["address1",{"_index":783,"title":{},"body":{"interfaces/AddrLabelList.html":{},"interfaces/Maxlengths.html":{},"interfaces/ReadOnlyFields.html":{},"changelog.html":{}}}],["address2",{"_index":784,"title":{},"body":{"interfaces/AddrLabelList.html":{},"interfaces/Maxlengths.html":{},"interfaces/ReadOnlyFields.html":{}}}],["address3",{"_index":785,"title":{},"body":{"interfaces/AddrLabelList.html":{},"interfaces/Maxlengths.html":{},"interfaces/ReadOnlyFields.html":{}}}],["address_url",{"_index":3382,"title":{},"body":{"interfaces/GeoAddressResult.html":{},"injectables/GeocoderService.html":{}}}],["addresschange",{"_index":831,"title":{},"body":{"interfaces/AddrLabelList.html":{},"components/GeocoderInputComponent.html":{},"interfaces/Maxlengths.html":{},"interfaces/ReadOnlyFields.html":{}}}],["addresscomponent",{"_index":682,"title":{},"body":{"components/AccordionCommonComponent.html":{},"interfaces/AddrLabelList.html":{},"components/ButtonComponent.html":{},"components/ButtonGroupComponent.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"components/ConfirmTemplateComponent.html":{},"components/CoreBreadcrumbComponent.html":{},"components/DatepickerComponent.html":{},"components/DropdownComponent.html":{},"components/EmailComponent.html":{},"components/ErrorContainerComponent.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/FullNameComponent.html":{},"components/GeocoderInputComponent.html":{},"components/HeaderComponent.html":{},"interfaces/Maxlengths.html":{},"components/NameComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"components/RadioComponent.html":{},"interfaces/ReadOnlyFields.html":{},"components/SampleModalComponent.html":{},"modules/SharedCoreModule.html":{},"components/SinComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{},"components/XiconButtonComponent.html":{},"changelog.html":{},"coverage.html":{},"overview.html":{}}}],["addresses",{"_index":969,"title":{},"body":{"interfaces/AddrLabelList.html":{},"components/GeocoderInputComponent.html":{},"interfaces/Maxlengths.html":{},"interfaces/ReadOnlyFields.html":{}}}],["addressline${line",{"_index":926,"title":{},"body":{"interfaces/AddrLabelList.html":{},"interfaces/Maxlengths.html":{},"interfaces/ReadOnlyFields.html":{}}}],["addressline1",{"_index":995,"title":{},"body":{"classes/Address.html":{},"changelog.html":{}}}],["addressline2",{"_index":875,"title":{},"body":{"interfaces/AddrLabelList.html":{},"classes/Address.html":{},"interfaces/Maxlengths.html":{},"interfaces/ReadOnlyFields.html":{}}}],["addressline3",{"_index":996,"title":{},"body":{"classes/Address.html":{}}}],["addressmodel",{"_index":4993,"title":{},"body":{"changelog.html":{}}}],["addresss",{"_index":4932,"title":{},"body":{"changelog.html":{}}}],["addrlabellist",{"_index":778,"title":{"interfaces/AddrLabelList.html":{}},"body":{"interfaces/AddrLabelList.html":{},"interfaces/Maxlengths.html":{},"interfaces/ReadOnlyFields.html":{},"coverage.html":{}}}],["addrlabels",{"_index":849,"title":{},"body":{"interfaces/AddrLabelList.html":{},"interfaces/Maxlengths.html":{},"interfaces/ReadOnlyFields.html":{}}}],["addrlookup",{"_index":925,"title":{},"body":{"interfaces/AddrLabelList.html":{},"interfaces/Maxlengths.html":{},"interfaces/ReadOnlyFields.html":{}}}],["adds",{"_index":832,"title":{},"body":{"interfaces/AddrLabelList.html":{},"interfaces/Maxlengths.html":{},"components/PageSectionComponent.html":{},"interfaces/ReadOnlyFields.html":{},"components/WizardProgressBarComponent.html":{}}}],["addtag",{"_index":2644,"title":{},"body":{"components/DropdownComponent.html":{}}}],["addtagtext",{"_index":2645,"title":{},"body":{"components/DropdownComponent.html":{}}}],["adipisicing",{"_index":1404,"title":{},"body":{"components/CityComponent.html":{},"interfaces/CountryList.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"interfaces/FileUploaderMsg.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{}}}],["administer",{"_index":3684,"title":{},"body":{"interfaces/ISpaEnvResponse.html":{}}}],["advantages",{"_index":1084,"title":{},"body":{"components/ButtonComponent.html":{}}}],["ae493e7",{"_index":5024,"title":{},"body":{"changelog.html":{}}}],["aee4761",{"_index":5227,"title":{},"body":{"changelog.html":{}}}],["af516d0",{"_index":5040,"title":{},"body":{"changelog.html":{}}}],["af91989",{"_index":4951,"title":{},"body":{"changelog.html":{}}}],["afg",{"_index":1857,"title":{},"body":{"interfaces/CountryList.html":{}}}],["afghanistan",{"_index":1858,"title":{},"body":{"interfaces/CountryList.html":{}}}],["africa",{"_index":2311,"title":{},"body":{"interfaces/CountryList.html":{}}}],["african",{"_index":1954,"title":{},"body":{"interfaces/CountryList.html":{}}}],["aftercontentinit",{"_index":2741,"title":{},"body":{"interfaces/FileUploaderMsg.html":{},"interfaces/ISpaEnvResponse.html":{}}}],["afterviewinit",{"_index":1715,"title":{},"body":{"classes/Container.html":{},"interfaces/FileUploaderMsg.html":{},"interfaces/WizardProgressItem.html":{}}}],["again",{"_index":2929,"title":{},"body":{"interfaces/FileUploaderMsg.html":{},"additional-documentation/local-development/schematics.html":{}}}],["age",{"_index":4077,"title":{},"body":{"classes/Person.html":{}}}],["ago",{"_index":1870,"title":{},"body":{"interfaces/CountryList.html":{}}}],["agreecheck",{"_index":3730,"title":{},"body":{"interfaces/ISpaEnvResponse.html":{}}}],["agreeconsentmodal",{"_index":449,"title":{},"body":{"classes/AbstractTestPage.html":{}}}],["agreed",{"_index":5454,"title":{},"body":{"license.html":{}}}],["agreelabel",{"_index":3703,"title":{},"body":{"interfaces/ISpaEnvResponse.html":{}}}],["agrees",{"_index":489,"title":{},"body":{"classes/AbstractTestPage.html":{}}}],["aia",{"_index":1872,"title":{},"body":{"interfaces/CountryList.html":{}}}],["aka",{"_index":3646,"title":{},"body":{"interfaces/ISpaEnvResponse.html":{}}}],["ala",{"_index":1859,"title":{},"body":{"interfaces/CountryList.html":{}}}],["alb",{"_index":1862,"title":{},"body":{"interfaces/CountryList.html":{}}}],["albania",{"_index":1863,"title":{},"body":{"interfaces/CountryList.html":{}}}],["alberta",{"_index":4193,"title":{},"body":{"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{}}}],["algeria",{"_index":1865,"title":{},"body":{"interfaces/CountryList.html":{}}}],["algorithm",{"_index":2932,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["alias",{"_index":1462,"title":{},"body":{"components/CityComponent.html":{},"interfaces/CountryList.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"interfaces/FileUploaderMsg.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{}}}],["allow",{"_index":183,"title":{},"body":{"classes/AbstractFormControl.html":{},"interfaces/CommonLogMessage.html":{},"injectables/DefaultPageGuardService.html":{},"guards/LoadPageGuardService.html":{},"guards/RouteGuardService.html":{},"changelog.html":{}}}],["allowed",{"_index":3140,"title":{},"body":{"interfaces/FileUploaderMsg.html":{},"changelog.html":{}}}],["allowextralines",{"_index":842,"title":{},"body":{"interfaces/AddrLabelList.html":{},"interfaces/Maxlengths.html":{},"interfaces/ReadOnlyFields.html":{},"changelog.html":{}}}],["allowing",{"_index":1255,"title":{},"body":{"injectables/CheckCompleteBaseService.html":{},"interfaces/PageListInterface.html":{}}}],["allowinternational",{"_index":4764,"title":{},"body":{"changelog.html":{}}}],["allows",{"_index":4645,"title":{},"body":{"changelog.html":{}}}],["allvalidators",{"_index":222,"title":{},"body":{"classes/AbstractFormControl.html":{}}}],["allvalidators.push",{"_index":225,"title":{},"body":{"classes/AbstractFormControl.html":{}}}],["alone",{"_index":3702,"title":{},"body":{"interfaces/ISpaEnvResponse.html":{}}}],["along",{"_index":262,"title":{},"body":{"classes/AbstractHttpService.html":{},"injectables/GeocoderService.html":{}}}],["already",{"_index":1513,"title":{},"body":{"interfaces/CommonAttachmentJson.html":{},"classes/CommonImage.html":{},"classes/CommonImageProcessingError.html":{},"interfaces/CommonImageScaleFactors.html":{},"classes/CommonImageScaleFactorsImpl.html":{},"interfaces/CommonLogMessage.html":{},"interfaces/FileUploaderMsg.html":{},"components/SinComponent.html":{},"components/WizardProgressBarComponent.html":{},"additional-documentation/getting-started.html":{}}}],["alreadyexists",{"_index":1487,"title":{},"body":{"interfaces/CommonAttachmentJson.html":{},"classes/CommonImage.html":{},"classes/CommonImageProcessingError.html":{},"interfaces/CommonImageScaleFactors.html":{},"classes/CommonImageScaleFactorsImpl.html":{},"miscellaneous/enumerations.html":{}}}],["always",{"_index":324,"title":{},"body":{"classes/AbstractHttpService.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"interfaces/FileUploaderMsg.html":{},"interfaces/GeoAddressResult.html":{},"injectables/GeocoderService.html":{},"changelog.html":{}}}],["american",{"_index":1867,"title":{},"body":{"interfaces/CountryList.html":{}}}],["amet",{"_index":1402,"title":{},"body":{"components/CityComponent.html":{},"interfaces/CountryList.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"interfaces/FileUploaderMsg.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{}}}],["amultiples",{"_index":3109,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["amultiples[nmultiple",{"_index":3121,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["and/or",{"_index":4149,"title":{},"body":{"components/PostalCodeComponent.html":{}}}],["andorra",{"_index":1869,"title":{},"body":{"interfaces/CountryList.html":{}}}],["angola",{"_index":1871,"title":{},"body":{"interfaces/CountryList.html":{}}}],["anguilla",{"_index":1873,"title":{},"body":{"interfaces/CountryList.html":{}}}],["angular",{"_index":100,"title":{},"body":{"classes/AbstractForm.html":{},"classes/AbstractHttpService.html":{},"classes/AbstractReactForm.html":{},"components/FormActionBarComponent.html":{},"components/WizardProgressBarComponent.html":{},"todo.html":{},"additional-documentation/getting-started.html":{},"additional-documentation/local-development/schematics.html":{},"additional-documentation/local-development/components.html":{}}}],["angular's",{"_index":1672,"title":{},"body":{"interfaces/CommonLogMessage.html":{},"components/WizardProgressBarComponent.html":{}}}],["angular.json",{"_index":5582,"title":{},"body":{"additional-documentation/local-development/schematics.html":{},"additional-documentation/local-development/components.html":{}}}],["angular/animations",{"_index":5394,"title":{},"body":{"dependencies.html":{}}}],["angular/common",{"_index":1220,"title":{},"body":{"modules/CaptchaModule.html":{},"modules/SharedCoreModule.html":{},"dependencies.html":{}}}],["angular/common/http",{"_index":315,"title":{},"body":{"classes/AbstractHttpService.html":{},"injectables/CaptchaDataService.html":{},"modules/CaptchaModule.html":{},"interfaces/CommonLogMessage.html":{},"interfaces/GeoAddressResult.html":{},"injectables/GeocoderService.html":{},"interfaces/ISpaEnvResponse.html":{},"injectables/ServerPayload.html":{}}}],["angular/compiler",{"_index":5396,"title":{},"body":{"dependencies.html":{}}}],["angular/core",{"_index":73,"title":{},"body":{"classes/AbstractBaseForm.html":{},"classes/AbstractForm.html":{},"classes/AbstractFormControl.html":{},"injectables/AbstractPageGuardService.html":{},"injectables/AbstractPgCheckService.html":{},"components/AccordionCommonComponent.html":{},"interfaces/AddrLabelList.html":{},"components/ButtonComponent.html":{},"components/ButtonGroupComponent.html":{},"injectables/CaptchaDataService.html":{},"modules/CaptchaModule.html":{},"injectables/CheckCompleteBaseService.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"interfaces/CommonLogMessage.html":{},"components/ConfirmTemplateComponent.html":{},"injectables/ContainerService.html":{},"components/CoreBreadcrumbComponent.html":{},"interfaces/CountryList.html":{},"interfaces/DateErrorMsg.html":{},"directives/DateFieldFormatDirective.html":{},"components/DatepickerComponent.html":{},"injectables/DefaultPageGuardService.html":{},"components/DropdownComponent.html":{},"directives/DuplicateCheckDirective.html":{},"components/EmailComponent.html":{},"components/ErrorContainerComponent.html":{},"interfaces/FileUploaderMsg.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/FullNameComponent.html":{},"interfaces/FullNameErrorMsg.html":{},"interfaces/GeoAddressResult.html":{},"components/GeocoderInputComponent.html":{},"injectables/GeocoderService.html":{},"components/HeaderComponent.html":{},"interfaces/IRadioItems.html":{},"interfaces/ISpaEnvResponse.html":{},"guards/LoadPageGuardService.html":{},"interfaces/Maxlengths.html":{},"components/NameComponent.html":{},"components/PageFrameworkComponent.html":{},"interfaces/PageList.html":{},"interfaces/PageListInterface.html":{},"components/PageSectionComponent.html":{},"injectables/PageStateService.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{},"components/RadioComponent.html":{},"interfaces/ReadOnlyFields.html":{},"guards/RouteGuardService.html":{},"interfaces/SampleImageInterface.html":{},"components/SampleModalComponent.html":{},"injectables/ServerPayload.html":{},"modules/SharedCoreModule.html":{},"components/SinComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"directives/ValidateBcPostalDirective.html":{},"directives/ValidateCityDirective.html":{},"directives/ValidateNameDirective.html":{},"directives/ValidatePostalcodeDirective.html":{},"directives/ValidateRegionDirective.html":{},"directives/ValidateStreetDirective.html":{},"components/WizardProgressBarComponent.html":{},"components/XiconButtonComponent.html":{},"dependencies.html":{}}}],["angular/forms",{"_index":75,"title":{},"body":{"classes/AbstractBaseForm.html":{},"classes/AbstractForm.html":{},"classes/AbstractFormControl.html":{},"classes/AbstractReactForm.html":{},"interfaces/AddrLabelList.html":{},"components/ButtonComponent.html":{},"components/ButtonGroupComponent.html":{},"modules/CaptchaModule.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"interfaces/CountryList.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"components/DropdownComponent.html":{},"directives/DuplicateCheckDirective.html":{},"components/EmailComponent.html":{},"interfaces/FileUploaderMsg.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/FullNameComponent.html":{},"interfaces/FullNameErrorMsg.html":{},"components/GeocoderInputComponent.html":{},"interfaces/IRadioItems.html":{},"interfaces/ISpaEnvResponse.html":{},"interfaces/Maxlengths.html":{},"components/NameComponent.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{},"components/RadioComponent.html":{},"interfaces/ReadOnlyFields.html":{},"modules/SharedCoreModule.html":{},"components/SinComponent.html":{},"directives/ValidateBcPostalDirective.html":{},"directives/ValidateCityDirective.html":{},"directives/ValidateNameDirective.html":{},"directives/ValidatePostalcodeDirective.html":{},"directives/ValidateRegionDirective.html":{},"directives/ValidateStreetDirective.html":{},"dependencies.html":{}}}],["angular/http",{"_index":1178,"title":{},"body":{"injectables/CaptchaDataService.html":{},"interfaces/ISpaEnvResponse.html":{},"injectables/ServerPayload.html":{},"dependencies.html":{}}}],["angular/platform",{"_index":1215,"title":{},"body":{"modules/CaptchaModule.html":{},"dependencies.html":{}}}],["angular/router",{"_index":76,"title":{},"body":{"classes/AbstractBaseForm.html":{},"classes/AbstractForm.html":{},"classes/AbstractReactForm.html":{},"injectables/CheckCompleteBaseService.html":{},"classes/Container.html":{},"interfaces/FileUploaderMsg.html":{},"components/HeaderComponent.html":{},"guards/LoadPageGuardService.html":{},"interfaces/PageList.html":{},"interfaces/PageListInterface.html":{},"injectables/PageStateService.html":{},"guards/RouteGuardService.html":{},"modules/SharedCoreModule.html":{},"components/WizardProgressBarComponent.html":{},"interfaces/WizardProgressItem.html":{},"dependencies.html":{}}}],["angular2",{"_index":321,"title":{},"body":{"classes/AbstractHttpService.html":{},"classes/Base.html":{},"interfaces/CommonAttachmentJson.html":{},"classes/CommonImage.html":{},"classes/CommonImageProcessingError.html":{},"interfaces/CommonImageScaleFactors.html":{},"classes/CommonImageScaleFactorsImpl.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"modules/SharedCoreModule.html":{},"dependencies.html":{}}}],["angularjs2",{"_index":2851,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["animi",{"_index":1449,"title":{},"body":{"components/CityComponent.html":{},"interfaces/CountryList.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"interfaces/FileUploaderMsg.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{}}}],["another",{"_index":56,"title":{},"body":{"classes/AbstractBaseForm.html":{},"classes/AbstractForm.html":{},"classes/AbstractReactForm.html":{},"components/GeocoderInputComponent.html":{},"components/SinComponent.html":{}}}],["answer",{"_index":1173,"title":{},"body":{"injectables/CaptchaDataService.html":{},"injectables/ServerPayload.html":{}}}],["answer.label",{"_index":1156,"title":{},"body":{"components/ButtonGroupComponent.html":{}}}],["antarctica",{"_index":1875,"title":{},"body":{"interfaces/CountryList.html":{}}}],["antigua",{"_index":1877,"title":{},"body":{"interfaces/CountryList.html":{}}}],["any)).then((pdfdoc",{"_index":3218,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["any).controls[input_name",{"_index":2838,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["anything",{"_index":1478,"title":{},"body":{"interfaces/CommonAttachmentJson.html":{},"classes/CommonImage.html":{},"classes/CommonImageProcessingError.html":{},"interfaces/CommonImageScaleFactors.html":{},"classes/CommonImageScaleFactorsImpl.html":{},"interfaces/CommonLogMessage.html":{}}}],["anywhere",{"_index":5533,"title":{},"body":{"additional-documentation/local-development/schematics.html":{}}}],["apache",{"_index":5447,"title":{},"body":{"license.html":{}}}],["aperiam",{"_index":1425,"title":{},"body":{"components/CityComponent.html":{},"interfaces/CountryList.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"interfaces/FileUploaderMsg.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{}}}],["api",{"_index":242,"title":{},"body":{"classes/AbstractHttpService.html":{},"interfaces/CommonAttachmentJson.html":{},"classes/CommonImage.html":{},"classes/CommonImageProcessingError.html":{},"interfaces/CommonImageScaleFactors.html":{},"classes/CommonImageScaleFactorsImpl.html":{},"interfaces/CommonLogMessage.html":{},"interfaces/FileUploaderMsg.html":{},"interfaces/GeoAddressResult.html":{},"components/GeocoderInputComponent.html":{},"injectables/GeocoderService.html":{},"interfaces/ISpaEnvResponse.html":{},"classes/Person.html":{},"changelog.html":{},"coverage.html":{},"additional-documentation/getting-started.html":{}}}],["apibaseurl",{"_index":1168,"title":{},"body":{"injectables/CaptchaDataService.html":{},"modules/CaptchaModule.html":{},"injectables/ServerPayload.html":{}}}],["apidobformat",{"_index":4059,"title":{},"body":{"classes/Person.html":{}}}],["apiservice",{"_index":5509,"title":{},"body":{"additional-documentation/getting-started.html":{}}}],["apistatuscodes",{"_index":1696,"title":{},"body":{"components/ConfirmTemplateComponent.html":{},"miscellaneous/enumerations.html":{}}}],["apistatuscodes.error",{"_index":1707,"title":{},"body":{"components/ConfirmTemplateComponent.html":{}}}],["apistatuscodes.success",{"_index":1697,"title":{},"body":{"components/ConfirmTemplateComponent.html":{}}}],["apistatuscodes.warning",{"_index":1708,"title":{},"body":{"components/ConfirmTemplateComponent.html":{}}}],["apostrophe",{"_index":3349,"title":{},"body":{"components/FullNameComponent.html":{},"interfaces/FullNameErrorMsg.html":{}}}],["apostrophes",{"_index":1391,"title":{},"body":{"components/CityComponent.html":{},"interfaces/CountryList.html":{},"components/NameComponent.html":{},"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{}}}],["app",{"_index":3627,"title":{},"body":{"interfaces/ISpaEnvResponse.html":{}}}],["appcomponentcss",{"_index":5356,"title":{},"body":{"coverage.html":{}}}],["appcomponenthtml",{"_index":5357,"title":{},"body":{"coverage.html":{}}}],["appconstants",{"_index":2796,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["appear",{"_index":5588,"title":{},"body":{"additional-documentation/local-development/components.html":{}}}],["appears",{"_index":483,"title":{},"body":{"classes/AbstractTestPage.html":{}}}],["appendselectortobody",{"_index":2502,"title":{},"body":{"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{}}}],["applicable",{"_index":965,"title":{},"body":{"interfaces/AddrLabelList.html":{},"interfaces/Maxlengths.html":{},"interfaces/ReadOnlyFields.html":{},"license.html":{}}}],["applicant",{"_index":1256,"title":{},"body":{"injectables/CheckCompleteBaseService.html":{},"interfaces/PageListInterface.html":{}}}],["applicants",{"_index":1259,"title":{},"body":{"injectables/CheckCompleteBaseService.html":{},"interfaces/PageListInterface.html":{}}}],["application",{"_index":305,"title":{},"body":{"classes/AbstractHttpService.html":{},"classes/AbstractTestPage.html":{},"components/ButtonComponent.html":{},"modules/CaptchaModule.html":{},"injectables/CheckCompleteBaseService.html":{},"interfaces/CommonAttachmentJson.html":{},"classes/CommonImage.html":{},"classes/CommonImageProcessingError.html":{},"interfaces/CommonImageScaleFactors.html":{},"classes/CommonImageScaleFactorsImpl.html":{},"interfaces/CommonLogMessage.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"interfaces/FileUploaderMsg.html":{},"injectables/GeocoderService.html":{},"components/HeaderComponent.html":{},"interfaces/ISpaEnvResponse.html":{},"guards/LoadPageGuardService.html":{},"interfaces/PageListInterface.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"guards/RouteGuardService.html":{},"changelog.html":{},"additional-documentation/getting-started.html":{},"additional-documentation/local-development/components.html":{}}}],["application's",{"_index":364,"title":{},"body":{"injectables/AbstractPageGuardService.html":{},"injectables/AbstractPgCheckService.html":{},"additional-documentation/local-development/components.html":{}}}],["application.information",{"_index":3670,"title":{},"body":{"interfaces/ISpaEnvResponse.html":{}}}],["applicationbase",{"_index":2769,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["applicationid",{"_index":1591,"title":{},"body":{"interfaces/CommonLogMessage.html":{}}}],["applications",{"_index":1050,"title":{},"body":{"classes/Address.html":{}}}],["appropriate",{"_index":922,"title":{},"body":{"interfaces/AddrLabelList.html":{},"interfaces/FileUploaderMsg.html":{},"interfaces/Maxlengths.html":{},"interfaces/ReadOnlyFields.html":{},"additional-documentation/local-development/schematics.html":{}}}],["approximation",{"_index":3108,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["apps",{"_index":4727,"title":{},"body":{"changelog.html":{}}}],["arab",{"_index":2336,"title":{},"body":{"interfaces/CountryList.html":{}}}],["arabia",{"_index":2286,"title":{},"body":{"interfaces/CountryList.html":{}}}],["arbitrary",{"_index":4633,"title":{},"body":{"changelog.html":{}}}],["architecto",{"_index":1411,"title":{},"body":{"components/CityComponent.html":{},"interfaces/CountryList.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"interfaces/FileUploaderMsg.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{}}}],["aren't",{"_index":1683,"title":{},"body":{"interfaces/CommonLogMessage.html":{}}}],["arg",{"_index":1879,"title":{},"body":{"interfaces/CountryList.html":{}}}],["argentina",{"_index":1880,"title":{},"body":{"interfaces/CountryList.html":{}}}],["args",{"_index":3192,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["arguably",{"_index":2937,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["arguments",{"_index":2555,"title":{},"body":{"directives/DateFieldFormatDirective.html":{},"components/PasswordComponent.html":{}}}],["aria",{"_index":4052,"title":{},"body":{"components/PasswordComponent.html":{},"changelog.html":{}}}],["arm",{"_index":1881,"title":{},"body":{"interfaces/CountryList.html":{}}}],["armenia",{"_index":1882,"title":{},"body":{"interfaces/CountryList.html":{}}}],["aroud",{"_index":3557,"title":{},"body":{"components/HeaderComponent.html":{}}}],["around",{"_index":3309,"title":{},"body":{"components/FullNameComponent.html":{},"interfaces/FullNameErrorMsg.html":{},"components/WizardProgressBarComponent.html":{}}}],["arr",{"_index":3873,"title":{},"body":{"interfaces/PageList.html":{},"injectables/PageStateService.html":{}}}],["arr.filter((itm",{"_index":3881,"title":{},"body":{"interfaces/PageList.html":{},"injectables/PageStateService.html":{}}}],["array",{"_index":354,"title":{},"body":{"classes/AbstractHttpService.html":{},"classes/AbstractReactForm.html":{},"interfaces/FileUploaderMsg.html":{},"components/GeocoderInputComponent.html":{},"changelog.html":{}}}],["array(0",{"_index":2810,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["array.isarray",{"_index":414,"title":{},"body":{"classes/AbstractReactForm.html":{}}}],["artifacts",{"_index":5604,"title":{},"body":{"additional-documentation/local-development/components.html":{}}}],["aruba",{"_index":1884,"title":{},"body":{"interfaces/CountryList.html":{}}}],["ascension",{"_index":2259,"title":{},"body":{"interfaces/CountryList.html":{}}}],["ask",{"_index":5441,"title":{},"body":{"index.html":{}}}],["asm",{"_index":1866,"title":{},"body":{"interfaces/CountryList.html":{}}}],["assets",{"_index":5578,"title":{},"body":{"additional-documentation/local-development/schematics.html":{}}}],["assets/gov3_bc_logo.png",{"_index":3569,"title":{},"body":{"components/HeaderComponent.html":{}}}],["assignment",{"_index":1724,"title":{},"body":{"classes/Container.html":{},"interfaces/WizardProgressItem.html":{}}}],["assistance",{"_index":3685,"title":{},"body":{"interfaces/ISpaEnvResponse.html":{}}}],["associate",{"_index":5039,"title":{},"body":{"changelog.html":{}}}],["associated",{"_index":527,"title":{},"body":{"classes/AbstractTestPage.html":{}}}],["association",{"_index":4961,"title":{},"body":{"changelog.html":{}}}],["assuming",{"_index":5612,"title":{},"body":{"additional-documentation/local-development/components.html":{}}}],["assumption",{"_index":5490,"title":{},"body":{"additional-documentation/getting-started.html":{}}}],["async",{"_index":459,"title":{},"body":{"classes/AbstractTestPage.html":{},"interfaces/AddrLabelList.html":{},"classes/Container.html":{},"interfaces/Maxlengths.html":{},"interfaces/ReadOnlyFields.html":{},"interfaces/WizardProgressItem.html":{}}}],["ata",{"_index":1874,"title":{},"body":{"interfaces/CountryList.html":{}}}],["atf",{"_index":2032,"title":{},"body":{"interfaces/CountryList.html":{}}}],["atg",{"_index":1876,"title":{},"body":{"interfaces/CountryList.html":{}}}],["atob(attachment.filecontent.split(',')[1",{"_index":353,"title":{},"body":{"classes/AbstractHttpService.html":{}}}],["attachment",{"_index":294,"title":{},"body":{"classes/AbstractHttpService.html":{},"injectables/GeocoderService.html":{}}}],["attachmentdocumenttype",{"_index":1475,"title":{},"body":{"interfaces/CommonAttachmentJson.html":{},"classes/CommonImage.html":{},"classes/CommonImageProcessingError.html":{},"interfaces/CommonImageScaleFactors.html":{},"classes/CommonImageScaleFactorsImpl.html":{}}}],["attachmentorder",{"_index":1476,"title":{},"body":{"interfaces/CommonAttachmentJson.html":{},"classes/CommonImage.html":{},"classes/CommonImageProcessingError.html":{},"interfaces/CommonImageScaleFactors.html":{},"classes/CommonImageScaleFactorsImpl.html":{}}}],["attachmentuuid",{"_index":1477,"title":{},"body":{"interfaces/CommonAttachmentJson.html":{},"classes/CommonImage.html":{},"classes/CommonImageProcessingError.html":{},"interfaces/CommonImageScaleFactors.html":{},"classes/CommonImageScaleFactorsImpl.html":{}}}],["attempted",{"_index":4803,"title":{},"body":{"changelog.html":{}}}],["attr",{"_index":5148,"title":{},"body":{"changelog.html":{}}}],["attr.aria",{"_index":4050,"title":{},"body":{"components/PasswordComponent.html":{}}}],["attribute",{"_index":587,"title":{},"body":{"classes/AbstractTestPage.html":{},"components/CoreBreadcrumbComponent.html":{},"components/XiconButtonComponent.html":{},"changelog.html":{}}}],["attributes",{"_index":3392,"title":{},"body":{"interfaces/GeoAddressResult.html":{},"injectables/GeocoderService.html":{}}}],["audit",{"_index":5221,"title":{},"body":{"changelog.html":{}}}],["aus",{"_index":1885,"title":{},"body":{"interfaces/CountryList.html":{}}}],["australia",{"_index":1886,"title":{},"body":{"interfaces/CountryList.html":{}}}],["austria",{"_index":1888,"title":{},"body":{"interfaces/CountryList.html":{}}}],["aut",{"_index":1887,"title":{},"body":{"interfaces/CountryList.html":{}}}],["autem",{"_index":1431,"title":{},"body":{"components/CityComponent.html":{},"interfaces/CountryList.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"interfaces/FileUploaderMsg.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{}}}],["auto",{"_index":818,"title":{},"body":{"interfaces/AddrLabelList.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"interfaces/FileUploaderMsg.html":{},"interfaces/Maxlengths.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"interfaces/ReadOnlyFields.html":{},"changelog.html":{},"additional-documentation/getting-started.html":{}}}],["autocomplete",{"_index":5124,"title":{},"body":{"changelog.html":{}}}],["autocomplete=\"false",{"_index":5139,"title":{},"body":{"changelog.html":{}}}],["autocorrect",{"_index":2646,"title":{},"body":{"components/DropdownComponent.html":{}}}],["automatically",{"_index":66,"title":{},"body":{"classes/AbstractBaseForm.html":{},"classes/AbstractForm.html":{},"classes/AbstractReactForm.html":{},"components/ButtonComponent.html":{},"interfaces/CommonLogMessage.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"interfaces/ISpaEnvResponse.html":{},"changelog.html":{},"additional-documentation/getting-started.html":{}}}],["available",{"_index":2900,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["avoids",{"_index":555,"title":{},"body":{"classes/AbstractTestPage.html":{}}}],["await",{"_index":623,"title":{},"body":{"classes/AbstractTestPage.html":{},"classes/Container.html":{},"interfaces/WizardProgressItem.html":{}}}],["awkward",{"_index":4013,"title":{},"body":{"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{}}}],["aze",{"_index":1889,"title":{},"body":{"interfaces/CountryList.html":{}}}],["azerbaijan",{"_index":1890,"title":{},"body":{"interfaces/CountryList.html":{}}}],["b",{"_index":4362,"title":{},"body":{"interfaces/SimpleDate.html":{},"components/WizardProgressBarComponent.html":{}}}],["b555787",{"_index":5007,"title":{},"body":{"changelog.html":{}}}],["b80520f",{"_index":5119,"title":{},"body":{"changelog.html":{}}}],["b901868",{"_index":4975,"title":{},"body":{"changelog.html":{}}}],["back",{"_index":3668,"title":{},"body":{"interfaces/ISpaEnvResponse.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{}}}],["backdrop",{"_index":4973,"title":{},"body":{"changelog.html":{}}}],["backend",{"_index":1667,"title":{},"body":{"interfaces/CommonLogMessage.html":{},"interfaces/ISpaEnvResponse.html":{}}}],["backticks",{"_index":3689,"title":{},"body":{"interfaces/ISpaEnvResponse.html":{}}}],["backup",{"_index":232,"title":{},"body":{"classes/AbstractFormControl.html":{}}}],["backward",{"_index":1048,"title":{},"body":{"classes/Address.html":{}}}],["bad",{"_index":5503,"title":{},"body":{"additional-documentation/getting-started.html":{}}}],["baee5ad",{"_index":5001,"title":{},"body":{"changelog.html":{}}}],["bahamas",{"_index":1892,"title":{},"body":{"interfaces/CountryList.html":{}}}],["bahrain",{"_index":1894,"title":{},"body":{"interfaces/CountryList.html":{}}}],["bangladesh",{"_index":1896,"title":{},"body":{"interfaces/CountryList.html":{}}}],["bar",{"_index":46,"title":{},"body":{"classes/AbstractBaseForm.html":{},"classes/AbstractForm.html":{},"classes/AbstractReactForm.html":{},"classes/AbstractTestPage.html":{},"classes/Container.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"components/WizardProgressBarComponent.html":{},"interfaces/WizardProgressItem.html":{},"changelog.html":{}}}],["bar'},{'name",{"_index":716,"title":{},"body":{"components/AccordionCommonComponent.html":{},"components/ButtonComponent.html":{},"components/ButtonGroupComponent.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"components/ConfirmTemplateComponent.html":{},"components/CoreBreadcrumbComponent.html":{},"components/DatepickerComponent.html":{},"components/DropdownComponent.html":{},"components/EmailComponent.html":{},"components/ErrorContainerComponent.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/FullNameComponent.html":{},"components/GeocoderInputComponent.html":{},"components/HeaderComponent.html":{},"components/NameComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"components/RadioComponent.html":{},"components/SampleModalComponent.html":{},"components/SinComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{},"components/XiconButtonComponent.html":{}}}],["bar.component",{"_index":4276,"title":{},"body":{"modules/SharedCoreModule.html":{}}}],["bar.component.html",{"_index":3262,"title":{},"body":{"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/WizardProgressBarComponent.html":{}}}],["bar.component.scss",{"_index":3261,"title":{},"body":{"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/WizardProgressBarComponent.html":{}}}],["bar.component.ts",{"_index":3260,"title":{},"body":{"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/WizardProgressBarComponent.html":{},"coverage.html":{}}}],["bar.component.ts:13",{"_index":3268,"title":{},"body":{"components/FormActionBarComponent.html":{}}}],["bar.component.ts:14",{"_index":3265,"title":{},"body":{"components/FormActionBarComponent.html":{}}}],["bar.component.ts:15",{"_index":3267,"title":{},"body":{"components/FormActionBarComponent.html":{}}}],["bar.component.ts:16",{"_index":3266,"title":{},"body":{"components/FormActionBarComponent.html":{}}}],["bar.component.ts:17",{"_index":3269,"title":{},"body":{"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{}}}],["bar.component.ts:18",{"_index":3293,"title":{},"body":{"components/FormSubmitBarComponent.html":{}}}],["bar.component.ts:19",{"_index":3264,"title":{},"body":{"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{}}}],["bar.component.ts:20",{"_index":3294,"title":{},"body":{"components/FormSubmitBarComponent.html":{}}}],["bar.component.ts:21",{"_index":3302,"title":{},"body":{"components/FormSubmitBarComponent.html":{}}}],["bar.component.ts:22",{"_index":4501,"title":{},"body":{"components/WizardProgressBarComponent.html":{}}}],["bar.component.ts:23",{"_index":3270,"title":{},"body":{"components/FormActionBarComponent.html":{},"components/WizardProgressBarComponent.html":{}}}],["bar.component.ts:24",{"_index":4518,"title":{},"body":{"components/WizardProgressBarComponent.html":{}}}],["bar.component.ts:26",{"_index":3271,"title":{},"body":{"components/FormActionBarComponent.html":{},"components/WizardProgressBarComponent.html":{}}}],["bar.component.ts:28",{"_index":4500,"title":{},"body":{"components/WizardProgressBarComponent.html":{}}}],["bar.component.ts:31",{"_index":3292,"title":{},"body":{"components/FormSubmitBarComponent.html":{}}}],["bar.component.ts:33",{"_index":4506,"title":{},"body":{"components/WizardProgressBarComponent.html":{}}}],["bar.component.ts:35",{"_index":3303,"title":{},"body":{"components/FormSubmitBarComponent.html":{}}}],["bar.component.ts:50",{"_index":4505,"title":{},"body":{"components/WizardProgressBarComponent.html":{}}}],["bar.component.ts:55",{"_index":4502,"title":{},"body":{"components/WizardProgressBarComponent.html":{}}}],["bar.component.ts:70",{"_index":4504,"title":{},"body":{"components/WizardProgressBarComponent.html":{}}}],["bar.component.ts:80",{"_index":4507,"title":{},"body":{"components/WizardProgressBarComponent.html":{}}}],["bar/form",{"_index":3259,"title":{},"body":{"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"modules/SharedCoreModule.html":{},"coverage.html":{}}}],["bar/wizard",{"_index":4281,"title":{},"body":{"modules/SharedCoreModule.html":{},"components/WizardProgressBarComponent.html":{},"coverage.html":{}}}],["barbados",{"_index":1898,"title":{},"body":{"interfaces/CountryList.html":{}}}],["barbuda",{"_index":1878,"title":{},"body":{"interfaces/CountryList.html":{}}}],["bars",{"_index":5245,"title":{},"body":{"changelog.html":{}}}],["barthélemy",{"_index":2256,"title":{},"body":{"interfaces/CountryList.html":{}}}],["base",{"_index":7,"title":{"classes/Base.html":{}},"body":{"classes/AbstractBaseForm.html":{},"classes/AbstractForm.html":{},"classes/AbstractFormControl.html":{},"classes/AbstractReactForm.html":{},"interfaces/AddrLabelList.html":{},"classes/Base.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"components/ConfirmTemplateComponent.html":{},"classes/Container.html":{},"components/CoreBreadcrumbComponent.html":{},"interfaces/CountryList.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"components/DropdownComponent.html":{},"components/EmailComponent.html":{},"interfaces/FileUploaderMsg.html":{},"components/FullNameComponent.html":{},"interfaces/FullNameErrorMsg.html":{},"components/GeocoderInputComponent.html":{},"interfaces/Maxlengths.html":{},"components/NameComponent.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"classes/Person.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{},"components/RadioComponent.html":{},"interfaces/ReadOnlyFields.html":{},"interfaces/SampleImageInterface.html":{},"components/SampleModalComponent.html":{},"components/SinComponent.html":{},"components/ToggleComponent.html":{},"interfaces/WizardProgressItem.html":{},"changelog.html":{},"coverage.html":{}}}],["base.component",{"_index":2763,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["base.model",{"_index":2771,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["base.service.ts",{"_index":1223,"title":{},"body":{"injectables/CheckCompleteBaseService.html":{},"interfaces/PageListInterface.html":{},"coverage.html":{}}}],["base.service.ts:107",{"_index":1240,"title":{},"body":{"injectables/CheckCompleteBaseService.html":{}}}],["base.service.ts:111",{"_index":1251,"title":{},"body":{"injectables/CheckCompleteBaseService.html":{}}}],["base.service.ts:16",{"_index":3907,"title":{},"body":{"interfaces/PageListInterface.html":{}}}],["base.service.ts:32",{"_index":1263,"title":{},"body":{"injectables/CheckCompleteBaseService.html":{}}}],["base.service.ts:34",{"_index":1261,"title":{},"body":{"injectables/CheckCompleteBaseService.html":{}}}],["base.service.ts:35",{"_index":1236,"title":{},"body":{"injectables/CheckCompleteBaseService.html":{}}}],["base.service.ts:39",{"_index":1265,"title":{},"body":{"injectables/CheckCompleteBaseService.html":{}}}],["base.service.ts:43",{"_index":1267,"title":{},"body":{"injectables/CheckCompleteBaseService.html":{}}}],["base.service.ts:47",{"_index":1237,"title":{},"body":{"injectables/CheckCompleteBaseService.html":{}}}],["base.service.ts:51",{"_index":1238,"title":{},"body":{"injectables/CheckCompleteBaseService.html":{}}}],["base.service.ts:56",{"_index":1252,"title":{},"body":{"injectables/CheckCompleteBaseService.html":{}}}],["base.service.ts:63",{"_index":1258,"title":{},"body":{"injectables/CheckCompleteBaseService.html":{}}}],["base.service.ts:78",{"_index":1254,"title":{},"body":{"injectables/CheckCompleteBaseService.html":{}}}],["base.service.ts:88",{"_index":1247,"title":{},"body":{"injectables/CheckCompleteBaseService.html":{}}}],["base.service.ts:99",{"_index":1244,"title":{},"body":{"injectables/CheckCompleteBaseService.html":{}}}],["base64",{"_index":1508,"title":{},"body":{"interfaces/CommonAttachmentJson.html":{},"classes/CommonImage.html":{},"classes/CommonImageProcessingError.html":{},"interfaces/CommonImageScaleFactors.html":{},"classes/CommonImageScaleFactorsImpl.html":{},"additional-documentation/local-development/schematics.html":{}}}],["base:11",{"_index":137,"title":{},"body":{"classes/AbstractFormControl.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"components/ConfirmTemplateComponent.html":{},"components/DatepickerComponent.html":{},"components/DropdownComponent.html":{},"components/EmailComponent.html":{},"components/FullNameComponent.html":{},"components/GeocoderInputComponent.html":{},"components/NameComponent.html":{},"components/PasswordComponent.html":{},"classes/Person.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"components/RadioComponent.html":{},"components/SampleModalComponent.html":{},"components/SinComponent.html":{},"components/ToggleComponent.html":{}}}],["base_url",{"_index":3380,"title":{},"body":{"interfaces/GeoAddressResult.html":{},"injectables/GeocoderService.html":{}}}],["basecomponent",{"_index":2762,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["based",{"_index":197,"title":{},"body":{"classes/AbstractFormControl.html":{},"classes/AbstractTestPage.html":{},"interfaces/AddrLabelList.html":{},"interfaces/FileUploaderMsg.html":{},"interfaces/IRadioItems.html":{},"interfaces/Maxlengths.html":{},"components/RadioComponent.html":{},"interfaces/ReadOnlyFields.html":{},"changelog.html":{}}}],["basic",{"_index":1712,"title":{},"body":{"classes/Container.html":{},"interfaces/WizardProgressItem.html":{},"changelog.html":{}}}],["basis",{"_index":5458,"title":{},"body":{"license.html":{}}}],["bc",{"_index":966,"title":{},"body":{"interfaces/AddrLabelList.html":{},"classes/Address.html":{},"components/GeocoderInputComponent.html":{},"interfaces/ISpaEnvResponse.html":{},"interfaces/Maxlengths.html":{},"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{},"interfaces/ReadOnlyFields.html":{},"modules/SharedCoreModule.html":{},"directives/ValidateBcPostalDirective.html":{},"directives/ValidatePostalcodeDirective.html":{},"changelog.html":{},"coverage.html":{}}}],["bcformat",{"_index":4479,"title":{},"body":{"directives/ValidatePostalcodeDirective.html":{}}}],["bcformat.test",{"_index":4480,"title":{},"body":{"directives/ValidatePostalcodeDirective.html":{}}}],["bclogobase64",{"_index":5361,"title":{},"body":{"coverage.html":{}}}],["bconly",{"_index":827,"title":{},"body":{"interfaces/AddrLabelList.html":{},"interfaces/Maxlengths.html":{},"interfaces/ReadOnlyFields.html":{},"directives/ValidatePostalcodeDirective.html":{},"changelog.html":{}}}],["bcp",{"_index":4616,"title":{},"body":{"changelog.html":{}}}],["bdi",{"_index":1941,"title":{},"body":{"interfaces/CountryList.html":{}}}],["beatae",{"_index":1455,"title":{},"body":{"components/CityComponent.html":{},"interfaces/CountryList.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"interfaces/FileUploaderMsg.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{}}}],["become",{"_index":5489,"title":{},"body":{"todo.html":{}}}],["befc319",{"_index":5043,"title":{},"body":{"changelog.html":{}}}],["before",{"_index":1533,"title":{},"body":{"interfaces/CommonAttachmentJson.html":{},"classes/CommonImage.html":{},"classes/CommonImageProcessingError.html":{},"interfaces/CommonImageScaleFactors.html":{},"classes/CommonImageScaleFactorsImpl.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"interfaces/FileUploaderMsg.html":{},"interfaces/GeoAddressResult.html":{},"injectables/GeocoderService.html":{},"interfaces/ISpaEnvResponse.html":{},"changelog.html":{},"additional-documentation/local-development/schematics.html":{}}}],["begin",{"_index":3344,"title":{},"body":{"components/FullNameComponent.html":{},"interfaces/FullNameErrorMsg.html":{},"components/NameComponent.html":{}}}],["beginning",{"_index":3649,"title":{},"body":{"interfaces/ISpaEnvResponse.html":{}}}],["behaviorsubject",{"_index":1820,"title":{},"body":{"injectables/ContainerService.html":{}}}],["behaviour",{"_index":4790,"title":{},"body":{"changelog.html":{}}}],["being",{"_index":198,"title":{},"body":{"classes/AbstractFormControl.html":{},"interfaces/CommonLogMessage.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{}}}],["bel",{"_index":1901,"title":{},"body":{"interfaces/CountryList.html":{}}}],["belarus",{"_index":1900,"title":{},"body":{"interfaces/CountryList.html":{}}}],["belgium",{"_index":1902,"title":{},"body":{"interfaces/CountryList.html":{}}}],["belize",{"_index":1904,"title":{},"body":{"interfaces/CountryList.html":{}}}],["below",{"_index":3645,"title":{},"body":{"interfaces/ISpaEnvResponse.html":{},"additional-documentation/getting-started.html":{}}}],["ben",{"_index":1905,"title":{},"body":{"interfaces/CountryList.html":{}}}],["beneficial",{"_index":3922,"title":{},"body":{"components/PageSectionComponent.html":{}}}],["benefits",{"_index":3683,"title":{},"body":{"interfaces/ISpaEnvResponse.html":{}}}],["benin",{"_index":1906,"title":{},"body":{"interfaces/CountryList.html":{}}}],["bermuda",{"_index":1908,"title":{},"body":{"interfaces/CountryList.html":{}}}],["bes",{"_index":1913,"title":{},"body":{"interfaces/CountryList.html":{}}}],["best",{"_index":3553,"title":{},"body":{"components/HeaderComponent.html":{}}}],["better",{"_index":4967,"title":{},"body":{"changelog.html":{}}}],["between",{"_index":4578,"title":{},"body":{"components/XiconButtonComponent.html":{}}}],["bf0bcc2",{"_index":4678,"title":{},"body":{"changelog.html":{}}}],["bf3cf23",{"_index":5231,"title":{},"body":{"changelog.html":{}}}],["bfa",{"_index":1938,"title":{},"body":{"interfaces/CountryList.html":{}}}],["bg",{"_index":4047,"title":{},"body":{"components/PasswordComponent.html":{}}}],["bgd",{"_index":1895,"title":{},"body":{"interfaces/CountryList.html":{}}}],["bgr",{"_index":1936,"title":{},"body":{"interfaces/CountryList.html":{}}}],["bhr",{"_index":1893,"title":{},"body":{"interfaces/CountryList.html":{}}}],["bhs",{"_index":1891,"title":{},"body":{"interfaces/CountryList.html":{}}}],["bhutan",{"_index":1909,"title":{},"body":{"interfaces/CountryList.html":{}}}],["big",{"_index":3177,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["bih",{"_index":1918,"title":{},"body":{"interfaces/CountryList.html":{}}}],["binary",{"_index":352,"title":{},"body":{"classes/AbstractHttpService.html":{}}}],["bind",{"_index":1313,"title":{},"body":{"components/CheckboxComponent.html":{}}}],["bindings",{"_index":2827,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["binds",{"_index":840,"title":{},"body":{"interfaces/AddrLabelList.html":{},"interfaces/FileUploaderMsg.html":{},"interfaces/Maxlengths.html":{},"interfaces/ReadOnlyFields.html":{}}}],["birth",{"_index":4078,"title":{},"body":{"classes/Person.html":{}}}],["birthdate",{"_index":4070,"title":{},"body":{"classes/Person.html":{}}}],["bissau",{"_index":2063,"title":{},"body":{"interfaces/CountryList.html":{}}}],["blanditiis",{"_index":1440,"title":{},"body":{"components/CityComponent.html":{},"interfaces/CountryList.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"interfaces/FileUploaderMsg.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{}}}],["blank",{"_index":884,"title":{},"body":{"interfaces/AddrLabelList.html":{},"components/CityComponent.html":{},"interfaces/CountryList.html":{},"components/FormSubmitBarComponent.html":{},"components/FullNameComponent.html":{},"interfaces/FullNameErrorMsg.html":{},"interfaces/Maxlengths.html":{},"components/NameComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{},"interfaces/ReadOnlyFields.html":{},"components/XiconButtonComponent.html":{},"changelog.html":{},"additional-documentation/local-development/schematics.html":{}}}],["blm",{"_index":2254,"title":{},"body":{"interfaces/CountryList.html":{}}}],["blob",{"_index":2924,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["blob.size",{"_index":3100,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["block",{"_index":3609,"title":{},"body":{"interfaces/IRadioItems.html":{},"components/RadioComponent.html":{}}}],["blr",{"_index":1899,"title":{},"body":{"interfaces/CountryList.html":{}}}],["blue",{"_index":3548,"title":{},"body":{"components/HeaderComponent.html":{}}}],["blueimp",{"_index":2777,"title":{},"body":{"interfaces/FileUploaderMsg.html":{},"dependencies.html":{}}}],["blur",{"_index":1364,"title":{},"body":{"components/CityComponent.html":{},"components/EmailComponent.html":{},"components/NameComponent.html":{},"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{},"components/SinComponent.html":{},"changelog.html":{}}}],["blurevent",{"_index":2414,"title":{},"body":{"interfaces/CountryList.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"components/PostalCodeComponent.html":{}}}],["blz",{"_index":1903,"title":{},"body":{"interfaces/CountryList.html":{}}}],["bmu",{"_index":1907,"title":{},"body":{"interfaces/CountryList.html":{}}}],["body",{"_index":289,"title":{},"body":{"classes/AbstractHttpService.html":{},"interfaces/CommonLogMessage.html":{},"injectables/GeocoderService.html":{},"interfaces/ISpaEnvResponse.html":{}}}],["body).subscribe",{"_index":1658,"title":{},"body":{"interfaces/CommonLogMessage.html":{}}}],["boilerplate",{"_index":3650,"title":{},"body":{"interfaces/ISpaEnvResponse.html":{}}}],["bol",{"_index":1910,"title":{},"body":{"interfaces/CountryList.html":{}}}],["bolivarian",{"_index":2386,"title":{},"body":{"interfaces/CountryList.html":{}}}],["bolivia",{"_index":1911,"title":{},"body":{"interfaces/CountryList.html":{}}}],["bonaire",{"_index":1914,"title":{},"body":{"interfaces/CountryList.html":{}}}],["boolean",{"_index":29,"title":{},"body":{"classes/AbstractBaseForm.html":{},"classes/AbstractForm.html":{},"classes/AbstractFormControl.html":{},"classes/AbstractHttpService.html":{},"injectables/AbstractPageGuardService.html":{},"injectables/AbstractPgCheckService.html":{},"classes/AbstractReactForm.html":{},"components/AccordionCommonComponent.html":{},"interfaces/AddrLabelList.html":{},"classes/Address.html":{},"components/ButtonComponent.html":{},"components/ButtonGroupComponent.html":{},"injectables/CheckCompleteBaseService.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"classes/Container.html":{},"injectables/ContainerService.html":{},"interfaces/CountryList.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"injectables/DefaultPageGuardService.html":{},"components/DropdownComponent.html":{},"directives/DuplicateCheckDirective.html":{},"components/EmailComponent.html":{},"components/ErrorContainerComponent.html":{},"interfaces/FileUploaderMsg.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/FullNameComponent.html":{},"interfaces/FullNameErrorMsg.html":{},"components/GeocoderInputComponent.html":{},"injectables/GeocoderService.html":{},"components/HeaderComponent.html":{},"interfaces/ISpaEnvResponse.html":{},"guards/LoadPageGuardService.html":{},"interfaces/Maxlengths.html":{},"components/NameComponent.html":{},"interfaces/PageList.html":{},"interfaces/PageListInterface.html":{},"injectables/PageStateService.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{},"components/RadioComponent.html":{},"interfaces/ReadOnlyFields.html":{},"guards/RouteGuardService.html":{},"components/SinComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"directives/ValidatePostalcodeDirective.html":{},"interfaces/WizardProgressItem.html":{},"todo.html":{}}}],["bootstrap",{"_index":676,"title":{},"body":{"components/AccordionCommonComponent.html":{},"components/ButtonComponent.html":{},"modules/CaptchaModule.html":{},"interfaces/FileUploaderMsg.html":{},"components/GeocoderInputComponent.html":{},"interfaces/ISpaEnvResponse.html":{},"interfaces/SampleImageInterface.html":{},"components/SampleModalComponent.html":{},"modules/SharedCoreModule.html":{},"components/ThumbnailComponent.html":{},"components/WizardProgressBarComponent.html":{},"dependencies.html":{},"overview.html":{}}}],["bootstrap/accordion",{"_index":4317,"title":{},"body":{"modules/SharedCoreModule.html":{}}}],["bosnia",{"_index":1919,"title":{},"body":{"interfaces/CountryList.html":{}}}],["both",{"_index":444,"title":{},"body":{"classes/AbstractTestPage.html":{},"components/CheckboxComponent.html":{},"changelog.html":{},"additional-documentation/local-development/schematics.html":{}}}],["botswana",{"_index":1922,"title":{},"body":{"interfaces/CountryList.html":{}}}],["bottom",{"_index":562,"title":{},"body":{"classes/AbstractTestPage.html":{}}}],["bound",{"_index":5437,"title":{},"body":{"index.html":{}}}],["bouvet",{"_index":1924,"title":{},"body":{"interfaces/CountryList.html":{}}}],["box",{"_index":508,"title":{},"body":{"classes/AbstractTestPage.html":{},"interfaces/AddrLabelList.html":{},"components/GeocoderInputComponent.html":{},"interfaces/Maxlengths.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"interfaces/ReadOnlyFields.html":{}}}],["bps",{"_index":5067,"title":{},"body":{"changelog.html":{}}}],["bra",{"_index":1926,"title":{},"body":{"interfaces/CountryList.html":{}}}],["brackets",{"_index":4904,"title":{},"body":{"changelog.html":{}}}],["brazil",{"_index":1927,"title":{},"body":{"interfaces/CountryList.html":{}}}],["brb",{"_index":1897,"title":{},"body":{"interfaces/CountryList.html":{}}}],["bread",{"_index":1772,"title":{},"body":{"classes/Container.html":{},"interfaces/WizardProgressItem.html":{}}}],["breadcrumb",{"_index":1835,"title":{},"body":{"components/CoreBreadcrumbComponent.html":{}}}],["breadcrumb'},{'name",{"_index":701,"title":{},"body":{"components/AccordionCommonComponent.html":{},"components/ButtonComponent.html":{},"components/ButtonGroupComponent.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"components/ConfirmTemplateComponent.html":{},"components/CoreBreadcrumbComponent.html":{},"components/DatepickerComponent.html":{},"components/DropdownComponent.html":{},"components/EmailComponent.html":{},"components/ErrorContainerComponent.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/FullNameComponent.html":{},"components/GeocoderInputComponent.html":{},"components/HeaderComponent.html":{},"components/NameComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"components/RadioComponent.html":{},"components/SampleModalComponent.html":{},"components/SinComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{},"components/XiconButtonComponent.html":{}}}],["breadcrumb.component",{"_index":4274,"title":{},"body":{"modules/SharedCoreModule.html":{}}}],["breadcrumb.component.html",{"_index":1850,"title":{},"body":{"components/CoreBreadcrumbComponent.html":{}}}],["breadcrumb.component.scss",{"_index":1849,"title":{},"body":{"components/CoreBreadcrumbComponent.html":{}}}],["breadcrumb.component.ts",{"_index":1833,"title":{},"body":{"components/CoreBreadcrumbComponent.html":{},"coverage.html":{}}}],["breadcrumb.component.ts:29",{"_index":1851,"title":{},"body":{"components/CoreBreadcrumbComponent.html":{}}}],["breadcrumb.component.ts:33",{"_index":1852,"title":{},"body":{"components/CoreBreadcrumbComponent.html":{}}}],["breadcrumb/core",{"_index":1832,"title":{},"body":{"components/CoreBreadcrumbComponent.html":{},"modules/SharedCoreModule.html":{},"coverage.html":{}}}],["break",{"_index":3666,"title":{},"body":{"interfaces/ISpaEnvResponse.html":{},"changelog.html":{}}}],["breaking",{"_index":1047,"title":{},"body":{"classes/Address.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"components/WizardProgressBarComponent.html":{},"components/XiconButtonComponent.html":{},"changelog.html":{},"todo.html":{}}}],["breaks",{"_index":3815,"title":{},"body":{"classes/MoHCommonLibraryError.html":{}}}],["british",{"_index":1929,"title":{},"body":{"interfaces/CountryList.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{},"license.html":{}}}],["british_columbia",{"_index":805,"title":{},"body":{"interfaces/AddrLabelList.html":{},"components/GeocoderInputComponent.html":{},"interfaces/Maxlengths.html":{},"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{},"interfaces/ReadOnlyFields.html":{},"coverage.html":{}}}],["brn",{"_index":1933,"title":{},"body":{"interfaces/CountryList.html":{}}}],["broken",{"_index":5586,"title":{},"body":{"additional-documentation/local-development/components.html":{}}}],["broswefileinputelement",{"_index":3238,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["browse",{"_index":2865,"title":{},"body":{"interfaces/FileUploaderMsg.html":{},"modules.html":{}}}],["browsefileref",{"_index":2800,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["browsefilestream",{"_index":2964,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["browser",{"_index":609,"title":{},"body":{"classes/AbstractTestPage.html":{},"modules/CaptchaModule.html":{},"interfaces/FileUploaderMsg.html":{},"interfaces/ISpaEnvResponse.html":{},"components/WizardProgressBarComponent.html":{},"changelog.html":{},"dependencies.html":{},"modules.html":{}}}],["browser's",{"_index":2885,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["browser.actions().sendkeys(protractor.key.enter).perform",{"_index":633,"title":{},"body":{"classes/AbstractTestPage.html":{}}}],["browser.executescript('window.scrollto(0",{"_index":616,"title":{},"body":{"classes/AbstractTestPage.html":{}}}],["browser.executescript('window.scrollto(0,0",{"_index":646,"title":{},"body":{"classes/AbstractTestPage.html":{}}}],["browser.get(&#39;/enrolment/profile&#39",{"_index":559,"title":{},"body":{"classes/AbstractTestPage.html":{}}}],["browser.get('/enrolment/profile",{"_index":613,"title":{},"body":{"classes/AbstractTestPage.html":{}}}],["browser.need",{"_index":3664,"title":{},"body":{"interfaces/ISpaEnvResponse.html":{}}}],["browsermodule",{"_index":1214,"title":{},"body":{"modules/CaptchaModule.html":{}}}],["brunei",{"_index":1934,"title":{},"body":{"interfaces/CountryList.html":{}}}],["brunswick",{"_index":4196,"title":{},"body":{"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{}}}],["btn",{"_index":1116,"title":{},"body":{"components/ButtonComponent.html":{},"interfaces/CountryList.html":{}}}],["btnclick",{"_index":1102,"title":{},"body":{"components/ButtonComponent.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{}}}],["bug",{"_index":3065,"title":{},"body":{"interfaces/FileUploaderMsg.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"changelog.html":{}}}],["buiding",{"_index":5081,"title":{},"body":{"changelog.html":{}}}],["build",{"_index":4014,"title":{},"body":{"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"changelog.html":{},"additional-documentation/local-development/schematics.html":{},"additional-documentation/local-development/components.html":{}}}],["build:schematics",{"_index":5532,"title":{},"body":{"additional-documentation/local-development/schematics.html":{}}}],["building",{"_index":5521,"title":{},"body":{"additional-documentation/local-development/schematics.html":{},"additional-documentation/local-development/components.html":{}}}],["builds",{"_index":4901,"title":{},"body":{"changelog.html":{},"additional-documentation/local-development/schematics.html":{},"additional-documentation/local-development/components.html":{}}}],["buildtime",{"_index":5381,"title":{},"body":{"coverage.html":{}}}],["built",{"_index":3551,"title":{},"body":{"components/HeaderComponent.html":{},"changelog.html":{},"additional-documentation/local-development/components.html":{}}}],["bulgaria",{"_index":1937,"title":{},"body":{"interfaces/CountryList.html":{}}}],["bullet",{"_index":4843,"title":{},"body":{"changelog.html":{}}}],["burkina",{"_index":1939,"title":{},"body":{"interfaces/CountryList.html":{}}}],["burundi",{"_index":1942,"title":{},"body":{"interfaces/CountryList.html":{}}}],["business",{"_index":1729,"title":{},"body":{"classes/Container.html":{},"interfaces/WizardProgressItem.html":{}}}],["button",{"_index":48,"title":{},"body":{"classes/AbstractBaseForm.html":{},"classes/AbstractForm.html":{},"classes/AbstractReactForm.html":{},"classes/AbstractTestPage.html":{},"components/AccordionCommonComponent.html":{},"components/ButtonComponent.html":{},"components/ButtonGroupComponent.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"components/ConfirmTemplateComponent.html":{},"classes/Container.html":{},"components/CoreBreadcrumbComponent.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"components/DropdownComponent.html":{},"components/EmailComponent.html":{},"components/ErrorContainerComponent.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/FullNameComponent.html":{},"components/GeocoderInputComponent.html":{},"components/HeaderComponent.html":{},"components/NameComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"components/RadioComponent.html":{},"components/SampleModalComponent.html":{},"components/SinComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{},"interfaces/WizardProgressItem.html":{},"components/XiconButtonComponent.html":{},"changelog.html":{}}}],["button'},{'name",{"_index":685,"title":{},"body":{"components/AccordionCommonComponent.html":{},"components/ButtonComponent.html":{},"components/ButtonGroupComponent.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"components/ConfirmTemplateComponent.html":{},"components/CoreBreadcrumbComponent.html":{},"components/DatepickerComponent.html":{},"components/DropdownComponent.html":{},"components/EmailComponent.html":{},"components/ErrorContainerComponent.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/FullNameComponent.html":{},"components/GeocoderInputComponent.html":{},"components/HeaderComponent.html":{},"components/NameComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"components/RadioComponent.html":{},"components/SampleModalComponent.html":{},"components/SinComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{},"components/XiconButtonComponent.html":{}}}],["button.component",{"_index":4330,"title":{},"body":{"modules/SharedCoreModule.html":{}}}],["button.component.html",{"_index":1098,"title":{},"body":{"components/ButtonComponent.html":{},"components/XiconButtonComponent.html":{}}}],["button.component.scss",{"_index":1097,"title":{},"body":{"components/ButtonComponent.html":{},"components/XiconButtonComponent.html":{}}}],["button.component.ts",{"_index":4564,"title":{},"body":{"components/XiconButtonComponent.html":{},"coverage.html":{},"todo.html":{}}}],["button.component.ts:15",{"_index":4568,"title":{},"body":{"components/XiconButtonComponent.html":{}}}],["button.component.ts:19",{"_index":4570,"title":{},"body":{"components/XiconButtonComponent.html":{}}}],["button.component.ts:20",{"_index":4567,"title":{},"body":{"components/XiconButtonComponent.html":{}}}],["button.component.ts:24",{"_index":4571,"title":{},"body":{"components/XiconButtonComponent.html":{}}}],["button.component.ts:35",{"_index":4572,"title":{},"body":{"components/XiconButtonComponent.html":{}}}],["button/xicon",{"_index":4329,"title":{},"body":{"modules/SharedCoreModule.html":{},"components/XiconButtonComponent.html":{},"coverage.html":{}}}],["buttoncomponent",{"_index":684,"title":{"components/ButtonComponent.html":{}},"body":{"components/AccordionCommonComponent.html":{},"components/ButtonComponent.html":{},"components/ButtonGroupComponent.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"components/ConfirmTemplateComponent.html":{},"components/CoreBreadcrumbComponent.html":{},"components/DatepickerComponent.html":{},"components/DropdownComponent.html":{},"components/EmailComponent.html":{},"components/ErrorContainerComponent.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/FullNameComponent.html":{},"components/GeocoderInputComponent.html":{},"components/HeaderComponent.html":{},"components/NameComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"components/RadioComponent.html":{},"components/SampleModalComponent.html":{},"modules/SharedCoreModule.html":{},"components/SinComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{},"components/XiconButtonComponent.html":{},"changelog.html":{},"coverage.html":{},"overview.html":{}}}],["buttongroup",{"_index":1130,"title":{},"body":{"components/ButtonGroupComponent.html":{}}}],["buttongroupcomponent",{"_index":686,"title":{"components/ButtonGroupComponent.html":{}},"body":{"components/AccordionCommonComponent.html":{},"components/ButtonComponent.html":{},"components/ButtonGroupComponent.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"components/ConfirmTemplateComponent.html":{},"components/CoreBreadcrumbComponent.html":{},"components/DatepickerComponent.html":{},"components/DropdownComponent.html":{},"components/EmailComponent.html":{},"components/ErrorContainerComponent.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/FullNameComponent.html":{},"components/GeocoderInputComponent.html":{},"components/HeaderComponent.html":{},"components/NameComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"components/RadioComponent.html":{},"components/SampleModalComponent.html":{},"modules/SharedCoreModule.html":{},"components/SinComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{},"components/XiconButtonComponent.html":{},"changelog.html":{},"coverage.html":{},"overview.html":{}}}],["buttons",{"_index":1082,"title":{},"body":{"components/ButtonComponent.html":{},"interfaces/IRadioItems.html":{},"components/RadioComponent.html":{},"changelog.html":{}}}],["buttontype",{"_index":1100,"title":{},"body":{"components/ButtonComponent.html":{}}}],["bvt",{"_index":1923,"title":{},"body":{"interfaces/CountryList.html":{}}}],["bwa",{"_index":1921,"title":{},"body":{"interfaces/CountryList.html":{}}}],["bypass",{"_index":1268,"title":{},"body":{"injectables/CheckCompleteBaseService.html":{},"injectables/DefaultPageGuardService.html":{},"interfaces/PageListInterface.html":{},"changelog.html":{}}}],["bypass_guards",{"_index":2630,"title":{},"body":{"injectables/DefaultPageGuardService.html":{},"coverage.html":{}}}],["bypassguards",{"_index":1235,"title":{},"body":{"injectables/CheckCompleteBaseService.html":{},"injectables/DefaultPageGuardService.html":{},"interfaces/PageListInterface.html":{}}}],["bytes",{"_index":1523,"title":{},"body":{"interfaces/CommonAttachmentJson.html":{},"classes/CommonImage.html":{},"classes/CommonImageProcessingError.html":{},"interfaces/CommonImageScaleFactors.html":{},"classes/CommonImageScaleFactorsImpl.html":{},"interfaces/FileUploaderMsg.html":{}}}],["c",{"_index":3675,"title":{},"body":{"interfaces/ISpaEnvResponse.html":{}}}],["c04b81d",{"_index":5106,"title":{},"body":{"changelog.html":{}}}],["c054ca5",{"_index":5213,"title":{},"body":{"changelog.html":{}}}],["c122a2a",{"_index":4962,"title":{},"body":{"changelog.html":{}}}],["c2fd959",{"_index":4969,"title":{},"body":{"changelog.html":{}}}],["c347c39",{"_index":5146,"title":{},"body":{"changelog.html":{}}}],["c4c9856",{"_index":4663,"title":{},"body":{"changelog.html":{}}}],["c580225",{"_index":5117,"title":{},"body":{"changelog.html":{}}}],["c6067fd",{"_index":4854,"title":{},"body":{"changelog.html":{}}}],["c64c066",{"_index":4866,"title":{},"body":{"changelog.html":{}}}],["c6befdf",{"_index":5186,"title":{},"body":{"changelog.html":{}}}],["c78856a",{"_index":4879,"title":{},"body":{"changelog.html":{}}}],["c8cd6f4",{"_index":5249,"title":{},"body":{"changelog.html":{}}}],["c8fb31b",{"_index":5082,"title":{},"body":{"changelog.html":{}}}],["c91fef0",{"_index":4801,"title":{},"body":{"changelog.html":{}}}],["ca8bd7c",{"_index":5177,"title":{},"body":{"changelog.html":{}}}],["caf",{"_index":1952,"title":{},"body":{"interfaces/CountryList.html":{},"interfaces/ISpaEnvResponse.html":{}}}],["caicos",{"_index":2366,"title":{},"body":{"interfaces/CountryList.html":{}}}],["calculateprogresspercentage",{"_index":4497,"title":{},"body":{"components/WizardProgressBarComponent.html":{}}}],["calculates",{"_index":4076,"title":{},"body":{"classes/Person.html":{}}}],["caledonia",{"_index":2199,"title":{},"body":{"interfaces/CountryList.html":{}}}],["call",{"_index":1651,"title":{},"body":{"interfaces/CommonLogMessage.html":{},"interfaces/FileUploaderMsg.html":{},"interfaces/ISpaEnvResponse.html":{},"guards/LoadPageGuardService.html":{},"guards/RouteGuardService.html":{},"components/WizardProgressBarComponent.html":{},"changelog.html":{},"additional-documentation/local-development/schematics.html":{}}}],["callback",{"_index":3205,"title":{},"body":{"interfaces/FileUploaderMsg.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{}}}],["callback(imgel",{"_index":3193,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["called",{"_index":1768,"title":{},"body":{"classes/Container.html":{},"interfaces/FileUploaderMsg.html":{},"interfaces/ISpaEnvResponse.html":{},"interfaces/WizardProgressItem.html":{}}}],["calling",{"_index":545,"title":{},"body":{"classes/AbstractTestPage.html":{},"interfaces/CommonAttachmentJson.html":{},"classes/CommonImage.html":{},"classes/CommonImageProcessingError.html":{},"interfaces/CommonImageScaleFactors.html":{},"classes/CommonImageScaleFactorsImpl.html":{},"interfaces/ISpaEnvResponse.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{}}}],["callout",{"_index":3743,"title":{},"body":{"interfaces/ISpaEnvResponse.html":{}}}],["calls",{"_index":5575,"title":{},"body":{"additional-documentation/local-development/schematics.html":{}}}],["cambodia",{"_index":1944,"title":{},"body":{"interfaces/CountryList.html":{}}}],["cameroon",{"_index":1946,"title":{},"body":{"interfaces/CountryList.html":{}}}],["can't",{"_index":2826,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["canactivate",{"_index":3785,"title":{},"body":{"guards/LoadPageGuardService.html":{},"guards/RouteGuardService.html":{}}}],["canactivate(route",{"_index":3800,"title":{},"body":{"guards/LoadPageGuardService.html":{},"guards/RouteGuardService.html":{}}}],["canactivatechild",{"_index":3786,"title":{},"body":{"guards/LoadPageGuardService.html":{},"guards/RouteGuardService.html":{}}}],["canactivatechild(next",{"_index":3805,"title":{},"body":{"guards/LoadPageGuardService.html":{},"guards/RouteGuardService.html":{}}}],["canada",{"_index":800,"title":{},"body":{"interfaces/AddrLabelList.html":{},"interfaces/CountryList.html":{},"interfaces/GeoAddressResult.html":{},"components/GeocoderInputComponent.html":{},"injectables/GeocoderService.html":{},"interfaces/Maxlengths.html":{},"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{},"interfaces/ReadOnlyFields.html":{},"changelog.html":{},"coverage.html":{},"license.html":{}}}],["canbypassguards",{"_index":379,"title":{},"body":{"injectables/AbstractPageGuardService.html":{},"injectables/AbstractPgCheckService.html":{},"injectables/CheckCompleteBaseService.html":{},"injectables/DefaultPageGuardService.html":{},"interfaces/PageListInterface.html":{}}}],["cancel",{"_index":2954,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["cancontinue",{"_index":15,"title":{},"body":{"classes/AbstractBaseForm.html":{},"classes/AbstractForm.html":{},"classes/AbstractReactForm.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{}}}],["canda",{"_index":3509,"title":{},"body":{"components/GeocoderInputComponent.html":{}}}],["candidates",{"_index":4795,"title":{},"body":{"changelog.html":{}}}],["cannavigatetopage",{"_index":3926,"title":{},"body":{"injectables/PageStateService.html":{},"changelog.html":{}}}],["cannavigatetopage(path",{"_index":3931,"title":{},"body":{"injectables/PageStateService.html":{}}}],["cannavigatetourl",{"_index":380,"title":{},"body":{"injectables/AbstractPageGuardService.html":{},"injectables/DefaultPageGuardService.html":{}}}],["cannavigatetourl(url",{"_index":382,"title":{},"body":{"injectables/AbstractPageGuardService.html":{},"injectables/DefaultPageGuardService.html":{}}}],["cannotopen",{"_index":1489,"title":{},"body":{"interfaces/CommonAttachmentJson.html":{},"classes/CommonImage.html":{},"classes/CommonImageProcessingError.html":{},"interfaces/CommonImageScaleFactors.html":{},"classes/CommonImageScaleFactorsImpl.html":{},"miscellaneous/enumerations.html":{}}}],["cannotopenpdf",{"_index":1491,"title":{},"body":{"interfaces/CommonAttachmentJson.html":{},"classes/CommonImage.html":{},"classes/CommonImageProcessingError.html":{},"interfaces/CommonImageScaleFactors.html":{},"classes/CommonImageScaleFactorsImpl.html":{},"miscellaneous/enumerations.html":{}}}],["canvas",{"_index":2815,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["canvas.getcontext('2d",{"_index":3214,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["canvas.toblob((blob",{"_index":3098,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["cape",{"_index":1948,"title":{},"body":{"interfaces/CountryList.html":{}}}],["capitalize",{"_index":4910,"title":{},"body":{"changelog.html":{}}}],["captcha",{"_index":1182,"title":{},"body":{"injectables/CaptchaDataService.html":{},"modules/CaptchaModule.html":{},"injectables/ServerPayload.html":{},"changelog.html":{},"additional-documentation/getting-started.html":{}}}],["captcha'},{'name",{"_index":689,"title":{},"body":{"components/AccordionCommonComponent.html":{},"components/ButtonComponent.html":{},"components/ButtonGroupComponent.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"components/ConfirmTemplateComponent.html":{},"components/CoreBreadcrumbComponent.html":{},"components/DatepickerComponent.html":{},"components/DropdownComponent.html":{},"components/EmailComponent.html":{},"components/ErrorContainerComponent.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/FullNameComponent.html":{},"components/GeocoderInputComponent.html":{},"components/HeaderComponent.html":{},"components/NameComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"components/RadioComponent.html":{},"components/SampleModalComponent.html":{},"components/SinComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{},"components/XiconButtonComponent.html":{}}}],["captcha.component",{"_index":1217,"title":{},"body":{"modules/CaptchaModule.html":{}}}],["captcha/audio",{"_index":1189,"title":{},"body":{"injectables/CaptchaDataService.html":{},"injectables/ServerPayload.html":{}}}],["captcha_state",{"_index":5413,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["captchacomponent",{"_index":688,"title":{},"body":{"components/AccordionCommonComponent.html":{},"components/ButtonComponent.html":{},"components/ButtonGroupComponent.html":{},"modules/CaptchaModule.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"components/ConfirmTemplateComponent.html":{},"components/CoreBreadcrumbComponent.html":{},"components/DatepickerComponent.html":{},"components/DropdownComponent.html":{},"components/EmailComponent.html":{},"components/ErrorContainerComponent.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/FullNameComponent.html":{},"components/GeocoderInputComponent.html":{},"components/HeaderComponent.html":{},"components/NameComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"components/RadioComponent.html":{},"components/SampleModalComponent.html":{},"components/SinComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{},"components/XiconButtonComponent.html":{},"changelog.html":{},"coverage.html":{},"overview.html":{}}}],["captchadataservice",{"_index":1157,"title":{"injectables/CaptchaDataService.html":{}},"body":{"injectables/CaptchaDataService.html":{},"modules/CaptchaModule.html":{},"injectables/ServerPayload.html":{},"coverage.html":{},"overview.html":{}}}],["captchamodule",{"_index":1192,"title":{"modules/CaptchaModule.html":{}},"body":{"modules/CaptchaModule.html":{},"changelog.html":{},"modules.html":{},"overview.html":{},"additional-documentation/getting-started.html":{}}}],["capturefileinputelement",{"_index":3240,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["capturefileref",{"_index":2802,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["capturefilestream",{"_index":2966,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["care",{"_index":1653,"title":{},"body":{"interfaces/CommonLogMessage.html":{},"interfaces/ISpaEnvResponse.html":{}}}],["careful",{"_index":4513,"title":{},"body":{"components/WizardProgressBarComponent.html":{}}}],["case",{"_index":233,"title":{},"body":{"classes/AbstractFormControl.html":{},"classes/AbstractTestPage.html":{},"interfaces/AddrLabelList.html":{},"classes/Container.html":{},"interfaces/FileUploaderMsg.html":{},"interfaces/Maxlengths.html":{},"interfaces/ReadOnlyFields.html":{},"interfaces/WizardProgressItem.html":{},"changelog.html":{},"additional-documentation/local-development/components.html":{}}}],["cases",{"_index":1226,"title":{},"body":{"injectables/CheckCompleteBaseService.html":{},"interfaces/ISpaEnvResponse.html":{},"interfaces/PageListInterface.html":{},"components/PageSectionComponent.html":{},"components/PostalCodeComponent.html":{},"additional-documentation/getting-started.html":{}}}],["catch",{"_index":2731,"title":{},"body":{"interfaces/ErrorMessage.html":{},"components/WizardProgressBarComponent.html":{}}}],["catcherror",{"_index":317,"title":{},"body":{"classes/AbstractHttpService.html":{},"components/GeocoderInputComponent.html":{}}}],["catcherror(err",{"_index":3486,"title":{},"body":{"components/GeocoderInputComponent.html":{}}}],["categories",{"_index":5179,"title":{},"body":{"changelog.html":{}}}],["causes",{"_index":3168,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["cayman",{"_index":1951,"title":{},"body":{"interfaces/CountryList.html":{}}}],["cb65dc6",{"_index":5157,"title":{},"body":{"changelog.html":{}}}],["cbbfaa8",{"_index":4914,"title":{},"body":{"changelog.html":{}}}],["cc9910b",{"_index":4722,"title":{},"body":{"changelog.html":{}}}],["cck",{"_index":1964,"title":{},"body":{"interfaces/CountryList.html":{}}}],["cd",{"_index":2820,"title":{},"body":{"interfaces/FileUploaderMsg.html":{},"components/GeocoderInputComponent.html":{},"components/WizardProgressBarComponent.html":{},"additional-documentation/local-development/schematics.html":{}}}],["cd1cc3b",{"_index":4679,"title":{},"body":{"changelog.html":{}}}],["cdnformat",{"_index":4473,"title":{},"body":{"directives/ValidatePostalcodeDirective.html":{}}}],["cdnformat.test",{"_index":4477,"title":{},"body":{"directives/ValidatePostalcodeDirective.html":{}}}],["center",{"_index":1840,"title":{},"body":{"components/CoreBreadcrumbComponent.html":{}}}],["central",{"_index":1953,"title":{},"body":{"interfaces/CountryList.html":{}}}],["cf47d9b",{"_index":4694,"title":{},"body":{"changelog.html":{}}}],["cf962bc",{"_index":4859,"title":{},"body":{"changelog.html":{}}}],["chaange",{"_index":4523,"title":{},"body":{"components/WizardProgressBarComponent.html":{}}}],["chad",{"_index":1957,"title":{},"body":{"interfaces/CountryList.html":{}}}],["chain",{"_index":3817,"title":{},"body":{"classes/MoHCommonLibraryError.html":{}}}],["chance",{"_index":4758,"title":{},"body":{"changelog.html":{}}}],["chanfges",{"_index":5620,"title":{},"body":{"additional-documentation/local-development/components.html":{}}}],["change",{"_index":185,"title":{},"body":{"classes/AbstractFormControl.html":{},"classes/Address.html":{},"interfaces/CommonAttachmentJson.html":{},"classes/CommonImage.html":{},"classes/CommonImageProcessingError.html":{},"interfaces/CommonImageScaleFactors.html":{},"classes/CommonImageScaleFactorsImpl.html":{},"interfaces/CountryList.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"interfaces/FileUploaderMsg.html":{},"components/FormActionBarComponent.html":{},"components/GeocoderInputComponent.html":{},"components/PostalCodeComponent.html":{},"components/WizardProgressBarComponent.html":{},"components/XiconButtonComponent.html":{},"changelog.html":{},"todo.html":{},"additional-documentation/local-development/schematics.html":{}}}],["changed",{"_index":2428,"title":{},"body":{"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"interfaces/FileUploaderMsg.html":{},"components/SinComponent.html":{},"changelog.html":{}}}],["changedetection",{"_index":4492,"title":{},"body":{"components/WizardProgressBarComponent.html":{}}}],["changedetectionstrategy",{"_index":4520,"title":{},"body":{"components/WizardProgressBarComponent.html":{}}}],["changedetectionstrategy.onpush",{"_index":4493,"title":{},"body":{"components/WizardProgressBarComponent.html":{}}}],["changedetectorref",{"_index":2742,"title":{},"body":{"interfaces/FileUploaderMsg.html":{},"components/FullNameComponent.html":{},"interfaces/FullNameErrorMsg.html":{},"components/GeocoderInputComponent.html":{},"components/WizardProgressBarComponent.html":{}}}],["changelog",{"_index":4586,"title":{"changelog.html":{}},"body":{"changelog.html":{}}}],["changelog.md",{"_index":5212,"title":{},"body":{"changelog.html":{}}}],["changes",{"_index":1091,"title":{},"body":{"components/ButtonComponent.html":{},"components/DatepickerComponent.html":{},"components/GeocoderInputComponent.html":{},"components/HeaderComponent.html":{},"components/PasswordComponent.html":{},"components/WizardProgressBarComponent.html":{},"changelog.html":{},"todo.html":{},"additional-documentation/local-development/schematics.html":{}}}],["changes.address",{"_index":3488,"title":{},"body":{"components/GeocoderInputComponent.html":{}}}],["changes.address.currentvalue",{"_index":3496,"title":{},"body":{"components/GeocoderInputComponent.html":{}}}],["changes.address.currentvalue._geocoderfulladdress",{"_index":3489,"title":{},"body":{"components/GeocoderInputComponent.html":{}}}],["changes.password",{"_index":4035,"title":{},"body":{"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{}}}],["changes['countrylist",{"_index":905,"title":{},"body":{"interfaces/AddrLabelList.html":{},"interfaces/Maxlengths.html":{},"interfaces/ReadOnlyFields.html":{}}}],["changes['countrylist'].currentvalue",{"_index":906,"title":{},"body":{"interfaces/AddrLabelList.html":{},"interfaces/Maxlengths.html":{},"interfaces/ReadOnlyFields.html":{}}}],["changes['images",{"_index":2856,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["changes['images'].currentvalue",{"_index":2857,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["changes['images'].currentvalue.length",{"_index":2858,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["changes['images'].previousvalue",{"_index":2859,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["changes['images'].previousvalue.length",{"_index":2860,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["changes['provincelist",{"_index":908,"title":{},"body":{"interfaces/AddrLabelList.html":{},"interfaces/Maxlengths.html":{},"interfaces/ReadOnlyFields.html":{}}}],["changes['provincelist'].currentvalue",{"_index":909,"title":{},"body":{"interfaces/AddrLabelList.html":{},"interfaces/Maxlengths.html":{},"interfaces/ReadOnlyFields.html":{}}}],["changing",{"_index":2543,"title":{},"body":{"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"changelog.html":{}}}],["character",{"_index":3350,"title":{},"body":{"components/FullNameComponent.html":{},"interfaces/FullNameErrorMsg.html":{},"components/SinComponent.html":{}}}],["characters",{"_index":1388,"title":{},"body":{"components/CityComponent.html":{},"interfaces/CountryList.html":{},"components/NameComponent.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{},"directives/ValidateBcPostalDirective.html":{},"directives/ValidateCityDirective.html":{},"directives/ValidateNameDirective.html":{},"directives/ValidatePostalcodeDirective.html":{},"directives/ValidateRegionDirective.html":{},"directives/ValidateStreetDirective.html":{},"changelog.html":{}}}],["che",{"_index":2332,"title":{},"body":{"interfaces/CountryList.html":{}}}],["check",{"_index":507,"title":{},"body":{"classes/AbstractTestPage.html":{},"injectables/CheckCompleteBaseService.html":{},"interfaces/CommonAttachmentJson.html":{},"classes/CommonImage.html":{},"classes/CommonImageProcessingError.html":{},"interfaces/CommonImageScaleFactors.html":{},"classes/CommonImageScaleFactorsImpl.html":{},"directives/DuplicateCheckDirective.html":{},"interfaces/FileUploaderMsg.html":{},"interfaces/PageListInterface.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"changelog.html":{},"additional-documentation/getting-started.html":{}}}],["check.directive",{"_index":4332,"title":{},"body":{"modules/SharedCoreModule.html":{}}}],["check.directive.ts",{"_index":2665,"title":{},"body":{"directives/DuplicateCheckDirective.html":{},"coverage.html":{}}}],["check.directive.ts:32",{"_index":2670,"title":{},"body":{"directives/DuplicateCheckDirective.html":{}}}],["check.directive.ts:34",{"_index":2673,"title":{},"body":{"directives/DuplicateCheckDirective.html":{}}}],["check.service",{"_index":1269,"title":{},"body":{"injectables/CheckCompleteBaseService.html":{},"interfaces/PageListInterface.html":{},"guards/RouteGuardService.html":{}}}],["check.service.ts",{"_index":386,"title":{},"body":{"injectables/AbstractPgCheckService.html":{},"coverage.html":{}}}],["check.service.ts:25",{"_index":393,"title":{},"body":{"injectables/AbstractPgCheckService.html":{}}}],["check.service.ts:26",{"_index":396,"title":{},"body":{"injectables/AbstractPgCheckService.html":{}}}],["check.service.ts:27",{"_index":397,"title":{},"body":{"injectables/AbstractPgCheckService.html":{}}}],["check.service.ts:28",{"_index":394,"title":{},"body":{"injectables/AbstractPgCheckService.html":{}}}],["check/duplicate",{"_index":2664,"title":{},"body":{"directives/DuplicateCheckDirective.html":{},"modules/SharedCoreModule.html":{},"coverage.html":{}}}],["checkbox",{"_index":487,"title":{},"body":{"classes/AbstractTestPage.html":{},"components/ButtonGroupComponent.html":{},"components/CheckboxComponent.html":{},"interfaces/ISpaEnvResponse.html":{},"changelog.html":{}}}],["checkbox'},{'name",{"_index":691,"title":{},"body":{"components/AccordionCommonComponent.html":{},"components/ButtonComponent.html":{},"components/ButtonGroupComponent.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"components/ConfirmTemplateComponent.html":{},"components/CoreBreadcrumbComponent.html":{},"components/DatepickerComponent.html":{},"components/DropdownComponent.html":{},"components/EmailComponent.html":{},"components/ErrorContainerComponent.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/FullNameComponent.html":{},"components/GeocoderInputComponent.html":{},"components/HeaderComponent.html":{},"components/NameComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"components/RadioComponent.html":{},"components/SampleModalComponent.html":{},"components/SinComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{},"components/XiconButtonComponent.html":{}}}],["checkbox.component.html",{"_index":1306,"title":{},"body":{"components/CheckboxComponent.html":{}}}],["checkbox.component.scss",{"_index":1305,"title":{},"body":{"components/CheckboxComponent.html":{}}}],["checkbox.component.ts",{"_index":5482,"title":{},"body":{"todo.html":{}}}],["checkboxcomponent",{"_index":690,"title":{"components/CheckboxComponent.html":{}},"body":{"components/AccordionCommonComponent.html":{},"components/ButtonComponent.html":{},"components/ButtonGroupComponent.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"components/ConfirmTemplateComponent.html":{},"components/CoreBreadcrumbComponent.html":{},"components/DatepickerComponent.html":{},"components/DropdownComponent.html":{},"components/EmailComponent.html":{},"components/ErrorContainerComponent.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/FullNameComponent.html":{},"components/GeocoderInputComponent.html":{},"components/HeaderComponent.html":{},"components/NameComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"components/RadioComponent.html":{},"components/SampleModalComponent.html":{},"modules/SharedCoreModule.html":{},"components/SinComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{},"components/XiconButtonComponent.html":{},"coverage.html":{},"overview.html":{}}}],["checkcompletebaseservice",{"_index":1221,"title":{"injectables/CheckCompleteBaseService.html":{}},"body":{"injectables/CheckCompleteBaseService.html":{},"interfaces/PageListInterface.html":{},"coverage.html":{}}}],["checkconsentmodal",{"_index":450,"title":{},"body":{"classes/AbstractTestPage.html":{}}}],["checkforduplicates",{"_index":2676,"title":{},"body":{"directives/DuplicateCheckDirective.html":{},"coverage.html":{}}}],["checkimagedimensions(file",{"_index":3256,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["checkimageexists(file",{"_index":2840,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["checking",{"_index":1275,"title":{},"body":{"injectables/CheckCompleteBaseService.html":{},"interfaces/PageListInterface.html":{}}}],["checks",{"_index":494,"title":{},"body":{"classes/AbstractTestPage.html":{}}}],["checksum",{"_index":1530,"title":{},"body":{"interfaces/CommonAttachmentJson.html":{},"classes/CommonImage.html":{},"classes/CommonImageProcessingError.html":{},"interfaces/CommonImageScaleFactors.html":{},"classes/CommonImageScaleFactorsImpl.html":{}}}],["child",{"_index":3651,"title":{},"body":{"interfaces/ISpaEnvResponse.html":{},"components/PageSectionComponent.html":{}}}],["chile",{"_index":1959,"title":{},"body":{"interfaces/CountryList.html":{}}}],["china",{"_index":1961,"title":{},"body":{"interfaces/CountryList.html":{}}}],["chl",{"_index":1958,"title":{},"body":{"interfaces/CountryList.html":{}}}],["chn",{"_index":1960,"title":{},"body":{"interfaces/CountryList.html":{}}}],["choice",{"_index":601,"title":{},"body":{"classes/AbstractTestPage.html":{}}}],["christmas",{"_index":1963,"title":{},"body":{"interfaces/CountryList.html":{}}}],["circle",{"_index":4953,"title":{},"body":{"changelog.html":{}}}],["city",{"_index":786,"title":{},"body":{"interfaces/AddrLabelList.html":{},"classes/Address.html":{},"components/CityComponent.html":{},"interfaces/CountryList.html":{},"interfaces/GeoAddressResult.html":{},"injectables/GeocoderService.html":{},"interfaces/Maxlengths.html":{},"interfaces/ReadOnlyFields.html":{},"directives/ValidateCityDirective.html":{},"changelog.html":{}}}],["city'},{'name",{"_index":693,"title":{},"body":{"components/AccordionCommonComponent.html":{},"components/ButtonComponent.html":{},"components/ButtonGroupComponent.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"components/ConfirmTemplateComponent.html":{},"components/CoreBreadcrumbComponent.html":{},"components/DatepickerComponent.html":{},"components/DropdownComponent.html":{},"components/EmailComponent.html":{},"components/ErrorContainerComponent.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/FullNameComponent.html":{},"components/GeocoderInputComponent.html":{},"components/HeaderComponent.html":{},"components/NameComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"components/RadioComponent.html":{},"components/SampleModalComponent.html":{},"components/SinComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{},"components/XiconButtonComponent.html":{}}}],["city.component.html",{"_index":1359,"title":{},"body":{"components/CityComponent.html":{}}}],["city.component.scss",{"_index":1358,"title":{},"body":{"components/CityComponent.html":{}}}],["city.directive",{"_index":4338,"title":{},"body":{"modules/SharedCoreModule.html":{}}}],["city.directive.ts",{"_index":4457,"title":{},"body":{"directives/ValidateCityDirective.html":{},"coverage.html":{}}}],["city.directive.ts:26",{"_index":4459,"title":{},"body":{"directives/ValidateCityDirective.html":{}}}],["city/country/province",{"_index":5143,"title":{},"body":{"changelog.html":{}}}],["city_",{"_index":1368,"title":{},"body":{"components/CityComponent.html":{}}}],["citycomponent",{"_index":692,"title":{"components/CityComponent.html":{}},"body":{"components/AccordionCommonComponent.html":{},"components/ButtonComponent.html":{},"components/ButtonGroupComponent.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"components/ConfirmTemplateComponent.html":{},"components/CoreBreadcrumbComponent.html":{},"components/DatepickerComponent.html":{},"components/DropdownComponent.html":{},"components/EmailComponent.html":{},"components/ErrorContainerComponent.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/FullNameComponent.html":{},"components/GeocoderInputComponent.html":{},"components/HeaderComponent.html":{},"components/NameComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"components/RadioComponent.html":{},"components/SampleModalComponent.html":{},"modules/SharedCoreModule.html":{},"components/SinComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{},"components/XiconButtonComponent.html":{},"coverage.html":{},"overview.html":{}}}],["cityindex",{"_index":3411,"title":{},"body":{"interfaces/GeoAddressResult.html":{},"injectables/GeocoderService.html":{}}}],["civ",{"_index":1980,"title":{},"body":{"interfaces/CountryList.html":{}}}],["class",{"_index":0,"title":{"classes/AbstractBaseForm.html":{},"classes/AbstractForm.html":{},"classes/AbstractFormControl.html":{},"classes/AbstractHttpService.html":{},"classes/AbstractReactForm.html":{},"classes/AbstractTestPage.html":{},"classes/Address.html":{},"classes/Base.html":{},"classes/CommonImage.html":{},"classes/CommonImageProcessingError.html":{},"classes/CommonImageScaleFactorsImpl.html":{},"classes/Container.html":{},"classes/MoHCommonLibraryError.html":{},"classes/Person.html":{}},"body":{"classes/AbstractBaseForm.html":{},"classes/AbstractForm.html":{},"classes/AbstractFormControl.html":{},"classes/AbstractHttpService.html":{},"injectables/AbstractPageGuardService.html":{},"injectables/AbstractPgCheckService.html":{},"classes/AbstractReactForm.html":{},"classes/AbstractTestPage.html":{},"components/AccordionCommonComponent.html":{},"interfaces/AddrLabelList.html":{},"classes/Address.html":{},"classes/Base.html":{},"components/ButtonComponent.html":{},"components/ButtonGroupComponent.html":{},"injectables/CaptchaDataService.html":{},"modules/CaptchaModule.html":{},"injectables/CheckCompleteBaseService.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"interfaces/CommonAttachmentJson.html":{},"classes/CommonImage.html":{},"classes/CommonImageProcessingError.html":{},"interfaces/CommonImageScaleFactors.html":{},"classes/CommonImageScaleFactorsImpl.html":{},"interfaces/CommonLogMessage.html":{},"components/ConfirmTemplateComponent.html":{},"classes/Container.html":{},"injectables/ContainerService.html":{},"components/CoreBreadcrumbComponent.html":{},"interfaces/CountryList.html":{},"interfaces/DateErrorMsg.html":{},"directives/DateFieldFormatDirective.html":{},"components/DatepickerComponent.html":{},"injectables/DefaultPageGuardService.html":{},"components/DropdownComponent.html":{},"directives/DuplicateCheckDirective.html":{},"components/EmailComponent.html":{},"components/ErrorContainerComponent.html":{},"interfaces/FileUploaderMsg.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/FullNameComponent.html":{},"interfaces/FullNameErrorMsg.html":{},"interfaces/GeoAddressResult.html":{},"components/GeocoderInputComponent.html":{},"injectables/GeocoderService.html":{},"components/HeaderComponent.html":{},"interfaces/IRadioItems.html":{},"interfaces/ISpaEnvResponse.html":{},"guards/LoadPageGuardService.html":{},"interfaces/Maxlengths.html":{},"classes/MoHCommonLibraryError.html":{},"components/NameComponent.html":{},"components/PageFrameworkComponent.html":{},"interfaces/PageList.html":{},"interfaces/PageListInterface.html":{},"components/PageSectionComponent.html":{},"injectables/PageStateService.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"classes/Person.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{},"components/RadioComponent.html":{},"interfaces/ReadOnlyFields.html":{},"guards/RouteGuardService.html":{},"interfaces/SampleImageInterface.html":{},"components/SampleModalComponent.html":{},"injectables/ServerPayload.html":{},"modules/SharedCoreModule.html":{},"components/SinComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"directives/ValidateBcPostalDirective.html":{},"directives/ValidateCityDirective.html":{},"directives/ValidateNameDirective.html":{},"directives/ValidatePostalcodeDirective.html":{},"directives/ValidateRegionDirective.html":{},"directives/ValidateStreetDirective.html":{},"components/WizardProgressBarComponent.html":{},"interfaces/WizardProgressItem.html":{},"components/XiconButtonComponent.html":{},"changelog.html":{},"coverage.html":{},"additional-documentation/getting-started.html":{}}}],["classes",{"_index":2,"title":{},"body":{"classes/AbstractBaseForm.html":{},"classes/AbstractForm.html":{},"classes/AbstractFormControl.html":{},"classes/AbstractHttpService.html":{},"classes/AbstractReactForm.html":{},"classes/AbstractTestPage.html":{},"classes/Address.html":{},"classes/Base.html":{},"classes/CommonImage.html":{},"classes/CommonImageProcessingError.html":{},"classes/CommonImageScaleFactorsImpl.html":{},"classes/Container.html":{},"components/FormSubmitBarComponent.html":{},"classes/MoHCommonLibraryError.html":{},"classes/Person.html":{},"changelog.html":{},"overview.html":{},"additional-documentation/getting-started.html":{}}}],["classval",{"_index":501,"title":{},"body":{"classes/AbstractTestPage.html":{}}}],["clean",{"_index":4400,"title":{},"body":{"components/SinComponent.html":{},"changelog.html":{}}}],["cleanup",{"_index":4655,"title":{},"body":{"changelog.html":{}}}],["clear",{"_index":888,"title":{},"body":{"interfaces/AddrLabelList.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"components/GeocoderInputComponent.html":{},"interfaces/Maxlengths.html":{},"interfaces/ReadOnlyFields.html":{},"changelog.html":{}}}],["clearable",{"_index":2647,"title":{},"body":{"components/DropdownComponent.html":{},"changelog.html":{}}}],["clearbutton",{"_index":2471,"title":{},"body":{"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{}}}],["clearcompletepages",{"_index":3927,"title":{},"body":{"injectables/PageStateService.html":{}}}],["cleardate",{"_index":2541,"title":{},"body":{"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{}}}],["cleared",{"_index":2490,"title":{},"body":{"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{}}}],["clearing",{"_index":4646,"title":{},"body":{"changelog.html":{}}}],["clears",{"_index":4899,"title":{},"body":{"changelog.html":{}}}],["cli",{"_index":5551,"title":{},"body":{"additional-documentation/local-development/schematics.html":{}}}],["click",{"_index":672,"title":{},"body":{"components/AccordionCommonComponent.html":{},"interfaces/FileUploaderMsg.html":{},"components/XiconButtonComponent.html":{},"changelog.html":{},"todo.html":{}}}],["click)=\"showfullsizeview",{"_index":4442,"title":{},"body":{"components/ThumbnailComponent.html":{}}}],["clickbutton",{"_index":451,"title":{},"body":{"classes/AbstractTestPage.html":{}}}],["clickbutton(classval",{"_index":499,"title":{},"body":{"classes/AbstractTestPage.html":{}}}],["clickcheckbox",{"_index":452,"title":{},"body":{"classes/AbstractTestPage.html":{}}}],["clickcheckbox(refnameval",{"_index":505,"title":{},"body":{"classes/AbstractTestPage.html":{}}}],["clickconsentmodalcontinue",{"_index":453,"title":{},"body":{"classes/AbstractTestPage.html":{}}}],["clickevent",{"_index":4566,"title":{},"body":{"components/XiconButtonComponent.html":{},"changelog.html":{},"todo.html":{}}}],["clicking",{"_index":471,"title":{},"body":{"classes/AbstractTestPage.html":{}}}],["clicklink",{"_index":454,"title":{},"body":{"classes/AbstractTestPage.html":{}}}],["clicklink(label",{"_index":513,"title":{},"body":{"classes/AbstractTestPage.html":{}}}],["clicks",{"_index":53,"title":{},"body":{"classes/AbstractBaseForm.html":{},"classes/AbstractForm.html":{},"classes/AbstractReactForm.html":{},"classes/AbstractTestPage.html":{},"interfaces/FileUploaderMsg.html":{}}}],["clickskiptocontent",{"_index":455,"title":{},"body":{"classes/AbstractTestPage.html":{}}}],["client",{"_index":284,"title":{},"body":{"classes/AbstractHttpService.html":{},"interfaces/CommonLogMessage.html":{},"injectables/GeocoderService.html":{},"interfaces/ISpaEnvResponse.html":{}}}],["clito",{"_index":5554,"title":{},"body":{"additional-documentation/local-development/schematics.html":{}}}],["close",{"_index":3662,"title":{},"body":{"interfaces/ISpaEnvResponse.html":{},"components/SampleModalComponent.html":{}}}],["closemodal",{"_index":4255,"title":{},"body":{"interfaces/SampleImageInterface.html":{},"components/SampleModalComponent.html":{}}}],["closes",{"_index":4941,"title":{},"body":{"changelog.html":{}}}],["cluster_captchamodule",{"_index":1196,"title":{},"body":{"modules/CaptchaModule.html":{},"overview.html":{}}}],["cluster_captchamodule_declarations",{"_index":1197,"title":{},"body":{"modules/CaptchaModule.html":{},"overview.html":{}}}],["cluster_captchamodule_exports",{"_index":1198,"title":{},"body":{"modules/CaptchaModule.html":{},"overview.html":{}}}],["cluster_captchamodule_providers",{"_index":1199,"title":{},"body":{"modules/CaptchaModule.html":{},"overview.html":{}}}],["cluster_sharedcoremodule",{"_index":4268,"title":{},"body":{"modules/SharedCoreModule.html":{},"overview.html":{}}}],["cluster_sharedcoremodule_declarations",{"_index":4269,"title":{},"body":{"modules/SharedCoreModule.html":{},"overview.html":{}}}],["cluster_sharedcoremodule_exports",{"_index":4270,"title":{},"body":{"modules/SharedCoreModule.html":{},"overview.html":{}}}],["cmr",{"_index":1945,"title":{},"body":{"interfaces/CountryList.html":{}}}],["cnt",{"_index":3880,"title":{},"body":{"interfaces/PageList.html":{},"injectables/PageStateService.html":{}}}],["coard",{"_index":5443,"title":{},"body":{"index.html":{}}}],["cocos",{"_index":1965,"title":{},"body":{"interfaces/CountryList.html":{}}}],["cod",{"_index":1973,"title":{},"body":{"interfaces/CountryList.html":{}}}],["code",{"_index":857,"title":{},"body":{"interfaces/AddrLabelList.html":{},"interfaces/CommonLogMessage.html":{},"interfaces/FileUploaderMsg.html":{},"components/HeaderComponent.html":{},"interfaces/ISpaEnvResponse.html":{},"interfaces/Maxlengths.html":{},"components/PostalCodeComponent.html":{},"interfaces/ReadOnlyFields.html":{},"directives/ValidateBcPostalDirective.html":{},"directives/ValidatePostalcodeDirective.html":{},"changelog.html":{},"additional-documentation/getting-started.html":{},"additional-documentation/local-development/schematics.html":{},"additional-documentation/local-development/components.html":{}}}],["code'},{'name",{"_index":739,"title":{},"body":{"components/AccordionCommonComponent.html":{},"components/ButtonComponent.html":{},"components/ButtonGroupComponent.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"components/ConfirmTemplateComponent.html":{},"components/CoreBreadcrumbComponent.html":{},"components/DatepickerComponent.html":{},"components/DropdownComponent.html":{},"components/EmailComponent.html":{},"components/ErrorContainerComponent.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/FullNameComponent.html":{},"components/GeocoderInputComponent.html":{},"components/HeaderComponent.html":{},"components/NameComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"components/RadioComponent.html":{},"components/SampleModalComponent.html":{},"components/SinComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{},"components/XiconButtonComponent.html":{}}}],["code.component",{"_index":4295,"title":{},"body":{"modules/SharedCoreModule.html":{}}}],["code.component.html",{"_index":4122,"title":{},"body":{"components/PostalCodeComponent.html":{}}}],["code.component.scss",{"_index":4121,"title":{},"body":{"components/PostalCodeComponent.html":{}}}],["code.component.ts",{"_index":4120,"title":{},"body":{"components/PostalCodeComponent.html":{},"coverage.html":{}}}],["code.component.ts:101",{"_index":4145,"title":{},"body":{"components/PostalCodeComponent.html":{}}}],["code.component.ts:105",{"_index":4143,"title":{},"body":{"components/PostalCodeComponent.html":{}}}],["code.component.ts:15",{"_index":4129,"title":{},"body":{"components/PostalCodeComponent.html":{}}}],["code.component.ts:16",{"_index":4127,"title":{},"body":{"components/PostalCodeComponent.html":{}}}],["code.component.ts:17",{"_index":4132,"title":{},"body":{"components/PostalCodeComponent.html":{}}}],["code.component.ts:18",{"_index":4131,"title":{},"body":{"components/PostalCodeComponent.html":{}}}],["code.component.ts:19",{"_index":4126,"title":{},"body":{"components/PostalCodeComponent.html":{}}}],["code.component.ts:20",{"_index":4128,"title":{},"body":{"components/PostalCodeComponent.html":{}}}],["code.component.ts:23",{"_index":4133,"title":{},"body":{"components/PostalCodeComponent.html":{}}}],["code.component.ts:29",{"_index":4157,"title":{},"body":{"components/PostalCodeComponent.html":{}}}],["code.component.ts:34",{"_index":4135,"title":{},"body":{"components/PostalCodeComponent.html":{}}}],["code.component.ts:35",{"_index":4134,"title":{},"body":{"components/PostalCodeComponent.html":{}}}],["code.component.ts:37",{"_index":4156,"title":{},"body":{"components/PostalCodeComponent.html":{}}}],["code.component.ts:38",{"_index":4155,"title":{},"body":{"components/PostalCodeComponent.html":{}}}],["code.component.ts:40",{"_index":4154,"title":{},"body":{"components/PostalCodeComponent.html":{}}}],["code.component.ts:47",{"_index":4147,"title":{},"body":{"components/PostalCodeComponent.html":{}}}],["code.component.ts:48",{"_index":4125,"title":{},"body":{"components/PostalCodeComponent.html":{}}}],["code.component.ts:50",{"_index":4148,"title":{},"body":{"components/PostalCodeComponent.html":{}}}],["code.component.ts:59",{"_index":4136,"title":{},"body":{"components/PostalCodeComponent.html":{}}}],["code.component.ts:63",{"_index":4139,"title":{},"body":{"components/PostalCodeComponent.html":{}}}],["code.component.ts:73",{"_index":4138,"title":{},"body":{"components/PostalCodeComponent.html":{}}}],["code.component.ts:78",{"_index":4146,"title":{},"body":{"components/PostalCodeComponent.html":{}}}],["code.component.ts:85",{"_index":4140,"title":{},"body":{"components/PostalCodeComponent.html":{}}}],["code.component.ts:90",{"_index":4141,"title":{},"body":{"components/PostalCodeComponent.html":{}}}],["code.component.ts:94",{"_index":4142,"title":{},"body":{"components/PostalCodeComponent.html":{}}}],["code/postal",{"_index":4119,"title":{},"body":{"components/PostalCodeComponent.html":{},"modules/SharedCoreModule.html":{},"coverage.html":{}}}],["code/validate",{"_index":4326,"title":{},"body":{"modules/SharedCoreModule.html":{},"directives/ValidateBcPostalDirective.html":{},"directives/ValidatePostalcodeDirective.html":{},"coverage.html":{}}}],["codes",{"_index":1706,"title":{},"body":{"components/ConfirmTemplateComponent.html":{}}}],["cog",{"_index":1971,"title":{},"body":{"interfaces/CountryList.html":{}}}],["cok",{"_index":1975,"title":{},"body":{"interfaces/CountryList.html":{}}}],["col",{"_index":1967,"title":{},"body":{"interfaces/CountryList.html":{}}}],["collected",{"_index":3671,"title":{},"body":{"interfaces/ISpaEnvResponse.html":{}}}],["collection",{"_index":490,"title":{},"body":{"classes/AbstractTestPage.html":{},"interfaces/ISpaEnvResponse.html":{},"additional-documentation/local-development/components.html":{}}}],["colombia",{"_index":1968,"title":{},"body":{"interfaces/CountryList.html":{}}}],["color",{"_index":1812,"title":{},"body":{"injectables/ContainerService.html":{},"changelog.html":{}}}],["colour",{"_index":1095,"title":{},"body":{"components/ButtonComponent.html":{},"changelog.html":{},"todo.html":{}}}],["colours",{"_index":5129,"title":{},"body":{"changelog.html":{}}}],["columbia",{"_index":4153,"title":{},"body":{"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{},"license.html":{}}}],["column",{"_index":3861,"title":{},"body":{"components/PageFrameworkComponent.html":{}}}],["com",{"_index":1969,"title":{},"body":{"interfaces/CountryList.html":{}}}],["come",{"_index":3667,"title":{},"body":{"interfaces/ISpaEnvResponse.html":{},"components/PageFrameworkComponent.html":{}}}],["comes",{"_index":5058,"title":{},"body":{"changelog.html":{}}}],["command",{"_index":4793,"title":{},"body":{"changelog.html":{},"additional-documentation/local-development/schematics.html":{},"additional-documentation/local-development/components.html":{}}}],["commas",{"_index":3410,"title":{},"body":{"interfaces/GeoAddressResult.html":{},"injectables/GeocoderService.html":{}}}],["commit",{"_index":4989,"title":{},"body":{"changelog.html":{}}}],["committed",{"_index":5080,"title":{},"body":{"changelog.html":{}}}],["commmon",{"_index":5167,"title":{},"body":{"changelog.html":{},"additional-documentation/local-development/components.html":{}}}],["common",{"_index":435,"title":{},"body":{"classes/AbstractTestPage.html":{},"components/AccordionCommonComponent.html":{},"interfaces/AddrLabelList.html":{},"components/ButtonComponent.html":{},"components/ButtonGroupComponent.html":{},"modules/CaptchaModule.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"components/ConfirmTemplateComponent.html":{},"components/CoreBreadcrumbComponent.html":{},"interfaces/CountryList.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"components/DropdownComponent.html":{},"components/EmailComponent.html":{},"components/ErrorContainerComponent.html":{},"interfaces/FileUploaderMsg.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/FullNameComponent.html":{},"interfaces/FullNameErrorMsg.html":{},"components/GeocoderInputComponent.html":{},"components/HeaderComponent.html":{},"interfaces/IRadioItems.html":{},"interfaces/ISpaEnvResponse.html":{},"interfaces/Maxlengths.html":{},"components/NameComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{},"components/RadioComponent.html":{},"interfaces/ReadOnlyFields.html":{},"interfaces/SampleImageInterface.html":{},"components/SampleModalComponent.html":{},"components/SinComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{},"components/XiconButtonComponent.html":{},"changelog.html":{},"index.html":{},"todo.html":{},"additional-documentation/getting-started.html":{},"additional-documentation/local-development/schematics.html":{},"additional-documentation/local-development/components.html":{}}}],["commonattachmentjson",{"_index":1473,"title":{"interfaces/CommonAttachmentJson.html":{}},"body":{"interfaces/CommonAttachmentJson.html":{},"classes/CommonImage.html":{},"classes/CommonImageProcessingError.html":{},"interfaces/CommonImageScaleFactors.html":{},"classes/CommonImageScaleFactorsImpl.html":{},"coverage.html":{}}}],["commondatefieldformat",{"_index":2551,"title":{},"body":{"directives/DateFieldFormatDirective.html":{}}}],["commondatefieldformat]'},{'name",{"_index":761,"title":{},"body":{"components/AccordionCommonComponent.html":{},"components/ButtonComponent.html":{},"components/ButtonGroupComponent.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"components/ConfirmTemplateComponent.html":{},"components/CoreBreadcrumbComponent.html":{},"components/DatepickerComponent.html":{},"components/DropdownComponent.html":{},"components/EmailComponent.html":{},"components/ErrorContainerComponent.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/FullNameComponent.html":{},"components/GeocoderInputComponent.html":{},"components/HeaderComponent.html":{},"components/NameComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"components/RadioComponent.html":{},"components/SampleModalComponent.html":{},"components/SinComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{},"components/XiconButtonComponent.html":{}}}],["commonduplicatecheck",{"_index":2667,"title":{},"body":{"directives/DuplicateCheckDirective.html":{},"coverage.html":{}}}],["commonduplicatecheck]'},{'name",{"_index":763,"title":{},"body":{"components/AccordionCommonComponent.html":{},"components/ButtonComponent.html":{},"components/ButtonGroupComponent.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"components/ConfirmTemplateComponent.html":{},"components/CoreBreadcrumbComponent.html":{},"components/DatepickerComponent.html":{},"components/DropdownComponent.html":{},"components/EmailComponent.html":{},"components/ErrorContainerComponent.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/FullNameComponent.html":{},"components/GeocoderInputComponent.html":{},"components/HeaderComponent.html":{},"components/NameComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"components/RadioComponent.html":{},"components/SampleModalComponent.html":{},"components/SinComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{},"components/XiconButtonComponent.html":{}}}],["commonformactionbar",{"_index":3857,"title":{},"body":{"components/PageFrameworkComponent.html":{}}}],["commongeocoderinput",{"_index":4814,"title":{},"body":{"changelog.html":{}}}],["commonimage",{"_index":295,"title":{"classes/CommonImage.html":{}},"body":{"classes/AbstractHttpService.html":{},"interfaces/CommonAttachmentJson.html":{},"classes/CommonImage.html":{},"classes/CommonImageProcessingError.html":{},"interfaces/CommonImageScaleFactors.html":{},"classes/CommonImageScaleFactorsImpl.html":{},"interfaces/FileUploaderMsg.html":{},"injectables/GeocoderService.html":{},"components/ThumbnailComponent.html":{},"changelog.html":{},"coverage.html":{},"additional-documentation/getting-started.html":{}}}],["commonimageerror",{"_index":1483,"title":{},"body":{"interfaces/CommonAttachmentJson.html":{},"classes/CommonImage.html":{},"classes/CommonImageProcessingError.html":{},"interfaces/CommonImageScaleFactors.html":{},"classes/CommonImageScaleFactorsImpl.html":{},"interfaces/FileUploaderMsg.html":{},"miscellaneous/enumerations.html":{},"additional-documentation/getting-started.html":{}}}],["commonimageerror.cannotopen",{"_index":3005,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["commonimageerror.cannotopenpdf",{"_index":3010,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["commonimageerror.pdfnotsupported",{"_index":3229,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["commonimageerror.toobig",{"_index":3002,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["commonimageprocessingerror",{"_index":1492,"title":{"classes/CommonImageProcessingError.html":{}},"body":{"interfaces/CommonAttachmentJson.html":{},"classes/CommonImage.html":{},"classes/CommonImageProcessingError.html":{},"interfaces/CommonImageScaleFactors.html":{},"classes/CommonImageScaleFactorsImpl.html":{},"interfaces/FileUploaderMsg.html":{},"coverage.html":{}}}],["commonimageprocessingerror(commonimageerror.cannotopen",{"_index":3199,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["commonimageprocessingerror(commonimageerror.cannotopenpdf",{"_index":3054,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["commonimageprocessingerror(commonimageerror.toobig",{"_index":3142,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["commonimagescalefactors",{"_index":1537,"title":{"interfaces/CommonImageScaleFactors.html":{}},"body":{"interfaces/CommonAttachmentJson.html":{},"classes/CommonImage.html":{},"classes/CommonImageProcessingError.html":{},"interfaces/CommonImageScaleFactors.html":{},"classes/CommonImageScaleFactorsImpl.html":{},"interfaces/FileUploaderMsg.html":{},"coverage.html":{}}}],["commonimagescalefactorsimpl",{"_index":1541,"title":{"classes/CommonImageScaleFactorsImpl.html":{}},"body":{"interfaces/CommonAttachmentJson.html":{},"classes/CommonImage.html":{},"classes/CommonImageProcessingError.html":{},"interfaces/CommonImageScaleFactors.html":{},"classes/CommonImageScaleFactorsImpl.html":{},"interfaces/FileUploaderMsg.html":{},"coverage.html":{},"additional-documentation/getting-started.html":{}}}],["commonimagescalefactorsimpl(1",{"_index":2977,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["commonlogevents",{"_index":1580,"title":{},"body":{"interfaces/CommonLogMessage.html":{},"changelog.html":{},"miscellaneous/enumerations.html":{}}}],["commonlogevents.error",{"_index":1629,"title":{},"body":{"interfaces/CommonLogMessage.html":{}}}],["commonlogger",{"_index":1587,"title":{},"body":{"interfaces/CommonLogMessage.html":{},"interfaces/ISpaEnvResponse.html":{},"changelog.html":{},"coverage.html":{}}}],["commonlogmessage",{"_index":1572,"title":{"interfaces/CommonLogMessage.html":{}},"body":{"interfaces/CommonLogMessage.html":{},"coverage.html":{}}}],["commonmodule",{"_index":1219,"title":{},"body":{"modules/CaptchaModule.html":{},"modules/SharedCoreModule.html":{}}}],["commonphnvalidation",{"_index":4720,"title":{},"body":{"changelog.html":{}}}],["commonvalidatebcpostal",{"_index":4452,"title":{},"body":{"directives/ValidateBcPostalDirective.html":{},"coverage.html":{}}}],["commonvalidatebcpostal]'},{'name",{"_index":765,"title":{},"body":{"components/AccordionCommonComponent.html":{},"components/ButtonComponent.html":{},"components/ButtonGroupComponent.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"components/ConfirmTemplateComponent.html":{},"components/CoreBreadcrumbComponent.html":{},"components/DatepickerComponent.html":{},"components/DropdownComponent.html":{},"components/EmailComponent.html":{},"components/ErrorContainerComponent.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/FullNameComponent.html":{},"components/GeocoderInputComponent.html":{},"components/HeaderComponent.html":{},"components/NameComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"components/RadioComponent.html":{},"components/SampleModalComponent.html":{},"components/SinComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{},"components/XiconButtonComponent.html":{}}}],["commonvalidatecity",{"_index":4458,"title":{},"body":{"directives/ValidateCityDirective.html":{},"coverage.html":{}}}],["commonvalidatecity]'},{'name",{"_index":767,"title":{},"body":{"components/AccordionCommonComponent.html":{},"components/ButtonComponent.html":{},"components/ButtonGroupComponent.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"components/ConfirmTemplateComponent.html":{},"components/CoreBreadcrumbComponent.html":{},"components/DatepickerComponent.html":{},"components/DropdownComponent.html":{},"components/EmailComponent.html":{},"components/ErrorContainerComponent.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/FullNameComponent.html":{},"components/GeocoderInputComponent.html":{},"components/HeaderComponent.html":{},"components/NameComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"components/RadioComponent.html":{},"components/SampleModalComponent.html":{},"components/SinComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{},"components/XiconButtonComponent.html":{}}}],["commonvalidatename",{"_index":4464,"title":{},"body":{"directives/ValidateNameDirective.html":{},"coverage.html":{}}}],["commonvalidatename]'},{'name",{"_index":769,"title":{},"body":{"components/AccordionCommonComponent.html":{},"components/ButtonComponent.html":{},"components/ButtonGroupComponent.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"components/ConfirmTemplateComponent.html":{},"components/CoreBreadcrumbComponent.html":{},"components/DatepickerComponent.html":{},"components/DropdownComponent.html":{},"components/EmailComponent.html":{},"components/ErrorContainerComponent.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/FullNameComponent.html":{},"components/GeocoderInputComponent.html":{},"components/HeaderComponent.html":{},"components/NameComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"components/RadioComponent.html":{},"components/SampleModalComponent.html":{},"components/SinComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{},"components/XiconButtonComponent.html":{}}}],["commonvalidatephone",{"_index":4768,"title":{},"body":{"changelog.html":{}}}],["commonvalidatepostalcode",{"_index":4467,"title":{},"body":{"directives/ValidatePostalcodeDirective.html":{},"coverage.html":{}}}],["commonvalidatepostalcode]'},{'name",{"_index":771,"title":{},"body":{"components/AccordionCommonComponent.html":{},"components/ButtonComponent.html":{},"components/ButtonGroupComponent.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"components/ConfirmTemplateComponent.html":{},"components/CoreBreadcrumbComponent.html":{},"components/DatepickerComponent.html":{},"components/DropdownComponent.html":{},"components/EmailComponent.html":{},"components/ErrorContainerComponent.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/FullNameComponent.html":{},"components/GeocoderInputComponent.html":{},"components/HeaderComponent.html":{},"components/NameComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"components/RadioComponent.html":{},"components/SampleModalComponent.html":{},"components/SinComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{},"components/XiconButtonComponent.html":{}}}],["commonvalidateregion",{"_index":4485,"title":{},"body":{"directives/ValidateRegionDirective.html":{},"coverage.html":{}}}],["commonvalidateregion]'},{'name",{"_index":773,"title":{},"body":{"components/AccordionCommonComponent.html":{},"components/ButtonComponent.html":{},"components/ButtonGroupComponent.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"components/ConfirmTemplateComponent.html":{},"components/CoreBreadcrumbComponent.html":{},"components/DatepickerComponent.html":{},"components/DropdownComponent.html":{},"components/EmailComponent.html":{},"components/ErrorContainerComponent.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/FullNameComponent.html":{},"components/GeocoderInputComponent.html":{},"components/HeaderComponent.html":{},"components/NameComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"components/RadioComponent.html":{},"components/SampleModalComponent.html":{},"components/SinComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{},"components/XiconButtonComponent.html":{}}}],["commonvalidatesin",{"_index":4723,"title":{},"body":{"changelog.html":{}}}],["commonvalidatestreet",{"_index":775,"title":{},"body":{"components/AccordionCommonComponent.html":{},"components/ButtonComponent.html":{},"components/ButtonGroupComponent.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"components/ConfirmTemplateComponent.html":{},"components/CoreBreadcrumbComponent.html":{},"components/DatepickerComponent.html":{},"components/DropdownComponent.html":{},"components/EmailComponent.html":{},"components/ErrorContainerComponent.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/FullNameComponent.html":{},"components/GeocoderInputComponent.html":{},"components/HeaderComponent.html":{},"components/NameComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"components/RadioComponent.html":{},"components/SampleModalComponent.html":{},"components/SinComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"directives/ValidateStreetDirective.html":{},"components/WizardProgressBarComponent.html":{},"components/XiconButtonComponent.html":{},"coverage.html":{}}}],["comoros",{"_index":1970,"title":{},"body":{"interfaces/CountryList.html":{}}}],["compat",{"_index":3171,"title":{},"body":{"interfaces/FileUploaderMsg.html":{},"changelog.html":{}}}],["compatibilty",{"_index":1049,"title":{},"body":{"classes/Address.html":{},"changelog.html":{}}}],["compatible",{"_index":5010,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["compilation",{"_index":5559,"title":{},"body":{"additional-documentation/local-development/schematics.html":{}}}],["compile",{"_index":5110,"title":{},"body":{"changelog.html":{},"additional-documentation/local-development/schematics.html":{}}}],["compiles",{"_index":5529,"title":{},"body":{"additional-documentation/local-development/schematics.html":{}}}],["compiliation",{"_index":2836,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["compiling",{"_index":5523,"title":{},"body":{"additional-documentation/local-development/schematics.html":{}}}],["complete",{"_index":472,"title":{},"body":{"classes/AbstractTestPage.html":{},"classes/Address.html":{},"injectables/CheckCompleteBaseService.html":{},"interfaces/FileUploaderMsg.html":{},"interfaces/ISpaEnvResponse.html":{},"interfaces/PageList.html":{},"interfaces/PageListInterface.html":{},"injectables/PageStateService.html":{},"coverage.html":{}}}],["completed",{"_index":1250,"title":{},"body":{"injectables/CheckCompleteBaseService.html":{},"interfaces/FileUploaderMsg.html":{},"interfaces/PageListInterface.html":{},"guards/RouteGuardService.html":{}}}],["completeness",{"_index":1276,"title":{},"body":{"injectables/CheckCompleteBaseService.html":{},"interfaces/PageListInterface.html":{}}}],["complex",{"_index":1837,"title":{},"body":{"components/CoreBreadcrumbComponent.html":{}}}],["compliance",{"_index":5449,"title":{},"body":{"license.html":{}}}],["complicated",{"_index":3589,"title":{},"body":{"components/HeaderComponent.html":{}}}],["compodoccrc.json",{"_index":5248,"title":{},"body":{"changelog.html":{}}}],["component",{"_index":180,"title":{"components/AccordionCommonComponent.html":{},"components/ButtonComponent.html":{},"components/ButtonGroupComponent.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"components/ConfirmTemplateComponent.html":{},"components/CoreBreadcrumbComponent.html":{},"components/DatepickerComponent.html":{},"components/DropdownComponent.html":{},"components/EmailComponent.html":{},"components/ErrorContainerComponent.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/FullNameComponent.html":{},"components/GeocoderInputComponent.html":{},"components/HeaderComponent.html":{},"components/NameComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"components/RadioComponent.html":{},"components/SampleModalComponent.html":{},"components/SinComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{},"components/XiconButtonComponent.html":{}},"body":{"classes/AbstractFormControl.html":{},"classes/AbstractTestPage.html":{},"components/AccordionCommonComponent.html":{},"interfaces/AddrLabelList.html":{},"components/ButtonComponent.html":{},"components/ButtonGroupComponent.html":{},"modules/CaptchaModule.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"components/ConfirmTemplateComponent.html":{},"components/CoreBreadcrumbComponent.html":{},"interfaces/CountryList.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"components/DropdownComponent.html":{},"components/EmailComponent.html":{},"components/ErrorContainerComponent.html":{},"interfaces/FileUploaderMsg.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/FullNameComponent.html":{},"interfaces/FullNameErrorMsg.html":{},"components/GeocoderInputComponent.html":{},"components/HeaderComponent.html":{},"interfaces/IRadioItems.html":{},"interfaces/ISpaEnvResponse.html":{},"interfaces/Maxlengths.html":{},"components/NameComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{},"components/RadioComponent.html":{},"interfaces/ReadOnlyFields.html":{},"interfaces/SampleImageInterface.html":{},"components/SampleModalComponent.html":{},"components/SinComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{},"components/XiconButtonComponent.html":{},"changelog.html":{},"coverage.html":{},"additional-documentation/local-development/schematics.html":{},"additional-documentation/local-development/components.html":{}}}],["component's",{"_index":3731,"title":{},"body":{"interfaces/ISpaEnvResponse.html":{}}}],["component_template",{"_index":680,"title":{},"body":{"components/AccordionCommonComponent.html":{},"components/ButtonComponent.html":{},"components/ButtonGroupComponent.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"components/ConfirmTemplateComponent.html":{},"components/CoreBreadcrumbComponent.html":{},"components/DatepickerComponent.html":{},"components/DropdownComponent.html":{},"components/EmailComponent.html":{},"components/ErrorContainerComponent.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/FullNameComponent.html":{},"components/GeocoderInputComponent.html":{},"components/HeaderComponent.html":{},"components/NameComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"components/RadioComponent.html":{},"components/SampleModalComponent.html":{},"components/SinComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{},"components/XiconButtonComponent.html":{}}}],["componentlist",{"_index":4351,"title":{},"body":{"modules/SharedCoreModule.html":{},"coverage.html":{}}}],["components",{"_index":142,"title":{"additional-documentation/local-development/components.html":{}},"body":{"classes/AbstractFormControl.html":{},"classes/AbstractTestPage.html":{},"components/AccordionCommonComponent.html":{},"classes/Base.html":{},"components/ButtonComponent.html":{},"components/ButtonGroupComponent.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"components/ConfirmTemplateComponent.html":{},"components/CoreBreadcrumbComponent.html":{},"components/DatepickerComponent.html":{},"components/DropdownComponent.html":{},"components/EmailComponent.html":{},"components/ErrorContainerComponent.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/FullNameComponent.html":{},"components/GeocoderInputComponent.html":{},"components/HeaderComponent.html":{},"components/NameComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"classes/Person.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"components/RadioComponent.html":{},"components/SampleModalComponent.html":{},"components/SinComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{},"components/XiconButtonComponent.html":{},"changelog.html":{},"index.html":{},"overview.html":{},"todo.html":{},"additional-documentation/getting-started.html":{},"additional-documentation/local-development.html":{},"additional-documentation/local-development/schematics.html":{},"additional-documentation/local-development/components.html":{}}}],["components/accordion/accordion.component",{"_index":4318,"title":{},"body":{"modules/SharedCoreModule.html":{}}}],["components/address/address.component",{"_index":4301,"title":{},"body":{"modules/SharedCoreModule.html":{}}}],["components/button",{"_index":4305,"title":{},"body":{"modules/SharedCoreModule.html":{}}}],["components/button/button.component",{"_index":4307,"title":{},"body":{"modules/SharedCoreModule.html":{}}}],["components/checkbox/checkbox.component",{"_index":4308,"title":{},"body":{"modules/SharedCoreModule.html":{}}}],["components/city/city.component",{"_index":4303,"title":{},"body":{"modules/SharedCoreModule.html":{}}}],["components/city/validate",{"_index":4337,"title":{},"body":{"modules/SharedCoreModule.html":{}}}],["components/confirm",{"_index":4345,"title":{},"body":{"modules/SharedCoreModule.html":{}}}],["components/consent",{"_index":4309,"title":{},"body":{"modules/SharedCoreModule.html":{}}}],["components/core",{"_index":4273,"title":{},"body":{"modules/SharedCoreModule.html":{}}}],["components/country/country.component",{"_index":3378,"title":{},"body":{"interfaces/GeoAddressResult.html":{},"injectables/GeocoderService.html":{},"modules/SharedCoreModule.html":{}}}],["components/date/date",{"_index":4349,"title":{},"body":{"modules/SharedCoreModule.html":{}}}],["components/date/date.component",{"_index":4287,"title":{},"body":{"modules/SharedCoreModule.html":{}}}],["components/datepicker/datepicker.component",{"_index":4288,"title":{},"body":{"modules/SharedCoreModule.html":{}}}],["components/dropdown/dropdown.component",{"_index":4297,"title":{},"body":{"modules/SharedCoreModule.html":{}}}],["components/duplicate",{"_index":4331,"title":{},"body":{"modules/SharedCoreModule.html":{}}}],["components/email/email.component",{"_index":4344,"title":{},"body":{"modules/SharedCoreModule.html":{}}}],["components/error",{"_index":4333,"title":{},"body":{"modules/SharedCoreModule.html":{}}}],["components/file",{"_index":4290,"title":{},"body":{"modules/SharedCoreModule.html":{}}}],["components/form",{"_index":4275,"title":{},"body":{"modules/SharedCoreModule.html":{}}}],["components/full",{"_index":4323,"title":{},"body":{"modules/SharedCoreModule.html":{}}}],["components/geocoder",{"_index":4347,"title":{},"body":{"modules/SharedCoreModule.html":{}}}],["components/header/header.component",{"_index":4325,"title":{},"body":{"modules/SharedCoreModule.html":{}}}],["components/models",{"_index":4360,"title":{},"body":{"interfaces/SimpleDate.html":{}}}],["components/name/name.component",{"_index":4311,"title":{},"body":{"modules/SharedCoreModule.html":{}}}],["components/name/validate",{"_index":4319,"title":{},"body":{"modules/SharedCoreModule.html":{}}}],["components/page",{"_index":4277,"title":{},"body":{"modules/SharedCoreModule.html":{}}}],["components/password/password.component",{"_index":4279,"title":{},"body":{"modules/SharedCoreModule.html":{}}}],["components/phn/phn.component",{"_index":4322,"title":{},"body":{"modules/SharedCoreModule.html":{}}}],["components/phone",{"_index":4312,"title":{},"body":{"modules/SharedCoreModule.html":{}}}],["components/postal",{"_index":4294,"title":{},"body":{"modules/SharedCoreModule.html":{}}}],["components/province/province.component",{"_index":4302,"title":{},"body":{"modules/SharedCoreModule.html":{}}}],["components/radio/radio.component",{"_index":4315,"title":{},"body":{"modules/SharedCoreModule.html":{}}}],["components/sample",{"_index":4343,"title":{},"body":{"modules/SharedCoreModule.html":{}}}],["components/sin/sin.component",{"_index":4321,"title":{},"body":{"modules/SharedCoreModule.html":{}}}],["components/street/street.component",{"_index":4304,"title":{},"body":{"modules/SharedCoreModule.html":{}}}],["components/street/validate",{"_index":4335,"title":{},"body":{"modules/SharedCoreModule.html":{}}}],["components/thumbnail/thumbnail.component",{"_index":4292,"title":{},"body":{"modules/SharedCoreModule.html":{}}}],["components/toggle/toggle.component",{"_index":4300,"title":{},"body":{"modules/SharedCoreModule.html":{}}}],["components/validate",{"_index":4339,"title":{},"body":{"modules/SharedCoreModule.html":{}}}],["components/wizard",{"_index":4280,"title":{},"body":{"modules/SharedCoreModule.html":{}}}],["components/xicon",{"_index":4328,"title":{},"body":{"modules/SharedCoreModule.html":{}}}],["compose",{"_index":5574,"title":{},"body":{"additional-documentation/local-development/schematics.html":{}}}],["computer",{"_index":3657,"title":{},"body":{"interfaces/ISpaEnvResponse.html":{}}}],["computers",{"_index":5477,"title":{},"body":{"todo.html":{}}}],["concatenate",{"_index":4939,"title":{},"body":{"changelog.html":{}}}],["concatenated",{"_index":4097,"title":{},"body":{"classes/Person.html":{}}}],["concatenates",{"_index":4087,"title":{},"body":{"classes/Person.html":{}}}],["conditional",{"_index":4647,"title":{},"body":{"changelog.html":{}}}],["conditions",{"_index":5460,"title":{},"body":{"license.html":{}}}],["config",{"_index":5247,"title":{},"body":{"changelog.html":{}}}],["config.ts",{"_index":5376,"title":{},"body":{"coverage.html":{}}}],["configurable",{"_index":5572,"title":{},"body":{"additional-documentation/local-development/schematics.html":{}}}],["configuration",{"_index":1841,"title":{},"body":{"components/CoreBreadcrumbComponent.html":{}}}],["configure",{"_index":1650,"title":{},"body":{"interfaces/CommonLogMessage.html":{},"guards/LoadPageGuardService.html":{},"guards/RouteGuardService.html":{}}}],["configured",{"_index":1209,"title":{},"body":{"modules/CaptchaModule.html":{},"changelog.html":{}}}],["configuring",{"_index":5611,"title":{},"body":{"additional-documentation/local-development/components.html":{}}}],["confirm",{"_index":695,"title":{},"body":{"components/AccordionCommonComponent.html":{},"components/ButtonComponent.html":{},"components/ButtonGroupComponent.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"components/ConfirmTemplateComponent.html":{},"components/CoreBreadcrumbComponent.html":{},"components/DatepickerComponent.html":{},"components/DropdownComponent.html":{},"directives/DuplicateCheckDirective.html":{},"components/EmailComponent.html":{},"components/ErrorContainerComponent.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/FullNameComponent.html":{},"components/GeocoderInputComponent.html":{},"components/HeaderComponent.html":{},"components/NameComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"components/RadioComponent.html":{},"components/SampleModalComponent.html":{},"components/SinComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{},"components/XiconButtonComponent.html":{},"changelog.html":{}}}],["confirmation",{"_index":4829,"title":{},"body":{"changelog.html":{}}}],["confirmtemplatecomponent",{"_index":694,"title":{"components/ConfirmTemplateComponent.html":{}},"body":{"components/AccordionCommonComponent.html":{},"components/ButtonComponent.html":{},"components/ButtonGroupComponent.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"components/ConfirmTemplateComponent.html":{},"components/CoreBreadcrumbComponent.html":{},"components/DatepickerComponent.html":{},"components/DropdownComponent.html":{},"components/EmailComponent.html":{},"components/ErrorContainerComponent.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/FullNameComponent.html":{},"components/GeocoderInputComponent.html":{},"components/HeaderComponent.html":{},"components/NameComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"components/RadioComponent.html":{},"components/SampleModalComponent.html":{},"modules/SharedCoreModule.html":{},"components/SinComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{},"components/XiconButtonComponent.html":{},"coverage.html":{},"overview.html":{}}}],["congo",{"_index":1972,"title":{},"body":{"interfaces/CountryList.html":{}}}],["connected",{"_index":3504,"title":{},"body":{"components/GeocoderInputComponent.html":{}}}],["connectivity",{"_index":1626,"title":{},"body":{"interfaces/CommonLogMessage.html":{}}}],["consectetur",{"_index":1403,"title":{},"body":{"components/CityComponent.html":{},"interfaces/CountryList.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"interfaces/FileUploaderMsg.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{}}}],["consent",{"_index":495,"title":{},"body":{"classes/AbstractTestPage.html":{},"components/AccordionCommonComponent.html":{},"components/ButtonComponent.html":{},"components/ButtonGroupComponent.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"components/ConfirmTemplateComponent.html":{},"components/CoreBreadcrumbComponent.html":{},"components/DatepickerComponent.html":{},"components/DropdownComponent.html":{},"components/EmailComponent.html":{},"components/ErrorContainerComponent.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/FullNameComponent.html":{},"components/GeocoderInputComponent.html":{},"components/HeaderComponent.html":{},"interfaces/ISpaEnvResponse.html":{},"components/NameComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"components/RadioComponent.html":{},"components/SampleModalComponent.html":{},"components/SinComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{},"components/XiconButtonComponent.html":{},"changelog.html":{}}}],["consentmodal",{"_index":3693,"title":{},"body":{"interfaces/ISpaEnvResponse.html":{},"changelog.html":{}}}],["consentmodalcomponent",{"_index":697,"title":{},"body":{"components/AccordionCommonComponent.html":{},"components/ButtonComponent.html":{},"components/ButtonGroupComponent.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"components/ConfirmTemplateComponent.html":{},"components/CoreBreadcrumbComponent.html":{},"components/DatepickerComponent.html":{},"components/DropdownComponent.html":{},"components/EmailComponent.html":{},"components/ErrorContainerComponent.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/FullNameComponent.html":{},"components/GeocoderInputComponent.html":{},"components/HeaderComponent.html":{},"interfaces/ISpaEnvResponse.html":{},"components/NameComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"components/RadioComponent.html":{},"components/SampleModalComponent.html":{},"modules/SharedCoreModule.html":{},"components/SinComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{},"components/XiconButtonComponent.html":{},"changelog.html":{},"coverage.html":{},"overview.html":{}}}],["considered",{"_index":1026,"title":{},"body":{"classes/Address.html":{}}}],["consistency",{"_index":1085,"title":{},"body":{"components/ButtonComponent.html":{}}}],["consistent",{"_index":1638,"title":{},"body":{"interfaces/CommonLogMessage.html":{},"components/PageFrameworkComponent.html":{},"todo.html":{}}}],["console",{"_index":339,"title":{},"body":{"classes/AbstractHttpService.html":{},"interfaces/FileUploaderMsg.html":{},"changelog.html":{}}}],["console.error('an",{"_index":1665,"title":{},"body":{"interfaces/CommonLogMessage.html":{}}}],["console.error('geocoder",{"_index":3416,"title":{},"body":{"interfaces/GeoAddressResult.html":{},"injectables/GeocoderService.html":{}}}],["console.error('mspmaintenanceservice",{"_index":3749,"title":{},"body":{"interfaces/ISpaEnvResponse.html":{}}}],["console.error(`backend",{"_index":1669,"title":{},"body":{"interfaces/CommonLogMessage.html":{}}}],["console.error(`mspmaintenanceservice",{"_index":3750,"title":{},"body":{"interfaces/ISpaEnvResponse.html":{}}}],["console.error(msg",{"_index":1648,"title":{},"body":{"interfaces/CommonLogMessage.html":{}}}],["console.log",{"_index":333,"title":{},"body":{"classes/AbstractHttpService.html":{},"interfaces/AddrLabelList.html":{},"classes/Container.html":{},"injectables/DefaultPageGuardService.html":{},"interfaces/Maxlengths.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"components/PostalCodeComponent.html":{},"interfaces/ReadOnlyFields.html":{},"components/SinComponent.html":{},"interfaces/WizardProgressItem.html":{}}}],["console.log(\"error",{"_index":3233,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["console.log('cancel",{"_index":2957,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["console.log('completed",{"_index":3013,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["console.log('error",{"_index":2992,"title":{},"body":{"interfaces/FileUploaderMsg.html":{},"interfaces/ISpaEnvResponse.html":{}}}],["console.log('file",{"_index":3138,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["console.log('files",{"_index":2972,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["console.log('handleerror",{"_index":3748,"title":{},"body":{"interfaces/ISpaEnvResponse.html":{}}}],["console.log('http",{"_index":343,"title":{},"body":{"classes/AbstractHttpService.html":{},"interfaces/FileUploaderMsg.html":{}}}],["console.log('image.name",{"_index":3075,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["console.log('loading",{"_index":3184,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["console.log('log",{"_index":3251,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["console.log('logservice",{"_index":1659,"title":{},"body":{"interfaces/CommonLogMessage.html":{}}}],["console.log('opening",{"_index":3029,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["console.log('scaled",{"_index":4439,"title":{},"body":{"components/ThumbnailComponent.html":{}}}],["console.log('start",{"_index":3090,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["console.log('this",{"_index":3195,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["console.log(`compare",{"_index":2843,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["console.log(`file",{"_index":3124,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["console.log(`image",{"_index":3086,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["console.log(`max",{"_index":3224,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["console.log(`this",{"_index":2846,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["console.log(error",{"_index":3254,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["console.log(response",{"_index":3253,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["console.log(this.spaenvres",{"_index":3763,"title":{},"body":{"interfaces/ISpaEnvResponse.html":{}}}],["console.log(var1",{"_index":3015,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["const",{"_index":201,"title":{},"body":{"classes/AbstractFormControl.html":{},"classes/AbstractHttpService.html":{},"classes/AbstractReactForm.html":{},"classes/AbstractTestPage.html":{},"interfaces/AddrLabelList.html":{},"classes/Address.html":{},"injectables/CaptchaDataService.html":{},"injectables/CheckCompleteBaseService.html":{},"interfaces/CommonLogMessage.html":{},"injectables/ContainerService.html":{},"interfaces/CountryList.html":{},"interfaces/DateErrorMsg.html":{},"directives/DateFieldFormatDirective.html":{},"components/DatepickerComponent.html":{},"injectables/DefaultPageGuardService.html":{},"directives/DuplicateCheckDirective.html":{},"components/EmailComponent.html":{},"interfaces/ErrorMessage.html":{},"interfaces/FileUploaderMsg.html":{},"interfaces/GeoAddressResult.html":{},"components/GeocoderInputComponent.html":{},"injectables/GeocoderService.html":{},"interfaces/ISpaEnvResponse.html":{},"guards/LoadPageGuardService.html":{},"interfaces/Maxlengths.html":{},"components/NameComponent.html":{},"interfaces/PageList.html":{},"interfaces/PageListInterface.html":{},"injectables/PageStateService.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"classes/Person.html":{},"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{},"interfaces/ReadOnlyFields.html":{},"guards/RouteGuardService.html":{},"injectables/ServerPayload.html":{},"modules/SharedCoreModule.html":{},"components/SinComponent.html":{},"components/ThumbnailComponent.html":{},"directives/ValidateBcPostalDirective.html":{},"directives/ValidateCityDirective.html":{},"directives/ValidateNameDirective.html":{},"directives/ValidatePostalcodeDirective.html":{},"directives/ValidateRegionDirective.html":{},"directives/ValidateStreetDirective.html":{},"components/WizardProgressBarComponent.html":{},"components/XiconButtonComponent.html":{},"additional-documentation/getting-started.html":{}}}],["constants",{"_index":552,"title":{},"body":{"classes/AbstractTestPage.html":{}}}],["constructor",{"_index":19,"title":{},"body":{"classes/AbstractBaseForm.html":{},"classes/AbstractForm.html":{},"classes/AbstractHttpService.html":{},"classes/AbstractReactForm.html":{},"components/AccordionCommonComponent.html":{},"interfaces/AddrLabelList.html":{},"classes/Base.html":{},"components/ButtonComponent.html":{},"components/ButtonGroupComponent.html":{},"injectables/CaptchaDataService.html":{},"injectables/CheckCompleteBaseService.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"classes/CommonImage.html":{},"classes/CommonImageProcessingError.html":{},"classes/CommonImageScaleFactorsImpl.html":{},"components/ConfirmTemplateComponent.html":{},"classes/Container.html":{},"injectables/ContainerService.html":{},"components/CoreBreadcrumbComponent.html":{},"interfaces/CountryList.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"injectables/DefaultPageGuardService.html":{},"components/DropdownComponent.html":{},"components/EmailComponent.html":{},"components/ErrorContainerComponent.html":{},"interfaces/FileUploaderMsg.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/FullNameComponent.html":{},"interfaces/FullNameErrorMsg.html":{},"components/GeocoderInputComponent.html":{},"injectables/GeocoderService.html":{},"components/HeaderComponent.html":{},"interfaces/IRadioItems.html":{},"guards/LoadPageGuardService.html":{},"interfaces/Maxlengths.html":{},"classes/MoHCommonLibraryError.html":{},"components/NameComponent.html":{},"interfaces/PageList.html":{},"interfaces/PageListInterface.html":{},"components/PageSectionComponent.html":{},"injectables/PageStateService.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{},"components/RadioComponent.html":{},"interfaces/ReadOnlyFields.html":{},"guards/RouteGuardService.html":{},"interfaces/SampleImageInterface.html":{},"components/SampleModalComponent.html":{},"components/SinComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{},"interfaces/WizardProgressItem.html":{},"components/XiconButtonComponent.html":{},"changelog.html":{}}}],["constructor(@optional",{"_index":3480,"title":{},"body":{"components/GeocoderInputComponent.html":{}}}],["constructor(containerservice",{"_index":1745,"title":{},"body":{"classes/Container.html":{}}}],["constructor(controldir",{"_index":1310,"title":{},"body":{"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"components/DropdownComponent.html":{},"components/EmailComponent.html":{},"components/GeocoderInputComponent.html":{},"components/NameComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"components/RadioComponent.html":{},"components/SinComponent.html":{}}}],["constructor(errorcode",{"_index":1562,"title":{},"body":{"classes/CommonImageProcessingError.html":{}}}],["constructor(filecontent",{"_index":1510,"title":{},"body":{"interfaces/CommonAttachmentJson.html":{},"classes/CommonImage.html":{},"classes/CommonImageProcessingError.html":{},"interfaces/CommonImageScaleFactors.html":{},"classes/CommonImageScaleFactorsImpl.html":{}}}],["constructor(http",{"_index":255,"title":{},"body":{"classes/AbstractHttpService.html":{},"injectables/GeocoderService.html":{}}}],["constructor(httpclient",{"_index":1163,"title":{},"body":{"injectables/CaptchaDataService.html":{}}}],["constructor(message",{"_index":3812,"title":{},"body":{"classes/MoHCommonLibraryError.html":{}}}],["constructor(pagestateservice",{"_index":2620,"title":{},"body":{"injectables/DefaultPageGuardService.html":{}}}],["constructor(private",{"_index":1184,"title":{},"body":{"injectables/CaptchaDataService.html":{},"components/HeaderComponent.html":{},"guards/LoadPageGuardService.html":{},"guards/RouteGuardService.html":{},"injectables/ServerPayload.html":{},"components/WizardProgressBarComponent.html":{}}}],["constructor(protected",{"_index":78,"title":{},"body":{"classes/AbstractBaseForm.html":{},"classes/AbstractForm.html":{},"classes/AbstractHttpService.html":{},"classes/AbstractReactForm.html":{},"interfaces/CommonLogMessage.html":{},"interfaces/GeoAddressResult.html":{},"injectables/GeocoderService.html":{},"interfaces/ISpaEnvResponse.html":{}}}],["constructor(public",{"_index":1503,"title":{},"body":{"interfaces/CommonAttachmentJson.html":{},"classes/CommonImage.html":{},"classes/CommonImageProcessingError.html":{},"interfaces/CommonImageScaleFactors.html":{},"classes/CommonImageScaleFactorsImpl.html":{}}}],["constructor(router",{"_index":20,"title":{},"body":{"classes/AbstractBaseForm.html":{},"classes/AbstractForm.html":{},"classes/AbstractReactForm.html":{},"injectables/CheckCompleteBaseService.html":{},"components/HeaderComponent.html":{},"guards/LoadPageGuardService.html":{},"injectables/PageStateService.html":{},"guards/RouteGuardService.html":{},"components/WizardProgressBarComponent.html":{}}}],["constructor(viewcontainerref",{"_index":4421,"title":{},"body":{"components/ThumbnailComponent.html":{}}}],["constructor(wfactor",{"_index":1542,"title":{},"body":{"interfaces/CommonAttachmentJson.html":{},"classes/CommonImage.html":{},"classes/CommonImageProcessingError.html":{},"interfaces/CommonImageScaleFactors.html":{},"classes/CommonImageScaleFactorsImpl.html":{}}}],["consume",{"_index":5618,"title":{},"body":{"additional-documentation/local-development/components.html":{}}}],["contact",{"_index":3687,"title":{},"body":{"interfaces/ISpaEnvResponse.html":{}}}],["contain",{"_index":1384,"title":{},"body":{"components/CityComponent.html":{},"interfaces/CountryList.html":{},"interfaces/FileUploaderMsg.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{}}}],["container",{"_index":1709,"title":{"classes/Container.html":{}},"body":{"classes/Container.html":{},"components/ErrorContainerComponent.html":{},"components/WizardProgressBarComponent.html":{},"interfaces/WizardProgressItem.html":{},"changelog.html":{},"coverage.html":{}}}],["container'},{'name",{"_index":712,"title":{},"body":{"components/AccordionCommonComponent.html":{},"components/ButtonComponent.html":{},"components/ButtonGroupComponent.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"components/ConfirmTemplateComponent.html":{},"components/CoreBreadcrumbComponent.html":{},"components/DatepickerComponent.html":{},"components/DropdownComponent.html":{},"components/EmailComponent.html":{},"components/ErrorContainerComponent.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/FullNameComponent.html":{},"components/GeocoderInputComponent.html":{},"components/HeaderComponent.html":{},"components/NameComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"components/RadioComponent.html":{},"components/SampleModalComponent.html":{},"components/SinComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{},"components/XiconButtonComponent.html":{}}}],["container.component",{"_index":4334,"title":{},"body":{"modules/SharedCoreModule.html":{}}}],["container.component.html",{"_index":2725,"title":{},"body":{"components/ErrorContainerComponent.html":{}}}],["container.component.scss",{"_index":2724,"title":{},"body":{"components/ErrorContainerComponent.html":{}}}],["container.component.ts",{"_index":2723,"title":{},"body":{"components/ErrorContainerComponent.html":{},"coverage.html":{}}}],["container.component.ts:10",{"_index":2727,"title":{},"body":{"components/ErrorContainerComponent.html":{}}}],["container.length",{"_index":4553,"title":{},"body":{"components/WizardProgressBarComponent.html":{}}}],["container/error",{"_index":2722,"title":{},"body":{"components/ErrorContainerComponent.html":{},"modules/SharedCoreModule.html":{},"coverage.html":{}}}],["container[0].scrollleft",{"_index":4559,"title":{},"body":{"components/WizardProgressBarComponent.html":{}}}],["containers",{"_index":1713,"title":{},"body":{"classes/Container.html":{},"interfaces/WizardProgressItem.html":{}}}],["containerservice",{"_index":1719,"title":{"injectables/ContainerService.html":{}},"body":{"classes/Container.html":{},"injectables/ContainerService.html":{},"interfaces/WizardProgressItem.html":{},"coverage.html":{}}}],["contains",{"_index":1711,"title":{},"body":{"classes/Container.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"interfaces/WizardProgressItem.html":{}}}],["containstarturl",{"_index":2634,"title":{},"body":{"injectables/DefaultPageGuardService.html":{}}}],["content",{"_index":478,"title":{},"body":{"classes/AbstractTestPage.html":{},"interfaces/CommonAttachmentJson.html":{},"classes/CommonImage.html":{},"classes/CommonImageProcessingError.html":{},"interfaces/CommonImageScaleFactors.html":{},"classes/CommonImageScaleFactorsImpl.html":{},"components/CoreBreadcrumbComponent.html":{},"components/HeaderComponent.html":{},"interfaces/ISpaEnvResponse.html":{},"components/PageSectionComponent.html":{},"changelog.html":{}}}],["contentchild",{"_index":2743,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["contentchild('uploadinstruction",{"_index":2807,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["contents",{"_index":3593,"title":{},"body":{"components/HeaderComponent.html":{}}}],["contenttype",{"_index":1517,"title":{},"body":{"interfaces/CommonAttachmentJson.html":{},"classes/CommonImage.html":{},"classes/CommonImageProcessingError.html":{},"interfaces/CommonImageScaleFactors.html":{},"classes/CommonImageScaleFactorsImpl.html":{}}}],["context",{"_index":5391,"title":{},"body":{"coverage.html":{}}}],["continue",{"_index":16,"title":{},"body":{"classes/AbstractBaseForm.html":{},"classes/AbstractForm.html":{},"classes/AbstractReactForm.html":{},"classes/AbstractTestPage.html":{},"classes/Container.html":{},"injectables/ContainerService.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"interfaces/ISpaEnvResponse.html":{},"guards/LoadPageGuardService.html":{},"guards/RouteGuardService.html":{},"interfaces/WizardProgressItem.html":{}}}],["continuebtn",{"_index":1795,"title":{},"body":{"injectables/ContainerService.html":{}}}],["continuebtnsubject",{"_index":1796,"title":{},"body":{"injectables/ContainerService.html":{}}}],["continuebutton",{"_index":447,"title":{},"body":{"classes/AbstractTestPage.html":{},"interfaces/ISpaEnvResponse.html":{}}}],["contrast",{"_index":4985,"title":{},"body":{"changelog.html":{}}}],["contributing",{"_index":5045,"title":{},"body":{"changelog.html":{}}}],["contributing.md",{"_index":5183,"title":{},"body":{"changelog.html":{}}}],["control",{"_index":193,"title":{},"body":{"classes/AbstractFormControl.html":{},"classes/AbstractReactForm.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"directives/DuplicateCheckDirective.html":{},"components/EmailComponent.html":{},"interfaces/FileUploaderMsg.html":{},"interfaces/IRadioItems.html":{},"components/NameComponent.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{},"components/RadioComponent.html":{},"components/SinComponent.html":{},"directives/ValidateBcPostalDirective.html":{},"directives/ValidateCityDirective.html":{},"directives/ValidateNameDirective.html":{},"directives/ValidatePostalcodeDirective.html":{},"directives/ValidateRegionDirective.html":{},"directives/ValidateStreetDirective.html":{},"changelog.html":{},"todo.html":{}}}],["control.ts",{"_index":113,"title":{},"body":{"classes/AbstractFormControl.html":{},"coverage.html":{}}}],["control.ts:11",{"_index":133,"title":{},"body":{"classes/AbstractFormControl.html":{}}}],["control.ts:14",{"_index":168,"title":{},"body":{"classes/AbstractFormControl.html":{}}}],["control.ts:16",{"_index":166,"title":{},"body":{"classes/AbstractFormControl.html":{}}}],["control.ts:19",{"_index":167,"title":{},"body":{"classes/AbstractFormControl.html":{}}}],["control.ts:23",{"_index":134,"title":{},"body":{"classes/AbstractFormControl.html":{}}}],["control.ts:24",{"_index":135,"title":{},"body":{"classes/AbstractFormControl.html":{}}}],["control.ts:27",{"_index":143,"title":{},"body":{"classes/AbstractFormControl.html":{}}}],["control.ts:32",{"_index":165,"title":{},"body":{"classes/AbstractFormControl.html":{}}}],["control.ts:35",{"_index":145,"title":{},"body":{"classes/AbstractFormControl.html":{}}}],["control.ts:40",{"_index":148,"title":{},"body":{"classes/AbstractFormControl.html":{}}}],["control.ts:45",{"_index":160,"title":{},"body":{"classes/AbstractFormControl.html":{}}}],["control.ts:49",{"_index":162,"title":{},"body":{"classes/AbstractFormControl.html":{}}}],["control.ts:68",{"_index":152,"title":{},"body":{"classes/AbstractFormControl.html":{}}}],["control.ts:88",{"_index":163,"title":{},"body":{"classes/AbstractFormControl.html":{}}}],["control.value",{"_index":2679,"title":{},"body":{"directives/DuplicateCheckDirective.html":{},"directives/ValidateBcPostalDirective.html":{},"directives/ValidateCityDirective.html":{},"directives/ValidateNameDirective.html":{},"directives/ValidatePostalcodeDirective.html":{},"directives/ValidateRegionDirective.html":{},"directives/ValidateStreetDirective.html":{}}}],["controlcontainer",{"_index":792,"title":{},"body":{"interfaces/AddrLabelList.html":{},"components/ButtonComponent.html":{},"components/ButtonGroupComponent.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"interfaces/FileUploaderMsg.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/FullNameComponent.html":{},"interfaces/FullNameErrorMsg.html":{},"interfaces/ISpaEnvResponse.html":{},"interfaces/Maxlengths.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"interfaces/ReadOnlyFields.html":{},"additional-documentation/local-development/schematics.html":{}}}],["controldir",{"_index":1307,"title":{},"body":{"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"interfaces/CountryList.html":{},"components/DropdownComponent.html":{},"components/EmailComponent.html":{},"components/GeocoderInputComponent.html":{},"interfaces/IRadioItems.html":{},"components/NameComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{},"components/RadioComponent.html":{},"components/SinComponent.html":{}}}],["controldir.valueaccessor",{"_index":1351,"title":{},"body":{"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"interfaces/CountryList.html":{},"components/DropdownComponent.html":{},"components/EmailComponent.html":{},"components/GeocoderInputComponent.html":{},"interfaces/IRadioItems.html":{},"components/NameComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{},"components/RadioComponent.html":{},"components/SinComponent.html":{}}}],["controls",{"_index":427,"title":{},"body":{"classes/AbstractReactForm.html":{},"interfaces/ISpaEnvResponse.html":{},"changelog.html":{}}}],["controlvalueaccessor",{"_index":116,"title":{},"body":{"classes/AbstractFormControl.html":{},"interfaces/AddrLabelList.html":{},"components/ButtonGroupComponent.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"interfaces/CountryList.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"components/DropdownComponent.html":{},"components/FullNameComponent.html":{},"interfaces/FullNameErrorMsg.html":{},"components/GeocoderInputComponent.html":{},"interfaces/ISpaEnvResponse.html":{},"interfaces/Maxlengths.html":{},"components/NameComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{},"interfaces/ReadOnlyFields.html":{},"changelog.html":{}}}],["conventional",{"_index":5484,"title":{},"body":{"todo.html":{}}}],["convert",{"_index":2457,"title":{},"body":{"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"interfaces/FileUploaderMsg.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"changelog.html":{},"additional-documentation/local-development/schematics.html":{}}}],["convertdatetosimpledate",{"_index":2573,"title":{},"body":{"components/DatepickerComponent.html":{}}}],["convertdatetosimpledate(date",{"_index":2482,"title":{},"body":{"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{}}}],["converted",{"_index":900,"title":{},"body":{"interfaces/AddrLabelList.html":{},"interfaces/Maxlengths.html":{},"interfaces/ReadOnlyFields.html":{}}}],["convertroutetotitle",{"_index":1741,"title":{},"body":{"classes/Container.html":{}}}],["convertroutetotitle(routepath",{"_index":1758,"title":{},"body":{"classes/Container.html":{},"interfaces/WizardProgressItem.html":{}}}],["converts",{"_index":1760,"title":{},"body":{"classes/Container.html":{},"interfaces/WizardProgressItem.html":{}}}],["convertsimpledatetodate",{"_index":2574,"title":{},"body":{"components/DatepickerComponent.html":{}}}],["convertsimpledatetodate(date",{"_index":2489,"title":{},"body":{"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{}}}],["cook",{"_index":1976,"title":{},"body":{"interfaces/CountryList.html":{}}}],["copied",{"_index":579,"title":{},"body":{"classes/AbstractTestPage.html":{},"changelog.html":{}}}],["copy",{"_index":971,"title":{},"body":{"interfaces/AddrLabelList.html":{},"classes/Address.html":{},"interfaces/FileUploaderMsg.html":{},"interfaces/Maxlengths.html":{},"classes/Person.html":{},"interfaces/ReadOnlyFields.html":{},"license.html":{}}}],["copy(object",{"_index":1022,"title":{},"body":{"classes/Address.html":{},"classes/Person.html":{}}}],["copying",{"_index":3690,"title":{},"body":{"interfaces/ISpaEnvResponse.html":{}}}],["copylicense",{"_index":5347,"title":{},"body":{"coverage.html":{}}}],["copyright",{"_index":5444,"title":{},"body":{"license.html":{}}}],["copyversionfile",{"_index":5386,"title":{},"body":{"coverage.html":{}}}],["core",{"_index":700,"title":{},"body":{"components/AccordionCommonComponent.html":{},"components/ButtonComponent.html":{},"components/ButtonGroupComponent.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"components/ConfirmTemplateComponent.html":{},"components/CoreBreadcrumbComponent.html":{},"components/DatepickerComponent.html":{},"components/DropdownComponent.html":{},"components/EmailComponent.html":{},"components/ErrorContainerComponent.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/FullNameComponent.html":{},"components/GeocoderInputComponent.html":{},"components/HeaderComponent.html":{},"components/NameComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"components/RadioComponent.html":{},"components/SampleModalComponent.html":{},"components/SinComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{},"components/XiconButtonComponent.html":{},"dependencies.html":{},"additional-documentation/getting-started.html":{}}}],["core.module.ts",{"_index":4272,"title":{},"body":{"modules/SharedCoreModule.html":{},"coverage.html":{}}}],["corebreadcrumb",{"_index":1838,"title":{},"body":{"components/CoreBreadcrumbComponent.html":{}}}],["corebreadcrumbcomponent",{"_index":699,"title":{"components/CoreBreadcrumbComponent.html":{}},"body":{"components/AccordionCommonComponent.html":{},"components/ButtonComponent.html":{},"components/ButtonGroupComponent.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"components/ConfirmTemplateComponent.html":{},"components/CoreBreadcrumbComponent.html":{},"components/DatepickerComponent.html":{},"components/DropdownComponent.html":{},"components/EmailComponent.html":{},"components/ErrorContainerComponent.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/FullNameComponent.html":{},"components/GeocoderInputComponent.html":{},"components/HeaderComponent.html":{},"components/NameComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"components/RadioComponent.html":{},"components/SampleModalComponent.html":{},"modules/SharedCoreModule.html":{},"components/SinComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{},"components/XiconButtonComponent.html":{},"coverage.html":{},"overview.html":{}}}],["corporis",{"_index":1451,"title":{},"body":{"components/CityComponent.html":{},"interfaces/CountryList.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"interfaces/FileUploaderMsg.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{}}}],["correct",{"_index":1272,"title":{},"body":{"injectables/CheckCompleteBaseService.html":{},"interfaces/PageListInterface.html":{},"changelog.html":{},"additional-documentation/local-development/schematics.html":{}}}],["correctly",{"_index":3788,"title":{},"body":{"guards/LoadPageGuardService.html":{},"guards/RouteGuardService.html":{},"changelog.html":{}}}],["correspond",{"_index":445,"title":{},"body":{"classes/AbstractTestPage.html":{}}}],["corresponding",{"_index":547,"title":{},"body":{"classes/AbstractTestPage.html":{}}}],["corresponds",{"_index":589,"title":{},"body":{"classes/AbstractTestPage.html":{},"additional-documentation/local-development/components.html":{}}}],["cost",{"_index":1730,"title":{},"body":{"classes/Container.html":{},"interfaces/WizardProgressItem.html":{}}}],["costa",{"_index":1978,"title":{},"body":{"interfaces/CountryList.html":{}}}],["could've",{"_index":2938,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["count",{"_index":3887,"title":{},"body":{"interfaces/PageList.html":{},"injectables/PageStateService.html":{}}}],["counter",{"_index":5050,"title":{},"body":{"changelog.html":{}}}],["countlength",{"_index":456,"title":{},"body":{"classes/AbstractTestPage.html":{}}}],["countlength(refnameval",{"_index":518,"title":{},"body":{"classes/AbstractTestPage.html":{}}}],["countries",{"_index":1854,"title":{},"body":{"interfaces/CountryList.html":{}}}],["country",{"_index":573,"title":{},"body":{"classes/AbstractTestPage.html":{},"interfaces/AddrLabelList.html":{},"classes/Address.html":{},"interfaces/CountryList.html":{},"interfaces/GeoAddressResult.html":{},"components/GeocoderInputComponent.html":{},"injectables/GeocoderService.html":{},"interfaces/Maxlengths.html":{},"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{},"interfaces/ReadOnlyFields.html":{},"changelog.html":{}}}],["country'},{'name",{"_index":703,"title":{},"body":{"components/AccordionCommonComponent.html":{},"components/ButtonComponent.html":{},"components/ButtonGroupComponent.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"components/ConfirmTemplateComponent.html":{},"components/CoreBreadcrumbComponent.html":{},"components/DatepickerComponent.html":{},"components/DropdownComponent.html":{},"components/EmailComponent.html":{},"components/ErrorContainerComponent.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/FullNameComponent.html":{},"components/GeocoderInputComponent.html":{},"components/HeaderComponent.html":{},"components/NameComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"components/RadioComponent.html":{},"components/SampleModalComponent.html":{},"components/SinComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{},"components/XiconButtonComponent.html":{}}}],["country.component.html",{"_index":2408,"title":{},"body":{"interfaces/CountryList.html":{}}}],["country.component.scss",{"_index":2409,"title":{},"body":{"interfaces/CountryList.html":{}}}],["country/country.component",{"_index":803,"title":{},"body":{"interfaces/AddrLabelList.html":{},"components/GeocoderInputComponent.html":{},"interfaces/Maxlengths.html":{},"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{},"interfaces/ReadOnlyFields.html":{}}}],["country/prov",{"_index":4946,"title":{},"body":{"changelog.html":{}}}],["country/province",{"_index":4916,"title":{},"body":{"changelog.html":{}}}],["country/province/region",{"_index":4487,"title":{},"body":{"directives/ValidateRegionDirective.html":{}}}],["country_",{"_index":2410,"title":{},"body":{"interfaces/CountryList.html":{}}}],["country_list",{"_index":802,"title":{},"body":{"interfaces/AddrLabelList.html":{},"interfaces/CountryList.html":{},"interfaces/Maxlengths.html":{},"interfaces/ReadOnlyFields.html":{},"coverage.html":{}}}],["country_list.find",{"_index":2406,"title":{},"body":{"interfaces/CountryList.html":{}}}],["countrycode",{"_index":1855,"title":{},"body":{"interfaces/CountryList.html":{}}}],["countrycomponent",{"_index":702,"title":{},"body":{"components/AccordionCommonComponent.html":{},"components/ButtonComponent.html":{},"components/ButtonGroupComponent.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"components/ConfirmTemplateComponent.html":{},"components/CoreBreadcrumbComponent.html":{},"interfaces/CountryList.html":{},"components/DatepickerComponent.html":{},"components/DropdownComponent.html":{},"components/EmailComponent.html":{},"components/ErrorContainerComponent.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/FullNameComponent.html":{},"components/GeocoderInputComponent.html":{},"components/HeaderComponent.html":{},"components/NameComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"components/RadioComponent.html":{},"components/SampleModalComponent.html":{},"modules/SharedCoreModule.html":{},"components/SinComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{},"components/XiconButtonComponent.html":{},"coverage.html":{},"overview.html":{}}}],["countrylist",{"_index":799,"title":{"interfaces/CountryList.html":{}},"body":{"interfaces/AddrLabelList.html":{},"interfaces/CountryList.html":{},"interfaces/Maxlengths.html":{},"interfaces/ReadOnlyFields.html":{},"coverage.html":{}}}],["countryobj",{"_index":960,"title":{},"body":{"interfaces/AddrLabelList.html":{},"interfaces/CountryList.html":{},"interfaces/Maxlengths.html":{},"interfaces/ReadOnlyFields.html":{}}}],["countryobj.countrycode",{"_index":964,"title":{},"body":{"interfaces/AddrLabelList.html":{},"interfaces/Maxlengths.html":{},"interfaces/ReadOnlyFields.html":{}}}],["countryobj.description",{"_index":2407,"title":{},"body":{"interfaces/CountryList.html":{}}}],["counts",{"_index":520,"title":{},"body":{"classes/AbstractTestPage.html":{}}}],["coverage",{"_index":5250,"title":{"coverage.html":{}},"body":{"coverage.html":{}}}],["cpv",{"_index":1947,"title":{},"body":{"interfaces/CountryList.html":{}}}],["cr18890",{"_index":4744,"title":{},"body":{"changelog.html":{}}}],["cr18975",{"_index":4675,"title":{},"body":{"changelog.html":{}}}],["create",{"_index":1081,"title":{},"body":{"components/ButtonComponent.html":{},"injectables/CheckCompleteBaseService.html":{},"interfaces/FileUploaderMsg.html":{},"components/HeaderComponent.html":{},"guards/LoadPageGuardService.html":{},"interfaces/PageListInterface.html":{},"guards/RouteGuardService.html":{},"components/XiconButtonComponent.html":{},"changelog.html":{},"additional-documentation/getting-started.html":{},"additional-documentation/local-development/schematics.html":{},"additional-documentation/local-development/components.html":{}}}],["create_facility_pages.home.fullpath",{"_index":2619,"title":{},"body":{"injectables/DefaultPageGuardService.html":{}}}],["created",{"_index":2823,"title":{},"body":{"interfaces/FileUploaderMsg.html":{},"changelog.html":{},"additional-documentation/local-development/components.html":{}}}],["createifmissing",{"_index":5369,"title":{},"body":{"coverage.html":{}}}],["creates",{"_index":5544,"title":{},"body":{"additional-documentation/local-development/schematics.html":{}}}],["createtestingmodule",{"_index":5263,"title":{},"body":{"coverage.html":{}}}],["creating",{"_index":1224,"title":{},"body":{"injectables/CheckCompleteBaseService.html":{},"interfaces/PageListInterface.html":{}}}],["cri",{"_index":1977,"title":{},"body":{"interfaces/CountryList.html":{}}}],["criteria",{"_index":2689,"title":{},"body":{"components/EmailComponent.html":{},"components/NameComponent.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"directives/ValidateBcPostalDirective.html":{},"directives/ValidateCityDirective.html":{},"directives/ValidateNameDirective.html":{},"directives/ValidatePostalcodeDirective.html":{},"directives/ValidateRegionDirective.html":{},"directives/ValidateStreetDirective.html":{}}}],["criteria.test",{"_index":3848,"title":{},"body":{"components/NameComponent.html":{},"directives/ValidateBcPostalDirective.html":{},"directives/ValidateCityDirective.html":{},"directives/ValidateNameDirective.html":{},"directives/ValidatePostalcodeDirective.html":{},"directives/ValidateRegionDirective.html":{},"directives/ValidateStreetDirective.html":{}}}],["criteriamsg",{"_index":3959,"title":{},"body":{"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{}}}],["croatia",{"_index":1984,"title":{},"body":{"interfaces/CountryList.html":{}}}],["crumbs",{"_index":1773,"title":{},"body":{"classes/Container.html":{},"interfaces/WizardProgressItem.html":{}}}],["css",{"_index":5070,"title":{},"body":{"changelog.html":{}}}],["ctx",{"_index":3213,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["cub",{"_index":1985,"title":{},"body":{"interfaces/CountryList.html":{}}}],["cuba",{"_index":1986,"title":{},"body":{"interfaces/CountryList.html":{}}}],["cunha",{"_index":2262,"title":{},"body":{"interfaces/CountryList.html":{}}}],["cupiditate",{"_index":1459,"title":{},"body":{"components/CityComponent.html":{},"interfaces/CountryList.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"interfaces/FileUploaderMsg.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{}}}],["curaçao",{"_index":1988,"title":{},"body":{"interfaces/CountryList.html":{}}}],["curr",{"_index":3164,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["currently",{"_index":497,"title":{},"body":{"classes/AbstractTestPage.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"components/FormSubmitBarComponent.html":{},"interfaces/ISpaEnvResponse.html":{},"additional-documentation/getting-started.html":{}}}],["currentpage",{"_index":3210,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["custom",{"_index":598,"title":{},"body":{"classes/AbstractTestPage.html":{},"components/ButtonComponent.html":{},"injectables/CheckCompleteBaseService.html":{},"interfaces/ISpaEnvResponse.html":{},"interfaces/PageListInterface.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"changelog.html":{},"todo.html":{}}}],["customize",{"_index":5134,"title":{},"body":{"changelog.html":{}}}],["cutoffdate",{"_index":3709,"title":{},"body":{"interfaces/ISpaEnvResponse.html":{}}}],["cuw",{"_index":1987,"title":{},"body":{"interfaces/CountryList.html":{}}}],["cxr",{"_index":1962,"title":{},"body":{"interfaces/CountryList.html":{}}}],["cycles",{"_index":2531,"title":{},"body":{"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{}}}],["cym",{"_index":1950,"title":{},"body":{"interfaces/CountryList.html":{}}}],["cyp",{"_index":1989,"title":{},"body":{"interfaces/CountryList.html":{}}}],["cyprus",{"_index":1990,"title":{},"body":{"interfaces/CountryList.html":{}}}],["cze",{"_index":1991,"title":{},"body":{"interfaces/CountryList.html":{}}}],["czech",{"_index":1992,"title":{},"body":{"interfaces/CountryList.html":{}}}],["côte",{"_index":1981,"title":{},"body":{"interfaces/CountryList.html":{}}}],["d",{"_index":3139,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["d.ts",{"_index":5535,"title":{},"body":{"additional-documentation/local-development/schematics.html":{}}}],["d302941",{"_index":4612,"title":{},"body":{"changelog.html":{}}}],["d4f0e3b",{"_index":5004,"title":{},"body":{"changelog.html":{}}}],["d5bf00b",{"_index":5180,"title":{},"body":{"changelog.html":{}}}],["d5dd02f",{"_index":4883,"title":{},"body":{"changelog.html":{}}}],["d5f44c4",{"_index":5194,"title":{},"body":{"changelog.html":{}}}],["d[abceghj",{"_index":1018,"title":{},"body":{"classes/Address.html":{},"directives/ValidateBcPostalDirective.html":{},"directives/ValidatePostalcodeDirective.html":{}}}],["d\\'ivoire",{"_index":1982,"title":{},"body":{"interfaces/CountryList.html":{}}}],["d]+/.test",{"_index":2568,"title":{},"body":{"directives/DateFieldFormatDirective.html":{}}}],["da",{"_index":2261,"title":{},"body":{"interfaces/CountryList.html":{}}}],["dae52b0",{"_index":4615,"title":{},"body":{"changelog.html":{}}}],["danger",{"_index":626,"title":{},"body":{"classes/AbstractTestPage.html":{},"components/ButtonComponent.html":{},"components/PasswordComponent.html":{}}}],["danging",{"_index":4742,"title":{},"body":{"changelog.html":{}}}],["darken",{"_index":4983,"title":{},"body":{"changelog.html":{}}}],["darussalam",{"_index":1935,"title":{},"body":{"interfaces/CountryList.html":{}}}],["dashboard",{"_index":1845,"title":{},"body":{"components/CoreBreadcrumbComponent.html":{}}}],["data",{"_index":342,"title":{},"body":{"classes/AbstractHttpService.html":{},"classes/AbstractTestPage.html":{},"interfaces/AddrLabelList.html":{},"classes/Address.html":{},"components/ButtonGroupComponent.html":{},"components/CheckboxComponent.html":{},"interfaces/CommonAttachmentJson.html":{},"classes/CommonImage.html":{},"classes/CommonImageProcessingError.html":{},"interfaces/CommonImageScaleFactors.html":{},"classes/CommonImageScaleFactorsImpl.html":{},"interfaces/CommonLogMessage.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"interfaces/FileUploaderMsg.html":{},"components/GeocoderInputComponent.html":{},"interfaces/ISpaEnvResponse.html":{},"interfaces/Maxlengths.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"classes/Person.html":{},"interfaces/ReadOnlyFields.html":{},"components/ToggleComponent.html":{},"changelog.html":{}}}],["data.city",{"_index":974,"title":{},"body":{"interfaces/AddrLabelList.html":{},"components/GeocoderInputComponent.html":{},"interfaces/Maxlengths.html":{},"interfaces/ReadOnlyFields.html":{}}}],["data.country",{"_index":976,"title":{},"body":{"interfaces/AddrLabelList.html":{},"interfaces/Maxlengths.html":{},"interfaces/ReadOnlyFields.html":{}}}],["data.province",{"_index":975,"title":{},"body":{"interfaces/AddrLabelList.html":{},"interfaces/Maxlengths.html":{},"interfaces/ReadOnlyFields.html":{}}}],["data.service",{"_index":1218,"title":{},"body":{"modules/CaptchaModule.html":{},"interfaces/FileUploaderMsg.html":{}}}],["data.service.ts",{"_index":1159,"title":{},"body":{"injectables/CaptchaDataService.html":{},"injectables/ServerPayload.html":{},"coverage.html":{}}}],["data.service.ts:10",{"_index":4263,"title":{},"body":{"injectables/ServerPayload.html":{}}}],["data.service.ts:11",{"_index":4266,"title":{},"body":{"injectables/ServerPayload.html":{}}}],["data.service.ts:12",{"_index":4264,"title":{},"body":{"injectables/ServerPayload.html":{}}}],["data.service.ts:16",{"_index":1164,"title":{},"body":{"injectables/CaptchaDataService.html":{}}}],["data.service.ts:21",{"_index":1171,"title":{},"body":{"injectables/CaptchaDataService.html":{}}}],["data.service.ts:29",{"_index":1175,"title":{},"body":{"injectables/CaptchaDataService.html":{}}}],["data.service.ts:40",{"_index":1167,"title":{},"body":{"injectables/CaptchaDataService.html":{}}}],["data.service.ts:9",{"_index":4265,"title":{},"body":{"injectables/ServerPayload.html":{}}}],["data.street",{"_index":973,"title":{},"body":{"interfaces/AddrLabelList.html":{},"components/GeocoderInputComponent.html":{},"interfaces/Maxlengths.html":{},"interfaces/ReadOnlyFields.html":{}}}],["datachange",{"_index":1134,"title":{},"body":{"components/ButtonGroupComponent.html":{},"components/CheckboxComponent.html":{},"components/ToggleComponent.html":{}}}],["dataservice",{"_index":2817,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["dataurl",{"_index":2888,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["date",{"_index":1615,"title":{},"body":{"interfaces/CommonLogMessage.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"classes/Person.html":{},"changelog.html":{},"dependencies.html":{}}}],["date'},{'name",{"_index":705,"title":{},"body":{"components/AccordionCommonComponent.html":{},"components/ButtonComponent.html":{},"components/ButtonGroupComponent.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"components/ConfirmTemplateComponent.html":{},"components/CoreBreadcrumbComponent.html":{},"components/DatepickerComponent.html":{},"components/DropdownComponent.html":{},"components/EmailComponent.html":{},"components/ErrorContainerComponent.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/FullNameComponent.html":{},"components/GeocoderInputComponent.html":{},"components/HeaderComponent.html":{},"components/NameComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"components/RadioComponent.html":{},"components/SampleModalComponent.html":{},"components/SinComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{},"components/XiconButtonComponent.html":{}}}],["date(date.year",{"_index":2492,"title":{},"body":{"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{}}}],["date.component.ts",{"_index":4363,"title":{},"body":{"interfaces/SimpleDate.html":{},"todo.html":{}}}],["date.day",{"_index":2494,"title":{},"body":{"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{}}}],["date.getdate",{"_index":2488,"title":{},"body":{"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{}}}],["date.getfullyear",{"_index":2484,"title":{},"body":{"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{}}}],["date.getmonth",{"_index":2486,"title":{},"body":{"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{}}}],["date.interface.ts",{"_index":4359,"title":{},"body":{"interfaces/SimpleDate.html":{},"coverage.html":{}}}],["date.month",{"_index":2493,"title":{},"body":{"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{}}}],["date.year",{"_index":2491,"title":{},"body":{"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{}}}],["datechange",{"_index":2451,"title":{},"body":{"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{}}}],["datecomponent",{"_index":704,"title":{},"body":{"components/AccordionCommonComponent.html":{},"components/ButtonComponent.html":{},"components/ButtonGroupComponent.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"components/ConfirmTemplateComponent.html":{},"components/CoreBreadcrumbComponent.html":{},"components/DatepickerComponent.html":{},"components/DropdownComponent.html":{},"components/EmailComponent.html":{},"components/ErrorContainerComponent.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/FullNameComponent.html":{},"components/GeocoderInputComponent.html":{},"components/HeaderComponent.html":{},"components/NameComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"components/RadioComponent.html":{},"components/SampleModalComponent.html":{},"modules/SharedCoreModule.html":{},"components/SinComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{},"components/XiconButtonComponent.html":{},"changelog.html":{},"coverage.html":{},"overview.html":{}}}],["dateerrormsg",{"_index":2419,"title":{"interfaces/DateErrorMsg.html":{}},"body":{"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"coverage.html":{}}}],["datefieldformatdirective",{"_index":760,"title":{"directives/DateFieldFormatDirective.html":{}},"body":{"components/AccordionCommonComponent.html":{},"components/ButtonComponent.html":{},"components/ButtonGroupComponent.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"components/ConfirmTemplateComponent.html":{},"components/CoreBreadcrumbComponent.html":{},"directives/DateFieldFormatDirective.html":{},"components/DatepickerComponent.html":{},"components/DropdownComponent.html":{},"components/EmailComponent.html":{},"components/ErrorContainerComponent.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/FullNameComponent.html":{},"components/GeocoderInputComponent.html":{},"components/HeaderComponent.html":{},"components/NameComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"components/RadioComponent.html":{},"components/SampleModalComponent.html":{},"modules/SharedCoreModule.html":{},"components/SinComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{},"components/XiconButtonComponent.html":{},"coverage.html":{},"overview.html":{}}}],["dateformat",{"_index":2473,"title":{},"body":{"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{}}}],["dateobj",{"_index":1614,"title":{},"body":{"interfaces/CommonLogMessage.html":{}}}],["dateofbirth",{"_index":4060,"title":{},"body":{"classes/Person.html":{}}}],["dateofbirthshort",{"_index":4063,"title":{},"body":{"classes/Person.html":{}}}],["datepicker",{"_index":2439,"title":{},"body":{"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"changelog.html":{}}}],["datepicker'},{'name",{"_index":707,"title":{},"body":{"components/AccordionCommonComponent.html":{},"components/ButtonComponent.html":{},"components/ButtonGroupComponent.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"components/ConfirmTemplateComponent.html":{},"components/CoreBreadcrumbComponent.html":{},"components/DatepickerComponent.html":{},"components/DropdownComponent.html":{},"components/EmailComponent.html":{},"components/ErrorContainerComponent.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/FullNameComponent.html":{},"components/GeocoderInputComponent.html":{},"components/HeaderComponent.html":{},"components/NameComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"components/RadioComponent.html":{},"components/SampleModalComponent.html":{},"components/SinComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{},"components/XiconButtonComponent.html":{}}}],["datepicker.component.html",{"_index":2446,"title":{},"body":{"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{}}}],["datepicker.component.scss",{"_index":2447,"title":{},"body":{"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{}}}],["datepickercomponent",{"_index":706,"title":{"components/DatepickerComponent.html":{}},"body":{"components/AccordionCommonComponent.html":{},"components/ButtonComponent.html":{},"components/ButtonGroupComponent.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"components/ConfirmTemplateComponent.html":{},"components/CoreBreadcrumbComponent.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"components/DropdownComponent.html":{},"components/EmailComponent.html":{},"components/ErrorContainerComponent.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/FullNameComponent.html":{},"components/GeocoderInputComponent.html":{},"components/HeaderComponent.html":{},"components/NameComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"components/RadioComponent.html":{},"components/SampleModalComponent.html":{},"modules/SharedCoreModule.html":{},"components/SinComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{},"components/XiconButtonComponent.html":{},"coverage.html":{},"overview.html":{}}}],["datepickeroptions",{"_index":2481,"title":{},"body":{"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{}}}],["datepickersizes",{"_index":2449,"title":{},"body":{"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"miscellaneous/enumerations.html":{}}}],["datepickersizes.default",{"_index":2450,"title":{},"body":{"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{}}}],["datepickersizes.mini",{"_index":2504,"title":{},"body":{"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{}}}],["dates",{"_index":2453,"title":{},"body":{"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"changelog.html":{}}}],["datetime",{"_index":2475,"title":{},"body":{"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{}}}],["day",{"_index":2487,"title":{},"body":{"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"interfaces/SimpleDate.html":{},"changelog.html":{}}}],["dayoutofrange",{"_index":2423,"title":{},"body":{"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{}}}],["dbb94e1",{"_index":5205,"title":{},"body":{"changelog.html":{}}}],["dc606f1",{"_index":4676,"title":{},"body":{"changelog.html":{}}}],["dd29a60",{"_index":5120,"title":{},"body":{"changelog.html":{}}}],["de",{"_index":5573,"title":{},"body":{"additional-documentation/local-development/schematics.html":{}}}],["debouncetime",{"_index":3354,"title":{},"body":{"components/FullNameComponent.html":{},"interfaces/FullNameErrorMsg.html":{},"components/GeocoderInputComponent.html":{}}}],["debouncetime(500",{"_index":3483,"title":{},"body":{"components/GeocoderInputComponent.html":{}}}],["debug",{"_index":4755,"title":{},"body":{"changelog.html":{}}}],["decision",{"_index":306,"title":{},"body":{"classes/AbstractHttpService.html":{},"injectables/GeocoderService.html":{}}}],["declarations",{"_index":1194,"title":{},"body":{"modules/CaptchaModule.html":{},"modules/SharedCoreModule.html":{},"index.html":{},"overview.html":{},"additional-documentation/getting-started.html":{}}}],["decorators",{"_index":89,"title":{},"body":{"classes/AbstractForm.html":{},"components/ButtonComponent.html":{},"components/ButtonGroupComponent.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"components/DatepickerComponent.html":{},"components/DropdownComponent.html":{},"components/EmailComponent.html":{},"components/GeocoderInputComponent.html":{},"components/NameComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"components/RadioComponent.html":{},"components/SampleModalComponent.html":{},"components/SinComponent.html":{},"components/ThumbnailComponent.html":{},"components/WizardProgressBarComponent.html":{}}}],["deeper",{"_index":5500,"title":{},"body":{"additional-documentation/getting-started.html":{}}}],["default",{"_index":35,"title":{},"body":{"classes/AbstractBaseForm.html":{},"classes/AbstractForm.html":{},"classes/AbstractFormControl.html":{},"classes/AbstractHttpService.html":{},"classes/AbstractReactForm.html":{},"classes/AbstractTestPage.html":{},"components/AccordionCommonComponent.html":{},"interfaces/AddrLabelList.html":{},"classes/Address.html":{},"classes/Base.html":{},"components/ButtonComponent.html":{},"components/ButtonGroupComponent.html":{},"injectables/CheckCompleteBaseService.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"classes/CommonImage.html":{},"components/ConfirmTemplateComponent.html":{},"classes/Container.html":{},"injectables/ContainerService.html":{},"interfaces/CountryList.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"injectables/DefaultPageGuardService.html":{},"components/DropdownComponent.html":{},"components/EmailComponent.html":{},"components/ErrorContainerComponent.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/FullNameComponent.html":{},"interfaces/FullNameErrorMsg.html":{},"components/GeocoderInputComponent.html":{},"injectables/GeocoderService.html":{},"components/HeaderComponent.html":{},"interfaces/IRadioItems.html":{},"interfaces/ISpaEnvResponse.html":{},"interfaces/Maxlengths.html":{},"components/NameComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"injectables/PageStateService.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"classes/Person.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"components/RadioComponent.html":{},"interfaces/ReadOnlyFields.html":{},"components/SampleModalComponent.html":{},"components/SinComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"directives/ValidatePostalcodeDirective.html":{},"components/WizardProgressBarComponent.html":{},"changelog.html":{},"miscellaneous/enumerations.html":{},"todo.html":{}}}],["defaultcolor",{"_index":1786,"title":{},"body":{"classes/Container.html":{},"injectables/ContainerService.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"interfaces/WizardProgressItem.html":{}}}],["defaultcountry",{"_index":824,"title":{},"body":{"interfaces/AddrLabelList.html":{},"interfaces/Maxlengths.html":{},"interfaces/ReadOnlyFields.html":{}}}],["defaulted",{"_index":847,"title":{},"body":{"interfaces/AddrLabelList.html":{},"interfaces/Maxlengths.html":{},"interfaces/ReadOnlyFields.html":{}}}],["defaulterrmsg",{"_index":2415,"title":{},"body":{"interfaces/CountryList.html":{},"components/PostalCodeComponent.html":{}}}],["defaulterrmsg.invalidbcpostal",{"_index":4167,"title":{},"body":{"components/PostalCodeComponent.html":{}}}],["defaulterrmsg.invalidchar",{"_index":4168,"title":{},"body":{"components/PostalCodeComponent.html":{}}}],["defaulterrmsg.pattern",{"_index":4166,"title":{},"body":{"components/PostalCodeComponent.html":{}}}],["defaulterrmsg.required",{"_index":4165,"title":{},"body":{"components/PostalCodeComponent.html":{}}}],["defaulterrormessage",{"_index":1308,"title":{},"body":{"components/CheckboxComponent.html":{}}}],["defaultpageguardservice",{"_index":2612,"title":{"injectables/DefaultPageGuardService.html":{}},"body":{"injectables/DefaultPageGuardService.html":{},"guards/LoadPageGuardService.html":{},"coverage.html":{}}}],["defaultprovince",{"_index":825,"title":{},"body":{"interfaces/AddrLabelList.html":{},"interfaces/Maxlengths.html":{},"interfaces/ReadOnlyFields.html":{}}}],["defaults",{"_index":907,"title":{},"body":{"interfaces/AddrLabelList.html":{},"interfaces/GeoAddressResult.html":{},"injectables/GeocoderService.html":{},"interfaces/Maxlengths.html":{},"interfaces/ReadOnlyFields.html":{},"changelog.html":{}}}],["defaultsubmitlabel",{"_index":1752,"title":{},"body":{"classes/Container.html":{},"injectables/ContainerService.html":{},"interfaces/WizardProgressItem.html":{},"coverage.html":{}}}],["defined",{"_index":22,"title":{},"body":{"classes/AbstractBaseForm.html":{},"classes/AbstractForm.html":{},"classes/AbstractFormControl.html":{},"classes/AbstractHttpService.html":{},"injectables/AbstractPageGuardService.html":{},"injectables/AbstractPgCheckService.html":{},"classes/AbstractReactForm.html":{},"classes/AbstractTestPage.html":{},"components/AccordionCommonComponent.html":{},"classes/Address.html":{},"classes/Base.html":{},"components/ButtonComponent.html":{},"components/ButtonGroupComponent.html":{},"injectables/CaptchaDataService.html":{},"modules/CaptchaModule.html":{},"injectables/CheckCompleteBaseService.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"classes/CommonImage.html":{},"classes/CommonImageProcessingError.html":{},"interfaces/CommonImageScaleFactors.html":{},"classes/CommonImageScaleFactorsImpl.html":{},"interfaces/CommonLogMessage.html":{},"components/ConfirmTemplateComponent.html":{},"classes/Container.html":{},"injectables/ContainerService.html":{},"components/CoreBreadcrumbComponent.html":{},"directives/DateFieldFormatDirective.html":{},"components/DatepickerComponent.html":{},"injectables/DefaultPageGuardService.html":{},"components/DropdownComponent.html":{},"directives/DuplicateCheckDirective.html":{},"components/EmailComponent.html":{},"components/ErrorContainerComponent.html":{},"interfaces/ErrorMessage.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/FullNameComponent.html":{},"components/GeocoderInputComponent.html":{},"injectables/GeocoderService.html":{},"components/HeaderComponent.html":{},"guards/LoadPageGuardService.html":{},"classes/MoHCommonLibraryError.html":{},"components/NameComponent.html":{},"components/PageFrameworkComponent.html":{},"interfaces/PageList.html":{},"interfaces/PageListInterface.html":{},"components/PageSectionComponent.html":{},"injectables/PageStateService.html":{},"components/PasswordComponent.html":{},"classes/Person.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"components/RadioComponent.html":{},"guards/RouteGuardService.html":{},"components/SampleModalComponent.html":{},"injectables/ServerPayload.html":{},"components/SinComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"directives/ValidateBcPostalDirective.html":{},"directives/ValidateCityDirective.html":{},"directives/ValidateNameDirective.html":{},"directives/ValidatePostalcodeDirective.html":{},"directives/ValidateRegionDirective.html":{},"directives/ValidateStreetDirective.html":{},"components/WizardProgressBarComponent.html":{},"components/XiconButtonComponent.html":{},"changelog.html":{},"additional-documentation/local-development/components.html":{}}}],["defining",{"_index":2523,"title":{},"body":{"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{}}}],["delay",{"_index":2756,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["delete",{"_index":3235,"title":{},"body":{"interfaces/FileUploaderMsg.html":{},"interfaces/ISpaEnvResponse.html":{},"components/ThumbnailComponent.html":{},"todo.html":{}}}],["delete(evt",{"_index":4426,"title":{},"body":{"components/ThumbnailComponent.html":{}}}],["deleted",{"_index":4767,"title":{},"body":{"changelog.html":{}}}],["deleteimage",{"_index":4420,"title":{},"body":{"components/ThumbnailComponent.html":{}}}],["deleteimage(mspimage",{"_index":3244,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["delivery",{"_index":853,"title":{},"body":{"interfaces/AddrLabelList.html":{},"interfaces/Maxlengths.html":{},"interfaces/ReadOnlyFields.html":{}}}],["democratic",{"_index":1974,"title":{},"body":{"interfaces/CountryList.html":{}}}],["denmark",{"_index":1994,"title":{},"body":{"interfaces/CountryList.html":{}}}],["denominator",{"_index":4539,"title":{},"body":{"components/WizardProgressBarComponent.html":{}}}],["dependencies",{"_index":1074,"title":{"dependencies.html":{}},"body":{"classes/Base.html":{},"modules/CaptchaModule.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"classes/Person.html":{},"modules/SharedCoreModule.html":{},"components/WizardProgressBarComponent.html":{},"dependencies.html":{},"overview.html":{},"additional-documentation/local-development/schematics.html":{},"additional-documentation/local-development/components.html":{}}}],["dependency",{"_index":1677,"title":{},"body":{"interfaces/CommonLogMessage.html":{},"additional-documentation/local-development/schematics.html":{}}}],["depending",{"_index":919,"title":{},"body":{"interfaces/AddrLabelList.html":{},"interfaces/Maxlengths.html":{},"interfaces/ReadOnlyFields.html":{}}}],["deployed",{"_index":1210,"title":{},"body":{"modules/CaptchaModule.html":{}}}],["deployurl",{"_index":3590,"title":{},"body":{"components/HeaderComponent.html":{}}}],["deprecate",{"_index":5000,"title":{},"body":{"changelog.html":{}}}],["deprecated",{"_index":398,"title":{},"body":{"injectables/AbstractPgCheckService.html":{},"components/ButtonGroupComponent.html":{},"interfaces/FileUploaderMsg.html":{},"guards/RouteGuardService.html":{},"directives/ValidateBcPostalDirective.html":{},"directives/ValidateNameDirective.html":{},"components/XiconButtonComponent.html":{},"changelog.html":{}}}],["depreciated",{"_index":1274,"title":{},"body":{"injectables/CheckCompleteBaseService.html":{},"interfaces/PageListInterface.html":{},"changelog.html":{}}}],["deprecriated",{"_index":4721,"title":{},"body":{"changelog.html":{}}}],["desc",{"_index":4251,"title":{},"body":{"interfaces/SampleImageInterface.html":{},"components/SampleModalComponent.html":{}}}],["description",{"_index":157,"title":{},"body":{"classes/AbstractFormControl.html":{},"classes/AbstractHttpService.html":{},"injectables/AbstractPageGuardService.html":{},"classes/AbstractTestPage.html":{},"components/AccordionCommonComponent.html":{},"classes/Address.html":{},"classes/Base.html":{},"components/ButtonComponent.html":{},"components/ButtonGroupComponent.html":{},"injectables/CheckCompleteBaseService.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"classes/CommonImage.html":{},"classes/Container.html":{},"components/CoreBreadcrumbComponent.html":{},"interfaces/CountryList.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"injectables/DefaultPageGuardService.html":{},"components/EmailComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/FullNameComponent.html":{},"components/GeocoderInputComponent.html":{},"injectables/GeocoderService.html":{},"components/HeaderComponent.html":{},"interfaces/IRadioItems.html":{},"interfaces/ISpaEnvResponse.html":{},"guards/LoadPageGuardService.html":{},"components/NameComponent.html":{},"components/PageFrameworkComponent.html":{},"interfaces/PageListInterface.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"classes/Person.html":{},"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{},"components/RadioComponent.html":{},"interfaces/SimpleDate.html":{},"components/SinComponent.html":{},"components/WizardProgressBarComponent.html":{}}}],["descriptions",{"_index":4931,"title":{},"body":{"changelog.html":{}}}],["deserunt",{"_index":1467,"title":{},"body":{"components/CityComponent.html":{},"interfaces/CountryList.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"interfaces/FileUploaderMsg.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{}}}],["design",{"_index":780,"title":{},"body":{"interfaces/AddrLabelList.html":{},"modules/CaptchaModule.html":{},"components/CityComponent.html":{},"components/CoreBreadcrumbComponent.html":{},"interfaces/CountryList.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"interfaces/FileUploaderMsg.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"interfaces/Maxlengths.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{},"interfaces/ReadOnlyFields.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{},"changelog.html":{}}}],["designed",{"_index":3647,"title":{},"body":{"interfaces/ISpaEnvResponse.html":{}}}],["designs",{"_index":5016,"title":{},"body":{"changelog.html":{}}}],["destroydate",{"_index":4614,"title":{},"body":{"changelog.html":{}}}],["detailed",{"_index":5496,"title":{},"body":{"additional-documentation/getting-started.html":{}}}],["detect",{"_index":2853,"title":{},"body":{"interfaces/FileUploaderMsg.html":{},"changelog.html":{}}}],["detection",{"_index":2530,"title":{},"body":{"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"components/FormActionBarComponent.html":{}}}],["detector",{"_index":2852,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["determine",{"_index":1030,"title":{},"body":{"classes/Address.html":{},"interfaces/ISpaEnvResponse.html":{},"guards/LoadPageGuardService.html":{},"guards/RouteGuardService.html":{},"directives/ValidateBcPostalDirective.html":{}}}],["determines",{"_index":47,"title":{},"body":{"classes/AbstractBaseForm.html":{},"classes/AbstractForm.html":{},"classes/AbstractReactForm.html":{},"interfaces/ISpaEnvResponse.html":{}}}],["deu",{"_index":2041,"title":{},"body":{"interfaces/CountryList.html":{}}}],["dev",{"_index":1287,"title":{},"body":{"injectables/CheckCompleteBaseService.html":{},"components/FullNameComponent.html":{},"interfaces/FullNameErrorMsg.html":{},"interfaces/ISpaEnvResponse.html":{},"interfaces/PageListInterface.html":{}}}],["developers",{"_index":184,"title":{},"body":{"classes/AbstractFormControl.html":{}}}],["development",{"_index":4091,"title":{"additional-documentation/local-development.html":{}},"body":{"classes/Person.html":{},"changelog.html":{},"additional-documentation/getting-started.html":{},"additional-documentation/local-development.html":{},"additional-documentation/local-development/components.html":{}}}],["device",{"_index":3656,"title":{},"body":{"interfaces/ISpaEnvResponse.html":{}}}],["devkit/schematics",{"_index":5553,"title":{},"body":{"additional-documentation/local-development/schematics.html":{}}}],["df26aa1",{"_index":5187,"title":{},"body":{"changelog.html":{}}}],["df5bd4d",{"_index":4628,"title":{},"body":{"changelog.html":{}}}],["df678e6",{"_index":5136,"title":{},"body":{"changelog.html":{}}}],["dialog",{"_index":3027,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["differ",{"_index":5614,"title":{},"body":{"additional-documentation/local-development/components.html":{}}}],["differenceinyears",{"_index":4099,"title":{},"body":{"classes/Person.html":{}}}],["different",{"_index":5594,"title":{},"body":{"additional-documentation/local-development/components.html":{}}}],["directive",{"_index":215,"title":{"directives/DateFieldFormatDirective.html":{},"directives/DuplicateCheckDirective.html":{},"directives/ValidateBcPostalDirective.html":{},"directives/ValidateCityDirective.html":{},"directives/ValidateNameDirective.html":{},"directives/ValidatePostalcodeDirective.html":{},"directives/ValidateRegionDirective.html":{},"directives/ValidateStreetDirective.html":{}},"body":{"classes/AbstractFormControl.html":{},"components/AccordionCommonComponent.html":{},"components/ButtonComponent.html":{},"components/ButtonGroupComponent.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"components/ConfirmTemplateComponent.html":{},"components/CoreBreadcrumbComponent.html":{},"directives/DateFieldFormatDirective.html":{},"components/DatepickerComponent.html":{},"components/DropdownComponent.html":{},"directives/DuplicateCheckDirective.html":{},"components/EmailComponent.html":{},"components/ErrorContainerComponent.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/FullNameComponent.html":{},"components/GeocoderInputComponent.html":{},"components/HeaderComponent.html":{},"components/NameComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"components/RadioComponent.html":{},"components/SampleModalComponent.html":{},"components/SinComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"directives/ValidateBcPostalDirective.html":{},"directives/ValidateCityDirective.html":{},"directives/ValidateNameDirective.html":{},"directives/ValidatePostalcodeDirective.html":{},"directives/ValidateRegionDirective.html":{},"directives/ValidateStreetDirective.html":{},"components/WizardProgressBarComponent.html":{},"components/XiconButtonComponent.html":{},"changelog.html":{},"coverage.html":{}}}],["directive's",{"_index":3732,"title":{},"body":{"interfaces/ISpaEnvResponse.html":{}}}],["directives",{"_index":759,"title":{},"body":{"components/AccordionCommonComponent.html":{},"components/ButtonComponent.html":{},"components/ButtonGroupComponent.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"components/ConfirmTemplateComponent.html":{},"components/CoreBreadcrumbComponent.html":{},"directives/DateFieldFormatDirective.html":{},"components/DatepickerComponent.html":{},"components/DropdownComponent.html":{},"directives/DuplicateCheckDirective.html":{},"components/EmailComponent.html":{},"components/ErrorContainerComponent.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/FullNameComponent.html":{},"components/GeocoderInputComponent.html":{},"components/HeaderComponent.html":{},"components/NameComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"components/RadioComponent.html":{},"components/SampleModalComponent.html":{},"modules/SharedCoreModule.html":{},"components/SinComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"directives/ValidateBcPostalDirective.html":{},"directives/ValidateCityDirective.html":{},"directives/ValidateNameDirective.html":{},"directives/ValidatePostalcodeDirective.html":{},"directives/ValidateRegionDirective.html":{},"directives/ValidateStreetDirective.html":{},"components/WizardProgressBarComponent.html":{},"components/XiconButtonComponent.html":{},"overview.html":{}}}],["directly",{"_index":1036,"title":{},"body":{"classes/Address.html":{},"additional-documentation/local-development/components.html":{}}}],["disable",{"_index":192,"title":{},"body":{"classes/AbstractFormControl.html":{},"interfaces/AddrLabelList.html":{},"interfaces/Maxlengths.html":{},"interfaces/ReadOnlyFields.html":{},"changelog.html":{}}}],["disablebefore",{"_index":2461,"title":{},"body":{"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{}}}],["disablecontinue",{"_index":3714,"title":{},"body":{"interfaces/ISpaEnvResponse.html":{},"changelog.html":{}}}],["disabled",{"_index":11,"title":{},"body":{"classes/AbstractBaseForm.html":{},"classes/AbstractForm.html":{},"classes/AbstractFormControl.html":{},"classes/AbstractReactForm.html":{},"interfaces/AddrLabelList.html":{},"components/ButtonComponent.html":{},"components/ButtonGroupComponent.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"interfaces/CountryList.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"components/EmailComponent.html":{},"components/FullNameComponent.html":{},"interfaces/FullNameErrorMsg.html":{},"interfaces/Maxlengths.html":{},"components/NameComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"components/RadioComponent.html":{},"interfaces/ReadOnlyFields.html":{},"components/SinComponent.html":{}}}],["disablegeocoder",{"_index":826,"title":{},"body":{"interfaces/AddrLabelList.html":{},"interfaces/Maxlengths.html":{},"interfaces/ReadOnlyFields.html":{},"changelog.html":{}}}],["disables",{"_index":31,"title":{},"body":{"classes/AbstractBaseForm.html":{},"classes/AbstractForm.html":{},"classes/AbstractReactForm.html":{}}}],["disablesince",{"_index":2458,"title":{},"body":{"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{}}}],["disableuntil",{"_index":2454,"title":{},"body":{"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{}}}],["disabling",{"_index":3644,"title":{},"body":{"interfaces/ISpaEnvResponse.html":{}}}],["disiplay",{"_index":3520,"title":{},"body":{"components/GeocoderInputComponent.html":{}}}],["display",{"_index":416,"title":{},"body":{"classes/AbstractReactForm.html":{},"interfaces/AddrLabelList.html":{},"classes/Container.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"interfaces/FileUploaderMsg.html":{},"components/FormActionBarComponent.html":{},"interfaces/IRadioItems.html":{},"interfaces/ISpaEnvResponse.html":{},"interfaces/Maxlengths.html":{},"components/PageSectionComponent.html":{},"classes/Person.html":{},"components/PostalCodeComponent.html":{},"components/RadioComponent.html":{},"interfaces/ReadOnlyFields.html":{},"components/SinComponent.html":{},"interfaces/WizardProgressItem.html":{},"changelog.html":{}}}],["display=\"table",{"_index":3603,"title":{},"body":{"interfaces/IRadioItems.html":{},"components/RadioComponent.html":{}}}],["display='inline",{"_index":3608,"title":{},"body":{"interfaces/IRadioItems.html":{},"components/RadioComponent.html":{}}}],["displayed",{"_index":498,"title":{},"body":{"classes/AbstractTestPage.html":{},"interfaces/FileUploaderMsg.html":{}}}],["displayerror",{"_index":2726,"title":{},"body":{"components/ErrorContainerComponent.html":{}}}],["displayicon",{"_index":1692,"title":{},"body":{"components/ConfirmTemplateComponent.html":{}}}],["displaying",{"_index":4925,"title":{},"body":{"changelog.html":{}}}],["displaymask",{"_index":4124,"title":{},"body":{"components/PostalCodeComponent.html":{}}}],["dist",{"_index":2749,"title":{},"body":{"interfaces/FileUploaderMsg.html":{},"changelog.html":{},"dependencies.html":{},"additional-documentation/local-development/components.html":{}}}],["dist/build/pdf",{"_index":2782,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["dist/build/pdf.worker.entry",{"_index":2784,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["dist/common",{"_index":5610,"title":{},"body":{"additional-documentation/local-development/components.html":{}}}],["distantfuture",{"_index":5291,"title":{},"body":{"coverage.html":{}}}],["distantpast",{"_index":5292,"title":{},"body":{"coverage.html":{}}}],["distinctio",{"_index":1430,"title":{},"body":{"components/CityComponent.html":{},"interfaces/CountryList.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"interfaces/FileUploaderMsg.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{}}}],["distinctuntilchanged",{"_index":3476,"title":{},"body":{"components/GeocoderInputComponent.html":{}}}],["distributed",{"_index":5457,"title":{},"body":{"license.html":{}}}],["divisible",{"_index":4410,"title":{},"body":{"components/SinComponent.html":{}}}],["divs",{"_index":3919,"title":{},"body":{"components/PageSectionComponent.html":{}}}],["dji",{"_index":1995,"title":{},"body":{"interfaces/CountryList.html":{}}}],["djibouti",{"_index":1996,"title":{},"body":{"interfaces/CountryList.html":{}}}],["dma",{"_index":1997,"title":{},"body":{"interfaces/CountryList.html":{}}}],["dnk",{"_index":1993,"title":{},"body":{"interfaces/CountryList.html":{}}}],["dob",{"_index":4081,"title":{},"body":{"classes/Person.html":{}}}],["dobformat",{"_index":4061,"title":{},"body":{"classes/Person.html":{}}}],["doc",{"_index":4860,"title":{},"body":{"changelog.html":{}}}],["docinitparams",{"_index":3215,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["docs",{"_index":3691,"title":{},"body":{"interfaces/ISpaEnvResponse.html":{},"changelog.html":{}}}],["document",{"_index":2683,"title":{},"body":{"components/EmailComponent.html":{},"components/NameComponent.html":{},"changelog.html":{},"additional-documentation/local-development/schematics.html":{}}}],["document.body.scrollheight",{"_index":617,"title":{},"body":{"classes/AbstractTestPage.html":{}}}],["document.createelement('canvas",{"_index":3211,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["document.createelement('img",{"_index":3186,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["document.getelementsbyclassname('horizontal",{"_index":4552,"title":{},"body":{"components/WizardProgressBarComponent.html":{}}}],["document:paste",{"_index":3971,"title":{},"body":{"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{}}}],["document:paste(event",{"_index":3988,"title":{},"body":{"components/PasswordComponent.html":{}}}],["documentation",{"_index":4819,"title":{},"body":{"changelog.html":{},"coverage.html":{},"index.html":{},"additional-documentation/getting-started.html":{},"additional-documentation/local-development/components.html":{}}}],["documents",{"_index":2813,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["documenttype",{"_index":1516,"title":{},"body":{"interfaces/CommonAttachmentJson.html":{},"classes/CommonImage.html":{},"classes/CommonImageProcessingError.html":{},"interfaces/CommonImageScaleFactors.html":{},"classes/CommonImageScaleFactorsImpl.html":{}}}],["doesn't",{"_index":4626,"title":{},"body":{"changelog.html":{}}}],["doing",{"_index":1123,"title":{},"body":{"components/ButtonGroupComponent.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{}}}],["dolor",{"_index":1400,"title":{},"body":{"components/CityComponent.html":{},"interfaces/CountryList.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"interfaces/FileUploaderMsg.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{}}}],["dom",{"_index":654,"title":{},"body":{"components/AccordionCommonComponent.html":{},"components/ButtonComponent.html":{},"components/ButtonGroupComponent.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"components/ConfirmTemplateComponent.html":{},"components/CoreBreadcrumbComponent.html":{},"interfaces/CountryList.html":{},"components/DatepickerComponent.html":{},"components/DropdownComponent.html":{},"components/EmailComponent.html":{},"components/ErrorContainerComponent.html":{},"interfaces/FileUploaderMsg.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/FullNameComponent.html":{},"components/GeocoderInputComponent.html":{},"components/HeaderComponent.html":{},"components/NameComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"components/RadioComponent.html":{},"components/SampleModalComponent.html":{},"components/SinComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{},"components/XiconButtonComponent.html":{}}}],["dominica",{"_index":1998,"title":{},"body":{"interfaces/CountryList.html":{}}}],["dominican",{"_index":1999,"title":{},"body":{"interfaces/CountryList.html":{}}}],["don't",{"_index":1315,"title":{},"body":{"components/CheckboxComponent.html":{},"interfaces/CommonLogMessage.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"interfaces/FileUploaderMsg.html":{},"components/HeaderComponent.html":{}}}],["don'ts",{"_index":5498,"title":{},"body":{"additional-documentation/getting-started.html":{}}}],["done",{"_index":2939,"title":{},"body":{"interfaces/FileUploaderMsg.html":{},"additional-documentation/local-development/schematics.html":{}}}],["don’t",{"_index":3660,"title":{},"body":{"interfaces/ISpaEnvResponse.html":{}}}],["dos",{"_index":5497,"title":{},"body":{"additional-documentation/getting-started.html":{}}}],["double",{"_index":3865,"title":{},"body":{"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"additional-documentation/getting-started.html":{}}}],["down",{"_index":561,"title":{},"body":{"classes/AbstractTestPage.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"interfaces/FileUploaderMsg.html":{},"components/ThumbnailComponent.html":{},"changelog.html":{}}}],["drag",{"_index":2866,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["dragover",{"_index":2953,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["dragoverstream",{"_index":2951,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["dragoverstream.pipe(map(evt",{"_index":2955,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["drop",{"_index":2873,"title":{},"body":{"interfaces/FileUploaderMsg.html":{},"components/ThumbnailComponent.html":{}}}],["dropdown",{"_index":522,"title":{},"body":{"classes/AbstractTestPage.html":{},"components/DropdownComponent.html":{},"changelog.html":{}}}],["dropdown'},{'name",{"_index":708,"title":{},"body":{"components/AccordionCommonComponent.html":{},"components/ButtonComponent.html":{},"components/ButtonGroupComponent.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"components/ConfirmTemplateComponent.html":{},"components/CoreBreadcrumbComponent.html":{},"components/DatepickerComponent.html":{},"components/DropdownComponent.html":{},"components/EmailComponent.html":{},"components/ErrorContainerComponent.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/FullNameComponent.html":{},"components/GeocoderInputComponent.html":{},"components/HeaderComponent.html":{},"components/NameComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"components/RadioComponent.html":{},"components/SampleModalComponent.html":{},"components/SinComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{},"components/XiconButtonComponent.html":{}}}],["dropdown.component.html",{"_index":2643,"title":{},"body":{"components/DropdownComponent.html":{}}}],["dropdown.component.scss",{"_index":2642,"title":{},"body":{"components/DropdownComponent.html":{}}}],["dropdowncomponent",{"_index":571,"title":{"components/DropdownComponent.html":{}},"body":{"classes/AbstractTestPage.html":{},"components/AccordionCommonComponent.html":{},"components/ButtonComponent.html":{},"components/ButtonGroupComponent.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"components/ConfirmTemplateComponent.html":{},"components/CoreBreadcrumbComponent.html":{},"components/DatepickerComponent.html":{},"components/DropdownComponent.html":{},"components/EmailComponent.html":{},"components/ErrorContainerComponent.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/FullNameComponent.html":{},"components/GeocoderInputComponent.html":{},"components/HeaderComponent.html":{},"components/NameComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"components/RadioComponent.html":{},"components/SampleModalComponent.html":{},"modules/SharedCoreModule.html":{},"components/SinComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{},"components/XiconButtonComponent.html":{},"changelog.html":{},"coverage.html":{},"overview.html":{}}}],["drops",{"_index":2868,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["dropstream",{"_index":2959,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["dropstream.pipe",{"_index":2961,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["dropzone",{"_index":2798,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["ducimus",{"_index":1454,"title":{},"body":{"components/CityComponent.html":{},"interfaces/CountryList.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"interfaces/FileUploaderMsg.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{}}}],["due",{"_index":1675,"title":{},"body":{"interfaces/CommonLogMessage.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"interfaces/FileUploaderMsg.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{}}}],["duing",{"_index":1349,"title":{},"body":{"components/CheckboxComponent.html":{}}}],["dummy",{"_index":4092,"title":{},"body":{"classes/Person.html":{}}}],["duplicate",{"_index":528,"title":{},"body":{"classes/AbstractTestPage.html":{},"directives/DuplicateCheckDirective.html":{},"interfaces/FileUploaderMsg.html":{},"components/HeaderComponent.html":{},"components/SinComponent.html":{},"changelog.html":{}}}],["duplicatecheckdirective",{"_index":762,"title":{"directives/DuplicateCheckDirective.html":{}},"body":{"components/AccordionCommonComponent.html":{},"components/ButtonComponent.html":{},"components/ButtonGroupComponent.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"components/ConfirmTemplateComponent.html":{},"components/CoreBreadcrumbComponent.html":{},"components/DatepickerComponent.html":{},"components/DropdownComponent.html":{},"directives/DuplicateCheckDirective.html":{},"components/EmailComponent.html":{},"components/ErrorContainerComponent.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/FullNameComponent.html":{},"components/GeocoderInputComponent.html":{},"components/HeaderComponent.html":{},"components/NameComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"components/RadioComponent.html":{},"components/SampleModalComponent.html":{},"modules/SharedCoreModule.html":{},"components/SinComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{},"components/XiconButtonComponent.html":{},"coverage.html":{},"overview.html":{}}}],["duplist",{"_index":2669,"title":{},"body":{"directives/DuplicateCheckDirective.html":{}}}],["duplist.find",{"_index":2678,"title":{},"body":{"directives/DuplicateCheckDirective.html":{}}}],["duplist.length",{"_index":2677,"title":{},"body":{"directives/DuplicateCheckDirective.html":{}}}],["dutch",{"_index":2300,"title":{},"body":{"interfaces/CountryList.html":{}}}],["dynamic",{"_index":5397,"title":{},"body":{"dependencies.html":{}}}],["dynamically",{"_index":920,"title":{},"body":{"interfaces/AddrLabelList.html":{},"interfaces/Maxlengths.html":{},"interfaces/ReadOnlyFields.html":{}}}],["dza",{"_index":1864,"title":{},"body":{"interfaces/CountryList.html":{}}}],["e",{"_index":3676,"title":{},"body":{"interfaces/ISpaEnvResponse.html":{}}}],["e.g",{"_index":285,"title":{},"body":{"classes/AbstractHttpService.html":{},"classes/AbstractTestPage.html":{},"components/ButtonComponent.html":{},"interfaces/CommonLogMessage.html":{},"classes/Container.html":{},"components/EmailComponent.html":{},"interfaces/FileUploaderMsg.html":{},"components/GeocoderInputComponent.html":{},"injectables/GeocoderService.html":{},"interfaces/WizardProgressItem.html":{},"components/XiconButtonComponent.html":{},"additional-documentation/getting-started.html":{},"additional-documentation/local-development/schematics.html":{},"additional-documentation/local-development/components.html":{}}}],["e0bd207",{"_index":4725,"title":{},"body":{"changelog.html":{}}}],["e2271b7",{"_index":5088,"title":{},"body":{"changelog.html":{}}}],["e2e",{"_index":437,"title":{},"body":{"classes/AbstractTestPage.html":{},"changelog.html":{}}}],["e35f16b",{"_index":5011,"title":{},"body":{"changelog.html":{}}}],["e458627",{"_index":5030,"title":{},"body":{"changelog.html":{}}}],["e485f67",{"_index":5059,"title":{},"body":{"changelog.html":{}}}],["e56ffdf",{"_index":4669,"title":{},"body":{"changelog.html":{}}}],["e5b3cfa",{"_index":4608,"title":{},"body":{"changelog.html":{}}}],["e6db87e",{"_index":4825,"title":{},"body":{"changelog.html":{}}}],["e762fc1",{"_index":5207,"title":{},"body":{"changelog.html":{}}}],["e81927b",{"_index":5095,"title":{},"body":{"changelog.html":{}}}],["e89e6f3",{"_index":4797,"title":{},"body":{"changelog.html":{}}}],["ea/pa",{"_index":2946,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["each",{"_index":179,"title":{},"body":{"classes/AbstractFormControl.html":{},"classes/AbstractReactForm.html":{},"classes/Address.html":{},"interfaces/CommonLogMessage.html":{},"interfaces/FileUploaderMsg.html":{},"guards/LoadPageGuardService.html":{},"classes/Person.html":{},"guards/RouteGuardService.html":{},"components/SinComponent.html":{},"changelog.html":{},"additional-documentation/getting-started.html":{},"additional-documentation/local-development/schematics.html":{},"additional-documentation/local-development/components.html":{}}}],["earlier",{"_index":2940,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["easier",{"_index":1092,"title":{},"body":{"components/ButtonComponent.html":{},"interfaces/CommonLogMessage.html":{}}}],["easily",{"_index":2927,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["easy",{"_index":3301,"title":{},"body":{"components/FormSubmitBarComponent.html":{}}}],["ebb6998",{"_index":4943,"title":{},"body":{"changelog.html":{}}}],["ecu",{"_index":2000,"title":{},"body":{"interfaces/CountryList.html":{}}}],["ecuador",{"_index":2001,"title":{},"body":{"interfaces/CountryList.html":{}}}],["ed615a6",{"_index":4732,"title":{},"body":{"changelog.html":{}}}],["edf0b2e",{"_index":4990,"title":{},"body":{"changelog.html":{}}}],["edge",{"_index":4804,"title":{},"body":{"changelog.html":{}}}],["edward",{"_index":4206,"title":{},"body":{"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{}}}],["egy",{"_index":2002,"title":{},"body":{"interfaces/CountryList.html":{}}}],["egypt",{"_index":2003,"title":{},"body":{"interfaces/CountryList.html":{}}}],["eib",{"_index":3114,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["el",{"_index":2005,"title":{},"body":{"interfaces/CountryList.html":{}}}],["element",{"_index":610,"title":{},"body":{"classes/AbstractTestPage.html":{},"components/AccordionCommonComponent.html":{},"components/ButtonComponent.html":{},"components/ButtonGroupComponent.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"components/ConfirmTemplateComponent.html":{},"components/CoreBreadcrumbComponent.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"components/DropdownComponent.html":{},"components/EmailComponent.html":{},"components/ErrorContainerComponent.html":{},"interfaces/FileUploaderMsg.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/FullNameComponent.html":{},"components/GeocoderInputComponent.html":{},"components/HeaderComponent.html":{},"interfaces/ISpaEnvResponse.html":{},"components/NameComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"components/RadioComponent.html":{},"components/SampleModalComponent.html":{},"components/SinComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{},"components/XiconButtonComponent.html":{},"changelog.html":{}}}],["element's",{"_index":2893,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["element(by.css('.form",{"_index":468,"title":{},"body":{"classes/AbstractTestPage.html":{}}}],["element(by.css('.skip",{"_index":477,"title":{},"body":{"classes/AbstractTestPage.html":{}}}],["element(by.css('common",{"_index":643,"title":{},"body":{"classes/AbstractTestPage.html":{}}}],["element(by.css('div[class=\"modal",{"_index":641,"title":{},"body":{"classes/AbstractTestPage.html":{}}}],["element(by.css('label[for=\"agree\"]')).element(by.css('strong')).click",{"_index":640,"title":{},"body":{"classes/AbstractTestPage.html":{}}}],["element(by.css(`input[ng",{"_index":635,"title":{},"body":{"classes/AbstractTestPage.html":{}}}],["element(by.css(`input[role=\"combobox\"]`)).sendkeys(data",{"_index":632,"title":{},"body":{"classes/AbstractTestPage.html":{}}}],["element(by.css(`ng",{"_index":627,"title":{},"body":{"classes/AbstractTestPage.html":{}}}],["element(by.csscontainingtext('span.ng",{"_index":630,"title":{},"body":{"classes/AbstractTestPage.html":{}}}],["element(by.csscontainingtext(`button[class*=\"${classval",{"_index":637,"title":{},"body":{"classes/AbstractTestPage.html":{}}}],["element(by.csscontainingtext(label",{"_index":649,"title":{},"body":{"classes/AbstractTestPage.html":{}}}],["element(by.id(await",{"_index":621,"title":{},"body":{"classes/AbstractTestPage.html":{}}}],["element.all(by.css(`input[ng",{"_index":647,"title":{},"body":{"classes/AbstractTestPage.html":{}}}],["element.all(by.csscontainingtext('lib",{"_index":619,"title":{},"body":{"classes/AbstractTestPage.html":{}}}],["elementref",{"_index":1114,"title":{},"body":{"components/ButtonComponent.html":{},"components/ButtonGroupComponent.html":{},"components/CheckboxComponent.html":{},"interfaces/FileUploaderMsg.html":{},"components/WizardProgressBarComponent.html":{}}}],["elements",{"_index":92,"title":{},"body":{"classes/AbstractForm.html":{},"classes/AbstractReactForm.html":{},"components/CoreBreadcrumbComponent.html":{},"components/PageSectionComponent.html":{}}}],["elementsgit",{"_index":4907,"title":{},"body":{"changelog.html":{}}}],["eligibility",{"_index":3681,"title":{},"body":{"interfaces/ISpaEnvResponse.html":{}}}],["elit",{"_index":1405,"title":{},"body":{"components/CityComponent.html":{},"interfaces/CountryList.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"interfaces/FileUploaderMsg.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{}}}],["email",{"_index":2686,"title":{},"body":{"components/EmailComponent.html":{},"changelog.html":{}}}],["email'},{'name",{"_index":710,"title":{},"body":{"components/AccordionCommonComponent.html":{},"components/ButtonComponent.html":{},"components/ButtonGroupComponent.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"components/ConfirmTemplateComponent.html":{},"components/CoreBreadcrumbComponent.html":{},"components/DatepickerComponent.html":{},"components/DropdownComponent.html":{},"components/EmailComponent.html":{},"components/ErrorContainerComponent.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/FullNameComponent.html":{},"components/GeocoderInputComponent.html":{},"components/HeaderComponent.html":{},"components/NameComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"components/RadioComponent.html":{},"components/SampleModalComponent.html":{},"components/SinComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{},"components/XiconButtonComponent.html":{}}}],["email.component.html",{"_index":2688,"title":{},"body":{"components/EmailComponent.html":{}}}],["email.component.scss",{"_index":2687,"title":{},"body":{"components/EmailComponent.html":{}}}],["email_",{"_index":2692,"title":{},"body":{"components/EmailComponent.html":{}}}],["emailcomponent",{"_index":709,"title":{"components/EmailComponent.html":{}},"body":{"components/AccordionCommonComponent.html":{},"components/ButtonComponent.html":{},"components/ButtonGroupComponent.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"components/ConfirmTemplateComponent.html":{},"components/CoreBreadcrumbComponent.html":{},"components/DatepickerComponent.html":{},"components/DropdownComponent.html":{},"components/EmailComponent.html":{},"components/ErrorContainerComponent.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/FullNameComponent.html":{},"components/GeocoderInputComponent.html":{},"components/HeaderComponent.html":{},"components/NameComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"components/RadioComponent.html":{},"components/SampleModalComponent.html":{},"modules/SharedCoreModule.html":{},"components/SinComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{},"components/XiconButtonComponent.html":{},"changelog.html":{},"coverage.html":{},"overview.html":{}}}],["embedded",{"_index":5015,"title":{},"body":{"changelog.html":{}}}],["emirates",{"_index":2373,"title":{},"body":{"interfaces/CountryList.html":{}}}],["emit",{"_index":2538,"title":{},"body":{"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"components/GeocoderInputComponent.html":{},"changelog.html":{}}}],["emits",{"_index":4737,"title":{},"body":{"changelog.html":{}}}],["empty",{"_index":1053,"title":{},"body":{"classes/Address.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"injectables/DefaultPageGuardService.html":{},"components/GeocoderInputComponent.html":{},"changelog.html":{},"additional-documentation/local-development/components.html":{}}}],["enabled",{"_index":4974,"title":{},"body":{"changelog.html":{}}}],["enables",{"_index":836,"title":{},"body":{"interfaces/AddrLabelList.html":{},"interfaces/Maxlengths.html":{},"interfaces/ReadOnlyFields.html":{}}}],["encapsulation",{"_index":2793,"title":{},"body":{"interfaces/FileUploaderMsg.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/ThumbnailComponent.html":{}}}],["enclose",{"_index":3289,"title":{},"body":{"components/FormSubmitBarComponent.html":{}}}],["encoding",{"_index":5580,"title":{},"body":{"additional-documentation/local-development/schematics.html":{}}}],["encountered",{"_index":3176,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["encourage",{"_index":548,"title":{},"body":{"classes/AbstractTestPage.html":{}}}],["encryptedanswer",{"_index":1174,"title":{},"body":{"injectables/CaptchaDataService.html":{},"injectables/ServerPayload.html":{}}}],["end",{"_index":5600,"title":{},"body":{"additional-documentation/local-development/components.html":{}}}],["enrolservice",{"_index":378,"title":{},"body":{"injectables/AbstractPageGuardService.html":{}}}],["ensure",{"_index":1654,"title":{},"body":{"interfaces/CommonLogMessage.html":{},"interfaces/FileUploaderMsg.html":{},"components/PageFrameworkComponent.html":{}}}],["enter",{"_index":604,"title":{},"body":{"classes/AbstractTestPage.html":{},"interfaces/FileUploaderMsg.html":{},"components/GeocoderInputComponent.html":{},"interfaces/ISpaEnvResponse.html":{}}}],["entered",{"_index":3659,"title":{},"body":{"interfaces/ISpaEnvResponse.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{}}}],["entering",{"_index":3518,"title":{},"body":{"components/GeocoderInputComponent.html":{}}}],["entries",{"_index":2837,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["entry",{"_index":5098,"title":{},"body":{"changelog.html":{},"additional-documentation/getting-started.html":{}}}],["entry.model",{"_index":2766,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["enum",{"_index":1479,"title":{},"body":{"interfaces/CommonAttachmentJson.html":{},"classes/CommonImage.html":{},"classes/CommonImageProcessingError.html":{},"interfaces/CommonImageScaleFactors.html":{},"classes/CommonImageScaleFactorsImpl.html":{},"interfaces/CommonLogMessage.html":{},"components/ConfirmTemplateComponent.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{}}}],["enumerations",{"_index":5411,"title":{"miscellaneous/enumerations.html":{}},"body":{"miscellaneous/enumerations.html":{}}}],["enums",{"_index":5518,"title":{},"body":{"additional-documentation/getting-started.html":{}}}],["env",{"_index":3626,"title":{},"body":{"interfaces/ISpaEnvResponse.html":{},"changelog.html":{}}}],["environment",{"_index":1288,"title":{},"body":{"injectables/CheckCompleteBaseService.html":{},"interfaces/PageListInterface.html":{},"changelog.html":{}}}],["environment.bypassguards",{"_index":2618,"title":{},"body":{"injectables/DefaultPageGuardService.html":{}}}],["equation",{"_index":3031,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["equatorial",{"_index":2008,"title":{},"body":{"interfaces/CountryList.html":{}}}],["equivalent",{"_index":2459,"title":{},"body":{"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{}}}],["eri",{"_index":2010,"title":{},"body":{"interfaces/CountryList.html":{}}}],["eritrea",{"_index":2011,"title":{},"body":{"interfaces/CountryList.html":{}}}],["erorr",{"_index":3754,"title":{},"body":{"interfaces/ISpaEnvResponse.html":{}}}],["err",{"_index":3447,"title":{},"body":{"components/GeocoderInputComponent.html":{}}}],["errmsg",{"_index":3312,"title":{},"body":{"components/FullNameComponent.html":{},"interfaces/FullNameErrorMsg.html":{},"interfaces/ISpaEnvResponse.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{}}}],["errmsg.criteria",{"_index":4056,"title":{},"body":{"components/PasswordComponent.html":{}}}],["errmsg.minlength",{"_index":4055,"title":{},"body":{"components/PasswordComponent.html":{}}}],["errmsg.pattern",{"_index":3375,"title":{},"body":{"components/FullNameComponent.html":{}}}],["errmsg.required",{"_index":3374,"title":{},"body":{"components/FullNameComponent.html":{},"components/PasswordComponent.html":{}}}],["error",{"_index":170,"title":{},"body":{"classes/AbstractFormControl.html":{},"classes/AbstractHttpService.html":{},"components/AccordionCommonComponent.html":{},"components/ButtonComponent.html":{},"components/ButtonGroupComponent.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"interfaces/CommonAttachmentJson.html":{},"classes/CommonImage.html":{},"classes/CommonImageProcessingError.html":{},"interfaces/CommonImageScaleFactors.html":{},"classes/CommonImageScaleFactorsImpl.html":{},"interfaces/CommonLogMessage.html":{},"components/ConfirmTemplateComponent.html":{},"components/CoreBreadcrumbComponent.html":{},"interfaces/CountryList.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"components/DropdownComponent.html":{},"components/EmailComponent.html":{},"components/ErrorContainerComponent.html":{},"interfaces/FileUploaderMsg.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/FullNameComponent.html":{},"interfaces/GeoAddressResult.html":{},"components/GeocoderInputComponent.html":{},"injectables/GeocoderService.html":{},"components/HeaderComponent.html":{},"interfaces/ISpaEnvResponse.html":{},"classes/MoHCommonLibraryError.html":{},"components/NameComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{},"components/RadioComponent.html":{},"components/SampleModalComponent.html":{},"components/SinComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{},"components/XiconButtonComponent.html":{},"changelog.html":{},"miscellaneous/enumerations.html":{}}}],["error('common",{"_index":4575,"title":{},"body":{"components/XiconButtonComponent.html":{}}}],["error('this",{"_index":3198,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["error.error",{"_index":1660,"title":{},"body":{"interfaces/CommonLogMessage.html":{},"interfaces/ISpaEnvResponse.html":{}}}],["error.error.message",{"_index":1666,"title":{},"body":{"interfaces/CommonLogMessage.html":{},"interfaces/ISpaEnvResponse.html":{}}}],["error.errorcode",{"_index":3001,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["error.errordescription",{"_index":3012,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["error.image",{"_index":3004,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["error.image.name",{"_index":3007,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["error.message",{"_index":1630,"title":{},"body":{"interfaces/CommonLogMessage.html":{}}}],["error.name",{"_index":1632,"title":{},"body":{"interfaces/CommonLogMessage.html":{}}}],["error.rawimagefile",{"_index":3006,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["error.rawimagefile.name",{"_index":3008,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["error.status",{"_index":1670,"title":{},"body":{"interfaces/CommonLogMessage.html":{},"interfaces/ISpaEnvResponse.html":{}}}],["error.statustext",{"_index":1634,"title":{},"body":{"interfaces/CommonLogMessage.html":{}}}],["error.ts",{"_index":3811,"title":{},"body":{"classes/MoHCommonLibraryError.html":{},"coverage.html":{}}}],["error.ts:1",{"_index":3813,"title":{},"body":{"classes/MoHCommonLibraryError.html":{}}}],["error_fetch_img",{"_index":5422,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["error_verify",{"_index":5425,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["errorcode",{"_index":1504,"title":{},"body":{"interfaces/CommonAttachmentJson.html":{},"classes/CommonImage.html":{},"classes/CommonImageProcessingError.html":{},"interfaces/CommonImageScaleFactors.html":{},"classes/CommonImageScaleFactorsImpl.html":{},"components/ConfirmTemplateComponent.html":{}}}],["errorcontainercomponent",{"_index":711,"title":{"components/ErrorContainerComponent.html":{}},"body":{"components/AccordionCommonComponent.html":{},"components/ButtonComponent.html":{},"components/ButtonGroupComponent.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"components/ConfirmTemplateComponent.html":{},"components/CoreBreadcrumbComponent.html":{},"components/DatepickerComponent.html":{},"components/DropdownComponent.html":{},"components/EmailComponent.html":{},"components/ErrorContainerComponent.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/FullNameComponent.html":{},"components/GeocoderInputComponent.html":{},"components/HeaderComponent.html":{},"components/NameComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"components/RadioComponent.html":{},"components/SampleModalComponent.html":{},"modules/SharedCoreModule.html":{},"components/SinComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{},"components/XiconButtonComponent.html":{},"coverage.html":{},"overview.html":{}}}],["errordescription",{"_index":1505,"title":{},"body":{"interfaces/CommonAttachmentJson.html":{},"classes/CommonImage.html":{},"classes/CommonImageProcessingError.html":{},"interfaces/CommonImageScaleFactors.html":{},"classes/CommonImageScaleFactorsImpl.html":{},"interfaces/FileUploaderMsg.html":{}}}],["errordescription.pdf.js",{"_index":1495,"title":{},"body":{"interfaces/CommonAttachmentJson.html":{},"classes/CommonImage.html":{},"classes/CommonImageProcessingError.html":{},"interfaces/CommonImageScaleFactors.html":{},"classes/CommonImageScaleFactorsImpl.html":{}}}],["errordocument",{"_index":2816,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["errorevent",{"_index":1662,"title":{},"body":{"interfaces/CommonLogMessage.html":{},"interfaces/ISpaEnvResponse.html":{}}}],["errormessage",{"_index":131,"title":{"interfaces/ErrorMessage.html":{}},"body":{"classes/AbstractFormControl.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"interfaces/CommonLogMessage.html":{},"interfaces/CountryList.html":{},"components/EmailComponent.html":{},"interfaces/ErrorMessage.html":{},"interfaces/IRadioItems.html":{},"components/NameComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{},"components/RadioComponent.html":{},"components/SinComponent.html":{},"coverage.html":{}}}],["errormessagerequired",{"_index":1132,"title":{},"body":{"components/ButtonGroupComponent.html":{}}}],["errormessages",{"_index":2429,"title":{},"body":{"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"interfaces/FileUploaderMsg.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"components/SinComponent.html":{}}}],["errormessages.dayoutofrange",{"_index":2606,"title":{},"body":{"components/DatepickerComponent.html":{}}}],["errormessages.invalidvalue",{"_index":2611,"title":{},"body":{"components/DatepickerComponent.html":{}}}],["errormessages.nofuturedatesallowed",{"_index":2610,"title":{},"body":{"components/DatepickerComponent.html":{}}}],["errormessages.nopastdatesallowed",{"_index":2609,"title":{},"body":{"components/DatepickerComponent.html":{}}}],["errormessages.required",{"_index":2605,"title":{},"body":{"components/DatepickerComponent.html":{}}}],["errormessages.yeardistantfuture",{"_index":2608,"title":{},"body":{"components/DatepickerComponent.html":{}}}],["errormessages.yeardistantpast",{"_index":2607,"title":{},"body":{"components/DatepickerComponent.html":{}}}],["errorname",{"_index":1631,"title":{},"body":{"interfaces/CommonLogMessage.html":{}}}],["errorreason",{"_index":3207,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["errors",{"_index":417,"title":{},"body":{"classes/AbstractReactForm.html":{},"interfaces/CommonLogMessage.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"interfaces/FileUploaderMsg.html":{},"components/FormActionBarComponent.html":{},"components/GeocoderInputComponent.html":{},"components/SinComponent.html":{},"changelog.html":{},"additional-documentation/local-development/schematics.html":{}}}],["errors.pipe",{"_index":3162,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["errors.pipe(scan",{"_index":3175,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["errors.pipe(scan((acc",{"_index":3174,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["esh",{"_index":2396,"title":{},"body":{"interfaces/CountryList.html":{}}}],["esp",{"_index":2316,"title":{},"body":{"interfaces/CountryList.html":{}}}],["especially",{"_index":3654,"title":{},"body":{"interfaces/ISpaEnvResponse.html":{}}}],["esse",{"_index":1423,"title":{},"body":{"components/CityComponent.html":{},"interfaces/CountryList.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"interfaces/FileUploaderMsg.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{}}}],["est",{"_index":2012,"title":{},"body":{"interfaces/CountryList.html":{}}}],["estonia",{"_index":2013,"title":{},"body":{"interfaces/CountryList.html":{}}}],["et",{"_index":1442,"title":{},"body":{"components/CityComponent.html":{},"interfaces/CountryList.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"interfaces/FileUploaderMsg.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{}}}],["etc",{"_index":575,"title":{},"body":{"classes/AbstractTestPage.html":{},"interfaces/FileUploaderMsg.html":{},"components/FormActionBarComponent.html":{},"interfaces/GeoAddressResult.html":{},"injectables/GeocoderService.html":{},"additional-documentation/getting-started.html":{},"additional-documentation/local-development/schematics.html":{}}}],["eth",{"_index":2014,"title":{},"body":{"interfaces/CountryList.html":{}}}],["ethiopia",{"_index":2015,"title":{},"body":{"interfaces/CountryList.html":{}}}],["eum",{"_index":1434,"title":{},"body":{"components/CityComponent.html":{},"interfaces/CountryList.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"interfaces/FileUploaderMsg.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{}}}],["eustatius",{"_index":1916,"title":{},"body":{"interfaces/CountryList.html":{}}}],["ev",{"_index":3582,"title":{},"body":{"components/HeaderComponent.html":{},"components/WizardProgressBarComponent.html":{}}}],["ev.url",{"_index":4528,"title":{},"body":{"components/WizardProgressBarComponent.html":{}}}],["even",{"_index":2520,"title":{},"body":{"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"interfaces/FileUploaderMsg.html":{},"additional-documentation/local-development/schematics.html":{}}}],["evenly",{"_index":4544,"title":{},"body":{"components/WizardProgressBarComponent.html":{}}}],["event",{"_index":1113,"title":{},"body":{"components/ButtonComponent.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"interfaces/CommonLogMessage.html":{},"interfaces/CountryList.html":{},"directives/DateFieldFormatDirective.html":{},"components/DatepickerComponent.html":{},"components/EmailComponent.html":{},"interfaces/FileUploaderMsg.html":{},"components/FormActionBarComponent.html":{},"components/GeocoderInputComponent.html":{},"interfaces/ISpaEnvResponse.html":{},"components/NameComponent.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{},"components/SinComponent.html":{},"changelog.html":{}}}],["event.datatransfer.files",{"_index":2963,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["event.item",{"_index":3506,"title":{},"body":{"components/GeocoderInputComponent.html":{}}}],["event.jsdate",{"_index":2537,"title":{},"body":{"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{}}}],["event.keycode",{"_index":3522,"title":{},"body":{"components/GeocoderInputComponent.html":{}}}],["event.preventdefault",{"_index":2962,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["event.stoppropagation",{"_index":3283,"title":{},"body":{"components/FormActionBarComponent.html":{}}}],["event.target",{"_index":2563,"title":{},"body":{"directives/DateFieldFormatDirective.html":{}}}],["event.target.value",{"_index":2718,"title":{},"body":{"components/EmailComponent.html":{},"components/NameComponent.html":{}}}],["event.target['files",{"_index":2969,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["eventemitter",{"_index":789,"title":{},"body":{"interfaces/AddrLabelList.html":{},"components/ButtonComponent.html":{},"components/ButtonGroupComponent.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"interfaces/CountryList.html":{},"interfaces/DateErrorMsg.html":{},"directives/DateFieldFormatDirective.html":{},"components/DatepickerComponent.html":{},"components/EmailComponent.html":{},"interfaces/FileUploaderMsg.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/FullNameComponent.html":{},"interfaces/FullNameErrorMsg.html":{},"components/GeocoderInputComponent.html":{},"interfaces/IRadioItems.html":{},"interfaces/ISpaEnvResponse.html":{},"interfaces/Maxlengths.html":{},"components/NameComponent.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{},"components/RadioComponent.html":{},"interfaces/ReadOnlyFields.html":{},"components/SinComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/XiconButtonComponent.html":{}}}],["eventemitter(false",{"_index":2560,"title":{},"body":{"directives/DateFieldFormatDirective.html":{}}}],["events",{"_index":3517,"title":{},"body":{"components/GeocoderInputComponent.html":{},"changelog.html":{}}}],["eventually",{"_index":3717,"title":{},"body":{"interfaces/ISpaEnvResponse.html":{}}}],["everything",{"_index":1612,"title":{},"body":{"interfaces/CommonLogMessage.html":{},"interfaces/GeoAddressResult.html":{},"injectables/GeocoderService.html":{}}}],["evt",{"_index":3129,"title":{},"body":{"interfaces/FileUploaderMsg.html":{},"components/ThumbnailComponent.html":{}}}],["evt.key",{"_index":3023,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["evt.preventdefault",{"_index":2958,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["evt.target.result",{"_index":3131,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["ex",{"_index":2430,"title":{},"body":{"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"components/SinComponent.html":{}}}],["exactly",{"_index":2984,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["example",{"_index":375,"title":{},"body":{"injectables/AbstractPageGuardService.html":{},"injectables/AbstractPgCheckService.html":{},"classes/AbstractTestPage.html":{},"components/AccordionCommonComponent.html":{},"components/ButtonComponent.html":{},"components/ButtonGroupComponent.html":{},"modules/CaptchaModule.html":{},"injectables/CheckCompleteBaseService.html":{},"components/CheckboxComponent.html":{},"interfaces/CommonLogMessage.html":{},"classes/Container.html":{},"components/CoreBreadcrumbComponent.html":{},"injectables/DefaultPageGuardService.html":{},"components/FullNameComponent.html":{},"interfaces/FullNameErrorMsg.html":{},"components/GeocoderInputComponent.html":{},"interfaces/IRadioItems.html":{},"interfaces/ISpaEnvResponse.html":{},"guards/LoadPageGuardService.html":{},"components/PageFrameworkComponent.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"components/RadioComponent.html":{},"guards/RouteGuardService.html":{},"directives/ValidateNameDirective.html":{},"interfaces/WizardProgressItem.html":{},"changelog.html":{},"additional-documentation/getting-started.html":{},"additional-documentation/local-development/schematics.html":{},"additional-documentation/local-development/components.html":{}}}],["example.component.ts",{"_index":3792,"title":{},"body":{"guards/LoadPageGuardService.html":{},"guards/RouteGuardService.html":{}}}],["example/path.../node/v8.9.4/lib/node_modules/moh",{"_index":5615,"title":{},"body":{"additional-documentation/local-development/components.html":{}}}],["examples",{"_index":5035,"title":{},"body":{"changelog.html":{}}}],["exampletodo",{"_index":5556,"title":{},"body":{"additional-documentation/local-development/schematics.html":{}}}],["exceeds",{"_index":2909,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["except",{"_index":1636,"title":{},"body":{"interfaces/CommonLogMessage.html":{},"components/NameComponent.html":{},"license.html":{}}}],["exception",{"_index":3856,"title":{},"body":{"components/PageFrameworkComponent.html":{}}}],["exclusive",{"_index":5419,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["execution",{"_index":4558,"title":{},"body":{"components/WizardProgressBarComponent.html":{}}}],["exendable",{"_index":4811,"title":{},"body":{"changelog.html":{}}}],["exercitationem",{"_index":1447,"title":{},"body":{"components/CityComponent.html":{},"interfaces/CountryList.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"interfaces/FileUploaderMsg.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{}}}],["exist",{"_index":1243,"title":{},"body":{"injectables/CheckCompleteBaseService.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"interfaces/PageListInterface.html":{},"changelog.html":{},"additional-documentation/local-development/components.html":{}}}],["existing",{"_index":4690,"title":{},"body":{"changelog.html":{}}}],["exists",{"_index":2466,"title":{},"body":{"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"interfaces/FileUploaderMsg.html":{}}}],["expand",{"_index":673,"title":{},"body":{"components/AccordionCommonComponent.html":{}}}],["expandtext",{"_index":665,"title":{},"body":{"components/AccordionCommonComponent.html":{}}}],["expect",{"_index":5516,"title":{},"body":{"additional-documentation/getting-started.html":{}}}],["experimental",{"_index":5159,"title":{},"body":{"changelog.html":{}}}],["expiry",{"_index":1183,"title":{},"body":{"injectables/CaptchaDataService.html":{},"injectables/ServerPayload.html":{}}}],["export",{"_index":77,"title":{},"body":{"classes/AbstractBaseForm.html":{},"classes/AbstractForm.html":{},"classes/AbstractFormControl.html":{},"classes/AbstractHttpService.html":{},"injectables/AbstractPageGuardService.html":{},"injectables/AbstractPgCheckService.html":{},"classes/AbstractReactForm.html":{},"classes/AbstractTestPage.html":{},"components/AccordionCommonComponent.html":{},"interfaces/AddrLabelList.html":{},"classes/Address.html":{},"classes/Base.html":{},"components/ButtonComponent.html":{},"components/ButtonGroupComponent.html":{},"injectables/CaptchaDataService.html":{},"modules/CaptchaModule.html":{},"injectables/CheckCompleteBaseService.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"interfaces/CommonAttachmentJson.html":{},"classes/CommonImage.html":{},"classes/CommonImageProcessingError.html":{},"interfaces/CommonImageScaleFactors.html":{},"classes/CommonImageScaleFactorsImpl.html":{},"interfaces/CommonLogMessage.html":{},"components/ConfirmTemplateComponent.html":{},"classes/Container.html":{},"injectables/ContainerService.html":{},"components/CoreBreadcrumbComponent.html":{},"interfaces/CountryList.html":{},"interfaces/DateErrorMsg.html":{},"directives/DateFieldFormatDirective.html":{},"components/DatepickerComponent.html":{},"injectables/DefaultPageGuardService.html":{},"components/DropdownComponent.html":{},"directives/DuplicateCheckDirective.html":{},"components/EmailComponent.html":{},"components/ErrorContainerComponent.html":{},"interfaces/ErrorMessage.html":{},"interfaces/FileUploaderMsg.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/FullNameComponent.html":{},"interfaces/FullNameErrorMsg.html":{},"interfaces/GeoAddressResult.html":{},"components/GeocoderInputComponent.html":{},"injectables/GeocoderService.html":{},"components/HeaderComponent.html":{},"interfaces/IRadioItems.html":{},"interfaces/ISpaEnvResponse.html":{},"guards/LoadPageGuardService.html":{},"interfaces/Maxlengths.html":{},"classes/MoHCommonLibraryError.html":{},"components/NameComponent.html":{},"components/PageFrameworkComponent.html":{},"interfaces/PageList.html":{},"interfaces/PageListInterface.html":{},"components/PageSectionComponent.html":{},"injectables/PageStateService.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"classes/Person.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{},"components/RadioComponent.html":{},"interfaces/ReadOnlyFields.html":{},"guards/RouteGuardService.html":{},"interfaces/SampleImageInterface.html":{},"components/SampleModalComponent.html":{},"injectables/ServerPayload.html":{},"modules/SharedCoreModule.html":{},"interfaces/SimpleDate.html":{},"components/SinComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"directives/ValidateBcPostalDirective.html":{},"directives/ValidateCityDirective.html":{},"directives/ValidateNameDirective.html":{},"directives/ValidatePostalcodeDirective.html":{},"directives/ValidateRegionDirective.html":{},"directives/ValidateStreetDirective.html":{},"components/WizardProgressBarComponent.html":{},"interfaces/WizardProgressItem.html":{},"components/XiconButtonComponent.html":{},"changelog.html":{},"additional-documentation/getting-started.html":{}}}],["exported",{"_index":175,"title":{},"body":{"classes/AbstractFormControl.html":{},"changelog.html":{}}}],["exports",{"_index":1195,"title":{},"body":{"modules/CaptchaModule.html":{},"modules/SharedCoreModule.html":{},"overview.html":{}}}],["express",{"_index":5462,"title":{},"body":{"license.html":{}}}],["extend",{"_index":994,"title":{},"body":{"classes/Address.html":{},"classes/Base.html":{},"injectables/CheckCompleteBaseService.html":{},"components/CoreBreadcrumbComponent.html":{},"components/FormSubmitBarComponent.html":{},"interfaces/PageListInterface.html":{},"classes/Person.html":{}}}],["extending",{"_index":2616,"title":{},"body":{"injectables/DefaultPageGuardService.html":{}}}],["extends",{"_index":87,"title":{},"body":{"classes/AbstractForm.html":{},"classes/AbstractFormControl.html":{},"classes/AbstractReactForm.html":{},"interfaces/AddrLabelList.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"interfaces/CommonLogMessage.html":{},"components/ConfirmTemplateComponent.html":{},"classes/Container.html":{},"interfaces/CountryList.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"components/DropdownComponent.html":{},"components/EmailComponent.html":{},"interfaces/FileUploaderMsg.html":{},"components/FullNameComponent.html":{},"interfaces/FullNameErrorMsg.html":{},"interfaces/GeoAddressResult.html":{},"components/GeocoderInputComponent.html":{},"injectables/GeocoderService.html":{},"interfaces/IRadioItems.html":{},"interfaces/ISpaEnvResponse.html":{},"interfaces/Maxlengths.html":{},"classes/MoHCommonLibraryError.html":{},"components/NameComponent.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"classes/Person.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{},"components/RadioComponent.html":{},"interfaces/ReadOnlyFields.html":{},"interfaces/SampleImageInterface.html":{},"components/SampleModalComponent.html":{},"components/SinComponent.html":{},"components/ToggleComponent.html":{},"interfaces/WizardProgressItem.html":{},"additional-documentation/getting-started.html":{}}}],["extra",{"_index":1007,"title":{},"body":{"classes/Address.html":{},"changelog.html":{}}}],["extract",{"_index":2911,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["eye",{"_index":4025,"title":{},"body":{"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{}}}],["f01339b",{"_index":4605,"title":{},"body":{"changelog.html":{}}}],["f0202f2",{"_index":4707,"title":{},"body":{"changelog.html":{}}}],["f103e7c",{"_index":5021,"title":{},"body":{"changelog.html":{}}}],["f18457b",{"_index":4808,"title":{},"body":{"changelog.html":{}}}],["f21d329",{"_index":4712,"title":{},"body":{"changelog.html":{}}}],["f27b941",{"_index":4701,"title":{},"body":{"changelog.html":{}}}],["f2ccfe6",{"_index":4894,"title":{},"body":{"changelog.html":{}}}],["f334faf",{"_index":5085,"title":{},"body":{"changelog.html":{}}}],["f541d81",{"_index":4844,"title":{},"body":{"changelog.html":{}}}],["f5e3e0d",{"_index":4658,"title":{},"body":{"changelog.html":{}}}],["f603e99",{"_index":5160,"title":{},"body":{"changelog.html":{}}}],["fa",{"_index":4024,"title":{},"body":{"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{}}}],["facere",{"_index":1418,"title":{},"body":{"components/CityComponent.html":{},"interfaces/CountryList.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"interfaces/FileUploaderMsg.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{}}}],["facets",{"_index":5595,"title":{},"body":{"additional-documentation/local-development/components.html":{}}}],["facility",{"_index":1728,"title":{},"body":{"classes/Container.html":{},"interfaces/WizardProgressItem.html":{}}}],["facing",{"_index":3753,"title":{},"body":{"interfaces/ISpaEnvResponse.html":{}}}],["failed",{"_index":280,"title":{},"body":{"classes/AbstractHttpService.html":{},"injectables/GeocoderService.html":{}}}],["fails",{"_index":2835,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["falkland",{"_index":2017,"title":{},"body":{"interfaces/CountryList.html":{}}}],["false",{"_index":37,"title":{},"body":{"classes/AbstractBaseForm.html":{},"classes/AbstractForm.html":{},"classes/AbstractFormControl.html":{},"classes/AbstractHttpService.html":{},"classes/AbstractReactForm.html":{},"components/AccordionCommonComponent.html":{},"interfaces/AddrLabelList.html":{},"classes/Address.html":{},"components/ButtonComponent.html":{},"components/ButtonGroupComponent.html":{},"injectables/CheckCompleteBaseService.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"classes/Container.html":{},"injectables/ContainerService.html":{},"interfaces/CountryList.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"injectables/DefaultPageGuardService.html":{},"components/DropdownComponent.html":{},"components/EmailComponent.html":{},"components/ErrorContainerComponent.html":{},"interfaces/FileUploaderMsg.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/FullNameComponent.html":{},"interfaces/FullNameErrorMsg.html":{},"interfaces/GeoAddressResult.html":{},"components/GeocoderInputComponent.html":{},"injectables/GeocoderService.html":{},"interfaces/IRadioItems.html":{},"interfaces/ISpaEnvResponse.html":{},"interfaces/Maxlengths.html":{},"components/NameComponent.html":{},"interfaces/PageList.html":{},"interfaces/PageListInterface.html":{},"injectables/PageStateService.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{},"components/RadioComponent.html":{},"interfaces/ReadOnlyFields.html":{},"guards/RouteGuardService.html":{},"components/SinComponent.html":{},"components/ThumbnailComponent.html":{},"directives/ValidatePostalcodeDirective.html":{},"interfaces/WizardProgressItem.html":{},"changelog.html":{},"todo.html":{}}}],["falsy",{"_index":230,"title":{},"body":{"classes/AbstractFormControl.html":{}}}],["falsy/undefined",{"_index":4627,"title":{},"body":{"changelog.html":{}}}],["family",{"_index":4385,"title":{},"body":{"components/SinComponent.html":{}}}],["faroe",{"_index":2020,"title":{},"body":{"interfaces/CountryList.html":{}}}],["faso",{"_index":1940,"title":{},"body":{"interfaces/CountryList.html":{}}}],["faster",{"_index":5476,"title":{},"body":{"todo.html":{}}}],["favicon_base64",{"_index":5359,"title":{},"body":{"coverage.html":{}}}],["favour",{"_index":4524,"title":{},"body":{"components/WizardProgressBarComponent.html":{}}}],["fbc012d",{"_index":5065,"title":{},"body":{"changelog.html":{}}}],["fc7fe65",{"_index":5033,"title":{},"body":{"changelog.html":{}}}],["fd32157",{"_index":4599,"title":{},"body":{"changelog.html":{}}}],["fd57808",{"_index":4662,"title":{},"body":{"changelog.html":{}}}],["feature.properties",{"_index":3406,"title":{},"body":{"interfaces/GeoAddressResult.html":{},"injectables/GeocoderService.html":{}}}],["features",{"_index":4606,"title":{},"body":{"changelog.html":{}}}],["federated",{"_index":2172,"title":{},"body":{"interfaces/CountryList.html":{}}}],["federation",{"_index":2251,"title":{},"body":{"interfaces/CountryList.html":{}}}],["feedback",{"_index":4044,"title":{},"body":{"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"index.html":{}}}],["fetchaudio",{"_index":1160,"title":{},"body":{"injectables/CaptchaDataService.html":{}}}],["fetchaudio(apibaseurl",{"_index":1165,"title":{},"body":{"injectables/CaptchaDataService.html":{},"injectables/ServerPayload.html":{}}}],["fetchdata",{"_index":1161,"title":{},"body":{"injectables/CaptchaDataService.html":{}}}],["fetchdata(apibaseurl",{"_index":1169,"title":{},"body":{"injectables/CaptchaDataService.html":{},"injectables/ServerPayload.html":{}}}],["fetching_captcha_img",{"_index":5420,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["fg",{"_index":406,"title":{},"body":{"classes/AbstractReactForm.html":{}}}],["fg.controls[control].markastouched",{"_index":429,"title":{},"body":{"classes/AbstractReactForm.html":{}}}],["fg.foreach",{"_index":418,"title":{},"body":{"classes/AbstractReactForm.html":{}}}],["field",{"_index":205,"title":{},"body":{"classes/AbstractFormControl.html":{},"classes/AbstractTestPage.html":{},"interfaces/AddrLabelList.html":{},"components/ButtonGroupComponent.html":{},"interfaces/DateErrorMsg.html":{},"directives/DateFieldFormatDirective.html":{},"components/DatepickerComponent.html":{},"components/FullNameComponent.html":{},"interfaces/FullNameErrorMsg.html":{},"interfaces/Maxlengths.html":{},"interfaces/ReadOnlyFields.html":{},"modules/SharedCoreModule.html":{},"components/SinComponent.html":{},"changelog.html":{},"coverage.html":{}}}],["fieldmaxlenghts",{"_index":860,"title":{},"body":{"interfaces/AddrLabelList.html":{},"interfaces/Maxlengths.html":{},"interfaces/ReadOnlyFields.html":{}}}],["fields",{"_index":820,"title":{},"body":{"interfaces/AddrLabelList.html":{},"classes/Address.html":{},"interfaces/CommonLogMessage.html":{},"interfaces/FileUploaderMsg.html":{},"interfaces/GeoAddressResult.html":{},"injectables/GeocoderService.html":{},"interfaces/Maxlengths.html":{},"interfaces/ReadOnlyFields.html":{},"changelog.html":{}}}],["fieldset",{"_index":4964,"title":{},"body":{"changelog.html":{}}}],["figure",{"_index":3275,"title":{},"body":{"components/FormActionBarComponent.html":{}}}],["fiji",{"_index":2022,"title":{},"body":{"interfaces/CountryList.html":{}}}],["file",{"_index":5,"title":{},"body":{"classes/AbstractBaseForm.html":{},"classes/AbstractForm.html":{},"classes/AbstractFormControl.html":{},"classes/AbstractHttpService.html":{},"injectables/AbstractPageGuardService.html":{},"injectables/AbstractPgCheckService.html":{},"classes/AbstractReactForm.html":{},"classes/AbstractTestPage.html":{},"components/AccordionCommonComponent.html":{},"interfaces/AddrLabelList.html":{},"classes/Address.html":{},"classes/Base.html":{},"components/ButtonComponent.html":{},"components/ButtonGroupComponent.html":{},"injectables/CaptchaDataService.html":{},"modules/CaptchaModule.html":{},"injectables/CheckCompleteBaseService.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"interfaces/CommonAttachmentJson.html":{},"classes/CommonImage.html":{},"classes/CommonImageProcessingError.html":{},"interfaces/CommonImageScaleFactors.html":{},"classes/CommonImageScaleFactorsImpl.html":{},"interfaces/CommonLogMessage.html":{},"components/ConfirmTemplateComponent.html":{},"classes/Container.html":{},"injectables/ContainerService.html":{},"components/CoreBreadcrumbComponent.html":{},"interfaces/CountryList.html":{},"interfaces/DateErrorMsg.html":{},"directives/DateFieldFormatDirective.html":{},"components/DatepickerComponent.html":{},"injectables/DefaultPageGuardService.html":{},"components/DropdownComponent.html":{},"directives/DuplicateCheckDirective.html":{},"components/EmailComponent.html":{},"components/ErrorContainerComponent.html":{},"interfaces/ErrorMessage.html":{},"interfaces/FileUploaderMsg.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/FullNameComponent.html":{},"interfaces/FullNameErrorMsg.html":{},"interfaces/GeoAddressResult.html":{},"components/GeocoderInputComponent.html":{},"injectables/GeocoderService.html":{},"components/HeaderComponent.html":{},"interfaces/IRadioItems.html":{},"interfaces/ISpaEnvResponse.html":{},"guards/LoadPageGuardService.html":{},"interfaces/Maxlengths.html":{},"classes/MoHCommonLibraryError.html":{},"components/NameComponent.html":{},"components/PageFrameworkComponent.html":{},"interfaces/PageList.html":{},"interfaces/PageListInterface.html":{},"components/PageSectionComponent.html":{},"injectables/PageStateService.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"classes/Person.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{},"components/RadioComponent.html":{},"interfaces/ReadOnlyFields.html":{},"guards/RouteGuardService.html":{},"interfaces/SampleImageInterface.html":{},"components/SampleModalComponent.html":{},"injectables/ServerPayload.html":{},"modules/SharedCoreModule.html":{},"interfaces/SimpleDate.html":{},"components/SinComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"directives/ValidateBcPostalDirective.html":{},"directives/ValidateCityDirective.html":{},"directives/ValidateNameDirective.html":{},"directives/ValidatePostalcodeDirective.html":{},"directives/ValidateRegionDirective.html":{},"directives/ValidateStreetDirective.html":{},"components/WizardProgressBarComponent.html":{},"interfaces/WizardProgressItem.html":{},"components/XiconButtonComponent.html":{},"changelog.html":{},"coverage.html":{},"license.html":{},"additional-documentation/getting-started.html":{},"additional-documentation/local-development/schematics.html":{},"additional-documentation/local-development/components.html":{}}}],["file's",{"_index":2887,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["file.name",{"_index":2847,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["file.naturalheight",{"_index":3257,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["file_upload",{"_index":3044,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["filecontent",{"_index":1507,"title":{},"body":{"interfaces/CommonAttachmentJson.html":{},"classes/CommonImage.html":{},"classes/CommonImageProcessingError.html":{},"interfaces/CommonImageScaleFactors.html":{},"classes/CommonImageScaleFactorsImpl.html":{},"changelog.html":{}}}],["filecontrol",{"_index":2830,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["fileindex",{"_index":3038,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["filelist",{"_index":2975,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["filename",{"_index":2881,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["fileobservable",{"_index":3070,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["filereader",{"_index":3074,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["files",{"_index":2973,"title":{},"body":{"interfaces/FileUploaderMsg.html":{},"changelog.html":{},"additional-documentation/local-development/schematics.html":{},"additional-documentation/local-development/components.html":{}}}],["files.length",{"_index":2974,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["filesarrayfromdrop",{"_index":2960,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["filesarrayfromdrop).pipe",{"_index":2970,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["filesize",{"_index":3104,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["filesizeunit",{"_index":3105,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["fileupload",{"_index":4697,"title":{},"body":{"changelog.html":{}}}],["fileuploadbrowse",{"_index":2832,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["fileuploader",{"_index":4740,"title":{},"body":{"changelog.html":{},"additional-documentation/getting-started.html":{}}}],["fileuploadercomponent",{"_index":713,"title":{},"body":{"components/AccordionCommonComponent.html":{},"components/ButtonComponent.html":{},"components/ButtonGroupComponent.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"components/ConfirmTemplateComponent.html":{},"components/CoreBreadcrumbComponent.html":{},"components/DatepickerComponent.html":{},"components/DropdownComponent.html":{},"components/EmailComponent.html":{},"components/ErrorContainerComponent.html":{},"interfaces/FileUploaderMsg.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/FullNameComponent.html":{},"components/GeocoderInputComponent.html":{},"components/HeaderComponent.html":{},"components/NameComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"components/RadioComponent.html":{},"components/SampleModalComponent.html":{},"modules/SharedCoreModule.html":{},"components/SinComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{},"components/XiconButtonComponent.html":{},"changelog.html":{},"coverage.html":{},"overview.html":{}}}],["fileuploadercomponent.checkimageexists(mspimage",{"_index":2980,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["fileuploadermsg",{"_index":2738,"title":{"interfaces/FileUploaderMsg.html":{}},"body":{"interfaces/FileUploaderMsg.html":{},"coverage.html":{}}}],["filled",{"_index":1025,"title":{},"body":{"classes/Address.html":{}}}],["filter",{"_index":2753,"title":{},"body":{"interfaces/FileUploaderMsg.html":{},"components/GeocoderInputComponent.html":{},"components/HeaderComponent.html":{},"components/WizardProgressBarComponent.html":{},"changelog.html":{}}}],["filter((mspimage",{"_index":2987,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["filter(ev",{"_index":3581,"title":{},"body":{"components/HeaderComponent.html":{},"components/WizardProgressBarComponent.html":{}}}],["filter(files",{"_index":2971,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["filter(x",{"_index":942,"title":{},"body":{"interfaces/AddrLabelList.html":{},"classes/Container.html":{},"interfaces/Maxlengths.html":{},"interfaces/ReadOnlyFields.html":{},"interfaces/WizardProgressItem.html":{}}}],["fin",{"_index":2023,"title":{},"body":{"interfaces/CountryList.html":{}}}],["final",{"_index":2934,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["finally",{"_index":2942,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["find",{"_index":870,"title":{},"body":{"interfaces/AddrLabelList.html":{},"interfaces/FileUploaderMsg.html":{},"interfaces/Maxlengths.html":{},"interfaces/PageList.html":{},"injectables/PageStateService.html":{},"interfaces/ReadOnlyFields.html":{},"index.html":{},"additional-documentation/getting-started.html":{}}}],["findcountrycode",{"_index":959,"title":{},"body":{"interfaces/AddrLabelList.html":{},"interfaces/Maxlengths.html":{},"interfaces/ReadOnlyFields.html":{}}}],["findindex",{"_index":3891,"title":{},"body":{"interfaces/PageList.html":{},"injectables/PageStateService.html":{}}}],["findindex(url",{"_index":3934,"title":{},"body":{"injectables/PageStateService.html":{}}}],["findprovincedescription(prov",{"_index":951,"title":{},"body":{"interfaces/AddrLabelList.html":{},"interfaces/Maxlengths.html":{},"interfaces/ReadOnlyFields.html":{}}}],["fine",{"_index":1617,"title":{},"body":{"interfaces/CommonLogMessage.html":{}}}],["finish",{"_index":3661,"title":{},"body":{"interfaces/ISpaEnvResponse.html":{}}}],["finishes",{"_index":2891,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["finland",{"_index":2024,"title":{},"body":{"interfaces/CountryList.html":{}}}],["fire",{"_index":3501,"title":{},"body":{"components/GeocoderInputComponent.html":{}}}],["firefox",{"_index":4956,"title":{},"body":{"changelog.html":{}}}],["first",{"_index":530,"title":{},"body":{"classes/AbstractTestPage.html":{},"injectables/DefaultPageGuardService.html":{},"interfaces/FileUploaderMsg.html":{},"components/FullNameComponent.html":{},"interfaces/FullNameErrorMsg.html":{},"components/PageSectionComponent.html":{},"classes/Person.html":{},"components/WizardProgressBarComponent.html":{},"changelog.html":{},"todo.html":{},"additional-documentation/local-development/schematics.html":{},"additional-documentation/local-development/components.html":{}}}],["first/middle/last",{"_index":5101,"title":{},"body":{"changelog.html":{}}}],["firstname",{"_index":3313,"title":{},"body":{"components/FullNameComponent.html":{},"interfaces/FullNameErrorMsg.html":{},"classes/Person.html":{}}}],["firstnamelabel",{"_index":3319,"title":{},"body":{"components/FullNameComponent.html":{},"interfaces/FullNameErrorMsg.html":{}}}],["fix",{"_index":2786,"title":{},"body":{"interfaces/FileUploaderMsg.html":{},"components/PostalCodeComponent.html":{},"components/SinComponent.html":{},"changelog.html":{},"todo.html":{},"additional-documentation/local-development/schematics.html":{}}}],["fixed",{"_index":4665,"title":{},"body":{"changelog.html":{}}}],["fixes",{"_index":4592,"title":{},"body":{"changelog.html":{}}}],["fixing",{"_index":3173,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["fji",{"_index":2021,"title":{},"body":{"interfaces/CountryList.html":{}}}],["flag",{"_index":3752,"title":{},"body":{"interfaces/ISpaEnvResponse.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"changelog.html":{}}}],["flags",{"_index":4598,"title":{},"body":{"changelog.html":{}}}],["flash",{"_index":5474,"title":{},"body":{"todo.html":{}}}],["flatmap",{"_index":2754,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["flex",{"_index":3916,"title":{},"body":{"components/PageSectionComponent.html":{}}}],["flk",{"_index":2016,"title":{},"body":{"interfaces/CountryList.html":{}}}],["flow",{"_index":3782,"title":{},"body":{"guards/LoadPageGuardService.html":{},"guards/RouteGuardService.html":{}}}],["fluid",{"_index":5052,"title":{},"body":{"changelog.html":{}}}],["fn",{"_index":146,"title":{},"body":{"classes/AbstractFormControl.html":{},"interfaces/AddrLabelList.html":{},"components/ButtonGroupComponent.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"interfaces/CountryList.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"components/DropdownComponent.html":{},"components/EmailComponent.html":{},"components/FullNameComponent.html":{},"interfaces/FullNameErrorMsg.html":{},"components/GeocoderInputComponent.html":{},"interfaces/IRadioItems.html":{},"interfaces/ISpaEnvResponse.html":{},"interfaces/Maxlengths.html":{},"components/NameComponent.html":{},"interfaces/PageList.html":{},"injectables/PageStateService.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"components/RadioComponent.html":{},"interfaces/ReadOnlyFields.html":{},"components/SinComponent.html":{}}}],["fn.bind(this",{"_index":223,"title":{},"body":{"classes/AbstractFormControl.html":{}}}],["fns",{"_index":4100,"title":{},"body":{"classes/Person.html":{},"changelog.html":{},"dependencies.html":{}}}],["focus",{"_index":1040,"title":{},"body":{"classes/Address.html":{},"components/ButtonGroupComponent.html":{},"components/CheckboxComponent.html":{},"components/PostalCodeComponent.html":{},"components/SinComponent.html":{},"changelog.html":{}}}],["focusable",{"_index":4957,"title":{},"body":{"changelog.html":{}}}],["folder",{"_index":5512,"title":{},"body":{"additional-documentation/getting-started.html":{},"additional-documentation/local-development/schematics.html":{},"additional-documentation/local-development/components.html":{}}}],["folders",{"_index":5196,"title":{},"body":{"changelog.html":{},"additional-documentation/local-development/components.html":{}}}],["followed",{"_index":3346,"title":{},"body":{"components/FullNameComponent.html":{},"interfaces/FullNameErrorMsg.html":{}}}],["following",{"_index":2422,"title":{},"body":{"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"interfaces/SimpleDate.html":{},"components/SinComponent.html":{},"additional-documentation/local-development/components.html":{}}}],["follows",{"_index":5483,"title":{},"body":{"todo.html":{}}}],["fonts",{"_index":5130,"title":{},"body":{"changelog.html":{}}}],["footer\"]')).element(by.css('button[type=\"submit\"]')).click",{"_index":642,"title":{},"body":{"classes/AbstractTestPage.html":{}}}],["force",{"_index":2848,"title":{},"body":{"interfaces/FileUploaderMsg.html":{},"components/GeocoderInputComponent.html":{}}}],["forcerender",{"_index":2854,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["forget",{"_index":1656,"title":{},"body":{"interfaces/CommonLogMessage.html":{}}}],["form",{"_index":44,"title":{},"body":{"classes/AbstractBaseForm.html":{},"classes/AbstractForm.html":{},"classes/AbstractFormControl.html":{},"classes/AbstractReactForm.html":{},"classes/AbstractTestPage.html":{},"components/AccordionCommonComponent.html":{},"components/ButtonComponent.html":{},"components/ButtonGroupComponent.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"components/ConfirmTemplateComponent.html":{},"classes/Container.html":{},"components/CoreBreadcrumbComponent.html":{},"components/DatepickerComponent.html":{},"components/DropdownComponent.html":{},"components/EmailComponent.html":{},"components/ErrorContainerComponent.html":{},"interfaces/FileUploaderMsg.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/FullNameComponent.html":{},"components/GeocoderInputComponent.html":{},"components/HeaderComponent.html":{},"interfaces/IRadioItems.html":{},"interfaces/ISpaEnvResponse.html":{},"guards/LoadPageGuardService.html":{},"components/NameComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{},"components/RadioComponent.html":{},"guards/RouteGuardService.html":{},"components/SampleModalComponent.html":{},"components/SinComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{},"interfaces/WizardProgressItem.html":{},"components/XiconButtonComponent.html":{},"changelog.html":{},"coverage.html":{},"todo.html":{}}}],["form.ts",{"_index":8,"title":{},"body":{"classes/AbstractBaseForm.html":{},"classes/AbstractForm.html":{},"classes/AbstractReactForm.html":{},"coverage.html":{}}}],["form.ts:10",{"_index":38,"title":{},"body":{"classes/AbstractBaseForm.html":{}}}],["form.ts:12",{"_index":50,"title":{},"body":{"classes/AbstractBaseForm.html":{}}}],["form.ts:14",{"_index":23,"title":{},"body":{"classes/AbstractBaseForm.html":{}}}],["form.ts:20",{"_index":97,"title":{},"body":{"classes/AbstractForm.html":{}}}],["form.ts:22",{"_index":407,"title":{},"body":{"classes/AbstractReactForm.html":{}}}],["form.ts:24",{"_index":63,"title":{},"body":{"classes/AbstractBaseForm.html":{}}}],["form.ts:26",{"_index":98,"title":{},"body":{"classes/AbstractForm.html":{}}}],["form.ts:29",{"_index":410,"title":{},"body":{"classes/AbstractReactForm.html":{}}}],["form.ts:47",{"_index":405,"title":{},"body":{"classes/AbstractReactForm.html":{}}}],["form.ts:8",{"_index":30,"title":{},"body":{"classes/AbstractBaseForm.html":{},"classes/AbstractForm.html":{}}}],["form.ts:9",{"_index":403,"title":{},"body":{"classes/AbstractReactForm.html":{}}}],["formactionbar",{"_index":3286,"title":{},"body":{"components/FormSubmitBarComponent.html":{},"changelog.html":{},"todo.html":{}}}],["formactionbarcomponent",{"_index":715,"title":{"components/FormActionBarComponent.html":{}},"body":{"components/AccordionCommonComponent.html":{},"components/ButtonComponent.html":{},"components/ButtonGroupComponent.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"components/ConfirmTemplateComponent.html":{},"components/CoreBreadcrumbComponent.html":{},"components/DatepickerComponent.html":{},"components/DropdownComponent.html":{},"components/EmailComponent.html":{},"components/ErrorContainerComponent.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/FullNameComponent.html":{},"components/GeocoderInputComponent.html":{},"components/HeaderComponent.html":{},"components/NameComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"components/RadioComponent.html":{},"components/SampleModalComponent.html":{},"modules/SharedCoreModule.html":{},"components/SinComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{},"components/XiconButtonComponent.html":{},"coverage.html":{},"overview.html":{}}}],["format",{"_index":2472,"title":{},"body":{"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"classes/Person.html":{},"components/PostalCodeComponent.html":{},"changelog.html":{}}}],["format.directive",{"_index":4350,"title":{},"body":{"modules/SharedCoreModule.html":{}}}],["format.directive.ts",{"_index":2550,"title":{},"body":{"directives/DateFieldFormatDirective.html":{},"coverage.html":{}}}],["format.directive.ts:11",{"_index":2558,"title":{},"body":{"directives/DateFieldFormatDirective.html":{}}}],["format.directive.ts:8",{"_index":2554,"title":{},"body":{"directives/DateFieldFormatDirective.html":{}}}],["formatdateofbirth",{"_index":4064,"title":{},"body":{"classes/Person.html":{}}}],["formats",{"_index":3399,"title":{},"body":{"interfaces/GeoAddressResult.html":{},"injectables/GeocoderService.html":{}}}],["formatted",{"_index":2706,"title":{},"body":{"components/EmailComponent.html":{}}}],["formatting",{"_index":4670,"title":{},"body":{"changelog.html":{}}}],["formcontrol",{"_index":2437,"title":{},"body":{"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"components/GeocoderInputComponent.html":{},"todo.html":{}}}],["former",{"_index":2144,"title":{},"body":{"interfaces/CountryList.html":{}}}],["formerrors",{"_index":457,"title":{},"body":{"classes/AbstractTestPage.html":{}}}],["formgroup",{"_index":401,"title":{},"body":{"classes/AbstractReactForm.html":{}}}],["forms",{"_index":424,"title":{},"body":{"classes/AbstractReactForm.html":{},"directives/DuplicateCheckDirective.html":{},"components/EmailComponent.html":{},"components/NameComponent.html":{},"changelog.html":{}}}],["formsmodule",{"_index":1216,"title":{},"body":{"modules/CaptchaModule.html":{},"modules/SharedCoreModule.html":{}}}],["formsubmibar",{"_index":5472,"title":{},"body":{"todo.html":{}}}],["formsubmitbar",{"_index":3284,"title":{},"body":{"components/FormSubmitBarComponent.html":{}}}],["formsubmitbarcomponent",{"_index":717,"title":{"components/FormSubmitBarComponent.html":{}},"body":{"components/AccordionCommonComponent.html":{},"components/ButtonComponent.html":{},"components/ButtonGroupComponent.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"components/ConfirmTemplateComponent.html":{},"components/CoreBreadcrumbComponent.html":{},"components/DatepickerComponent.html":{},"components/DropdownComponent.html":{},"components/EmailComponent.html":{},"components/ErrorContainerComponent.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/FullNameComponent.html":{},"components/GeocoderInputComponent.html":{},"components/HeaderComponent.html":{},"components/NameComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"components/RadioComponent.html":{},"components/SampleModalComponent.html":{},"modules/SharedCoreModule.html":{},"components/SinComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{},"components/XiconButtonComponent.html":{},"coverage.html":{},"overview.html":{}}}],["forroot",{"_index":1203,"title":{},"body":{"modules/CaptchaModule.html":{}}}],["forwardref",{"_index":791,"title":{},"body":{"interfaces/AddrLabelList.html":{},"components/ButtonComponent.html":{},"components/ButtonGroupComponent.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"components/DropdownComponent.html":{},"interfaces/FileUploaderMsg.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/FullNameComponent.html":{},"interfaces/FullNameErrorMsg.html":{},"interfaces/ISpaEnvResponse.html":{},"interfaces/Maxlengths.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"interfaces/ReadOnlyFields.html":{}}}],["found",{"_index":372,"title":{},"body":{"injectables/AbstractPageGuardService.html":{},"injectables/AbstractPgCheckService.html":{},"additional-documentation/getting-started.html":{}}}],["foundation",{"_index":5508,"title":{},"body":{"additional-documentation/getting-started.html":{}}}],["fpc",{"_index":5104,"title":{},"body":{"changelog.html":{},"additional-documentation/local-development/schematics.html":{}}}],["fpcare",{"_index":3854,"title":{},"body":{"components/PageFrameworkComponent.html":{},"changelog.html":{}}}],["fra",{"_index":2025,"title":{},"body":{"interfaces/CountryList.html":{}}}],["framework",{"_index":3300,"title":{},"body":{"components/FormSubmitBarComponent.html":{},"components/PageFrameworkComponent.html":{},"changelog.html":{}}}],["framework'},{'name",{"_index":727,"title":{},"body":{"components/AccordionCommonComponent.html":{},"components/ButtonComponent.html":{},"components/ButtonGroupComponent.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"components/ConfirmTemplateComponent.html":{},"components/CoreBreadcrumbComponent.html":{},"components/DatepickerComponent.html":{},"components/DropdownComponent.html":{},"components/EmailComponent.html":{},"components/ErrorContainerComponent.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/FullNameComponent.html":{},"components/GeocoderInputComponent.html":{},"components/HeaderComponent.html":{},"components/NameComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"components/RadioComponent.html":{},"components/SampleModalComponent.html":{},"components/SinComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{},"components/XiconButtonComponent.html":{}}}],["framework.component",{"_index":4278,"title":{},"body":{"modules/SharedCoreModule.html":{}}}],["framework.component.html",{"_index":3864,"title":{},"body":{"components/PageFrameworkComponent.html":{}}}],["framework.component.scss",{"_index":3863,"title":{},"body":{"components/PageFrameworkComponent.html":{}}}],["framework.component.ts",{"_index":3853,"title":{},"body":{"components/PageFrameworkComponent.html":{},"coverage.html":{}}}],["framework.component.ts:29",{"_index":3866,"title":{},"body":{"components/PageFrameworkComponent.html":{}}}],["framework.component.ts:31",{"_index":3867,"title":{},"body":{"components/PageFrameworkComponent.html":{}}}],["framework/page",{"_index":3852,"title":{},"body":{"components/PageFrameworkComponent.html":{},"modules/SharedCoreModule.html":{},"coverage.html":{}}}],["france",{"_index":2026,"title":{},"body":{"interfaces/CountryList.html":{}}}],["free",{"_index":1080,"title":{},"body":{"components/ButtonComponent.html":{}}}],["freedom",{"_index":3677,"title":{},"body":{"interfaces/ISpaEnvResponse.html":{}}}],["french",{"_index":2028,"title":{},"body":{"interfaces/CountryList.html":{}}}],["friendly",{"_index":2925,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["fro",{"_index":2019,"title":{},"body":{"interfaces/CountryList.html":{}}}],["fromevent",{"_index":2750,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["fromevent(this.browsefileref.nativeelement",{"_index":2965,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["fromevent(this.capturefileref.nativeelement",{"_index":2967,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["fromevent(this.dropzone.nativeelement",{"_index":2952,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["fromevent(this.imageplaceholderref.nativeelement",{"_index":3018,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["fromevent(this.selectfilelabelref.nativeelement",{"_index":3020,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["fromevent(this.uploadinstructionref.nativeelement",{"_index":3021,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["fsm",{"_index":2170,"title":{},"body":{"interfaces/CountryList.html":{}}}],["fugiat",{"_index":1426,"title":{},"body":{"components/CityComponent.html":{},"interfaces/CountryList.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"interfaces/FileUploaderMsg.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{}}}],["full",{"_index":719,"title":{},"body":{"components/AccordionCommonComponent.html":{},"interfaces/AddrLabelList.html":{},"components/ButtonComponent.html":{},"components/ButtonGroupComponent.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"components/ConfirmTemplateComponent.html":{},"components/CoreBreadcrumbComponent.html":{},"components/DatepickerComponent.html":{},"components/DropdownComponent.html":{},"components/EmailComponent.html":{},"components/ErrorContainerComponent.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/FullNameComponent.html":{},"interfaces/FullNameErrorMsg.html":{},"components/GeocoderInputComponent.html":{},"components/HeaderComponent.html":{},"interfaces/Maxlengths.html":{},"components/NameComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"classes/Person.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"components/RadioComponent.html":{},"interfaces/ReadOnlyFields.html":{},"components/SampleModalComponent.html":{},"components/SinComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{},"components/XiconButtonComponent.html":{},"changelog.html":{}}}],["fulladdress",{"_index":3377,"title":{},"body":{"interfaces/GeoAddressResult.html":{},"injectables/GeocoderService.html":{}}}],["fullname",{"_index":4065,"title":{},"body":{"classes/Person.html":{},"changelog.html":{}}}],["fullname.split",{"_index":4109,"title":{},"body":{"classes/Person.html":{}}}],["fullnamecomponent",{"_index":718,"title":{"components/FullNameComponent.html":{}},"body":{"components/AccordionCommonComponent.html":{},"components/ButtonComponent.html":{},"components/ButtonGroupComponent.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"components/ConfirmTemplateComponent.html":{},"components/CoreBreadcrumbComponent.html":{},"components/DatepickerComponent.html":{},"components/DropdownComponent.html":{},"components/EmailComponent.html":{},"components/ErrorContainerComponent.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/FullNameComponent.html":{},"interfaces/FullNameErrorMsg.html":{},"components/GeocoderInputComponent.html":{},"components/HeaderComponent.html":{},"components/NameComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"components/RadioComponent.html":{},"components/SampleModalComponent.html":{},"modules/SharedCoreModule.html":{},"components/SinComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{},"components/XiconButtonComponent.html":{},"changelog.html":{},"coverage.html":{},"overview.html":{}}}],["fullnameerrormsg",{"_index":3336,"title":{"interfaces/FullNameErrorMsg.html":{}},"body":{"components/FullNameComponent.html":{},"interfaces/FullNameErrorMsg.html":{},"coverage.html":{}}}],["fullsizeviewmodal",{"_index":3708,"title":{},"body":{"interfaces/ISpaEnvResponse.html":{},"components/ThumbnailComponent.html":{}}}],["function",{"_index":158,"title":{},"body":{"classes/AbstractFormControl.html":{},"classes/AbstractHttpService.html":{},"interfaces/AddrLabelList.html":{},"classes/Address.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"interfaces/CountryList.html":{},"directives/DuplicateCheckDirective.html":{},"components/EmailComponent.html":{},"interfaces/ErrorMessage.html":{},"interfaces/FileUploaderMsg.html":{},"components/GeocoderInputComponent.html":{},"interfaces/Maxlengths.html":{},"components/NameComponent.html":{},"injectables/PageStateService.html":{},"classes/Person.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{},"components/RadioComponent.html":{},"interfaces/ReadOnlyFields.html":{},"components/SinComponent.html":{},"directives/ValidatePostalcodeDirective.html":{},"components/WizardProgressBarComponent.html":{},"changelog.html":{},"coverage.html":{}}}],["functionality",{"_index":436,"title":{},"body":{"classes/AbstractTestPage.html":{},"classes/Container.html":{},"interfaces/WizardProgressItem.html":{}}}],["functiong",{"_index":4163,"title":{},"body":{"components/PostalCodeComponent.html":{}}}],["functions",{"_index":4514,"title":{},"body":{"components/WizardProgressBarComponent.html":{},"changelog.html":{}}}],["futuna",{"_index":2395,"title":{},"body":{"interfaces/CountryList.html":{}}}],["future",{"_index":1090,"title":{},"body":{"components/ButtonComponent.html":{},"interfaces/PageList.html":{},"injectables/PageStateService.html":{},"changelog.html":{},"additional-documentation/local-development/schematics.html":{}}}],["g",{"_index":2735,"title":{},"body":{"interfaces/ErrorMessage.html":{},"additional-documentation/local-development/schematics.html":{}}}],["gab",{"_index":2035,"title":{},"body":{"interfaces/CountryList.html":{}}}],["gabon",{"_index":2036,"title":{},"body":{"interfaces/CountryList.html":{}}}],["gambia",{"_index":2038,"title":{},"body":{"interfaces/CountryList.html":{}}}],["gbr",{"_index":2374,"title":{},"body":{"interfaces/CountryList.html":{}}}],["general",{"_index":852,"title":{},"body":{"interfaces/AddrLabelList.html":{},"interfaces/Maxlengths.html":{},"interfaces/ReadOnlyFields.html":{}}}],["generally",{"_index":54,"title":{},"body":{"classes/AbstractBaseForm.html":{},"classes/AbstractForm.html":{},"classes/AbstractReactForm.html":{},"interfaces/CommonAttachmentJson.html":{},"classes/CommonImage.html":{},"classes/CommonImageProcessingError.html":{},"interfaces/CommonImageScaleFactors.html":{},"classes/CommonImageScaleFactorsImpl.html":{}}}],["generate",{"_index":5229,"title":{},"body":{"changelog.html":{},"additional-documentation/local-development/components.html":{}}}],["generateskiptocontentlink",{"_index":3562,"title":{},"body":{"components/HeaderComponent.html":{}}}],["generateuuid",{"_index":248,"title":{},"body":{"classes/AbstractHttpService.html":{},"injectables/GeocoderService.html":{},"changelog.html":{}}}],["generating",{"_index":347,"title":{},"body":{"classes/AbstractHttpService.html":{}}}],["generation",{"_index":5178,"title":{},"body":{"changelog.html":{},"additional-documentation/local-development/schematics.html":{}}}],["generic",{"_index":3613,"title":{},"body":{"interfaces/IRadioItems.html":{},"components/RadioComponent.html":{},"changelog.html":{}}}],["geo",{"_index":2039,"title":{},"body":{"interfaces/CountryList.html":{}}}],["geoaddressresult",{"_index":795,"title":{"interfaces/GeoAddressResult.html":{}},"body":{"interfaces/AddrLabelList.html":{},"interfaces/GeoAddressResult.html":{},"components/GeocoderInputComponent.html":{},"injectables/GeocoderService.html":{},"interfaces/Maxlengths.html":{},"interfaces/ReadOnlyFields.html":{},"coverage.html":{},"additional-documentation/getting-started.html":{}}}],["geocoder",{"_index":722,"title":{},"body":{"components/AccordionCommonComponent.html":{},"interfaces/AddrLabelList.html":{},"components/ButtonComponent.html":{},"components/ButtonGroupComponent.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"components/ConfirmTemplateComponent.html":{},"components/CoreBreadcrumbComponent.html":{},"components/DatepickerComponent.html":{},"components/DropdownComponent.html":{},"components/EmailComponent.html":{},"components/ErrorContainerComponent.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/FullNameComponent.html":{},"components/GeocoderInputComponent.html":{},"components/HeaderComponent.html":{},"interfaces/Maxlengths.html":{},"components/NameComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"components/RadioComponent.html":{},"interfaces/ReadOnlyFields.html":{},"components/SampleModalComponent.html":{},"components/SinComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{},"components/XiconButtonComponent.html":{}}}],["geocoderinput",{"_index":4736,"title":{},"body":{"changelog.html":{}}}],["geocoderinputcomponent",{"_index":721,"title":{"components/GeocoderInputComponent.html":{}},"body":{"components/AccordionCommonComponent.html":{},"components/ButtonComponent.html":{},"components/ButtonGroupComponent.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"components/ConfirmTemplateComponent.html":{},"components/CoreBreadcrumbComponent.html":{},"components/DatepickerComponent.html":{},"components/DropdownComponent.html":{},"components/EmailComponent.html":{},"components/ErrorContainerComponent.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/FullNameComponent.html":{},"components/GeocoderInputComponent.html":{},"components/HeaderComponent.html":{},"components/NameComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"components/RadioComponent.html":{},"components/SampleModalComponent.html":{},"modules/SharedCoreModule.html":{},"components/SinComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{},"components/XiconButtonComponent.html":{},"coverage.html":{},"overview.html":{}}}],["geocoderservice",{"_index":3379,"title":{"injectables/GeocoderService.html":{}},"body":{"interfaces/GeoAddressResult.html":{},"components/GeocoderInputComponent.html":{},"injectables/GeocoderService.html":{},"changelog.html":{},"coverage.html":{},"additional-documentation/getting-started.html":{}}}],["georgia",{"_index":2040,"title":{},"body":{"interfaces/CountryList.html":{}}}],["germany",{"_index":2042,"title":{},"body":{"interfaces/CountryList.html":{}}}],["get(url",{"_index":264,"title":{},"body":{"classes/AbstractHttpService.html":{},"injectables/GeocoderService.html":{}}}],["getactiveindex",{"_index":4498,"title":{},"body":{"components/WizardProgressBarComponent.html":{}}}],["getactiveindex(url",{"_index":4503,"title":{},"body":{"components/WizardProgressBarComponent.html":{}}}],["getage",{"_index":4062,"title":{},"body":{"classes/Person.html":{}}}],["getcontinuebutton",{"_index":458,"title":{},"body":{"classes/AbstractTestPage.html":{}}}],["getcountrydescription",{"_index":2405,"title":{},"body":{"interfaces/CountryList.html":{},"coverage.html":{}}}],["getdateofbirthshort",{"_index":4079,"title":{},"body":{"classes/Person.html":{}}}],["getdebugelement",{"_index":5264,"title":{},"body":{"coverage.html":{}}}],["geterrorcode",{"_index":1700,"title":{},"body":{"components/ConfirmTemplateComponent.html":{}}}],["geterrorcontainer",{"_index":5265,"title":{},"body":{"coverage.html":{}}}],["getformatdateofbirth",{"_index":4082,"title":{},"body":{"classes/Person.html":{}}}],["getfullname",{"_index":4094,"title":{},"body":{"classes/Person.html":{}}}],["gethttpoptions",{"_index":310,"title":{},"body":{"classes/AbstractHttpService.html":{}}}],["getinputdebugelement",{"_index":5266,"title":{},"body":{"coverage.html":{}}}],["getinputelement",{"_index":5267,"title":{},"body":{"coverage.html":{}}}],["getisbconly",{"_index":1045,"title":{},"body":{"classes/Address.html":{}}}],["getlabel",{"_index":5268,"title":{},"body":{"coverage.html":{}}}],["getlegendcontext",{"_index":5269,"title":{},"body":{"coverage.html":{}}}],["getmaxlenasnumber",{"_index":3843,"title":{},"body":{"components/NameComponent.html":{}}}],["getname",{"_index":4085,"title":{},"body":{"classes/Person.html":{}}}],["getnamecomponent",{"_index":442,"title":{},"body":{"classes/AbstractTestPage.html":{}}}],["getnamecomponent(labelname",{"_index":525,"title":{},"body":{"classes/AbstractTestPage.html":{}}}],["getnamecomponentval",{"_index":443,"title":{},"body":{"classes/AbstractTestPage.html":{}}}],["getnamecomponentval(labelname",{"_index":537,"title":{},"body":{"classes/AbstractTestPage.html":{}}}],["getpackageversionfrompackagejson",{"_index":5378,"title":{},"body":{"coverage.html":{}}}],["getpageatindex",{"_index":3894,"title":{},"body":{"interfaces/PageList.html":{},"injectables/PageStateService.html":{}}}],["getpageatindex(idx",{"_index":3936,"title":{},"body":{"injectables/PageStateService.html":{}}}],["getpasswordstrength",{"_index":3965,"title":{},"body":{"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{}}}],["getpasswordstrength(password",{"_index":3990,"title":{},"body":{"components/PasswordComponent.html":{}}}],["getprovincedescription",{"_index":4217,"title":{},"body":{"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{},"coverage.html":{}}}],["gets",{"_index":3470,"title":{},"body":{"components/GeocoderInputComponent.html":{}}}],["getselectdebugelement",{"_index":5270,"title":{},"body":{"coverage.html":{}}}],["getstarturl",{"_index":390,"title":{},"body":{"injectables/AbstractPgCheckService.html":{},"injectables/CheckCompleteBaseService.html":{},"interfaces/PageListInterface.html":{}}}],["getstreet",{"_index":1041,"title":{},"body":{"classes/Address.html":{}}}],["getsuccesscode",{"_index":1698,"title":{},"body":{"components/ConfirmTemplateComponent.html":{}}}],["getting",{"_index":4584,"title":{"changelog.html":{},"index.html":{},"license.html":{},"todo.html":{},"additional-documentation/getting-started.html":{}},"body":{"changelog.html":{},"index.html":{},"additional-documentation/getting-started.html":{}}}],["geturlindex",{"_index":1230,"title":{},"body":{"injectables/CheckCompleteBaseService.html":{},"interfaces/PageListInterface.html":{}}}],["geturlindex(url",{"_index":1239,"title":{},"body":{"injectables/CheckCompleteBaseService.html":{}}}],["getvalue",{"_index":1395,"title":{},"body":{"components/CityComponent.html":{},"components/EmailComponent.html":{},"components/NameComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"components/RadioComponent.html":{},"components/SinComponent.html":{}}}],["getwarningcode",{"_index":1702,"title":{},"body":{"components/ConfirmTemplateComponent.html":{}}}],["ggy",{"_index":2059,"title":{},"body":{"interfaces/CountryList.html":{}}}],["gha",{"_index":2043,"title":{},"body":{"interfaces/CountryList.html":{}}}],["ghana",{"_index":2044,"title":{},"body":{"interfaces/CountryList.html":{}}}],["gib",{"_index":2045,"title":{},"body":{"interfaces/CountryList.html":{},"interfaces/FileUploaderMsg.html":{}}}],["gibraltar",{"_index":2046,"title":{},"body":{"interfaces/CountryList.html":{}}}],["gif",{"_index":2872,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["gigantic",{"_index":2994,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["gin",{"_index":2061,"title":{},"body":{"interfaces/CountryList.html":{}}}],["git",{"_index":5185,"title":{},"body":{"changelog.html":{}}}],["gitcommit",{"_index":5382,"title":{},"body":{"coverage.html":{}}}],["githooks",{"_index":5198,"title":{},"body":{"changelog.html":{}}}],["github",{"_index":580,"title":{},"body":{"classes/AbstractTestPage.html":{},"changelog.html":{},"index.html":{},"todo.html":{}}}],["give",{"_index":3077,"title":{},"body":{"interfaces/FileUploaderMsg.html":{},"components/FormActionBarComponent.html":{}}}],["given",{"_index":540,"title":{},"body":{"classes/AbstractTestPage.html":{},"miscellaneous/enumerations.html":{}}}],["gives",{"_index":1496,"title":{},"body":{"interfaces/CommonAttachmentJson.html":{},"classes/CommonImage.html":{},"classes/CommonImageProcessingError.html":{},"interfaces/CommonImageScaleFactors.html":{},"classes/CommonImageScaleFactorsImpl.html":{}}}],["glp",{"_index":2053,"title":{},"body":{"interfaces/CountryList.html":{}}}],["gmb",{"_index":2037,"title":{},"body":{"interfaces/CountryList.html":{}}}],["gnb",{"_index":2062,"title":{},"body":{"interfaces/CountryList.html":{}}}],["gnq",{"_index":2007,"title":{},"body":{"interfaces/CountryList.html":{}}}],["go",{"_index":546,"title":{},"body":{"classes/AbstractTestPage.html":{},"interfaces/CommonLogMessage.html":{},"components/CoreBreadcrumbComponent.html":{},"interfaces/ISpaEnvResponse.html":{},"components/PageFrameworkComponent.html":{},"components/XiconButtonComponent.html":{},"additional-documentation/getting-started.html":{}}}],["goes",{"_index":5613,"title":{},"body":{"additional-documentation/local-development/components.html":{}}}],["going",{"_index":3180,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["good",{"_index":3855,"title":{},"body":{"components/PageFrameworkComponent.html":{},"additional-documentation/getting-started.html":{}}}],["gov",{"_index":5128,"title":{},"body":{"changelog.html":{}}}],["governing",{"_index":5465,"title":{},"body":{"license.html":{}}}],["grab",{"_index":529,"title":{},"body":{"classes/AbstractTestPage.html":{}}}],["grc",{"_index":2047,"title":{},"body":{"interfaces/CountryList.html":{}}}],["grd",{"_index":2051,"title":{},"body":{"interfaces/CountryList.html":{}}}],["greece",{"_index":2048,"title":{},"body":{"interfaces/CountryList.html":{}}}],["greenland",{"_index":2050,"title":{},"body":{"interfaces/CountryList.html":{}}}],["grenada",{"_index":2052,"title":{},"body":{"interfaces/CountryList.html":{}}}],["grenadines",{"_index":2275,"title":{},"body":{"interfaces/CountryList.html":{}}}],["grl",{"_index":2049,"title":{},"body":{"interfaces/CountryList.html":{}}}],["group",{"_index":1127,"title":{},"body":{"components/ButtonGroupComponent.html":{},"interfaces/IRadioItems.html":{},"components/RadioComponent.html":{}}}],["group'},{'name",{"_index":687,"title":{},"body":{"components/AccordionCommonComponent.html":{},"components/ButtonComponent.html":{},"components/ButtonGroupComponent.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"components/ConfirmTemplateComponent.html":{},"components/CoreBreadcrumbComponent.html":{},"components/DatepickerComponent.html":{},"components/DropdownComponent.html":{},"components/EmailComponent.html":{},"components/ErrorContainerComponent.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/FullNameComponent.html":{},"components/GeocoderInputComponent.html":{},"components/HeaderComponent.html":{},"components/NameComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"components/RadioComponent.html":{},"components/SampleModalComponent.html":{},"components/SinComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{},"components/XiconButtonComponent.html":{}}}],["group.component",{"_index":4306,"title":{},"body":{"modules/SharedCoreModule.html":{}}}],["group.component.html",{"_index":1129,"title":{},"body":{"components/ButtonGroupComponent.html":{}}}],["group.component.scss",{"_index":1128,"title":{},"body":{"components/ButtonGroupComponent.html":{}}}],["group.component.ts",{"_index":1120,"title":{},"body":{"components/ButtonGroupComponent.html":{},"coverage.html":{}}}],["group.component.ts:38",{"_index":1136,"title":{},"body":{"components/ButtonGroupComponent.html":{}}}],["group.component.ts:39",{"_index":1140,"title":{},"body":{"components/ButtonGroupComponent.html":{}}}],["group.component.ts:40",{"_index":1141,"title":{},"body":{"components/ButtonGroupComponent.html":{}}}],["group.component.ts:41",{"_index":1137,"title":{},"body":{"components/ButtonGroupComponent.html":{}}}],["group.component.ts:42",{"_index":1138,"title":{},"body":{"components/ButtonGroupComponent.html":{}}}],["group.component.ts:43",{"_index":1139,"title":{},"body":{"components/ButtonGroupComponent.html":{}}}],["group.component.ts:44",{"_index":1142,"title":{},"body":{"components/ButtonGroupComponent.html":{}}}],["group.component.ts:45",{"_index":1151,"title":{},"body":{"components/ButtonGroupComponent.html":{}}}],["group.component.ts:47",{"_index":1149,"title":{},"body":{"components/ButtonGroupComponent.html":{}}}],["group.component.ts:48",{"_index":1135,"title":{},"body":{"components/ButtonGroupComponent.html":{}}}],["group.component.ts:55",{"_index":1147,"title":{},"body":{"components/ButtonGroupComponent.html":{}}}],["group.component.ts:61",{"_index":1143,"title":{},"body":{"components/ButtonGroupComponent.html":{}}}],["group.component.ts:66",{"_index":1144,"title":{},"body":{"components/ButtonGroupComponent.html":{}}}],["group.component.ts:70",{"_index":1145,"title":{},"body":{"components/ButtonGroupComponent.html":{}}}],["group.component.ts:74",{"_index":1148,"title":{},"body":{"components/ButtonGroupComponent.html":{}}}],["group/button",{"_index":1119,"title":{},"body":{"components/ButtonGroupComponent.html":{},"modules/SharedCoreModule.html":{},"coverage.html":{}}}],["growing",{"_index":5438,"title":{},"body":{"index.html":{}}}],["gtm",{"_index":2057,"title":{},"body":{"interfaces/CountryList.html":{}}}],["guadeloupe",{"_index":2054,"title":{},"body":{"interfaces/CountryList.html":{}}}],["guam",{"_index":2056,"title":{},"body":{"interfaces/CountryList.html":{}}}],["guard",{"_index":360,"title":{"guards/LoadPageGuardService.html":{},"guards/RouteGuardService.html":{}},"body":{"injectables/AbstractPageGuardService.html":{},"injectables/AbstractPgCheckService.html":{},"injectables/CheckCompleteBaseService.html":{},"injectables/DefaultPageGuardService.html":{},"interfaces/PageListInterface.html":{},"changelog.html":{},"coverage.html":{}}}],["guard.service",{"_index":2628,"title":{},"body":{"injectables/DefaultPageGuardService.html":{},"guards/LoadPageGuardService.html":{}}}],["guard.service.ts",{"_index":359,"title":{},"body":{"injectables/AbstractPageGuardService.html":{},"injectables/DefaultPageGuardService.html":{},"guards/LoadPageGuardService.html":{},"guards/RouteGuardService.html":{},"coverage.html":{}}}],["guard.service.ts:24",{"_index":381,"title":{},"body":{"injectables/AbstractPageGuardService.html":{}}}],["guard.service.ts:25",{"_index":383,"title":{},"body":{"injectables/AbstractPageGuardService.html":{}}}],["guard.service.ts:29",{"_index":2625,"title":{},"body":{"injectables/DefaultPageGuardService.html":{}}}],["guard.service.ts:30",{"_index":2622,"title":{},"body":{"injectables/DefaultPageGuardService.html":{}}}],["guard.service.ts:34",{"_index":2623,"title":{},"body":{"injectables/DefaultPageGuardService.html":{}}}],["guard.service.ts:42",{"_index":2624,"title":{},"body":{"injectables/DefaultPageGuardService.html":{}}}],["guard.service.ts:53",{"_index":3796,"title":{},"body":{"guards/LoadPageGuardService.html":{},"guards/RouteGuardService.html":{}}}],["guard.service.ts:58",{"_index":3803,"title":{},"body":{"guards/LoadPageGuardService.html":{}}}],["guard.service.ts:59",{"_index":4240,"title":{},"body":{"guards/RouteGuardService.html":{}}}],["guard.service.ts:66",{"_index":3806,"title":{},"body":{"guards/LoadPageGuardService.html":{}}}],["guard.service.ts:67",{"_index":4241,"title":{},"body":{"guards/RouteGuardService.html":{}}}],["guard.service.ts:73",{"_index":3798,"title":{},"body":{"guards/LoadPageGuardService.html":{}}}],["guard.service.ts:74",{"_index":4239,"title":{},"body":{"guards/RouteGuardService.html":{}}}],["guards",{"_index":1285,"title":{},"body":{"injectables/CheckCompleteBaseService.html":{},"guards/LoadPageGuardService.html":{},"interfaces/PageListInterface.html":{},"guards/RouteGuardService.html":{},"overview.html":{}}}],["guatemala",{"_index":2058,"title":{},"body":{"interfaces/CountryList.html":{}}}],["guernsey",{"_index":2060,"title":{},"body":{"interfaces/CountryList.html":{}}}],["guessable",{"_index":3992,"title":{},"body":{"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{}}}],["guesses",{"_index":3994,"title":{},"body":{"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{}}}],["guf",{"_index":2027,"title":{},"body":{"interfaces/CountryList.html":{}}}],["guiana",{"_index":2029,"title":{},"body":{"interfaces/CountryList.html":{}}}],["guide",{"_index":5433,"title":{},"body":{"index.html":{}}}],["guidelines",{"_index":781,"title":{},"body":{"interfaces/AddrLabelList.html":{},"modules/CaptchaModule.html":{},"components/CityComponent.html":{},"components/CoreBreadcrumbComponent.html":{},"interfaces/CountryList.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"interfaces/FileUploaderMsg.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"interfaces/Maxlengths.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{},"interfaces/ReadOnlyFields.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{},"changelog.html":{}}}],["guinea",{"_index":2009,"title":{},"body":{"interfaces/CountryList.html":{}}}],["gum",{"_index":2055,"title":{},"body":{"interfaces/CountryList.html":{}}}],["guy",{"_index":2064,"title":{},"body":{"interfaces/CountryList.html":{}}}],["guyana",{"_index":2065,"title":{},"body":{"interfaces/CountryList.html":{}}}],["haiti",{"_index":2067,"title":{},"body":{"interfaces/CountryList.html":{}}}],["half",{"_index":4545,"title":{},"body":{"components/WizardProgressBarComponent.html":{}}}],["halfspace",{"_index":4547,"title":{},"body":{"components/WizardProgressBarComponent.html":{}}}],["halt",{"_index":4557,"title":{},"body":{"components/WizardProgressBarComponent.html":{}}}],["handle",{"_index":2878,"title":{},"body":{"interfaces/FileUploaderMsg.html":{},"components/FullNameComponent.html":{},"interfaces/FullNameErrorMsg.html":{},"components/WizardProgressBarComponent.html":{},"changelog.html":{}}}],["handleerror",{"_index":249,"title":{},"body":{"classes/AbstractHttpService.html":{},"interfaces/CommonLogMessage.html":{},"injectables/GeocoderService.html":{},"additional-documentation/getting-started.html":{}}}],["handleerror(error",{"_index":276,"title":{},"body":{"classes/AbstractHttpService.html":{},"interfaces/CommonLogMessage.html":{},"interfaces/FileUploaderMsg.html":{},"interfaces/GeoAddressResult.html":{},"injectables/GeocoderService.html":{},"interfaces/ISpaEnvResponse.html":{}}}],["handlers",{"_index":5156,"title":{},"body":{"changelog.html":{}}}],["handles",{"_index":279,"title":{},"body":{"classes/AbstractHttpService.html":{},"injectables/GeocoderService.html":{},"changelog.html":{}}}],["handling",{"_index":325,"title":{},"body":{"classes/AbstractHttpService.html":{}}}],["happens",{"_index":51,"title":{},"body":{"classes/AbstractBaseForm.html":{},"classes/AbstractForm.html":{},"classes/AbstractReactForm.html":{},"interfaces/FileUploaderMsg.html":{}}}],["hardcoding",{"_index":549,"title":{},"body":{"classes/AbstractTestPage.html":{}}}],["harum",{"_index":1465,"title":{},"body":{"components/CityComponent.html":{},"interfaces/CountryList.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"interfaces/FileUploaderMsg.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{}}}],["haserror",{"_index":3425,"title":{},"body":{"components/GeocoderInputComponent.html":{}}}],["hash",{"_index":2931,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["hasmask",{"_index":4468,"title":{},"body":{"directives/ValidatePostalcodeDirective.html":{}}}],["hasn't",{"_index":936,"title":{},"body":{"interfaces/AddrLabelList.html":{},"interfaces/Maxlengths.html":{},"interfaces/ReadOnlyFields.html":{}}}],["hasnoresults",{"_index":3426,"title":{},"body":{"components/GeocoderInputComponent.html":{}}}],["hasvalue",{"_index":997,"title":{},"body":{"classes/Address.html":{},"todo.html":{}}}],["having",{"_index":3921,"title":{},"body":{"components/PageSectionComponent.html":{},"changelog.html":{}}}],["header",{"_index":3549,"title":{},"body":{"components/HeaderComponent.html":{},"changelog.html":{}}}],["header'},{'name",{"_index":725,"title":{},"body":{"components/AccordionCommonComponent.html":{},"components/ButtonComponent.html":{},"components/ButtonGroupComponent.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"components/ConfirmTemplateComponent.html":{},"components/CoreBreadcrumbComponent.html":{},"components/DatepickerComponent.html":{},"components/DropdownComponent.html":{},"components/EmailComponent.html":{},"components/ErrorContainerComponent.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/FullNameComponent.html":{},"components/GeocoderInputComponent.html":{},"components/HeaderComponent.html":{},"components/NameComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"components/RadioComponent.html":{},"components/SampleModalComponent.html":{},"components/SinComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{},"components/XiconButtonComponent.html":{}}}],["header.component.html",{"_index":3559,"title":{},"body":{"components/HeaderComponent.html":{}}}],["header.component.scss",{"_index":3558,"title":{},"body":{"components/HeaderComponent.html":{}}}],["headercomponent",{"_index":724,"title":{"components/HeaderComponent.html":{}},"body":{"components/AccordionCommonComponent.html":{},"components/ButtonComponent.html":{},"components/ButtonGroupComponent.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"components/ConfirmTemplateComponent.html":{},"components/CoreBreadcrumbComponent.html":{},"components/DatepickerComponent.html":{},"components/DropdownComponent.html":{},"components/EmailComponent.html":{},"components/ErrorContainerComponent.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/FullNameComponent.html":{},"components/GeocoderInputComponent.html":{},"components/HeaderComponent.html":{},"components/NameComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"components/RadioComponent.html":{},"components/SampleModalComponent.html":{},"modules/SharedCoreModule.html":{},"components/SinComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{},"components/XiconButtonComponent.html":{},"changelog.html":{},"coverage.html":{},"overview.html":{}}}],["headername",{"_index":3758,"title":{},"body":{"interfaces/ISpaEnvResponse.html":{}}}],["headers",{"_index":260,"title":{},"body":{"classes/AbstractHttpService.html":{},"interfaces/CommonLogMessage.html":{},"interfaces/FileUploaderMsg.html":{},"injectables/GeocoderService.html":{}}}],["headerservice",{"_index":1717,"title":{},"body":{"classes/Container.html":{},"interfaces/WizardProgressItem.html":{}}}],["health",{"_index":3673,"title":{},"body":{"interfaces/ISpaEnvResponse.html":{}}}],["heard",{"_index":2069,"title":{},"body":{"interfaces/CountryList.html":{}}}],["height",{"_index":2896,"title":{},"body":{"interfaces/FileUploaderMsg.html":{},"changelog.html":{}}}],["heightfactor",{"_index":1539,"title":{},"body":{"interfaces/CommonAttachmentJson.html":{},"classes/CommonImage.html":{},"classes/CommonImageProcessingError.html":{},"interfaces/CommonImageScaleFactors.html":{},"classes/CommonImageScaleFactorsImpl.html":{}}}],["helena",{"_index":2258,"title":{},"body":{"interfaces/CountryList.html":{}}}],["help",{"_index":5520,"title":{},"body":{"additional-documentation/local-development/schematics.html":{},"additional-documentation/local-development/components.html":{}}}],["helper",{"_index":346,"title":{},"body":{"classes/AbstractHttpService.html":{},"changelog.html":{},"additional-documentation/local-development/schematics.html":{}}}],["helpers",{"_index":3274,"title":{},"body":{"components/FormActionBarComponent.html":{}}}],["helpers.ts",{"_index":5259,"title":{},"body":{"coverage.html":{}}}],["helpers/library",{"_index":174,"title":{},"body":{"classes/AbstractFormControl.html":{},"components/XiconButtonComponent.html":{}}}],["helpers/scroll",{"_index":3273,"title":{},"body":{"components/FormActionBarComponent.html":{}}}],["here",{"_index":1652,"title":{},"body":{"interfaces/CommonLogMessage.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"interfaces/FileUploaderMsg.html":{},"interfaces/ISpaEnvResponse.html":{},"classes/MoHCommonLibraryError.html":{},"components/WizardProgressBarComponent.html":{}}}],["herzegovina",{"_index":1920,"title":{},"body":{"interfaces/CountryList.html":{}}}],["hfactor",{"_index":1543,"title":{},"body":{"interfaces/CommonAttachmentJson.html":{},"classes/CommonImage.html":{},"classes/CommonImageProcessingError.html":{},"interfaces/CommonImageScaleFactors.html":{},"classes/CommonImageScaleFactorsImpl.html":{}}}],["hidden",{"_index":2884,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["hide",{"_index":40,"title":{},"body":{"classes/AbstractBaseForm.html":{},"classes/AbstractForm.html":{},"classes/AbstractReactForm.html":{},"components/GeocoderInputComponent.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"changelog.html":{}}}],["hidefullsizeview",{"_index":4417,"title":{},"body":{"components/ThumbnailComponent.html":{}}}],["hidevalue",{"_index":3960,"title":{},"body":{"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{}}}],["high",{"_index":5557,"title":{},"body":{"additional-documentation/local-development/schematics.html":{}}}],["hit",{"_index":308,"title":{},"body":{"classes/AbstractHttpService.html":{},"classes/AbstractTestPage.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"injectables/GeocoderService.html":{}}}],["hkg",{"_index":2076,"title":{},"body":{"interfaces/CountryList.html":{}}}],["hmd",{"_index":2068,"title":{},"body":{"interfaces/CountryList.html":{}}}],["hnd",{"_index":2074,"title":{},"body":{"interfaces/CountryList.html":{}}}],["holy",{"_index":2072,"title":{},"body":{"interfaces/CountryList.html":{}}}],["homepage",{"_index":5084,"title":{},"body":{"changelog.html":{}}}],["honduras",{"_index":2075,"title":{},"body":{"interfaces/CountryList.html":{}}}],["hong",{"_index":2077,"title":{},"body":{"interfaces/CountryList.html":{}}}],["hood",{"_index":5094,"title":{},"body":{"changelog.html":{}}}],["hooks",{"_index":5176,"title":{},"body":{"changelog.html":{}}}],["horizontal",{"_index":3606,"title":{},"body":{"interfaces/IRadioItems.html":{},"components/RadioComponent.html":{}}}],["horizontally",{"_index":4510,"title":{},"body":{"components/WizardProgressBarComponent.html":{}}}],["hostlistener",{"_index":2559,"title":{},"body":{"directives/DateFieldFormatDirective.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{}}}],["hostlistener('input",{"_index":2561,"title":{},"body":{"directives/DateFieldFormatDirective.html":{}}}],["hostlisteners",{"_index":2553,"title":{},"body":{"directives/DateFieldFormatDirective.html":{},"components/PasswordComponent.html":{}}}],["hrv",{"_index":1983,"title":{},"body":{"interfaces/CountryList.html":{}}}],["hti",{"_index":2066,"title":{},"body":{"interfaces/CountryList.html":{}}}],["html",{"_index":678,"title":{},"body":{"components/AccordionCommonComponent.html":{},"components/ButtonComponent.html":{},"components/ButtonGroupComponent.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"components/ConfirmTemplateComponent.html":{},"classes/Container.html":{},"components/CoreBreadcrumbComponent.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"components/DropdownComponent.html":{},"components/EmailComponent.html":{},"components/ErrorContainerComponent.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/FullNameComponent.html":{},"components/GeocoderInputComponent.html":{},"components/HeaderComponent.html":{},"components/NameComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"components/RadioComponent.html":{},"components/SampleModalComponent.html":{},"components/SinComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{},"interfaces/WizardProgressItem.html":{},"components/XiconButtonComponent.html":{},"changelog.html":{}}}],["html5",{"_index":2876,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["htmlcanvaselement",{"_index":3095,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["htmlimageelement",{"_index":3058,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["htmlinputelement",{"_index":2564,"title":{},"body":{"directives/DateFieldFormatDirective.html":{}}}],["http",{"_index":244,"title":{},"body":{"classes/AbstractHttpService.html":{},"injectables/CaptchaDataService.html":{},"interfaces/CommonLogMessage.html":{},"interfaces/GeoAddressResult.html":{},"components/GeocoderInputComponent.html":{},"injectables/GeocoderService.html":{},"interfaces/ISpaEnvResponse.html":{},"injectables/ServerPayload.html":{}}}],["http://full",{"_index":3591,"title":{},"body":{"components/HeaderComponent.html":{}}}],["http://www.apache.org/licenses/license",{"_index":5451,"title":{},"body":{"license.html":{}}}],["http_x_forwarded_host",{"_index":1596,"title":{},"body":{"interfaces/CommonLogMessage.html":{}}}],["httpclient",{"_index":256,"title":{},"body":{"classes/AbstractHttpService.html":{},"injectables/CaptchaDataService.html":{},"interfaces/CommonLogMessage.html":{},"interfaces/GeoAddressResult.html":{},"injectables/GeocoderService.html":{},"interfaces/ISpaEnvResponse.html":{},"injectables/ServerPayload.html":{}}}],["httpclientmodule",{"_index":811,"title":{},"body":{"interfaces/AddrLabelList.html":{},"modules/CaptchaModule.html":{},"interfaces/Maxlengths.html":{},"interfaces/ReadOnlyFields.html":{}}}],["httperrorresponse",{"_index":277,"title":{},"body":{"classes/AbstractHttpService.html":{},"interfaces/CommonLogMessage.html":{},"interfaces/GeoAddressResult.html":{},"injectables/GeocoderService.html":{},"interfaces/ISpaEnvResponse.html":{}}}],["httpheaders",{"_index":258,"title":{},"body":{"classes/AbstractHttpService.html":{},"interfaces/CommonLogMessage.html":{},"interfaces/GeoAddressResult.html":{},"injectables/GeocoderService.html":{},"interfaces/ISpaEnvResponse.html":{}}}],["httpoptions",{"_index":254,"title":{},"body":{"classes/AbstractHttpService.html":{},"interfaces/CommonLogMessage.html":{}}}],["httpopts",{"_index":326,"title":{},"body":{"classes/AbstractHttpService.html":{}}}],["httpopts.params",{"_index":328,"title":{},"body":{"classes/AbstractHttpService.html":{}}}],["httpparams",{"_index":265,"title":{},"body":{"classes/AbstractHttpService.html":{},"interfaces/GeoAddressResult.html":{},"injectables/GeocoderService.html":{}}}],["httpresponse",{"_index":1176,"title":{},"body":{"injectables/CaptchaDataService.html":{},"injectables/ServerPayload.html":{}}}],["https://bcgov.github.io/moh",{"_index":5426,"title":{},"body":{"index.html":{}}}],["https://developer.mozilla.org/en",{"_index":1521,"title":{},"body":{"interfaces/CommonAttachmentJson.html":{},"classes/CommonImage.html":{},"classes/CommonImageProcessingError.html":{},"interfaces/CommonImageScaleFactors.html":{},"classes/CommonImageScaleFactorsImpl.html":{}}}],["https://geocoder.api.gov.bc.ca",{"_index":3381,"title":{},"body":{"interfaces/GeoAddressResult.html":{},"injectables/GeocoderService.html":{}}}],["https://geocoder.api.gov.bc.ca/addresses.json?minscore=50&maxresults=5&echo=false&brief=true&autocomplete=true&addressstring=784+hock",{"_index":3384,"title":{},"body":{"interfaces/GeoAddressResult.html":{},"injectables/GeocoderService.html":{}}}],["https://github.com/angular/angular/issues/24818",{"_index":3365,"title":{},"body":{"components/FullNameComponent.html":{},"interfaces/FullNameErrorMsg.html":{}}}],["https://github.com/dropbox/zxcvbn",{"_index":3996,"title":{},"body":{"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{}}}],["https://github.com/jvandemo/generator",{"_index":4016,"title":{},"body":{"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{}}}],["https://github.com/kekeh/ngx",{"_index":2442,"title":{},"body":{"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{}}}],["human",{"_index":502,"title":{},"body":{"classes/AbstractTestPage.html":{},"interfaces/FileUploaderMsg.html":{}}}],["hun",{"_index":2079,"title":{},"body":{"interfaces/CountryList.html":{}}}],["hungary",{"_index":2080,"title":{},"body":{"interfaces/CountryList.html":{}}}],["hyphen",{"_index":3347,"title":{},"body":{"components/FullNameComponent.html":{},"interfaces/FullNameErrorMsg.html":{}}}],["hyphens",{"_index":1389,"title":{},"body":{"components/CityComponent.html":{},"interfaces/CountryList.html":{},"components/NameComponent.html":{},"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{}}}],["iceland",{"_index":2082,"title":{},"body":{"interfaces/CountryList.html":{}}}],["icon",{"_index":834,"title":{},"body":{"interfaces/AddrLabelList.html":{},"interfaces/Maxlengths.html":{},"interfaces/ReadOnlyFields.html":{},"changelog.html":{}}}],["id",{"_index":1461,"title":{},"body":{"components/CityComponent.html":{},"interfaces/CommonAttachmentJson.html":{},"classes/CommonImage.html":{},"classes/CommonImageProcessingError.html":{},"interfaces/CommonImageScaleFactors.html":{},"classes/CommonImageScaleFactorsImpl.html":{},"interfaces/CommonLogMessage.html":{},"interfaces/CountryList.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"interfaces/FileUploaderMsg.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{}}}],["id='content",{"_index":3555,"title":{},"body":{"components/HeaderComponent.html":{}}}],["idea",{"_index":583,"title":{},"body":{"classes/AbstractTestPage.html":{},"components/CoreBreadcrumbComponent.html":{}}}],["identical",{"_index":2985,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["identifier",{"_index":138,"title":{},"body":{"classes/AbstractFormControl.html":{},"classes/Base.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"components/ConfirmTemplateComponent.html":{},"components/DatepickerComponent.html":{},"components/DropdownComponent.html":{},"components/EmailComponent.html":{},"interfaces/FileUploaderMsg.html":{},"components/FullNameComponent.html":{},"components/GeocoderInputComponent.html":{},"components/NameComponent.html":{},"components/PasswordComponent.html":{},"classes/Person.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"components/RadioComponent.html":{},"components/SampleModalComponent.html":{},"components/SinComponent.html":{},"components/ToggleComponent.html":{},"coverage.html":{}}}],["idn",{"_index":2085,"title":{},"body":{"interfaces/CountryList.html":{}}}],["ids",{"_index":1071,"title":{},"body":{"classes/Base.html":{}}}],["idx",{"_index":1282,"title":{},"body":{"injectables/CheckCompleteBaseService.html":{},"interfaces/PageList.html":{},"interfaces/PageListInterface.html":{},"injectables/PageStateService.html":{}}}],["ie",{"_index":4162,"title":{},"body":{"components/PostalCodeComponent.html":{},"components/SinComponent.html":{},"components/WizardProgressBarComponent.html":{},"changelog.html":{}}}],["ie10",{"_index":4574,"title":{},"body":{"components/XiconButtonComponent.html":{}}}],["ignored",{"_index":3064,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["image",{"_index":1480,"title":{},"body":{"interfaces/CommonAttachmentJson.html":{},"classes/CommonImage.html":{},"classes/CommonImageProcessingError.html":{},"interfaces/CommonImageScaleFactors.html":{},"classes/CommonImageScaleFactorsImpl.html":{},"interfaces/FileUploaderMsg.html":{},"changelog.html":{},"dependencies.html":{}}}],["image.id",{"_index":3061,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["image.name",{"_index":3046,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["image.naturalheight",{"_index":3085,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["image.naturalwidth",{"_index":3083,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["image.src",{"_index":3092,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["image.title",{"_index":4262,"title":{},"body":{"components/SampleModalComponent.html":{}}}],["image/jpeg",{"_index":3088,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["imageexists",{"_index":2979,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["imagefile",{"_index":3059,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["imagefile.name",{"_index":3062,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["imagelist",{"_index":2841,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["imagelist.length",{"_index":2842,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["imagelist[i].id",{"_index":2844,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["imageobject",{"_index":4418,"title":{},"body":{"components/ThumbnailComponent.html":{}}}],["imageobject.name",{"_index":4443,"title":{},"body":{"components/ThumbnailComponent.html":{}}}],["imageplaceholderenterkeystream",{"_index":3017,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["imageplaceholderref",{"_index":2804,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["imagereaderror",{"_index":3053,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["imagereaderror.rawimagefile",{"_index":3200,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["images",{"_index":2809,"title":{},"body":{"interfaces/FileUploaderMsg.html":{},"interfaces/SampleImageInterface.html":{},"components/SampleModalComponent.html":{},"changelog.html":{}}}],["images.length",{"_index":3042,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["images.map((image",{"_index":3045,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["imageschange",{"_index":2811,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["imagesizeok",{"_index":2988,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["imagetoobigerror",{"_index":3141,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["imagetoobigerror.commonimage",{"_index":3144,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["imagetoobigerror.maxsizeallowed",{"_index":3143,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["img",{"_index":3056,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["imgel",{"_index":3185,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["imgel.onerror",{"_index":3194,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["imgel.onload",{"_index":3191,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["imgel.src",{"_index":3187,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["imgelsarray",{"_index":3212,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["immediately",{"_index":3236,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["imn",{"_index":2094,"title":{},"body":{"interfaces/CountryList.html":{}}}],["implement",{"_index":3167,"title":{},"body":{"interfaces/FileUploaderMsg.html":{},"guards/LoadPageGuardService.html":{},"guards/RouteGuardService.html":{},"changelog.html":{}}}],["implementation",{"_index":2444,"title":{},"body":{"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{}}}],["implemented",{"_index":34,"title":{},"body":{"classes/AbstractBaseForm.html":{},"classes/AbstractForm.html":{},"classes/AbstractReactForm.html":{},"changelog.html":{}}}],["implementing",{"_index":186,"title":{},"body":{"classes/AbstractFormControl.html":{},"guards/LoadPageGuardService.html":{},"guards/RouteGuardService.html":{}}}],["implements",{"_index":114,"title":{},"body":{"classes/AbstractFormControl.html":{},"injectables/AbstractPageGuardService.html":{},"injectables/AbstractPgCheckService.html":{},"components/AccordionCommonComponent.html":{},"interfaces/AddrLabelList.html":{},"components/ButtonComponent.html":{},"components/ButtonGroupComponent.html":{},"injectables/CheckCompleteBaseService.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"interfaces/CommonAttachmentJson.html":{},"classes/CommonImage.html":{},"classes/CommonImageProcessingError.html":{},"interfaces/CommonImageScaleFactors.html":{},"classes/CommonImageScaleFactorsImpl.html":{},"classes/Container.html":{},"components/CoreBreadcrumbComponent.html":{},"interfaces/CountryList.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"injectables/DefaultPageGuardService.html":{},"components/DropdownComponent.html":{},"directives/DuplicateCheckDirective.html":{},"components/EmailComponent.html":{},"interfaces/FileUploaderMsg.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/FullNameComponent.html":{},"interfaces/FullNameErrorMsg.html":{},"components/GeocoderInputComponent.html":{},"components/HeaderComponent.html":{},"interfaces/IRadioItems.html":{},"interfaces/ISpaEnvResponse.html":{},"guards/LoadPageGuardService.html":{},"interfaces/Maxlengths.html":{},"components/NameComponent.html":{},"components/PageFrameworkComponent.html":{},"interfaces/PageListInterface.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{},"components/RadioComponent.html":{},"interfaces/ReadOnlyFields.html":{},"guards/RouteGuardService.html":{},"components/SinComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"directives/ValidateBcPostalDirective.html":{},"directives/ValidateCityDirective.html":{},"directives/ValidateNameDirective.html":{},"directives/ValidatePostalcodeDirective.html":{},"directives/ValidateRegionDirective.html":{},"directives/ValidateStreetDirective.html":{},"components/WizardProgressBarComponent.html":{},"interfaces/WizardProgressItem.html":{},"components/XiconButtonComponent.html":{}}}],["implied",{"_index":5463,"title":{},"body":{"license.html":{}}}],["import",{"_index":71,"title":{},"body":{"classes/AbstractBaseForm.html":{},"classes/AbstractForm.html":{},"classes/AbstractFormControl.html":{},"classes/AbstractHttpService.html":{},"injectables/AbstractPageGuardService.html":{},"injectables/AbstractPgCheckService.html":{},"classes/AbstractReactForm.html":{},"classes/AbstractTestPage.html":{},"components/AccordionCommonComponent.html":{},"interfaces/AddrLabelList.html":{},"classes/Base.html":{},"components/ButtonComponent.html":{},"components/ButtonGroupComponent.html":{},"injectables/CaptchaDataService.html":{},"modules/CaptchaModule.html":{},"injectables/CheckCompleteBaseService.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"interfaces/CommonAttachmentJson.html":{},"classes/CommonImage.html":{},"classes/CommonImageProcessingError.html":{},"interfaces/CommonImageScaleFactors.html":{},"classes/CommonImageScaleFactorsImpl.html":{},"interfaces/CommonLogMessage.html":{},"components/ConfirmTemplateComponent.html":{},"classes/Container.html":{},"injectables/ContainerService.html":{},"components/CoreBreadcrumbComponent.html":{},"interfaces/CountryList.html":{},"interfaces/DateErrorMsg.html":{},"directives/DateFieldFormatDirective.html":{},"components/DatepickerComponent.html":{},"injectables/DefaultPageGuardService.html":{},"components/DropdownComponent.html":{},"directives/DuplicateCheckDirective.html":{},"components/EmailComponent.html":{},"components/ErrorContainerComponent.html":{},"interfaces/FileUploaderMsg.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/FullNameComponent.html":{},"interfaces/FullNameErrorMsg.html":{},"interfaces/GeoAddressResult.html":{},"components/GeocoderInputComponent.html":{},"injectables/GeocoderService.html":{},"components/HeaderComponent.html":{},"interfaces/IRadioItems.html":{},"interfaces/ISpaEnvResponse.html":{},"guards/LoadPageGuardService.html":{},"interfaces/Maxlengths.html":{},"components/NameComponent.html":{},"components/PageFrameworkComponent.html":{},"interfaces/PageList.html":{},"interfaces/PageListInterface.html":{},"components/PageSectionComponent.html":{},"injectables/PageStateService.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"classes/Person.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{},"components/RadioComponent.html":{},"interfaces/ReadOnlyFields.html":{},"guards/RouteGuardService.html":{},"interfaces/SampleImageInterface.html":{},"components/SampleModalComponent.html":{},"injectables/ServerPayload.html":{},"modules/SharedCoreModule.html":{},"components/SinComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"directives/ValidateBcPostalDirective.html":{},"directives/ValidateCityDirective.html":{},"directives/ValidateNameDirective.html":{},"directives/ValidatePostalcodeDirective.html":{},"directives/ValidateRegionDirective.html":{},"directives/ValidateStreetDirective.html":{},"components/WizardProgressBarComponent.html":{},"interfaces/WizardProgressItem.html":{},"components/XiconButtonComponent.html":{},"changelog.html":{},"index.html":{},"additional-documentation/getting-started.html":{},"additional-documentation/local-development/components.html":{}}}],["import('pdfjs",{"_index":2781,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["importable",{"_index":5583,"title":{},"body":{"additional-documentation/local-development/components.html":{}}}],["important",{"_index":5537,"title":{},"body":{"additional-documentation/local-development/schematics.html":{}}}],["importantly",{"_index":3917,"title":{},"body":{"components/PageSectionComponent.html":{}}}],["imported",{"_index":532,"title":{},"body":{"classes/AbstractTestPage.html":{},"changelog.html":{},"additional-documentation/local-development/components.html":{}}}],["importing",{"_index":5493,"title":{},"body":{"additional-documentation/getting-started.html":{}}}],["imports",{"_index":1207,"title":{},"body":{"modules/CaptchaModule.html":{},"modules/SharedCoreModule.html":{},"changelog.html":{},"index.html":{},"additional-documentation/getting-started.html":{}}}],["impose",{"_index":2874,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["improve",{"_index":3079,"title":{},"body":{"interfaces/FileUploaderMsg.html":{},"changelog.html":{}}}],["improvement",{"_index":3915,"title":{},"body":{"components/PageSectionComponent.html":{}}}],["imydate",{"_index":2434,"title":{},"body":{"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{}}}],["incidunt",{"_index":1464,"title":{},"body":{"components/CityComponent.html":{},"interfaces/CountryList.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"interfaces/FileUploaderMsg.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{}}}],["include",{"_index":303,"title":{},"body":{"classes/AbstractHttpService.html":{},"components/CityComponent.html":{},"interfaces/CommonLogMessage.html":{},"interfaces/CountryList.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"injectables/GeocoderService.html":{},"components/HeaderComponent.html":{},"components/NameComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{},"changelog.html":{},"additional-documentation/getting-started.html":{},"additional-documentation/local-development/schematics.html":{},"additional-documentation/local-development/components.html":{}}}],["includes",{"_index":570,"title":{},"body":{"classes/AbstractTestPage.html":{},"interfaces/CommonLogMessage.html":{},"components/FullNameComponent.html":{},"interfaces/FullNameErrorMsg.html":{},"interfaces/GeoAddressResult.html":{},"injectables/GeocoderService.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"changelog.html":{},"additional-documentation/getting-started.html":{},"additional-documentation/local-development/components.html":{}}}],["including",{"_index":2947,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["incomplete",{"_index":1245,"title":{},"body":{"injectables/CheckCompleteBaseService.html":{},"interfaces/PageListInterface.html":{}}}],["incompletepages",{"_index":1296,"title":{},"body":{"injectables/CheckCompleteBaseService.html":{},"interfaces/PageListInterface.html":{}}}],["incompletepages.length",{"_index":1299,"title":{},"body":{"injectables/CheckCompleteBaseService.html":{},"interfaces/PageListInterface.html":{}}}],["incompletevalue",{"_index":4752,"title":{},"body":{"changelog.html":{}}}],["incorrect",{"_index":556,"title":{},"body":{"classes/AbstractTestPage.html":{},"additional-documentation/getting-started.html":{}}}],["increasewidth",{"_index":3291,"title":{},"body":{"components/FormSubmitBarComponent.html":{}}}],["increment",{"_index":5225,"title":{},"body":{"changelog.html":{}}}],["ind",{"_index":2083,"title":{},"body":{"interfaces/CountryList.html":{}}}],["index",{"_index":9,"title":{"index.html":{}},"body":{"classes/AbstractBaseForm.html":{},"classes/AbstractForm.html":{},"classes/AbstractFormControl.html":{},"classes/AbstractHttpService.html":{},"injectables/AbstractPageGuardService.html":{},"injectables/AbstractPgCheckService.html":{},"classes/AbstractReactForm.html":{},"classes/AbstractTestPage.html":{},"components/AccordionCommonComponent.html":{},"interfaces/AddrLabelList.html":{},"classes/Address.html":{},"classes/Base.html":{},"components/ButtonComponent.html":{},"components/ButtonGroupComponent.html":{},"injectables/CaptchaDataService.html":{},"injectables/CheckCompleteBaseService.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"interfaces/CommonAttachmentJson.html":{},"classes/CommonImage.html":{},"classes/CommonImageProcessingError.html":{},"interfaces/CommonImageScaleFactors.html":{},"classes/CommonImageScaleFactorsImpl.html":{},"interfaces/CommonLogMessage.html":{},"components/ConfirmTemplateComponent.html":{},"classes/Container.html":{},"injectables/ContainerService.html":{},"components/CoreBreadcrumbComponent.html":{},"interfaces/CountryList.html":{},"interfaces/DateErrorMsg.html":{},"directives/DateFieldFormatDirective.html":{},"components/DatepickerComponent.html":{},"injectables/DefaultPageGuardService.html":{},"components/DropdownComponent.html":{},"directives/DuplicateCheckDirective.html":{},"components/EmailComponent.html":{},"components/ErrorContainerComponent.html":{},"interfaces/ErrorMessage.html":{},"interfaces/FileUploaderMsg.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/FullNameComponent.html":{},"interfaces/FullNameErrorMsg.html":{},"interfaces/GeoAddressResult.html":{},"components/GeocoderInputComponent.html":{},"injectables/GeocoderService.html":{},"components/HeaderComponent.html":{},"interfaces/IRadioItems.html":{},"interfaces/ISpaEnvResponse.html":{},"guards/LoadPageGuardService.html":{},"interfaces/Maxlengths.html":{},"components/NameComponent.html":{},"components/PageFrameworkComponent.html":{},"interfaces/PageList.html":{},"interfaces/PageListInterface.html":{},"components/PageSectionComponent.html":{},"injectables/PageStateService.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"classes/Person.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{},"components/RadioComponent.html":{},"interfaces/ReadOnlyFields.html":{},"guards/RouteGuardService.html":{},"interfaces/SampleImageInterface.html":{},"components/SampleModalComponent.html":{},"injectables/ServerPayload.html":{},"interfaces/SimpleDate.html":{},"components/SinComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"directives/ValidateBcPostalDirective.html":{},"directives/ValidateCityDirective.html":{},"directives/ValidateNameDirective.html":{},"directives/ValidatePostalcodeDirective.html":{},"directives/ValidateRegionDirective.html":{},"directives/ValidateStreetDirective.html":{},"components/WizardProgressBarComponent.html":{},"interfaces/WizardProgressItem.html":{},"components/XiconButtonComponent.html":{},"miscellaneous/enumerations.html":{}}}],["index.ts",{"_index":5526,"title":{},"body":{"additional-documentation/local-development/schematics.html":{}}}],["indexable",{"_index":1574,"title":{},"body":{"interfaces/CommonLogMessage.html":{},"interfaces/ErrorMessage.html":{},"interfaces/PageList.html":{},"interfaces/PageListInterface.html":{}}}],["india",{"_index":2084,"title":{},"body":{"interfaces/CountryList.html":{}}}],["indian",{"_index":1930,"title":{},"body":{"interfaces/CountryList.html":{}}}],["indicate",{"_index":4714,"title":{},"body":{"changelog.html":{}}}],["indicates",{"_index":1248,"title":{},"body":{"injectables/CheckCompleteBaseService.html":{},"interfaces/PageListInterface.html":{}}}],["indices",{"_index":3888,"title":{},"body":{"interfaces/PageList.html":{},"injectables/PageStateService.html":{}}}],["individual",{"_index":298,"title":{},"body":{"classes/AbstractHttpService.html":{},"components/FullNameComponent.html":{},"interfaces/FullNameErrorMsg.html":{},"injectables/GeocoderService.html":{}}}],["indonesia",{"_index":2086,"title":{},"body":{"interfaces/CountryList.html":{}}}],["info",{"_index":3,"title":{},"body":{"classes/AbstractBaseForm.html":{},"classes/AbstractForm.html":{},"classes/AbstractFormControl.html":{},"classes/AbstractHttpService.html":{},"injectables/AbstractPageGuardService.html":{},"injectables/AbstractPgCheckService.html":{},"classes/AbstractReactForm.html":{},"classes/AbstractTestPage.html":{},"components/AccordionCommonComponent.html":{},"interfaces/AddrLabelList.html":{},"classes/Address.html":{},"classes/Base.html":{},"components/ButtonComponent.html":{},"components/ButtonGroupComponent.html":{},"injectables/CaptchaDataService.html":{},"modules/CaptchaModule.html":{},"injectables/CheckCompleteBaseService.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"interfaces/CommonAttachmentJson.html":{},"classes/CommonImage.html":{},"classes/CommonImageProcessingError.html":{},"interfaces/CommonImageScaleFactors.html":{},"classes/CommonImageScaleFactorsImpl.html":{},"interfaces/CommonLogMessage.html":{},"components/ConfirmTemplateComponent.html":{},"classes/Container.html":{},"injectables/ContainerService.html":{},"components/CoreBreadcrumbComponent.html":{},"interfaces/CountryList.html":{},"interfaces/DateErrorMsg.html":{},"directives/DateFieldFormatDirective.html":{},"components/DatepickerComponent.html":{},"injectables/DefaultPageGuardService.html":{},"components/DropdownComponent.html":{},"directives/DuplicateCheckDirective.html":{},"components/EmailComponent.html":{},"components/ErrorContainerComponent.html":{},"interfaces/ErrorMessage.html":{},"interfaces/FileUploaderMsg.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/FullNameComponent.html":{},"interfaces/FullNameErrorMsg.html":{},"interfaces/GeoAddressResult.html":{},"components/GeocoderInputComponent.html":{},"injectables/GeocoderService.html":{},"components/HeaderComponent.html":{},"interfaces/IRadioItems.html":{},"interfaces/ISpaEnvResponse.html":{},"guards/LoadPageGuardService.html":{},"interfaces/Maxlengths.html":{},"classes/MoHCommonLibraryError.html":{},"components/NameComponent.html":{},"components/PageFrameworkComponent.html":{},"interfaces/PageList.html":{},"interfaces/PageListInterface.html":{},"components/PageSectionComponent.html":{},"injectables/PageStateService.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"classes/Person.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{},"components/RadioComponent.html":{},"interfaces/ReadOnlyFields.html":{},"guards/RouteGuardService.html":{},"interfaces/SampleImageInterface.html":{},"components/SampleModalComponent.html":{},"injectables/ServerPayload.html":{},"modules/SharedCoreModule.html":{},"interfaces/SimpleDate.html":{},"components/SinComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"directives/ValidateBcPostalDirective.html":{},"directives/ValidateCityDirective.html":{},"directives/ValidateNameDirective.html":{},"directives/ValidatePostalcodeDirective.html":{},"directives/ValidateRegionDirective.html":{},"directives/ValidateStreetDirective.html":{},"components/WizardProgressBarComponent.html":{},"interfaces/WizardProgressItem.html":{},"components/XiconButtonComponent.html":{},"changelog.html":{},"miscellaneous/enumerations.html":{}}}],["infocolectionnoticecomponent",{"_index":492,"title":{},"body":{"classes/AbstractTestPage.html":{}}}],["information",{"_index":371,"title":{},"body":{"injectables/AbstractPageGuardService.html":{},"injectables/AbstractPgCheckService.html":{},"interfaces/ISpaEnvResponse.html":{},"additional-documentation/local-development/components.html":{}}}],["ingxmydpoptions",{"_index":2433,"title":{},"body":{"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{}}}],["inheiritance",{"_index":4812,"title":{},"body":{"changelog.html":{}}}],["inherited",{"_index":94,"title":{},"body":{"classes/AbstractForm.html":{},"classes/AbstractFormControl.html":{},"classes/AbstractReactForm.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"interfaces/CommonLogMessage.html":{},"components/ConfirmTemplateComponent.html":{},"components/DatepickerComponent.html":{},"components/DropdownComponent.html":{},"components/EmailComponent.html":{},"components/FullNameComponent.html":{},"components/GeocoderInputComponent.html":{},"injectables/GeocoderService.html":{},"components/NameComponent.html":{},"components/PasswordComponent.html":{},"classes/Person.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"components/RadioComponent.html":{},"components/SampleModalComponent.html":{},"components/SinComponent.html":{},"components/ToggleComponent.html":{}}}],["init",{"_index":4396,"title":{},"body":{"components/SinComponent.html":{},"changelog.html":{}}}],["initialization",{"_index":219,"title":{},"body":{"classes/AbstractFormControl.html":{}}}],["initialize",{"_index":4102,"title":{},"body":{"classes/Person.html":{}}}],["initialized",{"_index":3733,"title":{},"body":{"interfaces/ISpaEnvResponse.html":{},"components/XiconButtonComponent.html":{},"changelog.html":{}}}],["initials",{"_index":3838,"title":{},"body":{"components/NameComponent.html":{}}}],["inject",{"_index":4657,"title":{},"body":{"changelog.html":{}}}],["injectable",{"_index":356,"title":{"injectables/AbstractPageGuardService.html":{},"injectables/AbstractPgCheckService.html":{},"injectables/CaptchaDataService.html":{},"injectables/CheckCompleteBaseService.html":{},"injectables/ContainerService.html":{},"injectables/DefaultPageGuardService.html":{},"injectables/GeocoderService.html":{},"injectables/PageStateService.html":{},"injectables/ServerPayload.html":{}},"body":{"injectables/AbstractPageGuardService.html":{},"injectables/AbstractPgCheckService.html":{},"injectables/CaptchaDataService.html":{},"injectables/CheckCompleteBaseService.html":{},"interfaces/CommonLogMessage.html":{},"injectables/ContainerService.html":{},"injectables/DefaultPageGuardService.html":{},"interfaces/GeoAddressResult.html":{},"injectables/GeocoderService.html":{},"guards/LoadPageGuardService.html":{},"interfaces/PageList.html":{},"interfaces/PageListInterface.html":{},"injectables/PageStateService.html":{},"guards/RouteGuardService.html":{},"injectables/ServerPayload.html":{},"coverage.html":{},"additional-documentation/getting-started.html":{}}}],["injectables",{"_index":358,"title":{},"body":{"injectables/AbstractPageGuardService.html":{},"injectables/AbstractPgCheckService.html":{},"injectables/CaptchaDataService.html":{},"injectables/CheckCompleteBaseService.html":{},"injectables/ContainerService.html":{},"injectables/DefaultPageGuardService.html":{},"injectables/GeocoderService.html":{},"injectables/PageStateService.html":{},"injectables/ServerPayload.html":{},"overview.html":{},"additional-documentation/getting-started.html":{}}}],["injected",{"_index":2615,"title":{},"body":{"injectables/DefaultPageGuardService.html":{}}}],["injectiontoken",{"_index":2626,"title":{},"body":{"injectables/DefaultPageGuardService.html":{},"guards/RouteGuardService.html":{}}}],["injector",{"_index":2621,"title":{},"body":{"injectables/DefaultPageGuardService.html":{},"guards/RouteGuardService.html":{}}}],["inline",{"_index":3607,"title":{},"body":{"interfaces/IRadioItems.html":{},"components/RadioComponent.html":{}}}],["inmaintenance",{"_index":3757,"title":{},"body":{"interfaces/ISpaEnvResponse.html":{}}}],["input",{"_index":172,"title":{},"body":{"classes/AbstractFormControl.html":{},"classes/AbstractTestPage.html":{},"components/AccordionCommonComponent.html":{},"interfaces/AddrLabelList.html":{},"components/ButtonComponent.html":{},"components/ButtonGroupComponent.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"interfaces/CommonLogMessage.html":{},"components/ConfirmTemplateComponent.html":{},"interfaces/CountryList.html":{},"interfaces/DateErrorMsg.html":{},"directives/DateFieldFormatDirective.html":{},"components/DatepickerComponent.html":{},"components/DropdownComponent.html":{},"directives/DuplicateCheckDirective.html":{},"components/EmailComponent.html":{},"components/ErrorContainerComponent.html":{},"interfaces/FileUploaderMsg.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/FullNameComponent.html":{},"interfaces/FullNameErrorMsg.html":{},"components/GeocoderInputComponent.html":{},"components/HeaderComponent.html":{},"interfaces/IRadioItems.html":{},"interfaces/ISpaEnvResponse.html":{},"interfaces/Maxlengths.html":{},"components/NameComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{},"components/RadioComponent.html":{},"interfaces/ReadOnlyFields.html":{},"interfaces/SampleImageInterface.html":{},"components/SampleModalComponent.html":{},"components/SinComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"directives/ValidatePostalcodeDirective.html":{},"components/WizardProgressBarComponent.html":{},"components/XiconButtonComponent.html":{},"changelog.html":{},"todo.html":{},"additional-documentation/getting-started.html":{}}}],["input'},{'name",{"_index":723,"title":{},"body":{"components/AccordionCommonComponent.html":{},"components/ButtonComponent.html":{},"components/ButtonGroupComponent.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"components/ConfirmTemplateComponent.html":{},"components/CoreBreadcrumbComponent.html":{},"components/DatepickerComponent.html":{},"components/DropdownComponent.html":{},"components/EmailComponent.html":{},"components/ErrorContainerComponent.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/FullNameComponent.html":{},"components/GeocoderInputComponent.html":{},"components/HeaderComponent.html":{},"components/NameComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"components/RadioComponent.html":{},"components/SampleModalComponent.html":{},"components/SinComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{},"components/XiconButtonComponent.html":{}}}],["input(event",{"_index":2556,"title":{},"body":{"directives/DateFieldFormatDirective.html":{}}}],["input.component",{"_index":4348,"title":{},"body":{"modules/SharedCoreModule.html":{}}}],["input.component.html",{"_index":3424,"title":{},"body":{"components/GeocoderInputComponent.html":{}}}],["input.component.scss",{"_index":3423,"title":{},"body":{"components/GeocoderInputComponent.html":{}}}],["input.component.ts",{"_index":3420,"title":{},"body":{"components/GeocoderInputComponent.html":{},"coverage.html":{}}}],["input.component.ts:100",{"_index":3451,"title":{},"body":{"components/GeocoderInputComponent.html":{}}}],["input.component.ts:105",{"_index":3453,"title":{},"body":{"components/GeocoderInputComponent.html":{}}}],["input.component.ts:122",{"_index":3456,"title":{},"body":{"components/GeocoderInputComponent.html":{}}}],["input.component.ts:140",{"_index":3449,"title":{},"body":{"components/GeocoderInputComponent.html":{}}}],["input.component.ts:153",{"_index":3444,"title":{},"body":{"components/GeocoderInputComponent.html":{}}}],["input.component.ts:159",{"_index":3461,"title":{},"body":{"components/GeocoderInputComponent.html":{}}}],["input.component.ts:166",{"_index":3457,"title":{},"body":{"components/GeocoderInputComponent.html":{}}}],["input.component.ts:171",{"_index":3458,"title":{},"body":{"components/GeocoderInputComponent.html":{}}}],["input.component.ts:175",{"_index":3460,"title":{},"body":{"components/GeocoderInputComponent.html":{}}}],["input.component.ts:39",{"_index":3439,"title":{},"body":{"components/GeocoderInputComponent.html":{}}}],["input.component.ts:40",{"_index":3438,"title":{},"body":{"components/GeocoderInputComponent.html":{}}}],["input.component.ts:41",{"_index":3441,"title":{},"body":{"components/GeocoderInputComponent.html":{}}}],["input.component.ts:42",{"_index":3440,"title":{},"body":{"components/GeocoderInputComponent.html":{}}}],["input.component.ts:45",{"_index":3467,"title":{},"body":{"components/GeocoderInputComponent.html":{}}}],["input.component.ts:47",{"_index":3466,"title":{},"body":{"components/GeocoderInputComponent.html":{}}}],["input.component.ts:49",{"_index":3465,"title":{},"body":{"components/GeocoderInputComponent.html":{}}}],["input.component.ts:50",{"_index":3464,"title":{},"body":{"components/GeocoderInputComponent.html":{}}}],["input.component.ts:53",{"_index":3471,"title":{},"body":{"components/GeocoderInputComponent.html":{}}}],["input.component.ts:55",{"_index":3474,"title":{},"body":{"components/GeocoderInputComponent.html":{}}}],["input.component.ts:57",{"_index":3469,"title":{},"body":{"components/GeocoderInputComponent.html":{}}}],["input.component.ts:59",{"_index":3462,"title":{},"body":{"components/GeocoderInputComponent.html":{}}}],["input.component.ts:60",{"_index":3437,"title":{},"body":{"components/GeocoderInputComponent.html":{}}}],["input.component.ts:62",{"_index":3463,"title":{},"body":{"components/GeocoderInputComponent.html":{}}}],["input.component.ts:69",{"_index":3443,"title":{},"body":{"components/GeocoderInputComponent.html":{}}}],["input.component.ts:80",{"_index":3442,"title":{},"body":{"components/GeocoderInputComponent.html":{}}}],["input.component.ts:94",{"_index":3446,"title":{},"body":{"components/GeocoderInputComponent.html":{}}}],["input.getattribute",{"_index":2565,"title":{},"body":{"directives/DateFieldFormatDirective.html":{}}}],["input.value",{"_index":2569,"title":{},"body":{"directives/DateFieldFormatDirective.html":{}}}],["input.value.trim",{"_index":2567,"title":{},"body":{"directives/DateFieldFormatDirective.html":{}}}],["input/geocoder",{"_index":3419,"title":{},"body":{"components/GeocoderInputComponent.html":{},"modules/SharedCoreModule.html":{},"coverage.html":{}}}],["input[type='file",{"_index":2825,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["input_name",{"_index":2831,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["inputs",{"_index":32,"title":{},"body":{"classes/AbstractBaseForm.html":{},"classes/AbstractForm.html":{},"classes/AbstractFormControl.html":{},"classes/AbstractReactForm.html":{},"components/AccordionCommonComponent.html":{},"components/ButtonComponent.html":{},"components/ButtonGroupComponent.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"components/ConfirmTemplateComponent.html":{},"components/DatepickerComponent.html":{},"components/DropdownComponent.html":{},"directives/DuplicateCheckDirective.html":{},"components/EmailComponent.html":{},"components/ErrorContainerComponent.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/FullNameComponent.html":{},"components/GeocoderInputComponent.html":{},"components/HeaderComponent.html":{},"components/NameComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"components/RadioComponent.html":{},"components/SampleModalComponent.html":{},"components/SinComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"directives/ValidatePostalcodeDirective.html":{},"components/WizardProgressBarComponent.html":{},"components/XiconButtonComponent.html":{},"changelog.html":{}}}],["inside",{"_index":504,"title":{},"body":{"classes/AbstractTestPage.html":{},"components/CoreBreadcrumbComponent.html":{},"components/FormSubmitBarComponent.html":{},"interfaces/ISpaEnvResponse.html":{},"components/PageFrameworkComponent.html":{}}}],["install",{"_index":5200,"title":{},"body":{"changelog.html":{},"index.html":{},"additional-documentation/local-development/schematics.html":{},"additional-documentation/local-development/components.html":{}}}],["installation",{"_index":5431,"title":{},"body":{"index.html":{}}}],["installed",{"_index":5492,"title":{},"body":{"additional-documentation/getting-started.html":{},"additional-documentation/local-development/schematics.html":{}}}],["installpackagejsondependencies",{"_index":5370,"title":{},"body":{"coverage.html":{}}}],["instanceof",{"_index":1661,"title":{},"body":{"interfaces/CommonLogMessage.html":{},"interfaces/FileUploaderMsg.html":{},"components/HeaderComponent.html":{},"interfaces/ISpaEnvResponse.html":{},"components/WizardProgressBarComponent.html":{}}}],["instances",{"_index":5479,"title":{},"body":{"todo.html":{}}}],["instead",{"_index":599,"title":{},"body":{"classes/AbstractTestPage.html":{},"classes/Address.html":{},"interfaces/FileUploaderMsg.html":{},"components/GeocoderInputComponent.html":{},"changelog.html":{},"additional-documentation/local-development/schematics.html":{}}}],["instruct",{"_index":2907,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["instruction",{"_index":5034,"title":{},"body":{"changelog.html":{}}}],["instructions",{"_index":5184,"title":{},"body":{"changelog.html":{}}}],["instructiontext",{"_index":2812,"title":{},"body":{"interfaces/FileUploaderMsg.html":{},"interfaces/IRadioItems.html":{},"components/RadioComponent.html":{}}}],["insurance",{"_index":3688,"title":{},"body":{"interfaces/ISpaEnvResponse.html":{},"components/SinComponent.html":{}}}],["integration",{"_index":5515,"title":{},"body":{"additional-documentation/getting-started.html":{},"additional-documentation/local-development/schematics.html":{}}}],["intentional",{"_index":4577,"title":{},"body":{"components/XiconButtonComponent.html":{}}}],["interface",{"_index":777,"title":{"interfaces/AddrLabelList.html":{},"interfaces/CommonAttachmentJson.html":{},"interfaces/CommonImageScaleFactors.html":{},"interfaces/CommonLogMessage.html":{},"interfaces/CountryList.html":{},"interfaces/DateErrorMsg.html":{},"interfaces/ErrorMessage.html":{},"interfaces/FileUploaderMsg.html":{},"interfaces/FullNameErrorMsg.html":{},"interfaces/GeoAddressResult.html":{},"interfaces/IRadioItems.html":{},"interfaces/ISpaEnvResponse.html":{},"interfaces/Maxlengths.html":{},"interfaces/PageList.html":{},"interfaces/PageListInterface.html":{},"interfaces/PasswordErrorMsg.html":{},"interfaces/ProvinceList.html":{},"interfaces/ReadOnlyFields.html":{},"interfaces/SampleImageInterface.html":{},"interfaces/SimpleDate.html":{},"interfaces/WizardProgressItem.html":{}},"body":{"interfaces/AddrLabelList.html":{},"injectables/CheckCompleteBaseService.html":{},"interfaces/CommonAttachmentJson.html":{},"classes/CommonImage.html":{},"classes/CommonImageProcessingError.html":{},"interfaces/CommonImageScaleFactors.html":{},"classes/CommonImageScaleFactorsImpl.html":{},"interfaces/CommonLogMessage.html":{},"classes/Container.html":{},"interfaces/CountryList.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"interfaces/ErrorMessage.html":{},"interfaces/FileUploaderMsg.html":{},"components/FullNameComponent.html":{},"interfaces/FullNameErrorMsg.html":{},"interfaces/GeoAddressResult.html":{},"injectables/GeocoderService.html":{},"interfaces/IRadioItems.html":{},"interfaces/ISpaEnvResponse.html":{},"interfaces/Maxlengths.html":{},"interfaces/PageList.html":{},"interfaces/PageListInterface.html":{},"injectables/PageStateService.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{},"components/RadioComponent.html":{},"interfaces/ReadOnlyFields.html":{},"interfaces/SampleImageInterface.html":{},"components/SampleModalComponent.html":{},"interfaces/SimpleDate.html":{},"components/SinComponent.html":{},"interfaces/WizardProgressItem.html":{},"changelog.html":{},"coverage.html":{}}}],["interfaces",{"_index":779,"title":{},"body":{"interfaces/AddrLabelList.html":{},"interfaces/CommonAttachmentJson.html":{},"interfaces/CommonImageScaleFactors.html":{},"interfaces/CommonLogMessage.html":{},"interfaces/CountryList.html":{},"interfaces/DateErrorMsg.html":{},"interfaces/ErrorMessage.html":{},"interfaces/FileUploaderMsg.html":{},"interfaces/FullNameErrorMsg.html":{},"interfaces/GeoAddressResult.html":{},"interfaces/IRadioItems.html":{},"interfaces/ISpaEnvResponse.html":{},"interfaces/Maxlengths.html":{},"interfaces/PageList.html":{},"interfaces/PageListInterface.html":{},"interfaces/PasswordErrorMsg.html":{},"interfaces/ProvinceList.html":{},"interfaces/ReadOnlyFields.html":{},"interfaces/SampleImageInterface.html":{},"interfaces/SimpleDate.html":{},"interfaces/WizardProgressItem.html":{},"changelog.html":{},"overview.html":{},"additional-documentation/getting-started.html":{}}}],["internal",{"_index":1635,"title":{},"body":{"interfaces/CommonLogMessage.html":{},"changelog.html":{}}}],["internally",{"_index":177,"title":{},"body":{"classes/AbstractFormControl.html":{}}}],["internet",{"_index":287,"title":{},"body":{"classes/AbstractHttpService.html":{},"injectables/GeocoderService.html":{}}}],["introduced",{"_index":4875,"title":{},"body":{"changelog.html":{}}}],["invalid",{"_index":236,"title":{},"body":{"classes/AbstractFormControl.html":{},"interfaces/CommonAttachmentJson.html":{},"classes/CommonImage.html":{},"classes/CommonImageProcessingError.html":{},"interfaces/CommonImageScaleFactors.html":{},"classes/CommonImageScaleFactorsImpl.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"interfaces/FileUploaderMsg.html":{},"components/NameComponent.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"components/PostalCodeComponent.html":{},"components/SinComponent.html":{},"changelog.html":{}}}],["invalidbcpostal",{"_index":4152,"title":{},"body":{"components/PostalCodeComponent.html":{},"directives/ValidateBcPostalDirective.html":{},"directives/ValidatePostalcodeDirective.html":{}}}],["invalidchar",{"_index":1383,"title":{},"body":{"components/CityComponent.html":{},"interfaces/CountryList.html":{},"components/NameComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{},"directives/ValidateCityDirective.html":{},"directives/ValidateNameDirective.html":{},"directives/ValidatePostalcodeDirective.html":{},"directives/ValidateRegionDirective.html":{},"directives/ValidateStreetDirective.html":{}}}],["invalidemail",{"_index":2704,"title":{},"body":{"components/EmailComponent.html":{}}}],["invalidimagehanlder",{"_index":3181,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["invalidimagehanlder(imagereaderror",{"_index":3201,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["invalidvalue",{"_index":2427,"title":{},"body":{"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{}}}],["invisible",{"_index":2468,"title":{},"body":{"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{}}}],["invocation",{"_index":932,"title":{},"body":{"interfaces/AddrLabelList.html":{},"interfaces/Maxlengths.html":{},"interfaces/ReadOnlyFields.html":{}}}],["iot",{"_index":1928,"title":{},"body":{"interfaces/CountryList.html":{}}}],["ipsam",{"_index":1408,"title":{},"body":{"components/CityComponent.html":{},"interfaces/CountryList.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"interfaces/FileUploaderMsg.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{}}}],["ipsum",{"_index":1399,"title":{},"body":{"components/CityComponent.html":{},"interfaces/CountryList.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"interfaces/FileUploaderMsg.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{}}}],["iradioitems",{"_index":3598,"title":{"interfaces/IRadioItems.html":{}},"body":{"interfaces/IRadioItems.html":{},"components/RadioComponent.html":{},"coverage.html":{}}}],["iran",{"_index":2088,"title":{},"body":{"interfaces/CountryList.html":{}}}],["iraq",{"_index":2091,"title":{},"body":{"interfaces/CountryList.html":{}}}],["ireland",{"_index":2093,"title":{},"body":{"interfaces/CountryList.html":{}}}],["irl",{"_index":2092,"title":{},"body":{"interfaces/CountryList.html":{}}}],["irn",{"_index":2087,"title":{},"body":{"interfaces/CountryList.html":{}}}],["irq",{"_index":2090,"title":{},"body":{"interfaces/CountryList.html":{}}}],["irrelevant",{"_index":3401,"title":{},"body":{"interfaces/GeoAddressResult.html":{},"injectables/GeocoderService.html":{}}}],["is_showing_person",{"_index":1847,"title":{},"body":{"components/CoreBreadcrumbComponent.html":{}}}],["isbconly",{"_index":1003,"title":{},"body":{"classes/Address.html":{}}}],["isbcphn",{"_index":5077,"title":{},"body":{"changelog.html":{}}}],["iscanada",{"_index":903,"title":{},"body":{"interfaces/AddrLabelList.html":{},"interfaces/Maxlengths.html":{},"interfaces/ReadOnlyFields.html":{}}}],["isclear",{"_index":3899,"title":{},"body":{"interfaces/PageList.html":{},"injectables/PageStateService.html":{}}}],["iscomplete",{"_index":1001,"title":{},"body":{"classes/Address.html":{},"injectables/CheckCompleteBaseService.html":{},"interfaces/PageList.html":{},"interfaces/PageListInterface.html":{},"injectables/PageStateService.html":{}}}],["iscontinuedisabled",{"_index":3777,"title":{},"body":{"interfaces/ISpaEnvResponse.html":{}}}],["isdate",{"_index":2575,"title":{},"body":{"components/DatepickerComponent.html":{}}}],["isdate(x",{"_index":2495,"title":{},"body":{"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{}}}],["isdisabled",{"_index":161,"title":{},"body":{"classes/AbstractFormControl.html":{},"interfaces/AddrLabelList.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"interfaces/CountryList.html":{},"components/EmailComponent.html":{},"interfaces/Maxlengths.html":{},"components/NameComponent.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"components/RadioComponent.html":{},"interfaces/ReadOnlyFields.html":{},"components/SinComponent.html":{}}}],["isl",{"_index":2081,"title":{},"body":{"interfaces/CountryList.html":{}}}],["islamic",{"_index":2089,"title":{},"body":{"interfaces/CountryList.html":{}}}],["island",{"_index":1925,"title":{},"body":{"interfaces/CountryList.html":{},"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{}}}],["islands",{"_index":1861,"title":{},"body":{"interfaces/CountryList.html":{}}}],["isle",{"_index":2095,"title":{},"body":{"interfaces/CountryList.html":{}}}],["isloading",{"_index":1737,"title":{},"body":{"classes/Container.html":{},"injectables/ContainerService.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"interfaces/WizardProgressItem.html":{}}}],["isloadingsubject",{"_index":1797,"title":{},"body":{"injectables/ContainerService.html":{}}}],["isn't",{"_index":2828,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["isopen",{"_index":666,"title":{},"body":{"components/AccordionCommonComponent.html":{}}}],["ispaenvresponse",{"_index":3621,"title":{"interfaces/ISpaEnvResponse.html":{}},"body":{"interfaces/ISpaEnvResponse.html":{},"coverage.html":{}}}],["ispagecomplete",{"_index":391,"title":{},"body":{"injectables/AbstractPgCheckService.html":{},"injectables/CheckCompleteBaseService.html":{},"interfaces/PageListInterface.html":{},"changelog.html":{}}}],["ispagecomplete(url",{"_index":395,"title":{},"body":{"injectables/AbstractPgCheckService.html":{},"injectables/CheckCompleteBaseService.html":{}}}],["ispagelistempty",{"_index":1231,"title":{},"body":{"injectables/CheckCompleteBaseService.html":{},"interfaces/PageListInterface.html":{}}}],["ispdf",{"_index":3072,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["isprerequisitecomplete",{"_index":392,"title":{},"body":{"injectables/AbstractPgCheckService.html":{},"injectables/CheckCompleteBaseService.html":{},"interfaces/PageListInterface.html":{}}}],["isr",{"_index":2097,"title":{},"body":{"interfaces/CountryList.html":{}}}],["israel",{"_index":2098,"title":{},"body":{"interfaces/CountryList.html":{}}}],["isrequired",{"_index":823,"title":{},"body":{"interfaces/AddrLabelList.html":{},"interfaces/Maxlengths.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"interfaces/ReadOnlyFields.html":{}}}],["issue",{"_index":3068,"title":{},"body":{"interfaces/FileUploaderMsg.html":{},"changelog.html":{},"index.html":{},"additional-documentation/local-development/schematics.html":{}}}],["issues",{"_index":1213,"title":{},"body":{"modules/CaptchaModule.html":{},"interfaces/FileUploaderMsg.html":{},"components/FullNameComponent.html":{},"interfaces/FullNameErrorMsg.html":{},"changelog.html":{}}}],["iste",{"_index":1419,"title":{},"body":{"components/CityComponent.html":{},"interfaces/CountryList.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"interfaces/FileUploaderMsg.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{}}}],["istypeaheadloading",{"_index":3427,"title":{},"body":{"components/GeocoderInputComponent.html":{}}}],["isundermaintenance",{"_index":3698,"title":{},"body":{"interfaces/ISpaEnvResponse.html":{}}}],["isvalid",{"_index":998,"title":{},"body":{"classes/Address.html":{},"todo.html":{}}}],["it'll",{"_index":2525,"title":{},"body":{"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{}}}],["it's",{"_index":234,"title":{},"body":{"classes/AbstractFormControl.html":{},"classes/AbstractTestPage.html":{},"interfaces/AddrLabelList.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"interfaces/FileUploaderMsg.html":{},"interfaces/ISpaEnvResponse.html":{},"interfaces/Maxlengths.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"interfaces/ReadOnlyFields.html":{},"additional-documentation/local-development/schematics.html":{}}}],["ita",{"_index":2099,"title":{},"body":{"interfaces/CountryList.html":{}}}],["italy",{"_index":2100,"title":{},"body":{"interfaces/CountryList.html":{}}}],["item",{"_index":955,"title":{},"body":{"interfaces/AddrLabelList.html":{},"injectables/CheckCompleteBaseService.html":{},"interfaces/Maxlengths.html":{},"interfaces/PageList.html":{},"interfaces/PageListInterface.html":{},"injectables/PageStateService.html":{},"interfaces/ReadOnlyFields.html":{}}}],["item.iscomplete",{"_index":1291,"title":{},"body":{"injectables/CheckCompleteBaseService.html":{},"interfaces/PageListInterface.html":{}}}],["items",{"_index":1241,"title":{},"body":{"injectables/CheckCompleteBaseService.html":{},"classes/Container.html":{},"components/DropdownComponent.html":{},"interfaces/GeoAddressResult.html":{},"injectables/GeocoderService.html":{},"interfaces/PageListInterface.html":{},"interfaces/WizardProgressItem.html":{},"changelog.html":{}}}],["iterate",{"_index":3500,"title":{},"body":{"components/GeocoderInputComponent.html":{}}}],["itm.path",{"_index":3886,"title":{},"body":{"interfaces/PageList.html":{},"injectables/PageStateService.html":{}}}],["itm.redirectto",{"_index":3882,"title":{},"body":{"interfaces/PageList.html":{},"injectables/PageStateService.html":{}}}],["itself",{"_index":4839,"title":{},"body":{"changelog.html":{}}}],["jam",{"_index":2101,"title":{},"body":{"interfaces/CountryList.html":{}}}],["jamaica",{"_index":2102,"title":{},"body":{"interfaces/CountryList.html":{}}}],["jan",{"_index":2326,"title":{},"body":{"interfaces/CountryList.html":{}}}],["japan",{"_index":2104,"title":{},"body":{"interfaces/CountryList.html":{}}}],["javascript",{"_index":1029,"title":{},"body":{"classes/Address.html":{},"interfaces/CommonLogMessage.html":{}}}],["jersey",{"_index":2106,"title":{},"body":{"interfaces/CountryList.html":{}}}],["jey",{"_index":2105,"title":{},"body":{"interfaces/CountryList.html":{}}}],["jor",{"_index":2107,"title":{},"body":{"interfaces/CountryList.html":{}}}],["jordan",{"_index":2108,"title":{},"body":{"interfaces/CountryList.html":{}}}],["jpeg",{"_index":2919,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["jpg",{"_index":2871,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["jpn",{"_index":2103,"title":{},"body":{"interfaces/CountryList.html":{}}}],["js",{"_index":5403,"title":{},"body":{"dependencies.html":{},"additional-documentation/local-development/schematics.html":{}}}],["js/files/version.generated.ts",{"_index":5380,"title":{},"body":{"coverage.html":{}}}],["js/index.ts",{"_index":5384,"title":{},"body":{"coverage.html":{}}}],["jsdate",{"_index":2521,"title":{},"body":{"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{}}}],["jsdocs",{"_index":5230,"title":{},"body":{"changelog.html":{}}}],["json",{"_index":1531,"title":{},"body":{"interfaces/CommonAttachmentJson.html":{},"classes/CommonImage.html":{},"classes/CommonImageProcessingError.html":{},"interfaces/CommonImageScaleFactors.html":{},"classes/CommonImageScaleFactorsImpl.html":{},"interfaces/CommonLogMessage.html":{}}}],["json.stringify(error",{"_index":3052,"title":{},"body":{"interfaces/FileUploaderMsg.html":{},"interfaces/ISpaEnvResponse.html":{}}}],["kaz",{"_index":2109,"title":{},"body":{"interfaces/CountryList.html":{}}}],["kazakhstan",{"_index":2110,"title":{},"body":{"interfaces/CountryList.html":{}}}],["keeling",{"_index":1966,"title":{},"body":{"interfaces/CountryList.html":{}}}],["keep",{"_index":140,"title":{},"body":{"classes/AbstractFormControl.html":{},"classes/Base.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"components/ConfirmTemplateComponent.html":{},"components/DatepickerComponent.html":{},"components/DropdownComponent.html":{},"components/EmailComponent.html":{},"interfaces/FileUploaderMsg.html":{},"components/FullNameComponent.html":{},"components/GeocoderInputComponent.html":{},"interfaces/ISpaEnvResponse.html":{},"components/NameComponent.html":{},"components/PasswordComponent.html":{},"classes/Person.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"components/RadioComponent.html":{},"components/SampleModalComponent.html":{},"components/SinComponent.html":{},"components/ToggleComponent.html":{},"changelog.html":{}}}],["ken",{"_index":2111,"title":{},"body":{"interfaces/CountryList.html":{}}}],["kenya",{"_index":2112,"title":{},"body":{"interfaces/CountryList.html":{}}}],["key",{"_index":634,"title":{},"body":{"classes/AbstractTestPage.html":{},"injectables/CheckCompleteBaseService.html":{},"interfaces/CommonLogMessage.html":{},"directives/DuplicateCheckDirective.html":{},"interfaces/ErrorMessage.html":{},"interfaces/ISpaEnvResponse.html":{},"interfaces/PageList.html":{},"interfaces/PageListInterface.html":{},"injectables/PageStateService.html":{},"directives/ValidateBcPostalDirective.html":{},"directives/ValidateCityDirective.html":{},"directives/ValidateNameDirective.html":{},"directives/ValidatePostalcodeDirective.html":{},"directives/ValidateRegionDirective.html":{},"directives/ValidateStreetDirective.html":{}}}],["keyboard",{"_index":3516,"title":{},"body":{"components/GeocoderInputComponent.html":{}}}],["keyboardevent",{"_index":2557,"title":{},"body":{"directives/DateFieldFormatDirective.html":{},"interfaces/FileUploaderMsg.html":{},"components/GeocoderInputComponent.html":{}}}],["keys",{"_index":4593,"title":{},"body":{"changelog.html":{}}}],["keyup",{"_index":3019,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["kgz",{"_index":2121,"title":{},"body":{"interfaces/CountryList.html":{}}}],["khm",{"_index":1943,"title":{},"body":{"interfaces/CountryList.html":{}}}],["kib",{"_index":3110,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["kind",{"_index":5461,"title":{},"body":{"license.html":{}}}],["kingdom",{"_index":2375,"title":{},"body":{"interfaces/CountryList.html":{}}}],["kir",{"_index":2113,"title":{},"body":{"interfaces/CountryList.html":{}}}],["kiribati",{"_index":2114,"title":{},"body":{"interfaces/CountryList.html":{}}}],["kitts",{"_index":2264,"title":{},"body":{"interfaces/CountryList.html":{}}}],["kna",{"_index":2263,"title":{},"body":{"interfaces/CountryList.html":{}}}],["know",{"_index":1122,"title":{},"body":{"components/ButtonGroupComponent.html":{},"additional-documentation/getting-started.html":{}}}],["known",{"_index":1212,"title":{},"body":{"modules/CaptchaModule.html":{}}}],["kong",{"_index":2078,"title":{},"body":{"interfaces/CountryList.html":{}}}],["kor",{"_index":2118,"title":{},"body":{"interfaces/CountryList.html":{}}}],["korea",{"_index":2116,"title":{},"body":{"interfaces/CountryList.html":{}}}],["kuwait",{"_index":2120,"title":{},"body":{"interfaces/CountryList.html":{}}}],["kwt",{"_index":2119,"title":{},"body":{"interfaces/CountryList.html":{}}}],["kyrgyzstan",{"_index":2122,"title":{},"body":{"interfaces/CountryList.html":{}}}],["label",{"_index":132,"title":{},"body":{"classes/AbstractFormControl.html":{},"classes/AbstractTestPage.html":{},"components/ButtonComponent.html":{},"components/ButtonGroupComponent.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"classes/Container.html":{},"injectables/ContainerService.html":{},"interfaces/CountryList.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"components/DropdownComponent.html":{},"components/EmailComponent.html":{},"interfaces/ErrorMessage.html":{},"components/GeocoderInputComponent.html":{},"interfaces/IRadioItems.html":{},"components/NameComponent.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{},"components/RadioComponent.html":{},"components/SinComponent.html":{},"components/ToggleComponent.html":{},"interfaces/WizardProgressItem.html":{},"components/XiconButtonComponent.html":{},"changelog.html":{}}}],["label.getattribute('for",{"_index":622,"title":{},"body":{"classes/AbstractTestPage.html":{}}}],["labelforid",{"_index":590,"title":{},"body":{"classes/AbstractTestPage.html":{},"components/CityComponent.html":{},"interfaces/CountryList.html":{},"components/EmailComponent.html":{},"components/NameComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{},"components/SinComponent.html":{}}}],["labelid",{"_index":588,"title":{},"body":{"classes/AbstractTestPage.html":{}}}],["labelledby=\"mylargemodallabel\"]')).isdisplayed",{"_index":645,"title":{},"body":{"classes/AbstractTestPage.html":{}}}],["labelname",{"_index":534,"title":{},"body":{"classes/AbstractTestPage.html":{}}}],["labelname)).first",{"_index":620,"title":{},"body":{"classes/AbstractTestPage.html":{}}}],["labelreplacementtag",{"_index":1335,"title":{},"body":{"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"components/EmailComponent.html":{},"interfaces/ErrorMessage.html":{},"interfaces/IRadioItems.html":{},"components/NameComponent.html":{},"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{},"components/RadioComponent.html":{},"components/SinComponent.html":{},"coverage.html":{}}}],["labels",{"_index":181,"title":{},"body":{"classes/AbstractFormControl.html":{},"interfaces/AddrLabelList.html":{},"interfaces/Maxlengths.html":{},"interfaces/ReadOnlyFields.html":{},"changelog.html":{}}}],["labeltext",{"_index":2452,"title":{},"body":{"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{}}}],["labeltype",{"_index":228,"title":{},"body":{"classes/AbstractFormControl.html":{}}}],["labrador",{"_index":4199,"title":{},"body":{"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{}}}],["land",{"_index":1860,"title":{},"body":{"interfaces/CountryList.html":{}}}],["landing",{"_index":1273,"title":{},"body":{"injectables/CheckCompleteBaseService.html":{},"interfaces/PageListInterface.html":{}}}],["language",{"_index":5464,"title":{},"body":{"license.html":{}}}],["lanka",{"_index":2320,"title":{},"body":{"interfaces/CountryList.html":{}}}],["lao",{"_index":2123,"title":{},"body":{"interfaces/CountryList.html":{}}}],["largely",{"_index":2440,"title":{},"body":{"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{}}}],["last",{"_index":3308,"title":{},"body":{"components/FullNameComponent.html":{},"interfaces/FullNameErrorMsg.html":{},"classes/Person.html":{}}}],["lastname",{"_index":3314,"title":{},"body":{"components/FullNameComponent.html":{},"interfaces/FullNameErrorMsg.html":{},"classes/Person.html":{}}}],["lastnamelabel",{"_index":3320,"title":{},"body":{"components/FullNameComponent.html":{},"interfaces/FullNameErrorMsg.html":{}}}],["later",{"_index":2882,"title":{},"body":{"interfaces/FileUploaderMsg.html":{},"interfaces/ISpaEnvResponse.html":{}}}],["latvia",{"_index":2125,"title":{},"body":{"interfaces/CountryList.html":{}}}],["law",{"_index":5453,"title":{},"body":{"license.html":{}}}],["layout",{"_index":3296,"title":{},"body":{"components/FormSubmitBarComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{}}}],["lbn",{"_index":2126,"title":{},"body":{"interfaces/CountryList.html":{}}}],["lbr",{"_index":2130,"title":{},"body":{"interfaces/CountryList.html":{}}}],["lby",{"_index":2132,"title":{},"body":{"interfaces/CountryList.html":{}}}],["lca",{"_index":2266,"title":{},"body":{"interfaces/CountryList.html":{}}}],["leads",{"_index":553,"title":{},"body":{"classes/AbstractTestPage.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{}}}],["leave",{"_index":3701,"title":{},"body":{"interfaces/ISpaEnvResponse.html":{}}}],["lebanon",{"_index":2127,"title":{},"body":{"interfaces/CountryList.html":{}}}],["left",{"_index":1839,"title":{},"body":{"components/CoreBreadcrumbComponent.html":{}}}],["left/right",{"_index":5049,"title":{},"body":{"changelog.html":{}}}],["legend",{"_index":677,"title":{},"body":{"components/AccordionCommonComponent.html":{},"components/ButtonComponent.html":{},"components/ButtonGroupComponent.html":{},"modules/CaptchaModule.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"components/ConfirmTemplateComponent.html":{},"components/CoreBreadcrumbComponent.html":{},"components/DatepickerComponent.html":{},"components/DropdownComponent.html":{},"components/EmailComponent.html":{},"components/ErrorContainerComponent.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/FullNameComponent.html":{},"components/GeocoderInputComponent.html":{},"components/HeaderComponent.html":{},"components/NameComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"components/RadioComponent.html":{},"components/SampleModalComponent.html":{},"modules/SharedCoreModule.html":{},"components/SinComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{},"components/XiconButtonComponent.html":{},"overview.html":{}}}],["length",{"_index":2789,"title":{},"body":{"interfaces/FileUploaderMsg.html":{},"interfaces/ISpaEnvResponse.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"components/SinComponent.html":{},"changelog.html":{}}}],["lengths",{"_index":859,"title":{},"body":{"interfaces/AddrLabelList.html":{},"interfaces/Maxlengths.html":{},"interfaces/ReadOnlyFields.html":{}}}],["leone",{"_index":2295,"title":{},"body":{"interfaces/CountryList.html":{}}}],["lesotho",{"_index":2129,"title":{},"body":{"interfaces/CountryList.html":{}}}],["less",{"_index":1087,"title":{},"body":{"components/ButtonComponent.html":{}}}],["leste",{"_index":2348,"title":{},"body":{"interfaces/CountryList.html":{}}}],["letter",{"_index":3345,"title":{},"body":{"components/FullNameComponent.html":{},"interfaces/FullNameErrorMsg.html":{},"components/NameComponent.html":{},"components/PostalCodeComponent.html":{},"coverage.html":{}}}],["letters",{"_index":1385,"title":{},"body":{"components/CityComponent.html":{},"interfaces/CountryList.html":{},"components/FullNameComponent.html":{},"interfaces/FullNameErrorMsg.html":{},"components/NameComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{}}}],["letters.test",{"_index":3849,"title":{},"body":{"components/NameComponent.html":{}}}],["level",{"_index":1640,"title":{},"body":{"interfaces/CommonLogMessage.html":{},"components/CoreBreadcrumbComponent.html":{},"additional-documentation/getting-started.html":{},"additional-documentation/local-development/components.html":{}}}],["levelthen",{"_index":5534,"title":{},"body":{"additional-documentation/local-development/schematics.html":{}}}],["lib",{"_index":441,"title":{},"body":{"classes/AbstractTestPage.html":{},"interfaces/FileUploaderMsg.html":{},"changelog.html":{},"index.html":{},"todo.html":{},"additional-documentation/getting-started.html":{},"additional-documentation/local-development/schematics.html":{},"additional-documentation/local-development/components.html":{}}}],["lib'if",{"_index":5619,"title":{},"body":{"additional-documentation/local-development/components.html":{}}}],["lib/captcha",{"_index":1206,"title":{},"body":{"modules/CaptchaModule.html":{},"additional-documentation/getting-started.html":{}}}],["lib/e2e",{"_index":5145,"title":{},"body":{"changelog.html":{}}}],["lib/images",{"_index":5517,"title":{},"body":{"additional-documentation/getting-started.html":{}}}],["lib/images';this",{"_index":5519,"title":{},"body":{"additional-documentation/getting-started.html":{}}}],["lib/models",{"_index":5190,"title":{},"body":{"changelog.html":{},"additional-documentation/getting-started.html":{}}}],["lib/services",{"_index":5170,"title":{},"body":{"changelog.html":{},"additional-documentation/getting-started.html":{}}}],["lib/services';setting",{"_index":5507,"title":{},"body":{"additional-documentation/getting-started.html":{}}}],["lib/services/geocoder.service';if",{"_index":5504,"title":{},"body":{"additional-documentation/getting-started.html":{}}}],["liberia",{"_index":2131,"title":{},"body":{"interfaces/CountryList.html":{}}}],["libif",{"_index":5599,"title":{},"body":{"additional-documentation/local-development/components.html":{}}}],["library",{"_index":2445,"title":{},"body":{"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"interfaces/ErrorMessage.html":{},"interfaces/FileUploaderMsg.html":{},"interfaces/ISpaEnvResponse.html":{},"changelog.html":{},"index.html":{},"additional-documentation/getting-started.html":{},"additional-documentation/local-development/schematics.html":{},"additional-documentation/local-development/components.html":{}}}],["library/issues/221#issuecomment",{"_index":4017,"title":{},"body":{"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{}}}],["libray",{"_index":423,"title":{},"body":{"classes/AbstractReactForm.html":{}}}],["libsetup",{"_index":5432,"title":{},"body":{"index.html":{}}}],["libya",{"_index":2133,"title":{},"body":{"interfaces/CountryList.html":{}}}],["license",{"_index":5348,"title":{"license.html":{}},"body":{"coverage.html":{},"license.html":{}}}],["license/index.ts",{"_index":5346,"title":{},"body":{"coverage.html":{}}}],["licensed",{"_index":5446,"title":{},"body":{"license.html":{}}}],["lie",{"_index":2134,"title":{},"body":{"interfaces/CountryList.html":{}}}],["liechtenstein",{"_index":2135,"title":{},"body":{"interfaces/CountryList.html":{}}}],["likes",{"_index":5502,"title":{},"body":{"additional-documentation/getting-started.html":{}}}],["limitations",{"_index":5467,"title":{},"body":{"license.html":{}}}],["line",{"_index":839,"title":{},"body":{"interfaces/AddrLabelList.html":{},"interfaces/FileUploaderMsg.html":{},"interfaces/ISpaEnvResponse.html":{},"interfaces/Maxlengths.html":{},"interfaces/ReadOnlyFields.html":{},"components/XiconButtonComponent.html":{},"changelog.html":{},"additional-documentation/local-development/components.html":{}}}],["line:max",{"_index":3721,"title":{},"body":{"interfaces/ISpaEnvResponse.html":{}}}],["lines",{"_index":911,"title":{},"body":{"interfaces/AddrLabelList.html":{},"interfaces/Maxlengths.html":{},"interfaces/ReadOnlyFields.html":{},"changelog.html":{}}}],["link",{"_index":515,"title":{},"body":{"classes/AbstractTestPage.html":{},"changelog.html":{},"additional-documentation/local-development/schematics.html":{},"additional-documentation/local-development/components.html":{}}}],["linking",{"_index":5540,"title":{},"body":{"additional-documentation/local-development/schematics.html":{},"additional-documentation/local-development/components.html":{}}}],["linknote",{"_index":5609,"title":{},"body":{"additional-documentation/local-development/components.html":{}}}],["links",{"_index":550,"title":{},"body":{"classes/AbstractTestPage.html":{},"additional-documentation/local-development/components.html":{}}}],["list",{"_index":956,"title":{},"body":{"interfaces/AddrLabelList.html":{},"injectables/CheckCompleteBaseService.html":{},"interfaces/CountryList.html":{},"injectables/DefaultPageGuardService.html":{},"interfaces/FileUploaderMsg.html":{},"components/GeocoderInputComponent.html":{},"interfaces/Maxlengths.html":{},"interfaces/PageList.html":{},"interfaces/PageListInterface.html":{},"injectables/PageStateService.html":{},"interfaces/ReadOnlyFields.html":{},"changelog.html":{}}}],["listed",{"_index":5499,"title":{},"body":{"additional-documentation/getting-started.html":{}}}],["literal",{"_index":314,"title":{},"body":{"classes/AbstractHttpService.html":{},"directives/DuplicateCheckDirective.html":{},"directives/ValidateBcPostalDirective.html":{},"directives/ValidateCityDirective.html":{},"directives/ValidateNameDirective.html":{},"directives/ValidatePostalcodeDirective.html":{},"directives/ValidateRegionDirective.html":{},"directives/ValidateStreetDirective.html":{}}}],["literals",{"_index":1585,"title":{},"body":{"interfaces/CommonLogMessage.html":{}}}],["lithuania",{"_index":2137,"title":{},"body":{"interfaces/CountryList.html":{}}}],["live",{"_index":5591,"title":{},"body":{"additional-documentation/local-development/components.html":{}}}],["lka",{"_index":2318,"title":{},"body":{"interfaces/CountryList.html":{}}}],["load",{"_index":367,"title":{},"body":{"injectables/AbstractPageGuardService.html":{},"interfaces/FileUploaderMsg.html":{},"guards/LoadPageGuardService.html":{},"dependencies.html":{},"todo.html":{}}}],["loaded",{"_index":937,"title":{},"body":{"interfaces/AddrLabelList.html":{},"interfaces/Maxlengths.html":{},"interfaces/ReadOnlyFields.html":{}}}],["loadimage",{"_index":2772,"title":{},"body":{"interfaces/FileUploaderMsg.html":{},"coverage.html":{}}}],["loadimage_",{"_index":2776,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["loading",{"_index":12,"title":{},"body":{"classes/AbstractBaseForm.html":{},"classes/AbstractForm.html":{},"classes/AbstractReactForm.html":{},"interfaces/FileUploaderMsg.html":{},"components/GeocoderInputComponent.html":{}}}],["loadpageguardservice",{"_index":374,"title":{"guards/LoadPageGuardService.html":{}},"body":{"injectables/AbstractPageGuardService.html":{},"injectables/DefaultPageGuardService.html":{},"guards/LoadPageGuardService.html":{},"coverage.html":{}}}],["local",{"_index":2675,"title":{"additional-documentation/local-development.html":{}},"body":{"directives/DuplicateCheckDirective.html":{},"directives/ValidatePostalcodeDirective.html":{},"changelog.html":{},"additional-documentation/local-development.html":{},"additional-documentation/local-development/components.html":{}}}],["locality,street",{"_index":3395,"title":{},"body":{"interfaces/GeoAddressResult.html":{},"injectables/GeocoderService.html":{}}}],["locally",{"_index":3669,"title":{},"body":{"interfaces/ISpaEnvResponse.html":{},"additional-documentation/local-development/schematics.html":{}}}],["localstorage",{"_index":2948,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["location",{"_index":5192,"title":{},"body":{"changelog.html":{}}}],["lodaing",{"_index":5560,"title":{},"body":{"additional-documentation/local-development/schematics.html":{}}}],["log",{"_index":1604,"title":{},"body":{"interfaces/CommonLogMessage.html":{},"interfaces/FileUploaderMsg.html":{},"interfaces/ISpaEnvResponse.html":{},"changelog.html":{}}}],["logentry",{"_index":2764,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["logerror",{"_index":1607,"title":{},"body":{"interfaces/CommonLogMessage.html":{}}}],["logged",{"_index":1576,"title":{},"body":{"interfaces/CommonLogMessage.html":{}}}],["logger",{"_index":1588,"title":{},"body":{"interfaces/CommonLogMessage.html":{},"changelog.html":{}}}],["logging",{"_index":340,"title":{},"body":{"classes/AbstractHttpService.html":{},"interfaces/FileUploaderMsg.html":{},"changelog.html":{}}}],["logging/log",{"_index":2765,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["loghttperror(error",{"_index":1628,"title":{},"body":{"interfaces/CommonLogMessage.html":{}}}],["loghttprequeststoconsole",{"_index":247,"title":{},"body":{"classes/AbstractHttpService.html":{},"injectables/GeocoderService.html":{}}}],["logic",{"_index":196,"title":{},"body":{"classes/AbstractFormControl.html":{},"injectables/CheckCompleteBaseService.html":{},"guards/LoadPageGuardService.html":{},"interfaces/PageListInterface.html":{},"guards/RouteGuardService.html":{},"directives/ValidateBcPostalDirective.html":{},"changelog.html":{}}}],["logo",{"_index":5073,"title":{},"body":{"changelog.html":{}}}],["logosrc",{"_index":3565,"title":{},"body":{"components/HeaderComponent.html":{}}}],["logs",{"_index":1609,"title":{},"body":{"interfaces/CommonLogMessage.html":{},"changelog.html":{}}}],["logservice",{"_index":2818,"title":{},"body":{"interfaces/FileUploaderMsg.html":{},"interfaces/ISpaEnvResponse.html":{}}}],["logsource",{"_index":1594,"title":{},"body":{"interfaces/CommonLogMessage.html":{}}}],["long",{"_index":369,"title":{},"body":{"injectables/AbstractPageGuardService.html":{},"injectables/AbstractPgCheckService.html":{}}}],["longer",{"_index":4772,"title":{},"body":{"changelog.html":{}}}],["look",{"_index":5598,"title":{},"body":{"additional-documentation/local-development/components.html":{}}}],["looking",{"_index":3409,"title":{},"body":{"interfaces/GeoAddressResult.html":{},"injectables/GeocoderService.html":{}}}],["lookup",{"_index":585,"title":{},"body":{"classes/AbstractTestPage.html":{},"interfaces/AddrLabelList.html":{},"components/GeocoderInputComponent.html":{},"injectables/GeocoderService.html":{},"interfaces/Maxlengths.html":{},"interfaces/ReadOnlyFields.html":{}}}],["lookup(address",{"_index":3385,"title":{},"body":{"interfaces/GeoAddressResult.html":{},"injectables/GeocoderService.html":{}}}],["lorem",{"_index":1398,"title":{},"body":{"components/CityComponent.html":{},"interfaces/CountryList.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"interfaces/FileUploaderMsg.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{}}}],["losing",{"_index":1624,"title":{},"body":{"interfaces/CommonLogMessage.html":{}}}],["lost",{"_index":286,"title":{},"body":{"classes/AbstractHttpService.html":{},"injectables/GeocoderService.html":{}}}],["lower",{"_index":1761,"title":{},"body":{"classes/Container.html":{},"interfaces/WizardProgressItem.html":{}}}],["lso",{"_index":2128,"title":{},"body":{"interfaces/CountryList.html":{}}}],["ltu",{"_index":2136,"title":{},"body":{"interfaces/CountryList.html":{}}}],["lucia",{"_index":2267,"title":{},"body":{"interfaces/CountryList.html":{}}}],["lux",{"_index":2138,"title":{},"body":{"interfaces/CountryList.html":{}}}],["luxembourg",{"_index":2139,"title":{},"body":{"interfaces/CountryList.html":{}}}],["lva",{"_index":2124,"title":{},"body":{"interfaces/CountryList.html":{}}}],["maarten",{"_index":2299,"title":{},"body":{"interfaces/CountryList.html":{}}}],["mac",{"_index":2140,"title":{},"body":{"interfaces/CountryList.html":{}}}],["macao",{"_index":2141,"title":{},"body":{"interfaces/CountryList.html":{}}}],["macbooks",{"_index":5475,"title":{},"body":{"todo.html":{}}}],["macedonia",{"_index":2143,"title":{},"body":{"interfaces/CountryList.html":{}}}],["machine",{"_index":5552,"title":{},"body":{"additional-documentation/local-development/schematics.html":{}}}],["madagascar",{"_index":2147,"title":{},"body":{"interfaces/CountryList.html":{}}}],["made",{"_index":5173,"title":{},"body":{"changelog.html":{},"additional-documentation/local-development/components.html":{}}}],["maf",{"_index":2268,"title":{},"body":{"interfaces/CountryList.html":{}}}],["magnam",{"_index":1407,"title":{},"body":{"components/CityComponent.html":{},"interfaces/CountryList.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"interfaces/FileUploaderMsg.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{}}}],["main",{"_index":1083,"title":{},"body":{"components/ButtonComponent.html":{},"interfaces/CommonLogMessage.html":{},"components/HeaderComponent.html":{},"changelog.html":{},"additional-documentation/local-development/components.html":{}}}],["maintenance",{"_index":3628,"title":{},"body":{"interfaces/ISpaEnvResponse.html":{},"changelog.html":{}}}],["maintenanceflag",{"_index":3705,"title":{},"body":{"interfaces/ISpaEnvResponse.html":{}}}],["maintenancemessage",{"_index":3716,"title":{},"body":{"interfaces/ISpaEnvResponse.html":{}}}],["majorly",{"_index":5105,"title":{},"body":{"changelog.html":{}}}],["make",{"_index":274,"title":{},"body":{"classes/AbstractHttpService.html":{},"classes/AbstractTestPage.html":{},"interfaces/AddrLabelList.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"interfaces/FileUploaderMsg.html":{},"components/FormSubmitBarComponent.html":{},"injectables/GeocoderService.html":{},"interfaces/IRadioItems.html":{},"interfaces/ISpaEnvResponse.html":{},"guards/LoadPageGuardService.html":{},"interfaces/Maxlengths.html":{},"components/RadioComponent.html":{},"interfaces/ReadOnlyFields.html":{},"guards/RouteGuardService.html":{},"changelog.html":{},"todo.html":{},"additional-documentation/getting-started.html":{},"additional-documentation/local-development/schematics.html":{},"additional-documentation/local-development/components.html":{}}}],["makes",{"_index":220,"title":{},"body":{"classes/AbstractFormControl.html":{},"classes/AbstractHttpService.html":{},"injectables/GeocoderService.html":{},"interfaces/ISpaEnvResponse.html":{}}}],["making",{"_index":1089,"title":{},"body":{"components/ButtonComponent.html":{},"additional-documentation/local-development/schematics.html":{}}}],["malawi",{"_index":2149,"title":{},"body":{"interfaces/CountryList.html":{}}}],["malaysia",{"_index":2151,"title":{},"body":{"interfaces/CountryList.html":{}}}],["maldives",{"_index":2153,"title":{},"body":{"interfaces/CountryList.html":{}}}],["malformed",{"_index":3161,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["mali",{"_index":2155,"title":{},"body":{"interfaces/CountryList.html":{}}}],["malta",{"_index":2157,"title":{},"body":{"interfaces/CountryList.html":{}}}],["malvinas",{"_index":2018,"title":{},"body":{"interfaces/CountryList.html":{}}}],["man",{"_index":2096,"title":{},"body":{"interfaces/CountryList.html":{}}}],["manage",{"_index":2928,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["manitoba",{"_index":4194,"title":{},"body":{"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{}}}],["manually",{"_index":2529,"title":{},"body":{"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"components/HeaderComponent.html":{},"interfaces/ISpaEnvResponse.html":{},"components/WizardProgressBarComponent.html":{},"additional-documentation/local-development/schematics.html":{}}}],["many",{"_index":3610,"title":{},"body":{"interfaces/IRadioItems.html":{},"components/RadioComponent.html":{}}}],["map",{"_index":2752,"title":{},"body":{"interfaces/FileUploaderMsg.html":{},"interfaces/GeoAddressResult.html":{},"injectables/GeocoderService.html":{},"interfaces/ISpaEnvResponse.html":{},"interfaces/PageList.html":{},"injectables/PageStateService.html":{},"components/WizardProgressBarComponent.html":{}}}],["map((ev",{"_index":4527,"title":{},"body":{"components/WizardProgressBarComponent.html":{}}}],["map((event",{"_index":3025,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["map((itm",{"_index":3883,"title":{},"body":{"interfaces/PageList.html":{},"injectables/PageStateService.html":{}}}],["map(prov",{"_index":939,"title":{},"body":{"interfaces/AddrLabelList.html":{},"interfaces/Maxlengths.html":{},"interfaces/ReadOnlyFields.html":{}}}],["map(x",{"_index":1776,"title":{},"body":{"classes/Container.html":{},"interfaces/WizardProgressItem.html":{}}}],["map.js",{"_index":5536,"title":{},"body":{"additional-documentation/local-development/schematics.html":{}}}],["maps",{"_index":2456,"title":{},"body":{"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{}}}],["mar",{"_index":2184,"title":{},"body":{"interfaces/CountryList.html":{}}}],["margins",{"_index":3298,"title":{},"body":{"components/FormSubmitBarComponent.html":{}}}],["mariana",{"_index":2214,"title":{},"body":{"interfaces/CountryList.html":{}}}],["marino",{"_index":2279,"title":{},"body":{"interfaces/CountryList.html":{}}}],["mark",{"_index":415,"title":{},"body":{"classes/AbstractReactForm.html":{}}}],["markallinputstouched",{"_index":88,"title":{},"body":{"classes/AbstractForm.html":{},"classes/AbstractReactForm.html":{}}}],["markallinputstouched(fg",{"_index":409,"title":{},"body":{"classes/AbstractReactForm.html":{}}}],["markastouched",{"_index":101,"title":{},"body":{"classes/AbstractForm.html":{},"classes/AbstractReactForm.html":{}}}],["markdown",{"_index":4869,"title":{},"body":{"changelog.html":{}}}],["markdownlint",{"_index":4881,"title":{},"body":{"changelog.html":{}}}],["marked",{"_index":4691,"title":{},"body":{"changelog.html":{}}}],["markup",{"_index":1088,"title":{},"body":{"components/ButtonComponent.html":{}}}],["marshall",{"_index":2159,"title":{},"body":{"interfaces/CountryList.html":{}}}],["martin",{"_index":2269,"title":{},"body":{"interfaces/CountryList.html":{}}}],["martinique",{"_index":2161,"title":{},"body":{"interfaces/CountryList.html":{}}}],["mask",{"_index":889,"title":{},"body":{"interfaces/AddrLabelList.html":{},"interfaces/Maxlengths.html":{},"components/PostalCodeComponent.html":{},"interfaces/ReadOnlyFields.html":{},"modules/SharedCoreModule.html":{},"components/SinComponent.html":{},"changelog.html":{},"dependencies.html":{}}}],["match",{"_index":1518,"title":{},"body":{"interfaces/CommonAttachmentJson.html":{},"classes/CommonImage.html":{},"classes/CommonImageProcessingError.html":{},"interfaces/CommonImageScaleFactors.html":{},"classes/CommonImageScaleFactorsImpl.html":{},"changelog.html":{}}}],["matching",{"_index":84,"title":{},"body":{"classes/AbstractBaseForm.html":{},"classes/AbstractForm.html":{},"classes/AbstractFormControl.html":{},"classes/AbstractHttpService.html":{},"injectables/AbstractPageGuardService.html":{},"injectables/AbstractPgCheckService.html":{},"classes/AbstractReactForm.html":{},"classes/AbstractTestPage.html":{},"components/AccordionCommonComponent.html":{},"interfaces/AddrLabelList.html":{},"classes/Address.html":{},"classes/Base.html":{},"components/ButtonComponent.html":{},"components/ButtonGroupComponent.html":{},"injectables/CaptchaDataService.html":{},"modules/CaptchaModule.html":{},"injectables/CheckCompleteBaseService.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"interfaces/CommonAttachmentJson.html":{},"classes/CommonImage.html":{},"classes/CommonImageProcessingError.html":{},"interfaces/CommonImageScaleFactors.html":{},"classes/CommonImageScaleFactorsImpl.html":{},"interfaces/CommonLogMessage.html":{},"components/ConfirmTemplateComponent.html":{},"classes/Container.html":{},"injectables/ContainerService.html":{},"components/CoreBreadcrumbComponent.html":{},"interfaces/CountryList.html":{},"interfaces/DateErrorMsg.html":{},"directives/DateFieldFormatDirective.html":{},"components/DatepickerComponent.html":{},"injectables/DefaultPageGuardService.html":{},"components/DropdownComponent.html":{},"directives/DuplicateCheckDirective.html":{},"components/EmailComponent.html":{},"components/ErrorContainerComponent.html":{},"interfaces/ErrorMessage.html":{},"interfaces/FileUploaderMsg.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/FullNameComponent.html":{},"interfaces/FullNameErrorMsg.html":{},"interfaces/GeoAddressResult.html":{},"components/GeocoderInputComponent.html":{},"injectables/GeocoderService.html":{},"components/HeaderComponent.html":{},"interfaces/IRadioItems.html":{},"interfaces/ISpaEnvResponse.html":{},"guards/LoadPageGuardService.html":{},"interfaces/Maxlengths.html":{},"classes/MoHCommonLibraryError.html":{},"components/NameComponent.html":{},"components/PageFrameworkComponent.html":{},"interfaces/PageList.html":{},"interfaces/PageListInterface.html":{},"components/PageSectionComponent.html":{},"injectables/PageStateService.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"classes/Person.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{},"components/RadioComponent.html":{},"interfaces/ReadOnlyFields.html":{},"guards/RouteGuardService.html":{},"interfaces/SampleImageInterface.html":{},"components/SampleModalComponent.html":{},"injectables/ServerPayload.html":{},"modules/SharedCoreModule.html":{},"interfaces/SimpleDate.html":{},"components/SinComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"directives/ValidateBcPostalDirective.html":{},"directives/ValidateCityDirective.html":{},"directives/ValidateNameDirective.html":{},"directives/ValidatePostalcodeDirective.html":{},"directives/ValidateRegionDirective.html":{},"directives/ValidateStreetDirective.html":{},"components/WizardProgressBarComponent.html":{},"interfaces/WizardProgressItem.html":{},"components/XiconButtonComponent.html":{},"changelog.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"todo.html":{},"additional-documentation/getting-started.html":{},"additional-documentation/local-development.html":{},"additional-documentation/local-development/schematics.html":{},"additional-documentation/local-development/components.html":{}}}],["matchprecisionnot",{"_index":3402,"title":{},"body":{"interfaces/GeoAddressResult.html":{},"injectables/GeocoderService.html":{}}}],["math.abs(target.nativeelement.offsetleft",{"_index":4560,"title":{},"body":{"components/WizardProgressBarComponent.html":{}}}],["math.ceil(math.random()*100",{"_index":3080,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["math.round(((numerator",{"_index":4548,"title":{},"body":{"components/WizardProgressBarComponent.html":{}}}],["mauritania",{"_index":2163,"title":{},"body":{"interfaces/CountryList.html":{}}}],["mauritius",{"_index":2165,"title":{},"body":{"interfaces/CountryList.html":{}}}],["max",{"_index":3135,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["max_year_range",{"_index":5293,"title":{},"body":{"coverage.html":{}}}],["maxheight",{"_index":3154,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["maximum",{"_index":2910,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["maxlen",{"_index":2412,"title":{},"body":{"interfaces/CountryList.html":{},"directives/DateFieldFormatDirective.html":{},"components/NameComponent.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"components/PostalCodeComponent.html":{},"changelog.html":{},"todo.html":{}}}],["maxlenasnumber",{"_index":3823,"title":{},"body":{"components/NameComponent.html":{}}}],["maxlength",{"_index":1362,"title":{},"body":{"components/CityComponent.html":{},"directives/DateFieldFormatDirective.html":{},"components/EmailComponent.html":{},"components/GeocoderInputComponent.html":{},"components/NameComponent.html":{},"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{},"components/SinComponent.html":{},"todo.html":{}}}],["maxlengths",{"_index":808,"title":{"interfaces/Maxlengths.html":{}},"body":{"interfaces/AddrLabelList.html":{},"interfaces/Maxlengths.html":{},"interfaces/ReadOnlyFields.html":{},"changelog.html":{},"coverage.html":{}}}],["maxretry",{"_index":3159,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["maxsizeallowed",{"_index":1494,"title":{},"body":{"interfaces/CommonAttachmentJson.html":{},"classes/CommonImage.html":{},"classes/CommonImageProcessingError.html":{},"interfaces/CommonImageScaleFactors.html":{},"classes/CommonImageScaleFactorsImpl.html":{}}}],["maxsizebytes",{"_index":3136,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["maxwidth",{"_index":3151,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["maybe",{"_index":4454,"title":{},"body":{"directives/ValidateBcPostalDirective.html":{}}}],["mayen",{"_index":2327,"title":{},"body":{"interfaces/CountryList.html":{}}}],["mayotte",{"_index":2167,"title":{},"body":{"interfaces/CountryList.html":{}}}],["mb",{"_index":3000,"title":{},"body":{"interfaces/FileUploaderMsg.html":{},"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{}}}],["mcdonald",{"_index":2070,"title":{},"body":{"interfaces/CountryList.html":{}}}],["mco",{"_index":2176,"title":{},"body":{"interfaces/CountryList.html":{}}}],["mda",{"_index":2174,"title":{},"body":{"interfaces/CountryList.html":{}}}],["mdash",{"_index":3529,"title":{},"body":{"components/GeocoderInputComponent.html":{}}}],["mdg",{"_index":2146,"title":{},"body":{"interfaces/CountryList.html":{}}}],["mdv",{"_index":2152,"title":{},"body":{"interfaces/CountryList.html":{}}}],["means",{"_index":488,"title":{},"body":{"classes/AbstractTestPage.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{}}}],["meant",{"_index":3287,"title":{},"body":{"components/FormSubmitBarComponent.html":{}}}],["medical",{"_index":1725,"title":{},"body":{"classes/Container.html":{},"interfaces/WizardProgressItem.html":{}}}],["meet",{"_index":4023,"title":{},"body":{"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{}}}],["member",{"_index":4386,"title":{},"body":{"components/SinComponent.html":{}}}],["menu",{"_index":5506,"title":{},"body":{"additional-documentation/getting-started.html":{}}}],["merge",{"_index":2751,"title":{},"body":{"interfaces/FileUploaderMsg.html":{},"changelog.html":{}}}],["merge(merge(browsefilestream).pipe",{"_index":2968,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["message",{"_index":1605,"title":{},"body":{"interfaces/CommonLogMessage.html":{},"interfaces/ErrorMessage.html":{},"interfaces/ISpaEnvResponse.html":{},"classes/MoHCommonLibraryError.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"changelog.html":{},"coverage.html":{}}}],["message.interface",{"_index":171,"title":{},"body":{"classes/AbstractFormControl.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"interfaces/CountryList.html":{},"components/EmailComponent.html":{},"interfaces/IRadioItems.html":{},"components/NameComponent.html":{},"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{},"components/RadioComponent.html":{},"components/SinComponent.html":{}}}],["message.interface.ts",{"_index":2729,"title":{},"body":{"interfaces/ErrorMessage.html":{},"coverage.html":{}}}],["message.interface.ts:13",{"_index":2730,"title":{},"body":{"interfaces/ErrorMessage.html":{}}}],["messages",{"_index":178,"title":{},"body":{"classes/AbstractFormControl.html":{},"interfaces/CommonAttachmentJson.html":{},"classes/CommonImage.html":{},"classes/CommonImageProcessingError.html":{},"interfaces/CommonImageScaleFactors.html":{},"classes/CommonImageScaleFactorsImpl.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"components/FullNameComponent.html":{},"interfaces/FullNameErrorMsg.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"components/SinComponent.html":{},"changelog.html":{}}}],["meta",{"_index":1610,"title":{},"body":{"interfaces/CommonLogMessage.html":{},"interfaces/FileUploaderMsg.html":{}}}],["metadata",{"_index":658,"title":{},"body":{"components/AccordionCommonComponent.html":{},"components/ButtonComponent.html":{},"components/ButtonGroupComponent.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"components/ConfirmTemplateComponent.html":{},"components/CoreBreadcrumbComponent.html":{},"directives/DateFieldFormatDirective.html":{},"components/DatepickerComponent.html":{},"components/DropdownComponent.html":{},"directives/DuplicateCheckDirective.html":{},"components/EmailComponent.html":{},"components/ErrorContainerComponent.html":{},"interfaces/FileUploaderMsg.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/FullNameComponent.html":{},"components/GeocoderInputComponent.html":{},"components/HeaderComponent.html":{},"components/NameComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"components/RadioComponent.html":{},"components/SampleModalComponent.html":{},"components/SinComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"directives/ValidateBcPostalDirective.html":{},"directives/ValidateCityDirective.html":{},"directives/ValidateNameDirective.html":{},"directives/ValidatePostalcodeDirective.html":{},"directives/ValidateRegionDirective.html":{},"directives/ValidateStreetDirective.html":{},"components/WizardProgressBarComponent.html":{},"components/XiconButtonComponent.html":{}}}],["method",{"_index":156,"title":{},"body":{"classes/AbstractFormControl.html":{},"classes/AbstractHttpService.html":{},"classes/Address.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"interfaces/CommonLogMessage.html":{},"components/EmailComponent.html":{},"interfaces/FileUploaderMsg.html":{},"interfaces/ISpaEnvResponse.html":{},"guards/LoadPageGuardService.html":{},"components/NameComponent.html":{},"components/ProvinceComponent.html":{},"components/RadioComponent.html":{},"components/SinComponent.html":{},"changelog.html":{}}}],["methods",{"_index":13,"title":{},"body":{"classes/AbstractBaseForm.html":{},"classes/AbstractForm.html":{},"classes/AbstractFormControl.html":{},"classes/AbstractHttpService.html":{},"injectables/AbstractPageGuardService.html":{},"injectables/AbstractPgCheckService.html":{},"classes/AbstractReactForm.html":{},"classes/AbstractTestPage.html":{},"components/AccordionCommonComponent.html":{},"classes/Address.html":{},"components/ButtonComponent.html":{},"components/ButtonGroupComponent.html":{},"injectables/CaptchaDataService.html":{},"modules/CaptchaModule.html":{},"injectables/CheckCompleteBaseService.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"classes/CommonImage.html":{},"interfaces/CommonImageScaleFactors.html":{},"classes/CommonImageScaleFactorsImpl.html":{},"classes/Container.html":{},"injectables/ContainerService.html":{},"components/CoreBreadcrumbComponent.html":{},"components/DatepickerComponent.html":{},"injectables/DefaultPageGuardService.html":{},"components/DropdownComponent.html":{},"directives/DuplicateCheckDirective.html":{},"components/EmailComponent.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/FullNameComponent.html":{},"components/GeocoderInputComponent.html":{},"injectables/GeocoderService.html":{},"components/HeaderComponent.html":{},"guards/LoadPageGuardService.html":{},"components/NameComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"injectables/PageStateService.html":{},"components/PasswordComponent.html":{},"classes/Person.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"components/RadioComponent.html":{},"guards/RouteGuardService.html":{},"components/SampleModalComponent.html":{},"components/SinComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"directives/ValidateBcPostalDirective.html":{},"directives/ValidateCityDirective.html":{},"directives/ValidateNameDirective.html":{},"directives/ValidatePostalcodeDirective.html":{},"directives/ValidateRegionDirective.html":{},"directives/ValidateStreetDirective.html":{},"components/WizardProgressBarComponent.html":{},"components/XiconButtonComponent.html":{},"changelog.html":{},"additional-documentation/getting-started.html":{}}}],["mex",{"_index":2168,"title":{},"body":{"interfaces/CountryList.html":{}}}],["mexico",{"_index":2169,"title":{},"body":{"interfaces/CountryList.html":{}}}],["mhl",{"_index":2158,"title":{},"body":{"interfaces/CountryList.html":{}}}],["mib",{"_index":3111,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["micronesia",{"_index":2171,"title":{},"body":{"interfaces/CountryList.html":{}}}],["middle",{"_index":3307,"title":{},"body":{"components/FullNameComponent.html":{},"interfaces/FullNameErrorMsg.html":{},"components/PageFrameworkComponent.html":{},"classes/Person.html":{}}}],["middlename",{"_index":3315,"title":{},"body":{"components/FullNameComponent.html":{},"interfaces/FullNameErrorMsg.html":{},"classes/Person.html":{}}}],["middlenamelabel",{"_index":3321,"title":{},"body":{"components/FullNameComponent.html":{},"interfaces/FullNameErrorMsg.html":{}}}],["mime",{"_index":1519,"title":{},"body":{"interfaces/CommonAttachmentJson.html":{},"classes/CommonImage.html":{},"classes/CommonImageProcessingError.html":{},"interfaces/CommonImageScaleFactors.html":{},"classes/CommonImageScaleFactorsImpl.html":{},"interfaces/FileUploaderMsg.html":{}}}],["mini",{"_index":2465,"title":{},"body":{"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"miscellaneous/enumerations.html":{}}}],["minimal",{"_index":2533,"title":{},"body":{"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{}}}],["minimum",{"_index":3949,"title":{},"body":{"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{}}}],["ministry",{"_index":3672,"title":{},"body":{"interfaces/ISpaEnvResponse.html":{}}}],["minlen",{"_index":3968,"title":{},"body":{"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{}}}],["minlength",{"_index":4021,"title":{},"body":{"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{}}}],["minlenmsgseg1",{"_index":3961,"title":{},"body":{"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{}}}],["minlenmsgseg2",{"_index":3962,"title":{},"body":{"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{}}}],["minor",{"_index":581,"title":{},"body":{"classes/AbstractTestPage.html":{},"interfaces/CountryList.html":{},"changelog.html":{}}}],["miquelon",{"_index":2272,"title":{},"body":{"interfaces/CountryList.html":{}}}],["mirror",{"_index":584,"title":{},"body":{"classes/AbstractTestPage.html":{}}}],["miscellaneous",{"_index":5410,"title":{"miscellaneous/enumerations.html":{}},"body":{"miscellaneous/enumerations.html":{}}}],["missing",{"_index":5163,"title":{},"body":{"changelog.html":{}}}],["mistakes",{"_index":5434,"title":{},"body":{"index.html":{}}}],["mkd",{"_index":2142,"title":{},"body":{"interfaces/CountryList.html":{}}}],["mli",{"_index":2154,"title":{},"body":{"interfaces/CountryList.html":{}}}],["mlt",{"_index":2156,"title":{},"body":{"interfaces/CountryList.html":{}}}],["mmr",{"_index":2188,"title":{},"body":{"interfaces/CountryList.html":{}}}],["mne",{"_index":2180,"title":{},"body":{"interfaces/CountryList.html":{}}}],["mng",{"_index":2178,"title":{},"body":{"interfaces/CountryList.html":{}}}],["mnp",{"_index":2212,"title":{},"body":{"interfaces/CountryList.html":{}}}],["mobile",{"_index":4509,"title":{},"body":{"components/WizardProgressBarComponent.html":{},"changelog.html":{}}}],["mockups",{"_index":4865,"title":{},"body":{"changelog.html":{}}}],["modal",{"_index":496,"title":{},"body":{"classes/AbstractTestPage.html":{},"interfaces/ISpaEnvResponse.html":{},"interfaces/SampleImageInterface.html":{},"components/SampleModalComponent.html":{},"changelog.html":{}}}],["modal')).element(by.css('div[aria",{"_index":644,"title":{},"body":{"classes/AbstractTestPage.html":{}}}],["modal'},{'name",{"_index":698,"title":{},"body":{"components/AccordionCommonComponent.html":{},"components/ButtonComponent.html":{},"components/ButtonGroupComponent.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"components/ConfirmTemplateComponent.html":{},"components/CoreBreadcrumbComponent.html":{},"components/DatepickerComponent.html":{},"components/DropdownComponent.html":{},"components/EmailComponent.html":{},"components/ErrorContainerComponent.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/FullNameComponent.html":{},"components/GeocoderInputComponent.html":{},"components/HeaderComponent.html":{},"components/NameComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"components/RadioComponent.html":{},"components/SampleModalComponent.html":{},"components/SinComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{},"components/XiconButtonComponent.html":{}}}],["modal.component",{"_index":4310,"title":{},"body":{"modules/SharedCoreModule.html":{}}}],["modal.component.html",{"_index":1481,"title":{},"body":{"interfaces/CommonAttachmentJson.html":{},"classes/CommonImage.html":{},"classes/CommonImageProcessingError.html":{},"interfaces/CommonImageScaleFactors.html":{},"classes/CommonImageScaleFactorsImpl.html":{},"interfaces/ISpaEnvResponse.html":{},"interfaces/SampleImageInterface.html":{},"components/SampleModalComponent.html":{}}}],["modal.component.scss",{"_index":3696,"title":{},"body":{"interfaces/ISpaEnvResponse.html":{},"interfaces/SampleImageInterface.html":{},"components/SampleModalComponent.html":{}}}],["modal.component.ts",{"_index":3624,"title":{},"body":{"interfaces/ISpaEnvResponse.html":{},"interfaces/SampleImageInterface.html":{},"components/SampleModalComponent.html":{},"coverage.html":{}}}],["modal.component.ts:18",{"_index":4259,"title":{},"body":{"components/SampleModalComponent.html":{}}}],["modal.component.ts:19",{"_index":4258,"title":{},"body":{"components/SampleModalComponent.html":{}}}],["modal.component.ts:21",{"_index":4257,"title":{},"body":{"components/SampleModalComponent.html":{}}}],["modal.component.ts:27",{"_index":4261,"title":{},"body":{"components/SampleModalComponent.html":{}}}],["modal.component.ts:31",{"_index":4260,"title":{},"body":{"components/SampleModalComponent.html":{}}}],["modal/consent",{"_index":3623,"title":{},"body":{"interfaces/ISpaEnvResponse.html":{},"modules/SharedCoreModule.html":{},"coverage.html":{}}}],["modal/sample",{"_index":4250,"title":{},"body":{"interfaces/SampleImageInterface.html":{},"components/SampleModalComponent.html":{},"modules/SharedCoreModule.html":{},"coverage.html":{}}}],["modaldirective",{"_index":2746,"title":{},"body":{"interfaces/FileUploaderMsg.html":{},"interfaces/ISpaEnvResponse.html":{},"interfaces/SampleImageInterface.html":{},"components/SampleModalComponent.html":{},"components/ThumbnailComponent.html":{}}}],["modalmodule",{"_index":4284,"title":{},"body":{"modules/SharedCoreModule.html":{}}}],["modalmodule.forroot",{"_index":4354,"title":{},"body":{"modules/SharedCoreModule.html":{}}}],["model",{"_index":2476,"title":{},"body":{"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"components/DropdownComponent.html":{},"additional-documentation/getting-started.html":{}}}],["model/application",{"_index":2770,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["model/application.model",{"_index":2768,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["models",{"_index":5097,"title":{},"body":{"changelog.html":{},"additional-documentation/getting-started.html":{}}}],["models/abstract",{"_index":1345,"title":{},"body":{"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"components/EmailComponent.html":{},"interfaces/IRadioItems.html":{},"components/NameComponent.html":{},"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{},"components/RadioComponent.html":{},"components/SinComponent.html":{}}}],["models/address.model",{"_index":798,"title":{},"body":{"interfaces/AddrLabelList.html":{},"components/GeocoderInputComponent.html":{},"interfaces/Maxlengths.html":{},"interfaces/ReadOnlyFields.html":{}}}],["models/base",{"_index":794,"title":{},"body":{"interfaces/AddrLabelList.html":{},"components/ConfirmTemplateComponent.html":{},"interfaces/CountryList.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"components/DropdownComponent.html":{},"interfaces/FileUploaderMsg.html":{},"components/FullNameComponent.html":{},"interfaces/FullNameErrorMsg.html":{},"components/GeocoderInputComponent.html":{},"interfaces/Maxlengths.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{},"interfaces/ReadOnlyFields.html":{},"interfaces/SampleImageInterface.html":{},"components/SampleModalComponent.html":{},"components/ToggleComponent.html":{}}}],["models/container",{"_index":4521,"title":{},"body":{"components/WizardProgressBarComponent.html":{}}}],["models/error",{"_index":1346,"title":{},"body":{"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"interfaces/CountryList.html":{},"components/EmailComponent.html":{},"interfaces/IRadioItems.html":{},"components/NameComponent.html":{},"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{},"components/RadioComponent.html":{},"components/SinComponent.html":{}}}],["models/images.model",{"_index":322,"title":{},"body":{"classes/AbstractHttpService.html":{},"interfaces/FileUploaderMsg.html":{},"components/ThumbnailComponent.html":{}}}],["models/mask.constants",{"_index":4158,"title":{},"body":{"components/PostalCodeComponent.html":{},"components/SinComponent.html":{}}}],["models/person.model",{"_index":3353,"title":{},"body":{"components/FullNameComponent.html":{},"interfaces/FullNameErrorMsg.html":{}}}],["modified",{"_index":4630,"title":{},"body":{"changelog.html":{}}}],["modify",{"_index":4834,"title":{},"body":{"changelog.html":{}}}],["modifyjson",{"_index":5350,"title":{},"body":{"coverage.html":{}}}],["module",{"_index":1191,"title":{"modules/CaptchaModule.html":{},"modules/SharedCoreModule.html":{}},"body":{"modules/CaptchaModule.html":{},"modules/SharedCoreModule.html":{},"changelog.html":{},"overview.html":{},"additional-documentation/getting-started.html":{}}}],["modules",{"_index":1193,"title":{"modules.html":{}},"body":{"modules/CaptchaModule.html":{},"modules/SharedCoreModule.html":{},"modules.html":{},"overview.html":{},"additional-documentation/local-development/schematics.html":{},"additional-documentation/local-development/components.html":{}}}],["modulewithproviders",{"_index":1205,"title":{},"body":{"modules/CaptchaModule.html":{}}}],["moh",{"_index":440,"title":{},"body":{"classes/AbstractTestPage.html":{},"modules/CaptchaModule.html":{},"changelog.html":{},"index.html":{},"todo.html":{},"additional-documentation/getting-started.html":{},"additional-documentation/local-development/schematics.html":{},"additional-documentation/local-development/components.html":{}}}],["mohcommmonlibraryerror",{"_index":4573,"title":{},"body":{"components/XiconButtonComponent.html":{}}}],["mohcommonlibraryerror",{"_index":173,"title":{"classes/MoHCommonLibraryError.html":{}},"body":{"classes/AbstractFormControl.html":{},"classes/MoHCommonLibraryError.html":{},"components/XiconButtonComponent.html":{},"coverage.html":{}}}],["mohcommonlibraryerror(msg",{"_index":4581,"title":{},"body":{"components/XiconButtonComponent.html":{}}}],["mohcommonlibraryerror(typemsg",{"_index":239,"title":{},"body":{"classes/AbstractFormControl.html":{}}}],["mohstart",{"_index":5371,"title":{},"body":{"coverage.html":{}}}],["moldova",{"_index":2175,"title":{},"body":{"interfaces/CountryList.html":{}}}],["molestiae",{"_index":1463,"title":{},"body":{"components/CityComponent.html":{},"interfaces/CountryList.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"interfaces/FileUploaderMsg.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{}}}],["molestias",{"_index":1422,"title":{},"body":{"components/CityComponent.html":{},"interfaces/CountryList.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"interfaces/FileUploaderMsg.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{}}}],["mollitia",{"_index":1420,"title":{},"body":{"components/CityComponent.html":{},"interfaces/CountryList.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"interfaces/FileUploaderMsg.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{}}}],["moment",{"_index":1075,"title":{},"body":{"classes/Base.html":{},"interfaces/CommonLogMessage.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"interfaces/FileUploaderMsg.html":{},"classes/Person.html":{},"coverage.html":{},"dependencies.html":{}}}],["moment().toisostring",{"_index":1680,"title":{},"body":{"interfaces/CommonLogMessage.html":{}}}],["moment_",{"_index":1578,"title":{},"body":{"interfaces/CommonLogMessage.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{}}}],["momentjs",{"_index":5581,"title":{},"body":{"additional-documentation/local-development/schematics.html":{}}}],["monaco",{"_index":2177,"title":{},"body":{"interfaces/CountryList.html":{}}}],["mongolia",{"_index":2179,"title":{},"body":{"interfaces/CountryList.html":{}}}],["montenegro",{"_index":2181,"title":{},"body":{"interfaces/CountryList.html":{}}}],["month",{"_index":2485,"title":{},"body":{"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"interfaces/SimpleDate.html":{},"changelog.html":{}}}],["montserrat",{"_index":2183,"title":{},"body":{"interfaces/CountryList.html":{}}}],["more",{"_index":370,"title":{},"body":{"injectables/AbstractPageGuardService.html":{},"injectables/AbstractPgCheckService.html":{},"classes/AbstractTestPage.html":{},"interfaces/FileUploaderMsg.html":{},"components/FormSubmitBarComponent.html":{},"interfaces/GeoAddressResult.html":{},"injectables/GeocoderService.html":{},"changelog.html":{},"index.html":{},"todo.html":{},"additional-documentation/local-development/components.html":{}}}],["morocco",{"_index":2185,"title":{},"body":{"interfaces/CountryList.html":{}}}],["mouse",{"_index":4968,"title":{},"body":{"changelog.html":{}}}],["move",{"_index":5189,"title":{},"body":{"changelog.html":{},"additional-documentation/local-development/schematics.html":{}}}],["moved",{"_index":4613,"title":{},"body":{"changelog.html":{}}}],["moz",{"_index":2186,"title":{},"body":{"interfaces/CountryList.html":{}}}],["mozambique",{"_index":2187,"title":{},"body":{"interfaces/CountryList.html":{}}}],["mrt",{"_index":2162,"title":{},"body":{"interfaces/CountryList.html":{}}}],["msg",{"_index":1645,"title":{},"body":{"interfaces/CommonLogMessage.html":{},"components/XiconButtonComponent.html":{}}}],["msp",{"_index":848,"title":{},"body":{"interfaces/AddrLabelList.html":{},"components/CheckboxComponent.html":{},"interfaces/FileUploaderMsg.html":{},"interfaces/ISpaEnvResponse.html":{},"interfaces/Maxlengths.html":{},"interfaces/ReadOnlyFields.html":{},"changelog.html":{}}}],["msp/api/env",{"_index":3706,"title":{},"body":{"interfaces/ISpaEnvResponse.html":{}}}],["mspdataservice",{"_index":2760,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["msperror",{"_index":3232,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["msperrornum",{"_index":3231,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["mspimage",{"_index":2978,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["mspimage.attachmentorder",{"_index":3081,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["mspimage.contenttype",{"_index":3087,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["mspimage.error",{"_index":3228,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["mspimage.filecontent",{"_index":3130,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["mspimage.id",{"_index":3132,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["mspimage.name",{"_index":3076,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["mspimage.naturalheight",{"_index":3084,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["mspimage.naturalwidth",{"_index":3082,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["mspimage.size",{"_index":3099,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["mspimage.sizetxt",{"_index":3126,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["mspimage.sizeunit",{"_index":3123,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["mspimage.uuid",{"_index":3247,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["mspimagefile",{"_index":3230,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["mspimages",{"_index":3035,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["msplogservice",{"_index":2758,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["msr",{"_index":2182,"title":{},"body":{"interfaces/CountryList.html":{}}}],["mtq",{"_index":2160,"title":{},"body":{"interfaces/CountryList.html":{}}}],["multi",{"_index":1126,"title":{},"body":{"components/ButtonGroupComponent.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"directives/DuplicateCheckDirective.html":{},"components/FullNameComponent.html":{},"interfaces/FullNameErrorMsg.html":{},"interfaces/ISpaEnvResponse.html":{},"directives/ValidateBcPostalDirective.html":{},"directives/ValidateCityDirective.html":{},"directives/ValidateNameDirective.html":{},"directives/ValidatePostalcodeDirective.html":{},"directives/ValidateRegionDirective.html":{},"directives/ValidateStreetDirective.html":{},"changelog.html":{}}}],["multiple",{"_index":1584,"title":{},"body":{"interfaces/CommonLogMessage.html":{},"interfaces/IRadioItems.html":{},"components/RadioComponent.html":{},"changelog.html":{},"additional-documentation/local-development/schematics.html":{}}}],["multiples",{"_index":3107,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["mus",{"_index":2164,"title":{},"body":{"interfaces/CountryList.html":{}}}],["mutually",{"_index":5418,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["mwi",{"_index":2148,"title":{},"body":{"interfaces/CountryList.html":{}}}],["myanmar",{"_index":2189,"title":{},"body":{"interfaces/CountryList.html":{}}}],["mydatepicker",{"_index":2436,"title":{},"body":{"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"modules/SharedCoreModule.html":{}}}],["myriadwebprottf_base64",{"_index":5354,"title":{},"body":{"coverage.html":{}}}],["mys",{"_index":2150,"title":{},"body":{"interfaces/CountryList.html":{}}}],["myt",{"_index":2166,"title":{},"body":{"interfaces/CountryList.html":{}}}],["n",{"_index":2867,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["nam",{"_index":2190,"title":{},"body":{"interfaces/CountryList.html":{}}}],["name",{"_index":26,"title":{},"body":{"classes/AbstractBaseForm.html":{},"classes/AbstractForm.html":{},"classes/AbstractFormControl.html":{},"classes/AbstractHttpService.html":{},"injectables/AbstractPageGuardService.html":{},"injectables/AbstractPgCheckService.html":{},"classes/AbstractReactForm.html":{},"classes/AbstractTestPage.html":{},"components/AccordionCommonComponent.html":{},"interfaces/AddrLabelList.html":{},"classes/Address.html":{},"components/ButtonComponent.html":{},"components/ButtonGroupComponent.html":{},"injectables/CaptchaDataService.html":{},"injectables/CheckCompleteBaseService.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"interfaces/CommonAttachmentJson.html":{},"classes/CommonImage.html":{},"classes/CommonImageProcessingError.html":{},"interfaces/CommonImageScaleFactors.html":{},"classes/CommonImageScaleFactorsImpl.html":{},"interfaces/CommonLogMessage.html":{},"components/ConfirmTemplateComponent.html":{},"classes/Container.html":{},"injectables/ContainerService.html":{},"components/CoreBreadcrumbComponent.html":{},"components/DatepickerComponent.html":{},"injectables/DefaultPageGuardService.html":{},"components/DropdownComponent.html":{},"directives/DuplicateCheckDirective.html":{},"components/EmailComponent.html":{},"components/ErrorContainerComponent.html":{},"interfaces/FileUploaderMsg.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/FullNameComponent.html":{},"interfaces/FullNameErrorMsg.html":{},"interfaces/GeoAddressResult.html":{},"components/GeocoderInputComponent.html":{},"injectables/GeocoderService.html":{},"components/HeaderComponent.html":{},"guards/LoadPageGuardService.html":{},"interfaces/Maxlengths.html":{},"classes/MoHCommonLibraryError.html":{},"components/NameComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"injectables/PageStateService.html":{},"components/PasswordComponent.html":{},"classes/Person.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"components/RadioComponent.html":{},"interfaces/ReadOnlyFields.html":{},"guards/RouteGuardService.html":{},"components/SampleModalComponent.html":{},"components/SinComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"directives/ValidateBcPostalDirective.html":{},"directives/ValidateCityDirective.html":{},"directives/ValidateNameDirective.html":{},"directives/ValidatePostalcodeDirective.html":{},"directives/ValidateRegionDirective.html":{},"directives/ValidateStreetDirective.html":{},"components/WizardProgressBarComponent.html":{},"components/XiconButtonComponent.html":{},"changelog.html":{},"additional-documentation/local-development/schematics.html":{},"additional-documentation/local-development/components.html":{}}}],["name'},{'name",{"_index":720,"title":{},"body":{"components/AccordionCommonComponent.html":{},"components/ButtonComponent.html":{},"components/ButtonGroupComponent.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"components/ConfirmTemplateComponent.html":{},"components/CoreBreadcrumbComponent.html":{},"components/DatepickerComponent.html":{},"components/DropdownComponent.html":{},"components/EmailComponent.html":{},"components/ErrorContainerComponent.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/FullNameComponent.html":{},"components/GeocoderInputComponent.html":{},"components/HeaderComponent.html":{},"components/NameComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"components/RadioComponent.html":{},"components/SampleModalComponent.html":{},"components/SinComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{},"components/XiconButtonComponent.html":{}}}],["name.component",{"_index":4324,"title":{},"body":{"modules/SharedCoreModule.html":{}}}],["name.component.html",{"_index":3311,"title":{},"body":{"components/FullNameComponent.html":{},"interfaces/FullNameErrorMsg.html":{},"components/NameComponent.html":{}}}],["name.component.scss",{"_index":3310,"title":{},"body":{"components/FullNameComponent.html":{},"interfaces/FullNameErrorMsg.html":{},"components/NameComponent.html":{}}}],["name.component.ts",{"_index":3306,"title":{},"body":{"components/FullNameComponent.html":{},"interfaces/FullNameErrorMsg.html":{},"coverage.html":{}}}],["name.component.ts:113",{"_index":3332,"title":{},"body":{"components/FullNameComponent.html":{}}}],["name.component.ts:117",{"_index":3333,"title":{},"body":{"components/FullNameComponent.html":{}}}],["name.component.ts:121",{"_index":3334,"title":{},"body":{"components/FullNameComponent.html":{}}}],["name.component.ts:36",{"_index":3328,"title":{},"body":{"components/FullNameComponent.html":{}}}],["name.component.ts:37",{"_index":3330,"title":{},"body":{"components/FullNameComponent.html":{}}}],["name.component.ts:38",{"_index":3329,"title":{},"body":{"components/FullNameComponent.html":{}}}],["name.component.ts:39",{"_index":3325,"title":{},"body":{"components/FullNameComponent.html":{}}}],["name.component.ts:40",{"_index":3327,"title":{},"body":{"components/FullNameComponent.html":{}}}],["name.component.ts:41",{"_index":3326,"title":{},"body":{"components/FullNameComponent.html":{}}}],["name.component.ts:42",{"_index":3324,"title":{},"body":{"components/FullNameComponent.html":{}}}],["name.component.ts:45",{"_index":3338,"title":{},"body":{"components/FullNameComponent.html":{}}}],["name.component.ts:46",{"_index":3340,"title":{},"body":{"components/FullNameComponent.html":{}}}],["name.component.ts:47",{"_index":3339,"title":{},"body":{"components/FullNameComponent.html":{}}}],["name.component.ts:49",{"_index":3343,"title":{},"body":{"components/FullNameComponent.html":{}}}],["name.component.ts:51",{"_index":3337,"title":{},"body":{"components/FullNameComponent.html":{}}}],["name.component.ts:53",{"_index":3352,"title":{},"body":{"components/FullNameComponent.html":{}}}],["name.component.ts:54",{"_index":3351,"title":{},"body":{"components/FullNameComponent.html":{}}}],["name.component.ts:56",{"_index":3335,"title":{},"body":{"components/FullNameComponent.html":{}}}],["name.component.ts:57",{"_index":3323,"title":{},"body":{"components/FullNameComponent.html":{}}}],["name.component.ts:63",{"_index":3331,"title":{},"body":{"components/FullNameComponent.html":{}}}],["name.directive",{"_index":4320,"title":{},"body":{"modules/SharedCoreModule.html":{}}}],["name.directive.ts",{"_index":4463,"title":{},"body":{"directives/ValidateNameDirective.html":{},"coverage.html":{}}}],["name.directive.ts:32",{"_index":4465,"title":{},"body":{"directives/ValidateNameDirective.html":{}}}],["name/full",{"_index":3305,"title":{},"body":{"components/FullNameComponent.html":{},"interfaces/FullNameErrorMsg.html":{},"modules/SharedCoreModule.html":{},"coverage.html":{}}}],["name=\"${refnameval}\"]`)).click",{"_index":639,"title":{},"body":{"classes/AbstractTestPage.html":{}}}],["name=schematic",{"_index":5555,"title":{},"body":{"additional-documentation/local-development/schematics.html":{}}}],["name@domain.com",{"_index":2707,"title":{},"body":{"components/EmailComponent.html":{}}}],["name^=\"${refnameval",{"_index":651,"title":{},"body":{"classes/AbstractTestPage.html":{}}}],["name^=\"${refnameval}\"]`)).first().sendkeys(text",{"_index":648,"title":{},"body":{"classes/AbstractTestPage.html":{}}}],["name^=\"${refnameval}\"]`)).sendkeys(text",{"_index":636,"title":{},"body":{"classes/AbstractTestPage.html":{}}}],["name_",{"_index":3827,"title":{},"body":{"components/NameComponent.html":{}}}],["namecomponent",{"_index":446,"title":{"components/NameComponent.html":{}},"body":{"classes/AbstractTestPage.html":{},"components/AccordionCommonComponent.html":{},"components/ButtonComponent.html":{},"components/ButtonGroupComponent.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"components/ConfirmTemplateComponent.html":{},"components/CoreBreadcrumbComponent.html":{},"components/DatepickerComponent.html":{},"components/DropdownComponent.html":{},"components/EmailComponent.html":{},"components/ErrorContainerComponent.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/FullNameComponent.html":{},"interfaces/FullNameErrorMsg.html":{},"components/GeocoderInputComponent.html":{},"components/HeaderComponent.html":{},"components/NameComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"components/RadioComponent.html":{},"components/SampleModalComponent.html":{},"modules/SharedCoreModule.html":{},"components/SinComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{},"components/XiconButtonComponent.html":{},"coverage.html":{},"overview.html":{}}}],["nameregex",{"_index":3316,"title":{},"body":{"components/FullNameComponent.html":{},"interfaces/FullNameErrorMsg.html":{}}}],["names",{"_index":3078,"title":{},"body":{"interfaces/FileUploaderMsg.html":{},"classes/Person.html":{},"directives/ValidateCityDirective.html":{},"directives/ValidateRegionDirective.html":{}}}],["names.length",{"_index":4111,"title":{},"body":{"classes/Person.html":{}}}],["names[0",{"_index":4110,"title":{},"body":{"classes/Person.html":{}}}],["names[1",{"_index":4112,"title":{},"body":{"classes/Person.html":{}}}],["names[2",{"_index":4113,"title":{},"body":{"classes/Person.html":{}}}],["namestr",{"_index":3822,"title":{},"body":{"components/NameComponent.html":{},"changelog.html":{}}}],["namibia",{"_index":2191,"title":{},"body":{"interfaces/CountryList.html":{}}}],["naming",{"_index":5485,"title":{},"body":{"todo.html":{}}}],["napprox",{"_index":3118,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["napprox.tofixed(0",{"_index":3122,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["napprox.tofixed(3",{"_index":3120,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["native",{"_index":1028,"title":{},"body":{"classes/Address.html":{},"components/WizardProgressBarComponent.html":{}}}],["natural",{"_index":2894,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["naturalheight",{"_index":1527,"title":{},"body":{"interfaces/CommonAttachmentJson.html":{},"classes/CommonImage.html":{},"classes/CommonImageProcessingError.html":{},"interfaces/CommonImageScaleFactors.html":{},"classes/CommonImageScaleFactorsImpl.html":{}}}],["naturalwidth",{"_index":1528,"title":{},"body":{"interfaces/CommonAttachmentJson.html":{},"classes/CommonImage.html":{},"classes/CommonImageProcessingError.html":{},"interfaces/CommonImageScaleFactors.html":{},"classes/CommonImageScaleFactorsImpl.html":{}}}],["natus",{"_index":1410,"title":{},"body":{"components/CityComponent.html":{},"interfaces/CountryList.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"interfaces/FileUploaderMsg.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{}}}],["nauru",{"_index":2193,"title":{},"body":{"interfaces/CountryList.html":{}}}],["navigate",{"_index":18,"title":{},"body":{"classes/AbstractBaseForm.html":{},"classes/AbstractForm.html":{},"classes/AbstractReactForm.html":{},"classes/AbstractTestPage.html":{},"injectables/DefaultPageGuardService.html":{},"changelog.html":{},"additional-documentation/local-development/components.html":{}}}],["navigate(url",{"_index":59,"title":{},"body":{"classes/AbstractBaseForm.html":{},"classes/AbstractForm.html":{},"classes/AbstractReactForm.html":{}}}],["navigatebyurl",{"_index":3901,"title":{},"body":{"interfaces/PageList.html":{},"injectables/PageStateService.html":{}}}],["navigatebyurl(path",{"_index":3938,"title":{},"body":{"injectables/PageStateService.html":{}}}],["navigates",{"_index":64,"title":{},"body":{"classes/AbstractBaseForm.html":{},"classes/AbstractForm.html":{},"classes/AbstractReactForm.html":{},"changelog.html":{}}}],["navigateto",{"_index":460,"title":{},"body":{"classes/AbstractTestPage.html":{}}}],["navigating",{"_index":55,"title":{},"body":{"classes/AbstractBaseForm.html":{},"classes/AbstractForm.html":{},"classes/AbstractReactForm.html":{}}}],["navigation",{"_index":1581,"title":{},"body":{"interfaces/CommonLogMessage.html":{},"injectables/DefaultPageGuardService.html":{},"miscellaneous/enumerations.html":{}}}],["navigationend",{"_index":3579,"title":{},"body":{"components/HeaderComponent.html":{},"components/WizardProgressBarComponent.html":{}}}],["nb",{"_index":4195,"title":{},"body":{"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{}}}],["nbytes",{"_index":3103,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["ncl",{"_index":2198,"title":{},"body":{"interfaces/CountryList.html":{}}}],["nec",{"_index":2685,"title":{},"body":{"components/EmailComponent.html":{},"components/NameComponent.html":{}}}],["necessary",{"_index":476,"title":{},"body":{"classes/AbstractTestPage.html":{},"interfaces/FileUploaderMsg.html":{},"interfaces/ISpaEnvResponse.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"changelog.html":{},"additional-documentation/local-development/schematics.html":{},"additional-documentation/local-development/components.html":{}}}],["need",{"_index":299,"title":{},"body":{"classes/AbstractHttpService.html":{},"classes/AbstractTestPage.html":{},"interfaces/AddrLabelList.html":{},"classes/Address.html":{},"components/ButtonGroupComponent.html":{},"injectables/CheckCompleteBaseService.html":{},"interfaces/CommonLogMessage.html":{},"components/CoreBreadcrumbComponent.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"directives/DuplicateCheckDirective.html":{},"components/EmailComponent.html":{},"interfaces/FileUploaderMsg.html":{},"components/FormSubmitBarComponent.html":{},"components/FullNameComponent.html":{},"interfaces/FullNameErrorMsg.html":{},"components/GeocoderInputComponent.html":{},"injectables/GeocoderService.html":{},"interfaces/Maxlengths.html":{},"components/NameComponent.html":{},"interfaces/PageListInterface.html":{},"components/PageSectionComponent.html":{},"interfaces/ReadOnlyFields.html":{},"todo.html":{},"additional-documentation/getting-started.html":{},"additional-documentation/local-development/schematics.html":{}}}],["needed",{"_index":1520,"title":{},"body":{"interfaces/CommonAttachmentJson.html":{},"classes/CommonImage.html":{},"classes/CommonImageProcessingError.html":{},"interfaces/CommonImageScaleFactors.html":{},"classes/CommonImageScaleFactorsImpl.html":{}}}],["negative",{"_index":3297,"title":{},"body":{"components/FormSubmitBarComponent.html":{}}}],["nemo",{"_index":1432,"title":{},"body":{"components/CityComponent.html":{},"interfaces/CountryList.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"interfaces/FileUploaderMsg.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{}}}],["nepal",{"_index":2195,"title":{},"body":{"interfaces/CountryList.html":{}}}],["ner",{"_index":2204,"title":{},"body":{"interfaces/CountryList.html":{}}}],["nesciunt",{"_index":1469,"title":{},"body":{"components/CityComponent.html":{},"interfaces/CountryList.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"interfaces/FileUploaderMsg.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{}}}],["nested",{"_index":3295,"title":{},"body":{"components/FormSubmitBarComponent.html":{},"additional-documentation/local-development/schematics.html":{}}}],["nesting",{"_index":1616,"title":{},"body":{"interfaces/CommonLogMessage.html":{}}}],["netherlands",{"_index":2197,"title":{},"body":{"interfaces/CountryList.html":{}}}],["network",{"_index":1625,"title":{},"body":{"interfaces/CommonLogMessage.html":{},"interfaces/GeoAddressResult.html":{},"components/GeocoderInputComponent.html":{},"injectables/GeocoderService.html":{},"interfaces/ISpaEnvResponse.html":{}}}],["never",{"_index":1655,"title":{},"body":{"interfaces/CommonLogMessage.html":{},"interfaces/FileUploaderMsg.html":{},"todo.html":{},"additional-documentation/getting-started.html":{}}}],["nevis",{"_index":2265,"title":{},"body":{"interfaces/CountryList.html":{}}}],["new",{"_index":238,"title":{},"body":{"classes/AbstractFormControl.html":{},"interfaces/AddrLabelList.html":{},"classes/Address.html":{},"components/ButtonComponent.html":{},"components/ButtonGroupComponent.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"interfaces/CommonAttachmentJson.html":{},"classes/CommonImage.html":{},"classes/CommonImageProcessingError.html":{},"interfaces/CommonImageScaleFactors.html":{},"classes/CommonImageScaleFactorsImpl.html":{},"interfaces/CommonLogMessage.html":{},"injectables/ContainerService.html":{},"interfaces/CountryList.html":{},"interfaces/DateErrorMsg.html":{},"directives/DateFieldFormatDirective.html":{},"components/DatepickerComponent.html":{},"injectables/DefaultPageGuardService.html":{},"components/EmailComponent.html":{},"interfaces/ErrorMessage.html":{},"interfaces/FileUploaderMsg.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/FullNameComponent.html":{},"interfaces/FullNameErrorMsg.html":{},"interfaces/GeoAddressResult.html":{},"components/GeocoderInputComponent.html":{},"injectables/GeocoderService.html":{},"interfaces/IRadioItems.html":{},"interfaces/ISpaEnvResponse.html":{},"interfaces/Maxlengths.html":{},"components/NameComponent.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{},"components/RadioComponent.html":{},"interfaces/ReadOnlyFields.html":{},"components/SinComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/XiconButtonComponent.html":{},"changelog.html":{},"coverage.html":{},"additional-documentation/getting-started.html":{},"additional-documentation/local-development/schematics.html":{},"additional-documentation/local-development/components.html":{}}}],["new.target.prototype",{"_index":3819,"title":{},"body":{"classes/MoHCommonLibraryError.html":{}}}],["newfoundland",{"_index":4198,"title":{},"body":{"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{}}}],["newurl",{"_index":1603,"title":{},"body":{"interfaces/CommonLogMessage.html":{}}}],["next",{"_index":473,"title":{},"body":{"classes/AbstractTestPage.html":{},"interfaces/AddrLabelList.html":{},"injectables/CheckCompleteBaseService.html":{},"interfaces/FileUploaderMsg.html":{},"interfaces/ISpaEnvResponse.html":{},"guards/LoadPageGuardService.html":{},"interfaces/Maxlengths.html":{},"interfaces/PageListInterface.html":{},"interfaces/ReadOnlyFields.html":{},"guards/RouteGuardService.html":{}}}],["nextpagenumber",{"_index":3060,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["nfk",{"_index":2210,"title":{},"body":{"interfaces/CountryList.html":{}}}],["ng",{"_index":509,"title":{},"body":{"classes/AbstractTestPage.html":{},"components/PageSectionComponent.html":{},"modules/SharedCoreModule.html":{},"changelog.html":{},"dependencies.html":{},"additional-documentation/local-development/schematics.html":{},"additional-documentation/local-development/components.html":{}}}],["ng_validators",{"_index":2666,"title":{},"body":{"directives/DuplicateCheckDirective.html":{},"directives/ValidateBcPostalDirective.html":{},"directives/ValidateCityDirective.html":{},"directives/ValidateNameDirective.html":{},"directives/ValidatePostalcodeDirective.html":{},"directives/ValidateRegionDirective.html":{},"directives/ValidateStreetDirective.html":{}}}],["ng_value_accessor",{"_index":793,"title":{},"body":{"interfaces/AddrLabelList.html":{},"components/ButtonComponent.html":{},"components/ButtonGroupComponent.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"components/DropdownComponent.html":{},"components/FullNameComponent.html":{},"interfaces/FullNameErrorMsg.html":{},"interfaces/ISpaEnvResponse.html":{},"interfaces/Maxlengths.html":{},"interfaces/ReadOnlyFields.html":{},"changelog.html":{}}}],["nga",{"_index":2206,"title":{},"body":{"interfaces/CountryList.html":{}}}],["ngaftercontentinit",{"_index":3016,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["ngafterviewinit",{"_index":1732,"title":{},"body":{"classes/Container.html":{},"components/FullNameComponent.html":{},"interfaces/FullNameErrorMsg.html":{},"interfaces/WizardProgressItem.html":{}}}],["ngchanges",{"_index":4771,"title":{},"body":{"changelog.html":{}}}],["ngcontent",{"_index":3710,"title":{},"body":{"interfaces/ISpaEnvResponse.html":{}}}],["ngcontrol",{"_index":150,"title":{},"body":{"classes/AbstractFormControl.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"interfaces/CountryList.html":{},"components/DropdownComponent.html":{},"components/EmailComponent.html":{},"components/GeocoderInputComponent.html":{},"interfaces/IRadioItems.html":{},"components/NameComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{},"components/RadioComponent.html":{},"components/SinComponent.html":{},"changelog.html":{},"todo.html":{}}}],["ngcontrol.control.setvalidators(allvalidators",{"_index":226,"title":{},"body":{"classes/AbstractFormControl.html":{}}}],["ngcontrol.control.updatevalueandvalidity",{"_index":227,"title":{},"body":{"classes/AbstractFormControl.html":{}}}],["ngcontrol.control.validator",{"_index":224,"title":{},"body":{"classes/AbstractFormControl.html":{}}}],["ngform",{"_index":74,"title":{},"body":{"classes/AbstractBaseForm.html":{},"classes/AbstractForm.html":{},"interfaces/AddrLabelList.html":{},"components/ButtonComponent.html":{},"components/ButtonGroupComponent.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"interfaces/FileUploaderMsg.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/FullNameComponent.html":{},"interfaces/FullNameErrorMsg.html":{},"interfaces/ISpaEnvResponse.html":{},"interfaces/Maxlengths.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"interfaces/ReadOnlyFields.html":{},"modules/SharedCoreModule.html":{},"additional-documentation/local-development/schematics.html":{}}}],["ngforms",{"_index":5568,"title":{},"body":{"additional-documentation/local-development/schematics.html":{}}}],["ngmodel",{"_index":1314,"title":{},"body":{"components/CheckboxComponent.html":{},"components/EmailComponent.html":{},"components/NameComponent.html":{},"changelog.html":{}}}],["ngmodelchange",{"_index":2552,"title":{},"body":{"directives/DateFieldFormatDirective.html":{}}}],["ngmodule",{"_index":362,"title":{},"body":{"injectables/AbstractPageGuardService.html":{},"injectables/AbstractPgCheckService.html":{},"interfaces/AddrLabelList.html":{},"modules/CaptchaModule.html":{},"guards/LoadPageGuardService.html":{},"interfaces/Maxlengths.html":{},"interfaces/ReadOnlyFields.html":{},"guards/RouteGuardService.html":{},"modules/SharedCoreModule.html":{},"index.html":{},"additional-documentation/getting-started.html":{}}}],["ngmodules",{"_index":3787,"title":{},"body":{"guards/LoadPageGuardService.html":{},"guards/RouteGuardService.html":{}}}],["ngonchanges",{"_index":2576,"title":{},"body":{"components/DatepickerComponent.html":{},"components/GeocoderInputComponent.html":{},"components/PasswordComponent.html":{},"changelog.html":{}}}],["ngonchanges(changes",{"_index":904,"title":{},"body":{"interfaces/AddrLabelList.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"interfaces/FileUploaderMsg.html":{},"components/GeocoderInputComponent.html":{},"interfaces/Maxlengths.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"interfaces/ReadOnlyFields.html":{}}}],["ngondestroy",{"_index":1734,"title":{},"body":{"classes/Container.html":{},"components/WizardProgressBarComponent.html":{},"interfaces/WizardProgressItem.html":{}}}],["ngoninit",{"_index":122,"title":{},"body":{"classes/AbstractFormControl.html":{},"components/AccordionCommonComponent.html":{},"interfaces/AddrLabelList.html":{},"components/ButtonComponent.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"components/CoreBreadcrumbComponent.html":{},"interfaces/CountryList.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"components/EmailComponent.html":{},"interfaces/FileUploaderMsg.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/FullNameComponent.html":{},"interfaces/FullNameErrorMsg.html":{},"components/GeocoderInputComponent.html":{},"components/HeaderComponent.html":{},"interfaces/IRadioItems.html":{},"interfaces/ISpaEnvResponse.html":{},"guards/LoadPageGuardService.html":{},"interfaces/Maxlengths.html":{},"components/NameComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{},"components/RadioComponent.html":{},"interfaces/ReadOnlyFields.html":{},"guards/RouteGuardService.html":{},"components/SinComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{},"components/XiconButtonComponent.html":{}}}],["ngselect",{"_index":596,"title":{},"body":{"classes/AbstractTestPage.html":{}}}],["ngselectmodule",{"_index":4298,"title":{},"body":{"modules/SharedCoreModule.html":{}}}],["ngsubmit",{"_index":3288,"title":{},"body":{"components/FormSubmitBarComponent.html":{}}}],["ngx",{"_index":675,"title":{},"body":{"components/AccordionCommonComponent.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"interfaces/FileUploaderMsg.html":{},"components/GeocoderInputComponent.html":{},"interfaces/ISpaEnvResponse.html":{},"interfaces/SampleImageInterface.html":{},"components/SampleModalComponent.html":{},"modules/SharedCoreModule.html":{},"components/ThumbnailComponent.html":{},"components/WizardProgressBarComponent.html":{},"dependencies.html":{}}}],["ngxdp",{"_index":2479,"title":{},"body":{"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{}}}],["ngxmydatepickerdirective",{"_index":2435,"title":{},"body":{"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{}}}],["ngxmydatepickermodule",{"_index":4289,"title":{},"body":{"modules/SharedCoreModule.html":{}}}],["ngxmydatepickermodule.forroot",{"_index":4353,"title":{},"body":{"modules/SharedCoreModule.html":{}}}],["ngzone",{"_index":2744,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["nic",{"_index":2202,"title":{},"body":{"interfaces/CountryList.html":{}}}],["nicaragua",{"_index":2203,"title":{},"body":{"interfaces/CountryList.html":{}}}],["niger",{"_index":2205,"title":{},"body":{"interfaces/CountryList.html":{}}}],["nigeria",{"_index":2207,"title":{},"body":{"interfaces/CountryList.html":{}}}],["nisi",{"_index":1417,"title":{},"body":{"components/CityComponent.html":{},"interfaces/CountryList.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"interfaces/FileUploaderMsg.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{}}}],["niu",{"_index":2208,"title":{},"body":{"interfaces/CountryList.html":{}}}],["niue",{"_index":2209,"title":{},"body":{"interfaces/CountryList.html":{}}}],["nl",{"_index":4197,"title":{},"body":{"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{}}}],["nld",{"_index":2196,"title":{},"body":{"interfaces/CountryList.html":{}}}],["nmultiple",{"_index":3117,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["nobis",{"_index":1446,"title":{},"body":{"components/CityComponent.html":{},"interfaces/CountryList.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"interfaces/FileUploaderMsg.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{}}}],["node",{"_index":5427,"title":{},"body":{"index.html":{}}}],["node_modules",{"_index":5589,"title":{},"body":{"additional-documentation/local-development/components.html":{}}}],["node_modules/@types",{"_index":5563,"title":{},"body":{"additional-documentation/local-development/schematics.html":{}}}],["nofuturedatesallowed",{"_index":2426,"title":{},"body":{"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{}}}],["noidimage",{"_index":2795,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["non",{"_index":1414,"title":{},"body":{"components/CityComponent.html":{},"interfaces/CountryList.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"interfaces/FileUploaderMsg.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{},"additional-documentation/getting-started.html":{}}}],["nonce",{"_index":1170,"title":{},"body":{"injectables/CaptchaDataService.html":{},"modules/CaptchaModule.html":{},"injectables/ServerPayload.html":{}}}],["none",{"_index":2467,"title":{},"body":{"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"interfaces/ISpaEnvResponse.html":{}}}],["nonvdi",{"_index":5478,"title":{},"body":{"todo.html":{}}}],["nopastdatesallowed",{"_index":2431,"title":{},"body":{"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{}}}],["norfolk",{"_index":2211,"title":{},"body":{"interfaces/CountryList.html":{}}}],["northern",{"_index":2213,"title":{},"body":{"interfaces/CountryList.html":{}}}],["northwest",{"_index":4212,"title":{},"body":{"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{}}}],["norway",{"_index":2215,"title":{},"body":{"interfaces/CountryList.html":{}}}],["nostrum",{"_index":1456,"title":{},"body":{"components/CityComponent.html":{},"interfaces/CountryList.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"interfaces/FileUploaderMsg.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{}}}],["note",{"_index":301,"title":{},"body":{"classes/AbstractHttpService.html":{},"classes/AbstractTestPage.html":{},"interfaces/AddrLabelList.html":{},"interfaces/CommonAttachmentJson.html":{},"classes/CommonImage.html":{},"classes/CommonImageProcessingError.html":{},"interfaces/CommonImageScaleFactors.html":{},"classes/CommonImageScaleFactorsImpl.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"interfaces/FileUploaderMsg.html":{},"components/FullNameComponent.html":{},"interfaces/FullNameErrorMsg.html":{},"components/GeocoderInputComponent.html":{},"injectables/GeocoderService.html":{},"interfaces/Maxlengths.html":{},"components/PageFrameworkComponent.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"classes/Person.html":{},"interfaces/ReadOnlyFields.html":{},"components/WizardProgressBarComponent.html":{},"additional-documentation/getting-started.html":{}}}],["notes",{"_index":4716,"title":{},"body":{"changelog.html":{}}}],["nothing",{"_index":3499,"title":{},"body":{"components/GeocoderInputComponent.html":{}}}],["notice",{"_index":491,"title":{},"body":{"classes/AbstractTestPage.html":{},"interfaces/ISpaEnvResponse.html":{}}}],["notify",{"_index":2905,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["notips",{"_index":3913,"title":{},"body":{"components/PageSectionComponent.html":{}}}],["nova",{"_index":4201,"title":{},"body":{"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{}}}],["now",{"_index":578,"title":{},"body":{"classes/AbstractTestPage.html":{},"components/GeocoderInputComponent.html":{},"changelog.html":{},"additional-documentation/local-development/components.html":{}}}],["npl",{"_index":2194,"title":{},"body":{"interfaces/CountryList.html":{}}}],["npm",{"_index":1072,"title":{},"body":{"classes/Base.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"classes/Person.html":{},"components/WizardProgressBarComponent.html":{},"changelog.html":{},"index.html":{},"additional-documentation/local-development/schematics.html":{},"additional-documentation/local-development/components.html":{}}}],["nprstv",{"_index":1015,"title":{},"body":{"classes/Address.html":{},"directives/ValidateBcPostalDirective.html":{},"directives/ValidatePostalcodeDirective.html":{}}}],["nru",{"_index":2192,"title":{},"body":{"interfaces/CountryList.html":{}}}],["ns",{"_index":4200,"title":{},"body":{"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{}}}],["nt",{"_index":4211,"title":{},"body":{"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{}}}],["nu",{"_index":4213,"title":{},"body":{"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{}}}],["null",{"_index":411,"title":{},"body":{"classes/AbstractReactForm.html":{},"interfaces/AddrLabelList.html":{},"components/CheckboxComponent.html":{},"interfaces/CommonLogMessage.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"directives/DuplicateCheckDirective.html":{},"components/EmailComponent.html":{},"components/GeocoderInputComponent.html":{},"interfaces/ISpaEnvResponse.html":{},"interfaces/Maxlengths.html":{},"components/NameComponent.html":{},"interfaces/PageList.html":{},"injectables/PageStateService.html":{},"classes/Person.html":{},"interfaces/ReadOnlyFields.html":{},"components/SinComponent.html":{},"directives/ValidateBcPostalDirective.html":{},"directives/ValidateCityDirective.html":{},"directives/ValidateNameDirective.html":{},"directives/ValidatePostalcodeDirective.html":{},"directives/ValidateRegionDirective.html":{},"directives/ValidateStreetDirective.html":{},"changelog.html":{}}}],["null/undefined",{"_index":923,"title":{},"body":{"interfaces/AddrLabelList.html":{},"interfaces/Maxlengths.html":{},"interfaces/ReadOnlyFields.html":{}}}],["nulls",{"_index":4103,"title":{},"body":{"classes/Person.html":{}}}],["number",{"_index":521,"title":{},"body":{"classes/AbstractTestPage.html":{},"interfaces/AddrLabelList.html":{},"injectables/CheckCompleteBaseService.html":{},"interfaces/CommonAttachmentJson.html":{},"classes/CommonImage.html":{},"classes/CommonImageProcessingError.html":{},"interfaces/CommonImageScaleFactors.html":{},"classes/CommonImageScaleFactorsImpl.html":{},"directives/DateFieldFormatDirective.html":{},"interfaces/FileUploaderMsg.html":{},"interfaces/IRadioItems.html":{},"interfaces/Maxlengths.html":{},"components/NameComponent.html":{},"interfaces/PageList.html":{},"interfaces/PageListInterface.html":{},"injectables/PageStateService.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"classes/Person.html":{},"components/PostalCodeComponent.html":{},"components/RadioComponent.html":{},"interfaces/ReadOnlyFields.html":{},"interfaces/SimpleDate.html":{},"components/SinComponent.html":{},"components/ThumbnailComponent.html":{},"components/WizardProgressBarComponent.html":{},"changelog.html":{},"coverage.html":{}}}],["number'},{'name",{"_index":736,"title":{},"body":{"components/AccordionCommonComponent.html":{},"components/ButtonComponent.html":{},"components/ButtonGroupComponent.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"components/ConfirmTemplateComponent.html":{},"components/CoreBreadcrumbComponent.html":{},"components/DatepickerComponent.html":{},"components/DropdownComponent.html":{},"components/EmailComponent.html":{},"components/ErrorContainerComponent.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/FullNameComponent.html":{},"components/GeocoderInputComponent.html":{},"components/HeaderComponent.html":{},"components/NameComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"components/RadioComponent.html":{},"components/SampleModalComponent.html":{},"components/SinComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{},"components/XiconButtonComponent.html":{}}}],["number.component",{"_index":4314,"title":{},"body":{"modules/SharedCoreModule.html":{}}}],["number.component.ts",{"_index":5308,"title":{},"body":{"coverage.html":{}}}],["number.parseint",{"_index":3846,"title":{},"body":{"components/NameComponent.html":{}}}],["number/phone",{"_index":4313,"title":{},"body":{"modules/SharedCoreModule.html":{},"coverage.html":{}}}],["numbers",{"_index":1386,"title":{},"body":{"components/CityComponent.html":{},"components/PostalCodeComponent.html":{},"changelog.html":{}}}],["numerator",{"_index":4541,"title":{},"body":{"components/WizardProgressBarComponent.html":{}}}],["numpages",{"_index":3219,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["numquam",{"_index":1457,"title":{},"body":{"components/CityComponent.html":{},"interfaces/CountryList.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"interfaces/FileUploaderMsg.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{}}}],["nunavut",{"_index":4214,"title":{},"body":{"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{}}}],["nzl",{"_index":2200,"title":{},"body":{"interfaces/CountryList.html":{}}}],["o",{"_index":2993,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["obcaecati",{"_index":1452,"title":{},"body":{"components/CityComponent.html":{},"interfaces/CountryList.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"interfaces/FileUploaderMsg.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{}}}],["obj",{"_index":2548,"title":{},"body":{"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"interfaces/GeoAddressResult.html":{},"injectables/GeocoderService.html":{},"interfaces/PageList.html":{},"injectables/PageStateService.html":{}}}],["obj.features.map(feature",{"_index":3404,"title":{},"body":{"interfaces/GeoAddressResult.html":{},"injectables/GeocoderService.html":{}}}],["obj.index",{"_index":3893,"title":{},"body":{"interfaces/PageList.html":{},"injectables/PageStateService.html":{}}}],["obj.iscomplete",{"_index":3896,"title":{},"body":{"interfaces/PageList.html":{},"injectables/PageStateService.html":{}}}],["object",{"_index":312,"title":{},"body":{"classes/AbstractHttpService.html":{},"classes/Address.html":{},"classes/Base.html":{},"interfaces/CommonLogMessage.html":{},"components/GeocoderInputComponent.html":{},"classes/Person.html":{}}}],["object.addressline1",{"_index":1061,"title":{},"body":{"classes/Address.html":{}}}],["object.addressline2",{"_index":1063,"title":{},"body":{"classes/Address.html":{}}}],["object.addressline3",{"_index":1065,"title":{},"body":{"classes/Address.html":{}}}],["object.assign",{"_index":3890,"title":{},"body":{"interfaces/PageList.html":{},"injectables/PageStateService.html":{}}}],["object.city",{"_index":1066,"title":{},"body":{"classes/Address.html":{}}}],["object.country",{"_index":1067,"title":{},"body":{"classes/Address.html":{}}}],["object.dateofbirth",{"_index":4117,"title":{},"body":{"classes/Person.html":{}}}],["object.firstname",{"_index":4114,"title":{},"body":{"classes/Person.html":{}}}],["object.keys",{"_index":3878,"title":{},"body":{"interfaces/PageList.html":{},"injectables/PageStateService.html":{}}}],["object.keys(fg.controls",{"_index":428,"title":{},"body":{"classes/AbstractReactForm.html":{}}}],["object.keys(this._defaulterrmsg).map",{"_index":213,"title":{},"body":{"classes/AbstractFormControl.html":{}}}],["object.keys(this.disabled).map",{"_index":990,"title":{},"body":{"interfaces/AddrLabelList.html":{},"interfaces/Maxlengths.html":{},"interfaces/ReadOnlyFields.html":{}}}],["object.keys(this.errormessage).map",{"_index":207,"title":{},"body":{"classes/AbstractFormControl.html":{},"interfaces/CountryList.html":{},"components/PostalCodeComponent.html":{}}}],["object.keys(this.fieldmaxlenghts).map",{"_index":984,"title":{},"body":{"interfaces/AddrLabelList.html":{},"interfaces/Maxlengths.html":{},"interfaces/ReadOnlyFields.html":{}}}],["object.keys(this.form.form.controls).foreach(x",{"_index":110,"title":{},"body":{"classes/AbstractForm.html":{}}}],["object.keys(this.labels).map",{"_index":979,"title":{},"body":{"interfaces/AddrLabelList.html":{},"interfaces/Maxlengths.html":{},"interfaces/ReadOnlyFields.html":{}}}],["object.keys(this.readonlyfields).map",{"_index":988,"title":{},"body":{"interfaces/AddrLabelList.html":{},"interfaces/Maxlengths.html":{},"interfaces/ReadOnlyFields.html":{}}}],["object.lastname",{"_index":4116,"title":{},"body":{"classes/Person.html":{}}}],["object.middlename",{"_index":4115,"title":{},"body":{"classes/Person.html":{}}}],["object.postal",{"_index":1068,"title":{},"body":{"classes/Address.html":{}}}],["object.province",{"_index":1069,"title":{},"body":{"classes/Address.html":{}}}],["object.setprototypeof(this",{"_index":3818,"title":{},"body":{"classes/MoHCommonLibraryError.html":{}}}],["objectid",{"_index":121,"title":{},"body":{"classes/AbstractFormControl.html":{},"classes/Base.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"components/ConfirmTemplateComponent.html":{},"components/DatepickerComponent.html":{},"components/DropdownComponent.html":{},"components/EmailComponent.html":{},"components/FullNameComponent.html":{},"components/GeocoderInputComponent.html":{},"components/NameComponent.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"classes/Person.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"components/RadioComponent.html":{},"components/SampleModalComponent.html":{},"components/SinComponent.html":{},"components/ToggleComponent.html":{}}}],["objects",{"_index":5584,"title":{},"body":{"additional-documentation/local-development/components.html":{}}}],["observable",{"_index":275,"title":{},"body":{"classes/AbstractHttpService.html":{},"injectables/CaptchaDataService.html":{},"interfaces/FileUploaderMsg.html":{},"interfaces/GeoAddressResult.html":{},"components/GeocoderInputComponent.html":{},"injectables/GeocoderService.html":{},"interfaces/ISpaEnvResponse.html":{},"guards/LoadPageGuardService.html":{},"guards/RouteGuardService.html":{},"injectables/ServerPayload.html":{}}}],["observable.pipe(catcherror(this.handleerror.bind(this",{"_index":336,"title":{},"body":{"classes/AbstractHttpService.html":{}}}],["observable.pipe(tap",{"_index":341,"title":{},"body":{"classes/AbstractHttpService.html":{}}}],["observables",{"_index":1755,"title":{},"body":{"classes/Container.html":{},"injectables/ContainerService.html":{},"interfaces/WizardProgressItem.html":{}}}],["observe",{"_index":1186,"title":{},"body":{"injectables/CaptchaDataService.html":{},"injectables/ServerPayload.html":{}}}],["observer",{"_index":323,"title":{},"body":{"classes/AbstractHttpService.html":{},"interfaces/FileUploaderMsg.html":{}}}],["observer.error(error",{"_index":3066,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["observer.error(imagereaderror",{"_index":3055,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["observer.error(imagetoobigerror",{"_index":3145,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["observer.next(mspimage",{"_index":3148,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["obtain",{"_index":5450,"title":{},"body":{"license.html":{}}}],["occupied",{"_index":2224,"title":{},"body":{"interfaces/CountryList.html":{}}}],["occurances",{"_index":2732,"title":{},"body":{"interfaces/ErrorMessage.html":{}}}],["occured",{"_index":1664,"title":{},"body":{"interfaces/CommonLogMessage.html":{},"interfaces/ISpaEnvResponse.html":{}}}],["ocean",{"_index":1931,"title":{},"body":{"interfaces/CountryList.html":{}}}],["ocurrence",{"_index":608,"title":{},"body":{"classes/AbstractTestPage.html":{}}}],["odit",{"_index":1460,"title":{},"body":{"components/CityComponent.html":{},"interfaces/CountryList.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"interfaces/FileUploaderMsg.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{}}}],["of(error",{"_index":3756,"title":{},"body":{"interfaces/ISpaEnvResponse.html":{}}}],["of30",{"_index":3034,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["oh",{"_index":5607,"title":{},"body":{"additional-documentation/local-development/components.html":{}}}],["older",{"_index":5429,"title":{},"body":{"index.html":{}}}],["oman",{"_index":2217,"title":{},"body":{"interfaces/CountryList.html":{}}}],["omit",{"_index":1037,"title":{},"body":{"classes/Address.html":{}}}],["omn",{"_index":2216,"title":{},"body":{"interfaces/CountryList.html":{}}}],["onblur",{"_index":1360,"title":{},"body":{"components/CityComponent.html":{},"components/EmailComponent.html":{},"components/GeocoderInputComponent.html":{},"components/NameComponent.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{},"components/SinComponent.html":{}}}],["onblur(event",{"_index":1378,"title":{},"body":{"components/CityComponent.html":{},"components/EmailComponent.html":{},"components/GeocoderInputComponent.html":{},"components/NameComponent.html":{},"components/ProvinceComponent.html":{},"components/SinComponent.html":{}}}],["onblurevent",{"_index":2416,"title":{},"body":{"interfaces/CountryList.html":{},"components/PostalCodeComponent.html":{}}}],["onblurevent(event",{"_index":4137,"title":{},"body":{"components/PostalCodeComponent.html":{}}}],["onbtnclick",{"_index":4565,"title":{},"body":{"components/XiconButtonComponent.html":{}}}],["once",{"_index":2923,"title":{},"body":{"interfaces/FileUploaderMsg.html":{},"additional-documentation/local-development/schematics.html":{}}}],["onchange",{"_index":4653,"title":{},"body":{"changelog.html":{}}}],["onchanges",{"_index":790,"title":{},"body":{"interfaces/AddrLabelList.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"interfaces/FileUploaderMsg.html":{},"components/GeocoderInputComponent.html":{},"interfaces/Maxlengths.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"interfaces/ReadOnlyFields.html":{}}}],["onclick",{"_index":1099,"title":{},"body":{"components/ButtonComponent.html":{},"components/FormActionBarComponent.html":{}}}],["onclick($event",{"_index":1111,"title":{},"body":{"components/ButtonComponent.html":{},"components/FormActionBarComponent.html":{}}}],["ondatechanged",{"_index":2545,"title":{},"body":{"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{}}}],["ondatechanged(event",{"_index":2536,"title":{},"body":{"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{}}}],["ondestroy",{"_index":1716,"title":{},"body":{"classes/Container.html":{},"components/WizardProgressBarComponent.html":{},"interfaces/WizardProgressItem.html":{}}}],["one",{"_index":474,"title":{},"body":{"classes/AbstractTestPage.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"guards/LoadPageGuardService.html":{},"guards/RouteGuardService.html":{},"changelog.html":{},"miscellaneous/enumerations.html":{},"additional-documentation/getting-started.html":{},"additional-documentation/local-development/schematics.html":{},"additional-documentation/local-development/components.html":{}}}],["onerror",{"_index":3431,"title":{},"body":{"components/GeocoderInputComponent.html":{}}}],["onerror(err",{"_index":3445,"title":{},"body":{"components/GeocoderInputComponent.html":{}}}],["ongoing",{"_index":2945,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["oninit",{"_index":115,"title":{},"body":{"classes/AbstractFormControl.html":{},"components/AccordionCommonComponent.html":{},"interfaces/AddrLabelList.html":{},"components/ButtonComponent.html":{},"components/ButtonGroupComponent.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"components/CoreBreadcrumbComponent.html":{},"interfaces/CountryList.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"components/DropdownComponent.html":{},"components/EmailComponent.html":{},"interfaces/FileUploaderMsg.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/FullNameComponent.html":{},"interfaces/FullNameErrorMsg.html":{},"components/GeocoderInputComponent.html":{},"components/HeaderComponent.html":{},"interfaces/IRadioItems.html":{},"interfaces/ISpaEnvResponse.html":{},"interfaces/Maxlengths.html":{},"components/NameComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{},"components/RadioComponent.html":{},"interfaces/ReadOnlyFields.html":{},"components/SinComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{},"components/XiconButtonComponent.html":{}}}],["oninput",{"_index":2562,"title":{},"body":{"directives/DateFieldFormatDirective.html":{}}}],["oninputblur",{"_index":3966,"title":{},"body":{"components/PasswordComponent.html":{}}}],["oninputblur($event",{"_index":3999,"title":{},"body":{"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{}}}],["onkeyup",{"_index":3432,"title":{},"body":{"components/GeocoderInputComponent.html":{}}}],["onkeyup(event",{"_index":3448,"title":{},"body":{"components/GeocoderInputComponent.html":{}}}],["onload",{"_index":3189,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["onloading",{"_index":3433,"title":{},"body":{"components/GeocoderInputComponent.html":{}}}],["onloading(val",{"_index":3450,"title":{},"body":{"components/GeocoderInputComponent.html":{}}}],["onlyfuturedates",{"_index":2463,"title":{},"body":{"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{}}}],["onnoresults",{"_index":3434,"title":{},"body":{"components/GeocoderInputComponent.html":{}}}],["onnoresults(val",{"_index":3452,"title":{},"body":{"components/GeocoderInputComponent.html":{}}}],["onpaste",{"_index":4043,"title":{},"body":{"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{}}}],["onselect",{"_index":3435,"title":{},"body":{"components/GeocoderInputComponent.html":{}}}],["onselect(event",{"_index":3454,"title":{},"body":{"components/GeocoderInputComponent.html":{}}}],["onstatuschange",{"_index":5113,"title":{},"body":{"changelog.html":{}}}],["ontario",{"_index":4203,"title":{},"body":{"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{}}}],["onvaluechange",{"_index":1361,"title":{},"body":{"components/CityComponent.html":{},"interfaces/CountryList.html":{},"components/EmailComponent.html":{},"components/NameComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{},"components/SinComponent.html":{}}}],["onvaluechange(value",{"_index":1380,"title":{},"body":{"components/CityComponent.html":{},"components/EmailComponent.html":{},"components/NameComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"components/SinComponent.html":{}}}],["open",{"_index":2877,"title":{},"body":{"interfaces/FileUploaderMsg.html":{},"changelog.html":{}}}],["opened/read",{"_index":3196,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["openfiledialog",{"_index":3028,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["openmodal",{"_index":3694,"title":{},"body":{"interfaces/ISpaEnvResponse.html":{},"interfaces/SampleImageInterface.html":{},"components/SampleModalComponent.html":{}}}],["opens",{"_index":629,"title":{},"body":{"classes/AbstractTestPage.html":{},"interfaces/FileUploaderMsg.html":{}}}],["openshift",{"_index":1211,"title":{},"body":{"modules/CaptchaModule.html":{},"additional-documentation/local-development/schematics.html":{}}}],["operate",{"_index":5592,"title":{},"body":{"additional-documentation/local-development/components.html":{}}}],["operation",{"_index":2913,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["opt",{"_index":4977,"title":{},"body":{"changelog.html":{}}}],["optimizing",{"_index":4525,"title":{},"body":{"components/WizardProgressBarComponent.html":{}}}],["optio",{"_index":1424,"title":{},"body":{"components/CityComponent.html":{},"interfaces/CountryList.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"interfaces/FileUploaderMsg.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{}}}],["option",{"_index":591,"title":{},"body":{"classes/AbstractTestPage.html":{},"interfaces/AddrLabelList.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"components/GeocoderInputComponent.html":{},"interfaces/Maxlengths.html":{},"interfaces/ReadOnlyFields.html":{},"changelog.html":{}}}],["optional",{"_index":28,"title":{},"body":{"classes/AbstractBaseForm.html":{},"classes/AbstractForm.html":{},"classes/AbstractFormControl.html":{},"classes/AbstractHttpService.html":{},"injectables/AbstractPageGuardService.html":{},"injectables/AbstractPgCheckService.html":{},"classes/AbstractReactForm.html":{},"classes/AbstractTestPage.html":{},"interfaces/AddrLabelList.html":{},"classes/Address.html":{},"components/ButtonComponent.html":{},"components/ButtonGroupComponent.html":{},"injectables/CaptchaDataService.html":{},"injectables/CheckCompleteBaseService.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"interfaces/CommonAttachmentJson.html":{},"classes/CommonImage.html":{},"classes/CommonImageProcessingError.html":{},"interfaces/CommonImageScaleFactors.html":{},"classes/CommonImageScaleFactorsImpl.html":{},"interfaces/CommonLogMessage.html":{},"classes/Container.html":{},"injectables/ContainerService.html":{},"components/CoreBreadcrumbComponent.html":{},"interfaces/CountryList.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"injectables/DefaultPageGuardService.html":{},"components/DropdownComponent.html":{},"directives/DuplicateCheckDirective.html":{},"components/EmailComponent.html":{},"interfaces/ErrorMessage.html":{},"interfaces/FileUploaderMsg.html":{},"components/FormActionBarComponent.html":{},"components/FullNameComponent.html":{},"interfaces/FullNameErrorMsg.html":{},"components/GeocoderInputComponent.html":{},"injectables/GeocoderService.html":{},"components/HeaderComponent.html":{},"interfaces/IRadioItems.html":{},"guards/LoadPageGuardService.html":{},"interfaces/Maxlengths.html":{},"classes/MoHCommonLibraryError.html":{},"components/NameComponent.html":{},"injectables/PageStateService.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"classes/Person.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{},"components/RadioComponent.html":{},"interfaces/ReadOnlyFields.html":{},"guards/RouteGuardService.html":{},"interfaces/SampleImageInterface.html":{},"components/SinComponent.html":{},"components/ThumbnailComponent.html":{},"directives/ValidateBcPostalDirective.html":{},"directives/ValidateCityDirective.html":{},"directives/ValidateNameDirective.html":{},"directives/ValidatePostalcodeDirective.html":{},"directives/ValidateRegionDirective.html":{},"directives/ValidateStreetDirective.html":{},"components/WizardProgressBarComponent.html":{},"changelog.html":{}}}],["optional()@self",{"_index":1339,"title":{},"body":{"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"components/DropdownComponent.html":{},"components/EmailComponent.html":{},"components/GeocoderInputComponent.html":{},"components/NameComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"components/RadioComponent.html":{},"components/SinComponent.html":{}}}],["optionally",{"_index":337,"title":{},"body":{"classes/AbstractHttpService.html":{}}}],["options",{"_index":271,"title":{},"body":{"classes/AbstractHttpService.html":{},"classes/AbstractTestPage.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"injectables/GeocoderService.html":{},"changelog.html":{}}}],["optiontext",{"_index":566,"title":{},"body":{"classes/AbstractTestPage.html":{}}}],["optiontext)).click",{"_index":631,"title":{},"body":{"classes/AbstractTestPage.html":{}}}],["order",{"_index":912,"title":{},"body":{"interfaces/AddrLabelList.html":{},"interfaces/FileUploaderMsg.html":{},"interfaces/Maxlengths.html":{},"interfaces/ReadOnlyFields.html":{},"changelog.html":{},"additional-documentation/local-development/components.html":{}}}],["organize",{"_index":5118,"title":{},"body":{"changelog.html":{}}}],["orient",{"_index":2912,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["orientation",{"_index":3157,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["others",{"_index":572,"title":{},"body":{"classes/AbstractTestPage.html":{},"additional-documentation/getting-started.html":{}}}],["otherwise",{"_index":2839,"title":{},"body":{"interfaces/FileUploaderMsg.html":{},"components/WizardProgressBarComponent.html":{}}}],["out",{"_index":924,"title":{},"body":{"interfaces/AddrLabelList.html":{},"classes/Address.html":{},"modules/CaptchaModule.html":{},"injectables/CheckCompleteBaseService.html":{},"interfaces/CommonLogMessage.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"interfaces/GeoAddressResult.html":{},"components/GeocoderInputComponent.html":{},"injectables/GeocoderService.html":{},"interfaces/ISpaEnvResponse.html":{},"interfaces/Maxlengths.html":{},"interfaces/PageListInterface.html":{},"interfaces/ReadOnlyFields.html":{},"modules/SharedCoreModule.html":{},"components/WizardProgressBarComponent.html":{},"changelog.html":{},"overview.html":{}}}],["outlying",{"_index":2377,"title":{},"body":{"interfaces/CountryList.html":{}}}],["output",{"_index":788,"title":{},"body":{"interfaces/AddrLabelList.html":{},"components/ButtonComponent.html":{},"components/ButtonGroupComponent.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"interfaces/CountryList.html":{},"interfaces/DateErrorMsg.html":{},"directives/DateFieldFormatDirective.html":{},"components/DatepickerComponent.html":{},"components/EmailComponent.html":{},"interfaces/FileUploaderMsg.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/FullNameComponent.html":{},"interfaces/FullNameErrorMsg.html":{},"components/GeocoderInputComponent.html":{},"interfaces/IRadioItems.html":{},"interfaces/ISpaEnvResponse.html":{},"interfaces/Maxlengths.html":{},"components/NameComponent.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{},"components/RadioComponent.html":{},"interfaces/ReadOnlyFields.html":{},"components/SinComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/XiconButtonComponent.html":{},"todo.html":{},"additional-documentation/local-development/components.html":{}}}],["outputs",{"_index":1101,"title":{},"body":{"components/ButtonComponent.html":{},"components/ButtonGroupComponent.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"directives/DateFieldFormatDirective.html":{},"components/DatepickerComponent.html":{},"components/EmailComponent.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/FullNameComponent.html":{},"components/GeocoderInputComponent.html":{},"components/NameComponent.html":{},"components/PasswordComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"components/RadioComponent.html":{},"components/SinComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/XiconButtonComponent.html":{}}}],["outside",{"_index":3281,"title":{},"body":{"components/FormActionBarComponent.html":{},"components/WizardProgressBarComponent.html":{}}}],["over",{"_index":2999,"title":{},"body":{"interfaces/FileUploaderMsg.html":{},"components/GeocoderInputComponent.html":{}}}],["override",{"_index":542,"title":{},"body":{"classes/AbstractTestPage.html":{},"interfaces/FileUploaderMsg.html":{},"changelog.html":{}}}],["overrided",{"_index":408,"title":{},"body":{"classes/AbstractReactForm.html":{}}}],["overridesscss",{"_index":5363,"title":{},"body":{"coverage.html":{}}}],["overview",{"_index":5469,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["overwrite",{"_index":475,"title":{},"body":{"classes/AbstractTestPage.html":{},"classes/Address.html":{},"interfaces/CommonLogMessage.html":{}}}],["overwritefile",{"_index":5372,"title":{},"body":{"coverage.html":{}}}],["overwritten",{"_index":485,"title":{},"body":{"classes/AbstractTestPage.html":{},"changelog.html":{}}}],["pa",{"_index":3726,"title":{},"body":{"interfaces/ISpaEnvResponse.html":{},"changelog.html":{}}}],["package",{"_index":1073,"title":{"dependencies.html":{}},"body":{"classes/Base.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"classes/Person.html":{},"changelog.html":{},"additional-documentation/local-development/components.html":{}}}],["package.json",{"_index":5181,"title":{},"body":{"changelog.html":{},"additional-documentation/local-development/schematics.html":{},"additional-documentation/local-development/components.html":{}}}],["package.jsoncreating",{"_index":5545,"title":{},"body":{"additional-documentation/local-development/schematics.html":{}}}],["packaging",{"_index":5223,"title":{},"body":{"changelog.html":{}}}],["pacutoff",{"_index":4595,"title":{},"body":{"changelog.html":{}}}],["padding",{"_index":5006,"title":{},"body":{"changelog.html":{}}}],["page",{"_index":57,"title":{"additional-documentation/getting-started.html":{},"additional-documentation/local-development.html":{},"additional-documentation/local-development/schematics.html":{},"additional-documentation/local-development/components.html":{}},"body":{"classes/AbstractBaseForm.html":{},"classes/AbstractForm.html":{},"injectables/AbstractPageGuardService.html":{},"classes/AbstractReactForm.html":{},"classes/AbstractTestPage.html":{},"components/AccordionCommonComponent.html":{},"components/ButtonComponent.html":{},"components/ButtonGroupComponent.html":{},"injectables/CheckCompleteBaseService.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"components/ConfirmTemplateComponent.html":{},"components/CoreBreadcrumbComponent.html":{},"components/DatepickerComponent.html":{},"injectables/DefaultPageGuardService.html":{},"components/DropdownComponent.html":{},"components/EmailComponent.html":{},"components/ErrorContainerComponent.html":{},"interfaces/FileUploaderMsg.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/FullNameComponent.html":{},"components/GeocoderInputComponent.html":{},"components/HeaderComponent.html":{},"guards/LoadPageGuardService.html":{},"components/NameComponent.html":{},"components/PageFrameworkComponent.html":{},"interfaces/PageList.html":{},"interfaces/PageListInterface.html":{},"components/PageSectionComponent.html":{},"injectables/PageStateService.html":{},"components/PasswordComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"components/RadioComponent.html":{},"guards/RouteGuardService.html":{},"components/SampleModalComponent.html":{},"components/SinComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{},"components/XiconButtonComponent.html":{},"changelog.html":{},"coverage.html":{},"additional-documentation/local-development/schematics.html":{}}}],["page.path",{"_index":1781,"title":{},"body":{"classes/Container.html":{},"interfaces/WizardProgressItem.html":{}}}],["page.ts",{"_index":433,"title":{},"body":{"classes/AbstractTestPage.html":{},"coverage.html":{}}}],["page.ts:102",{"_index":594,"title":{},"body":{"classes/AbstractTestPage.html":{}}}],["page.ts:113",{"_index":603,"title":{},"body":{"classes/AbstractTestPage.html":{}}}],["page.ts:122",{"_index":500,"title":{},"body":{"classes/AbstractTestPage.html":{}}}],["page.ts:13",{"_index":470,"title":{},"body":{"classes/AbstractTestPage.html":{}}}],["page.ts:130",{"_index":506,"title":{},"body":{"classes/AbstractTestPage.html":{}}}],["page.ts:138",{"_index":486,"title":{},"body":{"classes/AbstractTestPage.html":{}}}],["page.ts:146",{"_index":512,"title":{},"body":{"classes/AbstractTestPage.html":{}}}],["page.ts:153",{"_index":493,"title":{},"body":{"classes/AbstractTestPage.html":{}}}],["page.ts:160",{"_index":563,"title":{},"body":{"classes/AbstractTestPage.html":{}}}],["page.ts:169",{"_index":606,"title":{},"body":{"classes/AbstractTestPage.html":{}}}],["page.ts:178",{"_index":514,"title":{},"body":{"classes/AbstractTestPage.html":{}}}],["page.ts:18",{"_index":479,"title":{},"body":{"classes/AbstractTestPage.html":{}}}],["page.ts:186",{"_index":519,"title":{},"body":{"classes/AbstractTestPage.html":{}}}],["page.ts:32",{"_index":541,"title":{},"body":{"classes/AbstractTestPage.html":{}}}],["page.ts:34",{"_index":517,"title":{},"body":{"classes/AbstractTestPage.html":{}}}],["page.ts:38",{"_index":524,"title":{},"body":{"classes/AbstractTestPage.html":{}}}],["page.ts:43",{"_index":560,"title":{},"body":{"classes/AbstractTestPage.html":{}}}],["page.ts:47",{"_index":516,"title":{},"body":{"classes/AbstractTestPage.html":{}}}],["page.ts:60",{"_index":526,"title":{},"body":{"classes/AbstractTestPage.html":{}}}],["page.ts:72",{"_index":538,"title":{},"body":{"classes/AbstractTestPage.html":{}}}],["page.ts:76",{"_index":523,"title":{},"body":{"classes/AbstractTestPage.html":{}}}],["page.ts:91",{"_index":567,"title":{},"body":{"classes/AbstractTestPage.html":{}}}],["pagechecklist",{"_index":1229,"title":{},"body":{"injectables/CheckCompleteBaseService.html":{},"interfaces/PageListInterface.html":{}}}],["pageframework",{"_index":5012,"title":{},"body":{"changelog.html":{}}}],["pageframeworkcomponent",{"_index":726,"title":{"components/PageFrameworkComponent.html":{}},"body":{"components/AccordionCommonComponent.html":{},"components/ButtonComponent.html":{},"components/ButtonGroupComponent.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"components/ConfirmTemplateComponent.html":{},"components/CoreBreadcrumbComponent.html":{},"components/DatepickerComponent.html":{},"components/DropdownComponent.html":{},"components/EmailComponent.html":{},"components/ErrorContainerComponent.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/FullNameComponent.html":{},"components/GeocoderInputComponent.html":{},"components/HeaderComponent.html":{},"components/NameComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"components/RadioComponent.html":{},"components/SampleModalComponent.html":{},"modules/SharedCoreModule.html":{},"components/SinComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{},"components/XiconButtonComponent.html":{},"coverage.html":{},"overview.html":{}}}],["pagelist",{"_index":3868,"title":{"interfaces/PageList.html":{}},"body":{"interfaces/PageList.html":{},"injectables/PageStateService.html":{},"coverage.html":{}}}],["pagelistinterface",{"_index":1262,"title":{"interfaces/PageListInterface.html":{}},"body":{"injectables/CheckCompleteBaseService.html":{},"interfaces/PageListInterface.html":{},"coverage.html":{}}}],["pagelistisclear",{"_index":3898,"title":{},"body":{"interfaces/PageList.html":{},"injectables/PageStateService.html":{}}}],["pagenumber",{"_index":3049,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["pageroutes",{"_index":1766,"title":{},"body":{"classes/Container.html":{},"interfaces/WizardProgressItem.html":{}}}],["pageroutes.map(page",{"_index":1780,"title":{},"body":{"classes/Container.html":{},"interfaces/WizardProgressItem.html":{}}}],["pages",{"_index":1246,"title":{},"body":{"injectables/CheckCompleteBaseService.html":{},"classes/Container.html":{},"components/PageFrameworkComponent.html":{},"interfaces/PageList.html":{},"interfaces/PageListInterface.html":{},"injectables/PageStateService.html":{},"interfaces/WizardProgressItem.html":{},"changelog.html":{}}}],["pagesection",{"_index":4842,"title":{},"body":{"changelog.html":{}}}],["pagesectioncomponent",{"_index":728,"title":{"components/PageSectionComponent.html":{}},"body":{"components/AccordionCommonComponent.html":{},"components/ButtonComponent.html":{},"components/ButtonGroupComponent.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"components/ConfirmTemplateComponent.html":{},"components/CoreBreadcrumbComponent.html":{},"components/DatepickerComponent.html":{},"components/DropdownComponent.html":{},"components/EmailComponent.html":{},"components/ErrorContainerComponent.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/FullNameComponent.html":{},"components/GeocoderInputComponent.html":{},"components/HeaderComponent.html":{},"components/NameComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"components/RadioComponent.html":{},"components/SampleModalComponent.html":{},"modules/SharedCoreModule.html":{},"components/SinComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{},"components/XiconButtonComponent.html":{},"coverage.html":{},"overview.html":{}}}],["pagestateservice",{"_index":1718,"title":{"injectables/PageStateService.html":{}},"body":{"classes/Container.html":{},"injectables/DefaultPageGuardService.html":{},"guards/LoadPageGuardService.html":{},"interfaces/PageList.html":{},"injectables/PageStateService.html":{},"interfaces/WizardProgressItem.html":{},"coverage.html":{}}}],["pageurl",{"_index":3799,"title":{},"body":{"guards/LoadPageGuardService.html":{},"guards/RouteGuardService.html":{}}}],["pains",{"_index":5439,"title":{},"body":{"index.html":{}}}],["pak",{"_index":2218,"title":{},"body":{"interfaces/CountryList.html":{}}}],["pakistan",{"_index":2219,"title":{},"body":{"interfaces/CountryList.html":{}}}],["palau",{"_index":2221,"title":{},"body":{"interfaces/CountryList.html":{}}}],["palestinian",{"_index":2223,"title":{},"body":{"interfaces/CountryList.html":{}}}],["pan",{"_index":2225,"title":{},"body":{"interfaces/CountryList.html":{}}}],["panama",{"_index":2226,"title":{},"body":{"interfaces/CountryList.html":{}}}],["papua",{"_index":2228,"title":{},"body":{"interfaces/CountryList.html":{}}}],["paraguay",{"_index":2230,"title":{},"body":{"interfaces/CountryList.html":{}}}],["param",{"_index":214,"title":{},"body":{"classes/AbstractFormControl.html":{},"classes/AbstractHttpService.html":{},"classes/AbstractTestPage.html":{},"interfaces/AddrLabelList.html":{},"interfaces/CommonAttachmentJson.html":{},"classes/CommonImage.html":{},"classes/CommonImageProcessingError.html":{},"interfaces/CommonImageScaleFactors.html":{},"classes/CommonImageScaleFactorsImpl.html":{},"interfaces/CommonLogMessage.html":{},"interfaces/FileUploaderMsg.html":{},"interfaces/GeoAddressResult.html":{},"injectables/GeocoderService.html":{},"interfaces/Maxlengths.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"interfaces/ReadOnlyFields.html":{},"directives/ValidateNameDirective.html":{},"changelog.html":{}}}],["parameter",{"_index":413,"title":{},"body":{"classes/AbstractReactForm.html":{},"injectables/ContainerService.html":{},"interfaces/PageList.html":{},"injectables/PageStateService.html":{}}}],["parameters",{"_index":24,"title":{},"body":{"classes/AbstractBaseForm.html":{},"classes/AbstractForm.html":{},"classes/AbstractFormControl.html":{},"classes/AbstractHttpService.html":{},"injectables/AbstractPageGuardService.html":{},"injectables/AbstractPgCheckService.html":{},"classes/AbstractReactForm.html":{},"classes/AbstractTestPage.html":{},"classes/Address.html":{},"components/ButtonComponent.html":{},"components/ButtonGroupComponent.html":{},"injectables/CaptchaDataService.html":{},"injectables/CheckCompleteBaseService.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"classes/CommonImage.html":{},"classes/CommonImageProcessingError.html":{},"interfaces/CommonImageScaleFactors.html":{},"classes/CommonImageScaleFactorsImpl.html":{},"classes/Container.html":{},"injectables/ContainerService.html":{},"components/DatepickerComponent.html":{},"injectables/DefaultPageGuardService.html":{},"components/DropdownComponent.html":{},"directives/DuplicateCheckDirective.html":{},"components/EmailComponent.html":{},"components/FormActionBarComponent.html":{},"components/FullNameComponent.html":{},"components/GeocoderInputComponent.html":{},"injectables/GeocoderService.html":{},"components/HeaderComponent.html":{},"guards/LoadPageGuardService.html":{},"classes/MoHCommonLibraryError.html":{},"components/NameComponent.html":{},"injectables/PageStateService.html":{},"components/PasswordComponent.html":{},"classes/Person.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"components/RadioComponent.html":{},"guards/RouteGuardService.html":{},"components/SinComponent.html":{},"components/ThumbnailComponent.html":{},"directives/ValidateBcPostalDirective.html":{},"directives/ValidateCityDirective.html":{},"directives/ValidateNameDirective.html":{},"directives/ValidatePostalcodeDirective.html":{},"directives/ValidateRegionDirective.html":{},"directives/ValidateStreetDirective.html":{},"components/WizardProgressBarComponent.html":{},"changelog.html":{}}}],["params",{"_index":62,"title":{},"body":{"classes/AbstractBaseForm.html":{},"classes/AbstractForm.html":{},"classes/AbstractHttpService.html":{},"classes/AbstractReactForm.html":{},"interfaces/GeoAddressResult.html":{},"injectables/GeocoderService.html":{},"additional-documentation/local-development/schematics.html":{}}}],["params).pipe(map(this.processresponse",{"_index":3398,"title":{},"body":{"interfaces/GeoAddressResult.html":{},"injectables/GeocoderService.html":{}}}],["parent",{"_index":816,"title":{},"body":{"interfaces/AddrLabelList.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"interfaces/FileUploaderMsg.html":{},"interfaces/Maxlengths.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"interfaces/ReadOnlyFields.html":{}}}],["parents",{"_index":139,"title":{},"body":{"classes/AbstractFormControl.html":{},"interfaces/AddrLabelList.html":{},"classes/Base.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"components/ConfirmTemplateComponent.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"components/DropdownComponent.html":{},"components/EmailComponent.html":{},"components/FullNameComponent.html":{},"components/GeocoderInputComponent.html":{},"interfaces/Maxlengths.html":{},"components/NameComponent.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"classes/Person.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"components/RadioComponent.html":{},"interfaces/ReadOnlyFields.html":{},"components/SampleModalComponent.html":{},"components/SinComponent.html":{},"components/ToggleComponent.html":{}}}],["pariatur",{"_index":1448,"title":{},"body":{"components/CityComponent.html":{},"interfaces/CountryList.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"interfaces/FileUploaderMsg.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{}}}],["parseint(scaledwidthstring",{"_index":4441,"title":{},"body":{"components/ThumbnailComponent.html":{}}}],["parseint(this.maxlength",{"_index":3527,"title":{},"body":{"components/GeocoderInputComponent.html":{}}}],["parsing",{"_index":1673,"title":{},"body":{"interfaces/CommonLogMessage.html":{},"changelog.html":{}}}],["part",{"_index":1757,"title":{},"body":{"classes/Container.html":{},"interfaces/CountryList.html":{},"interfaces/WizardProgressItem.html":{}}}],["parts",{"_index":4101,"title":{},"body":{"classes/Person.html":{},"additional-documentation/local-development/components.html":{}}}],["pass",{"_index":558,"title":{},"body":{"classes/AbstractTestPage.html":{},"components/ButtonComponent.html":{},"interfaces/FileUploaderMsg.html":{},"components/GeocoderInputComponent.html":{}}}],["passed",{"_index":43,"title":{},"body":{"classes/AbstractBaseForm.html":{},"classes/AbstractForm.html":{},"classes/AbstractReactForm.html":{},"injectables/ContainerService.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"components/GeocoderInputComponent.html":{},"interfaces/ISpaEnvResponse.html":{},"changelog.html":{}}}],["passes",{"_index":4003,"title":{},"body":{"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"changelog.html":{}}}],["passing",{"_index":4019,"title":{},"body":{"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"changelog.html":{}}}],["password",{"_index":1499,"title":{},"body":{"interfaces/CommonAttachmentJson.html":{},"classes/CommonImage.html":{},"classes/CommonImageProcessingError.html":{},"interfaces/CommonImageScaleFactors.html":{},"classes/CommonImageScaleFactorsImpl.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{}}}],["password'},{'name",{"_index":731,"title":{},"body":{"components/AccordionCommonComponent.html":{},"components/ButtonComponent.html":{},"components/ButtonGroupComponent.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"components/ConfirmTemplateComponent.html":{},"components/CoreBreadcrumbComponent.html":{},"components/DatepickerComponent.html":{},"components/DropdownComponent.html":{},"components/EmailComponent.html":{},"components/ErrorContainerComponent.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/FullNameComponent.html":{},"components/GeocoderInputComponent.html":{},"components/HeaderComponent.html":{},"components/NameComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"components/RadioComponent.html":{},"components/SampleModalComponent.html":{},"components/SinComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{},"components/XiconButtonComponent.html":{}}}],["password.component.html",{"_index":3958,"title":{},"body":{"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{}}}],["password.component.scss",{"_index":3957,"title":{},"body":{"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{}}}],["password_",{"_index":3981,"title":{},"body":{"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{}}}],["passwordchange",{"_index":3956,"title":{},"body":{"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{}}}],["passwordcomponent",{"_index":730,"title":{"components/PasswordComponent.html":{}},"body":{"components/AccordionCommonComponent.html":{},"components/ButtonComponent.html":{},"components/ButtonGroupComponent.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"components/ConfirmTemplateComponent.html":{},"components/CoreBreadcrumbComponent.html":{},"components/DatepickerComponent.html":{},"components/DropdownComponent.html":{},"components/EmailComponent.html":{},"components/ErrorContainerComponent.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/FullNameComponent.html":{},"components/GeocoderInputComponent.html":{},"components/HeaderComponent.html":{},"components/NameComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"components/RadioComponent.html":{},"components/SampleModalComponent.html":{},"modules/SharedCoreModule.html":{},"components/SinComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{},"components/XiconButtonComponent.html":{},"changelog.html":{},"coverage.html":{},"overview.html":{}}}],["passworderrormsg",{"_index":3973,"title":{"interfaces/PasswordErrorMsg.html":{}},"body":{"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"coverage.html":{}}}],["past",{"_index":4715,"title":{},"body":{"changelog.html":{}}}],["past/future",{"_index":4603,"title":{},"body":{"changelog.html":{}}}],["pasting",{"_index":4042,"title":{},"body":{"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{}}}],["patch",{"_index":4821,"title":{},"body":{"changelog.html":{}}}],["path",{"_index":3791,"title":{},"body":{"guards/LoadPageGuardService.html":{},"interfaces/PageList.html":{},"injectables/PageStateService.html":{},"guards/RouteGuardService.html":{},"interfaces/SampleImageInterface.html":{},"components/SampleModalComponent.html":{},"changelog.html":{},"additional-documentation/local-development/schematics.html":{}}}],["path.endswith(x.path",{"_index":3906,"title":{},"body":{"interfaces/PageList.html":{},"injectables/PageStateService.html":{}}}],["path.includes(x.path",{"_index":3905,"title":{},"body":{"interfaces/PageList.html":{},"injectables/PageStateService.html":{}}}],["paths",{"_index":5111,"title":{},"body":{"changelog.html":{},"additional-documentation/getting-started.html":{},"additional-documentation/local-development/components.html":{}}}],["pattern",{"_index":3317,"title":{},"body":{"components/FullNameComponent.html":{},"interfaces/FullNameErrorMsg.html":{},"components/PostalCodeComponent.html":{},"directives/ValidatePostalcodeDirective.html":{}}}],["payload",{"_index":1179,"title":{},"body":{"injectables/CaptchaDataService.html":{},"injectables/ServerPayload.html":{}}}],["payload.translation",{"_index":1188,"title":{},"body":{"injectables/CaptchaDataService.html":{},"injectables/ServerPayload.html":{}}}],["pcn",{"_index":2234,"title":{},"body":{"interfaces/CountryList.html":{}}}],["pdf",{"_index":1498,"title":{},"body":{"interfaces/CommonAttachmentJson.html":{},"classes/CommonImage.html":{},"classes/CommonImageProcessingError.html":{},"interfaces/CommonImageScaleFactors.html":{},"classes/CommonImageScaleFactorsImpl.html":{},"interfaces/FileUploaderMsg.html":{},"changelog.html":{}}}],["pdf.good",{"_index":1500,"title":{},"body":{"interfaces/CommonAttachmentJson.html":{},"classes/CommonImage.html":{},"classes/CommonImageProcessingError.html":{},"interfaces/CommonImageScaleFactors.html":{},"classes/CommonImageScaleFactorsImpl.html":{}}}],["pdfdoc.numpages",{"_index":3220,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["pdffile",{"_index":3206,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["pdffile.name",{"_index":3047,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["pdfjs",{"_index":2748,"title":{},"body":{"interfaces/FileUploaderMsg.html":{},"coverage.html":{},"dependencies.html":{}}}],["pdfjs.disablestream",{"_index":3209,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["pdfjs.disableworker",{"_index":3208,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["pdfjs.getdocument((docinitparams",{"_index":3217,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["pdfjs.workersrc=pdfjsworker",{"_index":2785,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["pdfjs_",{"_index":2780,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["pdfjsstatic",{"_index":2747,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["pdfjsworker",{"_index":2783,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["pdfnotsupported",{"_index":1490,"title":{},"body":{"interfaces/CommonAttachmentJson.html":{},"classes/CommonImage.html":{},"classes/CommonImageProcessingError.html":{},"interfaces/CommonImageScaleFactors.html":{},"classes/CommonImageScaleFactorsImpl.html":{},"miscellaneous/enumerations.html":{}}}],["pdfscalefactor",{"_index":3204,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["pe",{"_index":4204,"title":{},"body":{"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{}}}],["people\\'s",{"_index":2117,"title":{},"body":{"interfaces/CountryList.html":{}}}],["per",{"_index":349,"title":{},"body":{"classes/AbstractHttpService.html":{},"interfaces/CountryList.html":{}}}],["performance",{"_index":933,"title":{},"body":{"interfaces/AddrLabelList.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"interfaces/Maxlengths.html":{},"interfaces/ReadOnlyFields.html":{}}}],["period",{"_index":3348,"title":{},"body":{"components/FullNameComponent.html":{},"interfaces/FullNameErrorMsg.html":{}}}],["periods",{"_index":1390,"title":{},"body":{"components/CityComponent.html":{},"interfaces/CountryList.html":{},"components/NameComponent.html":{},"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{}}}],["permissions",{"_index":5466,"title":{},"body":{"license.html":{}}}],["persisted",{"_index":877,"title":{},"body":{"interfaces/AddrLabelList.html":{},"interfaces/Maxlengths.html":{},"interfaces/ReadOnlyFields.html":{}}}],["person",{"_index":2767,"title":{"classes/Person.html":{}},"body":{"interfaces/FileUploaderMsg.html":{},"components/FullNameComponent.html":{},"interfaces/FullNameErrorMsg.html":{},"classes/Person.html":{},"coverage.html":{},"index.html":{}}}],["person's",{"_index":4096,"title":{},"body":{"classes/Person.html":{}}}],["person.model",{"_index":4777,"title":{},"body":{"changelog.html":{}}}],["person.model.ts",{"_index":4361,"title":{},"body":{"interfaces/SimpleDate.html":{}}}],["personal",{"_index":1762,"title":{},"body":{"classes/Container.html":{},"interfaces/ISpaEnvResponse.html":{},"interfaces/WizardProgressItem.html":{}}}],["personchange",{"_index":3322,"title":{},"body":{"components/FullNameComponent.html":{},"interfaces/FullNameErrorMsg.html":{}}}],["pertains",{"_index":3719,"title":{},"body":{"interfaces/ISpaEnvResponse.html":{}}}],["peru",{"_index":2231,"title":{},"body":{"interfaces/CountryList.html":{}}}],["pg",{"_index":385,"title":{},"body":{"injectables/AbstractPgCheckService.html":{},"injectables/CheckCompleteBaseService.html":{},"interfaces/PageListInterface.html":{},"guards/RouteGuardService.html":{},"coverage.html":{}}}],["pharmacare's",{"_index":1039,"title":{},"body":{"classes/Address.html":{}}}],["philippines",{"_index":2233,"title":{},"body":{"interfaces/CountryList.html":{}}}],["phl",{"_index":2232,"title":{},"body":{"interfaces/CountryList.html":{}}}],["phn",{"_index":5003,"title":{},"body":{"changelog.html":{}}}],["phn'},{'name",{"_index":733,"title":{},"body":{"components/AccordionCommonComponent.html":{},"components/ButtonComponent.html":{},"components/ButtonGroupComponent.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"components/ConfirmTemplateComponent.html":{},"components/CoreBreadcrumbComponent.html":{},"components/DatepickerComponent.html":{},"components/DropdownComponent.html":{},"components/EmailComponent.html":{},"components/ErrorContainerComponent.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/FullNameComponent.html":{},"components/GeocoderInputComponent.html":{},"components/HeaderComponent.html":{},"components/NameComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"components/RadioComponent.html":{},"components/SampleModalComponent.html":{},"components/SinComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{},"components/XiconButtonComponent.html":{}}}],["phncomponent",{"_index":732,"title":{},"body":{"components/AccordionCommonComponent.html":{},"components/ButtonComponent.html":{},"components/ButtonGroupComponent.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"components/ConfirmTemplateComponent.html":{},"components/CoreBreadcrumbComponent.html":{},"components/DatepickerComponent.html":{},"components/DropdownComponent.html":{},"components/EmailComponent.html":{},"components/ErrorContainerComponent.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/FullNameComponent.html":{},"components/GeocoderInputComponent.html":{},"components/HeaderComponent.html":{},"components/NameComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"components/RadioComponent.html":{},"components/SampleModalComponent.html":{},"modules/SharedCoreModule.html":{},"components/SinComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{},"components/XiconButtonComponent.html":{},"changelog.html":{},"coverage.html":{},"overview.html":{}}}],["phone",{"_index":735,"title":{},"body":{"components/AccordionCommonComponent.html":{},"components/ButtonComponent.html":{},"components/ButtonGroupComponent.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"components/ConfirmTemplateComponent.html":{},"components/CoreBreadcrumbComponent.html":{},"components/DatepickerComponent.html":{},"components/DropdownComponent.html":{},"components/EmailComponent.html":{},"components/ErrorContainerComponent.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/FullNameComponent.html":{},"components/GeocoderInputComponent.html":{},"components/HeaderComponent.html":{},"components/NameComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"components/RadioComponent.html":{},"components/SampleModalComponent.html":{},"components/SinComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{},"components/XiconButtonComponent.html":{},"changelog.html":{}}}],["phone/radio",{"_index":4749,"title":{},"body":{"changelog.html":{}}}],["phonenumber",{"_index":4762,"title":{},"body":{"changelog.html":{}}}],["phonenumbercomponent",{"_index":734,"title":{},"body":{"components/AccordionCommonComponent.html":{},"components/ButtonComponent.html":{},"components/ButtonGroupComponent.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"components/ConfirmTemplateComponent.html":{},"components/CoreBreadcrumbComponent.html":{},"components/DatepickerComponent.html":{},"components/DropdownComponent.html":{},"components/EmailComponent.html":{},"components/ErrorContainerComponent.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/FullNameComponent.html":{},"components/GeocoderInputComponent.html":{},"components/HeaderComponent.html":{},"components/NameComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"components/RadioComponent.html":{},"components/SampleModalComponent.html":{},"modules/SharedCoreModule.html":{},"components/SinComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{},"components/XiconButtonComponent.html":{},"coverage.html":{},"overview.html":{}}}],["pib",{"_index":3113,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["pierre",{"_index":2271,"title":{},"body":{"interfaces/CountryList.html":{}}}],["pipe",{"_index":3024,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["pipe(filter((evt",{"_index":3022,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["pipe(retrywhen(this.retrystrategy(32",{"_index":3069,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["pitcairn",{"_index":2235,"title":{},"body":{"interfaces/CountryList.html":{}}}],["pixel",{"_index":2915,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["place",{"_index":365,"title":{},"body":{"injectables/AbstractPageGuardService.html":{},"injectables/AbstractPgCheckService.html":{}}}],["placeholder",{"_index":1363,"title":{},"body":{"components/CityComponent.html":{},"interfaces/CountryList.html":{},"components/DropdownComponent.html":{},"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{},"components/SinComponent.html":{},"changelog.html":{}}}],["placeholders",{"_index":4891,"title":{},"body":{"changelog.html":{}}}],["places",{"_index":5488,"title":{},"body":{"todo.html":{}}}],["plan",{"_index":1727,"title":{},"body":{"classes/Container.html":{},"interfaces/WizardProgressItem.html":{}}}],["please",{"_index":2413,"title":{},"body":{"interfaces/CountryList.html":{},"interfaces/FileUploaderMsg.html":{},"interfaces/ISpaEnvResponse.html":{},"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{},"index.html":{}}}],["plurinational",{"_index":1912,"title":{},"body":{"interfaces/CountryList.html":{}}}],["plus",{"_index":833,"title":{},"body":{"interfaces/AddrLabelList.html":{},"interfaces/Maxlengths.html":{},"interfaces/ReadOnlyFields.html":{},"changelog.html":{}}}],["plw",{"_index":2220,"title":{},"body":{"interfaces/CountryList.html":{}}}],["png",{"_index":2227,"title":{},"body":{"interfaces/CountryList.html":{},"interfaces/FileUploaderMsg.html":{}}}],["po",{"_index":851,"title":{},"body":{"interfaces/AddrLabelList.html":{},"interfaces/Maxlengths.html":{},"interfaces/ReadOnlyFields.html":{}}}],["point",{"_index":543,"title":{},"body":{"classes/AbstractTestPage.html":{},"modules/CaptchaModule.html":{},"miscellaneous/enumerations.html":{}}}],["points",{"_index":5099,"title":{},"body":{"changelog.html":{},"additional-documentation/getting-started.html":{}}}],["pol",{"_index":2236,"title":{},"body":{"interfaces/CountryList.html":{}}}],["poland",{"_index":2237,"title":{},"body":{"interfaces/CountryList.html":{}}}],["pollyfills.ts",{"_index":5570,"title":{},"body":{"additional-documentation/local-development/schematics.html":{}}}],["polynesia",{"_index":2031,"title":{},"body":{"interfaces/CountryList.html":{}}}],["poor",{"_index":2443,"title":{},"body":{"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{}}}],["populated",{"_index":3190,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["porting",{"_index":3216,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["portugal",{"_index":2239,"title":{},"body":{"interfaces/CountryList.html":{}}}],["position",{"_index":4638,"title":{},"body":{"changelog.html":{}}}],["possible",{"_index":2438,"title":{},"body":{"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"todo.html":{}}}],["post",{"_index":250,"title":{},"body":{"classes/AbstractHttpService.html":{},"injectables/CaptchaDataService.html":{},"interfaces/CommonLogMessage.html":{},"injectables/GeocoderService.html":{},"injectables/ServerPayload.html":{}}}],["post(url",{"_index":288,"title":{},"body":{"classes/AbstractHttpService.html":{},"injectables/GeocoderService.html":{}}}],["postal",{"_index":738,"title":{},"body":{"components/AccordionCommonComponent.html":{},"interfaces/AddrLabelList.html":{},"classes/Address.html":{},"components/ButtonComponent.html":{},"components/ButtonGroupComponent.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"components/ConfirmTemplateComponent.html":{},"components/CoreBreadcrumbComponent.html":{},"components/DatepickerComponent.html":{},"components/DropdownComponent.html":{},"components/EmailComponent.html":{},"components/ErrorContainerComponent.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/FullNameComponent.html":{},"components/GeocoderInputComponent.html":{},"components/HeaderComponent.html":{},"interfaces/Maxlengths.html":{},"components/NameComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"components/RadioComponent.html":{},"interfaces/ReadOnlyFields.html":{},"components/SampleModalComponent.html":{},"components/SinComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"directives/ValidateBcPostalDirective.html":{},"directives/ValidatePostalcodeDirective.html":{},"components/WizardProgressBarComponent.html":{},"components/XiconButtonComponent.html":{},"changelog.html":{}}}],["postal.directive",{"_index":4327,"title":{},"body":{"modules/SharedCoreModule.html":{}}}],["postal.directive.ts",{"_index":4451,"title":{},"body":{"directives/ValidateBcPostalDirective.html":{},"coverage.html":{}}}],["postal.directive.ts:27",{"_index":4453,"title":{},"body":{"directives/ValidateBcPostalDirective.html":{}}}],["postalcode",{"_index":787,"title":{},"body":{"interfaces/AddrLabelList.html":{},"interfaces/Maxlengths.html":{},"components/PostalCodeComponent.html":{},"interfaces/ReadOnlyFields.html":{},"directives/ValidateBcPostalDirective.html":{},"changelog.html":{}}}],["postalcode.directive",{"_index":4342,"title":{},"body":{"modules/SharedCoreModule.html":{}}}],["postalcode.directive.ts",{"_index":4466,"title":{},"body":{"directives/ValidatePostalcodeDirective.html":{},"coverage.html":{}}}],["postalcode.directive.ts:48",{"_index":4470,"title":{},"body":{"directives/ValidatePostalcodeDirective.html":{}}}],["postalcode.directive.ts:49",{"_index":4469,"title":{},"body":{"directives/ValidatePostalcodeDirective.html":{}}}],["postalcode.directive.ts:51",{"_index":4471,"title":{},"body":{"directives/ValidatePostalcodeDirective.html":{}}}],["postalcode_",{"_index":4130,"title":{},"body":{"components/PostalCodeComponent.html":{}}}],["postalcodebcregex",{"_index":1000,"title":{},"body":{"classes/Address.html":{}}}],["postalcodecomponent",{"_index":737,"title":{"components/PostalCodeComponent.html":{}},"body":{"components/AccordionCommonComponent.html":{},"components/ButtonComponent.html":{},"components/ButtonGroupComponent.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"components/ConfirmTemplateComponent.html":{},"components/CoreBreadcrumbComponent.html":{},"components/DatepickerComponent.html":{},"components/DropdownComponent.html":{},"components/EmailComponent.html":{},"components/ErrorContainerComponent.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/FullNameComponent.html":{},"components/GeocoderInputComponent.html":{},"components/HeaderComponent.html":{},"components/NameComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"components/RadioComponent.html":{},"components/SampleModalComponent.html":{},"modules/SharedCoreModule.html":{},"components/SinComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{},"components/XiconButtonComponent.html":{},"changelog.html":{},"coverage.html":{},"overview.html":{}}}],["potential",{"_index":3067,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["potentially",{"_index":5538,"title":{},"body":{"additional-documentation/local-development/schematics.html":{}}}],["power",{"_index":3033,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["pr",{"_index":5236,"title":{},"body":{"changelog.html":{}}}],["pr#13",{"_index":5122,"title":{},"body":{"changelog.html":{}}}],["practice",{"_index":3554,"title":{},"body":{"components/HeaderComponent.html":{}}}],["practitioner_registration_pages",{"_index":1722,"title":{},"body":{"classes/Container.html":{},"interfaces/WizardProgressItem.html":{}}}],["pre",{"_index":4243,"title":{},"body":{"guards/RouteGuardService.html":{}}}],["preceding",{"_index":2986,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["prefixes",{"_index":4637,"title":{},"body":{"changelog.html":{}}}],["premium",{"_index":1731,"title":{},"body":{"classes/Container.html":{},"interfaces/ISpaEnvResponse.html":{},"interfaces/WizardProgressItem.html":{}}}],["prerequisites",{"_index":1253,"title":{},"body":{"injectables/CheckCompleteBaseService.html":{},"interfaces/PageListInterface.html":{}}}],["present",{"_index":3954,"title":{},"body":{"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{}}}],["preservesymlinks",{"_index":5029,"title":{},"body":{"changelog.html":{},"additional-documentation/local-development/schematics.html":{},"additional-documentation/local-development/components.html":{}}}],["prevent",{"_index":4041,"title":{},"body":{"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{}}}],["preversion",{"_index":5571,"title":{},"body":{"additional-documentation/local-development/schematics.html":{}}}],["previous",{"_index":1293,"title":{},"body":{"injectables/CheckCompleteBaseService.html":{},"guards/LoadPageGuardService.html":{},"interfaces/PageListInterface.html":{},"guards/RouteGuardService.html":{},"changelog.html":{}}}],["previously",{"_index":3089,"title":{},"body":{"interfaces/FileUploaderMsg.html":{},"changelog.html":{}}}],["pri",{"_index":2240,"title":{},"body":{"interfaces/CountryList.html":{}}}],["primarily",{"_index":4508,"title":{},"body":{"components/WizardProgressBarComponent.html":{}}}],["primary",{"_index":1104,"title":{},"body":{"components/ButtonComponent.html":{}}}],["prime",{"_index":533,"title":{},"body":{"classes/AbstractTestPage.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"changelog.html":{},"additional-documentation/local-development/components.html":{}}}],["prince",{"_index":4205,"title":{},"body":{"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{}}}],["principe",{"_index":2283,"title":{},"body":{"interfaces/CountryList.html":{}}}],["print",{"_index":1034,"title":{},"body":{"classes/Address.html":{}}}],["printed",{"_index":1031,"title":{},"body":{"classes/Address.html":{}}}],["prior",{"_index":5539,"title":{},"body":{"additional-documentation/local-development/schematics.html":{},"additional-documentation/local-development/components.html":{}}}],["priority",{"_index":5558,"title":{},"body":{"additional-documentation/local-development/schematics.html":{}}}],["privacy",{"_index":3679,"title":{},"body":{"interfaces/ISpaEnvResponse.html":{}}}],["private",{"_index":128,"title":{},"body":{"classes/AbstractFormControl.html":{},"classes/AbstractReactForm.html":{},"interfaces/AddrLabelList.html":{},"injectables/CaptchaDataService.html":{},"injectables/CheckCompleteBaseService.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"interfaces/CommonLogMessage.html":{},"classes/Container.html":{},"interfaces/CountryList.html":{},"injectables/DefaultPageGuardService.html":{},"components/EmailComponent.html":{},"interfaces/FileUploaderMsg.html":{},"components/FullNameComponent.html":{},"interfaces/FullNameErrorMsg.html":{},"components/GeocoderInputComponent.html":{},"components/HeaderComponent.html":{},"interfaces/ISpaEnvResponse.html":{},"guards/LoadPageGuardService.html":{},"interfaces/Maxlengths.html":{},"components/NameComponent.html":{},"interfaces/PageList.html":{},"interfaces/PageListInterface.html":{},"injectables/PageStateService.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"components/RadioComponent.html":{},"interfaces/ReadOnlyFields.html":{},"guards/RouteGuardService.html":{},"injectables/ServerPayload.html":{},"components/SinComponent.html":{},"components/ThumbnailComponent.html":{},"components/WizardProgressBarComponent.html":{},"interfaces/WizardProgressItem.html":{}}}],["prk",{"_index":2115,"title":{},"body":{"interfaces/CountryList.html":{}}}],["probably",{"_index":3197,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["problem",{"_index":3924,"title":{},"body":{"components/PageSectionComponent.html":{}}}],["proceed",{"_index":1257,"title":{},"body":{"injectables/CheckCompleteBaseService.html":{},"interfaces/ISpaEnvResponse.html":{},"guards/LoadPageGuardService.html":{},"interfaces/PageListInterface.html":{},"guards/RouteGuardService.html":{}}}],["processing",{"_index":2863,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["processname",{"_index":3697,"title":{},"body":{"interfaces/ISpaEnvResponse.html":{}}}],["processresponse",{"_index":3531,"title":{},"body":{"injectables/GeocoderService.html":{}}}],["processresponse(obj",{"_index":3403,"title":{},"body":{"interfaces/GeoAddressResult.html":{},"injectables/GeocoderService.html":{}}}],["program",{"_index":1589,"title":{},"body":{"interfaces/CommonLogMessage.html":{},"miscellaneous/enumerations.html":{}}}],["programname",{"_index":1600,"title":{},"body":{"interfaces/CommonLogMessage.html":{}}}],["progress",{"_index":756,"title":{},"body":{"components/AccordionCommonComponent.html":{},"components/ButtonComponent.html":{},"components/ButtonGroupComponent.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"components/ConfirmTemplateComponent.html":{},"classes/Container.html":{},"components/CoreBreadcrumbComponent.html":{},"components/DatepickerComponent.html":{},"components/DropdownComponent.html":{},"components/EmailComponent.html":{},"components/ErrorContainerComponent.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/FullNameComponent.html":{},"components/GeocoderInputComponent.html":{},"components/HeaderComponent.html":{},"components/NameComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"components/RadioComponent.html":{},"components/SampleModalComponent.html":{},"modules/SharedCoreModule.html":{},"components/SinComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{},"interfaces/WizardProgressItem.html":{},"components/XiconButtonComponent.html":{},"coverage.html":{}}}],["progressbarmodule",{"_index":4283,"title":{},"body":{"modules/SharedCoreModule.html":{}}}],["progressbarmodule.forroot",{"_index":4352,"title":{},"body":{"modules/SharedCoreModule.html":{}}}],["progressevent",{"_index":3183,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["progressevt",{"_index":3182,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["progresssteps",{"_index":1738,"title":{},"body":{"classes/Container.html":{},"components/WizardProgressBarComponent.html":{},"interfaces/WizardProgressItem.html":{}}}],["project",{"_index":993,"title":{},"body":{"classes/Address.html":{},"classes/Person.html":{},"additional-documentation/local-development/schematics.html":{},"additional-documentation/local-development/components.html":{}}}],["project>architect>build>options",{"_index":5617,"title":{},"body":{"additional-documentation/local-development/components.html":{}}}],["projects",{"_index":4621,"title":{},"body":{"changelog.html":{},"additional-documentation/local-development/schematics.html":{},"additional-documentation/local-development/components.html":{}}}],["projects/.../captcha.component.ts",{"_index":5414,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["projects/.../confirm",{"_index":5412,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["projects/.../datepicker.component.ts",{"_index":5417,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["projects/.../images.model.ts",{"_index":5415,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["projects/.../logger.service.ts",{"_index":5416,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["projects/common/captcha/src/captcha",{"_index":1158,"title":{},"body":{"injectables/CaptchaDataService.html":{},"injectables/ServerPayload.html":{},"coverage.html":{}}}],["projects/common/captcha/src/captcha.component.ts",{"_index":5253,"title":{},"body":{"coverage.html":{},"miscellaneous/enumerations.html":{}}}],["projects/common/captcha/src/captcha.module.ts",{"_index":1202,"title":{},"body":{"modules/CaptchaModule.html":{}}}],["projects/common/captcha/src/captcha.module.ts:27",{"_index":1204,"title":{},"body":{"modules/CaptchaModule.html":{}}}],["projects/common/e2e/src/abstract",{"_index":431,"title":{},"body":{"classes/AbstractTestPage.html":{},"coverage.html":{}}}],["projects/common/helpers/library",{"_index":3810,"title":{},"body":{"classes/MoHCommonLibraryError.html":{},"coverage.html":{}}}],["projects/common/helpers/scroll",{"_index":5258,"title":{},"body":{"coverage.html":{}}}],["projects/common/helpers/test",{"_index":5262,"title":{},"body":{"coverage.html":{}}}],["projects/common/lib/components/accordion/accordion.component.ts",{"_index":656,"title":{},"body":{"components/AccordionCommonComponent.html":{},"coverage.html":{}}}],["projects/common/lib/components/accordion/accordion.component.ts:21",{"_index":670,"title":{},"body":{"components/AccordionCommonComponent.html":{}}}],["projects/common/lib/components/accordion/accordion.component.ts:22",{"_index":669,"title":{},"body":{"components/AccordionCommonComponent.html":{}}}],["projects/common/lib/components/accordion/accordion.component.ts:24",{"_index":674,"title":{},"body":{"components/AccordionCommonComponent.html":{}}}],["projects/common/lib/components/accordion/accordion.component.ts:25",{"_index":671,"title":{},"body":{"components/AccordionCommonComponent.html":{}}}],["projects/common/lib/components/accordion/accordion.component.ts:26",{"_index":668,"title":{},"body":{"components/AccordionCommonComponent.html":{}}}],["projects/common/lib/components/address/address.component.ts",{"_index":782,"title":{},"body":{"interfaces/AddrLabelList.html":{},"interfaces/Maxlengths.html":{},"interfaces/ReadOnlyFields.html":{},"coverage.html":{}}}],["projects/common/lib/components/button",{"_index":1118,"title":{},"body":{"components/ButtonGroupComponent.html":{},"coverage.html":{}}}],["projects/common/lib/components/button/button.component.ts",{"_index":1077,"title":{},"body":{"components/ButtonComponent.html":{},"coverage.html":{}}}],["projects/common/lib/components/button/button.component.ts:36",{"_index":1106,"title":{},"body":{"components/ButtonComponent.html":{}}}],["projects/common/lib/components/button/button.component.ts:37",{"_index":1107,"title":{},"body":{"components/ButtonComponent.html":{}}}],["projects/common/lib/components/button/button.component.ts:38",{"_index":1108,"title":{},"body":{"components/ButtonComponent.html":{}}}],["projects/common/lib/components/button/button.component.ts:39",{"_index":1109,"title":{},"body":{"components/ButtonComponent.html":{}}}],["projects/common/lib/components/button/button.component.ts:40",{"_index":1103,"title":{},"body":{"components/ButtonComponent.html":{}}}],["projects/common/lib/components/button/button.component.ts:44",{"_index":1110,"title":{},"body":{"components/ButtonComponent.html":{}}}],["projects/common/lib/components/button/button.component.ts:47",{"_index":1112,"title":{},"body":{"components/ButtonComponent.html":{}}}],["projects/common/lib/components/checkbox/checkbox.component.ts",{"_index":1304,"title":{},"body":{"components/CheckboxComponent.html":{},"coverage.html":{}}}],["projects/common/lib/components/checkbox/checkbox.component.ts:27",{"_index":1341,"title":{},"body":{"components/CheckboxComponent.html":{}}}],["projects/common/lib/components/checkbox/checkbox.component.ts:32",{"_index":1312,"title":{},"body":{"components/CheckboxComponent.html":{}}}],["projects/common/lib/components/checkbox/checkbox.component.ts:33",{"_index":1316,"title":{},"body":{"components/CheckboxComponent.html":{}}}],["projects/common/lib/components/checkbox/checkbox.component.ts:34",{"_index":1317,"title":{},"body":{"components/CheckboxComponent.html":{}}}],["projects/common/lib/components/checkbox/checkbox.component.ts:35",{"_index":1321,"title":{},"body":{"components/CheckboxComponent.html":{}}}],["projects/common/lib/components/checkbox/checkbox.component.ts:36",{"_index":1338,"title":{},"body":{"components/CheckboxComponent.html":{}}}],["projects/common/lib/components/checkbox/checkbox.component.ts:38",{"_index":1336,"title":{},"body":{"components/CheckboxComponent.html":{}}}],["projects/common/lib/components/checkbox/checkbox.component.ts:40",{"_index":1311,"title":{},"body":{"components/CheckboxComponent.html":{}}}],["projects/common/lib/components/checkbox/checkbox.component.ts:42",{"_index":1340,"title":{},"body":{"components/CheckboxComponent.html":{}}}],["projects/common/lib/components/checkbox/checkbox.component.ts:49",{"_index":1323,"title":{},"body":{"components/CheckboxComponent.html":{}}}],["projects/common/lib/components/checkbox/checkbox.component.ts:53",{"_index":1325,"title":{},"body":{"components/CheckboxComponent.html":{}}}],["projects/common/lib/components/checkbox/checkbox.component.ts:60",{"_index":1322,"title":{},"body":{"components/CheckboxComponent.html":{}}}],["projects/common/lib/components/checkbox/checkbox.component.ts:64",{"_index":1326,"title":{},"body":{"components/CheckboxComponent.html":{}}}],["projects/common/lib/components/city/city.component.ts",{"_index":1357,"title":{},"body":{"components/CityComponent.html":{},"coverage.html":{}}}],["projects/common/lib/components/city/city.component.ts:14",{"_index":1367,"title":{},"body":{"components/CityComponent.html":{}}}],["projects/common/lib/components/city/city.component.ts:15",{"_index":1372,"title":{},"body":{"components/CityComponent.html":{}}}],["projects/common/lib/components/city/city.component.ts:16",{"_index":1370,"title":{},"body":{"components/CityComponent.html":{}}}],["projects/common/lib/components/city/city.component.ts:17",{"_index":1373,"title":{},"body":{"components/CityComponent.html":{}}}],["projects/common/lib/components/city/city.component.ts:20",{"_index":1374,"title":{},"body":{"components/CityComponent.html":{}}}],["projects/common/lib/components/city/city.component.ts:25",{"_index":1396,"title":{},"body":{"components/CityComponent.html":{}}}],["projects/common/lib/components/city/city.component.ts:29",{"_index":1376,"title":{},"body":{"components/CityComponent.html":{}}}],["projects/common/lib/components/city/city.component.ts:30",{"_index":1375,"title":{},"body":{"components/CityComponent.html":{}}}],["projects/common/lib/components/city/city.component.ts:32",{"_index":1393,"title":{},"body":{"components/CityComponent.html":{}}}],["projects/common/lib/components/city/city.component.ts:34",{"_index":1392,"title":{},"body":{"components/CityComponent.html":{}}}],["projects/common/lib/components/city/city.component.ts:38",{"_index":1366,"title":{},"body":{"components/CityComponent.html":{}}}],["projects/common/lib/components/city/city.component.ts:40",{"_index":1394,"title":{},"body":{"components/CityComponent.html":{}}}],["projects/common/lib/components/city/city.component.ts:47",{"_index":1377,"title":{},"body":{"components/CityComponent.html":{}}}],["projects/common/lib/components/city/city.component.ts:51",{"_index":1381,"title":{},"body":{"components/CityComponent.html":{}}}],["projects/common/lib/components/city/city.component.ts:57",{"_index":1379,"title":{},"body":{"components/CityComponent.html":{}}}],["projects/common/lib/components/city/city.component.ts:62",{"_index":1382,"title":{},"body":{"components/CityComponent.html":{}}}],["projects/common/lib/components/city/validate",{"_index":4456,"title":{},"body":{"directives/ValidateCityDirective.html":{},"coverage.html":{}}}],["projects/common/lib/components/confirm",{"_index":1687,"title":{},"body":{"components/ConfirmTemplateComponent.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{}}}],["projects/common/lib/components/consent",{"_index":3622,"title":{},"body":{"interfaces/ISpaEnvResponse.html":{},"coverage.html":{}}}],["projects/common/lib/components/core",{"_index":1831,"title":{},"body":{"components/CoreBreadcrumbComponent.html":{},"coverage.html":{}}}],["projects/common/lib/components/country/country.component.ts",{"_index":1853,"title":{},"body":{"interfaces/CountryList.html":{},"coverage.html":{}}}],["projects/common/lib/components/date/date",{"_index":2549,"title":{},"body":{"directives/DateFieldFormatDirective.html":{},"coverage.html":{}}}],["projects/common/lib/components/date/date.component.ts",{"_index":5289,"title":{},"body":{"coverage.html":{}}}],["projects/common/lib/components/datepicker/datepicker.component.ts",{"_index":2420,"title":{},"body":{"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{}}}],["projects/common/lib/components/datepicker/datepicker.component.ts:103",{"_index":2603,"title":{},"body":{"components/DatepickerComponent.html":{}}}],["projects/common/lib/components/datepicker/datepicker.component.ts:106",{"_index":2602,"title":{},"body":{"components/DatepickerComponent.html":{}}}],["projects/common/lib/components/datepicker/datepicker.component.ts:108",{"_index":2604,"title":{},"body":{"components/DatepickerComponent.html":{}}}],["projects/common/lib/components/datepicker/datepicker.component.ts:111",{"_index":2601,"title":{},"body":{"components/DatepickerComponent.html":{}}}],["projects/common/lib/components/datepicker/datepicker.component.ts:113",{"_index":2600,"title":{},"body":{"components/DatepickerComponent.html":{}}}],["projects/common/lib/components/datepicker/datepicker.component.ts:114",{"_index":2577,"title":{},"body":{"components/DatepickerComponent.html":{}}}],["projects/common/lib/components/datepicker/datepicker.component.ts:120",{"_index":2591,"title":{},"body":{"components/DatepickerComponent.html":{}}}],["projects/common/lib/components/datepicker/datepicker.component.ts:128",{"_index":2592,"title":{},"body":{"components/DatepickerComponent.html":{}}}],["projects/common/lib/components/datepicker/datepicker.component.ts:136",{"_index":2593,"title":{},"body":{"components/DatepickerComponent.html":{}}}],["projects/common/lib/components/datepicker/datepicker.component.ts:141",{"_index":2595,"title":{},"body":{"components/DatepickerComponent.html":{}}}],["projects/common/lib/components/datepicker/datepicker.component.ts:192",{"_index":2594,"title":{},"body":{"components/DatepickerComponent.html":{}}}],["projects/common/lib/components/datepicker/datepicker.component.ts:202",{"_index":2596,"title":{},"body":{"components/DatepickerComponent.html":{}}}],["projects/common/lib/components/datepicker/datepicker.component.ts:211",{"_index":2590,"title":{},"body":{"components/DatepickerComponent.html":{}}}],["projects/common/lib/components/datepicker/datepicker.component.ts:219",{"_index":2597,"title":{},"body":{"components/DatepickerComponent.html":{}}}],["projects/common/lib/components/datepicker/datepicker.component.ts:223",{"_index":2598,"title":{},"body":{"components/DatepickerComponent.html":{}}}],["projects/common/lib/components/datepicker/datepicker.component.ts:227",{"_index":2599,"title":{},"body":{"components/DatepickerComponent.html":{}}}],["projects/common/lib/components/datepicker/datepicker.component.ts:61",{"_index":2588,"title":{},"body":{"components/DatepickerComponent.html":{}}}],["projects/common/lib/components/datepicker/datepicker.component.ts:62",{"_index":2579,"title":{},"body":{"components/DatepickerComponent.html":{}}}],["projects/common/lib/components/datepicker/datepicker.component.ts:63",{"_index":2589,"title":{},"body":{"components/DatepickerComponent.html":{}}}],["projects/common/lib/components/datepicker/datepicker.component.ts:64",{"_index":2581,"title":{},"body":{"components/DatepickerComponent.html":{}}}],["projects/common/lib/components/datepicker/datepicker.component.ts:65",{"_index":2585,"title":{},"body":{"components/DatepickerComponent.html":{}}}],["projects/common/lib/components/datepicker/datepicker.component.ts:67",{"_index":2587,"title":{},"body":{"components/DatepickerComponent.html":{}}}],["projects/common/lib/components/datepicker/datepicker.component.ts:71",{"_index":2583,"title":{},"body":{"components/DatepickerComponent.html":{}}}],["projects/common/lib/components/datepicker/datepicker.component.ts:74",{"_index":2582,"title":{},"body":{"components/DatepickerComponent.html":{}}}],["projects/common/lib/components/datepicker/datepicker.component.ts:77",{"_index":2586,"title":{},"body":{"components/DatepickerComponent.html":{}}}],["projects/common/lib/components/datepicker/datepicker.component.ts:92",{"_index":2578,"title":{},"body":{"components/DatepickerComponent.html":{}}}],["projects/common/lib/components/datepicker/datepicker.component.ts:97",{"_index":2580,"title":{},"body":{"components/DatepickerComponent.html":{}}}],["projects/common/lib/components/datepicker/datepicker.component.ts:99",{"_index":2584,"title":{},"body":{"components/DatepickerComponent.html":{}}}],["projects/common/lib/components/dropdown/dropdown.component.ts",{"_index":2641,"title":{},"body":{"components/DropdownComponent.html":{},"coverage.html":{}}}],["projects/common/lib/components/dropdown/dropdown.component.ts:11",{"_index":2662,"title":{},"body":{"components/DropdownComponent.html":{}}}],["projects/common/lib/components/dropdown/dropdown.component.ts:13",{"_index":2653,"title":{},"body":{"components/DropdownComponent.html":{}}}],["projects/common/lib/components/dropdown/dropdown.component.ts:14",{"_index":2654,"title":{},"body":{"components/DropdownComponent.html":{}}}],["projects/common/lib/components/dropdown/dropdown.component.ts:15",{"_index":2655,"title":{},"body":{"components/DropdownComponent.html":{}}}],["projects/common/lib/components/dropdown/dropdown.component.ts:16",{"_index":2651,"title":{},"body":{"components/DropdownComponent.html":{}}}],["projects/common/lib/components/dropdown/dropdown.component.ts:17",{"_index":2649,"title":{},"body":{"components/DropdownComponent.html":{}}}],["projects/common/lib/components/dropdown/dropdown.component.ts:18",{"_index":2650,"title":{},"body":{"components/DropdownComponent.html":{}}}],["projects/common/lib/components/dropdown/dropdown.component.ts:19",{"_index":2656,"title":{},"body":{"components/DropdownComponent.html":{}}}],["projects/common/lib/components/dropdown/dropdown.component.ts:20",{"_index":2652,"title":{},"body":{"components/DropdownComponent.html":{}}}],["projects/common/lib/components/dropdown/dropdown.component.ts:22",{"_index":2660,"title":{},"body":{"components/DropdownComponent.html":{}}}],["projects/common/lib/components/dropdown/dropdown.component.ts:23",{"_index":2648,"title":{},"body":{"components/DropdownComponent.html":{}}}],["projects/common/lib/components/dropdown/dropdown.component.ts:25",{"_index":2661,"title":{},"body":{"components/DropdownComponent.html":{}}}],["projects/common/lib/components/dropdown/dropdown.component.ts:32",{"_index":2659,"title":{},"body":{"components/DropdownComponent.html":{}}}],["projects/common/lib/components/dropdown/dropdown.component.ts:36",{"_index":2657,"title":{},"body":{"components/DropdownComponent.html":{}}}],["projects/common/lib/components/dropdown/dropdown.component.ts:40",{"_index":2658,"title":{},"body":{"components/DropdownComponent.html":{}}}],["projects/common/lib/components/duplicate",{"_index":2663,"title":{},"body":{"directives/DuplicateCheckDirective.html":{},"coverage.html":{}}}],["projects/common/lib/components/email/email.component.ts",{"_index":2682,"title":{},"body":{"components/EmailComponent.html":{},"coverage.html":{}}}],["projects/common/lib/components/email/email.component.ts:23",{"_index":2691,"title":{},"body":{"components/EmailComponent.html":{}}}],["projects/common/lib/components/email/email.component.ts:24",{"_index":2695,"title":{},"body":{"components/EmailComponent.html":{}}}],["projects/common/lib/components/email/email.component.ts:25",{"_index":2693,"title":{},"body":{"components/EmailComponent.html":{}}}],["projects/common/lib/components/email/email.component.ts:28",{"_index":2696,"title":{},"body":{"components/EmailComponent.html":{}}}],["projects/common/lib/components/email/email.component.ts:33",{"_index":2713,"title":{},"body":{"components/EmailComponent.html":{}}}],["projects/common/lib/components/email/email.component.ts:37",{"_index":2698,"title":{},"body":{"components/EmailComponent.html":{}}}],["projects/common/lib/components/email/email.component.ts:38",{"_index":2697,"title":{},"body":{"components/EmailComponent.html":{}}}],["projects/common/lib/components/email/email.component.ts:40",{"_index":2712,"title":{},"body":{"components/EmailComponent.html":{}}}],["projects/common/lib/components/email/email.component.ts:42",{"_index":2708,"title":{},"body":{"components/EmailComponent.html":{}}}],["projects/common/lib/components/email/email.component.ts:47",{"_index":2690,"title":{},"body":{"components/EmailComponent.html":{}}}],["projects/common/lib/components/email/email.component.ts:49",{"_index":2709,"title":{},"body":{"components/EmailComponent.html":{}}}],["projects/common/lib/components/email/email.component.ts:56",{"_index":2699,"title":{},"body":{"components/EmailComponent.html":{}}}],["projects/common/lib/components/email/email.component.ts:62",{"_index":2701,"title":{},"body":{"components/EmailComponent.html":{}}}],["projects/common/lib/components/email/email.component.ts:68",{"_index":2700,"title":{},"body":{"components/EmailComponent.html":{}}}],["projects/common/lib/components/email/email.component.ts:73",{"_index":2703,"title":{},"body":{"components/EmailComponent.html":{}}}],["projects/common/lib/components/email/email.component.ts:79",{"_index":2702,"title":{},"body":{"components/EmailComponent.html":{}}}],["projects/common/lib/components/error",{"_index":2721,"title":{},"body":{"components/ErrorContainerComponent.html":{},"coverage.html":{}}}],["projects/common/lib/components/file",{"_index":2739,"title":{},"body":{"interfaces/FileUploaderMsg.html":{},"coverage.html":{}}}],["projects/common/lib/components/form",{"_index":3258,"title":{},"body":{"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"coverage.html":{}}}],["projects/common/lib/components/full",{"_index":3304,"title":{},"body":{"components/FullNameComponent.html":{},"interfaces/FullNameErrorMsg.html":{},"coverage.html":{}}}],["projects/common/lib/components/geocoder",{"_index":3418,"title":{},"body":{"components/GeocoderInputComponent.html":{},"coverage.html":{}}}],["projects/common/lib/components/header/header.component.ts",{"_index":3546,"title":{},"body":{"components/HeaderComponent.html":{},"coverage.html":{}}}],["projects/common/lib/components/header/header.component.ts:20",{"_index":3571,"title":{},"body":{"components/HeaderComponent.html":{}}}],["projects/common/lib/components/header/header.component.ts:21",{"_index":3572,"title":{},"body":{"components/HeaderComponent.html":{}}}],["projects/common/lib/components/header/header.component.ts:22",{"_index":3570,"title":{},"body":{"components/HeaderComponent.html":{}}}],["projects/common/lib/components/header/header.component.ts:24",{"_index":3578,"title":{},"body":{"components/HeaderComponent.html":{}}}],["projects/common/lib/components/header/header.component.ts:25",{"_index":3568,"title":{},"body":{"components/HeaderComponent.html":{}}}],["projects/common/lib/components/header/header.component.ts:30",{"_index":3574,"title":{},"body":{"components/HeaderComponent.html":{}}}],["projects/common/lib/components/header/header.component.ts:39",{"_index":3576,"title":{},"body":{"components/HeaderComponent.html":{}}}],["projects/common/lib/components/header/header.component.ts:43",{"_index":3577,"title":{},"body":{"components/HeaderComponent.html":{}}}],["projects/common/lib/components/header/header.component.ts:51",{"_index":3573,"title":{},"body":{"components/HeaderComponent.html":{}}}],["projects/common/lib/components/name/name.component.ts",{"_index":3821,"title":{},"body":{"components/NameComponent.html":{},"coverage.html":{}}}],["projects/common/lib/components/name/name.component.ts:23",{"_index":3825,"title":{},"body":{"components/NameComponent.html":{}}}],["projects/common/lib/components/name/name.component.ts:24",{"_index":3826,"title":{},"body":{"components/NameComponent.html":{}}}],["projects/common/lib/components/name/name.component.ts:25",{"_index":3829,"title":{},"body":{"components/NameComponent.html":{}}}],["projects/common/lib/components/name/name.component.ts:26",{"_index":3828,"title":{},"body":{"components/NameComponent.html":{}}}],["projects/common/lib/components/name/name.component.ts:29",{"_index":3830,"title":{},"body":{"components/NameComponent.html":{}}}],["projects/common/lib/components/name/name.component.ts:34",{"_index":3842,"title":{},"body":{"components/NameComponent.html":{}}}],["projects/common/lib/components/name/name.component.ts:38",{"_index":3832,"title":{},"body":{"components/NameComponent.html":{}}}],["projects/common/lib/components/name/name.component.ts:39",{"_index":3831,"title":{},"body":{"components/NameComponent.html":{}}}],["projects/common/lib/components/name/name.component.ts:41",{"_index":3841,"title":{},"body":{"components/NameComponent.html":{}}}],["projects/common/lib/components/name/name.component.ts:43",{"_index":3839,"title":{},"body":{"components/NameComponent.html":{}}}],["projects/common/lib/components/name/name.component.ts:48",{"_index":3824,"title":{},"body":{"components/NameComponent.html":{}}}],["projects/common/lib/components/name/name.component.ts:51",{"_index":3840,"title":{},"body":{"components/NameComponent.html":{}}}],["projects/common/lib/components/name/name.component.ts:58",{"_index":3833,"title":{},"body":{"components/NameComponent.html":{}}}],["projects/common/lib/components/name/name.component.ts:64",{"_index":3835,"title":{},"body":{"components/NameComponent.html":{}}}],["projects/common/lib/components/name/name.component.ts:70",{"_index":3834,"title":{},"body":{"components/NameComponent.html":{}}}],["projects/common/lib/components/name/name.component.ts:75",{"_index":3837,"title":{},"body":{"components/NameComponent.html":{}}}],["projects/common/lib/components/name/name.component.ts:81",{"_index":3844,"title":{},"body":{"components/NameComponent.html":{}}}],["projects/common/lib/components/name/name.component.ts:85",{"_index":3836,"title":{},"body":{"components/NameComponent.html":{}}}],["projects/common/lib/components/name/validate",{"_index":4462,"title":{},"body":{"directives/ValidateNameDirective.html":{},"coverage.html":{}}}],["projects/common/lib/components/page",{"_index":3851,"title":{},"body":{"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"coverage.html":{}}}],["projects/common/lib/components/password/password.component.ts",{"_index":3947,"title":{},"body":{"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"coverage.html":{}}}],["projects/common/lib/components/password/password.component.ts:118",{"_index":3997,"title":{},"body":{"components/PasswordComponent.html":{}}}],["projects/common/lib/components/password/password.component.ts:131",{"_index":4002,"title":{},"body":{"components/PasswordComponent.html":{}}}],["projects/common/lib/components/password/password.component.ts:135",{"_index":4000,"title":{},"body":{"components/PasswordComponent.html":{}}}],["projects/common/lib/components/password/password.component.ts:142",{"_index":3989,"title":{},"body":{"components/PasswordComponent.html":{}}}],["projects/common/lib/components/password/password.component.ts:157",{"_index":3991,"title":{},"body":{"components/PasswordComponent.html":{}}}],["projects/common/lib/components/password/password.component.ts:58",{"_index":3977,"title":{},"body":{"components/PasswordComponent.html":{}}}],["projects/common/lib/components/password/password.component.ts:59",{"_index":3976,"title":{},"body":{"components/PasswordComponent.html":{}}}],["projects/common/lib/components/password/password.component.ts:60",{"_index":3975,"title":{},"body":{"components/PasswordComponent.html":{}}}],["projects/common/lib/components/password/password.component.ts:61",{"_index":3983,"title":{},"body":{"components/PasswordComponent.html":{}}}],["projects/common/lib/components/password/password.component.ts:62",{"_index":3984,"title":{},"body":{"components/PasswordComponent.html":{}}}],["projects/common/lib/components/password/password.component.ts:63",{"_index":3980,"title":{},"body":{"components/PasswordComponent.html":{}}}],["projects/common/lib/components/password/password.component.ts:64",{"_index":3979,"title":{},"body":{"components/PasswordComponent.html":{}}}],["projects/common/lib/components/password/password.component.ts:65",{"_index":3974,"title":{},"body":{"components/PasswordComponent.html":{}}}],["projects/common/lib/components/password/password.component.ts:66",{"_index":3985,"title":{},"body":{"components/PasswordComponent.html":{}}}],["projects/common/lib/components/password/password.component.ts:67",{"_index":3982,"title":{},"body":{"components/PasswordComponent.html":{}}}],["projects/common/lib/components/password/password.component.ts:71",{"_index":3987,"title":{},"body":{"components/PasswordComponent.html":{}}}],["projects/common/lib/components/password/password.component.ts:72",{"_index":3986,"title":{},"body":{"components/PasswordComponent.html":{}}}],["projects/common/lib/components/password/password.component.ts:75",{"_index":4005,"title":{},"body":{"components/PasswordComponent.html":{}}}],["projects/common/lib/components/password/password.component.ts:76",{"_index":4008,"title":{},"body":{"components/PasswordComponent.html":{}}}],["projects/common/lib/components/password/password.component.ts:77",{"_index":4010,"title":{},"body":{"components/PasswordComponent.html":{}}}],["projects/common/lib/components/password/password.component.ts:79",{"_index":4004,"title":{},"body":{"components/PasswordComponent.html":{}}}],["projects/common/lib/components/password/password.component.ts:82",{"_index":4009,"title":{},"body":{"components/PasswordComponent.html":{}}}],["projects/common/lib/components/password/password.component.ts:83",{"_index":4006,"title":{},"body":{"components/PasswordComponent.html":{}}}],["projects/common/lib/components/password/password.component.ts:84",{"_index":4007,"title":{},"body":{"components/PasswordComponent.html":{}}}],["projects/common/lib/components/password/password.component.ts:85",{"_index":3972,"title":{},"body":{"components/PasswordComponent.html":{}}}],["projects/common/lib/components/password/password.component.ts:92",{"_index":3998,"title":{},"body":{"components/PasswordComponent.html":{}}}],["projects/common/lib/components/phn/phn.component.ts",{"_index":5305,"title":{},"body":{"coverage.html":{}}}],["projects/common/lib/components/phone",{"_index":5307,"title":{},"body":{"coverage.html":{}}}],["projects/common/lib/components/postal",{"_index":4118,"title":{},"body":{"components/PostalCodeComponent.html":{},"directives/ValidateBcPostalDirective.html":{},"directives/ValidatePostalcodeDirective.html":{},"coverage.html":{}}}],["projects/common/lib/components/province/province.component.ts",{"_index":4169,"title":{},"body":{"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{},"coverage.html":{}}}],["projects/common/lib/components/province/province.component.ts:43",{"_index":4173,"title":{},"body":{"components/ProvinceComponent.html":{}}}],["projects/common/lib/components/province/province.component.ts:44",{"_index":4178,"title":{},"body":{"components/ProvinceComponent.html":{}}}],["projects/common/lib/components/province/province.component.ts:45",{"_index":4175,"title":{},"body":{"components/ProvinceComponent.html":{}}}],["projects/common/lib/components/province/province.component.ts:46",{"_index":4179,"title":{},"body":{"components/ProvinceComponent.html":{}}}],["projects/common/lib/components/province/province.component.ts:47",{"_index":4177,"title":{},"body":{"components/ProvinceComponent.html":{}}}],["projects/common/lib/components/province/province.component.ts:48",{"_index":4176,"title":{},"body":{"components/ProvinceComponent.html":{}}}],["projects/common/lib/components/province/province.component.ts:49",{"_index":4180,"title":{},"body":{"components/ProvinceComponent.html":{}}}],["projects/common/lib/components/province/province.component.ts:52",{"_index":4181,"title":{},"body":{"components/ProvinceComponent.html":{}}}],["projects/common/lib/components/province/province.component.ts:57",{"_index":4191,"title":{},"body":{"components/ProvinceComponent.html":{}}}],["projects/common/lib/components/province/province.component.ts:61",{"_index":4183,"title":{},"body":{"components/ProvinceComponent.html":{}}}],["projects/common/lib/components/province/province.component.ts:62",{"_index":4182,"title":{},"body":{"components/ProvinceComponent.html":{}}}],["projects/common/lib/components/province/province.component.ts:64",{"_index":4190,"title":{},"body":{"components/ProvinceComponent.html":{}}}],["projects/common/lib/components/province/province.component.ts:66",{"_index":4188,"title":{},"body":{"components/ProvinceComponent.html":{}}}],["projects/common/lib/components/province/province.component.ts:70",{"_index":4172,"title":{},"body":{"components/ProvinceComponent.html":{}}}],["projects/common/lib/components/province/province.component.ts:73",{"_index":4189,"title":{},"body":{"components/ProvinceComponent.html":{}}}],["projects/common/lib/components/province/province.component.ts:80",{"_index":4184,"title":{},"body":{"components/ProvinceComponent.html":{}}}],["projects/common/lib/components/province/province.component.ts:84",{"_index":4186,"title":{},"body":{"components/ProvinceComponent.html":{}}}],["projects/common/lib/components/province/province.component.ts:92",{"_index":4185,"title":{},"body":{"components/ProvinceComponent.html":{}}}],["projects/common/lib/components/province/province.component.ts:97",{"_index":4187,"title":{},"body":{"components/ProvinceComponent.html":{}}}],["projects/common/lib/components/radio/radio.component.ts",{"_index":3599,"title":{},"body":{"interfaces/IRadioItems.html":{},"components/RadioComponent.html":{},"coverage.html":{}}}],["projects/common/lib/components/radio/radio.component.ts:101",{"_index":4228,"title":{},"body":{"components/RadioComponent.html":{}}}],["projects/common/lib/components/radio/radio.component.ts:105",{"_index":4230,"title":{},"body":{"components/RadioComponent.html":{}}}],["projects/common/lib/components/radio/radio.component.ts:54",{"_index":4232,"title":{},"body":{"components/RadioComponent.html":{}}}],["projects/common/lib/components/radio/radio.component.ts:55",{"_index":4231,"title":{},"body":{"components/RadioComponent.html":{}}}],["projects/common/lib/components/radio/radio.component.ts:59",{"_index":4224,"title":{},"body":{"components/RadioComponent.html":{}}}],["projects/common/lib/components/radio/radio.component.ts:64",{"_index":4223,"title":{},"body":{"components/RadioComponent.html":{}}}],["projects/common/lib/components/radio/radio.component.ts:66",{"_index":4225,"title":{},"body":{"components/RadioComponent.html":{}}}],["projects/common/lib/components/radio/radio.component.ts:69",{"_index":4234,"title":{},"body":{"components/RadioComponent.html":{}}}],["projects/common/lib/components/radio/radio.component.ts:73",{"_index":4221,"title":{},"body":{"components/RadioComponent.html":{}}}],["projects/common/lib/components/radio/radio.component.ts:74",{"_index":4222,"title":{},"body":{"components/RadioComponent.html":{}}}],["projects/common/lib/components/radio/radio.component.ts:76",{"_index":4220,"title":{},"body":{"components/RadioComponent.html":{}}}],["projects/common/lib/components/radio/radio.component.ts:78",{"_index":4233,"title":{},"body":{"components/RadioComponent.html":{}}}],["projects/common/lib/components/radio/radio.component.ts:85",{"_index":4226,"title":{},"body":{"components/RadioComponent.html":{}}}],["projects/common/lib/components/radio/radio.component.ts:89",{"_index":4229,"title":{},"body":{"components/RadioComponent.html":{}}}],["projects/common/lib/components/radio/radio.component.ts:97",{"_index":4227,"title":{},"body":{"components/RadioComponent.html":{}}}],["projects/common/lib/components/sample",{"_index":4249,"title":{},"body":{"interfaces/SampleImageInterface.html":{},"components/SampleModalComponent.html":{},"coverage.html":{}}}],["projects/common/lib/components/sin/sin.component.ts",{"_index":4364,"title":{},"body":{"components/SinComponent.html":{},"coverage.html":{}}}],["projects/common/lib/components/sin/sin.component.ts:24",{"_index":4387,"title":{},"body":{"components/SinComponent.html":{}}}],["projects/common/lib/components/sin/sin.component.ts:30",{"_index":4390,"title":{},"body":{"components/SinComponent.html":{}}}],["projects/common/lib/components/sin/sin.component.ts:31",{"_index":4389,"title":{},"body":{"components/SinComponent.html":{}}}],["projects/common/lib/components/sin/sin.component.ts:33",{"_index":4371,"title":{},"body":{"components/SinComponent.html":{}}}],["projects/common/lib/components/sin/sin.component.ts:34",{"_index":4374,"title":{},"body":{"components/SinComponent.html":{}}}],["projects/common/lib/components/sin/sin.component.ts:35",{"_index":4376,"title":{},"body":{"components/SinComponent.html":{}}}],["projects/common/lib/components/sin/sin.component.ts:36",{"_index":4373,"title":{},"body":{"components/SinComponent.html":{}}}],["projects/common/lib/components/sin/sin.component.ts:39",{"_index":4377,"title":{},"body":{"components/SinComponent.html":{}}}],["projects/common/lib/components/sin/sin.component.ts:45",{"_index":4391,"title":{},"body":{"components/SinComponent.html":{}}}],["projects/common/lib/components/sin/sin.component.ts:49",{"_index":4378,"title":{},"body":{"components/SinComponent.html":{}}}],["projects/common/lib/components/sin/sin.component.ts:50",{"_index":4369,"title":{},"body":{"components/SinComponent.html":{}}}],["projects/common/lib/components/sin/sin.component.ts:52",{"_index":4388,"title":{},"body":{"components/SinComponent.html":{}}}],["projects/common/lib/components/sin/sin.component.ts:62",{"_index":4379,"title":{},"body":{"components/SinComponent.html":{}}}],["projects/common/lib/components/sin/sin.component.ts:68",{"_index":4381,"title":{},"body":{"components/SinComponent.html":{}}}],["projects/common/lib/components/sin/sin.component.ts:77",{"_index":4380,"title":{},"body":{"components/SinComponent.html":{}}}],["projects/common/lib/components/sin/sin.component.ts:82",{"_index":4384,"title":{},"body":{"components/SinComponent.html":{}}}],["projects/common/lib/components/sin/sin.component.ts:88",{"_index":4382,"title":{},"body":{"components/SinComponent.html":{}}}],["projects/common/lib/components/sin/sin.component.ts:97",{"_index":4383,"title":{},"body":{"components/SinComponent.html":{}}}],["projects/common/lib/components/street/street.component.ts",{"_index":5311,"title":{},"body":{"coverage.html":{}}}],["projects/common/lib/components/street/validate",{"_index":4488,"title":{},"body":{"directives/ValidateStreetDirective.html":{},"coverage.html":{}}}],["projects/common/lib/components/thumbnail/thumbnail.component.ts",{"_index":4412,"title":{},"body":{"components/ThumbnailComponent.html":{},"coverage.html":{}}}],["projects/common/lib/components/thumbnail/thumbnail.component.ts:13",{"_index":4423,"title":{},"body":{"components/ThumbnailComponent.html":{}}}],["projects/common/lib/components/thumbnail/thumbnail.component.ts:14",{"_index":4424,"title":{},"body":{"components/ThumbnailComponent.html":{}}}],["projects/common/lib/components/thumbnail/thumbnail.component.ts:15",{"_index":4425,"title":{},"body":{"components/ThumbnailComponent.html":{}}}],["projects/common/lib/components/thumbnail/thumbnail.component.ts:16",{"_index":4431,"title":{},"body":{"components/ThumbnailComponent.html":{}}}],["projects/common/lib/components/thumbnail/thumbnail.component.ts:18",{"_index":4422,"title":{},"body":{"components/ThumbnailComponent.html":{}}}],["projects/common/lib/components/thumbnail/thumbnail.component.ts:23",{"_index":4433,"title":{},"body":{"components/ThumbnailComponent.html":{}}}],["projects/common/lib/components/thumbnail/thumbnail.component.ts:24",{"_index":4429,"title":{},"body":{"components/ThumbnailComponent.html":{}}}],["projects/common/lib/components/thumbnail/thumbnail.component.ts:42",{"_index":4427,"title":{},"body":{"components/ThumbnailComponent.html":{}}}],["projects/common/lib/components/thumbnail/thumbnail.component.ts:48",{"_index":4430,"title":{},"body":{"components/ThumbnailComponent.html":{}}}],["projects/common/lib/components/thumbnail/thumbnail.component.ts:53",{"_index":4428,"title":{},"body":{"components/ThumbnailComponent.html":{}}}],["projects/common/lib/components/toggle/toggle.component.ts",{"_index":4444,"title":{},"body":{"components/ToggleComponent.html":{},"coverage.html":{}}}],["projects/common/lib/components/toggle/toggle.component.ts:11",{"_index":4448,"title":{},"body":{"components/ToggleComponent.html":{}}}],["projects/common/lib/components/toggle/toggle.component.ts:12",{"_index":4449,"title":{},"body":{"components/ToggleComponent.html":{}}}],["projects/common/lib/components/toggle/toggle.component.ts:13",{"_index":4447,"title":{},"body":{"components/ToggleComponent.html":{}}}],["projects/common/lib/components/toggle/toggle.component.ts:19",{"_index":4450,"title":{},"body":{"components/ToggleComponent.html":{}}}],["projects/common/lib/components/validate",{"_index":4483,"title":{},"body":{"directives/ValidateRegionDirective.html":{},"coverage.html":{}}}],["projects/common/lib/components/wizard",{"_index":4491,"title":{},"body":{"components/WizardProgressBarComponent.html":{},"coverage.html":{}}}],["projects/common/lib/components/xicon",{"_index":4563,"title":{},"body":{"components/XiconButtonComponent.html":{},"coverage.html":{}}}],["projects/common/lib/models/abstract",{"_index":6,"title":{},"body":{"classes/AbstractBaseForm.html":{},"classes/AbstractForm.html":{},"classes/AbstractFormControl.html":{},"classes/AbstractReactForm.html":{},"coverage.html":{}}}],["projects/common/lib/models/address.model.ts",{"_index":992,"title":{},"body":{"classes/Address.html":{},"coverage.html":{}}}],["projects/common/lib/models/address.model.ts:11",{"_index":1005,"title":{},"body":{"classes/Address.html":{}}}],["projects/common/lib/models/address.model.ts:13",{"_index":1008,"title":{},"body":{"classes/Address.html":{}}}],["projects/common/lib/models/address.model.ts:14",{"_index":1013,"title":{},"body":{"classes/Address.html":{}}}],["projects/common/lib/models/address.model.ts:15",{"_index":1010,"title":{},"body":{"classes/Address.html":{}}}],["projects/common/lib/models/address.model.ts:16",{"_index":1021,"title":{},"body":{"classes/Address.html":{}}}],["projects/common/lib/models/address.model.ts:17",{"_index":1009,"title":{},"body":{"classes/Address.html":{}}}],["projects/common/lib/models/address.model.ts:18",{"_index":1011,"title":{},"body":{"classes/Address.html":{}}}],["projects/common/lib/models/address.model.ts:19",{"_index":1012,"title":{},"body":{"classes/Address.html":{}}}],["projects/common/lib/models/address.model.ts:23",{"_index":1042,"title":{},"body":{"classes/Address.html":{}}}],["projects/common/lib/models/address.model.ts:27",{"_index":1044,"title":{},"body":{"classes/Address.html":{}}}],["projects/common/lib/models/address.model.ts:36",{"_index":1027,"title":{},"body":{"classes/Address.html":{}}}],["projects/common/lib/models/address.model.ts:44",{"_index":1024,"title":{},"body":{"classes/Address.html":{}}}],["projects/common/lib/models/address.model.ts:50",{"_index":1046,"title":{},"body":{"classes/Address.html":{}}}],["projects/common/lib/models/address.model.ts:61",{"_index":1023,"title":{},"body":{"classes/Address.html":{}}}],["projects/common/lib/models/address.model.ts:7",{"_index":1020,"title":{},"body":{"classes/Address.html":{}}}],["projects/common/lib/models/address.model.ts:9",{"_index":1004,"title":{},"body":{"classes/Address.html":{}}}],["projects/common/lib/models/base.ts",{"_index":1070,"title":{},"body":{"classes/Base.html":{},"coverage.html":{}}}],["projects/common/lib/models/base.ts:11",{"_index":1076,"title":{},"body":{"classes/Base.html":{}}}],["projects/common/lib/models/container.ts",{"_index":1710,"title":{},"body":{"classes/Container.html":{},"interfaces/WizardProgressItem.html":{},"coverage.html":{}}}],["projects/common/lib/models/container.ts:103",{"_index":1767,"title":{},"body":{"classes/Container.html":{}}}],["projects/common/lib/models/container.ts:133",{"_index":1769,"title":{},"body":{"classes/Container.html":{}}}],["projects/common/lib/models/container.ts:60",{"_index":1750,"title":{},"body":{"classes/Container.html":{}}}],["projects/common/lib/models/container.ts:63",{"_index":1754,"title":{},"body":{"classes/Container.html":{}}}],["projects/common/lib/models/container.ts:64",{"_index":1753,"title":{},"body":{"classes/Container.html":{}}}],["projects/common/lib/models/container.ts:65",{"_index":1748,"title":{},"body":{"classes/Container.html":{}}}],["projects/common/lib/models/container.ts:67",{"_index":1746,"title":{},"body":{"classes/Container.html":{}}}],["projects/common/lib/models/container.ts:75",{"_index":1756,"title":{},"body":{"classes/Container.html":{}}}],["projects/common/lib/models/container.ts:83",{"_index":1759,"title":{},"body":{"classes/Container.html":{}}}],["projects/common/lib/models/container.ts:87",{"_index":1765,"title":{},"body":{"classes/Container.html":{}}}],["projects/common/lib/models/error",{"_index":2728,"title":{},"body":{"interfaces/ErrorMessage.html":{},"coverage.html":{}}}],["projects/common/lib/models/images.model.ts",{"_index":1474,"title":{},"body":{"interfaces/CommonAttachmentJson.html":{},"classes/CommonImage.html":{},"classes/CommonImageProcessingError.html":{},"interfaces/CommonImageScaleFactors.html":{},"classes/CommonImageScaleFactorsImpl.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{}}}],["projects/common/lib/models/images.model.ts:105",{"_index":1571,"title":{},"body":{"classes/CommonImageScaleFactorsImpl.html":{}}}],["projects/common/lib/models/images.model.ts:16",{"_index":1564,"title":{},"body":{"classes/CommonImageProcessingError.html":{}}}],["projects/common/lib/models/images.model.ts:17",{"_index":1566,"title":{},"body":{"classes/CommonImageProcessingError.html":{}}}],["projects/common/lib/models/images.model.ts:18",{"_index":1563,"title":{},"body":{"classes/CommonImageProcessingError.html":{}}}],["projects/common/lib/models/images.model.ts:20",{"_index":1565,"title":{},"body":{"classes/CommonImageProcessingError.html":{}}}],["projects/common/lib/models/images.model.ts:30",{"_index":1548,"title":{},"body":{"classes/CommonImage.html":{}}}],["projects/common/lib/models/images.model.ts:47",{"_index":1553,"title":{},"body":{"classes/CommonImage.html":{}}}],["projects/common/lib/models/images.model.ts:48",{"_index":1551,"title":{},"body":{"classes/CommonImage.html":{}}}],["projects/common/lib/models/images.model.ts:54",{"_index":1550,"title":{},"body":{"classes/CommonImage.html":{}}}],["projects/common/lib/models/images.model.ts:56",{"_index":1558,"title":{},"body":{"classes/CommonImage.html":{}}}],["projects/common/lib/models/images.model.ts:57",{"_index":1560,"title":{},"body":{"classes/CommonImage.html":{}}}],["projects/common/lib/models/images.model.ts:58",{"_index":1559,"title":{},"body":{"classes/CommonImage.html":{}}}],["projects/common/lib/models/images.model.ts:59",{"_index":1556,"title":{},"body":{"classes/CommonImage.html":{}}}],["projects/common/lib/models/images.model.ts:60",{"_index":1557,"title":{},"body":{"classes/CommonImage.html":{}}}],["projects/common/lib/models/images.model.ts:61",{"_index":1555,"title":{},"body":{"classes/CommonImage.html":{}}}],["projects/common/lib/models/images.model.ts:64",{"_index":1554,"title":{},"body":{"classes/CommonImage.html":{}}}],["projects/common/lib/models/images.model.ts:66",{"_index":1552,"title":{},"body":{"classes/CommonImage.html":{}}}],["projects/common/lib/models/images.model.ts:67",{"_index":1549,"title":{},"body":{"classes/CommonImage.html":{}}}],["projects/common/lib/models/images.model.ts:73",{"_index":1561,"title":{},"body":{"classes/CommonImage.html":{}}}],["projects/common/lib/models/images.model.ts:93",{"_index":1568,"title":{},"body":{"interfaces/CommonImageScaleFactors.html":{}}}],["projects/common/lib/models/images.model.ts:97",{"_index":1570,"title":{},"body":{"classes/CommonImageScaleFactorsImpl.html":{}}}],["projects/common/lib/models/images.model.ts:98",{"_index":1569,"title":{},"body":{"classes/CommonImageScaleFactorsImpl.html":{}}}],["projects/common/lib/models/mask.constants.ts",{"_index":5331,"title":{},"body":{"coverage.html":{}}}],["projects/common/lib/models/person.model.ts",{"_index":4058,"title":{},"body":{"classes/Person.html":{},"coverage.html":{}}}],["projects/common/lib/models/person.model.ts:13",{"_index":4071,"title":{},"body":{"classes/Person.html":{}}}],["projects/common/lib/models/person.model.ts:14",{"_index":4073,"title":{},"body":{"classes/Person.html":{}}}],["projects/common/lib/models/person.model.ts:15",{"_index":4072,"title":{},"body":{"classes/Person.html":{}}}],["projects/common/lib/models/person.model.ts:18",{"_index":4069,"title":{},"body":{"classes/Person.html":{}}}],["projects/common/lib/models/person.model.ts:19",{"_index":4067,"title":{},"body":{"classes/Person.html":{}}}],["projects/common/lib/models/person.model.ts:22",{"_index":4068,"title":{},"body":{"classes/Person.html":{}}}],["projects/common/lib/models/person.model.ts:25",{"_index":4080,"title":{},"body":{"classes/Person.html":{}}}],["projects/common/lib/models/person.model.ts:30",{"_index":4083,"title":{},"body":{"classes/Person.html":{}}}],["projects/common/lib/models/person.model.ts:35",{"_index":4086,"title":{},"body":{"classes/Person.html":{}}}],["projects/common/lib/models/person.model.ts:53",{"_index":4090,"title":{},"body":{"classes/Person.html":{}}}],["projects/common/lib/models/person.model.ts:67",{"_index":4095,"title":{},"body":{"classes/Person.html":{}}}],["projects/common/lib/models/person.model.ts:86",{"_index":4075,"title":{},"body":{"classes/Person.html":{}}}],["projects/common/lib/models/person.model.ts:91",{"_index":4074,"title":{},"body":{"classes/Person.html":{}}}],["projects/common/lib/models/simple",{"_index":4358,"title":{},"body":{"interfaces/SimpleDate.html":{},"coverage.html":{}}}],["projects/common/lib/services/abstract",{"_index":241,"title":{},"body":{"classes/AbstractHttpService.html":{},"injectables/AbstractPageGuardService.html":{},"injectables/AbstractPgCheckService.html":{},"coverage.html":{}}}],["projects/common/lib/services/check",{"_index":1222,"title":{},"body":{"injectables/CheckCompleteBaseService.html":{},"interfaces/PageListInterface.html":{},"coverage.html":{}}}],["projects/common/lib/services/container.service.ts",{"_index":1794,"title":{},"body":{"injectables/ContainerService.html":{},"coverage.html":{}}}],["projects/common/lib/services/container.service.ts:11",{"_index":1821,"title":{},"body":{"injectables/ContainerService.html":{}}}],["projects/common/lib/services/container.service.ts:12",{"_index":1824,"title":{},"body":{"injectables/ContainerService.html":{}}}],["projects/common/lib/services/container.service.ts:13",{"_index":1826,"title":{},"body":{"injectables/ContainerService.html":{}}}],["projects/common/lib/services/container.service.ts:14",{"_index":1817,"title":{},"body":{"injectables/ContainerService.html":{}}}],["projects/common/lib/services/container.service.ts:17",{"_index":1819,"title":{},"body":{"injectables/ContainerService.html":{}}}],["projects/common/lib/services/container.service.ts:18",{"_index":1823,"title":{},"body":{"injectables/ContainerService.html":{}}}],["projects/common/lib/services/container.service.ts:19",{"_index":1815,"title":{},"body":{"injectables/ContainerService.html":{}}}],["projects/common/lib/services/container.service.ts:20",{"_index":1804,"title":{},"body":{"injectables/ContainerService.html":{}}}],["projects/common/lib/services/container.service.ts:25",{"_index":1809,"title":{},"body":{"injectables/ContainerService.html":{}}}],["projects/common/lib/services/container.service.ts:30",{"_index":1811,"title":{},"body":{"injectables/ContainerService.html":{}}}],["projects/common/lib/services/container.service.ts:35",{"_index":1806,"title":{},"body":{"injectables/ContainerService.html":{}}}],["projects/common/lib/services/container.service.ts:39",{"_index":1813,"title":{},"body":{"injectables/ContainerService.html":{}}}],["projects/common/lib/services/default",{"_index":2613,"title":{},"body":{"injectables/DefaultPageGuardService.html":{},"coverage.html":{}}}],["projects/common/lib/services/geocoder.service.ts",{"_index":3376,"title":{},"body":{"interfaces/GeoAddressResult.html":{},"injectables/GeocoderService.html":{},"coverage.html":{}}}],["projects/common/lib/services/geocoder.service.ts:23",{"_index":3542,"title":{},"body":{"injectables/GeocoderService.html":{}}}],["projects/common/lib/services/geocoder.service.ts:24",{"_index":3543,"title":{},"body":{"injectables/GeocoderService.html":{}}}],["projects/common/lib/services/geocoder.service.ts:25",{"_index":3532,"title":{},"body":{"injectables/GeocoderService.html":{}}}],["projects/common/lib/services/geocoder.service.ts:32",{"_index":3534,"title":{},"body":{"injectables/GeocoderService.html":{}}}],["projects/common/lib/services/geocoder.service.ts:53",{"_index":3535,"title":{},"body":{"injectables/GeocoderService.html":{}}}],["projects/common/lib/services/geocoder.service.ts:74",{"_index":3533,"title":{},"body":{"injectables/GeocoderService.html":{}}}],["projects/common/lib/services/load",{"_index":3780,"title":{},"body":{"guards/LoadPageGuardService.html":{},"coverage.html":{}}}],["projects/common/lib/services/logger.service.ts",{"_index":1573,"title":{},"body":{"interfaces/CommonLogMessage.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{}}}],["projects/common/lib/services/logger.service.ts:21",{"_index":1575,"title":{},"body":{"interfaces/CommonLogMessage.html":{}}}],["projects/common/lib/services/page",{"_index":3869,"title":{},"body":{"interfaces/PageList.html":{},"injectables/PageStateService.html":{},"coverage.html":{}}}],["projects/common/lib/services/route",{"_index":4236,"title":{},"body":{"guards/RouteGuardService.html":{},"coverage.html":{}}}],["projects/common/lib/shared",{"_index":4271,"title":{},"body":{"modules/SharedCoreModule.html":{},"coverage.html":{}}}],["projects/common/package.json",{"_index":5596,"title":{},"body":{"additional-documentation/local-development/components.html":{}}}],["projects/common/schematics",{"_index":5528,"title":{},"body":{"additional-documentation/local-development/schematics.html":{}}}],["projects/common/schematics/package.json",{"_index":5597,"title":{},"body":{"additional-documentation/local-development/components.html":{}}}],["projects/common/schematics/src/copy",{"_index":5345,"title":{},"body":{"coverage.html":{}}}],["projects/common/schematics/src/helpers/json.ts",{"_index":5349,"title":{},"body":{"coverage.html":{}}}],["projects/common/schematics/src/moh",{"_index":5352,"title":{},"body":{"coverage.html":{}}}],["projects/common/schematics/src/version",{"_index":5379,"title":{},"body":{"coverage.html":{}}}],["projects/common/src/public_api.ts",{"_index":5622,"title":{},"body":{"additional-documentation/local-development/components.html":{}}}],["projects/common/test.ts",{"_index":5390,"title":{},"body":{"coverage.html":{}}}],["projectversion",{"_index":5383,"title":{},"body":{"coverage.html":{}}}],["promise",{"_index":536,"title":{},"body":{"classes/AbstractTestPage.html":{},"guards/LoadPageGuardService.html":{},"guards/RouteGuardService.html":{}}}],["promise.resolve().then",{"_index":221,"title":{},"body":{"classes/AbstractFormControl.html":{}}}],["proper",{"_index":1497,"title":{},"body":{"interfaces/CommonAttachmentJson.html":{},"classes/CommonImage.html":{},"classes/CommonImageProcessingError.html":{},"interfaces/CommonImageScaleFactors.html":{},"classes/CommonImageScaleFactorsImpl.html":{}}}],["properly",{"_index":2705,"title":{},"body":{"components/EmailComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/FullNameComponent.html":{},"interfaces/FullNameErrorMsg.html":{},"changelog.html":{},"additional-documentation/getting-started.html":{}}}],["properties",{"_index":10,"title":{},"body":{"classes/AbstractBaseForm.html":{},"classes/AbstractForm.html":{},"classes/AbstractFormControl.html":{},"classes/AbstractHttpService.html":{},"classes/AbstractReactForm.html":{},"classes/AbstractTestPage.html":{},"components/AccordionCommonComponent.html":{},"interfaces/AddrLabelList.html":{},"classes/Address.html":{},"classes/Base.html":{},"components/ButtonComponent.html":{},"components/ButtonGroupComponent.html":{},"injectables/CheckCompleteBaseService.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"interfaces/CommonAttachmentJson.html":{},"classes/CommonImage.html":{},"classes/CommonImageProcessingError.html":{},"interfaces/CommonImageScaleFactors.html":{},"classes/CommonImageScaleFactorsImpl.html":{},"interfaces/CommonLogMessage.html":{},"components/ConfirmTemplateComponent.html":{},"classes/Container.html":{},"injectables/ContainerService.html":{},"interfaces/CountryList.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"injectables/DefaultPageGuardService.html":{},"components/DropdownComponent.html":{},"components/EmailComponent.html":{},"interfaces/ErrorMessage.html":{},"interfaces/FileUploaderMsg.html":{},"components/FullNameComponent.html":{},"interfaces/FullNameErrorMsg.html":{},"interfaces/GeoAddressResult.html":{},"components/GeocoderInputComponent.html":{},"injectables/GeocoderService.html":{},"components/HeaderComponent.html":{},"interfaces/IRadioItems.html":{},"interfaces/ISpaEnvResponse.html":{},"interfaces/Maxlengths.html":{},"components/NameComponent.html":{},"interfaces/PageList.html":{},"interfaces/PageListInterface.html":{},"injectables/PageStateService.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"classes/Person.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{},"components/RadioComponent.html":{},"interfaces/ReadOnlyFields.html":{},"interfaces/SampleImageInterface.html":{},"components/SampleModalComponent.html":{},"injectables/ServerPayload.html":{},"interfaces/SimpleDate.html":{},"components/SinComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{},"interfaces/WizardProgressItem.html":{}}}],["properties/values",{"_index":1586,"title":{},"body":{"interfaces/CommonLogMessage.html":{}}}],["property",{"_index":1509,"title":{},"body":{"interfaces/CommonAttachmentJson.html":{},"classes/CommonImage.html":{},"classes/CommonImageProcessingError.html":{},"interfaces/CommonImageScaleFactors.html":{},"classes/CommonImageScaleFactorsImpl.html":{},"interfaces/CommonLogMessage.html":{},"changelog.html":{}}}],["props",{"_index":3405,"title":{},"body":{"interfaces/GeoAddressResult.html":{},"injectables/GeocoderService.html":{}}}],["props.fulladdress",{"_index":3415,"title":{},"body":{"interfaces/GeoAddressResult.html":{},"injectables/GeocoderService.html":{}}}],["props.fulladdress.indexof",{"_index":3412,"title":{},"body":{"interfaces/GeoAddressResult.html":{},"injectables/GeocoderService.html":{}}}],["props.fulladdress.slice(0",{"_index":3413,"title":{},"body":{"interfaces/GeoAddressResult.html":{},"injectables/GeocoderService.html":{}}}],["props.localityname",{"_index":3407,"title":{},"body":{"interfaces/GeoAddressResult.html":{},"injectables/GeocoderService.html":{}}}],["props.provincecode",{"_index":3414,"title":{},"body":{"interfaces/GeoAddressResult.html":{},"injectables/GeocoderService.html":{}}}],["protected",{"_index":17,"title":{},"body":{"classes/AbstractBaseForm.html":{},"classes/AbstractForm.html":{},"classes/AbstractFormControl.html":{},"classes/AbstractHttpService.html":{},"classes/AbstractReactForm.html":{},"injectables/CheckCompleteBaseService.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"interfaces/CommonAttachmentJson.html":{},"classes/CommonImage.html":{},"classes/CommonImageProcessingError.html":{},"interfaces/CommonImageScaleFactors.html":{},"classes/CommonImageScaleFactorsImpl.html":{},"interfaces/CommonLogMessage.html":{},"classes/Container.html":{},"components/EmailComponent.html":{},"interfaces/GeoAddressResult.html":{},"injectables/GeocoderService.html":{},"interfaces/ISpaEnvResponse.html":{},"components/NameComponent.html":{},"interfaces/PageList.html":{},"interfaces/PageListInterface.html":{},"injectables/PageStateService.html":{},"components/ProvinceComponent.html":{},"components/RadioComponent.html":{},"components/SinComponent.html":{},"interfaces/WizardProgressItem.html":{}}}],["protection",{"_index":3678,"title":{},"body":{"interfaces/ISpaEnvResponse.html":{}}}],["prototype",{"_index":3816,"title":{},"body":{"classes/MoHCommonLibraryError.html":{}}}],["protractor",{"_index":611,"title":{},"body":{"classes/AbstractTestPage.html":{}}}],["prov",{"_index":941,"title":{},"body":{"interfaces/AddrLabelList.html":{},"interfaces/Maxlengths.html":{},"interfaces/ReadOnlyFields.html":{},"changelog.html":{}}}],["prov.country",{"_index":940,"title":{},"body":{"interfaces/AddrLabelList.html":{},"interfaces/Maxlengths.html":{},"interfaces/ReadOnlyFields.html":{}}}],["provide",{"_index":363,"title":{},"body":{"injectables/AbstractPageGuardService.html":{},"injectables/AbstractPgCheckService.html":{},"interfaces/AddrLabelList.html":{},"components/ButtonComponent.html":{},"components/ButtonGroupComponent.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"injectables/DefaultPageGuardService.html":{},"directives/DuplicateCheckDirective.html":{},"interfaces/FileUploaderMsg.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/FullNameComponent.html":{},"interfaces/FullNameErrorMsg.html":{},"interfaces/ISpaEnvResponse.html":{},"guards/LoadPageGuardService.html":{},"interfaces/Maxlengths.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"interfaces/ReadOnlyFields.html":{},"guards/RouteGuardService.html":{},"directives/ValidateBcPostalDirective.html":{},"directives/ValidateCityDirective.html":{},"directives/ValidateNameDirective.html":{},"directives/ValidatePostalcodeDirective.html":{},"directives/ValidateRegionDirective.html":{},"directives/ValidateStreetDirective.html":{},"additional-documentation/getting-started.html":{}}}],["provided",{"_index":237,"title":{},"body":{"classes/AbstractFormControl.html":{},"classes/AbstractTestPage.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"changelog.html":{}}}],["providedin",{"_index":1277,"title":{},"body":{"injectables/CheckCompleteBaseService.html":{},"interfaces/CommonLogMessage.html":{},"injectables/ContainerService.html":{},"injectables/DefaultPageGuardService.html":{},"interfaces/GeoAddressResult.html":{},"injectables/GeocoderService.html":{},"guards/LoadPageGuardService.html":{},"interfaces/PageList.html":{},"interfaces/PageListInterface.html":{},"injectables/PageStateService.html":{},"guards/RouteGuardService.html":{}}}],["provident",{"_index":1415,"title":{},"body":{"components/CityComponent.html":{},"interfaces/CountryList.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"interfaces/FileUploaderMsg.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{}}}],["providers",{"_index":376,"title":{},"body":{"injectables/AbstractPageGuardService.html":{},"injectables/AbstractPgCheckService.html":{},"interfaces/AddrLabelList.html":{},"components/ButtonGroupComponent.html":{},"modules/CaptchaModule.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"injectables/DefaultPageGuardService.html":{},"directives/DuplicateCheckDirective.html":{},"components/FullNameComponent.html":{},"interfaces/FullNameErrorMsg.html":{},"interfaces/ISpaEnvResponse.html":{},"guards/LoadPageGuardService.html":{},"interfaces/Maxlengths.html":{},"interfaces/ReadOnlyFields.html":{},"guards/RouteGuardService.html":{},"modules/SharedCoreModule.html":{},"directives/ValidateBcPostalDirective.html":{},"directives/ValidateCityDirective.html":{},"directives/ValidateNameDirective.html":{},"directives/ValidatePostalcodeDirective.html":{},"directives/ValidateRegionDirective.html":{},"directives/ValidateStreetDirective.html":{},"index.html":{},"overview.html":{},"additional-documentation/getting-started.html":{}}}],["provides",{"_index":434,"title":{},"body":{"classes/AbstractTestPage.html":{},"classes/Address.html":{}}}],["province",{"_index":574,"title":{},"body":{"classes/AbstractTestPage.html":{},"interfaces/AddrLabelList.html":{},"classes/Address.html":{},"interfaces/CountryList.html":{},"interfaces/GeoAddressResult.html":{},"components/GeocoderInputComponent.html":{},"injectables/GeocoderService.html":{},"interfaces/Maxlengths.html":{},"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{},"interfaces/ReadOnlyFields.html":{},"changelog.html":{},"license.html":{}}}],["province'},{'name",{"_index":741,"title":{},"body":{"components/AccordionCommonComponent.html":{},"components/ButtonComponent.html":{},"components/ButtonGroupComponent.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"components/ConfirmTemplateComponent.html":{},"components/CoreBreadcrumbComponent.html":{},"components/DatepickerComponent.html":{},"components/DropdownComponent.html":{},"components/EmailComponent.html":{},"components/ErrorContainerComponent.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/FullNameComponent.html":{},"components/GeocoderInputComponent.html":{},"components/HeaderComponent.html":{},"components/NameComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"components/RadioComponent.html":{},"components/SampleModalComponent.html":{},"components/SinComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{},"components/XiconButtonComponent.html":{}}}],["province.component.html",{"_index":4171,"title":{},"body":{"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{}}}],["province.component.scss",{"_index":4170,"title":{},"body":{"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{}}}],["province/country",{"_index":1038,"title":{},"body":{"classes/Address.html":{}}}],["province/province.component",{"_index":807,"title":{},"body":{"interfaces/AddrLabelList.html":{},"components/GeocoderInputComponent.html":{},"interfaces/Maxlengths.html":{},"interfaces/ReadOnlyFields.html":{}}}],["province_",{"_index":4174,"title":{},"body":{"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{}}}],["province_list",{"_index":806,"title":{},"body":{"interfaces/AddrLabelList.html":{},"interfaces/Maxlengths.html":{},"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{},"interfaces/ReadOnlyFields.html":{},"coverage.html":{}}}],["province_list.find",{"_index":4218,"title":{},"body":{"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{}}}],["provincecode",{"_index":4192,"title":{},"body":{"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{}}}],["provincecomponent",{"_index":740,"title":{"components/ProvinceComponent.html":{}},"body":{"components/AccordionCommonComponent.html":{},"components/ButtonComponent.html":{},"components/ButtonGroupComponent.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"components/ConfirmTemplateComponent.html":{},"components/CoreBreadcrumbComponent.html":{},"components/DatepickerComponent.html":{},"components/DropdownComponent.html":{},"components/EmailComponent.html":{},"components/ErrorContainerComponent.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/FullNameComponent.html":{},"components/GeocoderInputComponent.html":{},"components/HeaderComponent.html":{},"components/NameComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{},"components/RadioComponent.html":{},"components/SampleModalComponent.html":{},"modules/SharedCoreModule.html":{},"components/SinComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{},"components/XiconButtonComponent.html":{},"coverage.html":{},"overview.html":{}}}],["provincelist",{"_index":804,"title":{"interfaces/ProvinceList.html":{}},"body":{"interfaces/AddrLabelList.html":{},"interfaces/Maxlengths.html":{},"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{},"interfaces/ReadOnlyFields.html":{},"coverage.html":{}}}],["provincial",{"_index":3682,"title":{},"body":{"interfaces/ISpaEnvResponse.html":{}}}],["provision",{"_index":1846,"title":{},"body":{"components/CoreBreadcrumbComponent.html":{}}}],["provlist",{"_index":844,"title":{},"body":{"interfaces/AddrLabelList.html":{},"interfaces/Maxlengths.html":{},"interfaces/ReadOnlyFields.html":{}}}],["provobj",{"_index":944,"title":{},"body":{"interfaces/AddrLabelList.html":{},"interfaces/Maxlengths.html":{},"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{},"interfaces/ReadOnlyFields.html":{}}}],["provobj.description",{"_index":952,"title":{},"body":{"interfaces/AddrLabelList.html":{},"interfaces/Maxlengths.html":{},"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{},"interfaces/ReadOnlyFields.html":{}}}],["provobj.provincecode",{"_index":950,"title":{},"body":{"interfaces/AddrLabelList.html":{},"interfaces/Maxlengths.html":{},"interfaces/ReadOnlyFields.html":{}}}],["prt",{"_index":2238,"title":{},"body":{"interfaces/CountryList.html":{}}}],["pry",{"_index":2229,"title":{},"body":{"interfaces/CountryList.html":{}}}],["pse",{"_index":2222,"title":{},"body":{"interfaces/CountryList.html":{}}}],["pswdfeedback",{"_index":4045,"title":{},"body":{"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{}}}],["pswdfeedback.score",{"_index":4046,"title":{},"body":{"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{}}}],["pswdstrength",{"_index":3963,"title":{},"body":{"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{}}}],["public",{"_index":120,"title":{},"body":{"classes/AbstractFormControl.html":{},"injectables/AbstractPageGuardService.html":{},"injectables/AbstractPgCheckService.html":{},"classes/AbstractTestPage.html":{},"components/AccordionCommonComponent.html":{},"classes/Address.html":{},"classes/Base.html":{},"components/ButtonGroupComponent.html":{},"injectables/CaptchaDataService.html":{},"injectables/CheckCompleteBaseService.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"interfaces/CommonAttachmentJson.html":{},"classes/CommonImage.html":{},"classes/CommonImageProcessingError.html":{},"interfaces/CommonImageScaleFactors.html":{},"classes/CommonImageScaleFactorsImpl.html":{},"interfaces/CommonLogMessage.html":{},"components/ConfirmTemplateComponent.html":{},"interfaces/CountryList.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"injectables/DefaultPageGuardService.html":{},"components/DropdownComponent.html":{},"components/EmailComponent.html":{},"components/FullNameComponent.html":{},"interfaces/FullNameErrorMsg.html":{},"components/GeocoderInputComponent.html":{},"components/HeaderComponent.html":{},"interfaces/IRadioItems.html":{},"interfaces/ISpaEnvResponse.html":{},"components/NameComponent.html":{},"interfaces/PageListInterface.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"classes/Person.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{},"components/RadioComponent.html":{},"interfaces/SampleImageInterface.html":{},"components/SampleModalComponent.html":{},"injectables/ServerPayload.html":{},"components/SinComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{},"changelog.html":{},"todo.html":{}}}],["public_api",{"_index":4159,"title":{},"body":{"components/PostalCodeComponent.html":{}}}],["publish",{"_index":5605,"title":{},"body":{"additional-documentation/local-development/components.html":{}}}],["publishing",{"_index":4820,"title":{},"body":{"changelog.html":{},"additional-documentation/local-development/schematics.html":{},"additional-documentation/local-development/components.html":{}}}],["puerto",{"_index":2241,"title":{},"body":{"interfaces/CountryList.html":{}}}],["pull",{"_index":5435,"title":{},"body":{"index.html":{}}}],["pulled",{"_index":3718,"title":{},"body":{"interfaces/ISpaEnvResponse.html":{}}}],["pure",{"_index":5514,"title":{},"body":{"additional-documentation/getting-started.html":{}}}],["purposes",{"_index":4084,"title":{},"body":{"classes/Person.html":{}}}],["pushes",{"_index":5013,"title":{},"body":{"changelog.html":{}}}],["put",{"_index":3556,"title":{},"body":{"components/HeaderComponent.html":{}}}],["pwdcriteria",{"_index":3969,"title":{},"body":{"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{}}}],["pyf",{"_index":2030,"title":{},"body":{"interfaces/CountryList.html":{}}}],["qat",{"_index":2243,"title":{},"body":{"interfaces/CountryList.html":{}}}],["qatar",{"_index":2244,"title":{},"body":{"interfaces/CountryList.html":{}}}],["qc",{"_index":4207,"title":{},"body":{"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{}}}],["quality",{"_index":2920,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["quam",{"_index":1441,"title":{},"body":{"components/CityComponent.html":{},"interfaces/CountryList.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"interfaces/FileUploaderMsg.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{}}}],["quasi",{"_index":1409,"title":{},"body":{"components/CityComponent.html":{},"interfaces/CountryList.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"interfaces/FileUploaderMsg.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{}}}],["quebec",{"_index":4208,"title":{},"body":{"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{}}}],["query",{"_index":4850,"title":{},"body":{"changelog.html":{}}}],["querylist",{"_index":4516,"title":{},"body":{"components/WizardProgressBarComponent.html":{}}}],["queryparams",{"_index":61,"title":{},"body":{"classes/AbstractBaseForm.html":{},"classes/AbstractForm.html":{},"classes/AbstractHttpService.html":{},"classes/AbstractReactForm.html":{},"injectables/GeocoderService.html":{}}}],["question",{"_index":3290,"title":{},"body":{"components/FormSubmitBarComponent.html":{},"changelog.html":{}}}],["questions",{"_index":3686,"title":{},"body":{"interfaces/ISpaEnvResponse.html":{}}}],["quia",{"_index":1416,"title":{},"body":{"components/CityComponent.html":{},"interfaces/CountryList.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"interfaces/FileUploaderMsg.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{}}}],["quidem",{"_index":1458,"title":{},"body":{"components/CityComponent.html":{},"interfaces/CountryList.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"interfaces/FileUploaderMsg.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{}}}],["quis",{"_index":1438,"title":{},"body":{"components/CityComponent.html":{},"interfaces/CountryList.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"interfaces/FileUploaderMsg.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{}}}],["quisquam",{"_index":1429,"title":{},"body":{"components/CityComponent.html":{},"interfaces/CountryList.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"interfaces/FileUploaderMsg.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{}}}],["quite",{"_index":1271,"title":{},"body":{"injectables/CheckCompleteBaseService.html":{},"interfaces/PageListInterface.html":{}}}],["radio",{"_index":3600,"title":{},"body":{"interfaces/IRadioItems.html":{},"components/RadioComponent.html":{},"changelog.html":{}}}],["radio's",{"_index":3611,"title":{},"body":{"interfaces/IRadioItems.html":{},"components/RadioComponent.html":{}}}],["radio'},{'name",{"_index":743,"title":{},"body":{"components/AccordionCommonComponent.html":{},"components/ButtonComponent.html":{},"components/ButtonGroupComponent.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"components/ConfirmTemplateComponent.html":{},"components/CoreBreadcrumbComponent.html":{},"components/DatepickerComponent.html":{},"components/DropdownComponent.html":{},"components/EmailComponent.html":{},"components/ErrorContainerComponent.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/FullNameComponent.html":{},"components/GeocoderInputComponent.html":{},"components/HeaderComponent.html":{},"components/NameComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"components/RadioComponent.html":{},"components/SampleModalComponent.html":{},"components/SinComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{},"components/XiconButtonComponent.html":{}}}],["radio.component.html",{"_index":3614,"title":{},"body":{"interfaces/IRadioItems.html":{},"components/RadioComponent.html":{}}}],["radio.component.scss",{"_index":3615,"title":{},"body":{"interfaces/IRadioItems.html":{},"components/RadioComponent.html":{}}}],["radio.component.ts",{"_index":5481,"title":{},"body":{"todo.html":{}}}],["radio/checkbox",{"_index":4876,"title":{},"body":{"changelog.html":{}}}],["radiocomponent",{"_index":742,"title":{"components/RadioComponent.html":{}},"body":{"components/AccordionCommonComponent.html":{},"components/ButtonComponent.html":{},"components/ButtonGroupComponent.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"components/ConfirmTemplateComponent.html":{},"components/CoreBreadcrumbComponent.html":{},"components/DatepickerComponent.html":{},"components/DropdownComponent.html":{},"components/EmailComponent.html":{},"components/ErrorContainerComponent.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/FullNameComponent.html":{},"components/GeocoderInputComponent.html":{},"components/HeaderComponent.html":{},"interfaces/IRadioItems.html":{},"components/NameComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"components/RadioComponent.html":{},"components/SampleModalComponent.html":{},"modules/SharedCoreModule.html":{},"components/SinComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{},"components/XiconButtonComponent.html":{},"changelog.html":{},"coverage.html":{},"overview.html":{}}}],["radiolabels",{"_index":3612,"title":{},"body":{"interfaces/IRadioItems.html":{},"components/RadioComponent.html":{}}}],["radios",{"_index":3601,"title":{},"body":{"interfaces/IRadioItems.html":{},"components/RadioComponent.html":{}}}],["ran",{"_index":5585,"title":{},"body":{"additional-documentation/local-development/components.html":{}}}],["range",{"_index":3255,"title":{},"body":{"interfaces/FileUploaderMsg.html":{},"changelog.html":{}}}],["rapid",{"_index":3744,"title":{},"body":{"interfaces/ISpaEnvResponse.html":{}}}],["rapidresponsecode",{"_index":3747,"title":{},"body":{"interfaces/ISpaEnvResponse.html":{}}}],["ratio",{"_index":2916,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["ratione",{"_index":1453,"title":{},"body":{"components/CityComponent.html":{},"interfaces/CountryList.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"interfaces/FileUploaderMsg.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{}}}],["rawimagefile",{"_index":1493,"title":{},"body":{"interfaces/CommonAttachmentJson.html":{},"classes/CommonImage.html":{},"classes/CommonImageProcessingError.html":{},"interfaces/CommonImageScaleFactors.html":{},"classes/CommonImageScaleFactorsImpl.html":{}}}],["rc.0",{"_index":4799,"title":{},"body":{"changelog.html":{}}}],["rc.1",{"_index":4792,"title":{},"body":{"changelog.html":{}}}],["rc.10",{"_index":4751,"title":{},"body":{"changelog.html":{}}}],["rc.11",{"_index":4739,"title":{},"body":{"changelog.html":{}}}],["rc.12",{"_index":4734,"title":{},"body":{"changelog.html":{}}}],["rc.13",{"_index":4731,"title":{},"body":{"changelog.html":{}}}],["rc.14",{"_index":4713,"title":{},"body":{"changelog.html":{}}}],["rc.15",{"_index":4709,"title":{},"body":{"changelog.html":{}}}],["rc.16",{"_index":4702,"title":{},"body":{"changelog.html":{}}}],["rc.17",{"_index":4680,"title":{},"body":{"changelog.html":{}}}],["rc.18",{"_index":4677,"title":{},"body":{"changelog.html":{}}}],["rc.19",{"_index":4672,"title":{},"body":{"changelog.html":{}}}],["rc.2",{"_index":4788,"title":{},"body":{"changelog.html":{}}}],["rc.21",{"_index":4659,"title":{},"body":{"changelog.html":{}}}],["rc.22",{"_index":4650,"title":{},"body":{"changelog.html":{}}}],["rc.23",{"_index":4644,"title":{},"body":{"changelog.html":{}}}],["rc.24",{"_index":4635,"title":{},"body":{"changelog.html":{}}}],["rc.25",{"_index":4629,"title":{},"body":{"changelog.html":{}}}],["rc.26",{"_index":4624,"title":{},"body":{"changelog.html":{}}}],["rc.27",{"_index":4623,"title":{},"body":{"changelog.html":{}}}],["rc.28",{"_index":4619,"title":{},"body":{"changelog.html":{}}}],["rc.29",{"_index":4609,"title":{},"body":{"changelog.html":{}}}],["rc.3",{"_index":4786,"title":{},"body":{"changelog.html":{}}}],["rc.30",{"_index":4600,"title":{},"body":{"changelog.html":{}}}],["rc.31",{"_index":4591,"title":{},"body":{"changelog.html":{}}}],["rc.4",{"_index":4781,"title":{},"body":{"changelog.html":{}}}],["rc.5",{"_index":4775,"title":{},"body":{"changelog.html":{}}}],["rc.6",{"_index":4769,"title":{},"body":{"changelog.html":{}}}],["rc.7",{"_index":4760,"title":{},"body":{"changelog.html":{}}}],["rc.8",{"_index":4757,"title":{},"body":{"changelog.html":{}}}],["rc.9",{"_index":4754,"title":{},"body":{"changelog.html":{}}}],["re",{"_index":815,"title":{},"body":{"interfaces/AddrLabelList.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"interfaces/FileUploaderMsg.html":{},"components/GeocoderInputComponent.html":{},"interfaces/Maxlengths.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"interfaces/ReadOnlyFields.html":{},"changelog.html":{},"additional-documentation/local-development/schematics.html":{},"additional-documentation/local-development/components.html":{}}}],["reach",{"_index":3178,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["react",{"_index":400,"title":{},"body":{"classes/AbstractReactForm.html":{},"changelog.html":{},"coverage.html":{}}}],["reactive",{"_index":2680,"title":{},"body":{"directives/DuplicateCheckDirective.html":{},"components/EmailComponent.html":{},"interfaces/IRadioItems.html":{},"components/NameComponent.html":{},"components/RadioComponent.html":{},"changelog.html":{}}}],["reactiveforms",{"_index":3478,"title":{},"body":{"components/GeocoderInputComponent.html":{}}}],["reactiveformsmodule",{"_index":4282,"title":{},"body":{"modules/SharedCoreModule.html":{}}}],["read",{"_index":2880,"title":{},"body":{"interfaces/FileUploaderMsg.html":{},"interfaces/ISpaEnvResponse.html":{},"index.html":{}}}],["readable",{"_index":503,"title":{},"body":{"classes/AbstractTestPage.html":{},"classes/Container.html":{},"interfaces/WizardProgressItem.html":{}}}],["reader",{"_index":3073,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["reader.onload",{"_index":3128,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["reader.readasdataurl(blob",{"_index":3149,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["reader.readasdataurl(imagefile",{"_index":3202,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["reader.result",{"_index":3188,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["readers",{"_index":482,"title":{},"body":{"classes/AbstractTestPage.html":{},"components/HeaderComponent.html":{}}}],["readme",{"_index":5083,"title":{},"body":{"changelog.html":{},"additional-documentation/local-development/components.html":{}}}],["readonlyfields",{"_index":809,"title":{"interfaces/ReadOnlyFields.html":{}},"body":{"interfaces/AddrLabelList.html":{},"interfaces/Maxlengths.html":{},"interfaces/ReadOnlyFields.html":{},"coverage.html":{}}}],["readpdf(pdffile",{"_index":3203,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["ready",{"_index":1532,"title":{},"body":{"interfaces/CommonAttachmentJson.html":{},"classes/CommonImage.html":{},"classes/CommonImageProcessingError.html":{},"interfaces/CommonImageScaleFactors.html":{},"classes/CommonImageScaleFactorsImpl.html":{}}}],["reason",{"_index":2850,"title":{},"body":{"interfaces/FileUploaderMsg.html":{},"components/GeocoderInputComponent.html":{}}}],["receiving",{"_index":1627,"title":{},"body":{"interfaces/CommonLogMessage.html":{}}}],["recieve",{"_index":3422,"title":{},"body":{"components/GeocoderInputComponent.html":{}}}],["recommend",{"_index":3955,"title":{},"body":{"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{}}}],["redable",{"_index":535,"title":{},"body":{"classes/AbstractTestPage.html":{}}}],["redirect",{"_index":2638,"title":{},"body":{"injectables/DefaultPageGuardService.html":{},"interfaces/PageList.html":{},"injectables/PageStateService.html":{}}}],["reduce",{"_index":4698,"title":{},"body":{"changelog.html":{}}}],["reduced",{"_index":2448,"title":{},"body":{"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{}}}],["ref",{"_index":3093,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["refactor",{"_index":2532,"title":{},"body":{"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"changelog.html":{}}}],["refactored",{"_index":4729,"title":{},"body":{"changelog.html":{}}}],["refactoring",{"_index":4641,"title":{},"body":{"changelog.html":{}}}],["reference",{"_index":5164,"title":{},"body":{"changelog.html":{},"additional-documentation/local-development/components.html":{}}}],["reflect",{"_index":510,"title":{},"body":{"classes/AbstractTestPage.html":{},"additional-documentation/local-development/components.html":{}}}],["refnameval",{"_index":511,"title":{},"body":{"classes/AbstractTestPage.html":{}}}],["regex",{"_index":1058,"title":{},"body":{"classes/Address.html":{}}}],["regex.test(this.postal",{"_index":1060,"title":{},"body":{"classes/Address.html":{}}}],["regexp",{"_index":2710,"title":{},"body":{"components/EmailComponent.html":{},"interfaces/ErrorMessage.html":{},"components/NameComponent.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"directives/ValidateBcPostalDirective.html":{},"directives/ValidateCityDirective.html":{},"directives/ValidateNameDirective.html":{},"directives/ValidatePostalcodeDirective.html":{},"directives/ValidateRegionDirective.html":{},"directives/ValidateStreetDirective.html":{},"changelog.html":{}}}],["regexp('^[vv]\\\\d[abceghj",{"_index":4455,"title":{},"body":{"directives/ValidateBcPostalDirective.html":{},"directives/ValidatePostalcodeDirective.html":{}}}],["regexp(address.postalcodebcregex",{"_index":1059,"title":{},"body":{"classes/Address.html":{}}}],["regexplabel",{"_index":2734,"title":{},"body":{"interfaces/ErrorMessage.html":{},"coverage.html":{}}}],["region.directive",{"_index":4341,"title":{},"body":{"modules/SharedCoreModule.html":{}}}],["region.directive.ts",{"_index":4484,"title":{},"body":{"directives/ValidateRegionDirective.html":{},"coverage.html":{}}}],["region.directive.ts:26",{"_index":4486,"title":{},"body":{"directives/ValidateRegionDirective.html":{}}}],["region/validate",{"_index":4340,"title":{},"body":{"modules/SharedCoreModule.html":{},"directives/ValidateRegionDirective.html":{},"coverage.html":{}}}],["register",{"_index":153,"title":{},"body":{"classes/AbstractFormControl.html":{},"modules/CaptchaModule.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"interfaces/CountryList.html":{},"components/EmailComponent.html":{},"components/GeocoderInputComponent.html":{},"components/NameComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"components/RadioComponent.html":{},"components/SinComponent.html":{},"additional-documentation/getting-started.html":{}}}],["registered",{"_index":812,"title":{},"body":{"interfaces/AddrLabelList.html":{},"interfaces/Maxlengths.html":{},"interfaces/ReadOnlyFields.html":{}}}],["registeronchange",{"_index":123,"title":{},"body":{"classes/AbstractFormControl.html":{},"components/ButtonGroupComponent.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"interfaces/CountryList.html":{},"components/DatepickerComponent.html":{},"components/DropdownComponent.html":{},"components/EmailComponent.html":{},"components/FullNameComponent.html":{},"components/GeocoderInputComponent.html":{},"components/NameComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"components/RadioComponent.html":{},"components/SinComponent.html":{}}}],["registeronchange(fn",{"_index":144,"title":{},"body":{"classes/AbstractFormControl.html":{},"interfaces/AddrLabelList.html":{},"components/ButtonGroupComponent.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"components/DropdownComponent.html":{},"components/EmailComponent.html":{},"components/FullNameComponent.html":{},"interfaces/FullNameErrorMsg.html":{},"components/GeocoderInputComponent.html":{},"interfaces/IRadioItems.html":{},"interfaces/ISpaEnvResponse.html":{},"interfaces/Maxlengths.html":{},"components/NameComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"components/RadioComponent.html":{},"interfaces/ReadOnlyFields.html":{},"components/SinComponent.html":{}}}],["registerontouched",{"_index":124,"title":{},"body":{"classes/AbstractFormControl.html":{},"components/ButtonGroupComponent.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"interfaces/CountryList.html":{},"components/DatepickerComponent.html":{},"components/DropdownComponent.html":{},"components/EmailComponent.html":{},"components/FullNameComponent.html":{},"components/GeocoderInputComponent.html":{},"components/NameComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"components/RadioComponent.html":{},"components/SinComponent.html":{}}}],["registerontouched(fn",{"_index":147,"title":{},"body":{"classes/AbstractFormControl.html":{},"interfaces/AddrLabelList.html":{},"components/ButtonGroupComponent.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"components/DropdownComponent.html":{},"components/EmailComponent.html":{},"components/FullNameComponent.html":{},"interfaces/FullNameErrorMsg.html":{},"components/GeocoderInputComponent.html":{},"interfaces/IRadioItems.html":{},"interfaces/ISpaEnvResponse.html":{},"interfaces/Maxlengths.html":{},"components/NameComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"components/RadioComponent.html":{},"interfaces/ReadOnlyFields.html":{},"components/SinComponent.html":{}}}],["registervalidation",{"_index":125,"title":{},"body":{"classes/AbstractFormControl.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"components/EmailComponent.html":{},"components/NameComponent.html":{},"components/ProvinceComponent.html":{},"components/RadioComponent.html":{},"components/SinComponent.html":{},"changelog.html":{}}}],["registervalidation(ngcontrol",{"_index":149,"title":{},"body":{"classes/AbstractFormControl.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"components/EmailComponent.html":{},"components/NameComponent.html":{},"components/ProvinceComponent.html":{},"components/RadioComponent.html":{},"components/SinComponent.html":{}}}],["registration",{"_index":3789,"title":{},"body":{"guards/LoadPageGuardService.html":{},"guards/RouteGuardService.html":{}}}],["registration.module.ts",{"_index":387,"title":{},"body":{"injectables/AbstractPgCheckService.html":{},"guards/LoadPageGuardService.html":{},"guards/RouteGuardService.html":{}}}],["registrationcontainercomponent",{"_index":1714,"title":{},"body":{"classes/Container.html":{},"interfaces/WizardProgressItem.html":{}}}],["registrationservice",{"_index":388,"title":{},"body":{"injectables/AbstractPgCheckService.html":{},"guards/RouteGuardService.html":{}}}],["related",{"_index":5032,"title":{},"body":{"changelog.html":{},"additional-documentation/getting-started.html":{}}}],["relates",{"_index":5587,"title":{},"body":{"additional-documentation/local-development/components.html":{}}}],["relativeurl",{"_index":307,"title":{},"body":{"classes/AbstractHttpService.html":{},"injectables/GeocoderService.html":{}}}],["release",{"_index":4794,"title":{},"body":{"changelog.html":{}}}],["relevant",{"_index":5522,"title":{},"body":{"additional-documentation/local-development/schematics.html":{}}}],["remove",{"_index":918,"title":{},"body":{"interfaces/AddrLabelList.html":{},"classes/Address.html":{},"interfaces/CommonLogMessage.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"interfaces/FileUploaderMsg.html":{},"interfaces/ISpaEnvResponse.html":{},"interfaces/Maxlengths.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"interfaces/ReadOnlyFields.html":{},"components/SinComponent.html":{},"components/ThumbnailComponent.html":{},"components/XiconButtonComponent.html":{},"changelog.html":{},"todo.html":{}}}],["removed",{"_index":1348,"title":{},"body":{"components/CheckboxComponent.html":{},"interfaces/FileUploaderMsg.html":{},"classes/Person.html":{},"directives/ValidateBcPostalDirective.html":{},"changelog.html":{}}}],["removeline(line",{"_index":917,"title":{},"body":{"interfaces/AddrLabelList.html":{},"interfaces/Maxlengths.html":{},"interfaces/ReadOnlyFields.html":{}}}],["removing",{"_index":3170,"title":{},"body":{"interfaces/FileUploaderMsg.html":{},"changelog.html":{}}}],["rename",{"_index":4664,"title":{},"body":{"changelog.html":{}}}],["renamt",{"_index":4686,"title":{},"body":{"changelog.html":{}}}],["render",{"_index":1515,"title":{},"body":{"interfaces/CommonAttachmentJson.html":{},"classes/CommonImage.html":{},"classes/CommonImageProcessingError.html":{},"interfaces/CommonImageScaleFactors.html":{},"classes/CommonImageScaleFactorsImpl.html":{},"interfaces/ISpaEnvResponse.html":{}}}],["rendering",{"_index":2849,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["reorder",{"_index":4913,"title":{},"body":{"changelog.html":{}}}],["reorganize",{"_index":4991,"title":{},"body":{"changelog.html":{}}}],["repellat",{"_index":1428,"title":{},"body":{"components/CityComponent.html":{},"interfaces/CountryList.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"interfaces/FileUploaderMsg.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{}}}],["replace",{"_index":211,"title":{},"body":{"classes/AbstractFormControl.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"changelog.html":{},"todo.html":{}}}],["replace(/\\s/g",{"_index":4404,"title":{},"body":{"components/SinComponent.html":{}}}],["replace(/_/g",{"_index":4402,"title":{},"body":{"components/SinComponent.html":{}}}],["replacelabeltag",{"_index":169,"title":{},"body":{"classes/AbstractFormControl.html":{},"interfaces/ErrorMessage.html":{},"coverage.html":{}}}],["replacement",{"_index":4689,"title":{},"body":{"changelog.html":{}}}],["reports",{"_index":2421,"title":{},"body":{"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"components/SinComponent.html":{}}}],["reprehenderit",{"_index":1444,"title":{},"body":{"components/CityComponent.html":{},"interfaces/CountryList.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"interfaces/FileUploaderMsg.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{}}}],["republic",{"_index":1955,"title":{},"body":{"interfaces/CountryList.html":{}}}],["repudiandae",{"_index":1450,"title":{},"body":{"components/CityComponent.html":{},"interfaces/CountryList.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"interfaces/FileUploaderMsg.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{}}}],["repurpose",{"_index":1684,"title":{},"body":{"interfaces/CommonLogMessage.html":{}}}],["request",{"_index":268,"title":{},"body":{"classes/AbstractHttpService.html":{},"interfaces/CommonLogMessage.html":{},"components/GeocoderInputComponent.html":{},"injectables/GeocoderService.html":{},"interfaces/ISpaEnvResponse.html":{},"additional-documentation/getting-started.html":{}}}],["request_method",{"_index":1593,"title":{},"body":{"interfaces/CommonLogMessage.html":{}}}],["requests",{"_index":281,"title":{},"body":{"classes/AbstractHttpService.html":{},"interfaces/CommonLogMessage.html":{},"interfaces/GeoAddressResult.html":{},"injectables/GeocoderService.html":{},"index.html":{}}}],["require",{"_index":5392,"title":{},"body":{"coverage.html":{}}}],["require('blueimp",{"_index":2773,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["require('pdfjs",{"_index":2779,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["require('sha1",{"_index":2775,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["required",{"_index":42,"title":{},"body":{"classes/AbstractBaseForm.html":{},"classes/AbstractForm.html":{},"classes/AbstractFormControl.html":{},"classes/AbstractReactForm.html":{},"components/ButtonGroupComponent.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"interfaces/CommonLogMessage.html":{},"interfaces/CountryList.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"components/DropdownComponent.html":{},"components/EmailComponent.html":{},"interfaces/ErrorMessage.html":{},"interfaces/FileUploaderMsg.html":{},"components/FormActionBarComponent.html":{},"components/FullNameComponent.html":{},"interfaces/FullNameErrorMsg.html":{},"interfaces/IRadioItems.html":{},"components/NameComponent.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{},"components/RadioComponent.html":{},"components/SinComponent.html":{},"components/XiconButtonComponent.html":{},"changelog.html":{},"license.html":{},"todo.html":{},"additional-documentation/local-development/schematics.html":{},"additional-documentation/local-development/components.html":{}}}],["requiredmsgseg",{"_index":3318,"title":{},"body":{"components/FullNameComponent.html":{},"interfaces/FullNameErrorMsg.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{}}}],["requiredvalidator",{"_index":4648,"title":{},"body":{"changelog.html":{}}}],["requirements",{"_index":3951,"title":{},"body":{"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"index.html":{}}}],["requires",{"_index":810,"title":{},"body":{"interfaces/AddrLabelList.html":{},"components/ButtonComponent.html":{},"interfaces/ISpaEnvResponse.html":{},"interfaces/Maxlengths.html":{},"interfaces/ReadOnlyFields.html":{}}}],["requisite",{"_index":4244,"title":{},"body":{"guards/RouteGuardService.html":{}}}],["rerum",{"_index":1412,"title":{},"body":{"components/CityComponent.html":{},"interfaces/CountryList.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"interfaces/FileUploaderMsg.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{}}}],["reset",{"_index":1201,"title":{},"body":{"modules/CaptchaModule.html":{},"interfaces/FileUploaderMsg.html":{},"modules/SharedCoreModule.html":{},"overview.html":{}}}],["resetinputfields",{"_index":3237,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["resizeimage",{"_index":3071,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["resizing",{"_index":2908,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["resolution",{"_index":2936,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["resolve",{"_index":5567,"title":{},"body":{"additional-documentation/local-development/schematics.html":{}}}],["resolved",{"_index":3503,"title":{},"body":{"components/GeocoderInputComponent.html":{}}}],["respective",{"_index":272,"title":{},"body":{"classes/AbstractHttpService.html":{},"injectables/GeocoderService.html":{}}}],["responding",{"_index":1676,"title":{},"body":{"interfaces/CommonLogMessage.html":{}}}],["response",{"_index":1177,"title":{},"body":{"injectables/CaptchaDataService.html":{},"interfaces/CommonLogMessage.html":{},"interfaces/FileUploaderMsg.html":{},"interfaces/GeoAddressResult.html":{},"components/GeocoderInputComponent.html":{},"injectables/GeocoderService.html":{},"interfaces/ISpaEnvResponse.html":{},"injectables/ServerPayload.html":{},"changelog.html":{}}}],["responsetype",{"_index":350,"title":{},"body":{"classes/AbstractHttpService.html":{},"interfaces/CommonLogMessage.html":{}}}],["rest",{"_index":3252,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["restore",{"_index":3820,"title":{},"body":{"classes/MoHCommonLibraryError.html":{}}}],["restrictdate",{"_index":4789,"title":{},"body":{"changelog.html":{}}}],["result",{"_index":83,"title":{},"body":{"classes/AbstractBaseForm.html":{},"classes/AbstractForm.html":{},"classes/AbstractFormControl.html":{},"classes/AbstractHttpService.html":{},"injectables/AbstractPageGuardService.html":{},"injectables/AbstractPgCheckService.html":{},"classes/AbstractReactForm.html":{},"classes/AbstractTestPage.html":{},"components/AccordionCommonComponent.html":{},"interfaces/AddrLabelList.html":{},"classes/Address.html":{},"classes/Base.html":{},"components/ButtonComponent.html":{},"components/ButtonGroupComponent.html":{},"injectables/CaptchaDataService.html":{},"modules/CaptchaModule.html":{},"injectables/CheckCompleteBaseService.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"interfaces/CommonAttachmentJson.html":{},"classes/CommonImage.html":{},"classes/CommonImageProcessingError.html":{},"interfaces/CommonImageScaleFactors.html":{},"classes/CommonImageScaleFactorsImpl.html":{},"interfaces/CommonLogMessage.html":{},"components/ConfirmTemplateComponent.html":{},"classes/Container.html":{},"injectables/ContainerService.html":{},"components/CoreBreadcrumbComponent.html":{},"interfaces/CountryList.html":{},"interfaces/DateErrorMsg.html":{},"directives/DateFieldFormatDirective.html":{},"components/DatepickerComponent.html":{},"injectables/DefaultPageGuardService.html":{},"components/DropdownComponent.html":{},"directives/DuplicateCheckDirective.html":{},"components/EmailComponent.html":{},"components/ErrorContainerComponent.html":{},"interfaces/ErrorMessage.html":{},"interfaces/FileUploaderMsg.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/FullNameComponent.html":{},"interfaces/FullNameErrorMsg.html":{},"interfaces/GeoAddressResult.html":{},"components/GeocoderInputComponent.html":{},"injectables/GeocoderService.html":{},"components/HeaderComponent.html":{},"interfaces/IRadioItems.html":{},"interfaces/ISpaEnvResponse.html":{},"guards/LoadPageGuardService.html":{},"interfaces/Maxlengths.html":{},"classes/MoHCommonLibraryError.html":{},"components/NameComponent.html":{},"components/PageFrameworkComponent.html":{},"interfaces/PageList.html":{},"interfaces/PageListInterface.html":{},"components/PageSectionComponent.html":{},"injectables/PageStateService.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"classes/Person.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{},"components/RadioComponent.html":{},"interfaces/ReadOnlyFields.html":{},"guards/RouteGuardService.html":{},"interfaces/SampleImageInterface.html":{},"components/SampleModalComponent.html":{},"injectables/ServerPayload.html":{},"modules/SharedCoreModule.html":{},"interfaces/SimpleDate.html":{},"components/SinComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"directives/ValidateBcPostalDirective.html":{},"directives/ValidateCityDirective.html":{},"directives/ValidateNameDirective.html":{},"directives/ValidatePostalcodeDirective.html":{},"directives/ValidateRegionDirective.html":{},"directives/ValidateStreetDirective.html":{},"components/WizardProgressBarComponent.html":{},"interfaces/WizardProgressItem.html":{},"components/XiconButtonComponent.html":{},"changelog.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"todo.html":{},"additional-documentation/getting-started.html":{},"additional-documentation/local-development.html":{},"additional-documentation/local-development/schematics.html":{},"additional-documentation/local-development/components.html":{}}}],["results",{"_index":85,"title":{},"body":{"classes/AbstractBaseForm.html":{},"classes/AbstractForm.html":{},"classes/AbstractFormControl.html":{},"classes/AbstractHttpService.html":{},"injectables/AbstractPageGuardService.html":{},"injectables/AbstractPgCheckService.html":{},"classes/AbstractReactForm.html":{},"classes/AbstractTestPage.html":{},"components/AccordionCommonComponent.html":{},"interfaces/AddrLabelList.html":{},"classes/Address.html":{},"classes/Base.html":{},"components/ButtonComponent.html":{},"components/ButtonGroupComponent.html":{},"injectables/CaptchaDataService.html":{},"modules/CaptchaModule.html":{},"injectables/CheckCompleteBaseService.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"interfaces/CommonAttachmentJson.html":{},"classes/CommonImage.html":{},"classes/CommonImageProcessingError.html":{},"interfaces/CommonImageScaleFactors.html":{},"classes/CommonImageScaleFactorsImpl.html":{},"interfaces/CommonLogMessage.html":{},"components/ConfirmTemplateComponent.html":{},"classes/Container.html":{},"injectables/ContainerService.html":{},"components/CoreBreadcrumbComponent.html":{},"interfaces/CountryList.html":{},"interfaces/DateErrorMsg.html":{},"directives/DateFieldFormatDirective.html":{},"components/DatepickerComponent.html":{},"injectables/DefaultPageGuardService.html":{},"components/DropdownComponent.html":{},"directives/DuplicateCheckDirective.html":{},"components/EmailComponent.html":{},"components/ErrorContainerComponent.html":{},"interfaces/ErrorMessage.html":{},"interfaces/FileUploaderMsg.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/FullNameComponent.html":{},"interfaces/FullNameErrorMsg.html":{},"interfaces/GeoAddressResult.html":{},"components/GeocoderInputComponent.html":{},"injectables/GeocoderService.html":{},"components/HeaderComponent.html":{},"interfaces/IRadioItems.html":{},"interfaces/ISpaEnvResponse.html":{},"guards/LoadPageGuardService.html":{},"interfaces/Maxlengths.html":{},"classes/MoHCommonLibraryError.html":{},"components/NameComponent.html":{},"components/PageFrameworkComponent.html":{},"interfaces/PageList.html":{},"interfaces/PageListInterface.html":{},"components/PageSectionComponent.html":{},"injectables/PageStateService.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"classes/Person.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{},"components/RadioComponent.html":{},"interfaces/ReadOnlyFields.html":{},"guards/RouteGuardService.html":{},"interfaces/SampleImageInterface.html":{},"components/SampleModalComponent.html":{},"injectables/ServerPayload.html":{},"modules/SharedCoreModule.html":{},"interfaces/SimpleDate.html":{},"components/SinComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"directives/ValidateBcPostalDirective.html":{},"directives/ValidateCityDirective.html":{},"directives/ValidateNameDirective.html":{},"directives/ValidatePostalcodeDirective.html":{},"directives/ValidateRegionDirective.html":{},"directives/ValidateStreetDirective.html":{},"components/WizardProgressBarComponent.html":{},"interfaces/WizardProgressItem.html":{},"components/XiconButtonComponent.html":{},"changelog.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"todo.html":{},"additional-documentation/getting-started.html":{},"additional-documentation/local-development.html":{},"additional-documentation/local-development/schematics.html":{},"additional-documentation/local-development/components.html":{}}}],["retains",{"_index":2914,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["retrieve",{"_index":4930,"title":{},"body":{"changelog.html":{}}}],["retry",{"_index":3158,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["retrystrategy(maxretry",{"_index":3160,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["retrywhen",{"_index":2757,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["return",{"_index":108,"title":{},"body":{"classes/AbstractForm.html":{},"classes/AbstractFormControl.html":{},"classes/AbstractHttpService.html":{},"classes/AbstractReactForm.html":{},"classes/AbstractTestPage.html":{},"interfaces/AddrLabelList.html":{},"classes/Address.html":{},"injectables/CaptchaDataService.html":{},"modules/CaptchaModule.html":{},"injectables/CheckCompleteBaseService.html":{},"components/CityComponent.html":{},"interfaces/CommonAttachmentJson.html":{},"classes/CommonImage.html":{},"classes/CommonImageProcessingError.html":{},"interfaces/CommonImageScaleFactors.html":{},"classes/CommonImageScaleFactorsImpl.html":{},"interfaces/CommonLogMessage.html":{},"components/ConfirmTemplateComponent.html":{},"classes/Container.html":{},"interfaces/CountryList.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"injectables/DefaultPageGuardService.html":{},"directives/DuplicateCheckDirective.html":{},"components/EmailComponent.html":{},"interfaces/ErrorMessage.html":{},"interfaces/FileUploaderMsg.html":{},"components/FormActionBarComponent.html":{},"interfaces/GeoAddressResult.html":{},"components/GeocoderInputComponent.html":{},"injectables/GeocoderService.html":{},"components/HeaderComponent.html":{},"interfaces/IRadioItems.html":{},"interfaces/ISpaEnvResponse.html":{},"guards/LoadPageGuardService.html":{},"interfaces/Maxlengths.html":{},"components/NameComponent.html":{},"interfaces/PageList.html":{},"interfaces/PageListInterface.html":{},"injectables/PageStateService.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"classes/Person.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{},"components/RadioComponent.html":{},"interfaces/ReadOnlyFields.html":{},"guards/RouteGuardService.html":{},"injectables/ServerPayload.html":{},"components/SinComponent.html":{},"directives/ValidateBcPostalDirective.html":{},"directives/ValidateCityDirective.html":{},"directives/ValidateNameDirective.html":{},"directives/ValidatePostalcodeDirective.html":{},"directives/ValidateRegionDirective.html":{},"directives/ValidateStreetDirective.html":{},"components/WizardProgressBarComponent.html":{},"interfaces/WizardProgressItem.html":{},"changelog.html":{}}}],["returned",{"_index":1180,"title":{},"body":{"injectables/CaptchaDataService.html":{},"interfaces/CommonLogMessage.html":{},"components/GeocoderInputComponent.html":{},"interfaces/ISpaEnvResponse.html":{},"interfaces/PageList.html":{},"injectables/PageStateService.html":{},"injectables/ServerPayload.html":{}}}],["returns",{"_index":49,"title":{},"body":{"classes/AbstractBaseForm.html":{},"classes/AbstractForm.html":{},"classes/AbstractFormControl.html":{},"classes/AbstractHttpService.html":{},"injectables/AbstractPageGuardService.html":{},"injectables/AbstractPgCheckService.html":{},"classes/AbstractReactForm.html":{},"classes/AbstractTestPage.html":{},"components/AccordionCommonComponent.html":{},"classes/Address.html":{},"components/ButtonComponent.html":{},"components/ButtonGroupComponent.html":{},"injectables/CaptchaDataService.html":{},"modules/CaptchaModule.html":{},"injectables/CheckCompleteBaseService.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"interfaces/CommonAttachmentJson.html":{},"classes/CommonImage.html":{},"classes/CommonImageProcessingError.html":{},"interfaces/CommonImageScaleFactors.html":{},"classes/CommonImageScaleFactorsImpl.html":{},"classes/Container.html":{},"injectables/ContainerService.html":{},"components/CoreBreadcrumbComponent.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"injectables/DefaultPageGuardService.html":{},"components/DropdownComponent.html":{},"directives/DuplicateCheckDirective.html":{},"components/EmailComponent.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/FullNameComponent.html":{},"components/GeocoderInputComponent.html":{},"injectables/GeocoderService.html":{},"components/HeaderComponent.html":{},"guards/LoadPageGuardService.html":{},"components/NameComponent.html":{},"components/PageFrameworkComponent.html":{},"interfaces/PageList.html":{},"interfaces/PageListInterface.html":{},"components/PageSectionComponent.html":{},"injectables/PageStateService.html":{},"components/PasswordComponent.html":{},"classes/Person.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"components/RadioComponent.html":{},"guards/RouteGuardService.html":{},"components/SampleModalComponent.html":{},"components/SinComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"directives/ValidateBcPostalDirective.html":{},"directives/ValidateCityDirective.html":{},"directives/ValidateNameDirective.html":{},"directives/ValidatePostalcodeDirective.html":{},"directives/ValidateRegionDirective.html":{},"directives/ValidateStreetDirective.html":{},"components/WizardProgressBarComponent.html":{},"components/XiconButtonComponent.html":{}}}],["reu",{"_index":2245,"title":{},"body":{"interfaces/CountryList.html":{}}}],["reverts",{"_index":4979,"title":{},"body":{"changelog.html":{}}}],["reviewmode",{"_index":4419,"title":{},"body":{"components/ThumbnailComponent.html":{}}}],["revise",{"_index":1270,"title":{},"body":{"injectables/CheckCompleteBaseService.html":{},"interfaces/PageListInterface.html":{}}}],["rica",{"_index":1979,"title":{},"body":{"interfaces/CountryList.html":{}}}],["rico",{"_index":2242,"title":{},"body":{"interfaces/CountryList.html":{}}}],["right",{"_index":577,"title":{},"body":{"classes/AbstractTestPage.html":{},"components/CoreBreadcrumbComponent.html":{},"additional-documentation/local-development/schematics.html":{}}}],["rimraf",{"_index":5195,"title":{},"body":{"changelog.html":{}}}],["risky",{"_index":3993,"title":{},"body":{"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{}}}],["role=\"progressbar",{"_index":4048,"title":{},"body":{"components/PasswordComponent.html":{}}}],["role=alert",{"_index":625,"title":{},"body":{"classes/AbstractTestPage.html":{}}}],["romania",{"_index":2248,"title":{},"body":{"interfaces/CountryList.html":{}}}],["root",{"_index":1278,"title":{},"body":{"injectables/CheckCompleteBaseService.html":{},"interfaces/CommonLogMessage.html":{},"injectables/ContainerService.html":{},"injectables/DefaultPageGuardService.html":{},"interfaces/GeoAddressResult.html":{},"injectables/GeocoderService.html":{},"guards/LoadPageGuardService.html":{},"interfaces/PageList.html":{},"interfaces/PageListInterface.html":{},"injectables/PageStateService.html":{},"guards/RouteGuardService.html":{}}}],["rotate",{"_index":2899,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["rou",{"_index":2247,"title":{},"body":{"interfaces/CountryList.html":{}}}],["route",{"_index":65,"title":{},"body":{"classes/AbstractBaseForm.html":{},"classes/AbstractForm.html":{},"injectables/AbstractPageGuardService.html":{},"injectables/AbstractPgCheckService.html":{},"classes/AbstractReactForm.html":{},"interfaces/AddrLabelList.html":{},"injectables/CheckCompleteBaseService.html":{},"classes/Container.html":{},"guards/LoadPageGuardService.html":{},"interfaces/Maxlengths.html":{},"interfaces/PageList.html":{},"interfaces/PageListInterface.html":{},"injectables/PageStateService.html":{},"interfaces/ReadOnlyFields.html":{},"guards/RouteGuardService.html":{},"components/WizardProgressBarComponent.html":{},"interfaces/WizardProgressItem.html":{},"changelog.html":{}}}],["routeconst",{"_index":3877,"title":{},"body":{"interfaces/PageList.html":{},"injectables/PageStateService.html":{}}}],["routeconst.find",{"_index":3884,"title":{},"body":{"interfaces/PageList.html":{},"injectables/PageStateService.html":{}}}],["routeguard",{"_index":5031,"title":{},"body":{"changelog.html":{}}}],["routeguardservice",{"_index":389,"title":{"guards/RouteGuardService.html":{}},"body":{"injectables/AbstractPgCheckService.html":{},"injectables/CheckCompleteBaseService.html":{},"interfaces/PageListInterface.html":{},"guards/RouteGuardService.html":{},"changelog.html":{},"coverage.html":{}}}],["routeisactive",{"_index":3563,"title":{},"body":{"components/HeaderComponent.html":{}}}],["routeisactive(url",{"_index":3575,"title":{},"body":{"components/HeaderComponent.html":{}}}],["routelistconst",{"_index":3874,"title":{},"body":{"interfaces/PageList.html":{},"injectables/PageStateService.html":{}}}],["routelistconst[x",{"_index":3879,"title":{},"body":{"interfaces/PageList.html":{},"injectables/PageStateService.html":{}}}],["routepath",{"_index":1763,"title":{},"body":{"classes/Container.html":{}}}],["routepath.split",{"_index":1775,"title":{},"body":{"classes/Container.html":{},"interfaces/WizardProgressItem.html":{}}}],["router",{"_index":21,"title":{},"body":{"classes/AbstractBaseForm.html":{},"classes/AbstractForm.html":{},"classes/AbstractReactForm.html":{},"injectables/CheckCompleteBaseService.html":{},"interfaces/FileUploaderMsg.html":{},"components/HeaderComponent.html":{},"guards/LoadPageGuardService.html":{},"interfaces/PageList.html":{},"interfaces/PageListInterface.html":{},"injectables/PageStateService.html":{},"guards/RouteGuardService.html":{},"components/WizardProgressBarComponent.html":{}}}],["routerevents",{"_index":4495,"title":{},"body":{"components/WizardProgressBarComponent.html":{}}}],["routermodule",{"_index":4286,"title":{},"body":{"modules/SharedCoreModule.html":{}}}],["routerstatesnapshot",{"_index":3802,"title":{},"body":{"guards/LoadPageGuardService.html":{},"guards/RouteGuardService.html":{}}}],["routes",{"_index":3784,"title":{},"body":{"guards/LoadPageGuardService.html":{},"guards/RouteGuardService.html":{}}}],["routing.modle.ts",{"_index":3790,"title":{},"body":{"guards/LoadPageGuardService.html":{},"guards/RouteGuardService.html":{}}}],["routing=true",{"_index":5547,"title":{},"body":{"additional-documentation/local-development/schematics.html":{}}}],["row",{"_index":3604,"title":{},"body":{"interfaces/IRadioItems.html":{},"components/RadioComponent.html":{}}}],["rules",{"_index":5108,"title":{},"body":{"changelog.html":{}}}],["run",{"_index":4535,"title":{},"body":{"components/WizardProgressBarComponent.html":{},"changelog.html":{},"additional-documentation/local-development/schematics.html":{},"additional-documentation/local-development/components.html":{}}}],["running",{"_index":5199,"title":{},"body":{"changelog.html":{},"additional-documentation/local-development/schematics.html":{}}}],["runs",{"_index":99,"title":{},"body":{"classes/AbstractForm.html":{},"classes/AbstractReactForm.html":{},"additional-documentation/local-development/schematics.html":{},"additional-documentation/local-development/components.html":{}}}],["runtime",{"_index":5162,"title":{},"body":{"changelog.html":{}}}],["rural",{"_index":850,"title":{},"body":{"interfaces/AddrLabelList.html":{},"interfaces/Maxlengths.html":{},"interfaces/ReadOnlyFields.html":{}}}],["rus",{"_index":2249,"title":{},"body":{"interfaces/CountryList.html":{}}}],["russian",{"_index":2250,"title":{},"body":{"interfaces/CountryList.html":{}}}],["rwa",{"_index":2252,"title":{},"body":{"interfaces/CountryList.html":{}}}],["rwanda",{"_index":2253,"title":{},"body":{"interfaces/CountryList.html":{}}}],["rxjs",{"_index":316,"title":{},"body":{"classes/AbstractHttpService.html":{},"injectables/CaptchaDataService.html":{},"interfaces/CommonLogMessage.html":{},"classes/Container.html":{},"injectables/ContainerService.html":{},"interfaces/FileUploaderMsg.html":{},"interfaces/GeoAddressResult.html":{},"components/GeocoderInputComponent.html":{},"injectables/GeocoderService.html":{},"interfaces/ISpaEnvResponse.html":{},"guards/LoadPageGuardService.html":{},"guards/RouteGuardService.html":{},"injectables/ServerPayload.html":{},"components/WizardProgressBarComponent.html":{},"interfaces/WizardProgressItem.html":{},"dependencies.html":{}}}],["rxjs/operators",{"_index":319,"title":{},"body":{"classes/AbstractHttpService.html":{},"interfaces/FileUploaderMsg.html":{},"components/FullNameComponent.html":{},"interfaces/FullNameErrorMsg.html":{},"interfaces/GeoAddressResult.html":{},"components/GeocoderInputComponent.html":{},"injectables/GeocoderService.html":{},"components/HeaderComponent.html":{},"components/WizardProgressBarComponent.html":{}}}],["réunion",{"_index":2246,"title":{},"body":{"interfaces/CountryList.html":{}}}],["s",{"_index":3102,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["s+)@(\\s+)\\.(\\s",{"_index":2711,"title":{},"body":{"components/EmailComponent.html":{}}}],["saba",{"_index":1917,"title":{},"body":{"interfaces/CountryList.html":{}}}],["safe",{"_index":4555,"title":{},"body":{"components/WizardProgressBarComponent.html":{}}}],["sahara",{"_index":2398,"title":{},"body":{"interfaces/CountryList.html":{}}}],["saint",{"_index":2255,"title":{},"body":{"interfaces/CountryList.html":{}}}],["salvador",{"_index":2006,"title":{},"body":{"interfaces/CountryList.html":{}}}],["same",{"_index":595,"title":{},"body":{"classes/AbstractTestPage.html":{},"interfaces/AddrLabelList.html":{},"components/ButtonComponent.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"interfaces/GeoAddressResult.html":{},"injectables/GeocoderService.html":{},"guards/LoadPageGuardService.html":{},"interfaces/Maxlengths.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"interfaces/ReadOnlyFields.html":{},"guards/RouteGuardService.html":{},"changelog.html":{},"additional-documentation/local-development/schematics.html":{},"additional-documentation/local-development/components.html":{}}}],["samoa",{"_index":1868,"title":{},"body":{"interfaces/CountryList.html":{}}}],["sample",{"_index":745,"title":{},"body":{"components/AccordionCommonComponent.html":{},"components/ButtonComponent.html":{},"components/ButtonGroupComponent.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"components/ConfirmTemplateComponent.html":{},"components/CoreBreadcrumbComponent.html":{},"components/DatepickerComponent.html":{},"components/DropdownComponent.html":{},"components/EmailComponent.html":{},"components/ErrorContainerComponent.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/FullNameComponent.html":{},"components/GeocoderInputComponent.html":{},"components/HeaderComponent.html":{},"components/NameComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"components/RadioComponent.html":{},"interfaces/SampleImageInterface.html":{},"components/SampleModalComponent.html":{},"components/SinComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{},"components/XiconButtonComponent.html":{},"changelog.html":{}}}],["sampleimageinterface",{"_index":4248,"title":{"interfaces/SampleImageInterface.html":{}},"body":{"interfaces/SampleImageInterface.html":{},"components/SampleModalComponent.html":{},"coverage.html":{}}}],["samplemodal",{"_index":4253,"title":{},"body":{"interfaces/SampleImageInterface.html":{},"components/SampleModalComponent.html":{}}}],["samplemodalcomponent",{"_index":744,"title":{"components/SampleModalComponent.html":{}},"body":{"components/AccordionCommonComponent.html":{},"components/ButtonComponent.html":{},"components/ButtonGroupComponent.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"components/ConfirmTemplateComponent.html":{},"components/CoreBreadcrumbComponent.html":{},"components/DatepickerComponent.html":{},"components/DropdownComponent.html":{},"components/EmailComponent.html":{},"components/ErrorContainerComponent.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/FullNameComponent.html":{},"components/GeocoderInputComponent.html":{},"components/HeaderComponent.html":{},"components/NameComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"components/RadioComponent.html":{},"interfaces/SampleImageInterface.html":{},"components/SampleModalComponent.html":{},"modules/SharedCoreModule.html":{},"components/SinComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{},"components/XiconButtonComponent.html":{},"coverage.html":{},"overview.html":{}}}],["san",{"_index":2278,"title":{},"body":{"interfaces/CountryList.html":{}}}],["sandwich",{"_index":2313,"title":{},"body":{"interfaces/CountryList.html":{}}}],["sao",{"_index":2281,"title":{},"body":{"interfaces/CountryList.html":{}}}],["sapiente",{"_index":1406,"title":{},"body":{"components/CityComponent.html":{},"interfaces/CountryList.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"interfaces/FileUploaderMsg.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{}}}],["saskatchewan",{"_index":4210,"title":{},"body":{"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{}}}],["satisfy",{"_index":2526,"title":{},"body":{"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{}}}],["satisifed",{"_index":3712,"title":{},"body":{"interfaces/ISpaEnvResponse.html":{}}}],["sau",{"_index":2284,"title":{},"body":{"interfaces/CountryList.html":{}}}],["saudi",{"_index":2285,"title":{},"body":{"interfaces/CountryList.html":{}}}],["save",{"_index":3512,"title":{},"body":{"components/GeocoderInputComponent.html":{},"index.html":{}}}],["saved",{"_index":2943,"title":{},"body":{"interfaces/FileUploaderMsg.html":{},"interfaces/ISpaEnvResponse.html":{}}}],["saving",{"_index":3172,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["sb",{"_index":4607,"title":{},"body":{"changelog.html":{}}}],["scale",{"_index":1547,"title":{},"body":{"interfaces/CommonAttachmentJson.html":{},"classes/CommonImage.html":{},"classes/CommonImageProcessingError.html":{},"interfaces/CommonImageScaleFactors.html":{},"classes/CommonImageScaleFactorsImpl.html":{},"interfaces/FileUploaderMsg.html":{}}}],["scaled",{"_index":3125,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["scaledimage",{"_index":3091,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["scaledown",{"_index":1567,"title":{},"body":{"interfaces/CommonImageScaleFactors.html":{},"classes/CommonImageScaleFactorsImpl.html":{}}}],["scaledown(scale",{"_index":1540,"title":{},"body":{"interfaces/CommonAttachmentJson.html":{},"classes/CommonImage.html":{},"classes/CommonImageProcessingError.html":{},"interfaces/CommonImageScaleFactors.html":{},"classes/CommonImageScaleFactorsImpl.html":{}}}],["scaledwidth",{"_index":4415,"title":{},"body":{"components/ThumbnailComponent.html":{}}}],["scaledwidthstring",{"_index":4435,"title":{},"body":{"components/ThumbnailComponent.html":{}}}],["scalefactors",{"_index":3036,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["scalefactors.heightfactor",{"_index":3156,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["scalefactors.scaledown(reductionscalefactor",{"_index":3037,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["scalefactors.widthfactor",{"_index":3153,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["scaling",{"_index":2996,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["scan",{"_index":2755,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["scan((acc",{"_index":3163,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["schedule",{"_index":4534,"title":{},"body":{"components/WizardProgressBarComponent.html":{}}}],["schematic",{"_index":5217,"title":{},"body":{"changelog.html":{},"additional-documentation/local-development/schematics.html":{}}}],["schematiccreating",{"_index":5550,"title":{},"body":{"additional-documentation/local-development/schematics.html":{}}}],["schematics",{"_index":5216,"title":{"additional-documentation/local-development/schematics.html":{}},"body":{"changelog.html":{},"additional-documentation/local-development.html":{},"additional-documentation/local-development/schematics.html":{},"additional-documentation/local-development/components.html":{}}}],["schematics:moh",{"_index":5549,"title":{},"body":{"additional-documentation/local-development/schematics.html":{}}}],["schemtaics",{"_index":5527,"title":{},"body":{"additional-documentation/local-development/schematics.html":{}}}],["school",{"_index":3658,"title":{},"body":{"interfaces/ISpaEnvResponse.html":{}}}],["scotia",{"_index":4202,"title":{},"body":{"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{}}}],["screen",{"_index":481,"title":{},"body":{"classes/AbstractTestPage.html":{},"components/HeaderComponent.html":{}}}],["screenreader",{"_index":4971,"title":{},"body":{"changelog.html":{}}}],["script",{"_index":5241,"title":{},"body":{"changelog.html":{}}}],["scripts",{"_index":5079,"title":{},"body":{"changelog.html":{},"additional-documentation/local-development/schematics.html":{},"additional-documentation/local-development/components.html":{}}}],["scroll",{"_index":3278,"title":{},"body":{"components/FormActionBarComponent.html":{},"components/WizardProgressBarComponent.html":{}}}],["scrolldown",{"_index":461,"title":{},"body":{"classes/AbstractTestPage.html":{}}}],["scrolling",{"_index":4661,"title":{},"body":{"changelog.html":{}}}],["scrolls",{"_index":67,"title":{},"body":{"classes/AbstractBaseForm.html":{},"classes/AbstractForm.html":{},"classes/AbstractReactForm.html":{},"classes/AbstractTestPage.html":{},"components/WizardProgressBarComponent.html":{}}}],["scrollstepintoview",{"_index":4499,"title":{},"body":{"components/WizardProgressBarComponent.html":{}}}],["scrollto",{"_index":82,"title":{},"body":{"classes/AbstractBaseForm.html":{},"changelog.html":{},"coverage.html":{}}}],["scrolltoerror",{"_index":3272,"title":{},"body":{"components/FormActionBarComponent.html":{},"changelog.html":{},"coverage.html":{}}}],["scrolltoerrorsonsubmit",{"_index":3263,"title":{},"body":{"components/FormActionBarComponent.html":{}}}],["scrollup",{"_index":462,"title":{},"body":{"classes/AbstractTestPage.html":{}}}],["scss",{"_index":5577,"title":{},"body":{"additional-documentation/local-development/schematics.html":{}}}],["sdn",{"_index":2321,"title":{},"body":{"interfaces/CountryList.html":{}}}],["search",{"_index":953,"title":{},"body":{"interfaces/AddrLabelList.html":{},"interfaces/CommonLogMessage.html":{},"components/GeocoderInputComponent.html":{},"interfaces/Maxlengths.html":{},"interfaces/ReadOnlyFields.html":{},"todo.html":{}}}],["searching",{"_index":3473,"title":{},"body":{"components/GeocoderInputComponent.html":{}}}],["searchtext",{"_index":3428,"title":{},"body":{"components/GeocoderInputComponent.html":{}}}],["second",{"_index":838,"title":{},"body":{"interfaces/AddrLabelList.html":{},"interfaces/Maxlengths.html":{},"interfaces/ReadOnlyFields.html":{}}}],["secondary",{"_index":1105,"title":{},"body":{"components/ButtonComponent.html":{},"interfaces/FileUploaderMsg.html":{},"additional-documentation/getting-started.html":{}}}],["section",{"_index":3552,"title":{},"body":{"components/HeaderComponent.html":{},"interfaces/ISpaEnvResponse.html":{},"components/PageSectionComponent.html":{},"changelog.html":{},"additional-documentation/getting-started.html":{}}}],["section'},{'name",{"_index":729,"title":{},"body":{"components/AccordionCommonComponent.html":{},"components/ButtonComponent.html":{},"components/ButtonGroupComponent.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"components/ConfirmTemplateComponent.html":{},"components/CoreBreadcrumbComponent.html":{},"components/DatepickerComponent.html":{},"components/DropdownComponent.html":{},"components/EmailComponent.html":{},"components/ErrorContainerComponent.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/FullNameComponent.html":{},"components/GeocoderInputComponent.html":{},"components/HeaderComponent.html":{},"components/NameComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"components/RadioComponent.html":{},"components/SampleModalComponent.html":{},"components/SinComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{},"components/XiconButtonComponent.html":{}}}],["section.component",{"_index":4296,"title":{},"body":{"modules/SharedCoreModule.html":{}}}],["section.component.html",{"_index":3911,"title":{},"body":{"components/PageSectionComponent.html":{}}}],["section.component.scss",{"_index":3910,"title":{},"body":{"components/PageSectionComponent.html":{}}}],["section.component.ts",{"_index":3909,"title":{},"body":{"components/PageSectionComponent.html":{},"coverage.html":{}}}],["section.component.ts:17",{"_index":3912,"title":{},"body":{"components/PageSectionComponent.html":{}}}],["section.component.ts:21",{"_index":3914,"title":{},"body":{"components/PageSectionComponent.html":{}}}],["section/page",{"_index":3908,"title":{},"body":{"components/PageSectionComponent.html":{},"modules/SharedCoreModule.html":{},"coverage.html":{}}}],["sections",{"_index":5211,"title":{},"body":{"changelog.html":{}}}],["secure",{"_index":3653,"title":{},"body":{"interfaces/ISpaEnvResponse.html":{}}}],["security",{"_index":5091,"title":{},"body":{"changelog.html":{},"todo.html":{}}}],["see",{"_index":373,"title":{},"body":{"injectables/AbstractPageGuardService.html":{},"injectables/AbstractPgCheckService.html":{},"components/ButtonGroupComponent.html":{},"injectables/CheckCompleteBaseService.html":{},"interfaces/CommonAttachmentJson.html":{},"classes/CommonImage.html":{},"classes/CommonImageProcessingError.html":{},"interfaces/CommonImageScaleFactors.html":{},"classes/CommonImageScaleFactorsImpl.html":{},"interfaces/CountryList.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"components/EmailComponent.html":{},"interfaces/FileUploaderMsg.html":{},"components/FullNameComponent.html":{},"interfaces/FullNameErrorMsg.html":{},"interfaces/ISpaEnvResponse.html":{},"components/NameComponent.html":{},"interfaces/PageListInterface.html":{},"changelog.html":{},"license.html":{},"additional-documentation/local-development/components.html":{}}}],["select",{"_index":569,"title":{},"body":{"classes/AbstractTestPage.html":{},"interfaces/AddrLabelList.html":{},"components/CoreBreadcrumbComponent.html":{},"interfaces/CountryList.html":{},"interfaces/Maxlengths.html":{},"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{},"interfaces/ReadOnlyFields.html":{},"modules/SharedCoreModule.html":{},"changelog.html":{},"dependencies.html":{}}}],["select/ng",{"_index":4299,"title":{},"body":{"modules/SharedCoreModule.html":{},"dependencies.html":{}}}],["select[id=\"${labelid}\"]`)).click",{"_index":628,"title":{},"body":{"classes/AbstractTestPage.html":{}}}],["select[ng",{"_index":650,"title":{},"body":{"classes/AbstractTestPage.html":{}}}],["selected",{"_index":3530,"title":{},"body":{"components/GeocoderInputComponent.html":{}}}],["selectedaddress",{"_index":3429,"title":{},"body":{"components/GeocoderInputComponent.html":{}}}],["selectfilelabelref",{"_index":2806,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["selecting",{"_index":600,"title":{},"body":{"classes/AbstractTestPage.html":{},"components/GeocoderInputComponent.html":{}}}],["selection",{"_index":3524,"title":{},"body":{"components/GeocoderInputComponent.html":{}}}],["selections",{"_index":2455,"title":{},"body":{"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{}}}],["selectoption",{"_index":463,"title":{},"body":{"classes/AbstractTestPage.html":{}}}],["selectoption(labelid",{"_index":565,"title":{},"body":{"classes/AbstractTestPage.html":{}}}],["selector",{"_index":659,"title":{},"body":{"components/AccordionCommonComponent.html":{},"interfaces/AddrLabelList.html":{},"components/ButtonComponent.html":{},"components/ButtonGroupComponent.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"components/ConfirmTemplateComponent.html":{},"components/CoreBreadcrumbComponent.html":{},"interfaces/CountryList.html":{},"interfaces/DateErrorMsg.html":{},"directives/DateFieldFormatDirective.html":{},"components/DatepickerComponent.html":{},"components/DropdownComponent.html":{},"directives/DuplicateCheckDirective.html":{},"components/EmailComponent.html":{},"components/ErrorContainerComponent.html":{},"interfaces/FileUploaderMsg.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/FullNameComponent.html":{},"interfaces/FullNameErrorMsg.html":{},"components/GeocoderInputComponent.html":{},"components/HeaderComponent.html":{},"interfaces/IRadioItems.html":{},"interfaces/ISpaEnvResponse.html":{},"interfaces/Maxlengths.html":{},"components/NameComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{},"components/RadioComponent.html":{},"interfaces/ReadOnlyFields.html":{},"interfaces/SampleImageInterface.html":{},"components/SampleModalComponent.html":{},"components/SinComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"directives/ValidateBcPostalDirective.html":{},"directives/ValidateCityDirective.html":{},"directives/ValidateNameDirective.html":{},"directives/ValidatePostalcodeDirective.html":{},"directives/ValidateRegionDirective.html":{},"directives/ValidateStreetDirective.html":{},"components/WizardProgressBarComponent.html":{},"components/XiconButtonComponent.html":{}}}],["selects",{"_index":568,"title":{},"body":{"classes/AbstractTestPage.html":{}}}],["self",{"_index":154,"title":{},"body":{"classes/AbstractFormControl.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"interfaces/CountryList.html":{},"components/DropdownComponent.html":{},"components/EmailComponent.html":{},"interfaces/FileUploaderMsg.html":{},"components/GeocoderInputComponent.html":{},"interfaces/IRadioItems.html":{},"components/NameComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{},"components/RadioComponent.html":{},"components/SinComponent.html":{},"changelog.html":{}}}],["self.dataservice.getmspuuid",{"_index":3043,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["self.handleerror(commonimageerror.wrongtype",{"_index":3096,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["self.logimageinfo(\"msp_file",{"_index":3146,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["self.resetinputfields",{"_index":3097,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["semantic",{"_index":5487,"title":{},"body":{"todo.html":{}}}],["sen",{"_index":2287,"title":{},"body":{"interfaces/CountryList.html":{}}}],["send",{"_index":261,"title":{},"body":{"classes/AbstractHttpService.html":{},"interfaces/CommonLogMessage.html":{},"injectables/GeocoderService.html":{}}}],["sending",{"_index":821,"title":{},"body":{"interfaces/AddrLabelList.html":{},"interfaces/Maxlengths.html":{},"interfaces/ReadOnlyFields.html":{}}}],["sends",{"_index":597,"title":{},"body":{"classes/AbstractTestPage.html":{}}}],["sendspaenvserver(rapidresponsecode",{"_index":3745,"title":{},"body":{"interfaces/ISpaEnvResponse.html":{}}}],["senegal",{"_index":2288,"title":{},"body":{"interfaces/CountryList.html":{}}}],["separately",{"_index":4673,"title":{},"body":{"changelog.html":{}}}],["sequence",{"_index":1260,"title":{},"body":{"injectables/CheckCompleteBaseService.html":{},"interfaces/PageListInterface.html":{}}}],["sequentially",{"_index":3783,"title":{},"body":{"guards/LoadPageGuardService.html":{},"guards/RouteGuardService.html":{}}}],["sequi",{"_index":1468,"title":{},"body":{"components/CityComponent.html":{},"interfaces/CountryList.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"interfaces/FileUploaderMsg.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{}}}],["serbia",{"_index":2290,"title":{},"body":{"interfaces/CountryList.html":{}}}],["server",{"_index":282,"title":{},"body":{"classes/AbstractHttpService.html":{},"injectables/CaptchaDataService.html":{},"interfaces/CommonLogMessage.html":{},"injectables/GeocoderService.html":{},"interfaces/ISpaEnvResponse.html":{},"injectables/ServerPayload.html":{}}}],["serverpayload",{"_index":1181,"title":{"injectables/ServerPayload.html":{}},"body":{"injectables/CaptchaDataService.html":{},"injectables/ServerPayload.html":{},"coverage.html":{}}}],["service",{"_index":245,"title":{},"body":{"classes/AbstractHttpService.html":{},"injectables/AbstractPageGuardService.html":{},"injectables/AbstractPgCheckService.html":{},"modules/CaptchaModule.html":{},"injectables/CheckCompleteBaseService.html":{},"interfaces/CommonLogMessage.html":{},"injectables/DefaultPageGuardService.html":{},"interfaces/FileUploaderMsg.html":{},"interfaces/GeoAddressResult.html":{},"injectables/GeocoderService.html":{},"interfaces/ISpaEnvResponse.html":{},"guards/LoadPageGuardService.html":{},"interfaces/PageListInterface.html":{},"guards/RouteGuardService.html":{},"changelog.html":{},"additional-documentation/getting-started.html":{}}}],["service.ts",{"_index":243,"title":{},"body":{"classes/AbstractHttpService.html":{},"coverage.html":{}}}],["service.ts:13",{"_index":257,"title":{},"body":{"classes/AbstractHttpService.html":{}}}],["service.ts:18",{"_index":259,"title":{},"body":{"classes/AbstractHttpService.html":{}}}],["service.ts:24",{"_index":266,"title":{},"body":{"classes/AbstractHttpService.html":{}}}],["service.ts:32",{"_index":290,"title":{},"body":{"classes/AbstractHttpService.html":{}}}],["service.ts:40",{"_index":292,"title":{},"body":{"classes/AbstractHttpService.html":{}}}],["service.ts:54",{"_index":311,"title":{},"body":{"classes/AbstractHttpService.html":{}}}],["service.ts:61",{"_index":278,"title":{},"body":{"classes/AbstractHttpService.html":{}}}],["service.ts:64",{"_index":263,"title":{},"body":{"classes/AbstractHttpService.html":{}}}],["service.ts:75",{"_index":296,"title":{},"body":{"classes/AbstractHttpService.html":{}}}],["service/log.service",{"_index":2759,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["service/msp",{"_index":2761,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["servicename",{"_index":3566,"title":{},"body":{"components/HeaderComponent.html":{}}}],["services",{"_index":1726,"title":{},"body":{"classes/Container.html":{},"interfaces/WizardProgressItem.html":{},"changelog.html":{},"additional-documentation/getting-started.html":{}}}],["services/abstract",{"_index":3643,"title":{},"body":{"interfaces/ISpaEnvResponse.html":{}}}],["services/container.service",{"_index":1771,"title":{},"body":{"classes/Container.html":{},"interfaces/WizardProgressItem.html":{}}}],["services/geocoder.service",{"_index":796,"title":{},"body":{"interfaces/AddrLabelList.html":{},"components/GeocoderInputComponent.html":{},"interfaces/Maxlengths.html":{},"interfaces/ReadOnlyFields.html":{}}}],["services/logger.service",{"_index":3642,"title":{},"body":{"interfaces/ISpaEnvResponse.html":{}}}],["sessionid",{"_index":1592,"title":{},"body":{"interfaces/CommonLogMessage.html":{}}}],["set",{"_index":300,"title":{},"body":{"classes/AbstractHttpService.html":{},"classes/AbstractReactForm.html":{},"interfaces/AddrLabelList.html":{},"classes/Address.html":{},"modules/CaptchaModule.html":{},"injectables/CheckCompleteBaseService.html":{},"components/CityComponent.html":{},"interfaces/CommonAttachmentJson.html":{},"classes/CommonImage.html":{},"classes/CommonImageProcessingError.html":{},"interfaces/CommonImageScaleFactors.html":{},"classes/CommonImageScaleFactorsImpl.html":{},"interfaces/CommonLogMessage.html":{},"interfaces/CountryList.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"components/EmailComponent.html":{},"interfaces/GeoAddressResult.html":{},"components/GeocoderInputComponent.html":{},"injectables/GeocoderService.html":{},"interfaces/IRadioItems.html":{},"interfaces/ISpaEnvResponse.html":{},"interfaces/Maxlengths.html":{},"components/NameComponent.html":{},"interfaces/PageList.html":{},"interfaces/PageListInterface.html":{},"components/PageSectionComponent.html":{},"injectables/PageStateService.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"classes/Person.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{},"components/RadioComponent.html":{},"interfaces/ReadOnlyFields.html":{},"components/SinComponent.html":{},"components/WizardProgressBarComponent.html":{},"changelog.html":{},"additional-documentation/local-development/components.html":{}}}],["set('addressstring",{"_index":3396,"title":{},"body":{"interfaces/GeoAddressResult.html":{},"injectables/GeocoderService.html":{}}}],["set('autocomplete",{"_index":3393,"title":{},"body":{"interfaces/GeoAddressResult.html":{},"injectables/GeocoderService.html":{}}}],["set('brief",{"_index":3389,"title":{},"body":{"interfaces/GeoAddressResult.html":{},"injectables/GeocoderService.html":{}}}],["set('echo",{"_index":3388,"title":{},"body":{"interfaces/GeoAddressResult.html":{},"injectables/GeocoderService.html":{}}}],["set('matchprecisionnot",{"_index":3394,"title":{},"body":{"interfaces/GeoAddressResult.html":{},"injectables/GeocoderService.html":{}}}],["set('maxresults",{"_index":3387,"title":{},"body":{"interfaces/GeoAddressResult.html":{},"injectables/GeocoderService.html":{}}}],["set('minscore",{"_index":3386,"title":{},"body":{"interfaces/GeoAddressResult.html":{},"injectables/GeocoderService.html":{}}}],["setaddress(data",{"_index":972,"title":{},"body":{"interfaces/AddrLabelList.html":{},"interfaces/Maxlengths.html":{},"interfaces/ReadOnlyFields.html":{}}}],["setbuttongrpval",{"_index":1131,"title":{},"body":{"components/ButtonGroupComponent.html":{}}}],["setbuttongrpval(val",{"_index":1146,"title":{},"body":{"components/ButtonGroupComponent.html":{}}}],["setbypassguards(bypass",{"_index":1266,"title":{},"body":{"injectables/CheckCompleteBaseService.html":{}}}],["setcheckboxval",{"_index":1309,"title":{},"body":{"components/CheckboxComponent.html":{}}}],["setcheckboxval(event",{"_index":1324,"title":{},"body":{"components/CheckboxComponent.html":{}}}],["setcity(value",{"_index":897,"title":{},"body":{"interfaces/AddrLabelList.html":{},"interfaces/Maxlengths.html":{},"interfaces/ReadOnlyFields.html":{}}}],["setcountry(value",{"_index":885,"title":{},"body":{"interfaces/AddrLabelList.html":{},"interfaces/Maxlengths.html":{},"interfaces/ReadOnlyFields.html":{}}}],["setdefaultcountryasoption",{"_index":957,"title":{},"body":{"interfaces/AddrLabelList.html":{},"interfaces/Maxlengths.html":{},"interfaces/ReadOnlyFields.html":{}}}],["setdefaultprovinceasoption(country",{"_index":943,"title":{},"body":{"interfaces/AddrLabelList.html":{},"interfaces/Maxlengths.html":{},"interfaces/ReadOnlyFields.html":{}}}],["setdisabledstate",{"_index":126,"title":{},"body":{"classes/AbstractFormControl.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"components/EmailComponent.html":{},"components/NameComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"components/RadioComponent.html":{},"components/SinComponent.html":{}}}],["setdisabledstate(isdisabled",{"_index":159,"title":{},"body":{"classes/AbstractFormControl.html":{},"interfaces/AddrLabelList.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"interfaces/CountryList.html":{},"components/EmailComponent.html":{},"interfaces/Maxlengths.html":{},"components/NameComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"components/RadioComponent.html":{},"interfaces/ReadOnlyFields.html":{},"components/SinComponent.html":{}}}],["seterrormsg",{"_index":127,"title":{},"body":{"classes/AbstractFormControl.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"interfaces/CountryList.html":{},"components/EmailComponent.html":{},"components/NameComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"components/RadioComponent.html":{},"components/SinComponent.html":{}}}],["setfirstname(value",{"_index":3369,"title":{},"body":{"components/FullNameComponent.html":{},"interfaces/FullNameErrorMsg.html":{}}}],["setinput",{"_index":5271,"title":{},"body":{"coverage.html":{}}}],["setisloading",{"_index":1800,"title":{},"body":{"injectables/ContainerService.html":{}}}],["setisloading(isloading",{"_index":1805,"title":{},"body":{"injectables/ContainerService.html":{}}}],["setlabels",{"_index":977,"title":{},"body":{"interfaces/AddrLabelList.html":{},"interfaces/Maxlengths.html":{},"interfaces/ReadOnlyFields.html":{}}}],["setlastname(value",{"_index":3373,"title":{},"body":{"components/FullNameComponent.html":{},"interfaces/FullNameErrorMsg.html":{}}}],["setmaxlengths",{"_index":982,"title":{},"body":{"interfaces/AddrLabelList.html":{},"interfaces/Maxlengths.html":{},"interfaces/ReadOnlyFields.html":{}}}],["setmiddlename(value",{"_index":3372,"title":{},"body":{"components/FullNameComponent.html":{},"interfaces/FullNameErrorMsg.html":{}}}],["setname(fullname",{"_index":4089,"title":{},"body":{"classes/Person.html":{}}}],["setpagecomplete",{"_index":1232,"title":{},"body":{"injectables/CheckCompleteBaseService.html":{},"guards/LoadPageGuardService.html":{},"interfaces/PageListInterface.html":{},"injectables/PageStateService.html":{},"guards/RouteGuardService.html":{}}}],["setpagecomplete(path",{"_index":3941,"title":{},"body":{"injectables/PageStateService.html":{}}}],["setpageincomplete",{"_index":1233,"title":{},"body":{"injectables/CheckCompleteBaseService.html":{},"guards/LoadPageGuardService.html":{},"interfaces/PageList.html":{},"interfaces/PageListInterface.html":{},"injectables/PageStateService.html":{},"guards/RouteGuardService.html":{}}}],["setpageincomplete(url",{"_index":3943,"title":{},"body":{"injectables/PageStateService.html":{}}}],["setpages",{"_index":3872,"title":{},"body":{"interfaces/PageList.html":{},"injectables/PageStateService.html":{}}}],["setpages(arr",{"_index":3945,"title":{},"body":{"injectables/PageStateService.html":{}}}],["setpassword",{"_index":3967,"title":{},"body":{"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{}}}],["setpassword(password",{"_index":4001,"title":{},"body":{"components/PasswordComponent.html":{}}}],["setpostalcode(value",{"_index":902,"title":{},"body":{"interfaces/AddrLabelList.html":{},"interfaces/Maxlengths.html":{},"interfaces/ReadOnlyFields.html":{}}}],["setprogresssteps",{"_index":1742,"title":{},"body":{"classes/Container.html":{},"interfaces/WizardProgressItem.html":{}}}],["setprogresssteps(pageroutes",{"_index":1764,"title":{},"body":{"classes/Container.html":{}}}],["setprovince(value",{"_index":894,"title":{},"body":{"interfaces/AddrLabelList.html":{},"interfaces/Maxlengths.html":{},"interfaces/ReadOnlyFields.html":{}}}],["setreadonlyfields",{"_index":987,"title":{},"body":{"interfaces/AddrLabelList.html":{},"interfaces/Maxlengths.html":{},"interfaces/ReadOnlyFields.html":{}}}],["sets",{"_index":899,"title":{},"body":{"interfaces/AddrLabelList.html":{},"injectables/CheckCompleteBaseService.html":{},"injectables/ContainerService.html":{},"interfaces/Maxlengths.html":{},"interfaces/PageListInterface.html":{},"classes/Person.html":{},"interfaces/ReadOnlyFields.html":{},"changelog.html":{}}}],["setselect",{"_index":5272,"title":{},"body":{"coverage.html":{}}}],["setseverity(severity",{"_index":1681,"title":{},"body":{"interfaces/CommonLogMessage.html":{}}}],["setstarturl(url",{"_index":1264,"title":{},"body":{"injectables/CheckCompleteBaseService.html":{}}}],["setstatus",{"_index":4219,"title":{},"body":{"components/RadioComponent.html":{}}}],["setstatus(val",{"_index":3619,"title":{},"body":{"interfaces/IRadioItems.html":{},"components/RadioComponent.html":{}}}],["setstreet(val",{"_index":1043,"title":{},"body":{"classes/Address.html":{}}}],["setstreetaddress(value",{"_index":895,"title":{},"body":{"interfaces/AddrLabelList.html":{},"interfaces/Maxlengths.html":{},"interfaces/ReadOnlyFields.html":{}}}],["setsubmitlabel",{"_index":1801,"title":{},"body":{"injectables/ContainerService.html":{}}}],["setsubmitlabel(label",{"_index":1808,"title":{},"body":{"injectables/ContainerService.html":{}}}],["settags(message",{"_index":1685,"title":{},"body":{"interfaces/CommonLogMessage.html":{}}}],["setter",{"_index":4682,"title":{},"body":{"changelog.html":{}}}],["settimeout(scrolltoerror",{"_index":3282,"title":{},"body":{"components/FormActionBarComponent.html":{}}}],["settimestamp",{"_index":1678,"title":{},"body":{"interfaces/CommonLogMessage.html":{}}}],["setting",{"_index":2460,"title":{},"body":{"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"changelog.html":{},"additional-documentation/local-development/components.html":{}}}],["setup",{"_index":361,"title":{},"body":{"injectables/AbstractPageGuardService.html":{},"injectables/AbstractPgCheckService.html":{},"injectables/CheckCompleteBaseService.html":{},"guards/LoadPageGuardService.html":{},"interfaces/PageListInterface.html":{},"guards/RouteGuardService.html":{},"index.html":{},"additional-documentation/getting-started.html":{},"additional-documentation/local-development/schematics.html":{},"additional-documentation/local-development/components.html":{}}}],["setup:git",{"_index":5240,"title":{},"body":{"changelog.html":{}}}],["setuprequest",{"_index":251,"title":{},"body":{"classes/AbstractHttpService.html":{},"injectables/GeocoderService.html":{}}}],["setuprequest(observable",{"_index":291,"title":{},"body":{"classes/AbstractHttpService.html":{},"injectables/GeocoderService.html":{}}}],["seturl",{"_index":1647,"title":{},"body":{"interfaces/CommonLogMessage.html":{}}}],["seturl(newurl",{"_index":1601,"title":{},"body":{"interfaces/CommonLogMessage.html":{}}}],["setusedefaultcolor",{"_index":1802,"title":{},"body":{"injectables/ContainerService.html":{}}}],["setusedefaultcolor(defaultcolor",{"_index":1810,"title":{},"body":{"injectables/ContainerService.html":{}}}],["setvalue(val",{"_index":1397,"title":{},"body":{"components/CityComponent.html":{},"components/EmailComponent.html":{},"components/NameComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"components/RadioComponent.html":{},"components/SinComponent.html":{}}}],["severity",{"_index":1639,"title":{},"body":{"interfaces/CommonLogMessage.html":{}}}],["severitylevels",{"_index":1579,"title":{},"body":{"interfaces/CommonLogMessage.html":{},"miscellaneous/enumerations.html":{}}}],["seychelles",{"_index":2292,"title":{},"body":{"interfaces/CountryList.html":{}}}],["sgp",{"_index":2296,"title":{},"body":{"interfaces/CountryList.html":{}}}],["sgs",{"_index":2312,"title":{},"body":{"interfaces/CountryList.html":{}}}],["sha1",{"_index":2774,"title":{},"body":{"interfaces/FileUploaderMsg.html":{},"coverage.html":{},"dependencies.html":{}}}],["sha1(mspimage.filecontent",{"_index":3133,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["sha1_",{"_index":2778,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["sha1sum",{"_index":2845,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["shared",{"_index":3655,"title":{},"body":{"interfaces/ISpaEnvResponse.html":{},"index.html":{}}}],["sharedcoremodule",{"_index":4267,"title":{"modules/SharedCoreModule.html":{}},"body":{"modules/SharedCoreModule.html":{},"index.html":{},"modules.html":{},"overview.html":{},"additional-documentation/getting-started.html":{}}}],["sharing",{"_index":551,"title":{},"body":{"classes/AbstractTestPage.html":{}}}],["shn",{"_index":2257,"title":{},"body":{"interfaces/CountryList.html":{}}}],["shouldn't",{"_index":3755,"title":{},"body":{"interfaces/ISpaEnvResponse.html":{}}}],["show",{"_index":39,"title":{},"body":{"classes/AbstractBaseForm.html":{},"classes/AbstractForm.html":{},"classes/AbstractReactForm.html":{},"interfaces/AddrLabelList.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"interfaces/Maxlengths.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"interfaces/ReadOnlyFields.html":{},"changelog.html":{},"additional-documentation/local-development/components.html":{}}}],["showerror",{"_index":1133,"title":{},"body":{"components/ButtonGroupComponent.html":{},"interfaces/FileUploaderMsg.html":{},"components/FullNameComponent.html":{},"interfaces/FullNameErrorMsg.html":{},"todo.html":{}}}],["showfullsizeview",{"_index":3736,"title":{},"body":{"interfaces/ISpaEnvResponse.html":{},"components/ThumbnailComponent.html":{}}}],["showline${line",{"_index":915,"title":{},"body":{"interfaces/AddrLabelList.html":{},"interfaces/Maxlengths.html":{},"interfaces/ReadOnlyFields.html":{}}}],["showline2",{"_index":845,"title":{},"body":{"interfaces/AddrLabelList.html":{},"interfaces/Maxlengths.html":{},"interfaces/ReadOnlyFields.html":{}}}],["showline3",{"_index":846,"title":{},"body":{"interfaces/AddrLabelList.html":{},"interfaces/Maxlengths.html":{},"interfaces/ReadOnlyFields.html":{}}}],["shown",{"_index":3648,"title":{},"body":{"interfaces/ISpaEnvResponse.html":{}}}],["showpasswordstrength",{"_index":3970,"title":{},"body":{"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{}}}],["shows",{"_index":3605,"title":{},"body":{"interfaces/IRadioItems.html":{},"components/RadioComponent.html":{},"changelog.html":{}}}],["side",{"_index":1663,"title":{},"body":{"interfaces/CommonLogMessage.html":{},"interfaces/ISpaEnvResponse.html":{},"components/PageFrameworkComponent.html":{}}}],["sierra",{"_index":2294,"title":{},"body":{"interfaces/CountryList.html":{}}}],["sign",{"_index":4938,"title":{},"body":{"changelog.html":{}}}],["similar",{"_index":3285,"title":{},"body":{"components/FormSubmitBarComponent.html":{},"components/GeocoderInputComponent.html":{}}}],["simple",{"_index":1225,"title":{},"body":{"injectables/CheckCompleteBaseService.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"interfaces/PageListInterface.html":{}}}],["simplechanges",{"_index":2432,"title":{},"body":{"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"interfaces/FileUploaderMsg.html":{},"components/GeocoderInputComponent.html":{}}}],["simpledate",{"_index":4357,"title":{"interfaces/SimpleDate.html":{}},"body":{"interfaces/SimpleDate.html":{},"changelog.html":{},"coverage.html":{}}}],["simpler",{"_index":5576,"title":{},"body":{"additional-documentation/local-development/schematics.html":{}}}],["simplicity",{"_index":1086,"title":{},"body":{"components/ButtonComponent.html":{}}}],["simply",{"_index":3169,"title":{},"body":{"interfaces/FileUploaderMsg.html":{},"components/PageSectionComponent.html":{}}}],["simulates",{"_index":3498,"title":{},"body":{"components/GeocoderInputComponent.html":{}}}],["sin",{"_index":4365,"title":{},"body":{"components/SinComponent.html":{},"changelog.html":{}}}],["sin'},{'name",{"_index":747,"title":{},"body":{"components/AccordionCommonComponent.html":{},"components/ButtonComponent.html":{},"components/ButtonGroupComponent.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"components/ConfirmTemplateComponent.html":{},"components/CoreBreadcrumbComponent.html":{},"components/DatepickerComponent.html":{},"components/DropdownComponent.html":{},"components/EmailComponent.html":{},"components/ErrorContainerComponent.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/FullNameComponent.html":{},"components/GeocoderInputComponent.html":{},"components/HeaderComponent.html":{},"components/NameComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"components/RadioComponent.html":{},"components/SampleModalComponent.html":{},"components/SinComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{},"components/XiconButtonComponent.html":{}}}],["sin.component.html",{"_index":4367,"title":{},"body":{"components/SinComponent.html":{}}}],["sin.component.scss",{"_index":4366,"title":{},"body":{"components/SinComponent.html":{}}}],["sin_",{"_index":4372,"title":{},"body":{"components/SinComponent.html":{}}}],["sincomponent",{"_index":746,"title":{"components/SinComponent.html":{}},"body":{"components/AccordionCommonComponent.html":{},"components/ButtonComponent.html":{},"components/ButtonGroupComponent.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"components/ConfirmTemplateComponent.html":{},"components/CoreBreadcrumbComponent.html":{},"components/DatepickerComponent.html":{},"components/DropdownComponent.html":{},"components/EmailComponent.html":{},"components/ErrorContainerComponent.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/FullNameComponent.html":{},"components/GeocoderInputComponent.html":{},"components/HeaderComponent.html":{},"components/NameComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"components/RadioComponent.html":{},"components/SampleModalComponent.html":{},"modules/SharedCoreModule.html":{},"components/SinComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{},"components/XiconButtonComponent.html":{},"coverage.html":{},"overview.html":{}}}],["singapore",{"_index":2297,"title":{},"body":{"interfaces/CountryList.html":{}}}],["single",{"_index":3550,"title":{},"body":{"components/HeaderComponent.html":{},"interfaces/IRadioItems.html":{},"components/PageFrameworkComponent.html":{},"components/RadioComponent.html":{}}}],["sint",{"_index":1915,"title":{},"body":{"interfaces/CountryList.html":{}}}],["sit",{"_index":1401,"title":{},"body":{"components/CityComponent.html":{},"interfaces/CountryList.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"interfaces/FileUploaderMsg.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{}}}],["site",{"_index":1848,"title":{},"body":{"components/CoreBreadcrumbComponent.html":{}}}],["sitereg",{"_index":3920,"title":{},"body":{"components/PageSectionComponent.html":{}}}],["size",{"_index":1524,"title":{},"body":{"interfaces/CommonAttachmentJson.html":{},"classes/CommonImage.html":{},"classes/CommonImageProcessingError.html":{},"interfaces/CommonImageScaleFactors.html":{},"classes/CommonImageScaleFactorsImpl.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"interfaces/FileUploaderMsg.html":{},"changelog.html":{}}}],["sizetxt",{"_index":1526,"title":{},"body":{"interfaces/CommonAttachmentJson.html":{},"classes/CommonImage.html":{},"classes/CommonImageProcessingError.html":{},"interfaces/CommonImageScaleFactors.html":{},"classes/CommonImageScaleFactorsImpl.html":{}}}],["sizeunit",{"_index":1525,"title":{},"body":{"interfaces/CommonAttachmentJson.html":{},"classes/CommonImage.html":{},"classes/CommonImageProcessingError.html":{},"interfaces/CommonImageScaleFactors.html":{},"classes/CommonImageScaleFactorsImpl.html":{}}}],["sjm",{"_index":2324,"title":{},"body":{"interfaces/CountryList.html":{}}}],["sk",{"_index":4209,"title":{},"body":{"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{}}}],["skip",{"_index":480,"title":{},"body":{"classes/AbstractTestPage.html":{},"components/HeaderComponent.html":{},"components/WizardProgressBarComponent.html":{},"changelog.html":{}}}],["skip_content_hash",{"_index":3560,"title":{},"body":{"components/HeaderComponent.html":{}}}],["skiplibcheck",{"_index":5564,"title":{},"body":{"additional-documentation/local-development/schematics.html":{}}}],["skiplibcheck=false",{"_index":5218,"title":{},"body":{"changelog.html":{}}}],["skiplinkpath",{"_index":3561,"title":{},"body":{"components/HeaderComponent.html":{}}}],["skiptocontentbutton",{"_index":448,"title":{},"body":{"classes/AbstractTestPage.html":{}}}],["slb",{"_index":2305,"title":{},"body":{"interfaces/CountryList.html":{}}}],["sle",{"_index":2293,"title":{},"body":{"interfaces/CountryList.html":{}}}],["slightly",{"_index":3588,"title":{},"body":{"components/HeaderComponent.html":{}}}],["slot",{"_index":1842,"title":{},"body":{"components/CoreBreadcrumbComponent.html":{}}}],["slots",{"_index":1836,"title":{},"body":{"components/CoreBreadcrumbComponent.html":{}}}],["slovakia",{"_index":2302,"title":{},"body":{"interfaces/CountryList.html":{}}}],["slovenia",{"_index":2304,"title":{},"body":{"interfaces/CountryList.html":{}}}],["slv",{"_index":2004,"title":{},"body":{"interfaces/CountryList.html":{}}}],["small",{"_index":2935,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["smr",{"_index":2277,"title":{},"body":{"interfaces/CountryList.html":{}}}],["social",{"_index":4370,"title":{},"body":{"components/SinComponent.html":{}}}],["software",{"_index":5456,"title":{},"body":{"license.html":{}}}],["solomon",{"_index":2306,"title":{},"body":{"interfaces/CountryList.html":{}}}],["solve",{"_index":3030,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["som",{"_index":2307,"title":{},"body":{"interfaces/CountryList.html":{}}}],["somalia",{"_index":2308,"title":{},"body":{"interfaces/CountryList.html":{}}}],["something",{"_index":1035,"title":{},"body":{"classes/Address.html":{}}}],["sortobjectbykeys",{"_index":5351,"title":{},"body":{"coverage.html":{}}}],["source",{"_index":4,"title":{},"body":{"classes/AbstractBaseForm.html":{},"classes/AbstractForm.html":{},"classes/AbstractFormControl.html":{},"classes/AbstractHttpService.html":{},"injectables/AbstractPageGuardService.html":{},"injectables/AbstractPgCheckService.html":{},"classes/AbstractReactForm.html":{},"classes/AbstractTestPage.html":{},"components/AccordionCommonComponent.html":{},"interfaces/AddrLabelList.html":{},"classes/Address.html":{},"classes/Base.html":{},"components/ButtonComponent.html":{},"components/ButtonGroupComponent.html":{},"injectables/CaptchaDataService.html":{},"modules/CaptchaModule.html":{},"injectables/CheckCompleteBaseService.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"interfaces/CommonAttachmentJson.html":{},"classes/CommonImage.html":{},"classes/CommonImageProcessingError.html":{},"interfaces/CommonImageScaleFactors.html":{},"classes/CommonImageScaleFactorsImpl.html":{},"interfaces/CommonLogMessage.html":{},"components/ConfirmTemplateComponent.html":{},"classes/Container.html":{},"injectables/ContainerService.html":{},"components/CoreBreadcrumbComponent.html":{},"interfaces/CountryList.html":{},"interfaces/DateErrorMsg.html":{},"directives/DateFieldFormatDirective.html":{},"components/DatepickerComponent.html":{},"injectables/DefaultPageGuardService.html":{},"components/DropdownComponent.html":{},"directives/DuplicateCheckDirective.html":{},"components/EmailComponent.html":{},"components/ErrorContainerComponent.html":{},"interfaces/ErrorMessage.html":{},"interfaces/FileUploaderMsg.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/FullNameComponent.html":{},"interfaces/FullNameErrorMsg.html":{},"interfaces/GeoAddressResult.html":{},"components/GeocoderInputComponent.html":{},"injectables/GeocoderService.html":{},"components/HeaderComponent.html":{},"interfaces/IRadioItems.html":{},"interfaces/ISpaEnvResponse.html":{},"guards/LoadPageGuardService.html":{},"interfaces/Maxlengths.html":{},"classes/MoHCommonLibraryError.html":{},"components/NameComponent.html":{},"components/PageFrameworkComponent.html":{},"interfaces/PageList.html":{},"interfaces/PageListInterface.html":{},"components/PageSectionComponent.html":{},"injectables/PageStateService.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"classes/Person.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{},"components/RadioComponent.html":{},"interfaces/ReadOnlyFields.html":{},"guards/RouteGuardService.html":{},"interfaces/SampleImageInterface.html":{},"components/SampleModalComponent.html":{},"injectables/ServerPayload.html":{},"modules/SharedCoreModule.html":{},"interfaces/SimpleDate.html":{},"components/SinComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"directives/ValidateBcPostalDirective.html":{},"directives/ValidateCityDirective.html":{},"directives/ValidateNameDirective.html":{},"directives/ValidatePostalcodeDirective.html":{},"directives/ValidateRegionDirective.html":{},"directives/ValidateStreetDirective.html":{},"components/WizardProgressBarComponent.html":{},"interfaces/WizardProgressItem.html":{},"components/XiconButtonComponent.html":{}}}],["south",{"_index":2310,"title":{},"body":{"interfaces/CountryList.html":{}}}],["southern",{"_index":2033,"title":{},"body":{"interfaces/CountryList.html":{}}}],["soutput",{"_index":3106,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["spa",{"_index":3625,"title":{},"body":{"interfaces/ISpaEnvResponse.html":{}}}],["spa_env_acl_maintenance_flag",{"_index":3629,"title":{},"body":{"interfaces/ISpaEnvResponse.html":{}}}],["spa_env_acl_maintenance_flag\":\"\",\"spa_env_acl_maintenance_message",{"_index":3724,"title":{},"body":{"interfaces/ISpaEnvResponse.html":{}}}],["spa_env_acl_maintenance_message",{"_index":3630,"title":{},"body":{"interfaces/ISpaEnvResponse.html":{}}}],["spa_env_msp_maintenance_flag",{"_index":3631,"title":{},"body":{"interfaces/ISpaEnvResponse.html":{}}}],["spa_env_msp_maintenance_flag\":\"\",\"spa_env_msp_maintenance_message",{"_index":3725,"title":{},"body":{"interfaces/ISpaEnvResponse.html":{}}}],["spa_env_msp_maintenance_message",{"_index":3632,"title":{},"body":{"interfaces/ISpaEnvResponse.html":{}}}],["spa_env_name",{"_index":3746,"title":{},"body":{"interfaces/ISpaEnvResponse.html":{}}}],["spa_env_now",{"_index":3633,"title":{},"body":{"interfaces/ISpaEnvResponse.html":{}}}],["spa_env_pacutoff_maintenance_end",{"_index":3634,"title":{},"body":{"interfaces/ISpaEnvResponse.html":{}}}],["spa_env_pacutoff_maintenance_flag",{"_index":3635,"title":{},"body":{"interfaces/ISpaEnvResponse.html":{}}}],["spa_env_pacutoff_maintenance_message",{"_index":3636,"title":{},"body":{"interfaces/ISpaEnvResponse.html":{}}}],["spa_env_pacutoff_maintenance_start",{"_index":3637,"title":{},"body":{"interfaces/ISpaEnvResponse.html":{}}}],["spa_env_pacutoff_maintenance_start\":\"\",\"spa_env_pacutoff_maintenance_end\":\"\",\"spa_env_now\":\"\",\"spa_env_pacutoff_maintenance_flag\":\"\",\"spa_env_pacutoff_maintenance_message",{"_index":3727,"title":{},"body":{"interfaces/ISpaEnvResponse.html":{}}}],["spa_env_suppben_maintenance_end",{"_index":3638,"title":{},"body":{"interfaces/ISpaEnvResponse.html":{}}}],["spa_env_suppben_maintenance_flag",{"_index":3639,"title":{},"body":{"interfaces/ISpaEnvResponse.html":{}}}],["spa_env_suppben_maintenance_message",{"_index":3640,"title":{},"body":{"interfaces/ISpaEnvResponse.html":{}}}],["spa_env_suppben_maintenance_start",{"_index":3641,"title":{},"body":{"interfaces/ISpaEnvResponse.html":{}}}],["spa_env_suppben_maintenance_start\":\"\",\"spa_env_suppben_maintenance_end\":\"\",\"spa_env_now\":\"\",\"spa_env_suppben_maintenance_flag\":\"\",\"spa_env_suppben_maintenance_message\":\"\",\"spa_env_pacutoff_maintenance_start\":\"\",\"spa_env_pacutoff_maintenance_end",{"_index":3729,"title":{},"body":{"interfaces/ISpaEnvResponse.html":{}}}],["space",{"_index":2469,"title":{},"body":{"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/PostalCodeComponent.html":{},"components/SinComponent.html":{},"components/WizardProgressBarComponent.html":{},"changelog.html":{},"coverage.html":{}}}],["space/workspace/moh",{"_index":5601,"title":{},"body":{"additional-documentation/local-development/components.html":{}}}],["spaces",{"_index":4405,"title":{},"body":{"components/SinComponent.html":{}}}],["spacing",{"_index":4699,"title":{},"body":{"changelog.html":{}}}],["spaenvres",{"_index":3715,"title":{},"body":{"interfaces/ISpaEnvResponse.html":{}}}],["spain",{"_index":2317,"title":{},"body":{"interfaces/CountryList.html":{}}}],["specfic",{"_index":4896,"title":{},"body":{"changelog.html":{}}}],["special",{"_index":1387,"title":{},"body":{"components/CityComponent.html":{},"interfaces/CountryList.html":{},"interfaces/FileUploaderMsg.html":{},"components/NameComponent.html":{},"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{}}}],["specific",{"_index":182,"title":{},"body":{"classes/AbstractFormControl.html":{},"interfaces/AddrLabelList.html":{},"classes/Address.html":{},"interfaces/CommonLogMessage.html":{},"interfaces/ISpaEnvResponse.html":{},"guards/LoadPageGuardService.html":{},"interfaces/Maxlengths.html":{},"interfaces/ReadOnlyFields.html":{},"license.html":{},"additional-documentation/getting-started.html":{}}}],["specifically",{"_index":5621,"title":{},"body":{"additional-documentation/local-development/components.html":{}}}],["specified",{"_index":269,"title":{},"body":{"classes/AbstractHttpService.html":{},"classes/AbstractTestPage.html":{},"injectables/GeocoderService.html":{}}}],["spelling",{"_index":4666,"title":{},"body":{"changelog.html":{}}}],["spinner",{"_index":41,"title":{},"body":{"classes/AbstractBaseForm.html":{},"classes/AbstractForm.html":{},"classes/AbstractReactForm.html":{},"injectables/ContainerService.html":{}}}],["split",{"_index":3041,"title":{},"body":{"interfaces/FileUploaderMsg.html":{},"changelog.html":{},"additional-documentation/local-development/schematics.html":{}}}],["splits",{"_index":3390,"title":{},"body":{"interfaces/GeoAddressResult.html":{},"injectables/GeocoderService.html":{}}}],["splunk",{"_index":1501,"title":{},"body":{"interfaces/CommonAttachmentJson.html":{},"classes/CommonImage.html":{},"classes/CommonImageProcessingError.html":{},"interfaces/CommonImageScaleFactors.html":{},"classes/CommonImageScaleFactorsImpl.html":{},"interfaces/CommonLogMessage.html":{}}}],["spm",{"_index":2270,"title":{},"body":{"interfaces/CountryList.html":{}}}],["srb",{"_index":2289,"title":{},"body":{"interfaces/CountryList.html":{}}}],["sri",{"_index":2319,"title":{},"body":{"interfaces/CountryList.html":{}}}],["ssd",{"_index":2314,"title":{},"body":{"interfaces/CountryList.html":{}}}],["stable",{"_index":3408,"title":{},"body":{"interfaces/GeoAddressResult.html":{},"injectables/GeocoderService.html":{}}}],["stablization",{"_index":1350,"title":{},"body":{"components/CheckboxComponent.html":{}}}],["stack",{"_index":4579,"title":{},"body":{"components/XiconButtonComponent.html":{}}}],["standard",{"_index":1032,"title":{},"body":{"classes/Address.html":{}}}],["start",{"_index":2637,"title":{},"body":{"injectables/DefaultPageGuardService.html":{},"changelog.html":{},"additional-documentation/local-development/schematics.html":{}}}],["start/end",{"_index":4546,"title":{},"body":{"components/WizardProgressBarComponent.html":{}}}],["start/files/app_component_html.ts",{"_index":5355,"title":{},"body":{"coverage.html":{}}}],["start/files/favicon_ico.ts",{"_index":5358,"title":{},"body":{"coverage.html":{}}}],["start/files/gov3_bc_logo_png_base64.ts",{"_index":5360,"title":{},"body":{"coverage.html":{}}}],["start/files/myriadwebpro_ttf_base64.ts",{"_index":5353,"title":{},"body":{"coverage.html":{}}}],["start/files/overrides_scss.ts",{"_index":5362,"title":{},"body":{"coverage.html":{}}}],["start/files/styles.ts",{"_index":5364,"title":{},"body":{"coverage.html":{}}}],["start/files/variables_scss.ts",{"_index":5366,"title":{},"body":{"coverage.html":{}}}],["start/index.ts",{"_index":5368,"title":{},"body":{"coverage.html":{}}}],["start/package",{"_index":5375,"title":{},"body":{"coverage.html":{}}}],["start_page_url",{"_index":2629,"title":{},"body":{"injectables/DefaultPageGuardService.html":{},"coverage.html":{}}}],["started",{"_index":4585,"title":{"changelog.html":{},"index.html":{},"license.html":{},"todo.html":{},"additional-documentation/getting-started.html":{}},"body":{"changelog.html":{},"index.html":{},"additional-documentation/getting-started.html":{}}}],["starting",{"_index":5494,"title":{},"body":{"additional-documentation/getting-started.html":{}}}],["startoftoday",{"_index":4098,"title":{},"body":{"classes/Person.html":{}}}],["startpageurl",{"_index":2614,"title":{},"body":{"injectables/DefaultPageGuardService.html":{}}}],["starts",{"_index":3050,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["starturl",{"_index":1234,"title":{},"body":{"injectables/CheckCompleteBaseService.html":{},"injectables/DefaultPageGuardService.html":{},"interfaces/PageListInterface.html":{}}}],["state",{"_index":856,"title":{},"body":{"interfaces/AddrLabelList.html":{},"interfaces/CountryList.html":{},"guards/LoadPageGuardService.html":{},"interfaces/Maxlengths.html":{},"interfaces/ReadOnlyFields.html":{},"guards/RouteGuardService.html":{},"changelog.html":{},"miscellaneous/enumerations.html":{}}}],["state.service",{"_index":2627,"title":{},"body":{"injectables/DefaultPageGuardService.html":{}}}],["state.service.ts",{"_index":3870,"title":{},"body":{"interfaces/PageList.html":{},"injectables/PageStateService.html":{},"coverage.html":{}}}],["state.service.ts:102",{"_index":3933,"title":{},"body":{"injectables/PageStateService.html":{}}}],["state.service.ts:109",{"_index":3940,"title":{},"body":{"injectables/PageStateService.html":{}}}],["state.service.ts:119",{"_index":3939,"title":{},"body":{"injectables/PageStateService.html":{}}}],["state.service.ts:124",{"_index":3930,"title":{},"body":{"injectables/PageStateService.html":{}}}],["state.service.ts:16",{"_index":3928,"title":{},"body":{"injectables/PageStateService.html":{}}}],["state.service.ts:20",{"_index":3946,"title":{},"body":{"injectables/PageStateService.html":{}}}],["state.service.ts:52",{"_index":3935,"title":{},"body":{"injectables/PageStateService.html":{}}}],["state.service.ts:63",{"_index":3937,"title":{},"body":{"injectables/PageStateService.html":{}}}],["state.service.ts:7",{"_index":3871,"title":{},"body":{"interfaces/PageList.html":{}}}],["state.service.ts:71",{"_index":3944,"title":{},"body":{"injectables/PageStateService.html":{}}}],["state.service.ts:84",{"_index":3942,"title":{},"body":{"injectables/PageStateService.html":{}}}],["state.service.ts:91",{"_index":3932,"title":{},"body":{"injectables/PageStateService.html":{}}}],["statements",{"_index":5251,"title":{},"body":{"coverage.html":{}}}],["states",{"_index":2173,"title":{},"body":{"interfaces/CountryList.html":{},"miscellaneous/enumerations.html":{}}}],["static",{"_index":999,"title":{},"body":{"classes/Address.html":{},"modules/CaptchaModule.html":{},"interfaces/FileUploaderMsg.html":{}}}],["status",{"_index":1705,"title":{},"body":{"components/ConfirmTemplateComponent.html":{},"changelog.html":{},"todo.html":{}}}],["statuschange",{"_index":5114,"title":{},"body":{"changelog.html":{}}}],["statustext",{"_index":1633,"title":{},"body":{"interfaces/CommonLogMessage.html":{}}}],["step",{"_index":2998,"title":{},"body":{"interfaces/FileUploaderMsg.html":{},"guards/LoadPageGuardService.html":{},"guards/RouteGuardService.html":{},"components/WizardProgressBarComponent.html":{},"additional-documentation/local-development/components.html":{}}}],["step.title",{"_index":4562,"title":{},"body":{"components/WizardProgressBarComponent.html":{}}}],["stepcontainer",{"_index":4496,"title":{},"body":{"components/WizardProgressBarComponent.html":{}}}],["stepper",{"_index":1751,"title":{},"body":{"classes/Container.html":{},"interfaces/WizardProgressItem.html":{}}}],["stepper/wizard",{"_index":4982,"title":{},"body":{"changelog.html":{}}}],["stepper/wizardprogress",{"_index":5005,"title":{},"body":{"changelog.html":{}}}],["steps",{"_index":2864,"title":{},"body":{"interfaces/FileUploaderMsg.html":{},"components/WizardProgressBarComponent.html":{}}}],["sticky",{"_index":4639,"title":{},"body":{"changelog.html":{}}}],["still",{"_index":2684,"title":{},"body":{"components/EmailComponent.html":{},"interfaces/FileUploaderMsg.html":{},"components/GeocoderInputComponent.html":{},"components/NameComponent.html":{},"components/PageSectionComponent.html":{},"index.html":{},"additional-documentation/getting-started.html":{},"additional-documentation/local-development/schematics.html":{}}}],["store",{"_index":1006,"title":{},"body":{"classes/Address.html":{}}}],["stored",{"_index":930,"title":{},"body":{"interfaces/AddrLabelList.html":{},"interfaces/Maxlengths.html":{},"interfaces/ReadOnlyFields.html":{}}}],["stp",{"_index":2280,"title":{},"body":{"interfaces/CountryList.html":{}}}],["str",{"_index":2736,"title":{},"body":{"interfaces/ErrorMessage.html":{},"components/GeocoderInputComponent.html":{}}}],["str.replace",{"_index":2737,"title":{},"body":{"interfaces/ErrorMessage.html":{}}}],["str.slice(0",{"_index":3528,"title":{},"body":{"components/GeocoderInputComponent.html":{}}}],["street",{"_index":835,"title":{},"body":{"interfaces/AddrLabelList.html":{},"classes/Address.html":{},"interfaces/GeoAddressResult.html":{},"injectables/GeocoderService.html":{},"interfaces/Maxlengths.html":{},"interfaces/ReadOnlyFields.html":{},"directives/ValidateStreetDirective.html":{},"changelog.html":{}}}],["street'},{'name",{"_index":749,"title":{},"body":{"components/AccordionCommonComponent.html":{},"components/ButtonComponent.html":{},"components/ButtonGroupComponent.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"components/ConfirmTemplateComponent.html":{},"components/CoreBreadcrumbComponent.html":{},"components/DatepickerComponent.html":{},"components/DropdownComponent.html":{},"components/EmailComponent.html":{},"components/ErrorContainerComponent.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/FullNameComponent.html":{},"components/GeocoderInputComponent.html":{},"components/HeaderComponent.html":{},"components/NameComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"components/RadioComponent.html":{},"components/SampleModalComponent.html":{},"components/SinComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{},"components/XiconButtonComponent.html":{}}}],["street.component.ts",{"_index":5486,"title":{},"body":{"todo.html":{}}}],["street.directive",{"_index":4336,"title":{},"body":{"modules/SharedCoreModule.html":{}}}],["street.directive.ts",{"_index":4489,"title":{},"body":{"directives/ValidateStreetDirective.html":{},"coverage.html":{}}}],["street.directive.ts:25",{"_index":4490,"title":{},"body":{"directives/ValidateStreetDirective.html":{}}}],["streetcomponent",{"_index":748,"title":{},"body":{"components/AccordionCommonComponent.html":{},"components/ButtonComponent.html":{},"components/ButtonGroupComponent.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"components/ConfirmTemplateComponent.html":{},"components/CoreBreadcrumbComponent.html":{},"components/DatepickerComponent.html":{},"components/DropdownComponent.html":{},"components/EmailComponent.html":{},"components/ErrorContainerComponent.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/FullNameComponent.html":{},"components/GeocoderInputComponent.html":{},"components/HeaderComponent.html":{},"components/NameComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"components/RadioComponent.html":{},"components/SampleModalComponent.html":{},"modules/SharedCoreModule.html":{},"components/SinComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{},"components/XiconButtonComponent.html":{},"coverage.html":{},"overview.html":{}}}],["strength",{"_index":3948,"title":{},"body":{"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{}}}],["strengthpercentage",{"_index":3964,"title":{},"body":{"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{}}}],["string",{"_index":60,"title":{},"body":{"classes/AbstractBaseForm.html":{},"classes/AbstractForm.html":{},"classes/AbstractFormControl.html":{},"classes/AbstractHttpService.html":{},"injectables/AbstractPageGuardService.html":{},"injectables/AbstractPgCheckService.html":{},"classes/AbstractReactForm.html":{},"classes/AbstractTestPage.html":{},"components/AccordionCommonComponent.html":{},"interfaces/AddrLabelList.html":{},"classes/Address.html":{},"classes/Base.html":{},"components/ButtonComponent.html":{},"components/ButtonGroupComponent.html":{},"injectables/CaptchaDataService.html":{},"injectables/CheckCompleteBaseService.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"interfaces/CommonAttachmentJson.html":{},"classes/CommonImage.html":{},"classes/CommonImageProcessingError.html":{},"interfaces/CommonImageScaleFactors.html":{},"classes/CommonImageScaleFactorsImpl.html":{},"interfaces/CommonLogMessage.html":{},"components/ConfirmTemplateComponent.html":{},"classes/Container.html":{},"injectables/ContainerService.html":{},"interfaces/CountryList.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"injectables/DefaultPageGuardService.html":{},"components/DropdownComponent.html":{},"directives/DuplicateCheckDirective.html":{},"components/EmailComponent.html":{},"interfaces/ErrorMessage.html":{},"interfaces/FileUploaderMsg.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/FullNameComponent.html":{},"interfaces/FullNameErrorMsg.html":{},"interfaces/GeoAddressResult.html":{},"components/GeocoderInputComponent.html":{},"injectables/GeocoderService.html":{},"components/HeaderComponent.html":{},"interfaces/IRadioItems.html":{},"interfaces/ISpaEnvResponse.html":{},"guards/LoadPageGuardService.html":{},"interfaces/Maxlengths.html":{},"classes/MoHCommonLibraryError.html":{},"components/NameComponent.html":{},"interfaces/PageList.html":{},"interfaces/PageListInterface.html":{},"injectables/PageStateService.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"classes/Person.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{},"components/RadioComponent.html":{},"interfaces/ReadOnlyFields.html":{},"guards/RouteGuardService.html":{},"interfaces/SampleImageInterface.html":{},"components/SampleModalComponent.html":{},"injectables/ServerPayload.html":{},"components/SinComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"directives/ValidateBcPostalDirective.html":{},"directives/ValidateCityDirective.html":{},"directives/ValidateNameDirective.html":{},"directives/ValidatePostalcodeDirective.html":{},"directives/ValidateRegionDirective.html":{},"directives/ValidateStreetDirective.html":{},"interfaces/WizardProgressItem.html":{},"components/XiconButtonComponent.html":{},"changelog.html":{}}}],["stringable",{"_index":1514,"title":{},"body":{"interfaces/CommonAttachmentJson.html":{},"classes/CommonImage.html":{},"classes/CommonImageProcessingError.html":{},"interfaces/CommonImageScaleFactors.html":{},"classes/CommonImageScaleFactorsImpl.html":{}}}],["strip",{"_index":200,"title":{},"body":{"classes/AbstractFormControl.html":{},"changelog.html":{}}}],["stripped",{"_index":3490,"title":{},"body":{"components/GeocoderInputComponent.html":{}}}],["stripstringtomaxlength",{"_index":3436,"title":{},"body":{"components/GeocoderInputComponent.html":{}}}],["stripstringtomaxlength(str",{"_index":3459,"title":{},"body":{"components/GeocoderInputComponent.html":{}}}],["structure",{"_index":822,"title":{},"body":{"interfaces/AddrLabelList.html":{},"interfaces/CommonAttachmentJson.html":{},"classes/CommonImage.html":{},"classes/CommonImageProcessingError.html":{},"interfaces/CommonImageScaleFactors.html":{},"classes/CommonImageScaleFactorsImpl.html":{},"interfaces/Maxlengths.html":{},"interfaces/ReadOnlyFields.html":{}}}],["stuff",{"_index":4398,"title":{},"body":{"components/SinComponent.html":{}}}],["style",{"_index":1078,"title":{},"body":{"components/ButtonComponent.html":{},"interfaces/IRadioItems.html":{},"components/PageSectionComponent.html":{},"components/RadioComponent.html":{},"changelog.html":{}}}],["style.width]='strengthpercentage",{"_index":4049,"title":{},"body":{"components/PasswordComponent.html":{}}}],["style.width]=\\'strengthpercentage",{"_index":4057,"title":{},"body":{"components/PasswordComponent.html":{}}}],["style=scss",{"_index":5546,"title":{},"body":{"additional-documentation/local-development/schematics.html":{}}}],["styled",{"_index":4966,"title":{},"body":{"changelog.html":{}}}],["styles",{"_index":1834,"title":{},"body":{"components/CoreBreadcrumbComponent.html":{},"changelog.html":{},"index.html":{},"additional-documentation/local-development/schematics.html":{}}}],["styles/dist/common",{"_index":5608,"title":{},"body":{"additional-documentation/local-development/components.html":{}}}],["styles/dist/commonwe",{"_index":5603,"title":{},"body":{"additional-documentation/local-development/components.html":{}}}],["styles/projects/common",{"_index":5602,"title":{},"body":{"additional-documentation/local-development/components.html":{}}}],["styles/projects/common/schematics",{"_index":5543,"title":{},"body":{"additional-documentation/local-development/schematics.html":{}}}],["styles/projects/commonif",{"_index":5616,"title":{},"body":{"additional-documentation/local-development/components.html":{}}}],["stylesscss",{"_index":5365,"title":{},"body":{"coverage.html":{}}}],["styleurls",{"_index":661,"title":{},"body":{"components/AccordionCommonComponent.html":{},"interfaces/AddrLabelList.html":{},"components/ButtonComponent.html":{},"components/ButtonGroupComponent.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"components/ConfirmTemplateComponent.html":{},"components/CoreBreadcrumbComponent.html":{},"interfaces/CountryList.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"components/DropdownComponent.html":{},"components/EmailComponent.html":{},"components/ErrorContainerComponent.html":{},"interfaces/FileUploaderMsg.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/FullNameComponent.html":{},"interfaces/FullNameErrorMsg.html":{},"components/GeocoderInputComponent.html":{},"components/HeaderComponent.html":{},"interfaces/IRadioItems.html":{},"interfaces/ISpaEnvResponse.html":{},"interfaces/Maxlengths.html":{},"components/NameComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{},"components/RadioComponent.html":{},"interfaces/ReadOnlyFields.html":{},"interfaces/SampleImageInterface.html":{},"components/SampleModalComponent.html":{},"components/SinComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{},"components/XiconButtonComponent.html":{}}}],["styling",{"_index":5127,"title":{},"body":{"changelog.html":{}}}],["stylings",{"_index":1096,"title":{},"body":{"components/ButtonComponent.html":{}}}],["stylized",{"_index":3547,"title":{},"body":{"components/HeaderComponent.html":{}}}],["sub",{"_index":3391,"title":{},"body":{"interfaces/GeoAddressResult.html":{},"injectables/GeocoderService.html":{}}}],["subclasses",{"_index":1583,"title":{},"body":{"interfaces/CommonLogMessage.html":{}}}],["subfolder",{"_index":5233,"title":{},"body":{"changelog.html":{}}}],["subject",{"_index":1816,"title":{},"body":{"injectables/ContainerService.html":{},"components/GeocoderInputComponent.html":{}}}],["submission",{"_index":1582,"title":{},"body":{"interfaces/CommonLogMessage.html":{},"miscellaneous/enumerations.html":{}}}],["submit",{"_index":469,"title":{},"body":{"classes/AbstractTestPage.html":{},"components/AccordionCommonComponent.html":{},"components/ButtonComponent.html":{},"components/ButtonGroupComponent.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"components/ConfirmTemplateComponent.html":{},"components/CoreBreadcrumbComponent.html":{},"components/DatepickerComponent.html":{},"components/DropdownComponent.html":{},"components/EmailComponent.html":{},"components/ErrorContainerComponent.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/FullNameComponent.html":{},"components/GeocoderInputComponent.html":{},"components/HeaderComponent.html":{},"interfaces/ISpaEnvResponse.html":{},"components/NameComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"components/RadioComponent.html":{},"components/SampleModalComponent.html":{},"modules/SharedCoreModule.html":{},"components/SinComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{},"components/XiconButtonComponent.html":{},"coverage.html":{},"index.html":{}}}],["submitbar",{"_index":3858,"title":{},"body":{"components/PageFrameworkComponent.html":{}}}],["submitbuttonclicked",{"_index":1803,"title":{},"body":{"injectables/ContainerService.html":{}}}],["submitlabel",{"_index":1739,"title":{},"body":{"classes/Container.html":{},"injectables/ContainerService.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"interfaces/WizardProgressItem.html":{}}}],["submitlabelsubject",{"_index":1798,"title":{},"body":{"injectables/ContainerService.html":{}}}],["submitted",{"_index":199,"title":{},"body":{"classes/AbstractFormControl.html":{},"interfaces/AddrLabelList.html":{},"interfaces/CommonAttachmentJson.html":{},"classes/CommonImage.html":{},"classes/CommonImageProcessingError.html":{},"interfaces/CommonImageScaleFactors.html":{},"classes/CommonImageScaleFactorsImpl.html":{},"interfaces/Maxlengths.html":{},"interfaces/ReadOnlyFields.html":{},"changelog.html":{}}}],["subscribe",{"_index":1611,"title":{},"body":{"interfaces/CommonLogMessage.html":{},"classes/Container.html":{},"interfaces/FileUploaderMsg.html":{},"interfaces/WizardProgressItem.html":{}}}],["subscribe(evt",{"_index":2956,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["subscribe(response",{"_index":3761,"title":{},"body":{"interfaces/ISpaEnvResponse.html":{}}}],["subscribe(this.updateskipcontentlink.bind(this",{"_index":3583,"title":{},"body":{"components/HeaderComponent.html":{}}}],["subscribe(url",{"_index":4529,"title":{},"body":{"components/WizardProgressBarComponent.html":{}}}],["subscribeformbar",{"_index":1743,"title":{},"body":{"classes/Container.html":{},"interfaces/WizardProgressItem.html":{}}}],["subscription",{"_index":1747,"title":{},"body":{"classes/Container.html":{},"injectables/ContainerService.html":{},"components/WizardProgressBarComponent.html":{},"interfaces/WizardProgressItem.html":{}}}],["success",{"_index":344,"title":{},"body":{"classes/AbstractHttpService.html":{},"components/ConfirmTemplateComponent.html":{},"interfaces/ISpaEnvResponse.html":{},"components/PasswordComponent.html":{},"changelog.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{}}}],["success_fetch_img",{"_index":5421,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["success_verify_answer_correct",{"_index":5424,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["successcode",{"_index":1693,"title":{},"body":{"components/ConfirmTemplateComponent.html":{}}}],["successfully",{"_index":3040,"title":{},"body":{"interfaces/FileUploaderMsg.html":{},"changelog.html":{}}}],["such",{"_index":1093,"title":{},"body":{"components/ButtonComponent.html":{},"components/CityComponent.html":{},"interfaces/CountryList.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{},"additional-documentation/getting-started.html":{}}}],["sudan",{"_index":2315,"title":{},"body":{"interfaces/CountryList.html":{}}}],["suggestion",{"_index":3923,"title":{},"body":{"components/PageSectionComponent.html":{}}}],["sum",{"_index":4399,"title":{},"body":{"components/SinComponent.html":{}}}],["sunhighlight",{"_index":2501,"title":{},"body":{"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{}}}],["super",{"_index":863,"title":{},"body":{"interfaces/AddrLabelList.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"components/ConfirmTemplateComponent.html":{},"classes/Container.html":{},"interfaces/CountryList.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"components/DropdownComponent.html":{},"components/EmailComponent.html":{},"interfaces/FileUploaderMsg.html":{},"components/FullNameComponent.html":{},"interfaces/FullNameErrorMsg.html":{},"components/GeocoderInputComponent.html":{},"interfaces/IRadioItems.html":{},"interfaces/Maxlengths.html":{},"components/NameComponent.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{},"components/RadioComponent.html":{},"interfaces/ReadOnlyFields.html":{},"interfaces/SampleImageInterface.html":{},"components/SampleModalComponent.html":{},"components/SinComponent.html":{},"components/ToggleComponent.html":{},"interfaces/WizardProgressItem.html":{}}}],["super(http",{"_index":1597,"title":{},"body":{"interfaces/CommonLogMessage.html":{},"interfaces/GeoAddressResult.html":{},"injectables/GeocoderService.html":{},"interfaces/ISpaEnvResponse.html":{}}}],["super(message",{"_index":3814,"title":{},"body":{"classes/MoHCommonLibraryError.html":{}}}],["super(router",{"_index":105,"title":{},"body":{"classes/AbstractForm.html":{},"classes/AbstractReactForm.html":{}}}],["super.ngoninit",{"_index":1352,"title":{},"body":{"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"components/EmailComponent.html":{},"interfaces/IRadioItems.html":{},"components/NameComponent.html":{},"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{},"components/RadioComponent.html":{},"components/SinComponent.html":{}}}],["suppben",{"_index":3728,"title":{},"body":{"interfaces/ISpaEnvResponse.html":{},"changelog.html":{}}}],["supply",{"_index":4576,"title":{},"body":{"components/XiconButtonComponent.html":{}}}],["support",{"_index":4870,"title":{},"body":{"changelog.html":{},"modules.html":{}}}],["sur",{"_index":2322,"title":{},"body":{"interfaces/CountryList.html":{}}}],["sure",{"_index":874,"title":{},"body":{"interfaces/AddrLabelList.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"components/FormSubmitBarComponent.html":{},"guards/LoadPageGuardService.html":{},"interfaces/Maxlengths.html":{},"interfaces/ReadOnlyFields.html":{},"guards/RouteGuardService.html":{},"additional-documentation/getting-started.html":{},"additional-documentation/local-development/schematics.html":{},"additional-documentation/local-development/components.html":{}}}],["suriname",{"_index":2323,"title":{},"body":{"interfaces/CountryList.html":{}}}],["svalbard",{"_index":2325,"title":{},"body":{"interfaces/CountryList.html":{}}}],["svg",{"_index":5468,"title":{},"body":{"modules.html":{}}}],["svk",{"_index":2301,"title":{},"body":{"interfaces/CountryList.html":{}}}],["svn",{"_index":2303,"title":{},"body":{"interfaces/CountryList.html":{}}}],["swaziland",{"_index":2329,"title":{},"body":{"interfaces/CountryList.html":{}}}],["swe",{"_index":2330,"title":{},"body":{"interfaces/CountryList.html":{}}}],["sweden",{"_index":2331,"title":{},"body":{"interfaces/CountryList.html":{}}}],["switch",{"_index":5057,"title":{},"body":{"changelog.html":{}}}],["switched",{"_index":4543,"title":{},"body":{"components/WizardProgressBarComponent.html":{}}}],["switchmap",{"_index":3477,"title":{},"body":{"components/GeocoderInputComponent.html":{}}}],["switchmap(searchphrase",{"_index":3484,"title":{},"body":{"components/GeocoderInputComponent.html":{}}}],["switzerland",{"_index":2333,"title":{},"body":{"interfaces/CountryList.html":{}}}],["swz",{"_index":2328,"title":{},"body":{"interfaces/CountryList.html":{}}}],["sxm",{"_index":2298,"title":{},"body":{"interfaces/CountryList.html":{}}}],["syc",{"_index":2291,"title":{},"body":{"interfaces/CountryList.html":{}}}],["symlink",{"_index":5548,"title":{},"body":{"additional-documentation/local-development/schematics.html":{}}}],["syr",{"_index":2334,"title":{},"body":{"interfaces/CountryList.html":{}}}],["syrian",{"_index":2335,"title":{},"body":{"interfaces/CountryList.html":{}}}],["system",{"_index":2862,"title":{},"body":{"interfaces/FileUploaderMsg.html":{},"interfaces/ISpaEnvResponse.html":{}}}],["t",{"_index":267,"title":{},"body":{"classes/AbstractHttpService.html":{},"interfaces/CommonAttachmentJson.html":{},"classes/CommonImage.html":{},"classes/CommonImageProcessingError.html":{},"interfaces/CommonImageScaleFactors.html":{},"classes/CommonImageScaleFactorsImpl.html":{},"injectables/GeocoderService.html":{}}}],["tab",{"_index":3523,"title":{},"body":{"components/GeocoderInputComponent.html":{},"components/HeaderComponent.html":{},"changelog.html":{}}}],["tabbed",{"_index":484,"title":{},"body":{"classes/AbstractTestPage.html":{}}}],["table",{"_index":3618,"title":{},"body":{"interfaces/IRadioItems.html":{},"components/RadioComponent.html":{},"coverage.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":5393,"title":{},"body":{"coverage.html":{}}}],["tabs",{"_index":5135,"title":{},"body":{"changelog.html":{}}}],["tag",{"_index":2733,"title":{},"body":{"interfaces/ErrorMessage.html":{},"interfaces/FileUploaderMsg.html":{}}}],["tagging",{"_index":5224,"title":{},"body":{"changelog.html":{}}}],["tags",{"_index":212,"title":{},"body":{"classes/AbstractFormControl.html":{},"interfaces/CommonLogMessage.html":{}}}],["taiwan",{"_index":2338,"title":{},"body":{"interfaces/CountryList.html":{}}}],["tajikistan",{"_index":2340,"title":{},"body":{"interfaces/CountryList.html":{}}}],["take",{"_index":3665,"title":{},"body":{"interfaces/ISpaEnvResponse.html":{}}}],["takes",{"_index":313,"title":{},"body":{"classes/AbstractHttpService.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{}}}],["taking",{"_index":5051,"title":{},"body":{"changelog.html":{}}}],["tanzania",{"_index":2342,"title":{},"body":{"interfaces/CountryList.html":{}}}],["tap",{"_index":318,"title":{},"body":{"classes/AbstractHttpService.html":{},"components/GeocoderInputComponent.html":{}}}],["target",{"_index":273,"title":{},"body":{"classes/AbstractHttpService.html":{},"injectables/GeocoderService.html":{},"components/WizardProgressBarComponent.html":{}}}],["tca",{"_index":2364,"title":{},"body":{"interfaces/CountryList.html":{}}}],["tcd",{"_index":1956,"title":{},"body":{"interfaces/CountryList.html":{}}}],["tell",{"_index":5542,"title":{},"body":{"additional-documentation/local-development/schematics.html":{}}}],["template",{"_index":653,"title":{},"body":{"components/AccordionCommonComponent.html":{},"components/ButtonComponent.html":{},"components/ButtonGroupComponent.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"components/ConfirmTemplateComponent.html":{},"components/CoreBreadcrumbComponent.html":{},"components/DatepickerComponent.html":{},"components/DropdownComponent.html":{},"components/EmailComponent.html":{},"components/ErrorContainerComponent.html":{},"interfaces/FileUploaderMsg.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/FullNameComponent.html":{},"components/GeocoderInputComponent.html":{},"components/HeaderComponent.html":{},"interfaces/IRadioItems.html":{},"components/NameComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"components/RadioComponent.html":{},"components/SampleModalComponent.html":{},"components/SinComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{},"components/XiconButtonComponent.html":{},"changelog.html":{}}}],["template'},{'name",{"_index":696,"title":{},"body":{"components/AccordionCommonComponent.html":{},"components/ButtonComponent.html":{},"components/ButtonGroupComponent.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"components/ConfirmTemplateComponent.html":{},"components/CoreBreadcrumbComponent.html":{},"components/DatepickerComponent.html":{},"components/DropdownComponent.html":{},"components/EmailComponent.html":{},"components/ErrorContainerComponent.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/FullNameComponent.html":{},"components/GeocoderInputComponent.html":{},"components/HeaderComponent.html":{},"components/NameComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"components/RadioComponent.html":{},"components/SampleModalComponent.html":{},"components/SinComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{},"components/XiconButtonComponent.html":{}}}],["template.component",{"_index":4346,"title":{},"body":{"modules/SharedCoreModule.html":{}}}],["template.component.html",{"_index":1691,"title":{},"body":{"components/ConfirmTemplateComponent.html":{}}}],["template.component.scss",{"_index":1690,"title":{},"body":{"components/ConfirmTemplateComponent.html":{}}}],["template.component.ts",{"_index":1689,"title":{},"body":{"components/ConfirmTemplateComponent.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{}}}],["template.component.ts:18",{"_index":1695,"title":{},"body":{"components/ConfirmTemplateComponent.html":{}}}],["template.component.ts:25",{"_index":1699,"title":{},"body":{"components/ConfirmTemplateComponent.html":{}}}],["template.component.ts:29",{"_index":1701,"title":{},"body":{"components/ConfirmTemplateComponent.html":{}}}],["template.component.ts:33",{"_index":1703,"title":{},"body":{"components/ConfirmTemplateComponent.html":{}}}],["template/confirm",{"_index":1688,"title":{},"body":{"components/ConfirmTemplateComponent.html":{},"modules/SharedCoreModule.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{}}}],["templateforms",{"_index":3421,"title":{},"body":{"components/GeocoderInputComponent.html":{}}}],["templates",{"_index":5579,"title":{},"body":{"additional-documentation/local-development/schematics.html":{}}}],["templateurl",{"_index":663,"title":{},"body":{"components/AccordionCommonComponent.html":{},"interfaces/AddrLabelList.html":{},"components/ButtonComponent.html":{},"components/ButtonGroupComponent.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"components/ConfirmTemplateComponent.html":{},"components/CoreBreadcrumbComponent.html":{},"interfaces/CountryList.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"components/DropdownComponent.html":{},"components/EmailComponent.html":{},"components/ErrorContainerComponent.html":{},"interfaces/FileUploaderMsg.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/FullNameComponent.html":{},"interfaces/FullNameErrorMsg.html":{},"components/GeocoderInputComponent.html":{},"components/HeaderComponent.html":{},"interfaces/IRadioItems.html":{},"interfaces/ISpaEnvResponse.html":{},"interfaces/Maxlengths.html":{},"components/NameComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{},"components/RadioComponent.html":{},"interfaces/ReadOnlyFields.html":{},"interfaces/SampleImageInterface.html":{},"components/SampleModalComponent.html":{},"components/SinComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{},"components/XiconButtonComponent.html":{}}}],["temporary",{"_index":421,"title":{},"body":{"classes/AbstractReactForm.html":{},"interfaces/FileUploaderMsg.html":{}}}],["temporibus",{"_index":1427,"title":{},"body":{"components/CityComponent.html":{},"interfaces/CountryList.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"interfaces/FileUploaderMsg.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{}}}],["tenetur",{"_index":1433,"title":{},"body":{"components/CityComponent.html":{},"interfaces/CountryList.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"interfaces/FileUploaderMsg.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{}}}],["territories",{"_index":2034,"title":{},"body":{"interfaces/CountryList.html":{},"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{}}}],["territory",{"_index":1932,"title":{},"body":{"interfaces/CountryList.html":{}}}],["test",{"_index":432,"title":{},"body":{"classes/AbstractTestPage.html":{},"components/EmailComponent.html":{},"components/NameComponent.html":{},"components/SinComponent.html":{},"components/XiconButtonComponent.html":{},"changelog.html":{},"coverage.html":{}}}],["test(var1",{"_index":3014,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["testing",{"_index":544,"title":{},"body":{"classes/AbstractTestPage.html":{},"changelog.html":{}}}],["tests",{"_index":438,"title":{},"body":{"classes/AbstractTestPage.html":{},"interfaces/CommonAttachmentJson.html":{},"classes/CommonImage.html":{},"classes/CommonImageProcessingError.html":{},"interfaces/CommonImageScaleFactors.html":{},"classes/CommonImageScaleFactorsImpl.html":{},"classes/Person.html":{},"changelog.html":{}}}],["text",{"_index":351,"title":{},"body":{"classes/AbstractHttpService.html":{},"classes/AbstractTestPage.html":{},"interfaces/AddrLabelList.html":{},"interfaces/CommonLogMessage.html":{},"components/GeocoderInputComponent.html":{},"interfaces/Maxlengths.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"components/PostalCodeComponent.html":{},"interfaces/ReadOnlyFields.html":{},"modules/SharedCoreModule.html":{},"changelog.html":{},"dependencies.html":{}}}],["text)).click",{"_index":638,"title":{},"body":{"classes/AbstractTestPage.html":{}}}],["text.touppercase",{"_index":4164,"title":{},"body":{"components/PostalCodeComponent.html":{}}}],["textmaskmodule",{"_index":4293,"title":{},"body":{"modules/SharedCoreModule.html":{}}}],["tgo",{"_index":2349,"title":{},"body":{"interfaces/CountryList.html":{}}}],["tha",{"_index":2344,"title":{},"body":{"interfaces/CountryList.html":{}}}],["thailand",{"_index":2345,"title":{},"body":{"interfaces/CountryList.html":{}}}],["thanks",{"_index":5149,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["that's",{"_index":1637,"title":{},"body":{"interfaces/CommonLogMessage.html":{},"components/HeaderComponent.html":{},"additional-documentation/local-development/components.html":{}}}],["then((data",{"_index":81,"title":{},"body":{"classes/AbstractBaseForm.html":{}}}],["there's",{"_index":2527,"title":{},"body":{"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{}}}],["therefore",{"_index":970,"title":{},"body":{"interfaces/AddrLabelList.html":{},"interfaces/Maxlengths.html":{},"interfaces/ReadOnlyFields.html":{}}}],["theyt",{"_index":3179,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["things",{"_index":3952,"title":{},"body":{"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{}}}],["this.$continuebtnsubject.asobservable",{"_index":1814,"title":{},"body":{"injectables/ContainerService.html":{}}}],["this.$continuebtnsubject.next",{"_index":1830,"title":{},"body":{"injectables/ContainerService.html":{}}}],["this.$isloadingsubject.asobservable",{"_index":1818,"title":{},"body":{"injectables/ContainerService.html":{}}}],["this.$isloadingsubject.next",{"_index":1829,"title":{},"body":{"injectables/ContainerService.html":{}}}],["this.$submitlabelsubject.asobservable",{"_index":1822,"title":{},"body":{"injectables/ContainerService.html":{}}}],["this.$submitlabelsubject.next",{"_index":1827,"title":{},"body":{"injectables/ContainerService.html":{}}}],["this.$usedefaultcolorsubject.asobservable",{"_index":1825,"title":{},"body":{"injectables/ContainerService.html":{}}}],["this.$usedefaultcolorsubject.next",{"_index":1828,"title":{},"body":{"injectables/ContainerService.html":{}}}],["this._applicationheadermap.get(this.processname",{"_index":3759,"title":{},"body":{"interfaces/ISpaEnvResponse.html":{}}}],["this._bypassguards",{"_index":1280,"title":{},"body":{"injectables/CheckCompleteBaseService.html":{},"interfaces/PageListInterface.html":{}}}],["this._continue(state.url",{"_index":3807,"title":{},"body":{"guards/LoadPageGuardService.html":{},"guards/RouteGuardService.html":{}}}],["this._defaulterrmsg[x",{"_index":209,"title":{},"body":{"classes/AbstractFormControl.html":{}}}],["this._find(url",{"_index":3892,"title":{},"body":{"interfaces/PageList.html":{},"injectables/PageStateService.html":{}}}],["this._headers",{"_index":345,"title":{},"body":{"classes/AbstractHttpService.html":{},"interfaces/CommonLogMessage.html":{},"interfaces/ISpaEnvResponse.html":{}}}],["this._headers.get",{"_index":1599,"title":{},"body":{"interfaces/CommonLogMessage.html":{}}}],["this._headers.set",{"_index":1598,"title":{},"body":{"interfaces/CommonLogMessage.html":{}}}],["this._headers.set('severity",{"_index":1682,"title":{},"body":{"interfaces/CommonLogMessage.html":{}}}],["this._headers.set('tags",{"_index":1686,"title":{},"body":{"interfaces/CommonLogMessage.html":{}}}],["this._headers.set('timestamp",{"_index":1679,"title":{},"body":{"interfaces/CommonLogMessage.html":{}}}],["this._log",{"_index":1606,"title":{},"body":{"interfaces/CommonLogMessage.html":{}}}],["this._logerror",{"_index":1608,"title":{},"body":{"interfaces/CommonLogMessage.html":{}}}],["this._markallastouched",{"_index":419,"title":{},"body":{"classes/AbstractReactForm.html":{}}}],["this._onchange",{"_index":189,"title":{},"body":{"classes/AbstractFormControl.html":{},"interfaces/AddrLabelList.html":{},"components/ButtonGroupComponent.html":{},"components/CityComponent.html":{},"interfaces/CountryList.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"components/DropdownComponent.html":{},"components/EmailComponent.html":{},"components/FullNameComponent.html":{},"interfaces/FullNameErrorMsg.html":{},"components/GeocoderInputComponent.html":{},"interfaces/IRadioItems.html":{},"interfaces/ISpaEnvResponse.html":{},"interfaces/Maxlengths.html":{},"components/NameComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{},"components/RadioComponent.html":{},"interfaces/ReadOnlyFields.html":{},"components/SinComponent.html":{}}}],["this._onchange(event",{"_index":1354,"title":{},"body":{"components/CheckboxComponent.html":{}}}],["this._onchange(event.jsdate",{"_index":2540,"title":{},"body":{"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{}}}],["this._onchange(null",{"_index":2535,"title":{},"body":{"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"components/GeocoderInputComponent.html":{}}}],["this._onchange(stripped",{"_index":3515,"title":{},"body":{"components/GeocoderInputComponent.html":{}}}],["this._onchange(this.addr",{"_index":891,"title":{},"body":{"interfaces/AddrLabelList.html":{},"interfaces/Maxlengths.html":{},"interfaces/ReadOnlyFields.html":{}}}],["this._onchange(this.person",{"_index":3371,"title":{},"body":{"components/FullNameComponent.html":{},"interfaces/FullNameErrorMsg.html":{}}}],["this._onchange(this.search",{"_index":3526,"title":{},"body":{"components/GeocoderInputComponent.html":{}}}],["this._onchange(true",{"_index":3742,"title":{},"body":{"interfaces/ISpaEnvResponse.html":{}}}],["this._onchange(val",{"_index":1153,"title":{},"body":{"components/ButtonGroupComponent.html":{},"interfaces/IRadioItems.html":{},"components/RadioComponent.html":{}}}],["this._onchange(values",{"_index":3368,"title":{},"body":{"components/FullNameComponent.html":{},"interfaces/FullNameErrorMsg.html":{}}}],["this._ontouched",{"_index":191,"title":{},"body":{"classes/AbstractFormControl.html":{},"interfaces/AddrLabelList.html":{},"components/ButtonGroupComponent.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"interfaces/CountryList.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"components/DropdownComponent.html":{},"components/EmailComponent.html":{},"components/FullNameComponent.html":{},"interfaces/FullNameErrorMsg.html":{},"components/GeocoderInputComponent.html":{},"interfaces/IRadioItems.html":{},"interfaces/ISpaEnvResponse.html":{},"interfaces/Maxlengths.html":{},"components/NameComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{},"components/RadioComponent.html":{},"interfaces/ReadOnlyFields.html":{},"components/SinComponent.html":{}}}],["this._ontouched(this.addr",{"_index":893,"title":{},"body":{"interfaces/AddrLabelList.html":{},"interfaces/Maxlengths.html":{},"interfaces/ReadOnlyFields.html":{}}}],["this._sendlog(errormessage",{"_index":1623,"title":{},"body":{"interfaces/CommonLogMessage.html":{}}}],["this._sendlog(message",{"_index":1620,"title":{},"body":{"interfaces/CommonLogMessage.html":{}}}],["this._starturl",{"_index":1279,"title":{},"body":{"injectables/CheckCompleteBaseService.html":{},"interfaces/PageListInterface.html":{}}}],["this._subscriptions",{"_index":1784,"title":{},"body":{"classes/Container.html":{},"interfaces/WizardProgressItem.html":{}}}],["this._subscriptions.foreach",{"_index":1792,"title":{},"body":{"classes/Container.html":{},"interfaces/WizardProgressItem.html":{}}}],["this._value",{"_index":3617,"title":{},"body":{"interfaces/IRadioItems.html":{},"components/RadioComponent.html":{}}}],["this.accept.emit(fn",{"_index":3776,"title":{},"body":{"interfaces/ISpaEnvResponse.html":{}}}],["this.accept.emit(true",{"_index":3739,"title":{},"body":{"interfaces/ISpaEnvResponse.html":{}}}],["this.activeindex",{"_index":4530,"title":{},"body":{"components/WizardProgressBarComponent.html":{}}}],["this.addline(2",{"_index":880,"title":{},"body":{"interfaces/AddrLabelList.html":{},"interfaces/Maxlengths.html":{},"interfaces/ReadOnlyFields.html":{}}}],["this.addline(3",{"_index":882,"title":{},"body":{"interfaces/AddrLabelList.html":{},"interfaces/Maxlengths.html":{},"interfaces/ReadOnlyFields.html":{}}}],["this.addr",{"_index":830,"title":{},"body":{"interfaces/AddrLabelList.html":{},"interfaces/Maxlengths.html":{},"interfaces/ReadOnlyFields.html":{}}}],["this.addr.addressline1",{"_index":896,"title":{},"body":{"interfaces/AddrLabelList.html":{},"interfaces/Maxlengths.html":{},"interfaces/ReadOnlyFields.html":{}}}],["this.addr.addressline2",{"_index":879,"title":{},"body":{"interfaces/AddrLabelList.html":{},"interfaces/Maxlengths.html":{},"interfaces/ReadOnlyFields.html":{}}}],["this.addr.addressline3",{"_index":881,"title":{},"body":{"interfaces/AddrLabelList.html":{},"interfaces/Maxlengths.html":{},"interfaces/ReadOnlyFields.html":{}}}],["this.addr.city",{"_index":898,"title":{},"body":{"interfaces/AddrLabelList.html":{},"interfaces/Maxlengths.html":{},"interfaces/ReadOnlyFields.html":{}}}],["this.addr.country",{"_index":868,"title":{},"body":{"interfaces/AddrLabelList.html":{},"interfaces/Maxlengths.html":{},"interfaces/ReadOnlyFields.html":{}}}],["this.addr.postal",{"_index":890,"title":{},"body":{"interfaces/AddrLabelList.html":{},"interfaces/Maxlengths.html":{},"interfaces/ReadOnlyFields.html":{}}}],["this.addr.province",{"_index":872,"title":{},"body":{"interfaces/AddrLabelList.html":{},"interfaces/Maxlengths.html":{},"interfaces/ReadOnlyFields.html":{}}}],["this.address",{"_index":3472,"title":{},"body":{"components/GeocoderInputComponent.html":{}}}],["this.address[addrlookup",{"_index":927,"title":{},"body":{"interfaces/AddrLabelList.html":{},"interfaces/Maxlengths.html":{},"interfaces/ReadOnlyFields.html":{}}}],["this.addresschange.emit(this.addr",{"_index":892,"title":{},"body":{"interfaces/AddrLabelList.html":{},"interfaces/Maxlengths.html":{},"interfaces/ReadOnlyFields.html":{}}}],["this.addresschange.emit(this.selectedaddress",{"_index":3513,"title":{},"body":{"components/GeocoderInputComponent.html":{}}}],["this.addressline1",{"_index":1051,"title":{},"body":{"classes/Address.html":{}}}],["this.addressline2",{"_index":1062,"title":{},"body":{"classes/Address.html":{}}}],["this.addressline3",{"_index":1064,"title":{},"body":{"classes/Address.html":{}}}],["this.addrlabels[x",{"_index":980,"title":{},"body":{"interfaces/AddrLabelList.html":{},"interfaces/Maxlengths.html":{},"interfaces/ReadOnlyFields.html":{}}}],["this.agreecheck",{"_index":3778,"title":{},"body":{"interfaces/ISpaEnvResponse.html":{}}}],["this.allowextralines",{"_index":878,"title":{},"body":{"interfaces/AddrLabelList.html":{},"interfaces/Maxlengths.html":{},"interfaces/ReadOnlyFields.html":{}}}],["this.apidobformat",{"_index":4105,"title":{},"body":{"classes/Person.html":{}}}],["this.application",{"_index":2821,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["this.attachmentorder",{"_index":1535,"title":{},"body":{"interfaces/CommonAttachmentJson.html":{},"classes/CommonImage.html":{},"classes/CommonImageProcessingError.html":{},"interfaces/CommonImageScaleFactors.html":{},"classes/CommonImageScaleFactorsImpl.html":{}}}],["this.base_url}/addresses.json",{"_index":3383,"title":{},"body":{"interfaces/GeoAddressResult.html":{},"injectables/GeocoderService.html":{}}}],["this.bconly",{"_index":864,"title":{},"body":{"interfaces/AddrLabelList.html":{},"interfaces/Maxlengths.html":{},"interfaces/ReadOnlyFields.html":{},"directives/ValidatePostalcodeDirective.html":{}}}],["this.blur.emit",{"_index":1471,"title":{},"body":{"components/CityComponent.html":{},"components/EmailComponent.html":{},"components/NameComponent.html":{},"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{},"components/SinComponent.html":{}}}],["this.blurevent.emit",{"_index":2417,"title":{},"body":{"interfaces/CountryList.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"components/PostalCodeComponent.html":{}}}],["this.browsefileref.nativeelement",{"_index":3239,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["this.browsefileref.nativeelement.click",{"_index":3026,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["this.browsefileref.nativeelement.value",{"_index":3242,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["this.btnclick.emit($event",{"_index":1117,"title":{},"body":{"components/ButtonComponent.html":{},"components/FormActionBarComponent.html":{}}}],["this.buttongroup.nativeelement.focus",{"_index":1154,"title":{},"body":{"components/ButtonGroupComponent.html":{}}}],["this.bypassguards",{"_index":2632,"title":{},"body":{"injectables/DefaultPageGuardService.html":{}}}],["this.cancontinue",{"_index":3276,"title":{},"body":{"components/FormActionBarComponent.html":{}}}],["this.capturefileref.nativeelement",{"_index":3241,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["this.capturefileref.nativeelement.value",{"_index":3243,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["this.cd.detach",{"_index":4537,"title":{},"body":{"components/WizardProgressBarComponent.html":{}}}],["this.cd.detectchanges",{"_index":4532,"title":{},"body":{"components/WizardProgressBarComponent.html":{}}}],["this.checkbox.nativeelement.focus",{"_index":1355,"title":{},"body":{"components/CheckboxComponent.html":{}}}],["this.checkimagedimensions(mspimage",{"_index":2989,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["this.city",{"_index":1052,"title":{},"body":{"classes/Address.html":{},"components/CityComponent.html":{}}}],["this.cleardate",{"_index":2534,"title":{},"body":{"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{}}}],["this.click.emit",{"_index":4583,"title":{},"body":{"components/XiconButtonComponent.html":{}}}],["this.clickevent.emit",{"_index":4582,"title":{},"body":{"components/XiconButtonComponent.html":{}}}],["this.close.emit",{"_index":3741,"title":{},"body":{"interfaces/ISpaEnvResponse.html":{}}}],["this.componentlabel",{"_index":4020,"title":{},"body":{"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{}}}],["this.consentmodal.showfullsizeview",{"_index":3695,"title":{},"body":{"interfaces/ISpaEnvResponse.html":{}}}],["this.containerservice",{"_index":1783,"title":{},"body":{"classes/Container.html":{},"interfaces/WizardProgressItem.html":{}}}],["this.containerservice.$isloading",{"_index":1790,"title":{},"body":{"classes/Container.html":{},"interfaces/WizardProgressItem.html":{}}}],["this.containerservice.$submitlabel",{"_index":1788,"title":{},"body":{"classes/Container.html":{},"interfaces/WizardProgressItem.html":{}}}],["this.containerservice.$usedefaultcolor",{"_index":1785,"title":{},"body":{"classes/Container.html":{},"interfaces/WizardProgressItem.html":{}}}],["this.containerservice.submitbuttonclicked",{"_index":1774,"title":{},"body":{"classes/Container.html":{},"interfaces/WizardProgressItem.html":{}}}],["this.continuebutton",{"_index":615,"title":{},"body":{"classes/AbstractTestPage.html":{}}}],["this.continuebutton.click",{"_index":614,"title":{},"body":{"classes/AbstractTestPage.html":{}}}],["this.controlcontainer",{"_index":2834,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["this.controldir",{"_index":2716,"title":{},"body":{"components/EmailComponent.html":{},"components/NameComponent.html":{},"components/SinComponent.html":{}}}],["this.convertdatetosimpledate(this.disablesince",{"_index":2513,"title":{},"body":{"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{}}}],["this.convertdatetosimpledate(today",{"_index":2518,"title":{},"body":{"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{}}}],["this.convertroutetotitle(page.path",{"_index":1782,"title":{},"body":{"classes/Container.html":{},"interfaces/WizardProgressItem.html":{}}}],["this.country",{"_index":1054,"title":{},"body":{"classes/Address.html":{},"interfaces/CountryList.html":{}}}],["this.countrylist",{"_index":961,"title":{},"body":{"interfaces/AddrLabelList.html":{},"interfaces/Maxlengths.html":{},"interfaces/ReadOnlyFields.html":{}}}],["this.countrylist.find",{"_index":962,"title":{},"body":{"interfaces/AddrLabelList.html":{},"interfaces/Maxlengths.html":{},"interfaces/ReadOnlyFields.html":{}}}],["this.criteria.test",{"_index":2719,"title":{},"body":{"components/EmailComponent.html":{}}}],["this.criteriamsg",{"_index":4028,"title":{},"body":{"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{}}}],["this.cutoffdate.emit(this.spaenvres",{"_index":3775,"title":{},"body":{"interfaces/ISpaEnvResponse.html":{}}}],["this.data",{"_index":1155,"title":{},"body":{"components/ButtonGroupComponent.html":{},"components/CheckboxComponent.html":{}}}],["this.datachange.emit(this.data",{"_index":1353,"title":{},"body":{"components/CheckboxComponent.html":{}}}],["this.datachange.emit(val",{"_index":1152,"title":{},"body":{"components/ButtonGroupComponent.html":{}}}],["this.dataservice.getmspuuid",{"_index":3223,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["this.date",{"_index":2519,"title":{},"body":{"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{}}}],["this.datechange.emit(event.jsdate",{"_index":2539,"title":{},"body":{"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{}}}],["this.dateformat",{"_index":2500,"title":{},"body":{"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{}}}],["this.dateofbirth",{"_index":4104,"title":{},"body":{"classes/Person.html":{}}}],["this.datepickeroptions",{"_index":2499,"title":{},"body":{"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{}}}],["this.datepickeroptions.disablesince",{"_index":2512,"title":{},"body":{"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{}}}],["this.datepickeroptions.disableuntil",{"_index":2515,"title":{},"body":{"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{}}}],["this.datepickeroptions.selectorheight",{"_index":2507,"title":{},"body":{"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{}}}],["this.datepickeroptions.selectorwidth",{"_index":2509,"title":{},"body":{"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{}}}],["this.defaultcountry",{"_index":958,"title":{},"body":{"interfaces/AddrLabelList.html":{},"interfaces/Maxlengths.html":{},"interfaces/ReadOnlyFields.html":{}}}],["this.defaulterrmsg[x",{"_index":2418,"title":{},"body":{"interfaces/CountryList.html":{},"components/PostalCodeComponent.html":{}}}],["this.defaultprovince",{"_index":947,"title":{},"body":{"interfaces/AddrLabelList.html":{},"interfaces/Maxlengths.html":{},"interfaces/ReadOnlyFields.html":{}}}],["this.disablecontinue",{"_index":3779,"title":{},"body":{"interfaces/ISpaEnvResponse.html":{}}}],["this.disabled",{"_index":194,"title":{},"body":{"classes/AbstractFormControl.html":{},"interfaces/AddrLabelList.html":{},"interfaces/CountryList.html":{},"interfaces/Maxlengths.html":{},"components/PostalCodeComponent.html":{},"interfaces/ReadOnlyFields.html":{}}}],["this.disabled[x",{"_index":991,"title":{},"body":{"interfaces/AddrLabelList.html":{},"interfaces/Maxlengths.html":{},"interfaces/ReadOnlyFields.html":{}}}],["this.disablegeocoder",{"_index":968,"title":{},"body":{"interfaces/AddrLabelList.html":{},"interfaces/Maxlengths.html":{},"interfaces/ReadOnlyFields.html":{}}}],["this.dobformat",{"_index":4106,"title":{},"body":{"classes/Person.html":{}}}],["this.documenttype",{"_index":1536,"title":{},"body":{"interfaces/CommonAttachmentJson.html":{},"classes/CommonImage.html":{},"classes/CommonImageProcessingError.html":{},"interfaces/CommonImageScaleFactors.html":{},"classes/CommonImageScaleFactorsImpl.html":{}}}],["this.duplist",{"_index":2681,"title":{},"body":{"directives/DuplicateCheckDirective.html":{}}}],["this.email",{"_index":2714,"title":{},"body":{"components/EmailComponent.html":{}}}],["this.errmsg",{"_index":3362,"title":{},"body":{"components/FullNameComponent.html":{},"interfaces/FullNameErrorMsg.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{}}}],["this.errmsg.criteria",{"_index":4034,"title":{},"body":{"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{}}}],["this.errmsg.minlength",{"_index":4032,"title":{},"body":{"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{}}}],["this.errmsg.required",{"_index":4030,"title":{},"body":{"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{}}}],["this.errordocument.emit(mspimage",{"_index":3234,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["this.errormessage",{"_index":206,"title":{},"body":{"classes/AbstractFormControl.html":{},"interfaces/CountryList.html":{},"components/PostalCodeComponent.html":{}}}],["this.errormessage[x",{"_index":210,"title":{},"body":{"classes/AbstractFormControl.html":{},"interfaces/CountryList.html":{},"components/PostalCodeComponent.html":{}}}],["this.errormessages",{"_index":2497,"title":{},"body":{"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{}}}],["this.errormessages.criteria",{"_index":4033,"title":{},"body":{"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{}}}],["this.errormessages.minlength",{"_index":4031,"title":{},"body":{"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{}}}],["this.errormessages.required",{"_index":4029,"title":{},"body":{"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{}}}],["this.fieldmaxlenghts[x",{"_index":986,"title":{},"body":{"interfaces/AddrLabelList.html":{},"interfaces/Maxlengths.html":{},"interfaces/ReadOnlyFields.html":{}}}],["this.filecontent",{"_index":1512,"title":{},"body":{"interfaces/CommonAttachmentJson.html":{},"classes/CommonImage.html":{},"classes/CommonImageProcessingError.html":{},"interfaces/CommonImageScaleFactors.html":{},"classes/CommonImageScaleFactorsImpl.html":{}}}],["this.findcountrycode",{"_index":871,"title":{},"body":{"interfaces/AddrLabelList.html":{},"interfaces/Maxlengths.html":{},"interfaces/ReadOnlyFields.html":{}}}],["this.firstname",{"_index":3356,"title":{},"body":{"components/FullNameComponent.html":{},"interfaces/FullNameErrorMsg.html":{},"classes/Person.html":{}}}],["this.form",{"_index":817,"title":{},"body":{"interfaces/AddrLabelList.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"interfaces/Maxlengths.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"interfaces/ReadOnlyFields.html":{}}}],["this.form.form.get(x).markastouched",{"_index":111,"title":{},"body":{"classes/AbstractForm.html":{}}}],["this.form.valid",{"_index":109,"title":{},"body":{"classes/AbstractForm.html":{},"interfaces/AddrLabelList.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"interfaces/Maxlengths.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"interfaces/ReadOnlyFields.html":{}}}],["this.form.valuechanges.pipe(debouncetime(0)).subscribe((values",{"_index":3366,"title":{},"body":{"components/FullNameComponent.html":{},"interfaces/FullNameErrorMsg.html":{}}}],["this.formgroup",{"_index":420,"title":{},"body":{"classes/AbstractReactForm.html":{}}}],["this.formgroup.valid",{"_index":412,"title":{},"body":{"classes/AbstractReactForm.html":{}}}],["this.fullsizeviewmodal.config.keyboard",{"_index":3737,"title":{},"body":{"interfaces/ISpaEnvResponse.html":{}}}],["this.fullsizeviewmodal.hide",{"_index":3740,"title":{},"body":{"interfaces/ISpaEnvResponse.html":{}}}],["this.fullsizeviewmodal.show",{"_index":3738,"title":{},"body":{"interfaces/ISpaEnvResponse.html":{}}}],["this.generateskiptocontentlink",{"_index":3587,"title":{},"body":{"components/HeaderComponent.html":{}}}],["this.geocoderservice.lookup(searchphrase",{"_index":3485,"title":{},"body":{"components/GeocoderInputComponent.html":{}}}],["this.get",{"_index":5510,"title":{},"body":{"additional-documentation/getting-started.html":{}}}],["this.get(this.address_url",{"_index":3397,"title":{},"body":{"interfaces/GeoAddressResult.html":{},"injectables/GeocoderService.html":{}}}],["this.getactiveindex(this.router.url",{"_index":4536,"title":{},"body":{"components/WizardProgressBarComponent.html":{}}}],["this.getactiveindex(url",{"_index":4531,"title":{},"body":{"components/WizardProgressBarComponent.html":{}}}],["this.getapplicationtype",{"_index":2822,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["this.getnamecomponent(labelname)).getattribute('value",{"_index":624,"title":{},"body":{"classes/AbstractTestPage.html":{}}}],["this.getpasswordstrength",{"_index":4038,"title":{},"body":{"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{}}}],["this.geturlindex",{"_index":1283,"title":{},"body":{"injectables/CheckCompleteBaseService.html":{},"interfaces/PageListInterface.html":{}}}],["this.handleerror(commonimageerror.alreadyexists",{"_index":2982,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["this.handleerror(commonimageerror.cannotopen",{"_index":3009,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["this.handleerror(commonimageerror.cannotopenpdf",{"_index":3011,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["this.handleerror(commonimageerror.toobig",{"_index":3003,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["this.handleerror(commonimageerror.toosmall",{"_index":2990,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["this.handleimagefile(file",{"_index":2991,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["this.haserror",{"_index":3497,"title":{},"body":{"components/GeocoderInputComponent.html":{}}}],["this.hasmask",{"_index":4482,"title":{},"body":{"directives/ValidatePostalcodeDirective.html":{}}}],["this.hasnoresults",{"_index":3494,"title":{},"body":{"components/GeocoderInputComponent.html":{}}}],["this.headerservice.settitle('practitioner",{"_index":1723,"title":{},"body":{"classes/Container.html":{},"interfaces/WizardProgressItem.html":{}}}],["this.heightfactor",{"_index":1546,"title":{},"body":{"interfaces/CommonAttachmentJson.html":{},"classes/CommonImage.html":{},"classes/CommonImageProcessingError.html":{},"interfaces/CommonImageScaleFactors.html":{},"classes/CommonImageScaleFactorsImpl.html":{}}}],["this.http.get(url",{"_index":330,"title":{},"body":{"classes/AbstractHttpService.html":{}}}],["this.http.post(apibaseurl",{"_index":1190,"title":{},"body":{"injectables/CaptchaDataService.html":{},"injectables/ServerPayload.html":{}}}],["this.http.post(url",{"_index":334,"title":{},"body":{"classes/AbstractHttpService.html":{}}}],["this.httpclient",{"_index":1185,"title":{},"body":{"injectables/CaptchaDataService.html":{},"injectables/ServerPayload.html":{}}}],["this.httpoptions",{"_index":327,"title":{},"body":{"classes/AbstractHttpService.html":{}}}],["this.id",{"_index":2833,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["this.imageobject.naturalheight).tofixed(0",{"_index":4438,"title":{},"body":{"components/ThumbnailComponent.html":{}}}],["this.imageobject.naturalwidth",{"_index":4437,"title":{},"body":{"components/ThumbnailComponent.html":{}}}],["this.images",{"_index":2981,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["this.images.filter(x",{"_index":3245,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["this.images.length",{"_index":3250,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["this.images.push(mspimage",{"_index":3225,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["this.imageschange.emit(this.images",{"_index":3226,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["this.injector.get",{"_index":2631,"title":{},"body":{"injectables/DefaultPageGuardService.html":{}}}],["this.inmaintenance",{"_index":3735,"title":{},"body":{"interfaces/ISpaEnvResponse.html":{}}}],["this.iscanada",{"_index":887,"title":{},"body":{"interfaces/AddrLabelList.html":{},"interfaces/Maxlengths.html":{},"interfaces/ReadOnlyFields.html":{}}}],["this.isdate(this.disablesince",{"_index":2511,"title":{},"body":{"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{}}}],["this.isdate(this.disableuntil",{"_index":2514,"title":{},"body":{"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{}}}],["this.isloading",{"_index":1791,"title":{},"body":{"classes/Container.html":{},"components/FormActionBarComponent.html":{},"interfaces/WizardProgressItem.html":{}}}],["this.ispagelistempty",{"_index":1281,"title":{},"body":{"injectables/CheckCompleteBaseService.html":{},"interfaces/PageListInterface.html":{}}}],["this.istypeaheadloading",{"_index":3493,"title":{},"body":{"components/GeocoderInputComponent.html":{}}}],["this.isundermaintenance",{"_index":3734,"title":{},"body":{"interfaces/ISpaEnvResponse.html":{}}}],["this.label",{"_index":203,"title":{},"body":{"classes/AbstractFormControl.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"components/XiconButtonComponent.html":{}}}],["this.label.replace",{"_index":204,"title":{},"body":{"classes/AbstractFormControl.html":{}}}],["this.labels",{"_index":978,"title":{},"body":{"interfaces/AddrLabelList.html":{},"interfaces/Maxlengths.html":{},"interfaces/ReadOnlyFields.html":{}}}],["this.labels[x",{"_index":981,"title":{},"body":{"interfaces/AddrLabelList.html":{},"interfaces/Maxlengths.html":{},"interfaces/ReadOnlyFields.html":{}}}],["this.labeltext",{"_index":2498,"title":{},"body":{"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{}}}],["this.lastname",{"_index":3358,"title":{},"body":{"components/FullNameComponent.html":{},"interfaces/FullNameErrorMsg.html":{},"classes/Person.html":{}}}],["this.loghttprequeststoconsole",{"_index":332,"title":{},"body":{"classes/AbstractHttpService.html":{}}}],["this.logimageinfo('msp_file",{"_index":3221,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["this.logservice.log",{"_index":1613,"title":{},"body":{"interfaces/CommonLogMessage.html":{},"interfaces/ISpaEnvResponse.html":{}}}],["this.logservice.log({event",{"_index":3751,"title":{},"body":{"interfaces/ISpaEnvResponse.html":{}}}],["this.logservice.log({name",{"_index":3039,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["this.maintenanceflag",{"_index":3765,"title":{},"body":{"interfaces/ISpaEnvResponse.html":{}}}],["this.maintenancemessage",{"_index":3766,"title":{},"body":{"interfaces/ISpaEnvResponse.html":{}}}],["this.mask",{"_index":4161,"title":{},"body":{"components/PostalCodeComponent.html":{},"components/SinComponent.html":{}}}],["this.maxlength",{"_index":3847,"title":{},"body":{"components/NameComponent.html":{}}}],["this.maxlengths",{"_index":983,"title":{},"body":{"interfaces/AddrLabelList.html":{},"interfaces/Maxlengths.html":{},"interfaces/ReadOnlyFields.html":{}}}],["this.maxlengths[x",{"_index":985,"title":{},"body":{"interfaces/AddrLabelList.html":{},"interfaces/Maxlengths.html":{},"interfaces/ReadOnlyFields.html":{}}}],["this.middlename",{"_index":3360,"title":{},"body":{"components/FullNameComponent.html":{},"interfaces/FullNameErrorMsg.html":{},"classes/Person.html":{}}}],["this.minlen",{"_index":4022,"title":{},"body":{"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{}}}],["this.minlenmsgseg1",{"_index":4026,"title":{},"body":{"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{}}}],["this.minlenmsgseg2",{"_index":4027,"title":{},"body":{"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{}}}],["this.model",{"_index":2524,"title":{},"body":{"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"components/DropdownComponent.html":{}}}],["this.namestr",{"_index":3845,"title":{},"body":{"components/NameComponent.html":{}}}],["this.ngmodelchange.emit",{"_index":2572,"title":{},"body":{"directives/DateFieldFormatDirective.html":{}}}],["this.ngxdp",{"_index":2542,"title":{},"body":{"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{}}}],["this.ngxdp.cleardate",{"_index":2546,"title":{},"body":{"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{}}}],["this.noidimage",{"_index":2861,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["this.objectid",{"_index":1369,"title":{},"body":{"components/CityComponent.html":{},"interfaces/CountryList.html":{},"components/EmailComponent.html":{},"components/NameComponent.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{},"components/SinComponent.html":{}}}],["this.observablefromfiles(filelist",{"_index":2976,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["this.onchange.emit(this.person",{"_index":3370,"title":{},"body":{"components/FullNameComponent.html":{},"interfaces/FullNameErrorMsg.html":{}}}],["this.onchange.emit(values",{"_index":3367,"title":{},"body":{"components/FullNameComponent.html":{},"interfaces/FullNameErrorMsg.html":{}}}],["this.onerror(err",{"_index":3487,"title":{},"body":{"components/GeocoderInputComponent.html":{}}}],["this.onlyfuturedates",{"_index":2516,"title":{},"body":{"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{}}}],["this.pagechecklist",{"_index":1289,"title":{},"body":{"injectables/CheckCompleteBaseService.html":{},"interfaces/PageListInterface.html":{}}}],["this.pagechecklist.filter",{"_index":1297,"title":{},"body":{"injectables/CheckCompleteBaseService.html":{},"interfaces/PageListInterface.html":{}}}],["this.pagechecklist.findindex",{"_index":1300,"title":{},"body":{"injectables/CheckCompleteBaseService.html":{},"interfaces/PageListInterface.html":{}}}],["this.pagechecklist.length",{"_index":1303,"title":{},"body":{"injectables/CheckCompleteBaseService.html":{},"interfaces/PageListInterface.html":{}}}],["this.pagechecklist.map((item",{"_index":1290,"title":{},"body":{"injectables/CheckCompleteBaseService.html":{},"interfaces/PageListInterface.html":{}}}],["this.pagechecklist[idx",{"_index":1294,"title":{},"body":{"injectables/CheckCompleteBaseService.html":{},"interfaces/PageListInterface.html":{}}}],["this.pagechecklist[idx].iscomplete",{"_index":1292,"title":{},"body":{"injectables/CheckCompleteBaseService.html":{},"interfaces/PageListInterface.html":{}}}],["this.pagelist",{"_index":3875,"title":{},"body":{"interfaces/PageList.html":{},"injectables/PageStateService.html":{}}}],["this.pagelist.every",{"_index":3900,"title":{},"body":{"interfaces/PageList.html":{},"injectables/PageStateService.html":{}}}],["this.pagelist.find",{"_index":3904,"title":{},"body":{"interfaces/PageList.html":{},"injectables/PageStateService.html":{}}}],["this.pagelist.length",{"_index":3876,"title":{},"body":{"interfaces/PageList.html":{},"injectables/PageStateService.html":{}}}],["this.pagelist.map",{"_index":3897,"title":{},"body":{"interfaces/PageList.html":{},"injectables/PageStateService.html":{}}}],["this.pagelist[index",{"_index":3895,"title":{},"body":{"interfaces/PageList.html":{},"injectables/PageStateService.html":{}}}],["this.pageservice.setpagecomplete",{"_index":3794,"title":{},"body":{"guards/LoadPageGuardService.html":{}}}],["this.pageservice.setpageincomplete",{"_index":3793,"title":{},"body":{"guards/LoadPageGuardService.html":{}}}],["this.pagestateservice.cannavigatetopage",{"_index":2640,"title":{},"body":{"injectables/DefaultPageGuardService.html":{}}}],["this.pagestateservice.navigatebyurl",{"_index":2639,"title":{},"body":{"injectables/DefaultPageGuardService.html":{}}}],["this.pagestateservice.pagelistisclear",{"_index":2635,"title":{},"body":{"injectables/DefaultPageGuardService.html":{}}}],["this.pagestateservice.setpages",{"_index":1721,"title":{},"body":{"classes/Container.html":{},"interfaces/WizardProgressItem.html":{}}}],["this.password",{"_index":4036,"title":{},"body":{"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{}}}],["this.passwordchange.emit",{"_index":4040,"title":{},"body":{"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{}}}],["this.pattern",{"_index":3364,"title":{},"body":{"components/FullNameComponent.html":{},"interfaces/FullNameErrorMsg.html":{}}}],["this.person",{"_index":3355,"title":{},"body":{"components/FullNameComponent.html":{},"interfaces/FullNameErrorMsg.html":{}}}],["this.person.firstname",{"_index":3357,"title":{},"body":{"components/FullNameComponent.html":{},"interfaces/FullNameErrorMsg.html":{}}}],["this.person.lastname",{"_index":3359,"title":{},"body":{"components/FullNameComponent.html":{},"interfaces/FullNameErrorMsg.html":{}}}],["this.person.middlename",{"_index":3361,"title":{},"body":{"components/FullNameComponent.html":{},"interfaces/FullNameErrorMsg.html":{}}}],["this.post()these",{"_index":5511,"title":{},"body":{"additional-documentation/getting-started.html":{}}}],["this.post(this.url",{"_index":1657,"title":{},"body":{"interfaces/CommonLogMessage.html":{},"interfaces/ISpaEnvResponse.html":{}}}],["this.postal",{"_index":1056,"title":{},"body":{"classes/Address.html":{}}}],["this.postal.length",{"_index":1057,"title":{},"body":{"classes/Address.html":{}}}],["this.postalcode",{"_index":4160,"title":{},"body":{"components/PostalCodeComponent.html":{}}}],["this.progresssteps",{"_index":1779,"title":{},"body":{"classes/Container.html":{},"interfaces/WizardProgressItem.html":{}}}],["this.progresssteps.findindex(x",{"_index":4549,"title":{},"body":{"components/WizardProgressBarComponent.html":{}}}],["this.progresssteps.length",{"_index":4540,"title":{},"body":{"components/WizardProgressBarComponent.html":{}}}],["this.province",{"_index":1055,"title":{},"body":{"classes/Address.html":{},"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{}}}],["this.provincelist",{"_index":935,"title":{},"body":{"interfaces/AddrLabelList.html":{},"interfaces/Maxlengths.html":{},"interfaces/ReadOnlyFields.html":{}}}],["this.provincelist.find",{"_index":945,"title":{},"body":{"interfaces/AddrLabelList.html":{},"interfaces/Maxlengths.html":{},"interfaces/ReadOnlyFields.html":{}}}],["this.provlist",{"_index":938,"title":{},"body":{"interfaces/AddrLabelList.html":{},"interfaces/Maxlengths.html":{},"interfaces/ReadOnlyFields.html":{}}}],["this.pswdstrength",{"_index":4037,"title":{},"body":{"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{}}}],["this.readimage(file",{"_index":3057,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["this.readonlyfields[x",{"_index":989,"title":{},"body":{"interfaces/AddrLabelList.html":{},"interfaces/Maxlengths.html":{},"interfaces/ReadOnlyFields.html":{}}}],["this.registervalidation",{"_index":2715,"title":{},"body":{"components/EmailComponent.html":{},"components/NameComponent.html":{},"components/SinComponent.html":{}}}],["this.required",{"_index":3249,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["this.requiredmsgseg",{"_index":3363,"title":{},"body":{"components/FullNameComponent.html":{},"interfaces/FullNameErrorMsg.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{}}}],["this.resetinputfields",{"_index":2983,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["this.resizeimage",{"_index":3048,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["this.resizeimage(image",{"_index":3063,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["this.router",{"_index":79,"title":{},"body":{"classes/AbstractBaseForm.html":{}}}],["this.router.events.pipe",{"_index":3580,"title":{},"body":{"components/HeaderComponent.html":{},"components/WizardProgressBarComponent.html":{}}}],["this.router.navigate([this.service.getstarturl",{"_index":4246,"title":{},"body":{"guards/RouteGuardService.html":{}}}],["this.router.navigate([url",{"_index":80,"title":{},"body":{"classes/AbstractBaseForm.html":{}}}],["this.router.navigatebyurl",{"_index":3902,"title":{},"body":{"interfaces/PageList.html":{},"injectables/PageStateService.html":{}}}],["this.router.url",{"_index":1284,"title":{},"body":{"injectables/CheckCompleteBaseService.html":{},"interfaces/PageList.html":{},"interfaces/PageListInterface.html":{},"injectables/PageStateService.html":{}}}],["this.router.url.includes(url",{"_index":3585,"title":{},"body":{"components/HeaderComponent.html":{}}}],["this.router.url}#content",{"_index":3597,"title":{},"body":{"components/HeaderComponent.html":{}}}],["this.routerevents",{"_index":4526,"title":{},"body":{"components/WizardProgressBarComponent.html":{}}}],["this.routerevents$.unsubscribe",{"_index":4538,"title":{},"body":{"components/WizardProgressBarComponent.html":{}}}],["this.samplemodal.hide",{"_index":4256,"title":{},"body":{"interfaces/SampleImageInterface.html":{},"components/SampleModalComponent.html":{}}}],["this.samplemodal.show",{"_index":4254,"title":{},"body":{"interfaces/SampleImageInterface.html":{},"components/SampleModalComponent.html":{}}}],["this.scaledwidth",{"_index":4440,"title":{},"body":{"components/ThumbnailComponent.html":{}}}],["this.scrollstepintoview",{"_index":4533,"title":{},"body":{"components/WizardProgressBarComponent.html":{}}}],["this.scrolltoerrorsonsubmit",{"_index":3277,"title":{},"body":{"components/FormActionBarComponent.html":{}}}],["this.search",{"_index":3492,"title":{},"body":{"components/GeocoderInputComponent.html":{}}}],["this.search.length",{"_index":3505,"title":{},"body":{"components/GeocoderInputComponent.html":{}}}],["this.searchtext$.next(this.search",{"_index":3525,"title":{},"body":{"components/GeocoderInputComponent.html":{}}}],["this.searchtext$.pipe",{"_index":3482,"title":{},"body":{"components/GeocoderInputComponent.html":{}}}],["this.selectedaddress",{"_index":3495,"title":{},"body":{"components/GeocoderInputComponent.html":{}}}],["this.sendspaenvserver(headername",{"_index":3760,"title":{},"body":{"interfaces/ISpaEnvResponse.html":{}}}],["this.service.canbypassguards",{"_index":3808,"title":{},"body":{"guards/LoadPageGuardService.html":{},"guards/RouteGuardService.html":{}}}],["this.service.cannavigatetourl(pageurl",{"_index":3809,"title":{},"body":{"guards/LoadPageGuardService.html":{}}}],["this.service.ispagecomplete(pageurl",{"_index":4247,"title":{},"body":{"guards/RouteGuardService.html":{}}}],["this.service.isprerequisitecomplete",{"_index":4245,"title":{},"body":{"guards/RouteGuardService.html":{}}}],["this.setdefaultcountryasoption",{"_index":869,"title":{},"body":{"interfaces/AddrLabelList.html":{},"interfaces/Maxlengths.html":{},"interfaces/ReadOnlyFields.html":{}}}],["this.setdefaultprovinceasoption",{"_index":886,"title":{},"body":{"interfaces/AddrLabelList.html":{},"interfaces/Maxlengths.html":{},"interfaces/ReadOnlyFields.html":{}}}],["this.setdefaultprovinceasoption(this.addr.country",{"_index":873,"title":{},"body":{"interfaces/AddrLabelList.html":{},"interfaces/Maxlengths.html":{},"interfaces/ReadOnlyFields.html":{}}}],["this.seterrormsg",{"_index":188,"title":{},"body":{"classes/AbstractFormControl.html":{},"interfaces/CountryList.html":{},"components/PostalCodeComponent.html":{}}}],["this.setlabels",{"_index":865,"title":{},"body":{"interfaces/AddrLabelList.html":{},"interfaces/Maxlengths.html":{},"interfaces/ReadOnlyFields.html":{}}}],["this.setmaxlengths",{"_index":866,"title":{},"body":{"interfaces/AddrLabelList.html":{},"interfaces/Maxlengths.html":{},"interfaces/ReadOnlyFields.html":{}}}],["this.setpagecomplete",{"_index":4238,"title":{},"body":{"guards/RouteGuardService.html":{}}}],["this.setpageincomplete",{"_index":4237,"title":{},"body":{"guards/RouteGuardService.html":{}}}],["this.setprogresssteps(pages",{"_index":1720,"title":{},"body":{"classes/Container.html":{},"interfaces/WizardProgressItem.html":{}}}],["this.setreadonlyfields",{"_index":867,"title":{},"body":{"interfaces/AddrLabelList.html":{},"interfaces/Maxlengths.html":{},"interfaces/ReadOnlyFields.html":{}}}],["this.setseverity(severitylevels.error",{"_index":1622,"title":{},"body":{"interfaces/CommonLogMessage.html":{}}}],["this.setseverity(severitylevels.info",{"_index":1619,"title":{},"body":{"interfaces/CommonLogMessage.html":{}}}],["this.settags(message.event",{"_index":1644,"title":{},"body":{"interfaces/CommonLogMessage.html":{}}}],["this.settimestamp",{"_index":1643,"title":{},"body":{"interfaces/CommonLogMessage.html":{}}}],["this.setuprequest(observable",{"_index":331,"title":{},"body":{"classes/AbstractHttpService.html":{}}}],["this.showerror",{"_index":3227,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["this.showline2",{"_index":913,"title":{},"body":{"interfaces/AddrLabelList.html":{},"interfaces/Maxlengths.html":{},"interfaces/ReadOnlyFields.html":{}}}],["this.showline3",{"_index":914,"title":{},"body":{"interfaces/AddrLabelList.html":{},"interfaces/Maxlengths.html":{},"interfaces/ReadOnlyFields.html":{}}}],["this.sin",{"_index":4392,"title":{},"body":{"components/SinComponent.html":{}}}],["this.sin.length",{"_index":4406,"title":{},"body":{"components/SinComponent.html":{}}}],["this.sin.trim",{"_index":4401,"title":{},"body":{"components/SinComponent.html":{}}}],["this.sin.trim().length",{"_index":4395,"title":{},"body":{"components/SinComponent.html":{}}}],["this.size",{"_index":2503,"title":{},"body":{"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{}}}],["this.skiplinkpath",{"_index":3586,"title":{},"body":{"components/HeaderComponent.html":{}}}],["this.skiptocontentbutton.click",{"_index":618,"title":{},"body":{"classes/AbstractTestPage.html":{}}}],["this.spaenvres",{"_index":3762,"title":{},"body":{"interfaces/ISpaEnvResponse.html":{}}}],["this.spaenvres.spa_env_acl_maintenance_flag",{"_index":3764,"title":{},"body":{"interfaces/ISpaEnvResponse.html":{}}}],["this.spaenvres.spa_env_acl_maintenance_message",{"_index":3767,"title":{},"body":{"interfaces/ISpaEnvResponse.html":{}}}],["this.spaenvres.spa_env_msp_maintenance_flag",{"_index":3768,"title":{},"body":{"interfaces/ISpaEnvResponse.html":{}}}],["this.spaenvres.spa_env_msp_maintenance_message",{"_index":3769,"title":{},"body":{"interfaces/ISpaEnvResponse.html":{}}}],["this.spaenvres.spa_env_pacutoff_maintenance_flag",{"_index":3770,"title":{},"body":{"interfaces/ISpaEnvResponse.html":{}}}],["this.spaenvres.spa_env_pacutoff_maintenance_message",{"_index":3771,"title":{},"body":{"interfaces/ISpaEnvResponse.html":{}}}],["this.spaenvres.spa_env_pacutoff_maintenance_start",{"_index":3774,"title":{},"body":{"interfaces/ISpaEnvResponse.html":{}}}],["this.spaenvres.spa_env_suppben_maintenance_flag",{"_index":3772,"title":{},"body":{"interfaces/ISpaEnvResponse.html":{}}}],["this.spaenvres.spa_env_suppben_maintenance_message",{"_index":3773,"title":{},"body":{"interfaces/ISpaEnvResponse.html":{}}}],["this.startpageurl",{"_index":2633,"title":{},"body":{"injectables/DefaultPageGuardService.html":{}}}],["this.steps.toarray()[this.activeindex",{"_index":4551,"title":{},"body":{"components/WizardProgressBarComponent.html":{}}}],["this.strengthpercentage",{"_index":4039,"title":{},"body":{"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{}}}],["this.stripstringtomaxlength(changes.address.currentvalue._geocoderfulladdress",{"_index":3491,"title":{},"body":{"components/GeocoderInputComponent.html":{}}}],["this.stripstringtomaxlength(data.fulladdress",{"_index":3514,"title":{},"body":{"components/GeocoderInputComponent.html":{}}}],["this.submitlabel",{"_index":1789,"title":{},"body":{"classes/Container.html":{},"interfaces/WizardProgressItem.html":{}}}],["this.subscribeformbar",{"_index":1733,"title":{},"body":{"classes/Container.html":{},"interfaces/WizardProgressItem.html":{}}}],["this.typeaheadlist",{"_index":3481,"title":{},"body":{"components/GeocoderInputComponent.html":{}}}],["this.unsubscribeformbar",{"_index":1735,"title":{},"body":{"classes/Container.html":{},"interfaces/WizardProgressItem.html":{}}}],["this.updateprovlist",{"_index":883,"title":{},"body":{"interfaces/AddrLabelList.html":{},"interfaces/Maxlengths.html":{},"interfaces/ReadOnlyFields.html":{}}}],["this.updateskipcontentlink",{"_index":3584,"title":{},"body":{"components/HeaderComponent.html":{}}}],["this.url",{"_index":1602,"title":{},"body":{"interfaces/CommonLogMessage.html":{}}}],["this.usedefaultcolor",{"_index":1787,"title":{},"body":{"classes/Container.html":{},"interfaces/WizardProgressItem.html":{}}}],["this.uuid",{"_index":1511,"title":{},"body":{"interfaces/CommonAttachmentJson.html":{},"classes/CommonImage.html":{},"classes/CommonImageProcessingError.html":{},"interfaces/CommonImageScaleFactors.html":{},"classes/CommonImageScaleFactorsImpl.html":{}}}],["this.validatelabel",{"_index":195,"title":{},"body":{"classes/AbstractFormControl.html":{}}}],["this.validateself",{"_index":2717,"title":{},"body":{"components/EmailComponent.html":{},"components/NameComponent.html":{},"components/SinComponent.html":{}}}],["this.validatesin",{"_index":4394,"title":{},"body":{"components/SinComponent.html":{}}}],["this.valuechange.emit",{"_index":1470,"title":{},"body":{"components/CityComponent.html":{},"interfaces/CountryList.html":{},"components/EmailComponent.html":{},"components/NameComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{},"components/SinComponent.html":{}}}],["this.valuechange.emit(val",{"_index":3620,"title":{},"body":{"interfaces/IRadioItems.html":{},"components/RadioComponent.html":{}}}],["this.viewcontainerref",{"_index":4434,"title":{},"body":{"components/ThumbnailComponent.html":{}}}],["this.widthfactor",{"_index":1544,"title":{},"body":{"interfaces/CommonAttachmentJson.html":{},"classes/CommonImage.html":{},"classes/CommonImageProcessingError.html":{},"interfaces/CommonImageScaleFactors.html":{},"classes/CommonImageScaleFactorsImpl.html":{}}}],["this.zone.run",{"_index":2855,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["this[lookup",{"_index":916,"title":{},"body":{"interfaces/AddrLabelList.html":{},"interfaces/Maxlengths.html":{},"interfaces/ReadOnlyFields.html":{}}}],["those",{"_index":5495,"title":{},"body":{"additional-documentation/getting-started.html":{}}}],["though",{"_index":3094,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["through",{"_index":3713,"title":{},"body":{"interfaces/ISpaEnvResponse.html":{},"components/SinComponent.html":{}}}],["throw",{"_index":231,"title":{},"body":{"classes/AbstractFormControl.html":{},"classes/AbstractHttpService.html":{},"interfaces/FileUploaderMsg.html":{},"injectables/GeocoderService.html":{},"components/XiconButtonComponent.html":{},"changelog.html":{}}}],["throwerror",{"_index":1577,"title":{},"body":{"interfaces/CommonLogMessage.html":{},"interfaces/GeoAddressResult.html":{},"injectables/GeocoderService.html":{},"interfaces/ISpaEnvResponse.html":{}}}],["throwerror('geocoder",{"_index":3417,"title":{},"body":{"interfaces/GeoAddressResult.html":{},"injectables/GeocoderService.html":{}}}],["throwerror(error",{"_index":1671,"title":{},"body":{"interfaces/CommonLogMessage.html":{}}}],["throwerror(msg",{"_index":1649,"title":{},"body":{"interfaces/CommonLogMessage.html":{}}}],["throws",{"_index":4642,"title":{},"body":{"changelog.html":{}}}],["thumbnail",{"_index":2950,"title":{},"body":{"interfaces/FileUploaderMsg.html":{},"components/ThumbnailComponent.html":{},"changelog.html":{}}}],["thumbnail'},{'name",{"_index":751,"title":{},"body":{"components/AccordionCommonComponent.html":{},"components/ButtonComponent.html":{},"components/ButtonGroupComponent.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"components/ConfirmTemplateComponent.html":{},"components/CoreBreadcrumbComponent.html":{},"components/DatepickerComponent.html":{},"components/DropdownComponent.html":{},"components/EmailComponent.html":{},"components/ErrorContainerComponent.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/FullNameComponent.html":{},"components/GeocoderInputComponent.html":{},"components/HeaderComponent.html":{},"components/NameComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"components/RadioComponent.html":{},"components/SampleModalComponent.html":{},"components/SinComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{},"components/XiconButtonComponent.html":{}}}],["thumbnail.html",{"_index":4414,"title":{},"body":{"components/ThumbnailComponent.html":{}}}],["thumbnail.scss",{"_index":4413,"title":{},"body":{"components/ThumbnailComponent.html":{}}}],["thumbnailcomponent",{"_index":750,"title":{"components/ThumbnailComponent.html":{}},"body":{"components/AccordionCommonComponent.html":{},"components/ButtonComponent.html":{},"components/ButtonGroupComponent.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"components/ConfirmTemplateComponent.html":{},"components/CoreBreadcrumbComponent.html":{},"components/DatepickerComponent.html":{},"components/DropdownComponent.html":{},"components/EmailComponent.html":{},"components/ErrorContainerComponent.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/FullNameComponent.html":{},"components/GeocoderInputComponent.html":{},"components/HeaderComponent.html":{},"components/NameComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"components/RadioComponent.html":{},"components/SampleModalComponent.html":{},"modules/SharedCoreModule.html":{},"components/SinComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{},"components/XiconButtonComponent.html":{},"coverage.html":{},"overview.html":{}}}],["tib",{"_index":3112,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["tick",{"_index":4747,"title":{},"body":{"changelog.html":{}}}],["tickanddetectchanges",{"_index":5273,"title":{},"body":{"coverage.html":{}}}],["tiff",{"_index":2903,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["tihs",{"_index":3299,"title":{},"body":{"components/FormSubmitBarComponent.html":{}}}],["time",{"_index":3101,"title":{},"body":{"interfaces/FileUploaderMsg.html":{},"components/FormActionBarComponent.html":{},"changelog.html":{},"additional-documentation/local-development/schematics.html":{}}}],["timeout",{"_index":3280,"title":{},"body":{"components/FormActionBarComponent.html":{}}}],["times",{"_index":2995,"title":{},"body":{"interfaces/FileUploaderMsg.html":{},"components/ThumbnailComponent.html":{},"changelog.html":{}}}],["timor",{"_index":2347,"title":{},"body":{"interfaces/CountryList.html":{}}}],["tip",{"_index":1208,"title":{},"body":{"modules/CaptchaModule.html":{}}}],["tips",{"_index":3862,"title":{},"body":{"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{}}}],["title",{"_index":667,"title":{},"body":{"components/AccordionCommonComponent.html":{},"classes/Container.html":{},"interfaces/ISpaEnvResponse.html":{},"interfaces/SampleImageInterface.html":{},"components/SampleModalComponent.html":{},"interfaces/WizardProgressItem.html":{},"additional-documentation/local-development/schematics.html":{}}}],["tjk",{"_index":2339,"title":{},"body":{"interfaces/CountryList.html":{}}}],["tkl",{"_index":2351,"title":{},"body":{"interfaces/CountryList.html":{}}}],["tkm",{"_index":2362,"title":{},"body":{"interfaces/CountryList.html":{}}}],["tls",{"_index":2346,"title":{},"body":{"interfaces/CountryList.html":{}}}],["tobago",{"_index":2357,"title":{},"body":{"interfaces/CountryList.html":{}}}],["tobe",{"_index":1347,"title":{},"body":{"components/CheckboxComponent.html":{}}}],["today",{"_index":2517,"title":{},"body":{"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"changelog.html":{}}}],["todo",{"_index":33,"title":{"todo.html":{}},"body":{"classes/AbstractBaseForm.html":{},"classes/AbstractForm.html":{},"classes/AbstractReactForm.html":{},"classes/AbstractTestPage.html":{},"interfaces/AddrLabelList.html":{},"classes/Address.html":{},"injectables/CheckCompleteBaseService.html":{},"interfaces/CommonLogMessage.html":{},"components/CoreBreadcrumbComponent.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"directives/DuplicateCheckDirective.html":{},"components/EmailComponent.html":{},"interfaces/FileUploaderMsg.html":{},"components/FormActionBarComponent.html":{},"components/FullNameComponent.html":{},"interfaces/FullNameErrorMsg.html":{},"interfaces/IRadioItems.html":{},"interfaces/ISpaEnvResponse.html":{},"interfaces/Maxlengths.html":{},"components/NameComponent.html":{},"interfaces/PageListInterface.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"components/RadioComponent.html":{},"interfaces/ReadOnlyFields.html":{},"directives/ValidateBcPostalDirective.html":{},"components/XiconButtonComponent.html":{},"changelog.html":{},"todo.html":{}}}],["together",{"_index":4088,"title":{},"body":{"classes/Person.html":{}}}],["toggle",{"_index":1125,"title":{},"body":{"components/ButtonGroupComponent.html":{},"components/ToggleComponent.html":{},"changelog.html":{}}}],["toggle'},{'name",{"_index":753,"title":{},"body":{"components/AccordionCommonComponent.html":{},"components/ButtonComponent.html":{},"components/ButtonGroupComponent.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"components/ConfirmTemplateComponent.html":{},"components/CoreBreadcrumbComponent.html":{},"components/DatepickerComponent.html":{},"components/DropdownComponent.html":{},"components/EmailComponent.html":{},"components/ErrorContainerComponent.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/FullNameComponent.html":{},"components/GeocoderInputComponent.html":{},"components/HeaderComponent.html":{},"components/NameComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"components/RadioComponent.html":{},"components/SampleModalComponent.html":{},"components/SinComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{},"components/XiconButtonComponent.html":{}}}],["toggle.component.html",{"_index":4446,"title":{},"body":{"components/ToggleComponent.html":{}}}],["toggle.component.scss",{"_index":4445,"title":{},"body":{"components/ToggleComponent.html":{}}}],["togglecomponent",{"_index":752,"title":{"components/ToggleComponent.html":{}},"body":{"components/AccordionCommonComponent.html":{},"components/ButtonComponent.html":{},"components/ButtonGroupComponent.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"components/ConfirmTemplateComponent.html":{},"components/CoreBreadcrumbComponent.html":{},"components/DatepickerComponent.html":{},"components/DropdownComponent.html":{},"components/EmailComponent.html":{},"components/ErrorContainerComponent.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/FullNameComponent.html":{},"components/GeocoderInputComponent.html":{},"components/HeaderComponent.html":{},"components/NameComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"components/RadioComponent.html":{},"components/SampleModalComponent.html":{},"modules/SharedCoreModule.html":{},"components/SinComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{},"components/XiconButtonComponent.html":{},"changelog.html":{},"coverage.html":{},"overview.html":{}}}],["togo",{"_index":2350,"title":{},"body":{"interfaces/CountryList.html":{}}}],["tohse",{"_index":5606,"title":{},"body":{"additional-documentation/local-development/components.html":{}}}],["tojson",{"_index":1534,"title":{},"body":{"interfaces/CommonAttachmentJson.html":{},"classes/CommonImage.html":{},"classes/CommonImageProcessingError.html":{},"interfaces/CommonImageScaleFactors.html":{},"classes/CommonImageScaleFactorsImpl.html":{},"changelog.html":{}}}],["tokelau",{"_index":2352,"title":{},"body":{"interfaces/CountryList.html":{}}}],["told",{"_index":2869,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["tome",{"_index":2282,"title":{},"body":{"interfaces/CountryList.html":{}}}],["tomorrow",{"_index":2462,"title":{},"body":{"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{}}}],["ton",{"_index":2353,"title":{},"body":{"interfaces/CountryList.html":{}}}],["tonga",{"_index":2354,"title":{},"body":{"interfaces/CountryList.html":{}}}],["toobig",{"_index":1486,"title":{},"body":{"interfaces/CommonAttachmentJson.html":{},"classes/CommonImage.html":{},"classes/CommonImageProcessingError.html":{},"interfaces/CommonImageScaleFactors.html":{},"classes/CommonImageScaleFactorsImpl.html":{},"miscellaneous/enumerations.html":{}}}],["tools",{"_index":4015,"title":{},"body":{"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{}}}],["toosmall",{"_index":1485,"title":{},"body":{"interfaces/CommonAttachmentJson.html":{},"classes/CommonImage.html":{},"classes/CommonImageProcessingError.html":{},"interfaces/CommonImageScaleFactors.html":{},"classes/CommonImageScaleFactorsImpl.html":{},"miscellaneous/enumerations.html":{}}}],["top",{"_index":68,"title":{},"body":{"classes/AbstractBaseForm.html":{},"classes/AbstractForm.html":{},"classes/AbstractReactForm.html":{},"classes/AbstractTestPage.html":{},"components/CoreBreadcrumbComponent.html":{},"components/HeaderComponent.html":{},"changelog.html":{},"additional-documentation/local-development/schematics.html":{},"additional-documentation/local-development/components.html":{}}}],["tostring",{"_index":1002,"title":{},"body":{"classes/Address.html":{}}}],["tostring()'d",{"_index":1641,"title":{},"body":{"interfaces/CommonLogMessage.html":{}}}],["touched",{"_index":190,"title":{},"body":{"classes/AbstractFormControl.html":{},"classes/AbstractReactForm.html":{},"interfaces/CountryList.html":{},"components/GeocoderInputComponent.html":{},"components/PostalCodeComponent.html":{},"changelog.html":{}}}],["trace",{"_index":4580,"title":{},"body":{"components/XiconButtonComponent.html":{}}}],["track",{"_index":141,"title":{},"body":{"classes/AbstractFormControl.html":{},"classes/Base.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"components/ConfirmTemplateComponent.html":{},"components/DatepickerComponent.html":{},"components/DropdownComponent.html":{},"components/EmailComponent.html":{},"components/FullNameComponent.html":{},"components/GeocoderInputComponent.html":{},"components/NameComponent.html":{},"components/PasswordComponent.html":{},"classes/Person.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"components/RadioComponent.html":{},"components/SampleModalComponent.html":{},"components/SinComponent.html":{},"components/ToggleComponent.html":{}}}],["tracking",{"_index":1502,"title":{},"body":{"interfaces/CommonAttachmentJson.html":{},"classes/CommonImage.html":{},"classes/CommonImageProcessingError.html":{},"interfaces/CommonImageScaleFactors.html":{},"classes/CommonImageScaleFactorsImpl.html":{}}}],["transclusion",{"_index":3652,"title":{},"body":{"interfaces/ISpaEnvResponse.html":{}}}],["transformed",{"_index":3127,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["translation",{"_index":1166,"title":{},"body":{"injectables/CaptchaDataService.html":{},"injectables/ServerPayload.html":{}}}],["tree",{"_index":655,"title":{},"body":{"components/AccordionCommonComponent.html":{},"components/ButtonComponent.html":{},"components/ButtonGroupComponent.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"components/ConfirmTemplateComponent.html":{},"components/CoreBreadcrumbComponent.html":{},"components/DatepickerComponent.html":{},"components/DropdownComponent.html":{},"components/EmailComponent.html":{},"components/ErrorContainerComponent.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/FullNameComponent.html":{},"components/GeocoderInputComponent.html":{},"components/HeaderComponent.html":{},"components/NameComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"components/RadioComponent.html":{},"components/SampleModalComponent.html":{},"components/SinComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{},"components/XiconButtonComponent.html":{}}}],["trigger",{"_index":335,"title":{},"body":{"classes/AbstractHttpService.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"components/GeocoderInputComponent.html":{},"changelog.html":{}}}],["triggers",{"_index":3248,"title":{},"body":{"interfaces/FileUploaderMsg.html":{},"components/GeocoderInputComponent.html":{}}}],["trimmed",{"_index":2566,"title":{},"body":{"directives/DateFieldFormatDirective.html":{}}}],["trimmed.replace(/[^\\d]/g",{"_index":2570,"title":{},"body":{"directives/DateFieldFormatDirective.html":{}}}],["trimmed.substr",{"_index":2571,"title":{},"body":{"directives/DateFieldFormatDirective.html":{}}}],["trimming",{"_index":3400,"title":{},"body":{"interfaces/GeoAddressResult.html":{},"injectables/GeocoderService.html":{}}}],["trinidad",{"_index":2356,"title":{},"body":{"interfaces/CountryList.html":{}}}],["tristan",{"_index":2260,"title":{},"body":{"interfaces/CountryList.html":{}}}],["true",{"_index":106,"title":{},"body":{"classes/AbstractForm.html":{},"classes/AbstractReactForm.html":{},"interfaces/AddrLabelList.html":{},"components/ButtonGroupComponent.html":{},"injectables/CheckCompleteBaseService.html":{},"classes/Container.html":{},"injectables/ContainerService.html":{},"interfaces/CountryList.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"injectables/DefaultPageGuardService.html":{},"components/DropdownComponent.html":{},"directives/DuplicateCheckDirective.html":{},"components/EmailComponent.html":{},"interfaces/FileUploaderMsg.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/FullNameComponent.html":{},"interfaces/FullNameErrorMsg.html":{},"interfaces/GeoAddressResult.html":{},"components/GeocoderInputComponent.html":{},"injectables/GeocoderService.html":{},"interfaces/IRadioItems.html":{},"interfaces/ISpaEnvResponse.html":{},"guards/LoadPageGuardService.html":{},"interfaces/Maxlengths.html":{},"components/NameComponent.html":{},"interfaces/PageList.html":{},"interfaces/PageListInterface.html":{},"injectables/PageStateService.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{},"components/RadioComponent.html":{},"interfaces/ReadOnlyFields.html":{},"guards/RouteGuardService.html":{},"components/SinComponent.html":{},"directives/ValidateBcPostalDirective.html":{},"directives/ValidateCityDirective.html":{},"directives/ValidateNameDirective.html":{},"directives/ValidatePostalcodeDirective.html":{},"directives/ValidateRegionDirective.html":{},"directives/ValidateStreetDirective.html":{},"interfaces/WizardProgressItem.html":{},"additional-documentation/local-development/schematics.html":{},"additional-documentation/local-development/components.html":{}}}],["truncate",{"_index":5210,"title":{},"body":{"changelog.html":{}}}],["try",{"_index":3699,"title":{},"body":{"interfaces/ISpaEnvResponse.html":{},"components/WizardProgressBarComponent.html":{},"changelog.html":{}}}],["try/catch",{"_index":4556,"title":{},"body":{"components/WizardProgressBarComponent.html":{}}}],["trying",{"_index":2636,"title":{},"body":{"injectables/DefaultPageGuardService.html":{}}}],["ts",{"_index":5525,"title":{},"body":{"additional-documentation/local-development/schematics.html":{}}}],["tsconfig",{"_index":5219,"title":{},"body":{"changelog.html":{},"additional-documentation/local-development/schematics.html":{}}}],["tsdoc",{"_index":4994,"title":{},"body":{"changelog.html":{}}}],["tslint",{"_index":2787,"title":{},"body":{"interfaces/FileUploaderMsg.html":{},"interfaces/ISpaEnvResponse.html":{},"changelog.html":{}}}],["tslint:disable",{"_index":3720,"title":{},"body":{"interfaces/ISpaEnvResponse.html":{}}}],["tslint:disable:max",{"_index":2788,"title":{},"body":{"interfaces/FileUploaderMsg.html":{},"interfaces/ISpaEnvResponse.html":{}}}],["tto",{"_index":2355,"title":{},"body":{"interfaces/CountryList.html":{}}}],["tun",{"_index":2358,"title":{},"body":{"interfaces/CountryList.html":{}}}],["tunisia",{"_index":2359,"title":{},"body":{"interfaces/CountryList.html":{}}}],["tur",{"_index":2360,"title":{},"body":{"interfaces/CountryList.html":{}}}],["turkey",{"_index":2361,"title":{},"body":{"interfaces/CountryList.html":{}}}],["turkmenistan",{"_index":2363,"title":{},"body":{"interfaces/CountryList.html":{}}}],["turks",{"_index":2365,"title":{},"body":{"interfaces/CountryList.html":{}}}],["turn",{"_index":2918,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["turned",{"_index":1286,"title":{},"body":{"injectables/CheckCompleteBaseService.html":{},"interfaces/PageListInterface.html":{},"changelog.html":{}}}],["tuv",{"_index":2367,"title":{},"body":{"interfaces/CountryList.html":{}}}],["tuvalu",{"_index":2368,"title":{},"body":{"interfaces/CountryList.html":{}}}],["tweak",{"_index":4880,"title":{},"body":{"changelog.html":{}}}],["tweaks",{"_index":582,"title":{},"body":{"classes/AbstractTestPage.html":{}}}],["twn",{"_index":2337,"title":{},"body":{"interfaces/CountryList.html":{}}}],["two",{"_index":5593,"title":{},"body":{"additional-documentation/local-development/components.html":{}}}],["type",{"_index":27,"title":{},"body":{"classes/AbstractBaseForm.html":{},"classes/AbstractForm.html":{},"classes/AbstractFormControl.html":{},"classes/AbstractHttpService.html":{},"injectables/AbstractPageGuardService.html":{},"injectables/AbstractPgCheckService.html":{},"classes/AbstractReactForm.html":{},"classes/AbstractTestPage.html":{},"components/AccordionCommonComponent.html":{},"interfaces/AddrLabelList.html":{},"classes/Address.html":{},"classes/Base.html":{},"components/ButtonComponent.html":{},"components/ButtonGroupComponent.html":{},"injectables/CaptchaDataService.html":{},"injectables/CheckCompleteBaseService.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"interfaces/CommonAttachmentJson.html":{},"classes/CommonImage.html":{},"classes/CommonImageProcessingError.html":{},"interfaces/CommonImageScaleFactors.html":{},"classes/CommonImageScaleFactorsImpl.html":{},"interfaces/CommonLogMessage.html":{},"components/ConfirmTemplateComponent.html":{},"classes/Container.html":{},"injectables/ContainerService.html":{},"interfaces/CountryList.html":{},"interfaces/DateErrorMsg.html":{},"directives/DateFieldFormatDirective.html":{},"components/DatepickerComponent.html":{},"injectables/DefaultPageGuardService.html":{},"components/DropdownComponent.html":{},"directives/DuplicateCheckDirective.html":{},"components/EmailComponent.html":{},"components/ErrorContainerComponent.html":{},"interfaces/ErrorMessage.html":{},"interfaces/FileUploaderMsg.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/FullNameComponent.html":{},"interfaces/FullNameErrorMsg.html":{},"interfaces/GeoAddressResult.html":{},"components/GeocoderInputComponent.html":{},"injectables/GeocoderService.html":{},"components/HeaderComponent.html":{},"interfaces/IRadioItems.html":{},"interfaces/ISpaEnvResponse.html":{},"guards/LoadPageGuardService.html":{},"interfaces/Maxlengths.html":{},"classes/MoHCommonLibraryError.html":{},"components/NameComponent.html":{},"components/PageFrameworkComponent.html":{},"interfaces/PageList.html":{},"interfaces/PageListInterface.html":{},"components/PageSectionComponent.html":{},"injectables/PageStateService.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"classes/Person.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{},"components/RadioComponent.html":{},"interfaces/ReadOnlyFields.html":{},"guards/RouteGuardService.html":{},"interfaces/SampleImageInterface.html":{},"components/SampleModalComponent.html":{},"injectables/ServerPayload.html":{},"interfaces/SimpleDate.html":{},"components/SinComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"directives/ValidateBcPostalDirective.html":{},"directives/ValidateCityDirective.html":{},"directives/ValidateNameDirective.html":{},"directives/ValidatePostalcodeDirective.html":{},"directives/ValidateRegionDirective.html":{},"directives/ValidateStreetDirective.html":{},"components/WizardProgressBarComponent.html":{},"interfaces/WizardProgressItem.html":{},"components/XiconButtonComponent.html":{},"changelog.html":{},"coverage.html":{}}}],["typeahead",{"_index":3475,"title":{},"body":{"components/GeocoderInputComponent.html":{},"changelog.html":{}}}],["typeaheadlist",{"_index":3430,"title":{},"body":{"components/GeocoderInputComponent.html":{}}}],["typeaheadmatch",{"_index":3455,"title":{},"body":{"components/GeocoderInputComponent.html":{}}}],["typeaheadmodule",{"_index":4285,"title":{},"body":{"modules/SharedCoreModule.html":{}}}],["typeaheadmodule.forroot",{"_index":4355,"title":{},"body":{"modules/SharedCoreModule.html":{}}}],["typed",{"_index":3468,"title":{},"body":{"components/GeocoderInputComponent.html":{}}}],["typemsg",{"_index":235,"title":{},"body":{"classes/AbstractFormControl.html":{}}}],["typeof",{"_index":229,"title":{},"body":{"classes/AbstractFormControl.html":{},"interfaces/AddrLabelList.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"interfaces/Maxlengths.html":{},"interfaces/ReadOnlyFields.html":{}}}],["typeoption",{"_index":464,"title":{},"body":{"classes/AbstractTestPage.html":{}}}],["typeoption(labelid",{"_index":593,"title":{},"body":{"classes/AbstractTestPage.html":{}}}],["typeroots",{"_index":5562,"title":{},"body":{"additional-documentation/local-development/schematics.html":{}}}],["types",{"_index":607,"title":{},"body":{"classes/AbstractTestPage.html":{},"interfaces/FileUploaderMsg.html":{},"changelog.html":{}}}],["types/pdfjs",{"_index":5399,"title":{},"body":{"dependencies.html":{}}}],["typescript",{"_index":5063,"title":{},"body":{"changelog.html":{},"additional-documentation/getting-started.html":{}}}],["typetext",{"_index":465,"title":{},"body":{"classes/AbstractTestPage.html":{}}}],["typetext(refnameval",{"_index":602,"title":{},"body":{"classes/AbstractTestPage.html":{}}}],["typetextfirstoccurrence",{"_index":466,"title":{},"body":{"classes/AbstractTestPage.html":{}}}],["typetextfirstoccurrence(refnameval",{"_index":605,"title":{},"body":{"classes/AbstractTestPage.html":{}}}],["typical",{"_index":3781,"title":{},"body":{"guards/LoadPageGuardService.html":{},"guards/RouteGuardService.html":{}}}],["typo",{"_index":557,"title":{},"body":{"classes/AbstractTestPage.html":{},"changelog.html":{}}}],["tza",{"_index":2341,"title":{},"body":{"interfaces/CountryList.html":{}}}],["u.s",{"_index":2392,"title":{},"body":{"interfaces/CountryList.html":{}}}],["uga",{"_index":2369,"title":{},"body":{"interfaces/CountryList.html":{}}}],["uganda",{"_index":2370,"title":{},"body":{"interfaces/CountryList.html":{}}}],["ui",{"_index":3521,"title":{},"body":{"components/GeocoderInputComponent.html":{}}}],["ukr",{"_index":2371,"title":{},"body":{"interfaces/CountryList.html":{}}}],["ukraine",{"_index":2372,"title":{},"body":{"interfaces/CountryList.html":{}}}],["umi",{"_index":2376,"title":{},"body":{"interfaces/CountryList.html":{}}}],["unable",{"_index":1646,"title":{},"body":{"interfaces/CommonLogMessage.html":{}}}],["unchecked",{"_index":5026,"title":{},"body":{"changelog.html":{}}}],["uncomment",{"_index":5569,"title":{},"body":{"additional-documentation/local-development/schematics.html":{}}}],["unde",{"_index":1413,"title":{},"body":{"components/CityComponent.html":{},"interfaces/CountryList.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"interfaces/FileUploaderMsg.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{}}}],["undefined",{"_index":329,"title":{},"body":{"classes/AbstractHttpService.html":{},"interfaces/AddrLabelList.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"interfaces/CountryList.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"interfaces/Maxlengths.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{},"interfaces/ReadOnlyFields.html":{},"changelog.html":{}}}],["under",{"_index":3134,"title":{},"body":{"interfaces/FileUploaderMsg.html":{},"interfaces/ISpaEnvResponse.html":{},"changelog.html":{},"license.html":{},"additional-documentation/getting-started.html":{},"additional-documentation/local-development/components.html":{}}}],["underlines",{"_index":4403,"title":{},"body":{"components/SinComponent.html":{}}}],["underlying",{"_index":5440,"title":{},"body":{"index.html":{}}}],["understand",{"_index":3704,"title":{},"body":{"interfaces/ISpaEnvResponse.html":{}}}],["uniqness",{"_index":1529,"title":{},"body":{"interfaces/CommonAttachmentJson.html":{},"classes/CommonImage.html":{},"classes/CommonImageProcessingError.html":{},"interfaces/CommonImageScaleFactors.html":{},"classes/CommonImageScaleFactorsImpl.html":{}}}],["unique",{"_index":348,"title":{},"body":{"classes/AbstractHttpService.html":{},"changelog.html":{}}}],["unit",{"_index":4093,"title":{},"body":{"classes/Person.html":{},"changelog.html":{}}}],["united",{"_index":2343,"title":{},"body":{"interfaces/CountryList.html":{}}}],["united_states",{"_index":801,"title":{},"body":{"interfaces/AddrLabelList.html":{},"interfaces/CountryList.html":{},"interfaces/Maxlengths.html":{},"interfaces/ReadOnlyFields.html":{},"coverage.html":{}}}],["units",{"_index":4711,"title":{},"body":{"changelog.html":{}}}],["unknown",{"_index":1488,"title":{},"body":{"interfaces/CommonAttachmentJson.html":{},"classes/CommonImage.html":{},"classes/CommonImageProcessingError.html":{},"interfaces/CommonImageScaleFactors.html":{},"classes/CommonImageScaleFactorsImpl.html":{},"interfaces/FileUploaderMsg.html":{},"miscellaneous/enumerations.html":{}}}],["unless",{"_index":1121,"title":{},"body":{"components/ButtonGroupComponent.html":{},"components/PageFrameworkComponent.html":{}}}],["unnecessary",{"_index":4746,"title":{},"body":{"changelog.html":{}}}],["unsubscribe",{"_index":1770,"title":{},"body":{"classes/Container.html":{},"interfaces/WizardProgressItem.html":{}}}],["unsubscribeformbar",{"_index":1744,"title":{},"body":{"classes/Container.html":{},"interfaces/WizardProgressItem.html":{}}}],["unsuccessful",{"_index":1668,"title":{},"body":{"interfaces/CommonLogMessage.html":{},"interfaces/ISpaEnvResponse.html":{}}}],["unsure",{"_index":3166,"title":{},"body":{"interfaces/FileUploaderMsg.html":{},"additional-documentation/local-development/schematics.html":{}}}],["until",{"_index":422,"title":{},"body":{"classes/AbstractReactForm.html":{},"interfaces/FileUploaderMsg.html":{},"interfaces/ISpaEnvResponse.html":{}}}],["up",{"_index":564,"title":{},"body":{"classes/AbstractTestPage.html":{},"interfaces/AddrLabelList.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"interfaces/GeoAddressResult.html":{},"injectables/GeocoderService.html":{},"interfaces/Maxlengths.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"interfaces/ReadOnlyFields.html":{},"components/SinComponent.html":{},"changelog.html":{},"additional-documentation/getting-started.html":{},"additional-documentation/local-development/components.html":{}}}],["upcoming",{"_index":5566,"title":{},"body":{"additional-documentation/local-development/schematics.html":{}}}],["update",{"_index":531,"title":{},"body":{"classes/AbstractTestPage.html":{},"interfaces/AddrLabelList.html":{},"components/CheckboxComponent.html":{},"interfaces/CommonLogMessage.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"components/GeocoderInputComponent.html":{},"interfaces/Maxlengths.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"interfaces/ReadOnlyFields.html":{},"components/WizardProgressBarComponent.html":{},"changelog.html":{},"additional-documentation/local-development/schematics.html":{}}}],["updateangularjson",{"_index":5373,"title":{},"body":{"coverage.html":{}}}],["updateappcomponentts",{"_index":5387,"title":{},"body":{"coverage.html":{}}}],["updated",{"_index":425,"title":{},"body":{"classes/AbstractReactForm.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"components/SinComponent.html":{},"changelog.html":{}}}],["updatepackagejson",{"_index":5388,"title":{},"body":{"coverage.html":{}}}],["updateprovlist",{"_index":934,"title":{},"body":{"interfaces/AddrLabelList.html":{},"interfaces/Maxlengths.html":{},"interfaces/ReadOnlyFields.html":{}}}],["updates",{"_index":928,"title":{},"body":{"interfaces/AddrLabelList.html":{},"interfaces/CommonLogMessage.html":{},"interfaces/Maxlengths.html":{},"interfaces/ReadOnlyFields.html":{}}}],["updateskipcontentlink",{"_index":3564,"title":{},"body":{"components/HeaderComponent.html":{}}}],["updatetsconfig",{"_index":5374,"title":{},"body":{"coverage.html":{}}}],["updating",{"_index":1094,"title":{},"body":{"components/ButtonComponent.html":{},"changelog.html":{}}}],["upload",{"_index":309,"title":{},"body":{"classes/AbstractHttpService.html":{},"interfaces/FileUploaderMsg.html":{},"injectables/GeocoderService.html":{}}}],["uploadattachment",{"_index":252,"title":{},"body":{"classes/AbstractHttpService.html":{},"injectables/GeocoderService.html":{},"changelog.html":{}}}],["uploadattachment(relativeurl",{"_index":293,"title":{},"body":{"classes/AbstractHttpService.html":{},"injectables/GeocoderService.html":{}}}],["uploaded",{"_index":1506,"title":{},"body":{"interfaces/CommonAttachmentJson.html":{},"classes/CommonImage.html":{},"classes/CommonImageProcessingError.html":{},"interfaces/CommonImageScaleFactors.html":{},"classes/CommonImageScaleFactorsImpl.html":{},"interfaces/FileUploaderMsg.html":{}}}],["uploader",{"_index":2790,"title":{},"body":{"interfaces/FileUploaderMsg.html":{},"changelog.html":{},"additional-documentation/getting-started.html":{}}}],["uploader'},{'name",{"_index":714,"title":{},"body":{"components/AccordionCommonComponent.html":{},"components/ButtonComponent.html":{},"components/ButtonGroupComponent.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"components/ConfirmTemplateComponent.html":{},"components/CoreBreadcrumbComponent.html":{},"components/DatepickerComponent.html":{},"components/DropdownComponent.html":{},"components/EmailComponent.html":{},"components/ErrorContainerComponent.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/FullNameComponent.html":{},"components/GeocoderInputComponent.html":{},"components/HeaderComponent.html":{},"components/NameComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"components/RadioComponent.html":{},"components/SampleModalComponent.html":{},"components/SinComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{},"components/XiconButtonComponent.html":{}}}],["uploader.component",{"_index":4291,"title":{},"body":{"modules/SharedCoreModule.html":{}}}],["uploader.component.html",{"_index":2791,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["uploader.component.scss",{"_index":2792,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["uploader.component.ts",{"_index":1482,"title":{},"body":{"interfaces/CommonAttachmentJson.html":{},"classes/CommonImage.html":{},"classes/CommonImageProcessingError.html":{},"interfaces/CommonImageScaleFactors.html":{},"classes/CommonImageScaleFactorsImpl.html":{},"interfaces/FileUploaderMsg.html":{},"coverage.html":{}}}],["uploader/file",{"_index":2740,"title":{},"body":{"interfaces/FileUploaderMsg.html":{},"modules/SharedCoreModule.html":{},"coverage.html":{}}}],["uploader_after_resize_attributes",{"_index":3147,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["uploader_error",{"_index":3222,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["uploadinstructionref",{"_index":2808,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["uploads",{"_index":297,"title":{},"body":{"classes/AbstractHttpService.html":{},"injectables/GeocoderService.html":{}}}],["upper",{"_index":901,"title":{},"body":{"interfaces/AddrLabelList.html":{},"interfaces/Maxlengths.html":{},"components/PostalCodeComponent.html":{},"interfaces/ReadOnlyFields.html":{}}}],["uppercasepipe",{"_index":4123,"title":{},"body":{"components/PostalCodeComponent.html":{}}}],["uppercasepipe(text",{"_index":4144,"title":{},"body":{"components/PostalCodeComponent.html":{}}}],["url",{"_index":69,"title":{},"body":{"classes/AbstractBaseForm.html":{},"classes/AbstractForm.html":{},"classes/AbstractHttpService.html":{},"injectables/AbstractPageGuardService.html":{},"injectables/AbstractPgCheckService.html":{},"classes/AbstractReactForm.html":{},"classes/AbstractTestPage.html":{},"injectables/CheckCompleteBaseService.html":{},"interfaces/CommonLogMessage.html":{},"injectables/DefaultPageGuardService.html":{},"injectables/GeocoderService.html":{},"components/HeaderComponent.html":{},"interfaces/ISpaEnvResponse.html":{},"interfaces/PageList.html":{},"interfaces/PageListInterface.html":{},"injectables/PageStateService.html":{},"components/WizardProgressBarComponent.html":{},"changelog.html":{}}}],["url.com/fpcare/example#content",{"_index":3592,"title":{},"body":{"components/HeaderComponent.html":{}}}],["url.includes",{"_index":1301,"title":{},"body":{"injectables/CheckCompleteBaseService.html":{},"injectables/DefaultPageGuardService.html":{},"interfaces/PageListInterface.html":{}}}],["url.includes(x.route",{"_index":4550,"title":{},"body":{"components/WizardProgressBarComponent.html":{}}}],["urlbasename",{"_index":3567,"title":{},"body":{"components/HeaderComponent.html":{}}}],["urls",{"_index":302,"title":{},"body":{"classes/AbstractHttpService.html":{},"injectables/GeocoderService.html":{}}}],["urltree",{"_index":3804,"title":{},"body":{"guards/LoadPageGuardService.html":{},"guards/RouteGuardService.html":{}}}],["uruguay",{"_index":2379,"title":{},"body":{"interfaces/CountryList.html":{}}}],["ury",{"_index":2378,"title":{},"body":{"interfaces/CountryList.html":{}}}],["us/docs/web/http/basics_of_http/mime_types",{"_index":1522,"title":{},"body":{"interfaces/CommonAttachmentJson.html":{},"classes/CommonImage.html":{},"classes/CommonImageProcessingError.html":{},"interfaces/CommonImageScaleFactors.html":{},"classes/CommonImageScaleFactorsImpl.html":{}}}],["usa",{"_index":1856,"title":{},"body":{"interfaces/CountryList.html":{}}}],["usable",{"_index":5505,"title":{},"body":{"additional-documentation/getting-started.html":{}}}],["usage",{"_index":1844,"title":{},"body":{"components/CoreBreadcrumbComponent.html":{}}}],["use",{"_index":439,"title":{},"body":{"classes/AbstractTestPage.html":{},"interfaces/AddrLabelList.html":{},"classes/Address.html":{},"components/ButtonGroupComponent.html":{},"modules/CaptchaModule.html":{},"injectables/CheckCompleteBaseService.html":{},"components/CheckboxComponent.html":{},"classes/Container.html":{},"components/CoreBreadcrumbComponent.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"components/EmailComponent.html":{},"components/GeocoderInputComponent.html":{},"interfaces/IRadioItems.html":{},"guards/LoadPageGuardService.html":{},"interfaces/Maxlengths.html":{},"components/NameComponent.html":{},"interfaces/PageListInterface.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"components/RadioComponent.html":{},"interfaces/ReadOnlyFields.html":{},"guards/RouteGuardService.html":{},"directives/ValidateBcPostalDirective.html":{},"interfaces/WizardProgressItem.html":{},"components/XiconButtonComponent.html":{},"changelog.html":{},"license.html":{},"todo.html":{},"additional-documentation/getting-started.html":{},"additional-documentation/local-development/schematics.html":{},"additional-documentation/local-development/components.html":{}}}],["used",{"_index":176,"title":{},"body":{"classes/AbstractFormControl.html":{},"classes/AbstractHttpService.html":{},"classes/Address.html":{},"components/ButtonComponent.html":{},"injectables/CheckCompleteBaseService.html":{},"classes/Container.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"interfaces/ErrorMessage.html":{},"components/FormSubmitBarComponent.html":{},"interfaces/IRadioItems.html":{},"interfaces/ISpaEnvResponse.html":{},"components/PageFrameworkComponent.html":{},"interfaces/PageListInterface.html":{},"classes/Person.html":{},"components/RadioComponent.html":{},"interfaces/SimpleDate.html":{},"components/SinComponent.html":{},"directives/ValidateBcPostalDirective.html":{},"interfaces/WizardProgressItem.html":{},"changelog.html":{},"additional-documentation/local-development/components.html":{}}}],["usedefaultcolor",{"_index":1740,"title":{},"body":{"classes/Container.html":{},"injectables/ContainerService.html":{},"interfaces/WizardProgressItem.html":{}}}],["usedefaultcolorsubject",{"_index":1799,"title":{},"body":{"injectables/ContainerService.html":{}}}],["usedropdownlist",{"_index":2411,"title":{},"body":{"interfaces/CountryList.html":{},"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{}}}],["useexisting",{"_index":377,"title":{},"body":{"injectables/AbstractPageGuardService.html":{},"injectables/AbstractPgCheckService.html":{},"interfaces/AddrLabelList.html":{},"components/ButtonComponent.html":{},"components/ButtonGroupComponent.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"injectables/DefaultPageGuardService.html":{},"directives/DuplicateCheckDirective.html":{},"interfaces/FileUploaderMsg.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/FullNameComponent.html":{},"interfaces/FullNameErrorMsg.html":{},"interfaces/ISpaEnvResponse.html":{},"guards/LoadPageGuardService.html":{},"interfaces/Maxlengths.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"interfaces/ReadOnlyFields.html":{},"guards/RouteGuardService.html":{},"directives/ValidateBcPostalDirective.html":{},"directives/ValidateCityDirective.html":{},"directives/ValidateNameDirective.html":{},"directives/ValidatePostalcodeDirective.html":{},"directives/ValidateRegionDirective.html":{},"directives/ValidateStreetDirective.html":{}}}],["useful",{"_index":2470,"title":{},"body":{"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{}}}],["usegeocoder",{"_index":967,"title":{},"body":{"interfaces/AddrLabelList.html":{},"interfaces/Maxlengths.html":{},"interfaces/ReadOnlyFields.html":{}}}],["user",{"_index":52,"title":{},"body":{"classes/AbstractBaseForm.html":{},"classes/AbstractForm.html":{},"classes/AbstractReactForm.html":{},"classes/AbstractTestPage.html":{},"interfaces/AddrLabelList.html":{},"interfaces/CommonAttachmentJson.html":{},"classes/CommonImage.html":{},"classes/CommonImageProcessingError.html":{},"interfaces/CommonImageScaleFactors.html":{},"classes/CommonImageScaleFactorsImpl.html":{},"classes/Container.html":{},"components/CoreBreadcrumbComponent.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"interfaces/FileUploaderMsg.html":{},"components/GeocoderInputComponent.html":{},"interfaces/ISpaEnvResponse.html":{},"guards/LoadPageGuardService.html":{},"interfaces/Maxlengths.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"interfaces/ReadOnlyFields.html":{},"guards/RouteGuardService.html":{},"interfaces/WizardProgressItem.html":{},"changelog.html":{}}}],["user's",{"_index":2944,"title":{},"body":{"interfaces/FileUploaderMsg.html":{},"interfaces/ISpaEnvResponse.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{}}}],["username",{"_index":3953,"title":{},"body":{"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{}}}],["users",{"_index":837,"title":{},"body":{"interfaces/AddrLabelList.html":{},"interfaces/Maxlengths.html":{},"interfaces/ReadOnlyFields.html":{},"changelog.html":{}}}],["uses",{"_index":954,"title":{},"body":{"interfaces/AddrLabelList.html":{},"injectables/ContainerService.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"interfaces/FileUploaderMsg.html":{},"interfaces/Maxlengths.html":{},"interfaces/ReadOnlyFields.html":{},"changelog.html":{}}}],["usevalue",{"_index":2617,"title":{},"body":{"injectables/DefaultPageGuardService.html":{}}}],["using",{"_index":270,"title":{},"body":{"classes/AbstractHttpService.html":{},"interfaces/AddrLabelList.html":{},"interfaces/CommonLogMessage.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"interfaces/FileUploaderMsg.html":{},"injectables/GeocoderService.html":{},"interfaces/ISpaEnvResponse.html":{},"interfaces/Maxlengths.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"interfaces/ReadOnlyFields.html":{},"components/SinComponent.html":{},"components/WizardProgressBarComponent.html":{},"changelog.html":{},"index.html":{},"additional-documentation/getting-started.html":{},"additional-documentation/local-development/components.html":{}}}],["ut",{"_index":1443,"title":{},"body":{"components/CityComponent.html":{},"interfaces/CountryList.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"interfaces/FileUploaderMsg.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{}}}],["uuid",{"_index":320,"title":{},"body":{"classes/AbstractHttpService.html":{},"classes/Base.html":{},"modules/CaptchaModule.html":{},"interfaces/CommonAttachmentJson.html":{},"classes/CommonImage.html":{},"classes/CommonImageProcessingError.html":{},"interfaces/CommonImageScaleFactors.html":{},"classes/CommonImageScaleFactorsImpl.html":{},"interfaces/FileUploaderMsg.html":{},"changelog.html":{}}}],["uuid.uuid",{"_index":136,"title":{},"body":{"classes/AbstractFormControl.html":{},"classes/AbstractHttpService.html":{},"classes/Base.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"interfaces/CommonAttachmentJson.html":{},"classes/CommonImage.html":{},"classes/CommonImageProcessingError.html":{},"interfaces/CommonImageScaleFactors.html":{},"classes/CommonImageScaleFactorsImpl.html":{},"components/ConfirmTemplateComponent.html":{},"components/DatepickerComponent.html":{},"components/DropdownComponent.html":{},"components/EmailComponent.html":{},"components/FullNameComponent.html":{},"components/GeocoderInputComponent.html":{},"components/NameComponent.html":{},"components/PasswordComponent.html":{},"classes/Person.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"components/RadioComponent.html":{},"components/SampleModalComponent.html":{},"components/SinComponent.html":{},"components/ToggleComponent.html":{}}}],["uuids",{"_index":304,"title":{},"body":{"classes/AbstractHttpService.html":{},"injectables/GeocoderService.html":{}}}],["uzb",{"_index":2380,"title":{},"body":{"interfaces/CountryList.html":{}}}],["uzbekistan",{"_index":2381,"title":{},"body":{"interfaces/CountryList.html":{}}}],["v3",{"_index":4796,"title":{},"body":{"changelog.html":{}}}],["val",{"_index":829,"title":{},"body":{"interfaces/AddrLabelList.html":{},"classes/Address.html":{},"components/ButtonGroupComponent.html":{},"components/CityComponent.html":{},"interfaces/CountryList.html":{},"components/EmailComponent.html":{},"components/GeocoderInputComponent.html":{},"interfaces/IRadioItems.html":{},"interfaces/Maxlengths.html":{},"components/NameComponent.html":{},"interfaces/PageList.html":{},"injectables/PageStateService.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{},"components/RadioComponent.html":{},"interfaces/ReadOnlyFields.html":{},"components/SinComponent.html":{},"changelog.html":{}}}],["val.country",{"_index":949,"title":{},"body":{"interfaces/AddrLabelList.html":{},"interfaces/Maxlengths.html":{},"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{},"interfaces/ReadOnlyFields.html":{}}}],["val.countrycode",{"_index":963,"title":{},"body":{"interfaces/AddrLabelList.html":{},"interfaces/CountryList.html":{},"interfaces/Maxlengths.html":{},"interfaces/ReadOnlyFields.html":{}}}],["val.description",{"_index":948,"title":{},"body":{"interfaces/AddrLabelList.html":{},"interfaces/Maxlengths.html":{},"interfaces/ReadOnlyFields.html":{}}}],["val.label",{"_index":4235,"title":{},"body":{"components/RadioComponent.html":{}}}],["val.path",{"_index":3889,"title":{},"body":{"interfaces/PageList.html":{},"injectables/PageStateService.html":{}}}],["val.provincecode",{"_index":946,"title":{},"body":{"interfaces/AddrLabelList.html":{},"interfaces/Maxlengths.html":{},"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{},"interfaces/ReadOnlyFields.html":{}}}],["valid",{"_index":107,"title":{},"body":{"classes/AbstractForm.html":{},"classes/AbstractReactForm.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"components/NameComponent.html":{},"directives/ValidateBcPostalDirective.html":{},"directives/ValidateCityDirective.html":{},"directives/ValidateNameDirective.html":{},"directives/ValidatePostalcodeDirective.html":{},"directives/ValidateRegionDirective.html":{},"directives/ValidateStreetDirective.html":{},"changelog.html":{}}}],["validate",{"_index":2668,"title":{},"body":{"directives/DuplicateCheckDirective.html":{},"directives/ValidateBcPostalDirective.html":{},"directives/ValidateCityDirective.html":{},"directives/ValidateNameDirective.html":{},"directives/ValidatePostalcodeDirective.html":{},"directives/ValidateRegionDirective.html":{},"directives/ValidateStreetDirective.html":{},"changelog.html":{}}}],["validate(control",{"_index":2671,"title":{},"body":{"directives/DuplicateCheckDirective.html":{},"directives/ValidateBcPostalDirective.html":{},"directives/ValidateCityDirective.html":{},"directives/ValidateNameDirective.html":{},"directives/ValidatePostalcodeDirective.html":{},"directives/ValidateRegionDirective.html":{},"directives/ValidateStreetDirective.html":{}}}],["validatebcpostaldirective",{"_index":764,"title":{"directives/ValidateBcPostalDirective.html":{}},"body":{"components/AccordionCommonComponent.html":{},"components/ButtonComponent.html":{},"components/ButtonGroupComponent.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"components/ConfirmTemplateComponent.html":{},"components/CoreBreadcrumbComponent.html":{},"components/DatepickerComponent.html":{},"components/DropdownComponent.html":{},"components/EmailComponent.html":{},"components/ErrorContainerComponent.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/FullNameComponent.html":{},"components/GeocoderInputComponent.html":{},"components/HeaderComponent.html":{},"components/NameComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"components/RadioComponent.html":{},"components/SampleModalComponent.html":{},"modules/SharedCoreModule.html":{},"components/SinComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"directives/ValidateBcPostalDirective.html":{},"components/WizardProgressBarComponent.html":{},"components/XiconButtonComponent.html":{},"coverage.html":{},"overview.html":{}}}],["validatecitydirective",{"_index":766,"title":{"directives/ValidateCityDirective.html":{}},"body":{"components/AccordionCommonComponent.html":{},"components/ButtonComponent.html":{},"components/ButtonGroupComponent.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"components/ConfirmTemplateComponent.html":{},"components/CoreBreadcrumbComponent.html":{},"components/DatepickerComponent.html":{},"components/DropdownComponent.html":{},"components/EmailComponent.html":{},"components/ErrorContainerComponent.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/FullNameComponent.html":{},"components/GeocoderInputComponent.html":{},"components/HeaderComponent.html":{},"components/NameComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"components/RadioComponent.html":{},"components/SampleModalComponent.html":{},"modules/SharedCoreModule.html":{},"components/SinComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"directives/ValidateCityDirective.html":{},"components/WizardProgressBarComponent.html":{},"components/XiconButtonComponent.html":{},"coverage.html":{},"overview.html":{}}}],["validatelabel",{"_index":129,"title":{},"body":{"classes/AbstractFormControl.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"components/EmailComponent.html":{},"components/NameComponent.html":{},"components/ProvinceComponent.html":{},"components/RadioComponent.html":{},"components/SinComponent.html":{}}}],["validatenamedirective",{"_index":768,"title":{"directives/ValidateNameDirective.html":{}},"body":{"components/AccordionCommonComponent.html":{},"components/ButtonComponent.html":{},"components/ButtonGroupComponent.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"components/ConfirmTemplateComponent.html":{},"components/CoreBreadcrumbComponent.html":{},"components/DatepickerComponent.html":{},"components/DropdownComponent.html":{},"components/EmailComponent.html":{},"components/ErrorContainerComponent.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/FullNameComponent.html":{},"components/GeocoderInputComponent.html":{},"components/HeaderComponent.html":{},"components/NameComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"components/RadioComponent.html":{},"components/SampleModalComponent.html":{},"modules/SharedCoreModule.html":{},"components/SinComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"directives/ValidateNameDirective.html":{},"components/WizardProgressBarComponent.html":{},"components/XiconButtonComponent.html":{},"coverage.html":{},"overview.html":{}}}],["validatepc",{"_index":4481,"title":{},"body":{"directives/ValidatePostalcodeDirective.html":{},"coverage.html":{}}}],["validatepc(control",{"_index":4472,"title":{},"body":{"directives/ValidatePostalcodeDirective.html":{}}}],["validatepostalcodedirective",{"_index":770,"title":{"directives/ValidatePostalcodeDirective.html":{}},"body":{"components/AccordionCommonComponent.html":{},"components/ButtonComponent.html":{},"components/ButtonGroupComponent.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"components/ConfirmTemplateComponent.html":{},"components/CoreBreadcrumbComponent.html":{},"components/DatepickerComponent.html":{},"components/DropdownComponent.html":{},"components/EmailComponent.html":{},"components/ErrorContainerComponent.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/FullNameComponent.html":{},"components/GeocoderInputComponent.html":{},"components/HeaderComponent.html":{},"components/NameComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"components/RadioComponent.html":{},"components/SampleModalComponent.html":{},"modules/SharedCoreModule.html":{},"components/SinComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"directives/ValidatePostalcodeDirective.html":{},"components/WizardProgressBarComponent.html":{},"components/XiconButtonComponent.html":{},"coverage.html":{},"overview.html":{}}}],["validateregiondirective",{"_index":772,"title":{"directives/ValidateRegionDirective.html":{}},"body":{"components/AccordionCommonComponent.html":{},"components/ButtonComponent.html":{},"components/ButtonGroupComponent.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"components/ConfirmTemplateComponent.html":{},"components/CoreBreadcrumbComponent.html":{},"components/DatepickerComponent.html":{},"components/DropdownComponent.html":{},"components/EmailComponent.html":{},"components/ErrorContainerComponent.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/FullNameComponent.html":{},"components/GeocoderInputComponent.html":{},"components/HeaderComponent.html":{},"components/NameComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"components/RadioComponent.html":{},"components/SampleModalComponent.html":{},"modules/SharedCoreModule.html":{},"components/SinComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"directives/ValidateRegionDirective.html":{},"components/WizardProgressBarComponent.html":{},"components/XiconButtonComponent.html":{},"coverage.html":{},"overview.html":{}}}],["validateresult",{"_index":4393,"title":{},"body":{"components/SinComponent.html":{}}}],["validates",{"_index":4724,"title":{},"body":{"changelog.html":{}}}],["validateself",{"_index":216,"title":{},"body":{"classes/AbstractFormControl.html":{},"components/EmailComponent.html":{},"components/NameComponent.html":{},"components/SinComponent.html":{}}}],["validatesin",{"_index":4368,"title":{},"body":{"components/SinComponent.html":{}}}],["validatestreetdirective",{"_index":774,"title":{"directives/ValidateStreetDirective.html":{}},"body":{"components/AccordionCommonComponent.html":{},"components/ButtonComponent.html":{},"components/ButtonGroupComponent.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"components/ConfirmTemplateComponent.html":{},"components/CoreBreadcrumbComponent.html":{},"components/DatepickerComponent.html":{},"components/DropdownComponent.html":{},"components/EmailComponent.html":{},"components/ErrorContainerComponent.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/FullNameComponent.html":{},"components/GeocoderInputComponent.html":{},"components/HeaderComponent.html":{},"components/NameComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"components/RadioComponent.html":{},"components/SampleModalComponent.html":{},"modules/SharedCoreModule.html":{},"components/SinComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"directives/ValidateStreetDirective.html":{},"components/WizardProgressBarComponent.html":{},"components/XiconButtonComponent.html":{},"coverage.html":{},"overview.html":{}}}],["validating",{"_index":155,"title":{},"body":{"classes/AbstractFormControl.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"components/EmailComponent.html":{},"components/NameComponent.html":{},"components/ProvinceComponent.html":{},"components/RadioComponent.html":{},"components/SinComponent.html":{},"changelog.html":{}}}],["validation",{"_index":93,"title":{},"body":{"classes/AbstractForm.html":{},"classes/AbstractReactForm.html":{},"injectables/CaptchaDataService.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"injectables/ServerPayload.html":{},"changelog.html":{}}}],["validationerrors",{"_index":151,"title":{},"body":{"classes/AbstractFormControl.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"components/EmailComponent.html":{},"components/NameComponent.html":{},"components/ProvinceComponent.html":{},"components/RadioComponent.html":{},"components/SinComponent.html":{},"directives/ValidateBcPostalDirective.html":{},"directives/ValidateCityDirective.html":{},"directives/ValidateNameDirective.html":{},"directives/ValidateRegionDirective.html":{},"directives/ValidateStreetDirective.html":{}}}],["validations",{"_index":3950,"title":{},"body":{"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"changelog.html":{}}}],["validator",{"_index":217,"title":{},"body":{"classes/AbstractFormControl.html":{},"directives/DuplicateCheckDirective.html":{},"directives/ValidateBcPostalDirective.html":{},"directives/ValidateCityDirective.html":{},"directives/ValidateNameDirective.html":{},"directives/ValidatePostalcodeDirective.html":{},"directives/ValidateRegionDirective.html":{},"directives/ValidateStreetDirective.html":{},"changelog.html":{}}}],["validatorfn",{"_index":2674,"title":{},"body":{"directives/DuplicateCheckDirective.html":{},"directives/ValidateBcPostalDirective.html":{},"directives/ValidateCityDirective.html":{},"directives/ValidateNameDirective.html":{},"directives/ValidatePostalcodeDirective.html":{},"directives/ValidateRegionDirective.html":{},"directives/ValidateStreetDirective.html":{}}}],["validators",{"_index":4784,"title":{},"body":{"changelog.html":{}}}],["validing",{"_index":4710,"title":{},"body":{"changelog.html":{}}}],["value",{"_index":36,"title":{},"body":{"classes/AbstractBaseForm.html":{},"classes/AbstractForm.html":{},"classes/AbstractFormControl.html":{},"classes/AbstractHttpService.html":{},"classes/AbstractReactForm.html":{},"classes/AbstractTestPage.html":{},"components/AccordionCommonComponent.html":{},"interfaces/AddrLabelList.html":{},"classes/Address.html":{},"classes/Base.html":{},"components/ButtonComponent.html":{},"components/ButtonGroupComponent.html":{},"injectables/CheckCompleteBaseService.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"classes/CommonImage.html":{},"components/ConfirmTemplateComponent.html":{},"classes/Container.html":{},"injectables/ContainerService.html":{},"interfaces/CountryList.html":{},"components/DatepickerComponent.html":{},"injectables/DefaultPageGuardService.html":{},"components/DropdownComponent.html":{},"components/EmailComponent.html":{},"components/ErrorContainerComponent.html":{},"interfaces/ErrorMessage.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/FullNameComponent.html":{},"interfaces/FullNameErrorMsg.html":{},"components/GeocoderInputComponent.html":{},"injectables/GeocoderService.html":{},"components/HeaderComponent.html":{},"interfaces/IRadioItems.html":{},"interfaces/Maxlengths.html":{},"components/NameComponent.html":{},"components/PageFrameworkComponent.html":{},"interfaces/PageList.html":{},"interfaces/PageListInterface.html":{},"components/PageSectionComponent.html":{},"injectables/PageStateService.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"classes/Person.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{},"components/RadioComponent.html":{},"interfaces/ReadOnlyFields.html":{},"components/SampleModalComponent.html":{},"components/SinComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"directives/ValidatePostalcodeDirective.html":{},"components/WizardProgressBarComponent.html":{},"changelog.html":{},"miscellaneous/enumerations.html":{}}}],["valuechange",{"_index":1365,"title":{},"body":{"components/CityComponent.html":{},"interfaces/CountryList.html":{},"components/EmailComponent.html":{},"interfaces/IRadioItems.html":{},"components/NameComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{},"components/RadioComponent.html":{},"components/SinComponent.html":{}}}],["valuemax=\"100",{"_index":4054,"title":{},"body":{"components/PasswordComponent.html":{}}}],["valuemin=\"0",{"_index":4053,"title":{},"body":{"components/PasswordComponent.html":{}}}],["valuenow]=\"strengthpercentage",{"_index":4051,"title":{},"body":{"components/PasswordComponent.html":{}}}],["values",{"_index":929,"title":{},"body":{"interfaces/AddrLabelList.html":{},"interfaces/CommonLogMessage.html":{},"components/GeocoderInputComponent.html":{},"interfaces/IRadioItems.html":{},"interfaces/Maxlengths.html":{},"components/RadioComponent.html":{},"interfaces/ReadOnlyFields.html":{},"changelog.html":{}}}],["vanuatu",{"_index":2383,"title":{},"body":{"interfaces/CountryList.html":{}}}],["var",{"_index":679,"title":{},"body":{"components/AccordionCommonComponent.html":{},"components/ButtonComponent.html":{},"components/ButtonGroupComponent.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"components/ConfirmTemplateComponent.html":{},"components/CoreBreadcrumbComponent.html":{},"components/DatepickerComponent.html":{},"components/DropdownComponent.html":{},"components/EmailComponent.html":{},"components/ErrorContainerComponent.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/FullNameComponent.html":{},"components/GeocoderInputComponent.html":{},"components/HeaderComponent.html":{},"components/NameComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"components/RadioComponent.html":{},"components/SampleModalComponent.html":{},"components/SinComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{},"components/XiconButtonComponent.html":{}}}],["variable",{"_index":921,"title":{},"body":{"interfaces/AddrLabelList.html":{},"interfaces/Maxlengths.html":{},"interfaces/ReadOnlyFields.html":{},"changelog.html":{},"coverage.html":{}}}],["variables",{"_index":4596,"title":{},"body":{"changelog.html":{}}}],["variablescss",{"_index":5367,"title":{},"body":{"coverage.html":{}}}],["vat",{"_index":2071,"title":{},"body":{"interfaces/CountryList.html":{}}}],["vatican",{"_index":2073,"title":{},"body":{"interfaces/CountryList.html":{}}}],["vct",{"_index":2273,"title":{},"body":{"interfaces/CountryList.html":{}}}],["ven",{"_index":2384,"title":{},"body":{"interfaces/CountryList.html":{}}}],["vendor",{"_index":4636,"title":{},"body":{"changelog.html":{}}}],["venezuela",{"_index":2385,"title":{},"body":{"interfaces/CountryList.html":{}}}],["verde",{"_index":1949,"title":{},"body":{"interfaces/CountryList.html":{}}}],["verify/captcha",{"_index":1187,"title":{},"body":{"injectables/CaptchaDataService.html":{},"injectables/ServerPayload.html":{}}}],["verifycaptcha",{"_index":1162,"title":{},"body":{"injectables/CaptchaDataService.html":{}}}],["verifycaptcha(apibaseurl",{"_index":1172,"title":{},"body":{"injectables/CaptchaDataService.html":{},"injectables/ServerPayload.html":{}}}],["verifying_answer",{"_index":5423,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["version",{"_index":426,"title":{},"body":{"classes/AbstractReactForm.html":{},"components/CheckboxComponent.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"components/PageFrameworkComponent.html":{},"changelog.html":{},"license.html":{},"todo.html":{},"additional-documentation/local-development/schematics.html":{}}}],["versionjs",{"_index":5389,"title":{},"body":{"coverage.html":{}}}],["versions",{"_index":4822,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["vertical",{"_index":3602,"title":{},"body":{"interfaces/IRadioItems.html":{},"components/RadioComponent.html":{},"changelog.html":{}}}],["very",{"_index":4512,"title":{},"body":{"components/WizardProgressBarComponent.html":{},"index.html":{}}}],["vgb",{"_index":2389,"title":{},"body":{"interfaces/CountryList.html":{}}}],["via",{"_index":586,"title":{},"body":{"classes/AbstractTestPage.html":{},"interfaces/AddrLabelList.html":{},"interfaces/CommonLogMessage.html":{},"interfaces/FileUploaderMsg.html":{},"interfaces/ISpaEnvResponse.html":{},"interfaces/Maxlengths.html":{},"interfaces/ReadOnlyFields.html":{},"changelog.html":{},"additional-documentation/getting-started.html":{}}}],["viet",{"_index":2388,"title":{},"body":{"interfaces/CountryList.html":{}}}],["view",{"_index":4511,"title":{},"body":{"components/WizardProgressBarComponent.html":{},"additional-documentation/getting-started.html":{}}}],["viewchild",{"_index":72,"title":{},"body":{"classes/AbstractBaseForm.html":{},"classes/AbstractForm.html":{},"components/AccordionCommonComponent.html":{},"components/ButtonComponent.html":{},"components/ButtonGroupComponent.html":{},"components/CheckboxComponent.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"interfaces/FileUploaderMsg.html":{},"components/FullNameComponent.html":{},"interfaces/FullNameErrorMsg.html":{},"interfaces/ISpaEnvResponse.html":{},"interfaces/SampleImageInterface.html":{},"components/SampleModalComponent.html":{},"components/ThumbnailComponent.html":{},"components/WizardProgressBarComponent.html":{}}}],["viewchild('browsefileref",{"_index":2799,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["viewchild('button",{"_index":1115,"title":{},"body":{"components/ButtonComponent.html":{}}}],["viewchild('buttongroup",{"_index":1150,"title":{},"body":{"components/ButtonGroupComponent.html":{}}}],["viewchild('canvas",{"_index":2814,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["viewchild('capturefileref",{"_index":2801,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["viewchild('checkbox",{"_index":1337,"title":{},"body":{"components/CheckboxComponent.html":{}}}],["viewchild('consentmodal",{"_index":3692,"title":{},"body":{"interfaces/ISpaEnvResponse.html":{}}}],["viewchild('dp",{"_index":2478,"title":{},"body":{"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{}}}],["viewchild('dropzone",{"_index":2797,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["viewchild('formref",{"_index":90,"title":{},"body":{"classes/AbstractForm.html":{}}}],["viewchild('fullsizeviewmodal",{"_index":3707,"title":{},"body":{"interfaces/ISpaEnvResponse.html":{},"components/ThumbnailComponent.html":{}}}],["viewchild('imageplaceholderref",{"_index":2803,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["viewchild('samplesmodal",{"_index":4252,"title":{},"body":{"interfaces/SampleImageInterface.html":{},"components/SampleModalComponent.html":{}}}],["viewchild('selectfilelabel",{"_index":2805,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["viewchild('stepcontainer",{"_index":4515,"title":{},"body":{"components/WizardProgressBarComponent.html":{}}}],["viewchildren",{"_index":4519,"title":{},"body":{"components/WizardProgressBarComponent.html":{}}}],["viewchildren('steps",{"_index":4517,"title":{},"body":{"components/WizardProgressBarComponent.html":{}}}],["viewcontainerref",{"_index":4416,"title":{},"body":{"components/ThumbnailComponent.html":{}}}],["viewencapsulation",{"_index":2745,"title":{},"body":{"interfaces/FileUploaderMsg.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/ThumbnailComponent.html":{}}}],["viewencapsulation.none",{"_index":2794,"title":{},"body":{"interfaces/FileUploaderMsg.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/ThumbnailComponent.html":{}}}],["viewproviders",{"_index":819,"title":{},"body":{"interfaces/AddrLabelList.html":{},"components/ButtonComponent.html":{},"components/ButtonGroupComponent.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"interfaces/FileUploaderMsg.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"interfaces/ISpaEnvResponse.html":{},"interfaces/Maxlengths.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"interfaces/ReadOnlyFields.html":{},"additional-documentation/local-development/schematics.html":{}}}],["vincent",{"_index":2274,"title":{},"body":{"interfaces/CountryList.html":{}}}],["vir",{"_index":2391,"title":{},"body":{"interfaces/CountryList.html":{}}}],["virgin",{"_index":2390,"title":{},"body":{"interfaces/CountryList.html":{}}}],["visibility",{"_index":2464,"title":{},"body":{"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{}}}],["visible",{"_index":876,"title":{},"body":{"interfaces/AddrLabelList.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"interfaces/Maxlengths.html":{},"interfaces/ReadOnlyFields.html":{},"changelog.html":{}}}],["vitae",{"_index":1445,"title":{},"body":{"components/CityComponent.html":{},"interfaces/CountryList.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"interfaces/FileUploaderMsg.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{}}}],["vnm",{"_index":2387,"title":{},"body":{"interfaces/CountryList.html":{}}}],["void",{"_index":58,"title":{},"body":{"classes/AbstractBaseForm.html":{},"classes/AbstractForm.html":{},"classes/AbstractFormControl.html":{},"classes/AbstractReactForm.html":{},"classes/AbstractTestPage.html":{},"components/AccordionCommonComponent.html":{},"interfaces/AddrLabelList.html":{},"classes/Address.html":{},"components/ButtonComponent.html":{},"components/ButtonGroupComponent.html":{},"injectables/CheckCompleteBaseService.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"classes/Container.html":{},"injectables/ContainerService.html":{},"components/CoreBreadcrumbComponent.html":{},"interfaces/CountryList.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"components/DropdownComponent.html":{},"components/EmailComponent.html":{},"interfaces/FileUploaderMsg.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/FullNameComponent.html":{},"interfaces/FullNameErrorMsg.html":{},"components/GeocoderInputComponent.html":{},"components/HeaderComponent.html":{},"interfaces/IRadioItems.html":{},"interfaces/ISpaEnvResponse.html":{},"interfaces/Maxlengths.html":{},"components/NameComponent.html":{},"components/PageFrameworkComponent.html":{},"interfaces/PageListInterface.html":{},"components/PageSectionComponent.html":{},"injectables/PageStateService.html":{},"components/PasswordComponent.html":{},"classes/Person.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{},"components/RadioComponent.html":{},"interfaces/ReadOnlyFields.html":{},"interfaces/SampleImageInterface.html":{},"components/SampleModalComponent.html":{},"components/SinComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{},"interfaces/WizardProgressItem.html":{},"components/XiconButtonComponent.html":{}}}],["voluptatem",{"_index":1421,"title":{},"body":{"components/CityComponent.html":{},"interfaces/CountryList.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"interfaces/FileUploaderMsg.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{}}}],["voluptates",{"_index":1466,"title":{},"body":{"components/CityComponent.html":{},"interfaces/CountryList.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"interfaces/FileUploaderMsg.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{}}}],["voluptatibus",{"_index":1435,"title":{},"body":{"components/CityComponent.html":{},"interfaces/CountryList.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"interfaces/FileUploaderMsg.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{}}}],["voluptatum",{"_index":1439,"title":{},"body":{"components/CityComponent.html":{},"interfaces/CountryList.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"interfaces/FileUploaderMsg.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{}}}],["vs",{"_index":5501,"title":{},"body":{"additional-documentation/getting-started.html":{}}}],["vut",{"_index":2382,"title":{},"body":{"interfaces/CountryList.html":{}}}],["vv]\\\\d[abceghj",{"_index":1014,"title":{},"body":{"classes/Address.html":{}}}],["w",{"_index":5530,"title":{},"body":{"additional-documentation/local-development/schematics.html":{}}}],["wait",{"_index":2890,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["walk",{"_index":4409,"title":{},"body":{"components/SinComponent.html":{}}}],["wallis",{"_index":2394,"title":{},"body":{"interfaces/CountryList.html":{}}}],["want",{"_index":592,"title":{},"body":{"classes/AbstractTestPage.html":{},"interfaces/CommonLogMessage.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{}}}],["warning",{"_index":1704,"title":{},"body":{"components/ConfirmTemplateComponent.html":{},"components/PasswordComponent.html":{},"miscellaneous/enumerations.html":{}}}],["warningcode",{"_index":1694,"title":{},"body":{"components/ConfirmTemplateComponent.html":{}}}],["warnings",{"_index":5471,"title":{},"body":{"todo.html":{}}}],["warranties",{"_index":5459,"title":{},"body":{"license.html":{}}}],["watch",{"_index":5565,"title":{},"body":{"additional-documentation/local-development/schematics.html":{}}}],["watches",{"_index":5531,"title":{},"body":{"additional-documentation/local-development/schematics.html":{}}}],["way",{"_index":1033,"title":{},"body":{"classes/Address.html":{},"interfaces/CommonLogMessage.html":{},"additional-documentation/getting-started.html":{}}}],["waze",{"_index":4987,"title":{},"body":{"changelog.html":{}}}],["we'll",{"_index":2544,"title":{},"body":{"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{}}}],["we're",{"_index":4554,"title":{},"body":{"components/WizardProgressBarComponent.html":{}}}],["we've",{"_index":4542,"title":{},"body":{"components/WizardProgressBarComponent.html":{}}}],["web",{"_index":3663,"title":{},"body":{"interfaces/ISpaEnvResponse.html":{},"changelog.html":{},"additional-documentation/local-development/components.html":{}}}],["webelement",{"_index":467,"title":{},"body":{"classes/AbstractTestPage.html":{}}}],["weights",{"_index":4397,"title":{},"body":{"components/SinComponent.html":{}}}],["well",{"_index":3502,"title":{},"body":{"components/GeocoderInputComponent.html":{},"additional-documentation/local-development/components.html":{}}}],["western",{"_index":2397,"title":{},"body":{"interfaces/CountryList.html":{}}}],["wfactor",{"_index":1545,"title":{},"body":{"interfaces/CommonAttachmentJson.html":{},"classes/CommonImage.html":{},"classes/CommonImageProcessingError.html":{},"interfaces/CommonImageScaleFactors.html":{},"classes/CommonImageScaleFactorsImpl.html":{}}}],["whatever",{"_index":368,"title":{},"body":{"injectables/AbstractPageGuardService.html":{},"injectables/AbstractPgCheckService.html":{}}}],["whether",{"_index":1249,"title":{},"body":{"injectables/CheckCompleteBaseService.html":{},"guards/LoadPageGuardService.html":{},"interfaces/PageListInterface.html":{},"guards/RouteGuardService.html":{},"directives/ValidateBcPostalDirective.html":{}}}],["whole",{"_index":5590,"title":{},"body":{"additional-documentation/local-development/components.html":{}}}],["wide",{"_index":1590,"title":{},"body":{"interfaces/CommonLogMessage.html":{}}}],["width",{"_index":2895,"title":{},"body":{"interfaces/FileUploaderMsg.html":{},"components/FormSubmitBarComponent.html":{},"components/ThumbnailComponent.html":{},"changelog.html":{}}}],["width/height",{"_index":2505,"title":{},"body":{"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{}}}],["widthfactor",{"_index":1538,"title":{},"body":{"interfaces/CommonAttachmentJson.html":{},"classes/CommonImage.html":{},"classes/CommonImageProcessingError.html":{},"interfaces/CommonImageScaleFactors.html":{},"classes/CommonImageScaleFactorsImpl.html":{}}}],["widthoption",{"_index":5066,"title":{},"body":{"changelog.html":{}}}],["widthoptions",{"_index":5008,"title":{},"body":{"changelog.html":{}}}],["window",{"_index":3700,"title":{},"body":{"interfaces/ISpaEnvResponse.html":{}}}],["window.location.hostname",{"_index":1595,"title":{},"body":{"interfaces/CommonLogMessage.html":{}}}],["window.location.href",{"_index":3595,"title":{},"body":{"components/HeaderComponent.html":{}}}],["window.location.href.indexof(this.skip_content_hash",{"_index":3594,"title":{},"body":{"components/HeaderComponent.html":{}}}],["window.location.origin}/${this.urlbasename",{"_index":3596,"title":{},"body":{"components/HeaderComponent.html":{}}}],["window.outerwidth",{"_index":4561,"title":{},"body":{"components/WizardProgressBarComponent.html":{}}}],["window.scrollto",{"_index":4668,"title":{},"body":{"changelog.html":{}}}],["winds",{"_index":2522,"title":{},"body":{"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{}}}],["wip",{"_index":5046,"title":{},"body":{"changelog.html":{}}}],["wish",{"_index":3711,"title":{},"body":{"interfaces/ISpaEnvResponse.html":{},"additional-documentation/local-development/schematics.html":{}}}],["within",{"_index":539,"title":{},"body":{"classes/AbstractTestPage.html":{},"interfaces/FileUploaderMsg.html":{},"guards/LoadPageGuardService.html":{},"changelog.html":{},"additional-documentation/local-development/components.html":{}}}],["without",{"_index":3519,"title":{},"body":{"components/GeocoderInputComponent.html":{},"components/XiconButtonComponent.html":{},"license.html":{}}}],["wizard",{"_index":755,"title":{},"body":{"components/AccordionCommonComponent.html":{},"components/ButtonComponent.html":{},"components/ButtonGroupComponent.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"components/ConfirmTemplateComponent.html":{},"classes/Container.html":{},"components/CoreBreadcrumbComponent.html":{},"components/DatepickerComponent.html":{},"components/DropdownComponent.html":{},"components/EmailComponent.html":{},"components/ErrorContainerComponent.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/FullNameComponent.html":{},"components/GeocoderInputComponent.html":{},"components/HeaderComponent.html":{},"components/NameComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"components/RadioComponent.html":{},"components/SampleModalComponent.html":{},"components/SinComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{},"interfaces/WizardProgressItem.html":{},"components/XiconButtonComponent.html":{}}}],["wizardprogressbar",{"_index":5561,"title":{},"body":{"additional-documentation/local-development/schematics.html":{}}}],["wizardprogressbarcomponent",{"_index":754,"title":{"components/WizardProgressBarComponent.html":{}},"body":{"components/AccordionCommonComponent.html":{},"components/ButtonComponent.html":{},"components/ButtonGroupComponent.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"components/ConfirmTemplateComponent.html":{},"components/CoreBreadcrumbComponent.html":{},"components/DatepickerComponent.html":{},"components/DropdownComponent.html":{},"components/EmailComponent.html":{},"components/ErrorContainerComponent.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/FullNameComponent.html":{},"components/GeocoderInputComponent.html":{},"components/HeaderComponent.html":{},"components/NameComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"components/RadioComponent.html":{},"components/SampleModalComponent.html":{},"modules/SharedCoreModule.html":{},"components/SinComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{},"components/XiconButtonComponent.html":{},"coverage.html":{},"overview.html":{}}}],["wizardprogressitem",{"_index":1749,"title":{"interfaces/WizardProgressItem.html":{}},"body":{"classes/Container.html":{},"components/WizardProgressBarComponent.html":{},"interfaces/WizardProgressItem.html":{},"changelog.html":{},"coverage.html":{}}}],["wlf",{"_index":2393,"title":{},"body":{"interfaces/CountryList.html":{}}}],["won't",{"_index":1674,"title":{},"body":{"interfaces/CommonLogMessage.html":{},"components/WizardProgressBarComponent.html":{}}}],["work",{"_index":554,"title":{},"body":{"classes/AbstractTestPage.html":{},"injectables/CheckCompleteBaseService.html":{},"components/EmailComponent.html":{},"interfaces/FileUploaderMsg.html":{},"components/HeaderComponent.html":{},"components/NameComponent.html":{},"interfaces/PageListInterface.html":{},"changelog.html":{}}}],["workaround",{"_index":2824,"title":{},"body":{"interfaces/FileUploaderMsg.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{}}}],["worker",{"_index":4805,"title":{},"body":{"changelog.html":{}}}],["working",{"_index":2829,"title":{},"body":{"interfaces/FileUploaderMsg.html":{},"changelog.html":{},"additional-documentation/getting-started.html":{}}}],["works",{"_index":576,"title":{},"body":{"classes/AbstractTestPage.html":{},"components/CoreBreadcrumbComponent.html":{},"directives/DuplicateCheckDirective.html":{},"interfaces/FileUploaderMsg.html":{},"components/FormSubmitBarComponent.html":{},"interfaces/GeoAddressResult.html":{},"injectables/GeocoderService.html":{},"changelog.html":{}}}],["wrap",{"_index":3925,"title":{},"body":{"components/PageSectionComponent.html":{}}}],["wrapped",{"_index":2480,"title":{},"body":{"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{}}}],["wrapper",{"_index":2441,"title":{},"body":{"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"components/HeaderComponent.html":{}}}],["wrapper/row",{"_index":3918,"title":{},"body":{"components/PageSectionComponent.html":{}}}],["wraps",{"_index":4846,"title":{},"body":{"changelog.html":{}}}],["write",{"_index":5524,"title":{},"body":{"additional-documentation/local-development/schematics.html":{},"additional-documentation/local-development/components.html":{}}}],["writevalue",{"_index":130,"title":{},"body":{"classes/AbstractFormControl.html":{},"interfaces/AddrLabelList.html":{},"components/ButtonGroupComponent.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"interfaces/CountryList.html":{},"components/DatepickerComponent.html":{},"components/DropdownComponent.html":{},"components/EmailComponent.html":{},"components/FullNameComponent.html":{},"components/GeocoderInputComponent.html":{},"interfaces/Maxlengths.html":{},"components/NameComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{},"components/RadioComponent.html":{},"interfaces/ReadOnlyFields.html":{},"components/SinComponent.html":{}}}],["writevalue(obj",{"_index":2547,"title":{},"body":{"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{}}}],["writevalue(value",{"_index":164,"title":{},"body":{"classes/AbstractFormControl.html":{},"components/ButtonGroupComponent.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"components/DropdownComponent.html":{},"components/EmailComponent.html":{},"components/FullNameComponent.html":{},"interfaces/FullNameErrorMsg.html":{},"components/GeocoderInputComponent.html":{},"interfaces/IRadioItems.html":{},"interfaces/ISpaEnvResponse.html":{},"components/NameComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"components/RadioComponent.html":{},"components/SinComponent.html":{}}}],["writing",{"_index":5455,"title":{},"body":{"license.html":{},"additional-documentation/local-development/schematics.html":{}}}],["wrong",{"_index":2902,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["wrongtype",{"_index":1484,"title":{},"body":{"interfaces/CommonAttachmentJson.html":{},"classes/CommonImage.html":{},"classes/CommonImageProcessingError.html":{},"interfaces/CommonImageScaleFactors.html":{},"classes/CommonImageScaleFactorsImpl.html":{},"miscellaneous/enumerations.html":{}}}],["wsm",{"_index":2276,"title":{},"body":{"interfaces/CountryList.html":{}}}],["x",{"_index":208,"title":{},"body":{"classes/AbstractFormControl.html":{},"classes/AbstractReactForm.html":{},"interfaces/AddrLabelList.html":{},"injectables/CheckCompleteBaseService.html":{},"classes/Container.html":{},"interfaces/CountryList.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"directives/DuplicateCheckDirective.html":{},"interfaces/FileUploaderMsg.html":{},"interfaces/Maxlengths.html":{},"interfaces/PageList.html":{},"interfaces/PageListInterface.html":{},"injectables/PageStateService.html":{},"components/PostalCodeComponent.html":{},"interfaces/ReadOnlyFields.html":{},"interfaces/WizardProgressItem.html":{},"changelog.html":{}}}],["x.getdate",{"_index":2496,"title":{},"body":{"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{}}}],["x.iscomplete",{"_index":1298,"title":{},"body":{"injectables/CheckCompleteBaseService.html":{},"interfaces/PageList.html":{},"interfaces/PageListInterface.html":{},"injectables/PageStateService.html":{}}}],["x.path",{"_index":3885,"title":{},"body":{"interfaces/PageList.html":{},"injectables/PageStateService.html":{}}}],["x.route",{"_index":1302,"title":{},"body":{"injectables/CheckCompleteBaseService.html":{},"interfaces/PageListInterface.html":{}}}],["x.slice(1)).join",{"_index":1778,"title":{},"body":{"classes/Container.html":{},"interfaces/WizardProgressItem.html":{}}}],["x.unsubscribe",{"_index":1793,"title":{},"body":{"classes/Container.html":{},"interfaces/WizardProgressItem.html":{}}}],["x.uuid",{"_index":3246,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["x[0].touppercase",{"_index":1777,"title":{},"body":{"classes/Container.html":{},"interfaces/WizardProgressItem.html":{}}}],["xicon",{"_index":758,"title":{},"body":{"components/AccordionCommonComponent.html":{},"components/ButtonComponent.html":{},"components/ButtonGroupComponent.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"components/ConfirmTemplateComponent.html":{},"components/CoreBreadcrumbComponent.html":{},"components/DatepickerComponent.html":{},"components/DropdownComponent.html":{},"components/EmailComponent.html":{},"components/ErrorContainerComponent.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/FullNameComponent.html":{},"components/GeocoderInputComponent.html":{},"components/HeaderComponent.html":{},"components/NameComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"components/RadioComponent.html":{},"components/SampleModalComponent.html":{},"components/SinComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{},"components/XiconButtonComponent.html":{},"todo.html":{}}}],["xiconbutton",{"_index":4952,"title":{},"body":{"changelog.html":{}}}],["xiconbuttoncomponent",{"_index":757,"title":{"components/XiconButtonComponent.html":{}},"body":{"components/AccordionCommonComponent.html":{},"components/ButtonComponent.html":{},"components/ButtonGroupComponent.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"components/ConfirmTemplateComponent.html":{},"components/CoreBreadcrumbComponent.html":{},"components/DatepickerComponent.html":{},"components/DropdownComponent.html":{},"components/EmailComponent.html":{},"components/ErrorContainerComponent.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/FullNameComponent.html":{},"components/GeocoderInputComponent.html":{},"components/HeaderComponent.html":{},"components/NameComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"components/RadioComponent.html":{},"components/SampleModalComponent.html":{},"modules/SharedCoreModule.html":{},"components/SinComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{},"components/XiconButtonComponent.html":{},"changelog.html":{},"coverage.html":{},"overview.html":{}}}],["xiff",{"_index":2898,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["year",{"_index":2483,"title":{},"body":{"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"interfaces/SimpleDate.html":{},"changelog.html":{},"coverage.html":{}}}],["yeardistantfuture",{"_index":2425,"title":{},"body":{"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{}}}],["yeardistantpast",{"_index":2424,"title":{},"body":{"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{}}}],["yellow",{"_index":5473,"title":{},"body":{"todo.html":{}}}],["yem",{"_index":2399,"title":{},"body":{"interfaces/CountryList.html":{}}}],["yemen",{"_index":2400,"title":{},"body":{"interfaces/CountryList.html":{}}}],["yes",{"_index":70,"title":{},"body":{"classes/AbstractBaseForm.html":{},"classes/AbstractForm.html":{},"classes/AbstractHttpService.html":{},"classes/AbstractReactForm.html":{},"injectables/CaptchaDataService.html":{},"classes/CommonImage.html":{},"classes/CommonImageProcessingError.html":{},"classes/Container.html":{},"injectables/GeocoderService.html":{},"interfaces/IRadioItems.html":{},"classes/MoHCommonLibraryError.html":{},"injectables/PageStateService.html":{},"components/RadioComponent.html":{}}}],["yes/no",{"_index":1124,"title":{},"body":{"components/ButtonGroupComponent.html":{},"changelog.html":{}}}],["yib",{"_index":3116,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["you'll",{"_index":5541,"title":{},"body":{"additional-documentation/local-development/schematics.html":{}}}],["you're",{"_index":1079,"title":{},"body":{"components/ButtonComponent.html":{},"components/ButtonGroupComponent.html":{},"index.html":{},"additional-documentation/local-development/components.html":{}}}],["you've",{"_index":5491,"title":{},"body":{"additional-documentation/getting-started.html":{},"additional-documentation/local-development/components.html":{}}}],["young",{"_index":5436,"title":{},"body":{"index.html":{}}}],["yt",{"_index":4215,"title":{},"body":{"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{}}}],["yugoslav",{"_index":2145,"title":{},"body":{"interfaces/CountryList.html":{}}}],["yukon",{"_index":4216,"title":{},"body":{"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{}}}],["yyyy/mm/dd",{"_index":2474,"title":{},"body":{"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"classes/Person.html":{}}}],["yyyymmdd",{"_index":4066,"title":{},"body":{"classes/Person.html":{}}}],["z",{"_index":1017,"title":{},"body":{"classes/Address.html":{},"components/FullNameComponent.html":{},"interfaces/FullNameErrorMsg.html":{},"components/NameComponent.html":{},"directives/ValidateBcPostalDirective.html":{},"directives/ValidateNameDirective.html":{},"directives/ValidatePostalcodeDirective.html":{},"directives/ValidateRegionDirective.html":{}}}],["z0",{"_index":4461,"title":{},"body":{"directives/ValidateCityDirective.html":{},"directives/ValidatePostalcodeDirective.html":{},"directives/ValidateStreetDirective.html":{}}}],["z])[a",{"_index":4460,"title":{},"body":{"directives/ValidateCityDirective.html":{},"directives/ValidateRegionDirective.html":{}}}],["z][0",{"_index":4474,"title":{},"body":{"directives/ValidatePostalcodeDirective.html":{}}}],["z][a",{"_index":3342,"title":{},"body":{"components/FullNameComponent.html":{},"interfaces/FullNameErrorMsg.html":{},"components/NameComponent.html":{},"directives/ValidateNameDirective.html":{}}}],["z]\\\\d",{"_index":1019,"title":{},"body":{"classes/Address.html":{},"directives/ValidateBcPostalDirective.html":{},"directives/ValidatePostalcodeDirective.html":{}}}],["z]\\s?[0",{"_index":4476,"title":{},"body":{"directives/ValidatePostalcodeDirective.html":{}}}],["za",{"_index":3341,"title":{},"body":{"components/FullNameComponent.html":{},"interfaces/FullNameErrorMsg.html":{},"components/NameComponent.html":{},"directives/ValidateCityDirective.html":{},"directives/ValidateNameDirective.html":{},"directives/ValidatePostalcodeDirective.html":{},"directives/ValidateRegionDirective.html":{},"directives/ValidateStreetDirective.html":{}}}],["zabceghj",{"_index":1016,"title":{},"body":{"classes/Address.html":{},"directives/ValidateBcPostalDirective.html":{}}}],["zaf",{"_index":2309,"title":{},"body":{"interfaces/CountryList.html":{}}}],["zambia",{"_index":2402,"title":{},"body":{"interfaces/CountryList.html":{}}}],["zealand",{"_index":2201,"title":{},"body":{"interfaces/CountryList.html":{}}}],["zero",{"_index":3051,"title":{},"body":{"interfaces/FileUploaderMsg.html":{},"changelog.html":{}}}],["zeros",{"_index":4407,"title":{},"body":{"components/SinComponent.html":{},"changelog.html":{}}}],["zib",{"_index":3115,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["zimbabwe",{"_index":2404,"title":{},"body":{"interfaces/CountryList.html":{}}}],["zip",{"_index":858,"title":{},"body":{"interfaces/AddrLabelList.html":{},"interfaces/Maxlengths.html":{},"interfaces/ReadOnlyFields.html":{}}}],["zmb",{"_index":2401,"title":{},"body":{"interfaces/CountryList.html":{}}}],["zone",{"_index":2819,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["zone.js",{"_index":5408,"title":{},"body":{"dependencies.html":{}}}],["zoom",{"_index":1200,"title":{},"body":{"modules/CaptchaModule.html":{},"modules/SharedCoreModule.html":{},"overview.html":{}}}],["zwe",{"_index":2403,"title":{},"body":{"interfaces/CountryList.html":{}}}],["zxcvbn",{"_index":4012,"title":{},"body":{"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"coverage.html":{}}}],["zxcvbn_",{"_index":4011,"title":{},"body":{"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"classes/AbstractBaseForm.html":{"url":"classes/AbstractBaseForm.html","title":"class - AbstractBaseForm","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  AbstractBaseForm\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/common/lib/models/abstract-base-form.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                disabled\n                            \n                            \n                                loading\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Abstract\n                                canContinue\n                            \n                            \n                                    Abstract\n                                continue\n                            \n                            \n                                    Protected\n                                navigate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(router: Router)\n                    \n                \n                        \n                            \n                                Defined in projects/common/lib/models/abstract-base-form.ts:14\n                            \n                        \n\n                \n                    \n                            Constructor\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            disabled\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/common/lib/models/abstract-base-form.ts:8\n                            \n                        \n\n                \n                    \n                        Disables all inputs (todo: not implemented) \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            loading\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in projects/common/lib/models/abstract-base-form.ts:10\n                            \n                        \n\n                \n                    \n                        Show or hide the loading spinner as required, should be passed to form action bar. \n\n                    \n                \n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Abstract\n                            canContinue\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    canContinue()\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/models/abstract-base-form.ts:14\n                \n            \n\n\n            \n                \n                    Determines if the Continue button is disabled on the form action bar \n\n\n                    \n                        Returns :         boolean\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Abstract\n                            continue\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    continue()\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/models/abstract-base-form.ts:12\n                \n            \n\n\n            \n                \n                    What happens when the user clicks the continue button. Generally navigating to another page. \n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            navigate\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    navigate(url: string, queryParams?: Params)\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/models/abstract-base-form.ts:24\n                \n            \n\n\n            \n                \n                    Navigates to a route then automatically scrolls to the top of the page. \n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    url\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    queryParams\n                                    \n                                                Params\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { ViewChild } from '@angular/core';\nimport { NgForm } from '@angular/forms';\nimport { Router, Params } from '@angular/router';\n\nexport abstract class AbstractBaseForm {\n\n  /** Disables all inputs (todo: not implemented) */\n  disabled: boolean;\n  /** Show or hide the loading spinner as required, should be passed to form action bar. */\n  loading: boolean = false;\n  /** What happens when the user clicks the continue button. Generally navigating to another page. */\n  abstract continue(): void;\n  /** Determines if the Continue button is disabled on the form action bar */\n  abstract canContinue(): boolean;\n\n  /**\n   * Constructor\n   */\n  constructor(protected router: Router) {\n    this.router = router;\n  }\n\n  /** Navigates to a route then automatically scrolls to the top of the page. */\n  protected navigate(url: string, queryParams?: Params ) {\n\n    this.router.navigate([url], { queryParams: queryParams })\n      .then((data) => {\n        scrollTo();\n      });\n  }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/AbstractForm.html":{"url":"classes/AbstractForm.html","title":"class - AbstractForm","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  AbstractForm\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/common/lib/models/abstract-form.ts\n        \n\n\n            \n                Extends\n            \n            \n                        AbstractBaseForm\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                form\n                            \n                            \n                                disabled\n                            \n                            \n                                loading\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                canContinue\n                            \n                            \n                                    Protected\n                                markAllInputsTouched\n                            \n                            \n                                    Abstract\n                                canContinue\n                            \n                            \n                                    Abstract\n                                continue\n                            \n                            \n                                    Protected\n                                navigate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(router: Router)\n                    \n                \n                        \n                            \n                                Defined in projects/common/lib/models/abstract-form.ts:8\n                            \n                        \n\n                \n                    \n                            Constructor\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            form\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         NgForm\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ViewChild('formRef')\n                            \n                        \n                    \n                        \n                            \n                                    Defined in projects/common/lib/models/abstract-form.ts:8\n                            \n                        \n\n                \n                    \n                        Access to the form elements for validation \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            disabled\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                            \n                                \n                                    Inherited from         AbstractBaseForm\n\n                                \n                            \n                        \n                            \n                                    Defined in         AbstractBaseForm:8\n\n                            \n                        \n\n                \n                    \n                        Disables all inputs (todo: not implemented) \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            loading\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                    \n                        \n                            Default value : false\n                        \n                    \n                            \n                                \n                                    Inherited from         AbstractBaseForm\n\n                                \n                            \n                        \n                            \n                                    Defined in         AbstractBaseForm:10\n\n                            \n                        \n\n                \n                    \n                        Show or hide the loading spinner as required, should be passed to form action bar. \n\n                    \n                \n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            canContinue\n                        \n                        \n                    \n                \n            \n            \n                \ncanContinue()\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/models/abstract-form.ts:20\n                \n            \n\n\n            \n                \n                    Determines if the Continue button is disabled on the form action bar\n\n\n                    \n                        Returns :         boolean\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            markAllInputsTouched\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    markAllInputsTouched()\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/models/abstract-form.ts:26\n                \n            \n\n\n            \n                \n                    Runs the angular 'markAsTouched()' on all form inputs. \n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Abstract\n                            canContinue\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    canContinue()\n                \n            \n\n\n            \n                \n                    Inherited from         AbstractBaseForm\n\n                \n            \n            \n                \n                        Defined in         AbstractBaseForm:14\n\n                \n            \n\n\n            \n                \n                    Determines if the Continue button is disabled on the form action bar \n\n\n                    \n                        Returns :         boolean\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Abstract\n                            continue\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    continue()\n                \n            \n\n\n            \n                \n                    Inherited from         AbstractBaseForm\n\n                \n            \n            \n                \n                        Defined in         AbstractBaseForm:12\n\n                \n            \n\n\n            \n                \n                    What happens when the user clicks the continue button. Generally navigating to another page. \n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            navigate\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    navigate(url: string, queryParams?: Params)\n                \n            \n\n\n            \n                \n                    Inherited from         AbstractBaseForm\n\n                \n            \n            \n                \n                        Defined in         AbstractBaseForm:24\n\n                \n            \n\n\n            \n                \n                    Navigates to a route then automatically scrolls to the top of the page. \n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    url\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    queryParams\n                                    \n                                                Params\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { ViewChild } from '@angular/core';\nimport { NgForm } from '@angular/forms';\nimport { Router } from '@angular/router';\nimport { AbstractBaseForm } from './abstract-base-form';\n\nexport abstract class AbstractForm extends AbstractBaseForm {\n  /** Access to the form elements for validation */\n  @ViewChild('formRef') form: NgForm;\n\n  /**\n   * Constructor\n   */\n  constructor(protected router: Router) {\n    super(router);\n  }\n\n  /**\n   * Determines if the Continue button is disabled on the form action bar\n   */\n  canContinue(): boolean {\n    // Returns true if form is valid\n    return this.form.valid;\n  }\n\n  /** Runs the angular 'markAsTouched()' on all form inputs. */\n  protected markAllInputsTouched(): void {\n    Object.keys(this.form.form.controls).forEach(x => {\n      this.form.form.get(x).markAsTouched();\n    });\n  }\n\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/AbstractFormControl.html":{"url":"classes/AbstractFormControl.html","title":"class - AbstractFormControl","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  AbstractFormControl\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/common/lib/models/abstract-form-control.ts\n        \n\n\n            \n                Extends\n            \n            \n                        Base\n            \n\n            \n                Implements\n            \n            \n                            OnInit\n                            ControlValueAccessor\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Abstract\n                                _defaultErrMsg\n                            \n                            \n                                _onChange\n                            \n                            \n                                _onTouched\n                            \n                            \n                                    Public\n                                objectId\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                            \n                                registerOnChange\n                            \n                            \n                                registerOnTouched\n                            \n                            \n                                    Protected\n                                registerValidation\n                            \n                            \n                                setDisabledState\n                            \n                            \n                                    Protected\n                                setErrorMsg\n                            \n                            \n                                    Private\n                                validateLabel\n                            \n                            \n                                    Abstract\n                                writeValue\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                disabled\n                            \n                            \n                                errorMessage\n                            \n                            \n                                label\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Abstract\n                            _defaultErrMsg\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         ErrorMessage\n\n                        \n                    \n                    \n                        \n                            Default value : {}\n                        \n                    \n                        \n                            \n                                    Defined in projects/common/lib/models/abstract-form-control.ts:11\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            _onChange\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : () => {...}\n                        \n                    \n                        \n                            \n                                    Defined in projects/common/lib/models/abstract-form-control.ts:23\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            _onTouched\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : () => {...}\n                        \n                    \n                        \n                            \n                                    Defined in projects/common/lib/models/abstract-form-control.ts:24\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            objectId\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : UUID.UUID()\n                        \n                    \n                            \n                                \n                                    Inherited from         Base\n\n                                \n                            \n                        \n                            \n                                    Defined in         Base:11\n\n                            \n                        \n\n                \n                    \n                        An identifier for parents to keep track of components \n\n                    \n                \n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/models/abstract-form-control.ts:27\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            registerOnChange\n                        \n                        \n                    \n                \n            \n            \n                \nregisterOnChange(fn: any)\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/models/abstract-form-control.ts:35\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    fn\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            registerOnTouched\n                        \n                        \n                    \n                \n            \n            \n                \nregisterOnTouched(fn: any)\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/models/abstract-form-control.ts:40\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    fn\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            registerValidation\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    registerValidation(ngControl: NgControl, fn: ValidationErrors)\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/models/abstract-form-control.ts:68\n                \n            \n\n\n            \n                \n                    Register self validating method\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    ngControl\n                                    \n                                                NgControl\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                    \n                                \n                                \n                                    fn\n                                    \n                                                ValidationErrors\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        function for validating self\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            setDisabledState\n                        \n                        \n                    \n                \n            \n            \n                \nsetDisabledState(isDisabled: boolean)\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/models/abstract-form-control.ts:45\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    isDisabled\n                                    \n                                                boolean\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            setErrorMsg\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    setErrorMsg()\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/models/abstract-form-control.ts:49\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            validateLabel\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    validateLabel()\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/models/abstract-form-control.ts:88\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Abstract\n                            writeValue\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    writeValue(value: any)\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/models/abstract-form-control.ts:32\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n            \n    Inputs\n        \n            \n                \n                    \n                        \n                        disabled\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/models/abstract-form-control.ts:16\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        errorMessage\n                    \n                \n                \n                    \n                        Type :         ErrorMessage\n\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/models/abstract-form-control.ts:19\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        label\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/models/abstract-form-control.ts:14\n                            \n                        \n            \n        \n\n\n\n\n    \n\n\n    \n        import { ErrorMessage, replaceLabelTag } from './error-message.interface';\nimport { Input, OnInit } from '@angular/core';\nimport { Base } from './base';\nimport { ControlValueAccessor, NgControl, ValidationErrors } from '@angular/forms';\nimport { MoHCommonLibraryError } from '../../helpers/library-error';\n\n// Class does not get exported - used internally\nexport abstract class AbstractFormControl extends Base implements OnInit, ControlValueAccessor {\n\n  // Default messages - must be defined in each component\n  abstract _defaultErrMsg: ErrorMessage = {};\n\n  // Must be defined in component as default labels are specific to component\n  @Input() abstract label: string;\n\n  @Input() disabled: boolean = false;\n\n  // Input to allow developers to change default messages\n  @Input() errorMessage: ErrorMessage;\n\n\n  // Required for implementing ControlValueAccessor\n  _onChange = (_: any) => {};\n  _onTouched = (_?: any) => {};\n\n\n  ngOnInit() {\n    this.setErrorMsg();\n  }\n\n  // Required for implementing ControlValueAccessor\n  abstract writeValue( value: any ): void;\n\n  // Register change function\n  registerOnChange( fn: any ): void {\n    this._onChange = fn;\n  }\n\n  // Register touched function\n  registerOnTouched( fn: any ): void {\n    this._onTouched = fn;\n  }\n\n  // Disable control\n  setDisabledState( isDisabled: boolean ): void {\n    this.disabled = isDisabled;\n  }\n\n  protected setErrorMsg() {\n    this.validateLabel();\n\n    // Some components have logic based off no label being submitted - strip off '(optional)'\n    const _label = this.label ? this.label.replace( '(optional)' , '' ) : 'Field';\n\n    if ( this.errorMessage ) {\n      Object.keys(this.errorMessage).map( x => this._defaultErrMsg[x] = this.errorMessage[x] );\n    }\n\n    // Replace label tags with label\n    Object.keys(this._defaultErrMsg).map( x => this._defaultErrMsg[x] = replaceLabelTag( this._defaultErrMsg[x] , _label ) );\n  }\n\n  /**\n   * Register self validating method\n   * @param control control directive\n   * @param fn function for validating self\n   */\n  protected registerValidation( ngControl: NgControl, fn: ValidationErrors) {\n\n    // Register validateSelf validator so that it will be added on component initialization.\n    // Makes the component a self validating component.\n\n    return Promise.resolve().then(() => {\n\n      if ( ngControl ) {\n\n        const allValidators = [fn.bind(this)];\n        if ( ngControl.control.validator ) {\n          allValidators.push( ngControl.control.validator );\n        }\n        ngControl.control.setValidators(allValidators);\n        ngControl.control.updateValueAndValidity();\n        return ngControl;\n      }\n    });\n  }\n\n  private validateLabel() {\n    const labelType = typeof this.label;\n    // If labelType is falsy, do not throw the error, since we have a backup label in case it's falsy.\n    if (labelType !== 'string' && this.label) {\n      const typeMsg = ` Invalid input provided to [label].  Label must be a string and you provided a ${labelType}`;\n      throw new MoHCommonLibraryError(typeMsg);\n    }\n  }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/AbstractHttpService.html":{"url":"classes/AbstractHttpService.html","title":"class - AbstractHttpService","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  AbstractHttpService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/common/lib/services/abstract-api-service.ts\n        \n\n            \n                Description\n            \n            \n                Abstract class for HTTP Service\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                    Abstract\n                                _headers\n                            \n                            \n                                    Protected\n                                logHTTPRequestsToConsole\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                generateUUID\n                            \n                            \n                                    Protected\n                                get\n                            \n                            \n                                    Protected\n                                    Abstract\n                                handleError\n                            \n                            \n                                    Protected\n                                post\n                            \n                            \n                                    Protected\n                                setupRequest\n                            \n                            \n                                    Protected\n                                uploadAttachment\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    httpOptions\n                                \n                            \n                        \n                    \n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(http: HttpClient)\n                    \n                \n                        \n                            \n                                Defined in projects/common/lib/services/abstract-api-service.ts:13\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                        HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                                Abstract\n                            _headers\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         HttpHeaders\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/common/lib/services/abstract-api-service.ts:18\n                            \n                        \n\n                \n                    \n                        The headers to send along with every GET and POST. \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            logHTTPRequestsToConsole\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in projects/common/lib/services/abstract-api-service.ts:13\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            generateUUID\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    generateUUID()\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/services/abstract-api-service.ts:64\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            get\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    get(url, queryParams?: HttpParams)\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/services/abstract-api-service.ts:24\n                \n            \n\n            \n                \n                    Type parameters :\n                    \n                        T\n                    \n                \n            \n\n            \n                \n                    Makes a GET request to the specified URL, using headers and HTTP options specified in their respective methods.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    url\n                                    \n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Target URL to make the GET request\n\n                                    \n                                \n                                \n                                    queryParams\n                                    \n                                                HttpParams\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                    \n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            Abstract\n                            handleError\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    handleError(error: HttpErrorResponse)\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/services/abstract-api-service.ts:61\n                \n            \n\n\n            \n                \n                    Handles all failed requests that throw either a server error (400/500) or a client error (e.g. lost internet). \n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    error\n                                    \n                                                HttpErrorResponse\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            post\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    post(url, body)\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/services/abstract-api-service.ts:32\n                \n            \n\n            \n                \n                    Type parameters :\n                    \n                        T\n                    \n                \n            \n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    url\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    body\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            setupRequest\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    setupRequest(observable: Observable)\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/services/abstract-api-service.ts:40\n                \n            \n\n            \n                \n                    Type parameters :\n                    \n                        T\n                    \n                \n            \n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    observable\n                                    \n                                            Observable\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            uploadAttachment\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    uploadAttachment(relativeUrl: string, attachment: CommonImage)\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/services/abstract-api-service.ts:75\n                \n            \n\n\n            \n                \n                    Uploads an individual attachment.  All you need to do is set the url.\nNote: urls often include UUIDs, so this must be an application decision.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    relativeUrl\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        URL to hit, must include UUIDs of application and CommonImage\n\n                                    \n                                \n                                \n                                    attachment\n                                    \n                                                CommonImage\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        CommonImage to upload\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        httpOptions\n                    \n                \n\n                \n                    \n                        gethttpOptions()\n                    \n                \n                            \n                                \n                                    Defined in projects/common/lib/services/abstract-api-service.ts:54\n                                \n                            \n                    \n                        \n                                The HttpOptions object that Angular takes for GET and POST requests. Used in every HTTP request from this service. \n\n\n                                \n                                    Returns :     literal type\n\n                                \n                        \n                    \n\n            \n        \n\n    \n\n\n    \n        import { HttpClient, HttpErrorResponse, HttpHeaders, HttpParams } from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { catchError, tap } from 'rxjs/operators';\nimport { UUID } from 'angular2-uuid';\nimport { CommonImage } from '../models/images.model';\n\n\n/**\n * Abstract class for HTTP Service\n */\nexport abstract class AbstractHttpService {\n\n  protected logHTTPRequestsToConsole: boolean = false;\n\n  constructor(protected http: HttpClient) {}\n\n  /** The headers to send along with every GET and POST. */\n  protected abstract _headers: HttpHeaders;\n\n  /**\n   * Makes a GET request to the specified URL, using headers and HTTP options specified in their respective methods.\n   * @param url Target URL to make the GET request\n   */\n  protected get(url, queryParams?: HttpParams): Observable {\n    /** The HTTP request observer with always on error handling */\n    const httpOpts = this.httpOptions;\n    httpOpts.params = queryParams ? queryParams : undefined;\n    const observable = this.http.get(url, httpOpts);\n    return this.setupRequest(observable);\n  }\n\n  protected post(url, body): Observable {\n    if (this.logHTTPRequestsToConsole) {\n      console.log( 'Post Request: ', body );\n    }\n    const observable = this.http.post(url, body, this.httpOptions);\n    return this.setupRequest(observable);\n  }\n\n  protected setupRequest(observable: Observable ): Observable {\n    // All failed requests should trigger the abstract method handleError\n    observable = observable.pipe(catchError(this.handleError.bind(this)));\n    // Optionally add console logging\n    if (this.logHTTPRequestsToConsole) {\n      observable = observable.pipe(tap(\n        data => console.log('HTTP Success: ', data),\n        error => console.log('HTTP Error: ', error)\n      ));\n    }\n    return observable;\n  }\n\n  /** The HttpOptions object that Angular takes for GET and POST requests. Used in every HTTP request from this service. */\n  protected get httpOptions(): {headers: HttpHeaders, params?: HttpParams} {\n    return {\n      headers: this._headers\n    };\n  }\n\n  /** Handles all failed requests that throw either a server error (400/500) or a client error (e.g. lost internet). */\n  protected abstract handleError(error: HttpErrorResponse);\n\n  /* Helper function for generating a unique UUID per request for logging. */\n  protected generateUUID() {\n    return UUID.UUID();\n  }\n\n  /**\n   * Uploads an individual attachment.  All you need to do is set the url.\n   * Note: urls often include UUIDs, so this must be an application decision.\n   *\n   * @param relativeUrl URL to hit, must include UUIDs of application and CommonImage\n   * @param attachment CommonImage to upload\n   */\n  protected uploadAttachment(relativeUrl: string, attachment: CommonImage) {\n    const options = {headers: this._headers, responseType: 'text' as 'text'};\n\n    const binary = atob(attachment.fileContent.split(',')[1]);\n    const array = [];\n    for (let i = 0; i \n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AbstractPageGuardService.html":{"url":"injectables/AbstractPageGuardService.html","title":"injectable - AbstractPageGuardService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  AbstractPageGuardService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/common/lib/services/abstract-page-guard.service.ts\n        \n\n            \n                Description\n            \n            \n                The abstract class for our route guard service.  You MUST setup the NgModule\nto provide your application's service in place of AbstractGuardService.\nYour application's load page guard service can do whatever it wants as long as it\nimplements these methods.\nMore information on setup can be found in @see LoadPageGuardService.\n\n            \n\n\n            \n                Example\n            \n            \n                        \n                            providers: [\n         ...\n         { provide: AbstractPageGuardService, useExisting: EnrolService },\n         LoadPageGuardService\n]\n                        \n            \n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Abstract\n                                canBypassGuards\n                            \n                            \n                                    Public\n                                    Abstract\n                                canNavigateToUrl\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            Abstract\n                            canBypassGuards\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    canBypassGuards()\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/services/abstract-page-guard.service.ts:24\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         boolean\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            Abstract\n                            canNavigateToUrl\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    canNavigateToUrl(url: string)\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/services/abstract-page-guard.service.ts:25\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    url\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\n\n/**\n * The abstract class for our route guard service.  You MUST setup the NgModule\n * to provide your application's service in place of AbstractGuardService.\n *\n * Your application's load page guard service can do whatever it wants as long as it\n * implements these methods.\n *\n * More information on setup can be found in @see LoadPageGuardService.\n *\n *  @example\n *\n *                providers: [\n *                        ...\n *                        { provide: AbstractPageGuardService, useExisting: EnrolService },\n *                        LoadPageGuardService\n *                ]\n *\n */\n@Injectable()\nexport abstract class AbstractPageGuardService {\n\n  public abstract canBypassGuards(): boolean;\n  public abstract canNavigateToUrl( url: string ): boolean;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AbstractPgCheckService.html":{"url":"injectables/AbstractPgCheckService.html","title":"injectable - AbstractPgCheckService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  AbstractPgCheckService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/common/lib/services/abstract-pg-check.service.ts\n        \n\n\n\n            \n                Example\n            \n            \n                        \n                            //registration.module.ts\nproviders: [\n...\n{ provide: AbstractPgCheckService, useExisting: RegistrationService },\nRouteGuardService\n]\n                        \n            \n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Abstract\n                                canBypassGuards\n                            \n                            \n                                    Public\n                                    Abstract\n                                getStartUrl\n                            \n                            \n                                    Public\n                                    Abstract\n                                isPageComplete\n                            \n                            \n                                    Public\n                                    Abstract\n                                isPrerequisiteComplete\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            Abstract\n                            canBypassGuards\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    canBypassGuards()\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/services/abstract-pg-check.service.ts:25\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         boolean\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            Abstract\n                            getStartUrl\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getStartUrl()\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/services/abstract-pg-check.service.ts:28\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            Abstract\n                            isPageComplete\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    isPageComplete(url: string)\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/services/abstract-pg-check.service.ts:26\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    url\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            Abstract\n                            isPrerequisiteComplete\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    isPrerequisiteComplete()\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/services/abstract-pg-check.service.ts:27\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         boolean\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\n\n/**\n * @deprecated\n * The abstract class for our route guard service.  You MUST setup the NgModule\n * to provide your application's service in place of AbstractPgCheckService.\n *\n * Your application's route guard service can do whatever it wants as long as it\n * implements these methods.\n *\n * More information on setup can be found in @see RouteGuardService.\n *\n *  @example\n *                //registration.module.ts\n *                providers: [\n *                        ...\n *                        { provide: AbstractPgCheckService, useExisting: RegistrationService },\n *                        RouteGuardService\n *                ]\n *\n */\n@Injectable()\nexport abstract class AbstractPgCheckService {\n\n  public abstract canBypassGuards(): boolean;\n  public abstract isPageComplete( url: string ): boolean;\n  public abstract isPrerequisiteComplete(): boolean;\n  public abstract getStartUrl(): string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/AbstractReactForm.html":{"url":"classes/AbstractReactForm.html","title":"class - AbstractReactForm","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  AbstractReactForm\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/common/lib/models/abstract-react-form.ts\n        \n\n\n            \n                Extends\n            \n            \n                        AbstractBaseForm\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                formGroup\n                            \n                            \n                                disabled\n                            \n                            \n                                loading\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                _markAllAsTouched\n                            \n                            \n                                canContinue\n                            \n                            \n                                    Protected\n                                markAllInputsTouched\n                            \n                            \n                                    Abstract\n                                canContinue\n                            \n                            \n                                    Abstract\n                                continue\n                            \n                            \n                                    Protected\n                                navigate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(router: Router)\n                    \n                \n                        \n                            \n                                Defined in projects/common/lib/models/abstract-react-form.ts:9\n                            \n                        \n\n                \n                    \n                            Constructor\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            formGroup\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         FormGroup\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/common/lib/models/abstract-react-form.ts:9\n                            \n                        \n\n                \n                    \n                        Access to the form elements for validation \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            disabled\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                            \n                                \n                                    Inherited from         AbstractBaseForm\n\n                                \n                            \n                        \n                            \n                                    Defined in         AbstractBaseForm:8\n\n                            \n                        \n\n                \n                    \n                        Disables all inputs (todo: not implemented) \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            loading\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                    \n                        \n                            Default value : false\n                        \n                    \n                            \n                                \n                                    Inherited from         AbstractBaseForm\n\n                                \n                            \n                        \n                            \n                                    Defined in         AbstractBaseForm:10\n\n                            \n                        \n\n                \n                    \n                        Show or hide the loading spinner as required, should be passed to form action bar. \n\n                    \n                \n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            _markAllAsTouched\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    _markAllAsTouched(fg: FormGroup)\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/models/abstract-react-form.ts:47\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    fg\n                                    \n                                                FormGroup\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            canContinue\n                        \n                        \n                    \n                \n            \n            \n                \ncanContinue()\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/models/abstract-react-form.ts:22\n                \n            \n\n\n            \n                \n                    Determines if the Continue button is disabled on the form action bar\nCan be overrided\n\n\n                    \n                        Returns :         boolean\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            markAllInputsTouched\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    markAllInputsTouched(fg: FormGroup | FormGroup[])\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/models/abstract-react-form.ts:29\n                \n            \n\n\n            \n                \n                    Runs the angular 'markAsTouched()' on all form inputs. \n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                \n                            \n                            \n                                \n                                    fg\n                                    \n                                            FormGroup | FormGroup[]\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        null\n                                    \n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Abstract\n                            canContinue\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    canContinue()\n                \n            \n\n\n            \n                \n                    Inherited from         AbstractBaseForm\n\n                \n            \n            \n                \n                        Defined in         AbstractBaseForm:14\n\n                \n            \n\n\n            \n                \n                    Determines if the Continue button is disabled on the form action bar \n\n\n                    \n                        Returns :         boolean\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Abstract\n                            continue\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    continue()\n                \n            \n\n\n            \n                \n                    Inherited from         AbstractBaseForm\n\n                \n            \n            \n                \n                        Defined in         AbstractBaseForm:12\n\n                \n            \n\n\n            \n                \n                    What happens when the user clicks the continue button. Generally navigating to another page. \n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            navigate\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    navigate(url: string, queryParams?: Params)\n                \n            \n\n\n            \n                \n                    Inherited from         AbstractBaseForm\n\n                \n            \n            \n                \n                        Defined in         AbstractBaseForm:24\n\n                \n            \n\n\n            \n                \n                    Navigates to a route then automatically scrolls to the top of the page. \n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    url\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    queryParams\n                                    \n                                                Params\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { FormGroup } from '@angular/forms';\nimport { Router } from '@angular/router';\nimport { AbstractBaseForm } from './abstract-base-form';\n\n\nexport abstract class AbstractReactForm extends AbstractBaseForm {\n\n  /** Access to the form elements for validation */\n  formGroup: FormGroup;\n\n  /**\n   * Constructor\n   */\n  constructor(protected router: Router) {\n    super(router);\n  }\n\n  /**\n   * Determines if the Continue button is disabled on the form action bar\n   * Can be overrided\n   */\n  canContinue(): boolean {\n\n    // Returns true if form is valid\n    return this.formGroup.valid;\n  }\n\n  /** Runs the angular 'markAsTouched()' on all form inputs. */\n  protected markAllInputsTouched(fg: FormGroup | FormGroup[] = null): void {\n\n    // Passed in parameter, set each as touched\n    if ( fg ) {\n      if ( Array.isArray( fg ) ) {\n        // For each form mark as touched to display errors\n        return fg.forEach( x => {\n          this._markAllAsTouched( x );\n        });\n      }\n      // Returns true if form is valid\n      this._markAllAsTouched( fg );\n    } else {\n      this._markAllAsTouched( this.formGroup );\n    }\n  }\n\n  // Temporary until libray forms updated to version.\n  private _markAllAsTouched(fg: FormGroup) {\n    const controls: Array = Object.keys(fg.controls);\n\n    for (const control of controls) {\n      fg.controls[control].markAsTouched();\n    }\n  }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/AbstractTestPage.html":{"url":"classes/AbstractTestPage.html","title":"class - AbstractTestPage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  AbstractTestPage\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/common/e2e/src/abstract-test-page.ts\n        \n\n            \n                Description\n            \n            \n                AbstractTestPage provides common functionality for e2e tests that make use of\nthe MoH Common Lib.  For example, getNameComponent() and\ngetNameComponentVal()  both correspond to the NameComponent.\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                continueButton\n                            \n                            \n                                    Public\n                                skipToContentButton\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                agreeConsentModal\n                            \n                            \n                                checkConsentModal\n                            \n                            \n                                clickButton\n                            \n                            \n                                clickCheckBox\n                            \n                            \n                                clickConsentModalContinue\n                            \n                            \n                                clickLink\n                            \n                            \n                                clickSkipToContent\n                            \n                            \n                                continue\n                            \n                            \n                                countLength\n                            \n                            \n                                formErrors\n                            \n                            \n                                getContinueButton\n                            \n                            \n                                    Async\n                                getNameComponent\n                            \n                            \n                                    Async\n                                getNameComponentVal\n                            \n                            \n                                    Abstract\n                                navigateTo\n                            \n                            \n                                scrollDown\n                            \n                            \n                                scrollUp\n                            \n                            \n                                selectOption\n                            \n                            \n                                typeOption\n                            \n                            \n                                typeText\n                            \n                            \n                                typeTextFirstOccurrence\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            continueButton\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     WebElement\n\n                        \n                    \n                    \n                        \n                            Default value : element(by.css('.form-bar .submit'))\n                        \n                    \n                        \n                            \n                                    Defined in projects/common/e2e/src/abstract-test-page.ts:13\n                            \n                        \n\n                \n                    \n                        Clicking this button should complete the page, navigate to the next one.\nWe default it to .form-bar .submit but you may overwrite as necessary.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            skipToContentButton\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     WebElement\n\n                        \n                    \n                    \n                        \n                            Default value : element(by.css('.skip-to-content'))\n                        \n                    \n                        \n                            \n                                    Defined in projects/common/e2e/src/abstract-test-page.ts:18\n                            \n                        \n\n                \n                    \n                        This is the 'Skip To Content' button for Screen Readers that appears when\ntabbed to. May be overwritten as necessary.\n\n                    \n                \n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            agreeConsentModal\n                        \n                        \n                    \n                \n            \n            \n                \nagreeConsentModal()\n                \n            \n\n\n            \n                \n                    Defined in projects/common/e2e/src/abstract-test-page.ts:138\n                \n            \n\n\n            \n                \n                    Clicks the checkbox which means the user agrees with the info collection notice.\nInfoColectionNoticeComponent \n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            checkConsentModal\n                        \n                        \n                    \n                \n            \n            \n                \ncheckConsentModal()\n                \n            \n\n\n            \n                \n                    Defined in projects/common/e2e/src/abstract-test-page.ts:153\n                \n            \n\n\n            \n                \n                    Checks if the consent modal is currently displayed or not\n\n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            clickButton\n                        \n                        \n                    \n                \n            \n            \n                \nclickButton(classVal: string, text: string)\n                \n            \n\n\n            \n                \n                    Defined in projects/common/e2e/src/abstract-test-page.ts:122\n                \n            \n\n\n            \n                \n                    Clicks the button based on the text specified\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    classVal\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Human readable class value for a button\n\n                                    \n                                \n                                \n                                    text\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Text inside the button\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            clickCheckBox\n                        \n                        \n                    \n                \n            \n            \n                \nclickCheckBox(refNameVal: string)\n                \n            \n\n\n            \n                \n                    Defined in projects/common/e2e/src/abstract-test-page.ts:130\n                \n            \n\n\n            \n                \n                    Clicks the check box based on the ng-reflect-name component\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    refNameVal\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Value of ng-reflect-name component\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            clickConsentModalContinue\n                        \n                        \n                    \n                \n            \n            \n                \nclickConsentModalContinue()\n                \n            \n\n\n            \n                \n                    Defined in projects/common/e2e/src/abstract-test-page.ts:146\n                \n            \n\n\n            \n                \n                    Clicks continue inside the modal\nInfoColectionNoticeComponent \n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            clickLink\n                        \n                        \n                    \n                \n            \n            \n                \nclickLink(label: string, text: string)\n                \n            \n\n\n            \n                \n                    Defined in projects/common/e2e/src/abstract-test-page.ts:178\n                \n            \n\n\n            \n                \n                    Clicks the link based from the label and text provided\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    label\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    text\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            clickSkipToContent\n                        \n                        \n                    \n                \n            \n            \n                \nclickSkipToContent()\n                \n            \n\n\n            \n                \n                    Defined in projects/common/e2e/src/abstract-test-page.ts:47\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            continue\n                        \n                        \n                    \n                \n            \n            \n                \ncontinue()\n                \n            \n\n\n            \n                \n                    Defined in projects/common/e2e/src/abstract-test-page.ts:34\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            countLength\n                        \n                        \n                    \n                \n            \n            \n                \ncountLength(refNameVal: string)\n                \n            \n\n\n            \n                \n                    Defined in projects/common/e2e/src/abstract-test-page.ts:186\n                \n            \n\n\n            \n                \n                    Counts the number of options inside a dropdown box\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    refNameVal\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            formErrors\n                        \n                        \n                    \n                \n            \n            \n                \nformErrors()\n                \n            \n\n\n            \n                \n                    Defined in projects/common/e2e/src/abstract-test-page.ts:76\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getContinueButton\n                        \n                        \n                    \n                \n            \n            \n                \ngetContinueButton()\n                \n            \n\n\n            \n                \n                    Defined in projects/common/e2e/src/abstract-test-page.ts:38\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            getNameComponent\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getNameComponent(labelName: string)\n                \n            \n\n\n            \n                \n                    Defined in projects/common/e2e/src/abstract-test-page.ts:60\n                \n            \n\n\n            \n                \n                    NameComponent - Returns the NameComponent for an associated human\nreadable label. If the label is a duplicate it will grab the first one\nonly.\nTODO: Update to \"common-name\" component when it's imported from PRIME\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    labelName\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Human redable label name.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            getNameComponentVal\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getNameComponentVal(labelName: string)\n                \n            \n\n\n            \n                \n                    Defined in projects/common/e2e/src/abstract-test-page.ts:72\n                \n            \n\n\n            \n                \n                    NameComponent - Returns the value within a given NameComponent\nTODO: Update to \"common-name\" component when it's imported from PRIME\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    labelName\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Human readable label name\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Abstract\n                            navigateTo\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    navigateTo()\n                \n            \n\n\n            \n                \n                    Defined in projects/common/e2e/src/abstract-test-page.ts:32\n                \n            \n\n\n            \n                \n                    Every class should override this to point to the page it is testing.\nCalling navigateTo should go to the corresponding url this page tests.   *\nNote - We encourage hardcoding all links in e2e tests and not sharing a\nconstants file with the application. While this leads to more work, it\navoids the case where incorrect constants (e.g. a typo in a URL) pass the\ntests.\n\n\n                    \n                        Example :\n                        \n                            return browser.get(&#39;/enrolment/profile&#39;);\n                        \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            scrollDown\n                        \n                        \n                    \n                \n            \n            \n                \nscrollDown()\n                \n            \n\n\n            \n                \n                    Defined in projects/common/e2e/src/abstract-test-page.ts:43\n                \n            \n\n\n            \n                \n                    Scrolls down to the bottom of the page \n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            scrollUp\n                        \n                        \n                    \n                \n            \n            \n                \nscrollUp()\n                \n            \n\n\n            \n                \n                    Defined in projects/common/e2e/src/abstract-test-page.ts:160\n                \n            \n\n\n            \n                \n                    Scrolls up to the top of the page\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            selectOption\n                        \n                        \n                    \n                \n            \n            \n                \nselectOption(labelId: string, optionText: string)\n                \n            \n\n\n            \n                \n                    Defined in projects/common/e2e/src/abstract-test-page.ts:91\n                \n            \n\n\n            \n                \n                    Selects from an ng-select component. This includes DropdownComponent\nothers, like country, province, etc.\nTODO - Need to test this works! Right now just copied from GitHub with\nminor tweaks. IDEA - Mirror getNameComponent, where we lookup via the label\ntext and use the 'for' attribute.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    labelId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        corresponds to labelForId on the \n\n                                    \n                                \n                                \n                                    optionText\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        the option we want to select\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            typeOption\n                        \n                        \n                    \n                \n            \n            \n                \ntypeOption(labelId: string, data: string)\n                \n            \n\n\n            \n                \n                    Defined in projects/common/e2e/src/abstract-test-page.ts:102\n                \n            \n\n\n            \n                \n                    Works on same NgSelect components but it sends custom text instead of\nselecting a given choice.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    labelId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        corresponds to labelForId on the \n\n                                    \n                                \n                                \n                                    data\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        the text we want to type\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            typeText\n                        \n                        \n                    \n                \n            \n            \n                \ntypeText(refNameVal: string, text: string)\n                \n            \n\n\n            \n                \n                    Defined in projects/common/e2e/src/abstract-test-page.ts:113\n                \n            \n\n\n            \n                \n                    Enter text into an input via ng-reflect-name component\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    refNameVal\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Value of ng-reflect-name component\n\n                                    \n                                \n                                \n                                    text\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Text to enter into the input\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            typeTextFirstOccurrence\n                        \n                        \n                    \n                \n            \n            \n                \ntypeTextFirstOccurrence(refNameVal: string, text: string)\n                \n            \n\n\n            \n                \n                    Defined in projects/common/e2e/src/abstract-test-page.ts:169\n                \n            \n\n\n            \n                \n                    Types the text inside the first ocurrence of input field\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    refNameVal\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Value of ng-reflect-name component\n\n                                    \n                                \n                                \n                                    text\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Text to enter into the input\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { browser, by, element, WebElement, $$, protractor } from 'protractor';\n\n/**\n * AbstractTestPage provides common functionality for e2e tests that make use of\n * the MoH Common Lib.  For example, `getNameComponent()` and\n * `getNameComponentVal()`  both correspond to the NameComponent.\n */\nexport abstract class AbstractTestPage {\n  /**\n   * Clicking this button should complete the page, navigate to the next one.\n   * We default it to `.form-bar .submit` but you may overwrite as necessary.\n   */\n  public continueButton: WebElement = element(by.css('.form-bar .submit'));\n  /**\n   * This is the 'Skip To Content' button for Screen Readers that appears when\n   * tabbed to. May be overwritten as necessary.\n   */\n  public skipToContentButton: WebElement = element(by.css('.skip-to-content'));\n\n  /**\n   * Every class should override this to point to the page it is testing.\n   * Calling navigateTo should go to the corresponding url this page tests.   *\n   *\n   * Note - We encourage hardcoding all links in e2e tests and _not_ sharing a\n   * constants file with the application. While this leads to more work, it\n   * avoids the case where incorrect constants (e.g. a typo in a URL) pass the\n   * tests.\n   *\n   @example\n   *    return browser.get('/enrolment/profile');\n   */\n  abstract navigateTo(): any;\n\n  continue() {\n    this.continueButton.click();\n  }\n\n  getContinueButton() {\n    return this.continueButton;\n  }\n\n  /** Scrolls down to the bottom of the page */\n  scrollDown() {\n    browser.executeScript('window.scrollTo(0, document.body.scrollHeight)');\n  }\n\n  clickSkipToContent() {\n    this.skipToContentButton.click();\n  }\n\n  /**\n   * **NameComponent** - Returns the NameComponent for an associated human\n   * readable label. If the label is a duplicate it will grab the first one\n   * only.\n   *\n   * TODO: Update to \"common-name\" component when it's imported from PRIME\n   *\n   * @param labelName Human redable label name.\n   */\n  async getNameComponent(labelName: string): Promise {\n    const label = element.all(by.cssContainingText('lib-prime-name label', labelName)).first();\n    return element(by.id(await label.getAttribute('for')));\n  }\n\n  /**\n   * **NameComponent** - Returns the value within a given NameComponent\n   *\n   * TODO: Update to \"common-name\" component when it's imported from PRIME\n   *\n   * @param labelName Human readable label name\n   */\n  async getNameComponentVal(labelName: string): Promise {\n    return (await this.getNameComponent(labelName)).getAttribute('value');\n  }\n\n  formErrors() {\n    return $$('[role=alert] .text-danger');\n  }\n\n  /**\n   * Selects from an ng-select component. This includes DropdownComponent\n   * others, like country, province, etc.\n   *\n   * TODO - Need to test this works! Right now just copied from GitHub with\n   * minor tweaks. IDEA - Mirror getNameComponent, where we lookup via the label\n   * text and use the 'for' attribute.\n   *\n   * @param labelId corresponds to labelForId on the \n   * @param optionText the option we want to select\n   */\n  selectOption(labelId: string, optionText: string) {\n    element(by.css(`ng-select[id=\"${labelId}\"]`)).click(); // opens dropdown\n    element(by.cssContainingText('span.ng-option-label', optionText)).click(); // selects option by provided text\n  }\n\n  /**\n   * Works on same NgSelect components but it sends custom text instead of\n   * selecting a given choice.\n   * @param labelId corresponds to labelForId on the \n   * @param data the text we want to type\n   */\n  typeOption(labelId: string, data: string) {\n    element(by.css(`ng-select[id=\"${labelId}\"]`)).click(); // opens dropdown\n    element(by.css(`input[role=\"combobox\"]`)).sendKeys(data); // type option\n    browser.actions().sendKeys(protractor.Key.ENTER).perform(); // hit enter key\n  }\n\n  /**\n   * Enter text into an input via ng-reflect-name component\n   * @param refNameVal Value of ng-reflect-name component\n   * @param text Text to enter into the input\n   */\n  typeText(refNameVal: string, text: string) {\n    element(by.css(`input[ng-reflect-name^=\"${refNameVal}\"]`)).sendKeys(text);\n  }\n\n  /**\n   * Clicks the button based on the text specified\n   * @param classVal Human readable class value for a button\n   * @param text Text inside the button\n   */\n  clickButton(classVal: string, text: string) {\n    element(by.cssContainingText(`button[class*=\"${classVal}\"]`, text)).click();\n  }\n\n  /**\n   * Clicks the check box based on the ng-reflect-name component\n   * @param refNameVal Value of ng-reflect-name component\n   */\n  clickCheckBox(refNameVal: string) {\n    element(by.css(`input[ng-reflect-name=\"${refNameVal}\"]`)).click();\n  }\n\n  /**\n   * Clicks the checkbox which means the user agrees with the info collection notice.\n   * InfoColectionNoticeComponent \n   */\n  agreeConsentModal() {\n    element(by.css('label[for=\"agree\"]')).element(by.css('strong')).click();\n  }\n\n  /**\n   * Clicks continue inside the modal\n   * InfoColectionNoticeComponent \n   */\n  clickConsentModalContinue() {\n    element(by.css('div[class=\"modal-footer\"]')).element(by.css('button[type=\"submit\"]')).click();\n  }\n\n  /**\n   * Checks if the consent modal is currently displayed or not\n   */\n  checkConsentModal() {\n    return element(by.css('common-consent-modal')).element(by.css('div[aria-labelledby=\"myLargeModalLabel\"]')).isDisplayed();\n  }\n\n  /**\n   * Scrolls up to the top of the page\n   */\n  scrollUp() {\n      browser.executeScript('window.scrollTo(0,0)');\n  }\n\n  /**\n   * Types the text inside the first ocurrence of input field\n   * @param refNameVal Value of ng-reflect-name component\n   * @param text Text to enter into the input\n   */\n  typeTextFirstOccurrence(refNameVal: string, text: string) {\n      element.all(by.css(`input[ng-reflect-name^=\"${refNameVal}\"]`)).first().sendKeys(text);\n  }\n\n  /**\n   * Clicks the link based from the label and text provided\n   * @param label\n   * @param text\n   */\n  clickLink(label: string, text: string) {\n      element(by.cssContainingText(label, text)).click();\n  }\n\n  /**\n   * Counts the number of options inside a dropdown box\n   * @param refNameVal\n   */\n  countLength(refNameVal: string){\n      return $$(`select[ng-reflect-name^=\"${refNameVal}\"] option`);\n  }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/AccordionCommonComponent.html":{"url":"components/AccordionCommonComponent.html","title":"component - AccordionCommonComponent","body":"\n                   \n\n\n\n\n\n  Components\n  AccordionCommonComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    projects/common/lib/components/accordion/accordion.component.ts\n\n\n    \n        Description\n    \n    \n        AccordionComponent is a\n\n    \n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n    \n        Example\n    \n    \n                \n                    \n\n                \n    \n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                common-accordion\n            \n\n            \n                styleUrls\n                ./accordion.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./accordion.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                expandText\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                isOpen\n                            \n                            \n                                title\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in projects/common/lib/components/accordion/accordion.component.ts:26\n                            \n                        \n\n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        isOpen\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/accordion/accordion.component.ts:22\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        title\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/accordion/accordion.component.ts:21\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/components/accordion/accordion.component.ts:25\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            expandText\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : '(click to expand)'\n                        \n                    \n                        \n                            \n                                    Defined in projects/common/lib/components/accordion/accordion.component.ts:24\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit, Input, ViewChild } from '@angular/core';\nimport { AccordionComponent } from 'ngx-bootstrap';\n/**\n * AccordionComponent is a\n *\n * @example\n *       \t\n  *       \n * @export\n */\n\n@Component({\n  selector: 'common-accordion',\n  templateUrl: './accordion.component.html',\n  styleUrls: ['./accordion.component.scss']\n})\nexport class AccordionCommonComponent implements OnInit {\n\n  @Input() title: string;\n  @Input() isOpen: boolean = false;\n\n  public expandText: string =  '(click to expand)';\n  ngOnInit() {\n  }\n\n  constructor() { }\n\n\n}\n\n    \n\n    \n        \n    \n        \n          {{title}} \n          \n          {{expandText}}\n        \n      \n    \n  \n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                      {{title}}                     {{expandText}}                    '\n    var COMPONENTS = [{'name': 'AccordionCommonComponent', 'selector': 'common-accordion'},{'name': 'AddressComponent', 'selector': 'common-address'},{'name': 'ButtonComponent', 'selector': 'common-button'},{'name': 'ButtonGroupComponent', 'selector': 'common-button-group'},{'name': 'CaptchaComponent', 'selector': 'common-captcha'},{'name': 'CheckboxComponent', 'selector': 'common-checkbox'},{'name': 'CityComponent', 'selector': 'common-city'},{'name': 'ConfirmTemplateComponent', 'selector': 'common-confirm-template'},{'name': 'ConsentModalComponent', 'selector': 'common-consent-modal'},{'name': 'CoreBreadcrumbComponent', 'selector': 'common-core-breadcrumb'},{'name': 'CountryComponent', 'selector': 'common-country'},{'name': 'DateComponent', 'selector': 'common-date'},{'name': 'DatepickerComponent', 'selector': 'common-datepicker'},{'name': 'DropdownComponent', 'selector': 'common-dropdown'},{'name': 'EmailComponent', 'selector': 'common-email'},{'name': 'ErrorContainerComponent', 'selector': 'common-error-container'},{'name': 'FileUploaderComponent', 'selector': 'common-file-uploader'},{'name': 'FormActionBarComponent', 'selector': 'common-form-action-bar'},{'name': 'FormSubmitBarComponent', 'selector': 'common-form-submit-bar'},{'name': 'FullNameComponent', 'selector': 'common-full-name'},{'name': 'GeocoderInputComponent', 'selector': 'common-geocoder-input'},{'name': 'HeaderComponent', 'selector': 'common-header'},{'name': 'NameComponent', 'selector': 'common-name'},{'name': 'PageFrameworkComponent', 'selector': 'common-page-framework'},{'name': 'PageSectionComponent', 'selector': 'common-page-section'},{'name': 'PasswordComponent', 'selector': 'common-password'},{'name': 'PhnComponent', 'selector': 'common-phn'},{'name': 'PhoneNumberComponent', 'selector': 'common-phone-number'},{'name': 'PostalCodeComponent', 'selector': 'common-postal-code'},{'name': 'ProvinceComponent', 'selector': 'common-province'},{'name': 'RadioComponent', 'selector': 'common-radio'},{'name': 'SampleModalComponent', 'selector': 'common-sample-modal'},{'name': 'SinComponent', 'selector': 'common-sin'},{'name': 'StreetComponent', 'selector': 'common-street'},{'name': 'ThumbnailComponent', 'selector': 'common-thumbnail'},{'name': 'ToggleComponent', 'selector': 'common-toggle'},{'name': 'WizardProgressBarComponent', 'selector': 'common-wizard-progress-bar'},{'name': 'XiconButtonComponent', 'selector': 'common-xicon-button'}];\n    var DIRECTIVES = [{'name': 'DateFieldFormatDirective', 'selector': '[commonDateFieldFormat]'},{'name': 'DuplicateCheckDirective', 'selector': '[commonDuplicateCheck]'},{'name': 'ValidateBcPostalDirective', 'selector': '[commonValidateBcPostal]'},{'name': 'ValidateCityDirective', 'selector': '[commonValidateCity]'},{'name': 'ValidateNameDirective', 'selector': '[commonValidateName]'},{'name': 'ValidatePostalcodeDirective', 'selector': '[commonValidatePostalcode]'},{'name': 'ValidateRegionDirective', 'selector': '[commonValidateRegion]'},{'name': 'ValidateStreetDirective', 'selector': '[commonValidateStreet]'}];\n    var ACTUAL_COMPONENT = {'name': 'AccordionCommonComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/AddrLabelList.html":{"url":"interfaces/AddrLabelList.html","title":"interface - AddrLabelList","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  AddrLabelList\n\n\n\n        \n            Info\n        \n        \n            Design Guidelines\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/common/lib/components/address/address.component.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        address1\n                                \n                                \n                                            Optional\n                                        address2\n                                \n                                \n                                            Optional\n                                        address3\n                                \n                                \n                                            Optional\n                                        city\n                                \n                                \n                                            Optional\n                                        country\n                                \n                                \n                                            Optional\n                                        postalCode\n                                \n                                \n                                            Optional\n                                        province\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        address1\n                                    \n                                \n                                \n                                    \n                                        address1:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        address2\n                                    \n                                \n                                \n                                    \n                                        address2:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        address3\n                                    \n                                \n                                \n                                    \n                                        address3:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        city\n                                    \n                                \n                                \n                                    \n                                        city:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        country\n                                    \n                                \n                                \n                                    \n                                        country:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        postalCode\n                                    \n                                \n                                \n                                    \n                                        postalCode:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        province\n                                    \n                                \n                                \n                                    \n                                        province:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n    \n        Design Guidelines\ntodo\n\n    \n\n    \n        import {\n  Component,\n  Input,\n  Output,\n  EventEmitter,\n  OnChanges,\n  forwardRef,\n  OnInit\n} from '@angular/core';\nimport { ControlContainer, ControlValueAccessor, NgForm, NG_VALUE_ACCESSOR } from '@angular/forms';\nimport { Base } from '../../models/base';\nimport { GeoAddressResult } from '../../services/geocoder.service';\nimport { Address } from '../../models/address.model';\nimport { CountryList, CANADA, UNITED_STATES, COUNTRY_LIST } from '../country/country.component';\nimport { ProvinceList, BRITISH_COLUMBIA, PROVINCE_LIST } from '../province/province.component';\n\nexport interface AddrLabelList {\n  address1?: string;\n  address2?: string;\n  address3?: string;\n  city?: string;\n  province?: string;\n  country?: string;\n  postalCode?: string;\n}\n\nexport interface Maxlengths {\n  address?: string;\n  city?: string;\n  province?: string;\n  country?: string;\n  postalCode?: string;\n}\n\nexport interface ReadOnlyFields {\n  address?: boolean;\n  city?: boolean;\n  province?: boolean;\n  country?: boolean;\n  postalCode?: boolean;\n}\n\n/**\n *\n * Note - This component REQUIRES that `HttpClientModule` is registered in your NgModule.\n */\n@Component({\n  selector: 'common-address',\n  templateUrl: './address.component.html',\n  styleUrls: ['./address.component.scss'],\n  /* Re-use the same ngForm that it's parent is using. The component will show\n   * up in its parents `this.form`, and will auto-update `this.form.valid`\n   */\n  viewProviders: [\n    { provide: ControlContainer, useExisting: forwardRef(() => NgForm) }\n  ],\n  providers: [\n    { provide: NG_VALUE_ACCESSOR, useExisting: forwardRef(() => AddressComponent) }\n  ]\n})\nexport class AddressComponent extends Base\n  implements OnInit, OnChanges, ControlValueAccessor {\n\n  /* Disable all fields by sending in boolean,\n   * disable specific fields by sending in ReadOnlyFields structure\n   */\n  @Input() disabled: boolean | ReadOnlyFields = false;\n  @Input() isRequired: boolean = false;\n  @Input() countryList: CountryList[] = COUNTRY_LIST;\n  @Input() defaultCountry: string = CANADA;\n  @Input() provinceList: ProvinceList[] = PROVINCE_LIST;\n  @Input() defaultProvince: string = BRITISH_COLUMBIA;\n  @Input() disableGeocoder: boolean = false;\n  @Input() labels: AddrLabelList;\n  @Input() maxlengths: Maxlengths;\n  @Input() bcOnly: boolean = false;\n\n  @Input()\n  set address(val: Address) {\n    if (val) {\n      this.addr = val;\n    }\n  }\n  get address(): Address {\n    return this.addr;\n  }\n\n  @Output() addressChange: EventEmitter = new EventEmitter();\n  /**\n   * If true, adds a plus icon next to street and enables users to add a second\n   * address line.  This value binds to `address.addressLine2`\n   */\n  @Input() allowExtralines: boolean = false;\n\n  addr: Address;\n  provList: ProvinceList[];\n  showLine2 = false;\n  showLine3 = false;\n\n  // Labels defaulted to MSP\n  addrLabels: AddrLabelList =  {\n    address1: 'Full street address, rural route, PO box or general delivery',\n    address2: 'Address Line 2',\n    address3: 'Address Line 3',\n    city: 'City',\n    province: 'Province or state',\n    country: 'Country',\n    postalCode: 'Postal Code or Zip Code'\n  };\n\n  // Lengths defaulted to MSP\n  fieldMaxLenghts: Maxlengths = {\n    address: '25',\n    city: '25',\n    province: '25',\n    country: '250',\n    postalCode: '25'\n  };\n\n  readOnlyFields: ReadOnlyFields = {\n    address: false,\n    city: false,\n    province: false,\n    country: false,\n    postalCode: false,\n  };\n\n  _onChange = (_: any) => { };\n  _onTouched = (_: any) => { };\n\n  constructor() {\n    super();\n  }\n\n  ngOnInit() {\n\n    // console.log( 'address: ', this.bcOnly );\n\n    this.setLabels();\n    this.setMaxlengths();\n    this.setReadOnlyFields();\n\n    if (this.addr) {\n\n      if (!this.addr.country) {\n        this.addr.country = this.setDefaultCountryAsOption();\n      } else {\n        // If string for country submitted, need to find code to display value in select box\n        this.addr.country = this.findCountryCode( this.addr.country );\n      }\n\n      if (!this.addr.province) {\n        this.addr.province = this.setDefaultProvinceAsOption(this.addr.country);\n      }\n\n      // Make sure addressLine2 is visible if there is data persisted to display there.\n      if (this.allowExtralines) {\n        if (this.addr.addressLine2) {\n          this.addLine(2);\n        }\n\n        if (this.addr.addressLine3) {\n          this.addLine(3);\n        }\n      }\n    }\n\n    this.updateProvList();\n  }\n\n  /**\n   * Set country province blank\n   * @param value\n   */\n  setCountry(value: string) {\n    this.addr.province = this.setDefaultProvinceAsOption( value );\n    this.addr.country = value;\n    this.updateProvList();\n\n   if ( this.isCanada() ) {\n      // If Canada, clear postal code to display mask\n      this.addr.postal = '';\n    }\n\n    this._onChange(this.addr);\n    this.addressChange.emit(this.addr);\n    this._onTouched(this.addr);\n  }\n\n  setProvince(value: string) {\n    this.addr.province = value;\n    this._onChange(this.addr);\n    this.addressChange.emit(this.addr);\n    this._onTouched(this.addr);\n  }\n\n  setStreetAddress(value: string) {\n    this.addr.addressLine1 = value;\n    this._onChange(this.addr);\n    this.addressChange.emit(this.addr);\n    this._onTouched(this.addr);\n  }\n\n  setCity(value: string) {\n    this.addr.city = value;\n    this._onChange(this.addr);\n    this.addressChange.emit(this.addr);\n    this._onTouched(this.addr);\n  }\n\n  /**\n   * Sets string after converted upper case\n   * @param text\n   */\n  setPostalCode(value: string) {\n    this.addr.postal = value;\n    this._onChange(this.addr);\n    this.addressChange.emit(this.addr);\n    this._onTouched(this.addr);\n  }\n\n  isCanada(): boolean {\n    return this.addr && CANADA === this.addr.country;\n  }\n\n  ngOnChanges(changes) {\n    if (changes['countryList'] && changes['countryList'].currentValue) {\n\n      if (this.addr && !this.addr.country) {\n        // Set defaults\n        this.addr.country = this.setDefaultCountryAsOption();\n\n        // Set defaults\n        this.addr.province = this.setDefaultProvinceAsOption(this.addr.country);\n      }\n      this.updateProvList();\n    }\n    if (changes['provinceList'] && changes['provinceList'].currentValue) {\n      if (this.addr && !this.addr.province) {\n        // Set defaults\n        this.addr.province = this.setDefaultProvinceAsOption(this.addr.country);\n      }\n      this.updateProvList();\n    }\n  }\n\n  addLine(line: 2 | 3 = null) {\n\n    // Add lines in order\n    if (line === null) {\n      if (!this.showLine2) {\n        this.showLine2 = true;\n      } else if (!this.showLine3) {\n        this.showLine3 = true;\n      }\n    } else {\n      // Add specific line number\n      const lookup = `showLine${line}`;\n      this[lookup] = true;\n    }\n  }\n\n  removeLine(line: 2 | 3) {\n    // We can remove lines in any order, depending on user input\n    // Dynamically lookup variable based on line number input.\n    const lookup = `showLine${line}`;\n    this[lookup] = false;\n\n    // TODO - Need to clear the data in the appropriate field, just null/undefined it out.\n    const addrLookup = `addressLine${line}`;\n    this.address[addrLookup] = undefined;\n  }\n\n  /**\n   * Updates the provList variable. Values must be stored in a variable and not\n   * accessed via function invocation for performance.\n   */\n  private updateProvList() {\n    if (!this.provinceList) { return; } // When data is async and hasn't loaded\n    this.provList = this.provinceList\n      .map(prov => {\n        if (prov.country === this.addr.country) {\n          return prov;\n        }\n      })\n      .filter(x => x);\n  }\n\n  /**\n   * Sets the default province option value\n   */\n  private setDefaultProvinceAsOption(country: string): string {\n    const provObj = !this.provinceList ? null : this.provinceList.find(\n      val => (val.provinceCode === this.defaultProvince ||\n        val.description === this.defaultProvince) &&\n        val.country === country\n    );\n    return (provObj ? provObj.provinceCode : '');\n  }\n\n  private findProvinceDescription(prov: string): string {\n    const provObj = !this.provinceList ? null : this.provinceList.find(\n      val => val.provinceCode === prov ||\n        val.description === prov\n    );\n    return (provObj ? provObj.description : null);\n  }\n\n  /**\n   * Set country to default\n   * Search uses country code or country name to find item is list.\n   */\n  private setDefaultCountryAsOption(): string {\n    return this.findCountryCode( this.defaultCountry );\n  }\n\n  private findCountryCode( country: string ): string {\n    const countryObj = !this.countryList\n      ? null\n      : this.countryList.find(\n        val =>\n          val.countryCode === country ||\n          val.description === country\n      );\n    return countryObj ? countryObj.countryCode : null;\n  }\n\n  // GeoCoder\n\n  /**\n   * GeoCoder only is applicable when address is BC, Canada.\n   */\n  useGeoCoder(): boolean {\n    if (this.disableGeocoder) {\n      return false;\n    }\n    return this.isCanada() && BRITISH_COLUMBIA === this.addr.province;\n  }\n\n  // Only BC addresses therefore no need to copy province into structure.\n  setAddress(data: GeoAddressResult) {\n    this.addr.addressLine1 = data.street;\n    this.addr.city = data.city;\n    this.addr.province = data.province;\n    this.addr.country = data.country;\n    this.addressChange.emit(this.addr);\n  }\n\n  writeValue( value: Address) {\n    if ( value ) {\n      this.addr = value;\n    }\n  }\n\n  registerOnChange(fn: any): void {\n    this._onChange = fn;\n  }\n\n  registerOnTouched(fn: any): void {\n    this._onTouched = fn;\n  }\n\n  setDisabledState(isDisabled: boolean): void {\n    this.disabled = isDisabled;\n    this.setReadOnlyFields();\n  }\n\n  private setLabels() {\n    if ( this.labels ) {\n      Object.keys(this.labels).map( x => this.addrLabels[x] = this.labels[x] );\n    }\n  }\n\n  private setMaxlengths() {\n    if ( this.maxlengths ) {\n      Object.keys(this.fieldMaxLenghts).map( x => this.maxlengths[x] = this.fieldMaxLenghts[x]);\n    }\n  }\n\n  private setReadOnlyFields() {\n    if ( typeof this.disabled === 'boolean' ) {\n      Object.keys(this.readOnlyFields).map( x => this.readOnlyFields[x] = this.disabled );\n    } else {\n      Object.keys(this.disabled).map( x => this.readOnlyFields[x] = this.disabled[x] );\n    }\n  }\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Address.html":{"url":"classes/Address.html","title":"class - Address","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Address\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/common/lib/models/address.model.ts\n        \n\n            \n                Description\n            \n            \n                Address class, each project can extend this address class\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                addressLine1\n                            \n                            \n                                    Public\n                                addressLine2\n                            \n                            \n                                    Public\n                                addressLine3\n                            \n                            \n                                    Public\n                                city\n                            \n                            \n                                    Public\n                                country\n                            \n                            \n                                    Public\n                                hasValue\n                            \n                            \n                                    Public\n                                isValid\n                            \n                            \n                                    Public\n                                postal\n                            \n                            \n                                    Static\n                                PostalCodeBCRegEx\n                            \n                            \n                                    Public\n                                province\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                copy\n                            \n                            \n                                isComplete\n                            \n                            \n                                toString\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    street\n                                \n                                \n                                    isBCOnly\n                                \n                            \n                        \n                    \n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            addressLine1\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/common/lib/models/address.model.ts:9\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            addressLine2\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/common/lib/models/address.model.ts:11\n                            \n                        \n\n                \n                    \n                        Used to store optional extra address fields. Can be used with addressLine1 OR street. \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            addressLine3\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/common/lib/models/address.model.ts:13\n                            \n                        \n\n                \n                    \n                        Used to store optional extra address fields. Can be used with addressLine1 OR street. \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            city\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/common/lib/models/address.model.ts:17\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            country\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/common/lib/models/address.model.ts:15\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            hasValue\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/common/lib/models/address.model.ts:18\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            isValid\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/common/lib/models/address.model.ts:19\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            postal\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/common/lib/models/address.model.ts:14\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Static\n                            PostalCodeBCRegEx\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : '^[Vv]\\\\d[ABCEGHJ-NPRSTV-Zabceghj-nprstv-z][ ]?\\\\d[ABCEGHJ-NPRSTV-Zabceghj-nprstv-z]\\\\d$'\n                        \n                    \n                        \n                            \n                                    Defined in projects/common/lib/models/address.model.ts:7\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            province\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/common/lib/models/address.model.ts:16\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            copy\n                        \n                        \n                    \n                \n            \n            \n                \ncopy(object: Address)\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/models/address.model.ts:61\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    object\n                                    \n                                                Address\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            isComplete\n                        \n                        \n                    \n                \n            \n            \n                \nisComplete()\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/models/address.model.ts:44\n                \n            \n\n\n            \n                \n                    Address must have all fields filled out to be considered\ncomplete\n\n\n                    \n                        Returns :         boolean\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            toString\n                        \n                        \n                    \n                \n            \n            \n                \ntoString()\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/models/address.model.ts:36\n                \n            \n\n\n            \n                \n                    Overwrite the native JavaScript toString method to determine how the\nobject should be printed, instead of [object Object].  This provides a\nstandard way to print out an address. If you need something specific you\nshould access the properties directly. We omit Province/Country because of\nPharmaCare's BC focus. \n\n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        street\n                    \n                \n\n                \n                    \n                        getstreet()\n                    \n                \n                            \n                                \n                                    Defined in projects/common/lib/models/address.model.ts:23\n                                \n                            \n\n                \n                    \n                        setstreet(val: string)\n                    \n                \n                            \n                                \n                                    Defined in projects/common/lib/models/address.model.ts:27\n                                \n                            \n                    \n                        \n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                        Type\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                            val\n                                                    \n                                                            \n                                                                            string\n                                                            \n                                                    \n                                                        \n                                                                No\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :         void\n\n                                \n                        \n                    \n            \n        \n        \n            \n                \n                    \n                        \n                        isBCOnly\n                    \n                \n\n                \n                    \n                        getisBCOnly()\n                    \n                \n                            \n                                \n                                    Defined in projects/common/lib/models/address.model.ts:50\n                                \n                            \n\n            \n        \n\n    \n\n\n    \n        export class Address {\n\n  static PostalCodeBCRegEx = '^[Vv]\\\\d[ABCEGHJ-NPRSTV-Zabceghj-nprstv-z][ ]?\\\\d[ABCEGHJ-NPRSTV-Zabceghj-nprstv-z]\\\\d$';\n\n  public addressLine1: string;\n  /** Used to store optional extra address fields. Can be used with addressLine1 OR street. */\n  public addressLine2: string;\n  /** Used to store optional extra address fields. Can be used with addressLine1 OR street. */\n  public addressLine3: string;\n  public postal: string;\n  public country: string;\n  public province: string;\n  public city: string;\n  public hasValue: boolean; // TODO: Why do we need this? - Remove - breaking change\n  public isValid: boolean; // TODO: Why do we need this? - Remove - breaking change\n\n\n  // For backward compatibilty with applications that use street.\n  get street() {\n    return this.addressLine1;\n  }\n\n  set street( val: string ) {\n    this.addressLine1 = val;\n  }\n\n  /** Overwrite the native JavaScript toString method to determine how the\n   * object should be printed, instead of [object Object].  This provides a\n   * standard way to print out an address. If you need something specific you\n   * should access the properties directly. We omit Province/Country because of\n   * PharmaCare's BC focus. */\n  toString() {\n    return `${this.addressLine1}, ${this.city}`;\n  }\n\n  /**\n   * Address must have all fields filled out to be considered\n   * complete\n   */\n  isComplete(): boolean {\n    // All fields have data - not empty\n    return !!(this.addressLine1 && this.city && this.country &&\n             this.province && this.postal);\n  }\n\n  get isBCOnly(): boolean {\n    let isValid = false;\n    if (this.postal &&\n      this.postal.length > 0) {\n      const regEx = new RegExp(Address.PostalCodeBCRegEx);\n      isValid = regEx.test(this.postal);\n    }\n    return isValid;\n  }\n\n  /* Copy function */\n  copy(object: Address) {\n    this.addressLine1 = object.addressLine1;\n    this.addressLine2 = object.addressLine2;\n    this.addressLine3 = object.addressLine3;\n\n    this.city = object.city;\n    this.country = object.country;\n    this.postal = object.postal;\n    this.province = object.province;\n  }\n}\n\n\n\n\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Base.html":{"url":"classes/Base.html","title":"class - Base","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Base\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/common/lib/models/base.ts\n        \n\n            \n                Description\n            \n            \n                Base class.  Components extend this class to have object IDs.\nNPM package dependencies:\n  a) moment\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                objectId\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in projects/common/lib/models/base.ts:11\n                            \n                        \n\n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            objectId\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : UUID.UUID()\n                        \n                    \n                        \n                            \n                                    Defined in projects/common/lib/models/base.ts:11\n                            \n                        \n\n                \n                    \n                        An identifier for parents to keep track of components \n\n                    \n                \n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { UUID } from 'angular2-uuid';\n\n/**\n * Base class.  Components extend this class to have object IDs.\n * NPM package dependencies:\n *  a) moment\n */\nexport class Base {\n\n  /** An identifier for parents to keep track of components */\n  public objectId: string = UUID.UUID();\n\n  constructor() {}\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ButtonComponent.html":{"url":"components/ButtonComponent.html","title":"component - ButtonComponent","body":"\n                   \n\n\n\n\n\n  Components\n  ButtonComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    projects/common/lib/components/button/button.component.ts\n\n\n    \n        Description\n    \n    \n        Button Component is a button which can be used across the application to have\nsame button style.\nYou're free to create custom (bootstrap) buttons as your application\nrequires. The main advantages to this component are:\n\nconsistency\nsimplicity (less markup)\nmaking future changes easier, such as automatically updating any changes\nto button colour stylings.\n\n\n    \n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n    \n        Example\n    \n    \n                \n                    \n\n                \n    \n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                common-button\n            \n\n            \n                styleUrls\n                ./button.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./button.component.html\n            \n\n            \n                viewProviders\n                \n                    \n                                { provide: ControlContainer, useExisting: forwardRef(() => NgForm) }\n                    \n                \n            \n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                button\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                            \n                                onClick\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                buttonType\n                            \n                            \n                                disabled\n                            \n                            \n                                label\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                btnClick\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in projects/common/lib/components/button/button.component.ts:40\n                            \n                        \n\n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        buttonType\n                    \n                \n                \n                    \n                        Type :     \"default\" | \"primary\" | \"secondary\"\n\n                    \n                \n                \n                    \n                        Default value : 'default'\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/button/button.component.ts:36\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        disabled\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/button/button.component.ts:37\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        label\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'Button'\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/button/button.component.ts:38\n                            \n                        \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        btnClick\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/button/button.component.ts:39\n                            \n                        \n            \n        \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/components/button/button.component.ts:44\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            onClick\n                        \n                        \n                    \n                \n            \n            \n                \nonClick($event)\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/components/button/button.component.ts:47\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    $event\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            button\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         ElementRef\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ViewChild('button')\n                            \n                        \n                    \n                        \n                            \n                                    Defined in projects/common/lib/components/button/button.component.ts:40\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { forwardRef, Component, OnInit, ViewChild, EventEmitter, Input, Output, ElementRef } from '@angular/core';\nimport { ControlContainer, NgForm, NG_VALUE_ACCESSOR } from '@angular/forms';\n\n/**\n * Button Component is a button which can be used across the application to have\n * same button style.\n *\n * You're free to create custom (bootstrap) buttons as your application\n * requires. The main advantages to this component are:\n *\n *  - consistency\n *  - simplicity (less markup)\n *  - making future changes easier, such as automatically updating any changes\n * to button colour stylings.\n *\n *\n * @example\n *        \n *        \n * @export\n */\n@Component({\n  selector: 'common-button',\n  templateUrl: './button.component.html',\n  styleUrls: ['./button.component.scss'],\n  viewProviders: [\n    { provide: ControlContainer, useExisting: forwardRef(() => NgForm ) }\n  ]\n})\n\nexport class ButtonComponent implements OnInit {\n\n  // Can pass the Style class of a button e.g. For primary, btn btn-primary. Default, btn btn-default. Error, btn btn-danger\n  @Input() buttonType: 'default' | 'primary' | 'secondary' = 'default';\n  @Input() disabled: boolean = false;\n  @Input() label: string = 'Button';\n  @Output() btnClick: EventEmitter = new EventEmitter();\n  @ViewChild('button') button: ElementRef;\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n  onClick($event) {\n    this.btnClick.emit($event);\n  }\n}\n\n    \n\n    \n        \n\t\t\t{{label}}\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '\t\t\t{{label}}'\n    var COMPONENTS = [{'name': 'AccordionCommonComponent', 'selector': 'common-accordion'},{'name': 'AddressComponent', 'selector': 'common-address'},{'name': 'ButtonComponent', 'selector': 'common-button'},{'name': 'ButtonGroupComponent', 'selector': 'common-button-group'},{'name': 'CaptchaComponent', 'selector': 'common-captcha'},{'name': 'CheckboxComponent', 'selector': 'common-checkbox'},{'name': 'CityComponent', 'selector': 'common-city'},{'name': 'ConfirmTemplateComponent', 'selector': 'common-confirm-template'},{'name': 'ConsentModalComponent', 'selector': 'common-consent-modal'},{'name': 'CoreBreadcrumbComponent', 'selector': 'common-core-breadcrumb'},{'name': 'CountryComponent', 'selector': 'common-country'},{'name': 'DateComponent', 'selector': 'common-date'},{'name': 'DatepickerComponent', 'selector': 'common-datepicker'},{'name': 'DropdownComponent', 'selector': 'common-dropdown'},{'name': 'EmailComponent', 'selector': 'common-email'},{'name': 'ErrorContainerComponent', 'selector': 'common-error-container'},{'name': 'FileUploaderComponent', 'selector': 'common-file-uploader'},{'name': 'FormActionBarComponent', 'selector': 'common-form-action-bar'},{'name': 'FormSubmitBarComponent', 'selector': 'common-form-submit-bar'},{'name': 'FullNameComponent', 'selector': 'common-full-name'},{'name': 'GeocoderInputComponent', 'selector': 'common-geocoder-input'},{'name': 'HeaderComponent', 'selector': 'common-header'},{'name': 'NameComponent', 'selector': 'common-name'},{'name': 'PageFrameworkComponent', 'selector': 'common-page-framework'},{'name': 'PageSectionComponent', 'selector': 'common-page-section'},{'name': 'PasswordComponent', 'selector': 'common-password'},{'name': 'PhnComponent', 'selector': 'common-phn'},{'name': 'PhoneNumberComponent', 'selector': 'common-phone-number'},{'name': 'PostalCodeComponent', 'selector': 'common-postal-code'},{'name': 'ProvinceComponent', 'selector': 'common-province'},{'name': 'RadioComponent', 'selector': 'common-radio'},{'name': 'SampleModalComponent', 'selector': 'common-sample-modal'},{'name': 'SinComponent', 'selector': 'common-sin'},{'name': 'StreetComponent', 'selector': 'common-street'},{'name': 'ThumbnailComponent', 'selector': 'common-thumbnail'},{'name': 'ToggleComponent', 'selector': 'common-toggle'},{'name': 'WizardProgressBarComponent', 'selector': 'common-wizard-progress-bar'},{'name': 'XiconButtonComponent', 'selector': 'common-xicon-button'}];\n    var DIRECTIVES = [{'name': 'DateFieldFormatDirective', 'selector': '[commonDateFieldFormat]'},{'name': 'DuplicateCheckDirective', 'selector': '[commonDuplicateCheck]'},{'name': 'ValidateBcPostalDirective', 'selector': '[commonValidateBcPostal]'},{'name': 'ValidateCityDirective', 'selector': '[commonValidateCity]'},{'name': 'ValidateNameDirective', 'selector': '[commonValidateName]'},{'name': 'ValidatePostalcodeDirective', 'selector': '[commonValidatePostalcode]'},{'name': 'ValidateRegionDirective', 'selector': '[commonValidateRegion]'},{'name': 'ValidateStreetDirective', 'selector': '[commonValidateStreet]'}];\n    var ACTUAL_COMPONENT = {'name': 'ButtonComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ButtonGroupComponent.html":{"url":"components/ButtonGroupComponent.html","title":"component - ButtonGroupComponent","body":"\n                   \n\n\n\n\n\n  Components\n  ButtonGroupComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    projects/common/lib/components/button-group/button-group.component.ts\n\n\n    \n        Description\n    \n    \n        BUTTONGROUPCOMPONENT IS DEPRECATED!  DO NOT USE UNLESS YOU KNOW WHAT YOU'RE\nDOING.\nIf you need a Yes/No toggle, @see RadioComponent\n\n    \n\n\n    \n        Implements\n    \n    \n                    ControlValueAccessor\n    \n\n    \n        Example\n    \n    \n                \n                    \n\n                \n    \n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n            \n                providers\n                \n                                { provide: NG_VALUE_ACCESSOR, multi: true, useExisting: forwardRef(() => ButtonGroupComponent) }\n                \n            \n\n\n            \n                selector\n                common-button-group\n            \n\n            \n                styleUrls\n                ./button-group.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./button-group.component.html\n            \n\n            \n                viewProviders\n                \n                    \n                                { provide: ControlContainer, useExisting: forwardRef(() => NgForm) }\n                    \n                \n            \n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                _onChange\n                            \n                            \n                                    Public\n                                _onTouched\n                            \n                            \n                                buttonGroup\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                focus\n                            \n                            \n                                registerOnChange\n                            \n                            \n                                registerOnTouched\n                            \n                            \n                                setButtonGrpVal\n                            \n                            \n                                writeValue\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                data\n                            \n                            \n                                disabled\n                            \n                            \n                                errorMessageRequired\n                            \n                            \n                                label\n                            \n                            \n                                required\n                            \n                            \n                                showError\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                dataChange\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in projects/common/lib/components/button-group/button-group.component.ts:48\n                            \n                        \n\n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        data\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/button-group/button-group.component.ts:38\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        disabled\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/button-group/button-group.component.ts:41\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        errorMessageRequired\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'Field is required.'\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/button-group/button-group.component.ts:42\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        label\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'Default Checkbox'\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/button-group/button-group.component.ts:43\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        required\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : true\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/button-group/button-group.component.ts:39\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        showError\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/button-group/button-group.component.ts:40\n                            \n                        \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        dataChange\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/button-group/button-group.component.ts:44\n                            \n                        \n            \n        \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            focus\n                        \n                        \n                    \n                \n            \n            \n                \nfocus()\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/components/button-group/button-group.component.ts:61\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            registerOnChange\n                        \n                        \n                    \n                \n            \n            \n                \nregisterOnChange(fn: any)\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/components/button-group/button-group.component.ts:66\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    fn\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            registerOnTouched\n                        \n                        \n                    \n                \n            \n            \n                \nregisterOnTouched(fn: any)\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/components/button-group/button-group.component.ts:70\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    fn\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            setButtonGrpVal\n                        \n                        \n                    \n                \n            \n            \n                \nsetButtonGrpVal(val: any)\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/components/button-group/button-group.component.ts:55\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    val\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            writeValue\n                        \n                        \n                    \n                \n            \n            \n                \nwriteValue(value: any)\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/components/button-group/button-group.component.ts:74\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            _onChange\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : () => {...}\n                        \n                    \n                        \n                            \n                                    Defined in projects/common/lib/components/button-group/button-group.component.ts:47\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            _onTouched\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : () => {...}\n                        \n                    \n                        \n                            \n                                    Defined in projects/common/lib/components/button-group/button-group.component.ts:48\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            buttonGroup\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         ElementRef\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ViewChild('buttonGroup')\n                            \n                        \n                    \n                        \n                            \n                                    Defined in projects/common/lib/components/button-group/button-group.component.ts:45\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit, Input, Output, EventEmitter, ViewChild, ElementRef, forwardRef } from '@angular/core';\nimport { ControlContainer, ControlValueAccessor, NgForm, NG_VALUE_ACCESSOR } from '@angular/forms';\n\n/**\n * BUTTONGROUPCOMPONENT IS **DEPRECATED**!  **DO NOT USE** UNLESS YOU KNOW WHAT YOU'RE\n * DOING.\n *\n * If you need a Yes/No toggle, @see RadioComponent\n * @deprecated\n *\n *\n *\n *\n * @example\n *       \n *         \n *\n * @export\n */\n\n\n@Component({\n  selector: 'common-button-group',\n  templateUrl: './button-group.component.html',\n  styleUrls: ['./button-group.component.scss'],\n  viewProviders: [\n    { provide: ControlContainer, useExisting: forwardRef(() => NgForm ) }\n  ],\n  providers: [\n    { provide: NG_VALUE_ACCESSOR, multi: true, useExisting: forwardRef(() => ButtonGroupComponent )}\n  ]\n})\nexport class ButtonGroupComponent implements ControlValueAccessor {\n\n  @Input() data: boolean;\n  @Input() required: boolean = true;\n  @Input() showError: boolean = false;\n  @Input() disabled: boolean = false;\n  @Input() errorMessageRequired: string = 'Field is required.';\n  @Input() label: string = 'Default Checkbox';\n  @Output() dataChange: EventEmitter = new EventEmitter();\n  @ViewChild('buttonGroup') buttonGroup: ElementRef;\n\n  public _onChange = (_: any) => {};\n  public _onTouched = () => {};\n\n  constructor() {\n\n  }\n\n\n  setButtonGrpVal(val: any) {\n    this.dataChange.emit(val);\n    this._onChange(val);\n    this._onTouched();\n  }\n\n  focus() {\n    this.buttonGroup.nativeElement.focus();\n    this._onTouched();\n  }\n\n  registerOnChange(fn: any): void {\n    this._onChange = fn;\n  }\n\n  registerOnTouched(fn: any): void {\n    this._onTouched = fn;\n  }\n\n  writeValue(value: any): void {\n    this.data = value;\n  }\n}\n\n    \n\n    \n        \n  {{label}}\n  \n     {{answer.label}} \n    \n  \n  \n    {{errorMessageRequired}}\n  \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  {{label}}       {{answer.label}}             {{errorMessageRequired}}  '\n    var COMPONENTS = [{'name': 'AccordionCommonComponent', 'selector': 'common-accordion'},{'name': 'AddressComponent', 'selector': 'common-address'},{'name': 'ButtonComponent', 'selector': 'common-button'},{'name': 'ButtonGroupComponent', 'selector': 'common-button-group'},{'name': 'CaptchaComponent', 'selector': 'common-captcha'},{'name': 'CheckboxComponent', 'selector': 'common-checkbox'},{'name': 'CityComponent', 'selector': 'common-city'},{'name': 'ConfirmTemplateComponent', 'selector': 'common-confirm-template'},{'name': 'ConsentModalComponent', 'selector': 'common-consent-modal'},{'name': 'CoreBreadcrumbComponent', 'selector': 'common-core-breadcrumb'},{'name': 'CountryComponent', 'selector': 'common-country'},{'name': 'DateComponent', 'selector': 'common-date'},{'name': 'DatepickerComponent', 'selector': 'common-datepicker'},{'name': 'DropdownComponent', 'selector': 'common-dropdown'},{'name': 'EmailComponent', 'selector': 'common-email'},{'name': 'ErrorContainerComponent', 'selector': 'common-error-container'},{'name': 'FileUploaderComponent', 'selector': 'common-file-uploader'},{'name': 'FormActionBarComponent', 'selector': 'common-form-action-bar'},{'name': 'FormSubmitBarComponent', 'selector': 'common-form-submit-bar'},{'name': 'FullNameComponent', 'selector': 'common-full-name'},{'name': 'GeocoderInputComponent', 'selector': 'common-geocoder-input'},{'name': 'HeaderComponent', 'selector': 'common-header'},{'name': 'NameComponent', 'selector': 'common-name'},{'name': 'PageFrameworkComponent', 'selector': 'common-page-framework'},{'name': 'PageSectionComponent', 'selector': 'common-page-section'},{'name': 'PasswordComponent', 'selector': 'common-password'},{'name': 'PhnComponent', 'selector': 'common-phn'},{'name': 'PhoneNumberComponent', 'selector': 'common-phone-number'},{'name': 'PostalCodeComponent', 'selector': 'common-postal-code'},{'name': 'ProvinceComponent', 'selector': 'common-province'},{'name': 'RadioComponent', 'selector': 'common-radio'},{'name': 'SampleModalComponent', 'selector': 'common-sample-modal'},{'name': 'SinComponent', 'selector': 'common-sin'},{'name': 'StreetComponent', 'selector': 'common-street'},{'name': 'ThumbnailComponent', 'selector': 'common-thumbnail'},{'name': 'ToggleComponent', 'selector': 'common-toggle'},{'name': 'WizardProgressBarComponent', 'selector': 'common-wizard-progress-bar'},{'name': 'XiconButtonComponent', 'selector': 'common-xicon-button'}];\n    var DIRECTIVES = [{'name': 'DateFieldFormatDirective', 'selector': '[commonDateFieldFormat]'},{'name': 'DuplicateCheckDirective', 'selector': '[commonDuplicateCheck]'},{'name': 'ValidateBcPostalDirective', 'selector': '[commonValidateBcPostal]'},{'name': 'ValidateCityDirective', 'selector': '[commonValidateCity]'},{'name': 'ValidateNameDirective', 'selector': '[commonValidateName]'},{'name': 'ValidatePostalcodeDirective', 'selector': '[commonValidatePostalcode]'},{'name': 'ValidateRegionDirective', 'selector': '[commonValidateRegion]'},{'name': 'ValidateStreetDirective', 'selector': '[commonValidateStreet]'}];\n    var ACTUAL_COMPONENT = {'name': 'ButtonGroupComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/CaptchaDataService.html":{"url":"injectables/CaptchaDataService.html","title":"injectable - CaptchaDataService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  CaptchaDataService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/common/captcha/src/captcha-data.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                fetchAudio\n                            \n                            \n                                    Public\n                                fetchData\n                            \n                            \n                                    Public\n                                verifyCaptcha\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(httpClient: HttpClient)\n                    \n                \n                        \n                            \n                                Defined in projects/common/captcha/src/captcha-data.service.ts:16\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        httpClient\n                                                  \n                                                        \n                                                                        HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            fetchAudio\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    fetchAudio(apiBaseUrl: string, validation: string, translation?: string)\n                \n            \n\n\n            \n                \n                    Defined in projects/common/captcha/src/captcha-data.service.ts:40\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    apiBaseUrl\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    validation\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    translation\n                                    \n                                                string\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            fetchData\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    fetchData(apiBaseUrl: string, nonce: string)\n                \n            \n\n\n            \n                \n                    Defined in projects/common/captcha/src/captcha-data.service.ts:21\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    apiBaseUrl\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    nonce\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Observable>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            verifyCaptcha\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    verifyCaptcha(apiBaseUrl: string, nonce: string, answer: string, encryptedAnswer: string)\n                \n            \n\n\n            \n                \n                    Defined in projects/common/captcha/src/captcha-data.service.ts:29\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    apiBaseUrl\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    nonce\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    answer\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    encryptedAnswer\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Observable>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { HttpClient, HttpResponse } from '@angular/common/http';\n// import { Http, Response } from '@angular/http';\nimport { Observable } from 'rxjs';\n\n// payload returned from the server\n@Injectable()\nexport class ServerPayload {\n    nonce: string;\n    captcha: string;\n    validation: string;\n    expiry: string;\n}\n\n@Injectable()\nexport class CaptchaDataService {\n\n    constructor(private httpClient: HttpClient) { }\n    // private http: Http) { }\n\n    public fetchData(apiBaseUrl: string, nonce: string): Observable> {\n        return this.httpClient\n            .post(\n                apiBaseUrl + '/captcha',\n                { nonce: nonce },\n                { observe: 'response' });\n    }\n\n    public verifyCaptcha(apiBaseUrl: string,\n                            nonce: string,\n                            answer: string,\n                            encryptedAnswer: string): Observable> {\n        return this.httpClient\n            .post(\n                apiBaseUrl + '/verify/captcha',\n                { nonce: nonce, answer: answer, validation: encryptedAnswer },\n                { observe: 'response' });\n    }\n\n    public fetchAudio(apiBaseUrl: string, validation: string, translation?: string) {\n        const payload: any = { validation: validation };\n        if (translation) {\n            payload.translation = translation;\n        }\n        return this.httpClient\n            .post(\n                apiBaseUrl + '/captcha/audio',\n                payload,\n                { observe: 'response' });\n    }\n    /*\n      fetchData(apiBaseUrl: string, nonce: string): Observable {\n        return this.http.post(apiBaseUrl + '/captcha', {nonce: nonce}, {});\n      }\n\n      verifyCaptcha(apiBaseUrl: string, nonce: string, answer: string, encryptedAnswer: string): Observable {\n        return this.http.post(apiBaseUrl + '/verify/captcha', {nonce: nonce, answer: answer, validation: encryptedAnswer}, {});\n      }\n\n      fetchAudio(apiBaseUrl: string, validation: string): Observable {\n        return this.http.post(apiBaseUrl + '/captcha/audio', {validation: validation}, {});\n      }\n    */\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/CaptchaModule.html":{"url":"modules/CaptchaModule.html","title":"module - CaptchaModule","body":"\n                   \n\n\n\n\n    Modules\n    CaptchaModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_CaptchaModule\n\n\n\ncluster_CaptchaModule_declarations\n\n\n\ncluster_CaptchaModule_exports\n\n\n\ncluster_CaptchaModule_providers\n\n\n\n\nCaptchaComponent\n\nCaptchaComponent\n\n\n\nCaptchaModule\n\nCaptchaModule\n\nCaptchaModule -->\n\nCaptchaComponent->CaptchaModule\n\n\n\n\n\nCaptchaComponent \n\nCaptchaComponent \n\nCaptchaComponent  -->\n\nCaptchaModule->CaptchaComponent \n\n\n\n\n\nCaptchaDataService\n\nCaptchaDataService\n\nCaptchaModule -->\n\nCaptchaDataService->CaptchaModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Design Guidelines\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            projects/common/captcha/src/captcha.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            CaptchaComponent\n                        \n                    \n                \n                \n                    Providers\n                    \n                        \n                            CaptchaDataService\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            CaptchaComponent\n                        \n                    \n                \n            \n        \n\n        \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Static\n                            forRoot\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    forRoot()\n                \n            \n\n\n            \n                \n                    Defined in projects/common/captcha/src/captcha.module.ts:27\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     ModuleWithProviders\n\n                    \n                \n            \n        \n    \n\n    \n\n    \n        CAPTCHA Module\nExample:\nimport { CaptchaModule } from 'moh-common-lib/captcha'\n@NgModule({\n    declarations: [ ... ],\n    providers: [ ... ],\n    imports: [\n        ...\n        CaptchaModule\n    ]\n})import { CaptchaModule } from 'moh-common-lib/captcha';\n\n@NgModule({\n    declarations: [ ... ],\n    providers: [ ... ],\n    imports: [\n        ...\n        CaptchaModule\n    ]\n})Then register your application module and use \n// tip: set nonce to a UUID().\nThere must be a configured CAPTCHA service deployed to OpenShift to use this component. You then must point apiBaseUrl to point to the service.\nKnown Issues\n\n    \n\n    \n        import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule, ModuleWithProviders } from '@angular/core';\nimport { HttpClientModule } from '@angular/common/http';\nimport { FormsModule } from '@angular/forms';\n\nimport { CaptchaComponent } from './captcha.component';\nimport { CaptchaDataService } from './captcha-data.service';\nimport { CommonModule } from '@angular/common';\n\n@NgModule({\n  declarations: [\n    CaptchaComponent\n  ],\n  imports: [\n    HttpClientModule,\n    CommonModule,\n    FormsModule\n  ],\n  providers: [\n    CaptchaDataService\n  ],\n  exports: [\n    CaptchaComponent\n  ],\n})\nexport class CaptchaModule {\n  static forRoot(): ModuleWithProviders {\n    return {\n      ngModule: CaptchaModule,\n      providers: [CaptchaDataService]\n    };\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/CheckCompleteBaseService.html":{"url":"injectables/CheckCompleteBaseService.html","title":"injectable - CheckCompleteBaseService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  CheckCompleteBaseService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/common/lib/services/check-complete-base.service.ts\n        \n\n            \n                Description\n            \n            \n                Extend this class when creating a service to create your custom Route Guard\nlogic.  This class should work as-is for simple use-cases.  For Route Guard\nsetup @see RouteGuardService.\n\n            \n\n\n            \n                Example\n            \n            \n            \n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                _bypassGuards\n                            \n                            \n                                    Private\n                                _startUrl\n                            \n                            \n                                    Public\n                                pageCheckList\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                canBypassGuards\n                            \n                            \n                                    Public\n                                getStartUrl\n                            \n                            \n                                    Protected\n                                getUrlIndex\n                            \n                            \n                                    Public\n                                isComplete\n                            \n                            \n                                    Public\n                                isPageComplete\n                            \n                            \n                                    Protected\n                                isPageListEmpty\n                            \n                            \n                                    Public\n                                isPrerequisiteComplete\n                            \n                            \n                                    Public\n                                setPageComplete\n                            \n                            \n                                    Public\n                                setPageIncomplete\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    startUrl\n                                \n                                \n                                    bypassGuards\n                                \n                            \n                        \n                    \n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(router: Router)\n                    \n                \n                        \n                            \n                                Defined in projects/common/lib/services/check-complete-base.service.ts:35\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            canBypassGuards\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    canBypassGuards()\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/services/check-complete-base.service.ts:47\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         boolean\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            getStartUrl\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getStartUrl()\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/services/check-complete-base.service.ts:51\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            getUrlIndex\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getUrlIndex(url: string)\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/services/check-complete-base.service.ts:107\n                \n            \n\n\n            \n                \n                    Index of URL in the items list, -1 if not exist\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    url\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         number\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            isComplete\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    isComplete()\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/services/check-complete-base.service.ts:99\n                \n            \n\n\n            \n                \n                    Check for incomplete pages\n\n\n                    \n                        Returns :         boolean\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            isPageComplete\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    isPageComplete(url: string)\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/services/check-complete-base.service.ts:88\n                \n            \n\n\n            \n                \n                    Indicates whether page has been completed or not.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    url\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            isPageListEmpty\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    isPageListEmpty()\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/services/check-complete-base.service.ts:111\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         boolean\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            isPrerequisiteComplete\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    isPrerequisiteComplete()\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/services/check-complete-base.service.ts:56\n                \n            \n\n\n            \n                \n                    Any prerequisites that need list of pages \n\n\n                    \n                        Returns :         boolean\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            setPageComplete\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    setPageComplete()\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/services/check-complete-base.service.ts:78\n                \n            \n\n\n            \n                \n                    Sets the page to completed, allowing applicant to proceed to next page.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            setPageIncomplete\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    setPageIncomplete()\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/services/check-complete-base.service.ts:63\n                \n            \n\n\n            \n                \n                    Sets page to not be completed, so applicants cannot complete application out of sequence\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            _bypassGuards\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in projects/common/lib/services/check-complete-base.service.ts:35\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            _startUrl\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : ''\n                        \n                    \n                        \n                            \n                                    Defined in projects/common/lib/services/check-complete-base.service.ts:34\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            pageCheckList\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     PageListInterface[]\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in projects/common/lib/services/check-complete-base.service.ts:32\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        startUrl\n                    \n                \n\n\n                \n                    \n                        setstartUrl(url: string)\n                    \n                \n                            \n                                \n                                    Defined in projects/common/lib/services/check-complete-base.service.ts:39\n                                \n                            \n                    \n                        \n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                        Type\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                            url\n                                                    \n                                                            \n                                                                            string\n                                                            \n                                                    \n                                                        \n                                                                No\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :         void\n\n                                \n                        \n                    \n            \n        \n        \n            \n                \n                    \n                        \n                        bypassGuards\n                    \n                \n\n\n                \n                    \n                        setbypassGuards(bypass: boolean)\n                    \n                \n                            \n                                \n                                    Defined in projects/common/lib/services/check-complete-base.service.ts:43\n                                \n                            \n                    \n                        \n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                        Type\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                            bypass\n                                                    \n                                                            \n                                                                            boolean\n                                                            \n                                                    \n                                                        \n                                                                No\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :         void\n\n                                \n                        \n                    \n            \n        \n\n    \n\n\n    \n        import { Router } from '@angular/router';\nimport { AbstractPgCheckService } from './abstract-pg-check.service';\nimport { Injectable } from '@angular/core';\n\n/* TODO: Revise - does not work quite correct when there is no landing page.\n * @depreciated\n */\n\n\n\n/**\n * Interface for used when checking completeness of item\n */\nexport interface PageListInterface {\n  route: string;\n  isComplete: boolean;\n  [key: string]: any;\n}\n\n/**\n * Extend this class when creating a service to create your custom Route Guard\n * logic.  This class should work as-is for simple use-cases.  For Route Guard\n * setup @see RouteGuardService.\n *\n * @see RouteGuardService\n */\n@Injectable({\n  providedIn: 'root'\n})\nexport class CheckCompleteBaseService implements AbstractPgCheckService {\n\n  public pageCheckList: PageListInterface [] = [];\n\n  private _startUrl: string = '';\n  private _bypassGuards: boolean = false;\n\n  constructor( protected router: Router ) {}\n\n  set startUrl( url: string ) {\n    this._startUrl = url;\n  }\n\n  set bypassGuards( bypass: boolean) {\n    this._bypassGuards = bypass;\n  }\n\n  public canBypassGuards(): boolean {\n    return this._bypassGuards;\n  }\n\n  public getStartUrl(): string {\n    return this._startUrl;\n  }\n\n  /** Any prerequisites that need list of pages */\n  public isPrerequisiteComplete(): boolean {\n    return !this.isPageListEmpty();\n  }\n\n  /**\n   *  Sets page to not be completed, so applicants cannot complete application out of sequence\n   */\n  public setPageIncomplete(): void {\n    const idx = this.getUrlIndex( this.router.url );\n    if ( !this.isPageListEmpty() ) { // Check guards could be turned off in dev environment\n      this.pageCheckList = this.pageCheckList.map((item, index) => {\n        if (index >= idx) {\n          item.isComplete = false;\n        }\n        return item;\n      });\n    }\n  }\n\n  /**\n   * Sets the page to completed, allowing applicant to proceed to next page.\n   */\n  public setPageComplete(): void {\n    const idx = this.getUrlIndex( this.router.url );\n    if ( !this.isPageListEmpty() ) { // Check guards could be turned in dev environment\n      this.pageCheckList[idx].isComplete = true;\n    }\n  }\n\n  /**\n   * Indicates whether page has been completed or not.\n   */\n  public isPageComplete( url: string ): boolean {\n\n    const idx = this.getUrlIndex( url );\n\n    // returns previous items isComplete value\n    return (idx - 1 >= 0) ? this.pageCheckList[idx - 1].isComplete : true;\n  }\n\n  /**\n   * Check for incomplete pages\n   */\n  public isComplete(): boolean {\n    const incompletePages = this.pageCheckList.filter( x => x.isComplete !== true );\n    return (incompletePages.length !== 0 ? false : true );\n  }\n\n  /**\n   * Index of URL in the items list, -1 if not exist\n   */\n  protected getUrlIndex( url: string ): number {\n    return this.pageCheckList.findIndex( x => url.includes( x.route ) );\n  }\n\n  protected isPageListEmpty() {\n    return ( this.pageCheckList.length === 0 );\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/CheckboxComponent.html":{"url":"components/CheckboxComponent.html","title":"component - CheckboxComponent","body":"\n                   \n\n\n\n\n\n  Components\n  CheckboxComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    projects/common/lib/components/checkbox/checkbox.component.ts\n\n\n    \n        Description\n    \n    \n        Checkbox component is a input checkbox\n\n    \n\n    \n        Extends\n    \n    \n                AbstractFormControl\n    \n\n    \n        Implements\n    \n    \n                    OnInit\n                    ControlValueAccessor\n    \n\n    \n        Example\n    \n    \n                \n                    \n\n                \n    \n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                common-checkbox\n            \n\n            \n                styleUrls\n                ./checkbox.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./checkbox.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                _defaultErrMsg\n                            \n                            \n                                checkbox\n                            \n                            \n                                    Public\n                                controlDir\n                            \n                            \n                                defaultErrorMessage\n                            \n                            \n                                    Abstract\n                                _defaultErrMsg\n                            \n                            \n                                _onChange\n                            \n                            \n                                _onTouched\n                            \n                            \n                                    Public\n                                objectId\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                focus\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                setCheckboxVal\n                            \n                            \n                                writeValue\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                registerOnChange\n                            \n                            \n                                registerOnTouched\n                            \n                            \n                                    Protected\n                                registerValidation\n                            \n                            \n                                setDisabledState\n                            \n                            \n                                    Protected\n                                setErrorMsg\n                            \n                            \n                                    Private\n                                validateLabel\n                            \n                            \n                                    Abstract\n                                writeValue\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                data\n                            \n                            \n                                label\n                            \n                            \n                                required\n                            \n                            \n                                disabled\n                            \n                            \n                                errorMessage\n                            \n                            \n                                label\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                dataChange\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(controlDir: NgControl)\n                    \n                \n                        \n                            \n                                Defined in projects/common/lib/components/checkbox/checkbox.component.ts:40\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        controlDir\n                                                  \n                                                        \n                                                                        NgControl\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        data\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/checkbox/checkbox.component.ts:32\n                            \n                        \n                \n                    \n                        You can bind to [(data)] OR you can use [(ngModel)] but don't use both.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        label\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'Default Checkbox'\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/checkbox/checkbox.component.ts:33\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        required\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/checkbox/checkbox.component.ts:34\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        disabled\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                            \n                                \n                                    Inherited from         AbstractFormControl\n\n                                \n                            \n                        \n                            \n                                    Defined in         AbstractFormControl:16\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        errorMessage\n                    \n                \n                \n                    \n                        Type :         ErrorMessage\n\n                    \n                \n                            \n                                \n                                    Inherited from         AbstractFormControl\n\n                                \n                            \n                        \n                            \n                                    Defined in         AbstractFormControl:19\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        label\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                            \n                                \n                                    Inherited from         AbstractFormControl\n\n                                \n                            \n                        \n                            \n                                    Defined in         AbstractFormControl:14\n\n                            \n                        \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        dataChange\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/checkbox/checkbox.component.ts:35\n                            \n                        \n            \n        \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            focus\n                        \n                        \n                    \n                \n            \n            \n                \nfocus()\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/components/checkbox/checkbox.component.ts:60\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/components/checkbox/checkbox.component.ts:49\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            setCheckboxVal\n                        \n                        \n                    \n                \n            \n            \n                \nsetCheckboxVal(event: boolean)\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/components/checkbox/checkbox.component.ts:53\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    event\n                                    \n                                                boolean\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            writeValue\n                        \n                        \n                    \n                \n            \n            \n                \nwriteValue(value: any)\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/components/checkbox/checkbox.component.ts:64\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Inherited from         AbstractFormControl\n\n                \n            \n            \n                \n                        Defined in         AbstractFormControl:27\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            registerOnChange\n                        \n                        \n                    \n                \n            \n            \n                \nregisterOnChange(fn: any)\n                \n            \n\n\n            \n                \n                    Inherited from         AbstractFormControl\n\n                \n            \n            \n                \n                        Defined in         AbstractFormControl:35\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    fn\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            registerOnTouched\n                        \n                        \n                    \n                \n            \n            \n                \nregisterOnTouched(fn: any)\n                \n            \n\n\n            \n                \n                    Inherited from         AbstractFormControl\n\n                \n            \n            \n                \n                        Defined in         AbstractFormControl:40\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    fn\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            registerValidation\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    registerValidation(ngControl: NgControl, fn: ValidationErrors)\n                \n            \n\n\n            \n                \n                    Inherited from         AbstractFormControl\n\n                \n            \n            \n                \n                        Defined in         AbstractFormControl:68\n\n                \n            \n\n\n            \n                \n                    Register self validating method\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    ngControl\n                                    \n                                                NgControl\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                    \n                                \n                                \n                                    fn\n                                    \n                                                ValidationErrors\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        function for validating self\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            setDisabledState\n                        \n                        \n                    \n                \n            \n            \n                \nsetDisabledState(isDisabled: boolean)\n                \n            \n\n\n            \n                \n                    Inherited from         AbstractFormControl\n\n                \n            \n            \n                \n                        Defined in         AbstractFormControl:45\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    isDisabled\n                                    \n                                                boolean\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            setErrorMsg\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    setErrorMsg()\n                \n            \n\n\n            \n                \n                    Inherited from         AbstractFormControl\n\n                \n            \n            \n                \n                        Defined in         AbstractFormControl:49\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            validateLabel\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    validateLabel()\n                \n            \n\n\n            \n                \n                    Inherited from         AbstractFormControl\n\n                \n            \n            \n                \n                        Defined in         AbstractFormControl:88\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Abstract\n                            writeValue\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    writeValue(value: any)\n                \n            \n\n\n            \n                \n                    Inherited from         AbstractFormControl\n\n                \n            \n            \n                \n                        Defined in         AbstractFormControl:32\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            _defaultErrMsg\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         ErrorMessage\n\n                        \n                    \n                    \n                        \n                            Default value : {\n    required: `${LabelReplacementTag} is required.`,\n  }\n                        \n                    \n                        \n                            \n                                    Defined in projects/common/lib/components/checkbox/checkbox.component.ts:38\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            checkbox\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         ElementRef\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ViewChild('checkbox')\n                            \n                        \n                    \n                        \n                            \n                                    Defined in projects/common/lib/components/checkbox/checkbox.component.ts:36\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            controlDir\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         NgControl\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Optional()@Self()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in projects/common/lib/components/checkbox/checkbox.component.ts:42\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            defaultErrorMessage\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : ''\n                        \n                    \n                        \n                            \n                                    Defined in projects/common/lib/components/checkbox/checkbox.component.ts:27\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Abstract\n                            _defaultErrMsg\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         ErrorMessage\n\n                        \n                    \n                    \n                        \n                            Default value : {}\n                        \n                    \n                            \n                                \n                                    Inherited from         AbstractFormControl\n\n                                \n                            \n                        \n                            \n                                    Defined in         AbstractFormControl:11\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            _onChange\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : () => {...}\n                        \n                    \n                            \n                                \n                                    Inherited from         AbstractFormControl\n\n                                \n                            \n                        \n                            \n                                    Defined in         AbstractFormControl:23\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            _onTouched\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : () => {...}\n                        \n                    \n                            \n                                \n                                    Inherited from         AbstractFormControl\n\n                                \n                            \n                        \n                            \n                                    Defined in         AbstractFormControl:24\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            objectId\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : UUID.UUID()\n                        \n                    \n                            \n                                \n                                    Inherited from         Base\n\n                                \n                            \n                        \n                            \n                                    Defined in         Base:11\n\n                            \n                        \n\n                \n                    \n                        An identifier for parents to keep track of components \n\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit, Input, Output, EventEmitter, ViewChild, ElementRef, Optional, Self} from '@angular/core';\nimport { ControlValueAccessor, NgControl } from '@angular/forms';\nimport { AbstractFormControl } from '../../models/abstract-form-control';\nimport { ErrorMessage, LabelReplacementTag } from '../../models/error-message.interface';\n/**\n * Checkbox component is a input checkbox\n *\n * @example\n *       \n *       \n *\n * @export\n */\n\n\n@Component({\n  selector: 'common-checkbox',\n  templateUrl: './checkbox.component.html',\n  styleUrls: ['./checkbox.component.scss']\n})\nexport class CheckboxComponent extends AbstractFormControl implements OnInit, ControlValueAccessor {\n  defaultErrorMessage: string = '';\n\n  /**\n   * You can bind to [(data)] OR you can use [(ngModel)] but don't use both.\n   */\n  @Input() data: boolean = false;\n  @Input() label: string = 'Default Checkbox';\n  @Input() required: boolean = false;  // TOBE removed duing MSP stablization - then update MSP to use form control version\n  @Output() dataChange: EventEmitter = new EventEmitter();\n  @ViewChild('checkbox') checkbox: ElementRef;\n\n  _defaultErrMsg: ErrorMessage = {\n    required: `${LabelReplacementTag} is required.`,\n  };\n\n  constructor( @Optional() @Self() public controlDir: NgControl ) {\n    super();\n    if ( controlDir ) {\n      controlDir.valueAccessor = this;\n    }\n  }\n\n  ngOnInit() {\n    super.ngOnInit();\n  }\n\n  setCheckboxVal(event: boolean) {\n    this.data = event;\n    this.dataChange.emit(this.data);\n    this._onChange(event);\n    this._onTouched();\n  }\n\n  focus() {\n    this.checkbox.nativeElement.focus();\n  }\n\n  writeValue(value: any): void {\n    if ( value !== undefined || value === null ) {\n      this.data = value;\n    }\n  }\n}\n\n    \n\n    \n        \n\n{{label}}\n\n\n  {{_defaultErrMsg.required}}\n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '{{label}}  {{_defaultErrMsg.required}}'\n    var COMPONENTS = [{'name': 'AccordionCommonComponent', 'selector': 'common-accordion'},{'name': 'AddressComponent', 'selector': 'common-address'},{'name': 'ButtonComponent', 'selector': 'common-button'},{'name': 'ButtonGroupComponent', 'selector': 'common-button-group'},{'name': 'CaptchaComponent', 'selector': 'common-captcha'},{'name': 'CheckboxComponent', 'selector': 'common-checkbox'},{'name': 'CityComponent', 'selector': 'common-city'},{'name': 'ConfirmTemplateComponent', 'selector': 'common-confirm-template'},{'name': 'ConsentModalComponent', 'selector': 'common-consent-modal'},{'name': 'CoreBreadcrumbComponent', 'selector': 'common-core-breadcrumb'},{'name': 'CountryComponent', 'selector': 'common-country'},{'name': 'DateComponent', 'selector': 'common-date'},{'name': 'DatepickerComponent', 'selector': 'common-datepicker'},{'name': 'DropdownComponent', 'selector': 'common-dropdown'},{'name': 'EmailComponent', 'selector': 'common-email'},{'name': 'ErrorContainerComponent', 'selector': 'common-error-container'},{'name': 'FileUploaderComponent', 'selector': 'common-file-uploader'},{'name': 'FormActionBarComponent', 'selector': 'common-form-action-bar'},{'name': 'FormSubmitBarComponent', 'selector': 'common-form-submit-bar'},{'name': 'FullNameComponent', 'selector': 'common-full-name'},{'name': 'GeocoderInputComponent', 'selector': 'common-geocoder-input'},{'name': 'HeaderComponent', 'selector': 'common-header'},{'name': 'NameComponent', 'selector': 'common-name'},{'name': 'PageFrameworkComponent', 'selector': 'common-page-framework'},{'name': 'PageSectionComponent', 'selector': 'common-page-section'},{'name': 'PasswordComponent', 'selector': 'common-password'},{'name': 'PhnComponent', 'selector': 'common-phn'},{'name': 'PhoneNumberComponent', 'selector': 'common-phone-number'},{'name': 'PostalCodeComponent', 'selector': 'common-postal-code'},{'name': 'ProvinceComponent', 'selector': 'common-province'},{'name': 'RadioComponent', 'selector': 'common-radio'},{'name': 'SampleModalComponent', 'selector': 'common-sample-modal'},{'name': 'SinComponent', 'selector': 'common-sin'},{'name': 'StreetComponent', 'selector': 'common-street'},{'name': 'ThumbnailComponent', 'selector': 'common-thumbnail'},{'name': 'ToggleComponent', 'selector': 'common-toggle'},{'name': 'WizardProgressBarComponent', 'selector': 'common-wizard-progress-bar'},{'name': 'XiconButtonComponent', 'selector': 'common-xicon-button'}];\n    var DIRECTIVES = [{'name': 'DateFieldFormatDirective', 'selector': '[commonDateFieldFormat]'},{'name': 'DuplicateCheckDirective', 'selector': '[commonDuplicateCheck]'},{'name': 'ValidateBcPostalDirective', 'selector': '[commonValidateBcPostal]'},{'name': 'ValidateCityDirective', 'selector': '[commonValidateCity]'},{'name': 'ValidateNameDirective', 'selector': '[commonValidateName]'},{'name': 'ValidatePostalcodeDirective', 'selector': '[commonValidatePostalcode]'},{'name': 'ValidateRegionDirective', 'selector': '[commonValidateRegion]'},{'name': 'ValidateStreetDirective', 'selector': '[commonValidateStreet]'}];\n    var ACTUAL_COMPONENT = {'name': 'CheckboxComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/CityComponent.html":{"url":"components/CityComponent.html","title":"component - CityComponent","body":"\n                   \n\n\n\n\n\n  Components\n  CityComponent\n\n\n\n        \n            Info\n        \n        \n            Design Guidelines\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    projects/common/lib/components/city/city.component.ts\n\n\n\n    \n        Extends\n    \n    \n                AbstractFormControl\n    \n\n    \n        Implements\n    \n    \n                    OnInit\n                    ControlValueAccessor\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                common-city\n            \n\n            \n                styleUrls\n                ./city.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./city.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                _defaultErrMsg\n                            \n                            \n                                city\n                            \n                            \n                                    Public\n                                controlDir\n                            \n                            \n                                    Abstract\n                                _defaultErrMsg\n                            \n                            \n                                _onChange\n                            \n                            \n                                _onTouched\n                            \n                            \n                                    Public\n                                objectId\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                            \n                                onBlur\n                            \n                            \n                                onValueChange\n                            \n                            \n                                writeValue\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                registerOnChange\n                            \n                            \n                                registerOnTouched\n                            \n                            \n                                    Protected\n                                registerValidation\n                            \n                            \n                                setDisabledState\n                            \n                            \n                                    Protected\n                                setErrorMsg\n                            \n                            \n                                    Private\n                                validateLabel\n                            \n                            \n                                    Abstract\n                                writeValue\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                label\n                            \n                            \n                                labelforId\n                            \n                            \n                                maxlength\n                            \n                            \n                                placeholder\n                            \n                            \n                                value\n                            \n                            \n                                disabled\n                            \n                            \n                                errorMessage\n                            \n                            \n                                label\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                blur\n                            \n                            \n                                valueChange\n                            \n                        \n                    \n                \n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    value\n                                \n                            \n                        \n                    \n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(controlDir: NgControl)\n                    \n                \n                        \n                            \n                                Defined in projects/common/lib/components/city/city.component.ts:38\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        controlDir\n                                                  \n                                                        \n                                                                        NgControl\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        label\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'City'\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/city/city.component.ts:14\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        labelforId\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'city_' + this.objectId\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/city/city.component.ts:16\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        maxlength\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : '100'\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/city/city.component.ts:15\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        placeholder\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'City name'\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/city/city.component.ts:17\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        value\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/city/city.component.ts:20\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        disabled\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                            \n                                \n                                    Inherited from         AbstractFormControl\n\n                                \n                            \n                        \n                            \n                                    Defined in         AbstractFormControl:16\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        errorMessage\n                    \n                \n                \n                    \n                        Type :         ErrorMessage\n\n                    \n                \n                            \n                                \n                                    Inherited from         AbstractFormControl\n\n                                \n                            \n                        \n                            \n                                    Defined in         AbstractFormControl:19\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        label\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                            \n                                \n                                    Inherited from         AbstractFormControl\n\n                                \n                            \n                        \n                            \n                                    Defined in         AbstractFormControl:14\n\n                            \n                        \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        blur\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/city/city.component.ts:30\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        valueChange\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/city/city.component.ts:29\n                            \n                        \n            \n        \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/components/city/city.component.ts:47\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            onBlur\n                        \n                        \n                    \n                \n            \n            \n                \nonBlur(event: any)\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/components/city/city.component.ts:57\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    event\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            onValueChange\n                        \n                        \n                    \n                \n            \n            \n                \nonValueChange(value: string)\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/components/city/city.component.ts:51\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            writeValue\n                        \n                        \n                    \n                \n            \n            \n                \nwriteValue(value: string)\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/components/city/city.component.ts:62\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Inherited from         AbstractFormControl\n\n                \n            \n            \n                \n                        Defined in         AbstractFormControl:27\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            registerOnChange\n                        \n                        \n                    \n                \n            \n            \n                \nregisterOnChange(fn: any)\n                \n            \n\n\n            \n                \n                    Inherited from         AbstractFormControl\n\n                \n            \n            \n                \n                        Defined in         AbstractFormControl:35\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    fn\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            registerOnTouched\n                        \n                        \n                    \n                \n            \n            \n                \nregisterOnTouched(fn: any)\n                \n            \n\n\n            \n                \n                    Inherited from         AbstractFormControl\n\n                \n            \n            \n                \n                        Defined in         AbstractFormControl:40\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    fn\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            registerValidation\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    registerValidation(ngControl: NgControl, fn: ValidationErrors)\n                \n            \n\n\n            \n                \n                    Inherited from         AbstractFormControl\n\n                \n            \n            \n                \n                        Defined in         AbstractFormControl:68\n\n                \n            \n\n\n            \n                \n                    Register self validating method\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    ngControl\n                                    \n                                                NgControl\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                    \n                                \n                                \n                                    fn\n                                    \n                                                ValidationErrors\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        function for validating self\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            setDisabledState\n                        \n                        \n                    \n                \n            \n            \n                \nsetDisabledState(isDisabled: boolean)\n                \n            \n\n\n            \n                \n                    Inherited from         AbstractFormControl\n\n                \n            \n            \n                \n                        Defined in         AbstractFormControl:45\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    isDisabled\n                                    \n                                                boolean\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            setErrorMsg\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    setErrorMsg()\n                \n            \n\n\n            \n                \n                    Inherited from         AbstractFormControl\n\n                \n            \n            \n                \n                        Defined in         AbstractFormControl:49\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            validateLabel\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    validateLabel()\n                \n            \n\n\n            \n                \n                    Inherited from         AbstractFormControl\n\n                \n            \n            \n                \n                        Defined in         AbstractFormControl:88\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Abstract\n                            writeValue\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    writeValue(value: any)\n                \n            \n\n\n            \n                \n                    Inherited from         AbstractFormControl\n\n                \n            \n            \n                \n                        Defined in         AbstractFormControl:32\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            _defaultErrMsg\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         ErrorMessage\n\n                        \n                    \n                    \n                        \n                            Default value : {\n    required: LabelReplacementTag + ' is required.',\n    invalidChar: LabelReplacementTag + ' must contain letters and may include numbers and special characters ' +\n                 'such as hyphens, periods, apostrophes and blank characters.'\n  }\n                        \n                    \n                        \n                            \n                                    Defined in projects/common/lib/components/city/city.component.ts:34\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            city\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : ''\n                        \n                    \n                        \n                            \n                                    Defined in projects/common/lib/components/city/city.component.ts:32\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            controlDir\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         NgControl\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Optional()@Self()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in projects/common/lib/components/city/city.component.ts:40\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Abstract\n                            _defaultErrMsg\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         ErrorMessage\n\n                        \n                    \n                    \n                        \n                            Default value : {}\n                        \n                    \n                            \n                                \n                                    Inherited from         AbstractFormControl\n\n                                \n                            \n                        \n                            \n                                    Defined in         AbstractFormControl:11\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            _onChange\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : () => {...}\n                        \n                    \n                            \n                                \n                                    Inherited from         AbstractFormControl\n\n                                \n                            \n                        \n                            \n                                    Defined in         AbstractFormControl:23\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            _onTouched\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : () => {...}\n                        \n                    \n                            \n                                \n                                    Inherited from         AbstractFormControl\n\n                                \n                            \n                        \n                            \n                                    Defined in         AbstractFormControl:24\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            objectId\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : UUID.UUID()\n                        \n                    \n                            \n                                \n                                    Inherited from         Base\n\n                                \n                            \n                        \n                            \n                                    Defined in         Base:11\n\n                            \n                        \n\n                \n                    \n                        An identifier for parents to keep track of components \n\n                    \n                \n\n            \n        \n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        value\n                    \n                \n\n                \n                    \n                        getvalue()\n                    \n                \n                            \n                                \n                                    Defined in projects/common/lib/components/city/city.component.ts:25\n                                \n                            \n\n                \n                    \n                        setvalue(val: string)\n                    \n                \n                            \n                                \n                                    Defined in projects/common/lib/components/city/city.component.ts:20\n                                \n                            \n                    \n                        \n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                        Type\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                            val\n                                                    \n                                                            \n                                                                            string\n                                                            \n                                                    \n                                                        \n                                                                No\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :         void\n\n                                \n                        \n                    \n            \n        \n\n\n\n    \n        Design Guidelines\nLorem ipsum dolor sit amet consectetur adipisicing elit. Sapiente, magnam ipsam. Sit quasi natus architecto rerum unde non provident! Quia nisi facere amet iste mollitia voluptatem non molestias esse optio?\nAperiam fugiat consectetur temporibus, iste repellat, quisquam sapiente nisi distinctio optio, autem nemo tenetur error eum voluptatibus ab accusamus quis voluptatum blanditiis. Quam et ut reprehenderit vitae nobis, at ipsum!\nExercitationem pariatur animi repudiandae corporis obcaecati ratione ducimus beatae quam, nostrum magnam unde numquam quidem cupiditate odit id. Beatae alias molestiae, optio incidunt harum quia voluptates deserunt sequi. Nesciunt, optio.\n\n    \n\n    \n        import { Component, OnInit, Input, Output, EventEmitter, Optional, Self } from '@angular/core';\nimport { ControlValueAccessor, NgControl } from '@angular/forms';\n\nimport { AbstractFormControl } from '../../models/abstract-form-control';\nimport { ErrorMessage, LabelReplacementTag } from '../../models/error-message.interface';\n\n@Component({\n  selector: 'common-city',\n  templateUrl: './city.component.html',\n  styleUrls: ['./city.component.scss']\n})\nexport class CityComponent extends AbstractFormControl implements OnInit, ControlValueAccessor  {\n\n  @Input() label: string = 'City';\n  @Input() maxlength: string = '100';\n  @Input() labelforId: string = 'city_' + this.objectId;\n  @Input() placeholder: string = 'City name';\n\n  @Input()\n  set value( val: string ) {\n    if ( val ) {\n      this.city = val;\n    }\n  }\n  get value() {\n    return this.city;\n  }\n\n  @Output() valueChange: EventEmitter = new EventEmitter();\n  @Output() blur: EventEmitter = new EventEmitter();\n\n  city: string = '';\n\n  _defaultErrMsg: ErrorMessage = {\n    required: LabelReplacementTag + ' is required.',\n    invalidChar: LabelReplacementTag + ' must contain letters and may include numbers and special characters ' +\n                 'such as hyphens, periods, apostrophes and blank characters.'\n  };\n\n  constructor( @Optional() @Self() public controlDir: NgControl ) {\n    super();\n    if ( controlDir ) {\n      controlDir.valueAccessor = this;\n    }\n  }\n\n  ngOnInit() {\n    super.ngOnInit();\n  }\n\n  onValueChange( value: string ) {\n    this.city = value;\n    this._onChange( value );\n    this.valueChange.emit( value );\n  }\n\n  onBlur( event: any ) {\n    this._onTouched( event );\n    this.blur.emit( event );\n  }\n\n  writeValue( value: string ): void {\n    if ( value !== undefined ) {\n      this.city = value;\n    }\n  }\n}\n\n    \n\n    \n        {{label}}\n\n\n \n\n  \n    {{_defaultErrMsg.required}}\n  \n  \n    {{_defaultErrMsg.invalidChar}}\n  \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '{{label}}       {{_defaultErrMsg.required}}        {{_defaultErrMsg.invalidChar}}  '\n    var COMPONENTS = [{'name': 'AccordionCommonComponent', 'selector': 'common-accordion'},{'name': 'AddressComponent', 'selector': 'common-address'},{'name': 'ButtonComponent', 'selector': 'common-button'},{'name': 'ButtonGroupComponent', 'selector': 'common-button-group'},{'name': 'CaptchaComponent', 'selector': 'common-captcha'},{'name': 'CheckboxComponent', 'selector': 'common-checkbox'},{'name': 'CityComponent', 'selector': 'common-city'},{'name': 'ConfirmTemplateComponent', 'selector': 'common-confirm-template'},{'name': 'ConsentModalComponent', 'selector': 'common-consent-modal'},{'name': 'CoreBreadcrumbComponent', 'selector': 'common-core-breadcrumb'},{'name': 'CountryComponent', 'selector': 'common-country'},{'name': 'DateComponent', 'selector': 'common-date'},{'name': 'DatepickerComponent', 'selector': 'common-datepicker'},{'name': 'DropdownComponent', 'selector': 'common-dropdown'},{'name': 'EmailComponent', 'selector': 'common-email'},{'name': 'ErrorContainerComponent', 'selector': 'common-error-container'},{'name': 'FileUploaderComponent', 'selector': 'common-file-uploader'},{'name': 'FormActionBarComponent', 'selector': 'common-form-action-bar'},{'name': 'FormSubmitBarComponent', 'selector': 'common-form-submit-bar'},{'name': 'FullNameComponent', 'selector': 'common-full-name'},{'name': 'GeocoderInputComponent', 'selector': 'common-geocoder-input'},{'name': 'HeaderComponent', 'selector': 'common-header'},{'name': 'NameComponent', 'selector': 'common-name'},{'name': 'PageFrameworkComponent', 'selector': 'common-page-framework'},{'name': 'PageSectionComponent', 'selector': 'common-page-section'},{'name': 'PasswordComponent', 'selector': 'common-password'},{'name': 'PhnComponent', 'selector': 'common-phn'},{'name': 'PhoneNumberComponent', 'selector': 'common-phone-number'},{'name': 'PostalCodeComponent', 'selector': 'common-postal-code'},{'name': 'ProvinceComponent', 'selector': 'common-province'},{'name': 'RadioComponent', 'selector': 'common-radio'},{'name': 'SampleModalComponent', 'selector': 'common-sample-modal'},{'name': 'SinComponent', 'selector': 'common-sin'},{'name': 'StreetComponent', 'selector': 'common-street'},{'name': 'ThumbnailComponent', 'selector': 'common-thumbnail'},{'name': 'ToggleComponent', 'selector': 'common-toggle'},{'name': 'WizardProgressBarComponent', 'selector': 'common-wizard-progress-bar'},{'name': 'XiconButtonComponent', 'selector': 'common-xicon-button'}];\n    var DIRECTIVES = [{'name': 'DateFieldFormatDirective', 'selector': '[commonDateFieldFormat]'},{'name': 'DuplicateCheckDirective', 'selector': '[commonDuplicateCheck]'},{'name': 'ValidateBcPostalDirective', 'selector': '[commonValidateBcPostal]'},{'name': 'ValidateCityDirective', 'selector': '[commonValidateCity]'},{'name': 'ValidateNameDirective', 'selector': '[commonValidateName]'},{'name': 'ValidatePostalcodeDirective', 'selector': '[commonValidatePostalcode]'},{'name': 'ValidateRegionDirective', 'selector': '[commonValidateRegion]'},{'name': 'ValidateStreetDirective', 'selector': '[commonValidateStreet]'}];\n    var ACTUAL_COMPONENT = {'name': 'CityComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/CommonAttachmentJson.html":{"url":"interfaces/CommonAttachmentJson.html","title":"interface - CommonAttachmentJson","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  CommonAttachmentJson\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/common/lib/models/images.model.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        attachmentDocumentType\n                                \n                                \n                                        attachmentOrder\n                                \n                                \n                                        attachmentUuid\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        attachmentDocumentType\n                                    \n                                \n                                \n                                    \n                                        attachmentDocumentType:     T\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     T\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        attachmentOrder\n                                    \n                                \n                                \n                                    \n                                        attachmentOrder:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        attachmentUuid\n                                    \n                                \n                                \n                                    \n                                        attachmentUuid:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { UUID } from 'angular2-uuid';\n\n// NOTE: If you change anything in this enum, check image-error-modal.component.html for tests and file-uploader.component.ts:\nexport enum CommonImageError {\n  WrongType,\n  TooSmall,\n  TooBig,\n  AlreadyExists,\n  Unknown,\n  CannotOpen,\n  PDFnotSupported,\n  CannotOpenPDF,\n}\n\nexport class CommonImageProcessingError {\n  commonImage?: CommonImage;\n  rawImageFile?: File;\n  maxSizeAllowed?: number;\n  // added errorDescription.PDF.JS gives proper error messages as invalid pdf structure or password protected pdf.Good for splunk tracking\n  constructor(public errorCode: CommonImageError, public errorDescription?: string) {\n\n  }\n}\n\n/**\n * Image as uploaded by user\n */\nexport class CommonImage {\n\n  uuid: string;\n\n  /**\n   * @param fileContent (optional) The base64 of an image. See `fileContent` property.\n   */\n  constructor(fileContent?: string) {\n    this.uuid = UUID.UUID();\n    if (fileContent) {\n      this.fileContent = fileContent;\n    }\n  }\n\n  /**\n   * The base64 content of an image.  Must already be base64 or some other stringable data-type.\n   * \n   * You should be able to do  to render the image.\n   */\n  fileContent: string;\n  documentType: T;\n\n  /**\n   * ContentType should generally match the MIME type, but can be set as needed by application.\n   * https://developer.mozilla.org/en-US/docs/Web/HTTP/Basics_of_HTTP/MIME_types\n   */\n  contentType: string;\n  // number of bytes.\n  size: number;\n  sizeUnit: string;\n  sizeTxt: string;\n  naturalHeight: number;\n  naturalWidth: number;\n  name: string;\n\n  // file uniqness checksum\n  id: string;\n\n  error?: CommonImageError;\n  attachmentOrder: number = 0;\n\n  /**\n   * Returns the JSON of an image ready to be submitted to the API.  You may\n   * have to set attachmentOrder before calling this.\n   */\n  toJSON(): CommonAttachmentJson {\n    return {\n      attachmentOrder: this.attachmentOrder, // will be 0 - should it be 1?\n      attachmentUuid: this.uuid,\n      attachmentDocumentType: this.documentType\n    };\n  }\n\n}\n\nexport interface CommonAttachmentJson {\n  attachmentOrder: number;\n  attachmentUuid: string;\n  attachmentDocumentType: T;\n}\n\nexport interface CommonImageScaleFactors {\n  widthFactor: number;\n  heightFactor: number;\n\n  scaleDown(scale: number): CommonImageScaleFactors;\n}\n\nexport class CommonImageScaleFactorsImpl implements CommonImageScaleFactors {\n  widthFactor: number;\n  heightFactor: number;\n\n  constructor(wFactor: number, hFactor: number) {\n    this.widthFactor = wFactor;\n    this.heightFactor = hFactor;\n  }\n\n  scaleDown(scale: number): CommonImageScaleFactors {\n    return new CommonImageScaleFactorsImpl(\n      this.widthFactor * scale,\n      this.heightFactor * scale);\n  }\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CommonImage.html":{"url":"classes/CommonImage.html","title":"class - CommonImage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CommonImage\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/common/lib/models/images.model.ts\n        \n\n            \n                Description\n            \n            \n                Image as uploaded by user\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                attachmentOrder\n                            \n                            \n                                contentType\n                            \n                            \n                                documentType\n                            \n                            \n                                    Optional\n                                error\n                            \n                            \n                                fileContent\n                            \n                            \n                                id\n                            \n                            \n                                name\n                            \n                            \n                                naturalHeight\n                            \n                            \n                                naturalWidth\n                            \n                            \n                                size\n                            \n                            \n                                sizeTxt\n                            \n                            \n                                sizeUnit\n                            \n                            \n                                uuid\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                toJSON\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(fileContent?: string)\n                    \n                \n                        \n                            \n                                Defined in projects/common/lib/models/images.model.ts:30\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        fileContent\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                        \n                                                                (optional) The base64 of an image. See fileContent property.\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            attachmentOrder\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Default value : 0\n                        \n                    \n                        \n                            \n                                    Defined in projects/common/lib/models/images.model.ts:67\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            contentType\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/common/lib/models/images.model.ts:54\n                            \n                        \n\n                \n                    \n                        ContentType should generally match the MIME type, but can be set as needed by application.\nhttps://developer.mozilla.org/en-US/docs/Web/HTTP/Basics_of_HTTP/MIME_types\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            documentType\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     T\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/common/lib/models/images.model.ts:48\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            error\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         CommonImageError\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/common/lib/models/images.model.ts:66\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            fileContent\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/common/lib/models/images.model.ts:47\n                            \n                        \n\n                \n                    \n                        The base64 content of an image.  Must already be base64 or some other stringable data-type.\nYou should be able to do  to render the image.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/common/lib/models/images.model.ts:64\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            name\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/common/lib/models/images.model.ts:61\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            naturalHeight\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/common/lib/models/images.model.ts:59\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            naturalWidth\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/common/lib/models/images.model.ts:60\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            size\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/common/lib/models/images.model.ts:56\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            sizeTxt\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/common/lib/models/images.model.ts:58\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            sizeUnit\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/common/lib/models/images.model.ts:57\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            uuid\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/common/lib/models/images.model.ts:30\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            toJSON\n                        \n                        \n                    \n                \n            \n            \n                \ntoJSON()\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/models/images.model.ts:73\n                \n            \n\n\n            \n                \n                    Returns the JSON of an image ready to be submitted to the API.  You may\nhave to set attachmentOrder before calling this.\n\n\n                    \n                        Returns :         CommonAttachmentJson\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { UUID } from 'angular2-uuid';\n\n// NOTE: If you change anything in this enum, check image-error-modal.component.html for tests and file-uploader.component.ts:\nexport enum CommonImageError {\n  WrongType,\n  TooSmall,\n  TooBig,\n  AlreadyExists,\n  Unknown,\n  CannotOpen,\n  PDFnotSupported,\n  CannotOpenPDF,\n}\n\nexport class CommonImageProcessingError {\n  commonImage?: CommonImage;\n  rawImageFile?: File;\n  maxSizeAllowed?: number;\n  // added errorDescription.PDF.JS gives proper error messages as invalid pdf structure or password protected pdf.Good for splunk tracking\n  constructor(public errorCode: CommonImageError, public errorDescription?: string) {\n\n  }\n}\n\n/**\n * Image as uploaded by user\n */\nexport class CommonImage {\n\n  uuid: string;\n\n  /**\n   * @param fileContent (optional) The base64 of an image. See `fileContent` property.\n   */\n  constructor(fileContent?: string) {\n    this.uuid = UUID.UUID();\n    if (fileContent) {\n      this.fileContent = fileContent;\n    }\n  }\n\n  /**\n   * The base64 content of an image.  Must already be base64 or some other stringable data-type.\n   * \n   * You should be able to do  to render the image.\n   */\n  fileContent: string;\n  documentType: T;\n\n  /**\n   * ContentType should generally match the MIME type, but can be set as needed by application.\n   * https://developer.mozilla.org/en-US/docs/Web/HTTP/Basics_of_HTTP/MIME_types\n   */\n  contentType: string;\n  // number of bytes.\n  size: number;\n  sizeUnit: string;\n  sizeTxt: string;\n  naturalHeight: number;\n  naturalWidth: number;\n  name: string;\n\n  // file uniqness checksum\n  id: string;\n\n  error?: CommonImageError;\n  attachmentOrder: number = 0;\n\n  /**\n   * Returns the JSON of an image ready to be submitted to the API.  You may\n   * have to set attachmentOrder before calling this.\n   */\n  toJSON(): CommonAttachmentJson {\n    return {\n      attachmentOrder: this.attachmentOrder, // will be 0 - should it be 1?\n      attachmentUuid: this.uuid,\n      attachmentDocumentType: this.documentType\n    };\n  }\n\n}\n\nexport interface CommonAttachmentJson {\n  attachmentOrder: number;\n  attachmentUuid: string;\n  attachmentDocumentType: T;\n}\n\nexport interface CommonImageScaleFactors {\n  widthFactor: number;\n  heightFactor: number;\n\n  scaleDown(scale: number): CommonImageScaleFactors;\n}\n\nexport class CommonImageScaleFactorsImpl implements CommonImageScaleFactors {\n  widthFactor: number;\n  heightFactor: number;\n\n  constructor(wFactor: number, hFactor: number) {\n    this.widthFactor = wFactor;\n    this.heightFactor = hFactor;\n  }\n\n  scaleDown(scale: number): CommonImageScaleFactors {\n    return new CommonImageScaleFactorsImpl(\n      this.widthFactor * scale,\n      this.heightFactor * scale);\n  }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CommonImageProcessingError.html":{"url":"classes/CommonImageProcessingError.html","title":"class - CommonImageProcessingError","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CommonImageProcessingError\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/common/lib/models/images.model.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Optional\n                                commonImage\n                            \n                            \n                                    Public\n                                errorCode\n                            \n                            \n                                    Public\n                                    Optional\n                                errorDescription\n                            \n                            \n                                    Optional\n                                maxSizeAllowed\n                            \n                            \n                                    Optional\n                                rawImageFile\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(errorCode: CommonImageError, errorDescription?: string)\n                    \n                \n                        \n                            \n                                Defined in projects/common/lib/models/images.model.ts:18\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        errorCode\n                                                  \n                                                        \n                                                                        CommonImageError\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        errorDescription\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            commonImage\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         CommonImage\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/common/lib/models/images.model.ts:16\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            errorCode\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         CommonImageError\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/common/lib/models/images.model.ts:20\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Optional\n                            errorDescription\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/common/lib/models/images.model.ts:20\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            maxSizeAllowed\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/common/lib/models/images.model.ts:18\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            rawImageFile\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     File\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/common/lib/models/images.model.ts:17\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { UUID } from 'angular2-uuid';\n\n// NOTE: If you change anything in this enum, check image-error-modal.component.html for tests and file-uploader.component.ts:\nexport enum CommonImageError {\n  WrongType,\n  TooSmall,\n  TooBig,\n  AlreadyExists,\n  Unknown,\n  CannotOpen,\n  PDFnotSupported,\n  CannotOpenPDF,\n}\n\nexport class CommonImageProcessingError {\n  commonImage?: CommonImage;\n  rawImageFile?: File;\n  maxSizeAllowed?: number;\n  // added errorDescription.PDF.JS gives proper error messages as invalid pdf structure or password protected pdf.Good for splunk tracking\n  constructor(public errorCode: CommonImageError, public errorDescription?: string) {\n\n  }\n}\n\n/**\n * Image as uploaded by user\n */\nexport class CommonImage {\n\n  uuid: string;\n\n  /**\n   * @param fileContent (optional) The base64 of an image. See `fileContent` property.\n   */\n  constructor(fileContent?: string) {\n    this.uuid = UUID.UUID();\n    if (fileContent) {\n      this.fileContent = fileContent;\n    }\n  }\n\n  /**\n   * The base64 content of an image.  Must already be base64 or some other stringable data-type.\n   * \n   * You should be able to do  to render the image.\n   */\n  fileContent: string;\n  documentType: T;\n\n  /**\n   * ContentType should generally match the MIME type, but can be set as needed by application.\n   * https://developer.mozilla.org/en-US/docs/Web/HTTP/Basics_of_HTTP/MIME_types\n   */\n  contentType: string;\n  // number of bytes.\n  size: number;\n  sizeUnit: string;\n  sizeTxt: string;\n  naturalHeight: number;\n  naturalWidth: number;\n  name: string;\n\n  // file uniqness checksum\n  id: string;\n\n  error?: CommonImageError;\n  attachmentOrder: number = 0;\n\n  /**\n   * Returns the JSON of an image ready to be submitted to the API.  You may\n   * have to set attachmentOrder before calling this.\n   */\n  toJSON(): CommonAttachmentJson {\n    return {\n      attachmentOrder: this.attachmentOrder, // will be 0 - should it be 1?\n      attachmentUuid: this.uuid,\n      attachmentDocumentType: this.documentType\n    };\n  }\n\n}\n\nexport interface CommonAttachmentJson {\n  attachmentOrder: number;\n  attachmentUuid: string;\n  attachmentDocumentType: T;\n}\n\nexport interface CommonImageScaleFactors {\n  widthFactor: number;\n  heightFactor: number;\n\n  scaleDown(scale: number): CommonImageScaleFactors;\n}\n\nexport class CommonImageScaleFactorsImpl implements CommonImageScaleFactors {\n  widthFactor: number;\n  heightFactor: number;\n\n  constructor(wFactor: number, hFactor: number) {\n    this.widthFactor = wFactor;\n    this.heightFactor = hFactor;\n  }\n\n  scaleDown(scale: number): CommonImageScaleFactors {\n    return new CommonImageScaleFactorsImpl(\n      this.widthFactor * scale,\n      this.heightFactor * scale);\n  }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/CommonImageScaleFactors.html":{"url":"interfaces/CommonImageScaleFactors.html","title":"interface - CommonImageScaleFactors","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  CommonImageScaleFactors\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/common/lib/models/images.model.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        heightFactor\n                                \n                                \n                                        widthFactor\n                                \n                            \n                        \n                    \n                    \n                        \n                            Methods\n                        \n                    \n                    \n                        \n                            \n                                \n                                    scaleDown\n                                \n                            \n                        \n                    \n                \n            \n        \n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            scaleDown\n                        \n                        \n                    \n                \n            \n            \n                \nscaleDown(scale: number)\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/models/images.model.ts:93\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    scale\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         CommonImageScaleFactors\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        heightFactor\n                                    \n                                \n                                \n                                    \n                                        heightFactor:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        widthFactor\n                                    \n                                \n                                \n                                    \n                                        widthFactor:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { UUID } from 'angular2-uuid';\n\n// NOTE: If you change anything in this enum, check image-error-modal.component.html for tests and file-uploader.component.ts:\nexport enum CommonImageError {\n  WrongType,\n  TooSmall,\n  TooBig,\n  AlreadyExists,\n  Unknown,\n  CannotOpen,\n  PDFnotSupported,\n  CannotOpenPDF,\n}\n\nexport class CommonImageProcessingError {\n  commonImage?: CommonImage;\n  rawImageFile?: File;\n  maxSizeAllowed?: number;\n  // added errorDescription.PDF.JS gives proper error messages as invalid pdf structure or password protected pdf.Good for splunk tracking\n  constructor(public errorCode: CommonImageError, public errorDescription?: string) {\n\n  }\n}\n\n/**\n * Image as uploaded by user\n */\nexport class CommonImage {\n\n  uuid: string;\n\n  /**\n   * @param fileContent (optional) The base64 of an image. See `fileContent` property.\n   */\n  constructor(fileContent?: string) {\n    this.uuid = UUID.UUID();\n    if (fileContent) {\n      this.fileContent = fileContent;\n    }\n  }\n\n  /**\n   * The base64 content of an image.  Must already be base64 or some other stringable data-type.\n   * \n   * You should be able to do  to render the image.\n   */\n  fileContent: string;\n  documentType: T;\n\n  /**\n   * ContentType should generally match the MIME type, but can be set as needed by application.\n   * https://developer.mozilla.org/en-US/docs/Web/HTTP/Basics_of_HTTP/MIME_types\n   */\n  contentType: string;\n  // number of bytes.\n  size: number;\n  sizeUnit: string;\n  sizeTxt: string;\n  naturalHeight: number;\n  naturalWidth: number;\n  name: string;\n\n  // file uniqness checksum\n  id: string;\n\n  error?: CommonImageError;\n  attachmentOrder: number = 0;\n\n  /**\n   * Returns the JSON of an image ready to be submitted to the API.  You may\n   * have to set attachmentOrder before calling this.\n   */\n  toJSON(): CommonAttachmentJson {\n    return {\n      attachmentOrder: this.attachmentOrder, // will be 0 - should it be 1?\n      attachmentUuid: this.uuid,\n      attachmentDocumentType: this.documentType\n    };\n  }\n\n}\n\nexport interface CommonAttachmentJson {\n  attachmentOrder: number;\n  attachmentUuid: string;\n  attachmentDocumentType: T;\n}\n\nexport interface CommonImageScaleFactors {\n  widthFactor: number;\n  heightFactor: number;\n\n  scaleDown(scale: number): CommonImageScaleFactors;\n}\n\nexport class CommonImageScaleFactorsImpl implements CommonImageScaleFactors {\n  widthFactor: number;\n  heightFactor: number;\n\n  constructor(wFactor: number, hFactor: number) {\n    this.widthFactor = wFactor;\n    this.heightFactor = hFactor;\n  }\n\n  scaleDown(scale: number): CommonImageScaleFactors {\n    return new CommonImageScaleFactorsImpl(\n      this.widthFactor * scale,\n      this.heightFactor * scale);\n  }\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CommonImageScaleFactorsImpl.html":{"url":"classes/CommonImageScaleFactorsImpl.html","title":"class - CommonImageScaleFactorsImpl","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CommonImageScaleFactorsImpl\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/common/lib/models/images.model.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                            CommonImageScaleFactors\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                heightFactor\n                            \n                            \n                                widthFactor\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                scaleDown\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(wFactor: number, hFactor: number)\n                    \n                \n                        \n                            \n                                Defined in projects/common/lib/models/images.model.ts:98\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        wFactor\n                                                  \n                                                        \n                                                                        number\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        hFactor\n                                                  \n                                                        \n                                                                        number\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            heightFactor\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/common/lib/models/images.model.ts:98\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            widthFactor\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/common/lib/models/images.model.ts:97\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            scaleDown\n                        \n                        \n                    \n                \n            \n            \n                \nscaleDown(scale: number)\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/models/images.model.ts:105\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    scale\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         CommonImageScaleFactors\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { UUID } from 'angular2-uuid';\n\n// NOTE: If you change anything in this enum, check image-error-modal.component.html for tests and file-uploader.component.ts:\nexport enum CommonImageError {\n  WrongType,\n  TooSmall,\n  TooBig,\n  AlreadyExists,\n  Unknown,\n  CannotOpen,\n  PDFnotSupported,\n  CannotOpenPDF,\n}\n\nexport class CommonImageProcessingError {\n  commonImage?: CommonImage;\n  rawImageFile?: File;\n  maxSizeAllowed?: number;\n  // added errorDescription.PDF.JS gives proper error messages as invalid pdf structure or password protected pdf.Good for splunk tracking\n  constructor(public errorCode: CommonImageError, public errorDescription?: string) {\n\n  }\n}\n\n/**\n * Image as uploaded by user\n */\nexport class CommonImage {\n\n  uuid: string;\n\n  /**\n   * @param fileContent (optional) The base64 of an image. See `fileContent` property.\n   */\n  constructor(fileContent?: string) {\n    this.uuid = UUID.UUID();\n    if (fileContent) {\n      this.fileContent = fileContent;\n    }\n  }\n\n  /**\n   * The base64 content of an image.  Must already be base64 or some other stringable data-type.\n   * \n   * You should be able to do  to render the image.\n   */\n  fileContent: string;\n  documentType: T;\n\n  /**\n   * ContentType should generally match the MIME type, but can be set as needed by application.\n   * https://developer.mozilla.org/en-US/docs/Web/HTTP/Basics_of_HTTP/MIME_types\n   */\n  contentType: string;\n  // number of bytes.\n  size: number;\n  sizeUnit: string;\n  sizeTxt: string;\n  naturalHeight: number;\n  naturalWidth: number;\n  name: string;\n\n  // file uniqness checksum\n  id: string;\n\n  error?: CommonImageError;\n  attachmentOrder: number = 0;\n\n  /**\n   * Returns the JSON of an image ready to be submitted to the API.  You may\n   * have to set attachmentOrder before calling this.\n   */\n  toJSON(): CommonAttachmentJson {\n    return {\n      attachmentOrder: this.attachmentOrder, // will be 0 - should it be 1?\n      attachmentUuid: this.uuid,\n      attachmentDocumentType: this.documentType\n    };\n  }\n\n}\n\nexport interface CommonAttachmentJson {\n  attachmentOrder: number;\n  attachmentUuid: string;\n  attachmentDocumentType: T;\n}\n\nexport interface CommonImageScaleFactors {\n  widthFactor: number;\n  heightFactor: number;\n\n  scaleDown(scale: number): CommonImageScaleFactors;\n}\n\nexport class CommonImageScaleFactorsImpl implements CommonImageScaleFactors {\n  widthFactor: number;\n  heightFactor: number;\n\n  constructor(wFactor: number, hFactor: number) {\n    this.widthFactor = wFactor;\n    this.heightFactor = hFactor;\n  }\n\n  scaleDown(scale: number): CommonImageScaleFactors {\n    return new CommonImageScaleFactorsImpl(\n      this.widthFactor * scale,\n      this.heightFactor * scale);\n  }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/CommonLogMessage.html":{"url":"interfaces/CommonLogMessage.html","title":"interface - CommonLogMessage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  CommonLogMessage\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/common/lib/services/logger.service.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        event\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n            \n    Indexable\n        \n            \n                \n                    \n                        [key: string]:        any\n\n                    \n                \n                        \n                            \n                                Defined in projects/common/lib/services/logger.service.ts:21\n                            \n                        \n            \n        \n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        event\n                                    \n                                \n                                \n                                    \n                                        event:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The type of event being logged. \n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { HttpClient, HttpErrorResponse, HttpHeaders } from '@angular/common/http';\nimport { AbstractHttpService } from './abstract-api-service';\nimport { throwError } from 'rxjs';\nimport * as moment_ from 'moment';\nconst moment = moment_;\n\nenum SeverityLevels {\n  INFO = 'info',\n  ERROR = 'error',\n}\n\nexport enum CommonLogEvents {\n  navigation = 'navigation',\n  error = 'error',\n  submission = 'submission'\n}\n\nexport interface CommonLogMessage {\n  /** The type of event being logged. */\n  event: string; // Should be subclasses into multiple string literals\n  // We allow any other properties/values in the interface\n  [key: string]: any;\n}\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class CommonLogger extends AbstractHttpService {\n  /**\n   * The HTTP Headers which go with each request.  These MUST be set if you are\n   * using the logger.  Fields include:\n   *\n   * - program (REQUIRED, the application wide code)\n   * - applicationId (REQUIRED, like sessionId)\n   * - request_method (REQUIRED, 'POST')\n   * - logsource: (REQUIRED, window.location.hostname)\n   * - http_x_forwarded_host (REQUIRED, window.location.hostname)\n   *\n   */\n  protected _headers: HttpHeaders = new HttpHeaders({\n    request_method: 'POST',\n    logsource: window.location.hostname,\n    http_x_forwarded_host: window.location.hostname\n  });\n\n  private url: string = null;\n\n  constructor(protected http: HttpClient) {\n    super(http);\n  }\n\n  set applicationId( id: string ) {\n    this._headers = this._headers.set( 'applicationId', id );\n  }\n\n  get applicationId() {\n    return this._headers.get( 'applicationId' );\n  }\n\n  set programName( name: string ) {\n    this._headers = this._headers.set( 'program', name );\n  }\n\n  get programName() {\n    return this._headers.get( 'name' );\n  }\n\n  setURL(newURL: string) {\n    this.url = newURL;\n  }\n\n  public log( message: any ) {\n    this._log( message as CommonLogMessage );\n  }\n\n  public logError( errorMessage: any ) {\n    this._logError( errorMessage as CommonLogMessage );\n  }\n\n  /**\n   * Log a message to Splunk. This is the main way to send logs and\n   * automatically includes meta-data. You do **not** need to subscribe to the\n   * response, as the service already does that. The input object must have an\n   * 'event' property set, everything else is optional.\n   *\n   * Example:\n   * ```\n    this.logService.log({\n       event: 'submission',\n       dateObj: new Date()\n    });\n    ```\n   * @param message A JavaScript object, nesting is fine, with `event` property\n   * set.\n   */\n  protected _log(message: CommonLogMessage) {\n    this.setSeverity(SeverityLevels.INFO);\n    return this._sendLog(message);\n  }\n\n  protected _logError(errorMessage: CommonLogMessage) {\n    this.setSeverity(SeverityLevels.ERROR);\n    return this._sendLog(errorMessage);\n  }\n\n  /**\n   * Log HTTP errors, e.g. when losing network connectivity or receiving an\n   * error response code.\n   */\n  public logHttpError(error: HttpErrorResponse) {\n    return this._logError({\n      event: CommonLogEvents.error,\n      message: error.message,\n      errorName: error.name,\n      statusText: error.statusText\n    });\n  }\n\n  /**\n   * Internal method to send logs to Splunk, includes meta-data except that's\n   * consistent across all requests, but not specific values like severity\n   * level.\n   *\n   * @param message A JavaScript object or anything that can be toString()'d,\n   * like Date\n   */\n  private _sendLog(message: CommonLogMessage) {\n    // Update headers\n    this.setTimestamp();\n    this.setTags(message.event);\n\n    if (this.url === null) {\n        const msg = 'Unable to send logs as URL as not been set via setURL()';\n        console.error(msg);\n        return throwError(msg);\n    }\n\n    // Configure request\n    const body = { message: message };\n\n    // We call .subscribe() here because we don't care about the response and\n    // we want to ensure that we never forget to call subscribe.\n    return this.post(this.url, body).subscribe();\n  }\n\n  protected handleError(error: HttpErrorResponse) {\n    console.log('logService handleError()', error);\n    if (error.error instanceof ErrorEvent) {\n      // Client-side / network error occured\n      console.error('An error occured: ', error.error.message);\n    } else {\n      // The backend returned an unsuccessful response code\n      console.error(`Backend returned error code: ${error.status}.  Error body: ${error.error}`);\n    }\n\n    return throwError(error);\n  }\n\n  /**\n   * Overwrite the inherited httpOptions so we can set responseType to text.\n   * This updates Angular's parsing, and it won't error out due to the server\n   * not responding with JSON.\n   */\n  protected get httpOptions(): any {\n    return {\n      headers: this._headers,\n      responseType: 'text'\n    };\n  }\n\n  // TODO: Remove moment dependency\n  private setTimestamp() {\n    this._headers = this._headers.set('timestamp', moment().toISOString());\n  }\n\n  private setSeverity(severity: SeverityLevels) {\n    this._headers = this._headers.set('severity', severity);\n  }\n\n  /**\n   * The headers are easier to search in splunk, and we aren't using tags, so\n   * repurpose it to event type.\n   */\n  private setTags(message: string ) {\n    this._headers = this._headers.set('tags', message);\n  }\n\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ConfirmTemplateComponent.html":{"url":"components/ConfirmTemplateComponent.html","title":"component - ConfirmTemplateComponent","body":"\n                   \n\n\n\n\n\n  Components\n  ConfirmTemplateComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    projects/common/lib/components/confirm-template/confirm-template.component.ts\n\n\n\n    \n        Extends\n    \n    \n                Base\n    \n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                common-confirm-template\n            \n\n            \n                styleUrls\n                ./confirm-template.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./confirm-template.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                objectId\n                            \n                        \n                    \n                \n\n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                displayIcon\n                            \n                        \n                    \n                \n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    successCode\n                                \n                                \n                                    errorCode\n                                \n                                \n                                    warningCode\n                                \n                            \n                        \n                    \n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in projects/common/lib/components/confirm-template/confirm-template.component.ts:18\n                            \n                        \n\n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        displayIcon\n                    \n                \n                \n                    \n                        Type :         ApiStatusCodes\n\n                    \n                \n                \n                    \n                        Default value : ApiStatusCodes.SUCCESS\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/confirm-template/confirm-template.component.ts:18\n                            \n                        \n            \n        \n\n\n\n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            objectId\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : UUID.UUID()\n                        \n                    \n                            \n                                \n                                    Inherited from         Base\n\n                                \n                            \n                        \n                            \n                                    Defined in         Base:11\n\n                            \n                        \n\n                \n                    \n                        An identifier for parents to keep track of components \n\n                    \n                \n\n            \n        \n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        successCode\n                    \n                \n\n                \n                    \n                        getsuccessCode()\n                    \n                \n                            \n                                \n                                    Defined in projects/common/lib/components/confirm-template/confirm-template.component.ts:25\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        errorCode\n                    \n                \n\n                \n                    \n                        geterrorCode()\n                    \n                \n                            \n                                \n                                    Defined in projects/common/lib/components/confirm-template/confirm-template.component.ts:29\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        warningCode\n                    \n                \n\n                \n                    \n                        getwarningCode()\n                    \n                \n                            \n                                \n                                    Defined in projects/common/lib/components/confirm-template/confirm-template.component.ts:33\n                                \n                            \n\n            \n        \n\n\n\n\n    \n        import { Component, Input } from '@angular/core';\nimport { Base } from '../../models/base';\n\n\nexport enum ApiStatusCodes {\n  SUCCESS = '0',\n  ERROR = '1',\n  WARNING = '2'\n}\n\n@Component({\n  selector: 'common-confirm-template',\n  templateUrl: './confirm-template.component.html',\n  styleUrls: ['./confirm-template.component.scss']\n})\nexport class ConfirmTemplateComponent extends Base {\n\n  @Input() displayIcon: ApiStatusCodes = ApiStatusCodes.SUCCESS;\n\n  constructor() {\n    super();\n  }\n\n  // Status codes\n  get successCode() {\n    return ApiStatusCodes.SUCCESS;\n  }\n\n  get errorCode() {\n    return ApiStatusCodes.ERROR;\n  }\n\n  get warningCode() {\n    return ApiStatusCodes.WARNING;\n  }\n}\n\n    \n\n    \n        \n\n\n  \n  \n    \n      \n        \n          \n        \n        \n      \n    \n\n    \n      \n        \n          \n        \n        \n      \n    \n\n    \n      \n        \n          \n        \n        \n      \n    \n  \n\n\n\n\n\n  \n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                                                                                                                                                          '\n    var COMPONENTS = [{'name': 'AccordionCommonComponent', 'selector': 'common-accordion'},{'name': 'AddressComponent', 'selector': 'common-address'},{'name': 'ButtonComponent', 'selector': 'common-button'},{'name': 'ButtonGroupComponent', 'selector': 'common-button-group'},{'name': 'CaptchaComponent', 'selector': 'common-captcha'},{'name': 'CheckboxComponent', 'selector': 'common-checkbox'},{'name': 'CityComponent', 'selector': 'common-city'},{'name': 'ConfirmTemplateComponent', 'selector': 'common-confirm-template'},{'name': 'ConsentModalComponent', 'selector': 'common-consent-modal'},{'name': 'CoreBreadcrumbComponent', 'selector': 'common-core-breadcrumb'},{'name': 'CountryComponent', 'selector': 'common-country'},{'name': 'DateComponent', 'selector': 'common-date'},{'name': 'DatepickerComponent', 'selector': 'common-datepicker'},{'name': 'DropdownComponent', 'selector': 'common-dropdown'},{'name': 'EmailComponent', 'selector': 'common-email'},{'name': 'ErrorContainerComponent', 'selector': 'common-error-container'},{'name': 'FileUploaderComponent', 'selector': 'common-file-uploader'},{'name': 'FormActionBarComponent', 'selector': 'common-form-action-bar'},{'name': 'FormSubmitBarComponent', 'selector': 'common-form-submit-bar'},{'name': 'FullNameComponent', 'selector': 'common-full-name'},{'name': 'GeocoderInputComponent', 'selector': 'common-geocoder-input'},{'name': 'HeaderComponent', 'selector': 'common-header'},{'name': 'NameComponent', 'selector': 'common-name'},{'name': 'PageFrameworkComponent', 'selector': 'common-page-framework'},{'name': 'PageSectionComponent', 'selector': 'common-page-section'},{'name': 'PasswordComponent', 'selector': 'common-password'},{'name': 'PhnComponent', 'selector': 'common-phn'},{'name': 'PhoneNumberComponent', 'selector': 'common-phone-number'},{'name': 'PostalCodeComponent', 'selector': 'common-postal-code'},{'name': 'ProvinceComponent', 'selector': 'common-province'},{'name': 'RadioComponent', 'selector': 'common-radio'},{'name': 'SampleModalComponent', 'selector': 'common-sample-modal'},{'name': 'SinComponent', 'selector': 'common-sin'},{'name': 'StreetComponent', 'selector': 'common-street'},{'name': 'ThumbnailComponent', 'selector': 'common-thumbnail'},{'name': 'ToggleComponent', 'selector': 'common-toggle'},{'name': 'WizardProgressBarComponent', 'selector': 'common-wizard-progress-bar'},{'name': 'XiconButtonComponent', 'selector': 'common-xicon-button'}];\n    var DIRECTIVES = [{'name': 'DateFieldFormatDirective', 'selector': '[commonDateFieldFormat]'},{'name': 'DuplicateCheckDirective', 'selector': '[commonDuplicateCheck]'},{'name': 'ValidateBcPostalDirective', 'selector': '[commonValidateBcPostal]'},{'name': 'ValidateCityDirective', 'selector': '[commonValidateCity]'},{'name': 'ValidateNameDirective', 'selector': '[commonValidateName]'},{'name': 'ValidatePostalcodeDirective', 'selector': '[commonValidatePostalcode]'},{'name': 'ValidateRegionDirective', 'selector': '[commonValidateRegion]'},{'name': 'ValidateStreetDirective', 'selector': '[commonValidateStreet]'}];\n    var ACTUAL_COMPONENT = {'name': 'ConfirmTemplateComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Container.html":{"url":"classes/Container.html","title":"class - Container","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Container\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/common/lib/models/container.ts\n        \n\n            \n                Description\n            \n            \n                Container class contains the basic functionality for containers.\n\n            \n\n\n\n            \n                Example\n            \n            \n                        \n                            Example of how to use Container\n\nexport class RegistrationContainerComponent extends Container\n      implements AfterViewInit, OnDestroy {\n\nconstructor( private headerService: HeaderService,\n        private pageStateService: PageStateService,\n        protected  containerService: ContainerService) {\nsuper( containerService );\nthis.setProgressSteps(pages);\nthis.pageStateService.setPages( pages, PRACTITIONER_REGISTRATION_PAGES );\nthis.headerService.setTitle('Practitioner Assignment to Medical Services Plan Facility for Business Cost Premium');\n}\n\nngAfterViewInit() {\nthis.subscribeFormBar();\n}\n\nngOnDestroy() {\nthis.unsubscribeFormBar();\n}\n...\n}\n\nhtml would be:\n\n\n\n\n\n\n\n\n                        \n            \n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                _subscriptions\n                            \n                            \n                                isLoading\n                            \n                            \n                                progressSteps\n                            \n                            \n                                submitLabel\n                            \n                            \n                                useDefaultColor\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                continue\n                            \n                            \n                                convertRouteToTitle\n                            \n                            \n                                    Protected\n                                setProgressSteps\n                            \n                            \n                                    Protected\n                                subscribeFormBar\n                            \n                            \n                                    Protected\n                                unsubscribeFormBar\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(containerService?: ContainerService)\n                    \n                \n                        \n                            \n                                Defined in projects/common/lib/models/container.ts:67\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        containerService\n                                                  \n                                                        \n                                                                        ContainerService\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            _subscriptions\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Subscription[]\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/common/lib/models/container.ts:67\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            isLoading\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in projects/common/lib/models/container.ts:65\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            progressSteps\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         WizardProgressItem[]\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/common/lib/models/container.ts:60\n                            \n                        \n\n                \n                    \n                        Route items for the stepper \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            submitLabel\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : DefaultSubmitLabel\n                        \n                    \n                        \n                            \n                                    Defined in projects/common/lib/models/container.ts:64\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            useDefaultColor\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                    \n                        \n                            Default value : true\n                        \n                    \n                        \n                            \n                                    Defined in projects/common/lib/models/container.ts:63\n                            \n                        \n\n                \n                    \n                        Observables for form bar \n\n                    \n                \n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            continue\n                        \n                        \n                    \n                \n            \n            \n                \ncontinue()\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/models/container.ts:75\n                \n            \n\n\n            \n                \n                    Use when form bar is part of the container\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            convertRouteToTitle\n                        \n                        \n                    \n                \n            \n            \n                \nconvertRouteToTitle(routePath: string)\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/models/container.ts:83\n                \n            \n\n\n            \n                \n                    Converts a lower case string of a route in a user readable title.  e.g.\n\"personal-info\" -> \"Personal Info\"\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    routePath\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            setProgressSteps\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    setProgressSteps(pageRoutes: Route[])\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/models/container.ts:87\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    pageRoutes\n                                    \n                                            Route[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            subscribeFormBar\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    subscribeFormBar()\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/models/container.ts:103\n                \n            \n\n\n            \n                \n                    Subscribe to form bar observables - Called in the AfterViewInit\nUse when form bar is part of the container\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            unsubscribeFormBar\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    unsubscribeFormBar()\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/models/container.ts:133\n                \n            \n\n\n            \n                \n                    Unsubscribe to form bar observables  - Called in the onDestroy()\nUse when form bar is part of the container\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { Route } from '@angular/router';\nimport { ContainerService, DefaultSubmitLabel } from '../services/container.service';\nimport { Subscription } from 'rxjs';\n\nexport interface WizardProgressItem {\n  title: string;\n  route: string;\n}\n\n/**\n * Container class contains the basic functionality for containers.\n *\n * @example\n *  Example of how to use Container\n *\n *      export class RegistrationContainerComponent extends Container\n *                   implements AfterViewInit, OnDestroy {\n *\n *        constructor( private headerService: HeaderService,\n *                     private pageStateService: PageStateService,\n *                     protected  containerService: ContainerService) {\n *          super( containerService );\n *          this.setProgressSteps(pages);\n *          this.pageStateService.setPages( pages, PRACTITIONER_REGISTRATION_PAGES );\n *          this.headerService.setTitle('Practitioner Assignment to Medical Services Plan Facility for Business Cost Premium');\n *        }\n *\n *        ngAfterViewInit() {\n *          this.subscribeFormBar();\n *        }\n *\n *        ngOnDestroy() {\n *          this.unsubscribeFormBar();\n *        }\n *        ...\n *      }\n *\n * html would be:\n *\n *    \n *      \n *    \n *    \n *      \n *    \n *    \n *\n * @export\n *\n */\n\n/** Base functionality for container that is used to display bread crumbs */\nexport class Container {\n\n  /** Route items for the stepper */\n  progressSteps: WizardProgressItem[];\n\n  /** Observables for form bar */\n  useDefaultColor: boolean = true;\n  submitLabel: string = DefaultSubmitLabel;\n  isLoading: boolean = false;\n\n  private _subscriptions: Subscription[];\n\n  constructor( protected containerService?: ContainerService ) {\n  }\n\n  /**\n   * Use when form bar is part of the container\n   */\n  continue() {\n    this.containerService.submitButtonClicked();\n  }\n\n  /**\n   * Converts a lower case string of a route in a user readable title.  e.g.\n   * \"personal-info\" -> \"Personal Info\"\n   */\n  convertRouteToTitle(routePath: string): string {\n    return routePath.split('-').map(x => x[0].toUpperCase() + x.slice(1)).join(' ');\n  }\n\n  protected setProgressSteps( pageRoutes: Route[] ): void {\n    // Interface for wizard progress items\n    this.progressSteps = pageRoutes.map(page => {\n      if (page.path !== '') {\n        return {\n          title: this.convertRouteToTitle(page.path),\n          route: page.path\n        };\n      }\n    }).filter(x => x);\n  }\n\n  /**\n   * Subscribe to form bar observables - Called in the AfterViewInit\n   * Use when form bar is part of the container\n   */\n  protected subscribeFormBar() {\n    if ( this.containerService ) {\n\n      this._subscriptions = [\n        this.containerService.$useDefaultColor\n        .subscribe(\n          (async (defaultColor) => {\n            this.useDefaultColor = await defaultColor;\n            // console.log( 'defaultColor: ', this.useDefaultColor );\n        })),\n        this.containerService.$submitLabel\n        .subscribe(\n          (async (label) => {\n            this.submitLabel = await label;\n            // console.log( 'button label: ', this.submitLabel );\n        })),\n        this.containerService.$isLoading\n        .subscribe(\n          (async (isLoading) => {\n            this.isLoading = await isLoading;\n            // console.log( 'isLoading: ', this.isLoading );\n        }))\n      ];\n    }\n  }\n\n  /**\n   * Unsubscribe to form bar observables  - Called in the onDestroy()\n   * Use when form bar is part of the container\n   */\n  protected unsubscribeFormBar() {\n    this._subscriptions.forEach( x => x.unsubscribe() );\n  }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ContainerService.html":{"url":"injectables/ContainerService.html","title":"injectable - ContainerService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  ContainerService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/common/lib/services/container.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                $continueBtn\n                            \n                            \n                                $continueBtnSubject\n                            \n                            \n                                $isLoading\n                            \n                            \n                                $isLoadingSubject\n                            \n                            \n                                $submitLabel\n                            \n                            \n                                $submitLabelSubject\n                            \n                            \n                                $useDefaultColor\n                            \n                            \n                                $useDefaultColorSubject\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                setIsLoading\n                            \n                            \n                                setSubmitLabel\n                            \n                            \n                                setUseDefaultColor\n                            \n                            \n                                submitButtonClicked\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in projects/common/lib/services/container.service.ts:20\n                            \n                        \n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            setIsLoading\n                        \n                        \n                    \n                \n            \n            \n                \nsetIsLoading(isLoading: boolean)\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/services/container.service.ts:35\n                \n            \n\n\n            \n                \n                    If no parameter is passed, it sets the spinner active \n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                \n                            \n                            \n                                \n                                    isLoading\n                                    \n                                                boolean\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        true\n                                    \n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            setSubmitLabel\n                        \n                        \n                    \n                \n            \n            \n                \nsetSubmitLabel(label: string)\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/services/container.service.ts:25\n                \n            \n\n\n            \n                \n                    If no parameter is passed, the default label is 'Continue' \n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                \n                            \n                            \n                                \n                                    label\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        DefaultSubmitLabel\n                                    \n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            setUseDefaultColor\n                        \n                        \n                    \n                \n            \n            \n                \nsetUseDefaultColor(defaultColor: boolean)\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/services/container.service.ts:30\n                \n            \n\n\n            \n                \n                    If no parameter is passed, it uses the default color \n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                \n                            \n                            \n                                \n                                    defaultColor\n                                    \n                                                boolean\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        true\n                                    \n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            submitButtonClicked\n                        \n                        \n                    \n                \n            \n            \n                \nsubmitButtonClicked()\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/services/container.service.ts:39\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            $continueBtn\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : this.$continueBtnSubject.asObservable()\n                        \n                    \n                        \n                            \n                                    Defined in projects/common/lib/services/container.service.ts:19\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            $continueBtnSubject\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Subject\n\n                        \n                    \n                    \n                        \n                            Default value : new Subject()\n                        \n                    \n                        \n                            \n                                    Defined in projects/common/lib/services/container.service.ts:14\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            $isLoading\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : this.$isLoadingSubject.asObservable()\n                        \n                    \n                        \n                            \n                                    Defined in projects/common/lib/services/container.service.ts:17\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            $isLoadingSubject\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     BehaviorSubject\n\n                        \n                    \n                    \n                        \n                            Default value : new BehaviorSubject( false )\n                        \n                    \n                        \n                            \n                                    Defined in projects/common/lib/services/container.service.ts:11\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            $submitLabel\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : this.$submitLabelSubject.asObservable()\n                        \n                    \n                        \n                            \n                                    Defined in projects/common/lib/services/container.service.ts:18\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            $submitLabelSubject\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     BehaviorSubject\n\n                        \n                    \n                    \n                        \n                            Default value : new BehaviorSubject( DefaultSubmitLabel )\n                        \n                    \n                        \n                            \n                                    Defined in projects/common/lib/services/container.service.ts:12\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            $useDefaultColor\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : this.$useDefaultColorSubject.asObservable()\n                        \n                    \n                        \n                            \n                                    Defined in projects/common/lib/services/container.service.ts:20\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            $useDefaultColorSubject\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     BehaviorSubject\n\n                        \n                    \n                    \n                        \n                            Default value : new BehaviorSubject( true )\n                        \n                    \n                        \n                            \n                                    Defined in projects/common/lib/services/container.service.ts:13\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { BehaviorSubject, Subject, Subscription } from 'rxjs';\n\nexport const DefaultSubmitLabel: string = 'Continue';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ContainerService {\n\n  $isLoadingSubject: BehaviorSubject = new BehaviorSubject( false );\n  $submitLabelSubject: BehaviorSubject = new BehaviorSubject( DefaultSubmitLabel );\n  $useDefaultColorSubject: BehaviorSubject = new BehaviorSubject( true );\n  $continueBtnSubject: Subject = new Subject();\n\n  // Observables\n  $isLoading = this.$isLoadingSubject.asObservable();\n  $submitLabel = this.$submitLabelSubject.asObservable();\n  $continueBtn = this.$continueBtnSubject.asObservable();\n  $useDefaultColor = this.$useDefaultColorSubject.asObservable();\n\n  constructor() { }\n\n  /** If no parameter is passed, the default label is 'Continue' */\n  setSubmitLabel( label: string  = DefaultSubmitLabel ) {\n    this.$submitLabelSubject.next( label );\n  }\n\n  /** If no parameter is passed, it uses the default color */\n  setUseDefaultColor( defaultColor: boolean = true ) {\n    this.$useDefaultColorSubject.next( defaultColor );\n  }\n\n  /** If no parameter is passed, it sets the spinner active */\n  setIsLoading( isLoading: boolean = true ) {\n    this.$isLoadingSubject.next( isLoading );\n  }\n\n  submitButtonClicked() {\n    this.$continueBtnSubject.next();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/CoreBreadcrumbComponent.html":{"url":"components/CoreBreadcrumbComponent.html","title":"component - CoreBreadcrumbComponent","body":"\n                   \n\n\n\n\n\n  Components\n  CoreBreadcrumbComponent\n\n\n\n        \n            Info\n        \n        \n            Design Guidelines\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    projects/common/lib/components/core-breadcrumb/core-breadcrumb.component.ts\n\n\n    \n        Description\n    \n    \n        The base styles for a breadcrumb with slots for content to go.  If you need a\ncomplex breadcrumb, the idea is you can extend this CoreBreadcrumb and use\nthe base styles.  There are 3 slots: left, center, and right - all are\noptional and any configuration works. You select the slot by adding it as an\nattribute to the top level elements inside of the breadcrumb element.\n   Example usage:\n   \n    \n      Dashboard /\n      Provision by {{ IS_SHOWING_PERSON ? \"User\" : \"Site\" }}\n    \n    \n    \n   \n\n\n    \n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n    \n        Example\n    \n    \n    \n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                common-core-breadcrumb\n            \n\n            \n                styleUrls\n                ./core-breadcrumb.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./core-breadcrumb.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in projects/common/lib/components/core-breadcrumb/core-breadcrumb.component.ts:29\n                            \n                        \n\n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/components/core-breadcrumb/core-breadcrumb.component.ts:33\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n\n\n    \n        Design Guidelines\ntodo\n\n    \n\n    \n        import { Component, OnInit } from '@angular/core';\n\n/**\n *\n * The base styles for a breadcrumb with slots for content to go.  If you need a\n * complex breadcrumb, the idea is you can extend this CoreBreadcrumb and use\n * the base styles.  There are 3 slots: left, center, and right - all are\n * optional and any configuration works. You select the slot by adding it as an\n * attribute to the top level elements inside of the breadcrumb element.\n *\n *   Example usage:\n *\n *   \n *    \n *      Dashboard /\n *      Provision by {{ IS_SHOWING_PERSON ? \"User\" : \"Site\" }}\n *    \n *    \n *    \n *   \n *\n *   @export\n */\n@Component({\n  selector: 'common-core-breadcrumb',\n  templateUrl: './core-breadcrumb.component.html',\n  styleUrls: ['./core-breadcrumb.component.scss']\n})\nexport class CoreBreadcrumbComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n\n    \n\n    \n        \n    \n    \n    \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '            '\n    var COMPONENTS = [{'name': 'AccordionCommonComponent', 'selector': 'common-accordion'},{'name': 'AddressComponent', 'selector': 'common-address'},{'name': 'ButtonComponent', 'selector': 'common-button'},{'name': 'ButtonGroupComponent', 'selector': 'common-button-group'},{'name': 'CaptchaComponent', 'selector': 'common-captcha'},{'name': 'CheckboxComponent', 'selector': 'common-checkbox'},{'name': 'CityComponent', 'selector': 'common-city'},{'name': 'ConfirmTemplateComponent', 'selector': 'common-confirm-template'},{'name': 'ConsentModalComponent', 'selector': 'common-consent-modal'},{'name': 'CoreBreadcrumbComponent', 'selector': 'common-core-breadcrumb'},{'name': 'CountryComponent', 'selector': 'common-country'},{'name': 'DateComponent', 'selector': 'common-date'},{'name': 'DatepickerComponent', 'selector': 'common-datepicker'},{'name': 'DropdownComponent', 'selector': 'common-dropdown'},{'name': 'EmailComponent', 'selector': 'common-email'},{'name': 'ErrorContainerComponent', 'selector': 'common-error-container'},{'name': 'FileUploaderComponent', 'selector': 'common-file-uploader'},{'name': 'FormActionBarComponent', 'selector': 'common-form-action-bar'},{'name': 'FormSubmitBarComponent', 'selector': 'common-form-submit-bar'},{'name': 'FullNameComponent', 'selector': 'common-full-name'},{'name': 'GeocoderInputComponent', 'selector': 'common-geocoder-input'},{'name': 'HeaderComponent', 'selector': 'common-header'},{'name': 'NameComponent', 'selector': 'common-name'},{'name': 'PageFrameworkComponent', 'selector': 'common-page-framework'},{'name': 'PageSectionComponent', 'selector': 'common-page-section'},{'name': 'PasswordComponent', 'selector': 'common-password'},{'name': 'PhnComponent', 'selector': 'common-phn'},{'name': 'PhoneNumberComponent', 'selector': 'common-phone-number'},{'name': 'PostalCodeComponent', 'selector': 'common-postal-code'},{'name': 'ProvinceComponent', 'selector': 'common-province'},{'name': 'RadioComponent', 'selector': 'common-radio'},{'name': 'SampleModalComponent', 'selector': 'common-sample-modal'},{'name': 'SinComponent', 'selector': 'common-sin'},{'name': 'StreetComponent', 'selector': 'common-street'},{'name': 'ThumbnailComponent', 'selector': 'common-thumbnail'},{'name': 'ToggleComponent', 'selector': 'common-toggle'},{'name': 'WizardProgressBarComponent', 'selector': 'common-wizard-progress-bar'},{'name': 'XiconButtonComponent', 'selector': 'common-xicon-button'}];\n    var DIRECTIVES = [{'name': 'DateFieldFormatDirective', 'selector': '[commonDateFieldFormat]'},{'name': 'DuplicateCheckDirective', 'selector': '[commonDuplicateCheck]'},{'name': 'ValidateBcPostalDirective', 'selector': '[commonValidateBcPostal]'},{'name': 'ValidateCityDirective', 'selector': '[commonValidateCity]'},{'name': 'ValidateNameDirective', 'selector': '[commonValidateName]'},{'name': 'ValidatePostalcodeDirective', 'selector': '[commonValidatePostalcode]'},{'name': 'ValidateRegionDirective', 'selector': '[commonValidateRegion]'},{'name': 'ValidateStreetDirective', 'selector': '[commonValidateStreet]'}];\n    var ACTUAL_COMPONENT = {'name': 'CoreBreadcrumbComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/CountryList.html":{"url":"interfaces/CountryList.html","title":"interface - CountryList","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  CountryList\n\n\n\n        \n            Info\n        \n        \n            Design Guidelines\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/common/lib/components/country/country.component.ts\n        \n\n            \n                Description\n            \n            \n                Interface for countries \n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        countryCode\n                                \n                                \n                                        description\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        countryCode\n                                    \n                                \n                                \n                                    \n                                        countryCode:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        description\n                                    \n                                \n                                \n                                    \n                                        description:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n    \n        Design Guidelines\nLorem ipsum dolor sit amet consectetur adipisicing elit. Sapiente, magnam ipsam. Sit quasi natus architecto rerum unde non provident! Quia nisi facere amet iste mollitia voluptatem non molestias esse optio?\nAperiam fugiat consectetur temporibus, iste repellat, quisquam sapiente nisi distinctio optio, autem nemo tenetur error eum voluptatibus ab accusamus quis voluptatum blanditiis. Quam et ut reprehenderit vitae nobis, at ipsum!\nExercitationem pariatur animi repudiandae corporis obcaecati ratione ducimus beatae quam, nostrum magnam unde numquam quidem cupiditate odit id. Beatae alias molestiae, optio incidunt harum quia voluptates deserunt sequi. Nesciunt, optio.\n\n    \n\n    \n        import { Component, Input, Output, EventEmitter, Optional, Self, OnInit } from '@angular/core';\nimport { Base } from '../../models/base';\nimport { ControlValueAccessor, NgControl } from '@angular/forms';\nimport { ErrorMessage } from '../../models/error-message.interface';\n\n/** Interface for countries */\nexport interface CountryList {\n  countryCode: string;\n  description: string;\n}\n\nexport const CANADA = 'CAN';\nexport const UNITED_STATES = 'USA';\n\n/** Default list of countries */\nexport const COUNTRY_LIST: CountryList[] = [\n  { countryCode: 'AFG', description: 'Afghanistan' },\n  { countryCode: 'ALA', description: 'Åland Islands' },\n  { countryCode: 'ALB', description: 'Albania' },\n  { countryCode: 'DZA', description: 'Algeria' },\n  { countryCode: 'ASM', description: 'American Samoa' },\n  { countryCode: 'AND', description: 'Andorra' },\n  { countryCode: 'AGO', description: 'Angola' },\n  { countryCode: 'AIA', description: 'Anguilla' },\n  { countryCode: 'ATA', description: 'Antarctica' },\n  { countryCode: 'ATG', description: 'Antigua and Barbuda' },\n  { countryCode: 'ARG', description: 'Argentina' },\n  { countryCode: 'ARM', description: 'Armenia' },\n  { countryCode: 'ABW', description: 'Aruba' },\n  { countryCode: 'AUS', description: 'Australia' },\n  { countryCode: 'AUT', description: 'Austria' },\n  { countryCode: 'AZE', description: 'Azerbaijan' },\n  { countryCode: 'BHS', description: 'Bahamas' },\n  { countryCode: 'BHR', description: 'Bahrain' },\n  { countryCode: 'BGD', description: 'Bangladesh' },\n  { countryCode: 'BRB', description: 'Barbados' },\n  { countryCode: 'BLR', description: 'Belarus' },\n  { countryCode: 'BEL', description: 'Belgium' },\n  { countryCode: 'BLZ', description: 'Belize' },\n  { countryCode: 'BEN', description: 'Benin' },\n  { countryCode: 'BMU', description: 'Bermuda' },\n  { countryCode: 'BTN', description: 'Bhutan' },\n  { countryCode: 'BOL', description: 'Bolivia, Plurinational State of' },\n  { countryCode: 'BES', description: 'Bonaire, Sint Eustatius and Saba' },\n  { countryCode: 'BIH', description: 'Bosnia and Herzegovina' },\n  { countryCode: 'BWA', description: 'Botswana' },\n  { countryCode: 'BVT', description: 'Bouvet Island' },\n  { countryCode: 'BRA', description: 'Brazil' },\n  { countryCode: 'IOT', description: 'British Indian Ocean Territory' },\n  { countryCode: 'BRN', description: 'Brunei Darussalam' },\n  { countryCode: 'BGR', description: 'Bulgaria' },\n  { countryCode: 'BFA', description: 'Burkina Faso' },\n  { countryCode: 'BDI', description: 'Burundi' },\n  { countryCode: 'KHM', description: 'Cambodia' },\n  { countryCode: 'CMR', description: 'Cameroon' },\n  { countryCode: 'CAN', description: 'Canada' },\n  { countryCode: 'CPV', description: 'Cape Verde' },\n  { countryCode: 'CYM', description: 'Cayman Islands' },\n  { countryCode: 'CAF', description: 'Central African Republic' },\n  { countryCode: 'TCD', description: 'Chad' },\n  { countryCode: 'CHL', description: 'Chile' },\n  { countryCode: 'CHN', description: 'China' },\n  { countryCode: 'CXR', description: 'Christmas Island' },\n  { countryCode: 'CCK', description: 'Cocos (Keeling) Islands' },\n  { countryCode: 'COL', description: 'Colombia' },\n  { countryCode: 'COM', description: 'Comoros' },\n  { countryCode: 'COG', description: 'Congo' },\n  { countryCode: 'COD', description: 'Congo, the Democratic Republic of the' },\n  { countryCode: 'COK', description: 'Cook Islands' },\n  { countryCode: 'CRI', description: 'Costa Rica' },\n  { countryCode: 'CIV', description: 'Côte d\\'Ivoire' },\n  { countryCode: 'HRV', description: 'Croatia' },\n  { countryCode: 'CUB', description: 'Cuba' },\n  { countryCode: 'CUW', description: 'Curaçao' },\n  { countryCode: 'CYP', description: 'Cyprus' },\n  { countryCode: 'CZE', description: 'Czech Republic' },\n  { countryCode: 'DNK', description: 'Denmark' },\n  { countryCode: 'DJI', description: 'Djibouti' },\n  { countryCode: 'DMA', description: 'Dominica' },\n  { countryCode: 'DOM', description: 'Dominican Republic' },\n  { countryCode: 'ECU', description: 'Ecuador' },\n  { countryCode: 'EGY', description: 'Egypt' },\n  { countryCode: 'SLV', description: 'El Salvador' },\n  { countryCode: 'GNQ', description: 'Equatorial Guinea' },\n  { countryCode: 'ERI', description: 'Eritrea' },\n  { countryCode: 'EST', description: 'Estonia' },\n  { countryCode: 'ETH', description: 'Ethiopia' },\n  { countryCode: 'FLK', description: 'Falkland Islands (Malvinas)' },\n  { countryCode: 'FRO', description: 'Faroe Islands' },\n  { countryCode: 'FJI', description: 'Fiji' },\n  { countryCode: 'FIN', description: 'Finland' },\n  { countryCode: 'FRA', description: 'France' },\n  { countryCode: 'GUF', description: 'French Guiana' },\n  { countryCode: 'PYF', description: 'French Polynesia' },\n  { countryCode: 'ATF', description: 'French Southern Territories' },\n  { countryCode: 'GAB', description: 'Gabon' },\n  { countryCode: 'GMB', description: 'Gambia' },\n  { countryCode: 'GEO', description: 'Georgia' },\n  { countryCode: 'DEU', description: 'Germany' },\n  { countryCode: 'GHA', description: 'Ghana' },\n  { countryCode: 'GIB', description: 'Gibraltar' },\n  { countryCode: 'GRC', description: 'Greece' },\n  { countryCode: 'GRL', description: 'Greenland' },\n  { countryCode: 'GRD', description: 'Grenada' },\n  { countryCode: 'GLP', description: 'Guadeloupe' },\n  { countryCode: 'GUM', description: 'Guam' },\n  { countryCode: 'GTM', description: 'Guatemala' },\n  { countryCode: 'GGY', description: 'Guernsey' },\n  { countryCode: 'GIN', description: 'Guinea' },\n  { countryCode: 'GNB', description: 'Guinea-Bissau' },\n  { countryCode: 'GUY', description: 'Guyana' },\n  { countryCode: 'HTI', description: 'Haiti' },\n  { countryCode: 'HMD', description: 'Heard Island and McDonald Islands' },\n  { countryCode: 'VAT', description: 'Holy See (Vatican City State)' },\n  { countryCode: 'HND', description: 'Honduras' },\n  { countryCode: 'HKG', description: 'Hong Kong' },\n  { countryCode: 'HUN', description: 'Hungary' },\n  { countryCode: 'ISL', description: 'Iceland' },\n  { countryCode: 'IND', description: 'India' },\n  { countryCode: 'IDN', description: 'Indonesia' },\n  { countryCode: 'IRN', description: 'Iran, Islamic Republic of' },\n  { countryCode: 'IRQ', description: 'Iraq' },\n  { countryCode: 'IRL', description: 'Ireland' },\n  { countryCode: 'IMN', description: 'Isle of Man' },\n  { countryCode: 'ISR', description: 'Israel' },\n  { countryCode: 'ITA', description: 'Italy' },\n  { countryCode: 'JAM', description: 'Jamaica' },\n  { countryCode: 'JPN', description: 'Japan' },\n  { countryCode: 'JEY', description: 'Jersey' },\n  { countryCode: 'JOR', description: 'Jordan' },\n  { countryCode: 'KAZ', description: 'Kazakhstan' },\n  { countryCode: 'KEN', description: 'Kenya' },\n  { countryCode: 'KIR', description: 'Kiribati' },\n  { countryCode: 'PRK', description: 'Korea, Democratic People\\'s Republic of' },\n  { countryCode: 'KOR', description: 'Korea, Republic of' },\n  { countryCode: 'KWT', description: 'Kuwait' },\n  { countryCode: 'KGZ', description: 'Kyrgyzstan' },\n  { countryCode: 'LAO', description: 'Lao People\\'s Democratic Republic' },\n  { countryCode: 'LVA', description: 'Latvia' },\n  { countryCode: 'LBN', description: 'Lebanon' },\n  { countryCode: 'LSO', description: 'Lesotho' },\n  { countryCode: 'LBR', description: 'Liberia' },\n  { countryCode: 'LBY', description: 'Libya' },\n  { countryCode: 'LIE', description: 'Liechtenstein' },\n  { countryCode: 'LTU', description: 'Lithuania' },\n  { countryCode: 'LUX', description: 'Luxembourg' },\n  { countryCode: 'MAC', description: 'Macao' },\n  { countryCode: 'MKD', description: 'Macedonia, the former Yugoslav Republic of' },\n  { countryCode: 'MDG', description: 'Madagascar' },\n  { countryCode: 'MWI', description: 'Malawi' },\n  { countryCode: 'MYS', description: 'Malaysia' },\n  { countryCode: 'MDV', description: 'Maldives' },\n  { countryCode: 'MLI', description: 'Mali' },\n  { countryCode: 'MLT', description: 'Malta' },\n  { countryCode: 'MHL', description: 'Marshall Islands' },\n  { countryCode: 'MTQ', description: 'Martinique' },\n  { countryCode: 'MRT', description: 'Mauritania' },\n  { countryCode: 'MUS', description: 'Mauritius' },\n  { countryCode: 'MYT', description: 'Mayotte' },\n  { countryCode: 'MEX', description: 'Mexico' },\n  { countryCode: 'FSM', description: 'Micronesia, Federated States of' },\n  { countryCode: 'MDA', description: 'Moldova, Republic of' },\n  { countryCode: 'MCO', description: 'Monaco' },\n  { countryCode: 'MNG', description: 'Mongolia' },\n  { countryCode: 'MNE', description: 'Montenegro' },\n  { countryCode: 'MSR', description: 'Montserrat' },\n  { countryCode: 'MAR', description: 'Morocco' },\n  { countryCode: 'MOZ', description: 'Mozambique' },\n  { countryCode: 'MMR', description: 'Myanmar' },\n  { countryCode: 'NAM', description: 'Namibia' },\n  { countryCode: 'NRU', description: 'Nauru' },\n  { countryCode: 'NPL', description: 'Nepal' },\n  { countryCode: 'NLD', description: 'Netherlands' },\n  { countryCode: 'NCL', description: 'New Caledonia' },\n  { countryCode: 'NZL', description: 'New Zealand' },\n  { countryCode: 'NIC', description: 'Nicaragua' },\n  { countryCode: 'NER', description: 'Niger' },\n  { countryCode: 'NGA', description: 'Nigeria' },\n  { countryCode: 'NIU', description: 'Niue' },\n  { countryCode: 'NFK', description: 'Norfolk Island' },\n  { countryCode: 'MNP', description: 'Northern Mariana Islands' },\n  { countryCode: 'NOR', description: 'Norway' },\n  { countryCode: 'OMN', description: 'Oman' },\n  { countryCode: 'PAK', description: 'Pakistan' },\n  { countryCode: 'PLW', description: 'Palau' },\n  { countryCode: 'PSE', description: 'Palestinian Territory, Occupied' },\n  { countryCode: 'PAN', description: 'Panama' },\n  { countryCode: 'PNG', description: 'Papua New Guinea' },\n  { countryCode: 'PRY', description: 'Paraguay' },\n  { countryCode: 'PER', description: 'Peru' },\n  { countryCode: 'PHL', description: 'Philippines' },\n  { countryCode: 'PCN', description: 'Pitcairn' },\n  { countryCode: 'POL', description: 'Poland' },\n  { countryCode: 'PRT', description: 'Portugal' },\n  { countryCode: 'PRI', description: 'Puerto Rico' },\n  { countryCode: 'QAT', description: 'Qatar' },\n  { countryCode: 'REU', description: 'Réunion' },\n  { countryCode: 'ROU', description: 'Romania' },\n  { countryCode: 'RUS', description: 'Russian Federation' },\n  { countryCode: 'RWA', description: 'Rwanda' },\n  { countryCode: 'BLM', description: 'Saint Barthélemy' },\n  { countryCode: 'SHN', description: 'Saint Helena, Ascension and Tristan da Cunha' },\n  { countryCode: 'KNA', description: 'Saint Kitts and Nevis' },\n  { countryCode: 'LCA', description: 'Saint Lucia' },\n  { countryCode: 'MAF', description: 'Saint Martin (French part)' },\n  { countryCode: 'SPM', description: 'Saint Pierre and Miquelon' },\n  { countryCode: 'VCT', description: 'Saint Vincent and the Grenadines' },\n  { countryCode: 'WSM', description: 'Samoa' },\n  { countryCode: 'SMR', description: 'San Marino' },\n  { countryCode: 'STP', description: 'Sao Tome and Principe' },\n  { countryCode: 'SAU', description: 'Saudi Arabia' },\n  { countryCode: 'SEN', description: 'Senegal' },\n  { countryCode: 'SRB', description: 'Serbia' },\n  { countryCode: 'SYC', description: 'Seychelles' },\n  { countryCode: 'SLE', description: 'Sierra Leone' },\n  { countryCode: 'SGP', description: 'Singapore' },\n  { countryCode: 'SXM', description: 'Sint Maarten (Dutch part)' },\n  { countryCode: 'SVK', description: 'Slovakia' },\n  { countryCode: 'SVN', description: 'Slovenia' },\n  { countryCode: 'SLB', description: 'Solomon Islands' },\n  { countryCode: 'SOM', description: 'Somalia' },\n  { countryCode: 'ZAF', description: 'South Africa' },\n  { countryCode: 'SGS', description: 'South Georgia and the South Sandwich Islands' },\n  { countryCode: 'SSD', description: 'South Sudan' },\n  { countryCode: 'ESP', description: 'Spain' },\n  { countryCode: 'LKA', description: 'Sri Lanka' },\n  { countryCode: 'SDN', description: 'Sudan' },\n  { countryCode: 'SUR', description: 'Suriname' },\n  { countryCode: 'SJM', description: 'Svalbard and Jan Mayen' },\n  { countryCode: 'SWZ', description: 'Swaziland' },\n  { countryCode: 'SWE', description: 'Sweden' },\n  { countryCode: 'CHE', description: 'Switzerland' },\n  { countryCode: 'SYR', description: 'Syrian Arab Republic' },\n  { countryCode: 'TWN', description: 'Taiwan, Province of China' },\n  { countryCode: 'TJK', description: 'Tajikistan' },\n  { countryCode: 'TZA', description: 'Tanzania, United Republic of' },\n  { countryCode: 'THA', description: 'Thailand' },\n  { countryCode: 'TLS', description: 'Timor-Leste' },\n  { countryCode: 'TGO', description: 'Togo' },\n  { countryCode: 'TKL', description: 'Tokelau' },\n  { countryCode: 'TON', description: 'Tonga' },\n  { countryCode: 'TTO', description: 'Trinidad and Tobago' },\n  { countryCode: 'TUN', description: 'Tunisia' },\n  { countryCode: 'TUR', description: 'Turkey' },\n  { countryCode: 'TKM', description: 'Turkmenistan' },\n  { countryCode: 'TCA', description: 'Turks and Caicos Islands' },\n  { countryCode: 'TUV', description: 'Tuvalu' },\n  { countryCode: 'UGA', description: 'Uganda' },\n  { countryCode: 'UKR', description: 'Ukraine' },\n  { countryCode: 'ARE', description: 'United Arab Emirates' },\n  { countryCode: 'GBR', description: 'United Kingdom' },\n  { countryCode: 'USA', description: 'United States' },\n  { countryCode: 'UMI', description: 'United States Minor Outlying Islands' },\n  { countryCode: 'URY', description: 'Uruguay' },\n  { countryCode: 'UZB', description: 'Uzbekistan' },\n  { countryCode: 'VUT', description: 'Vanuatu' },\n  { countryCode: 'VEN', description: 'Venezuela, Bolivarian Republic of' },\n  { countryCode: 'VNM', description: 'Viet Nam' },\n  { countryCode: 'VGB', description: 'Virgin Islands, British' },\n  { countryCode: 'VIR', description: 'Virgin Islands, U.S.' },\n  { countryCode: 'WLF', description: 'Wallis and Futuna' },\n  { countryCode: 'ESH', description: 'Western Sahara' },\n  { countryCode: 'YEM', description: 'Yemen' },\n  { countryCode: 'ZMB', description: 'Zambia' },\n  { countryCode: 'ZWE', description: 'Zimbabwe' }\n];\n\nexport function getCountryDescription( countryCode: string ) {\n  const countryObj = COUNTRY_LIST.find( val => countryCode === val.countryCode );\n  return countryObj ? countryObj.description : countryCode;\n}\n\n@Component({\n  selector: 'common-country',\n  templateUrl: './country.component.html',\n  styleUrls: ['./country.component.scss']\n})\nexport class CountryComponent extends Base implements OnInit, ControlValueAccessor {\n\n  @Input() label: string = 'Country';\n  @Input() countryList: CountryList[] = COUNTRY_LIST;\n  @Input() labelforId: string = 'country_' + this.objectId;\n  @Input() disabled: boolean = false;\n  @Input() required: boolean = false;\n  @Input() useDropDownList: boolean = true;\n  @Input() maxlen: string = '250';\n  @Input() errorMessage: ErrorMessage;\n  @Input() placeholder: string = 'Please select a country';\n\n  @Input()\n  set value( val: string ) {\n    if ( val ) {\n      this.country = val;\n    }\n  }\n  get value() {\n    return this.country;\n  }\n\n  @Output() valueChange: EventEmitter = new EventEmitter();\n  @Output() blurEvent: EventEmitter = new EventEmitter();\n\n  country: string = '';\n\n  defaultErrMsg: ErrorMessage = {\n    required: 'is required.',\n    invalidChar: 'must contain letters and may include special characters such as hyphens, periods, apostrophes and blank characters.',\n  };\n\n  _onChange = (_: any) => {};\n  _onTouched = (_: any) => {};\n\n  constructor( @Optional() @Self() public controlDir: NgControl ) {\n    super();\n    if ( controlDir ) {\n      controlDir.valueAccessor = this;\n    }\n  }\n\n  ngOnInit() {\n    this.setErrorMsg();\n  }\n\n  onValueChange( value: any ) {\n    if ( value !== this.country ) {\n      this._onChange( value );\n      this.valueChange.emit( value );\n      this.country = value;\n    }\n  }\n\n  onBlurEvent( event: any ) {\n    this._onTouched( event );\n    this.blurEvent.emit( event );\n  }\n\n  writeValue( value: any ): void {\n    if ( value !== undefined ) {\n      this.country = value;\n    }\n  }\n\n  // Register change function\n  registerOnChange( fn: any ): void {\n    this._onChange = fn;\n  }\n\n  // Register touched function\n  registerOnTouched( fn: any ): void {\n    this._onTouched = fn;\n  }\n\n  setDisabledState(isDisabled: boolean): void {\n    this.disabled = isDisabled;\n  }\n\n  private setErrorMsg() {\n    if ( this.errorMessage ) {\n      Object.keys(this.errorMessage).map( x => this.defaultErrMsg[x] = this.errorMessage[x] );\n    }\n  }\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/DateErrorMsg.html":{"url":"interfaces/DateErrorMsg.html","title":"interface - DateErrorMsg","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  DateErrorMsg\n\n\n\n        \n            Info\n        \n        \n            Design Guidelines\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/common/lib/components/datepicker/datepicker.component.ts\n        \n\n            \n                Description\n            \n            \n                Component NPM package dependencies:\na) moment\nThis component reports the following errors.\n    required\n    dayOutOfRange\n    yearDistantPast\n    yearDistantFuture\n    noFutureDatesAllowed\n    invalidValue\n  These messages can be changed by updated messages using the errorMessages interface/\n  Ex. { required: 'This field is required', invalidValue: '{label} is invalid' }\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        dayOutOfRange\n                                \n                                \n                                            Optional\n                                        invalidValue\n                                \n                                \n                                            Optional\n                                        noFutureDatesAllowed\n                                \n                                \n                                            Optional\n                                        noPastDatesAllowed\n                                \n                                \n                                            Optional\n                                        required\n                                \n                                \n                                            Optional\n                                        yearDistantFuture\n                                \n                                \n                                            Optional\n                                        yearDistantPast\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        dayOutOfRange\n                                    \n                                \n                                \n                                    \n                                        dayOutOfRange:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        invalidValue\n                                    \n                                \n                                \n                                    \n                                        invalidValue:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        noFutureDatesAllowed\n                                    \n                                \n                                \n                                    \n                                        noFutureDatesAllowed:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        noPastDatesAllowed\n                                    \n                                \n                                \n                                    \n                                        noPastDatesAllowed:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        required\n                                    \n                                \n                                \n                                    \n                                        required:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        yearDistantFuture\n                                    \n                                \n                                \n                                    \n                                        yearDistantFuture:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        yearDistantPast\n                                    \n                                \n                                \n                                    \n                                        yearDistantPast:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n    \n        Design Guidelines\nLorem ipsum dolor sit amet consectetur adipisicing elit. Sapiente, magnam ipsam. Sit quasi natus architecto rerum unde non provident! Quia nisi facere amet iste mollitia voluptatem non molestias esse optio?\nAperiam fugiat consectetur temporibus, iste repellat, quisquam sapiente nisi distinctio optio, autem nemo tenetur error eum voluptatibus ab accusamus quis voluptatum blanditiis. Quam et ut reprehenderit vitae nobis, at ipsum!\nExercitationem pariatur animi repudiandae corporis obcaecati ratione ducimus beatae quam, nostrum magnam unde numquam quidem cupiditate odit id. Beatae alias molestiae, optio incidunt harum quia voluptates deserunt sequi. Nesciunt, optio.\n\n    \n\n    \n        import { Component, OnInit, Input, Output, EventEmitter, SimpleChanges, ViewChild, OnChanges, forwardRef } from '@angular/core';\nimport { INgxMyDpOptions, IMyDate, NgxMyDatePickerDirective } from 'ngx-mydatepicker';\nimport * as moment_ from 'moment';\nimport { NgForm, ControlContainer, FormControl, NG_VALUE_ACCESSOR, ControlValueAccessor } from '@angular/forms';\nimport { Base } from '../../models/base';\nconst moment = moment_;\n\n/**\n * Component NPM package dependencies:\n * a) moment\n *\n * This component reports the following errors.\n *    required\n *    dayOutOfRange\n *    yearDistantPast\n *    yearDistantFuture\n *    noFutureDatesAllowed\n *    invalidValue\n *\n *  These messages can be changed by updated messages using the errorMessages interface/\n *  Ex. { required: 'This field is required', invalidValue: '{label} is invalid' }\n */\n\nexport interface DateErrorMsg { // TODO: Remove - possible breaking change - currently datepicker uses it\n  required?: string;\n  dayOutOfRange?: string;\n  yearDistantPast?: string;\n  yearDistantFuture?: string;\n  noPastDatesAllowed?: string;\n  noFutureDatesAllowed?: string;\n  invalidValue?: string;\n}\n\n\n/**\n * PRIME datepicker component. Largely a wrapper for ngx-mydatepicker\n * https://github.com/kekeh/ngx-mydatepicker\n *\n * NOTE - YOU MUST INCLUDE NGX-MYDATEPICKER IN YOUR PARENT APPLICATION TO USE\n * THIS COMPONENT!  This is due to some poor implementation in ngx-mydatepicker.\n * Make sure to use the same version that this library uses.\n */\n@Component({\n  selector: 'common-datepicker',\n  templateUrl: './datepicker.component.html',\n  styleUrls: ['./datepicker.component.scss'],\n  /* Re-use the same ngForm that it's parent is using. The component will show\n   * up in its parents `this.form`, and will auto-update `this.form.valid`\n   */\n  viewProviders: [ { provide: ControlContainer, useExisting: forwardRef(() => NgForm ) } ],\n  providers: [\n    {\n      provide: NG_VALUE_ACCESSOR,\n      multi: true,\n      useExisting: forwardRef(() => DatepickerComponent)\n    }\n  ]\n})\nexport class DatepickerComponent extends Base implements OnInit, OnChanges, ControlValueAccessor {\n  /** Component size can be reduced, see Datepickersizes for options */\n  @Input() size: DatepickerSizes = DatepickerSizes.DEFAULT;\n  @Input() date: Date;\n  @Output() dateChange = new EventEmitter();\n  @Input() disabled: boolean;\n  @Input() labelText: string;\n\n  @Input() required: boolean = false;\n\n\n  /** Dates **before** disableUntil will not be valid selections.  Maps to a ngx-mydatepicker option, but we convert IMyDate to Date  */\n  @Input() disableUntil: Date;\n\n  /** Dates **after** disableSince will not be valid selections.  Maps to a ngx-mydatepicker option, but we convert IMyDate to Date */\n  @Input() disableSince: Date;\n\n  /** Equivalent to setting disableBefore to tomorrow. */\n  @Input() onlyFutureDates: boolean;\n\n  /**\n   * Control visibility of the clear 'x' button on the mini datepicker.\n   *\n   * **'visible'** is default, button exists\n   *\n   * **'none'** means the element does not exist\n   *\n   * **'invisible'** means the element takes up space but is not visible / cannot be\n   * used.\n   *\n   * Invisible is useful when you want to make sure a datepicker is the same\n   * size as a visible one.\n   */\n  @Input() clearButton: 'visible' | 'invisible' | 'none' = 'visible';\n\n\n\n  /** Format for how to display the date to the user. */\n  @Input() dateFormat: string = 'yyyy/mm/dd';\n\n  @Input() errorMessages: DateErrorMsg;\n\n  /** Datetime model used to interface with ngx-datepicker. */\n  // model: any;\n  model: any;\n\n  // Make enum accessible in HTML\n  DatepickerSizes: typeof DatepickerSizes = DatepickerSizes;\n\n  @ViewChild('dp') ngxdp: NgxMyDatePickerDirective;\n\n  /** Default options for wrapped ngx-datepicker. */\n  datepickerOptions: INgxMyDpOptions;\n\n  public _onChange = (_: any) => {};\n  public _onTouched = () => {};\n\n  constructor() {\n    super();\n   }\n\n  convertDateToSimpleDate(date: Date): IMyDate {\n    if (date === null || date === undefined) { return null; }\n    return {\n      year: date.getFullYear(),\n      month: date.getMonth() + 1,\n      day: date.getDate(),\n    };\n  }\n  convertSimpleDateToDate(date: IMyDate): Date {\n    // When ngx-mydatepicker is cleared, it returns {year: 0, month: 0, day: 0}\n    if (date.year === 0) {\n      return null;\n    }\n    return new Date(date.year, date.month - 1, date.day);\n  }\n\n  isDate(x: any): x is Date {\n    if (!x) { return false; }\n    return x.getDate !== undefined;\n  }\n\n  ngOnInit() {\n    if (!this.errorMessages) {\n      this.errorMessages = {\n        required: this.labelText + ' is required.',\n        dayOutOfRange: 'Invalid ' + this.labelText + '.',\n        yearDistantPast: 'Invalid ' + this.labelText + '.',\n        yearDistantFuture: 'Invalid ' + this.labelText + '.',\n        noFutureDatesAllowed: 'Invalid ' + this.labelText + '.',\n        invalidValue: 'Invalid ' + this.labelText + '.'\n      };\n    }\n\n    this.datepickerOptions = {\n      dateFormat: this.dateFormat,\n      sunHighlight: false,\n      appendSelectorToBody: true,\n    };\n\n    if (this.size === DatepickerSizes.MINI) {\n      // Set width/height to 4/5 of default\n      this.datepickerOptions.selectorHeight = '185px';\n      this.datepickerOptions.selectorWidth = '201px';\n    }\n\n    if (this.isDate(this.disableSince)) {\n      this.datepickerOptions.disableSince = this.convertDateToSimpleDate(this.disableSince);\n    }\n\n    if (this.isDate(this.disableUntil)) {\n      this.datepickerOptions.disableUntil = this.convertDateToSimpleDate(this.disableSince);\n    }\n\n    if (this.onlyFutureDates) {\n      const today = new Date();\n      this.datepickerOptions.disableUntil = this.convertDateToSimpleDate(today);\n    }\n\n\n    if (this.date) {\n      // Even if jsdate winds up being undefined, even defining this.model will\n      // set the input as non-empty and it'll satisfy the 'required' validation.\n      // So, we only add the model if there's actual data.\n      this.model = {\n        jsdate: this.date\n      };\n    }\n\n\n  }\n\n\n  ngOnChanges(changes: SimpleChanges) {\n    // Parent component has passed in null, so we have to manually clear the input. This leads to 2 change detection cycles.\n    // We could refactor it down to one, but the performance hit is minimal for such a simple component.\n    if (this.date === null) {\n      this.clearDate();\n      this._onChange(null);\n      this._onTouched();\n    }\n  }\n\n  onDateChanged(event): void {\n    if (event.jsdate || event.jsdate === null) {\n      // Always emit a Date (or null)\n      this.dateChange.emit(event.jsdate);\n      this._onChange(event.jsdate);\n      this._onTouched();\n    }\n  }\n\n  clearDate() {\n    if (this.ngxdp) {\n      // We don't need to emit here, because by changing date we'll trigger onDateChanged automatically.\n      this.date = null;\n      this.ngxdp.clearDate();\n    }\n  }\n\n  registerOnChange(fn: any): void {\n    this._onChange = fn;\n  }\n\n  registerOnTouched(fn: any): void {\n    this._onTouched = fn;\n  }\n\n  writeValue(obj: any): void {\n    this.model = {\n      jsdate: obj\n    };\n  }\n\n}\n\nexport enum DatepickerSizes {\n  MINI = 'mini',\n  DEFAULT = 'default'\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"directives/DateFieldFormatDirective.html":{"url":"directives/DateFieldFormatDirective.html","title":"directive - DateFieldFormatDirective","body":"\n                   \n\n\n\n\n\n\n\n  Directives\n  DateFieldFormatDirective\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/common/lib/components/date/date-field-format.directive.ts\n        \n\n\n\n\n        \n            Metadata\n            \n                \n\n                    \n                        Selector\n                        [commonDateFieldFormat]\n                    \n\n                \n            \n        \n\n            \n    Index\n    \n        \n\n\n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                ngModelChange\n                            \n                        \n                    \n                \n\n\n                \n                    \n                        HostListeners\n                    \n                \n                \n                    \n                        \n                            \n                                input\n                            \n                        \n                    \n                \n\n        \n    \n\n\n\n\n            \n    Outputs\n        \n            \n                \n                    \n                        \n                        ngModelChange\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/date/date-field-format.directive.ts:8\n                            \n                        \n            \n        \n\n\n            \n    HostListeners    \n        \n            \n                \n                    \n                    \n                        \n                            input\n                        \n                        \n                    \n                \n            \n            \n                \n                    Arguments : '$event' \n                \n            \n            \n                \ninput(event: KeyboardEvent)\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/components/date/date-field-format.directive.ts:11\n                \n            \n\n\n        \n    \n\n\n\n\n    \n\n\n    \n        import { Directive, Output, EventEmitter, HostListener } from '@angular/core';\n\n@Directive({\n  selector: '[commonDateFieldFormat]'\n})\nexport class DateFieldFormatDirective {\n\n  @Output() ngModelChange: EventEmitter = new EventEmitter(false);\n\n  @HostListener('input', ['$event'])\n  onInput( event: KeyboardEvent ) {\n    const input = event.target as HTMLInputElement;\n    const maxlen = input.getAttribute( 'maxlength' );\n\n    let trimmed = input.value.trim();\n    if (/[^\\d]+/.test( input.value ) ) {\n\n      trimmed = trimmed.replace(/[^\\d]/g, '');\n    }\n\n    trimmed = trimmed.substr( 0, Number( maxlen ) );\n\n    input.value = trimmed;\n    this.ngModelChange.emit( trimmed );\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/DatepickerComponent.html":{"url":"components/DatepickerComponent.html","title":"component - DatepickerComponent","body":"\n                   \n\n\n\n\n\n  Components\n  DatepickerComponent\n\n\n\n        \n            Info\n        \n        \n            Design Guidelines\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    projects/common/lib/components/datepicker/datepicker.component.ts\n\n\n    \n        Description\n    \n    \n        PRIME datepicker component. Largely a wrapper for ngx-mydatepicker\nhttps://github.com/kekeh/ngx-mydatepicker\nNOTE - YOU MUST INCLUDE NGX-MYDATEPICKER IN YOUR PARENT APPLICATION TO USE\nTHIS COMPONENT!  This is due to some poor implementation in ngx-mydatepicker.\nMake sure to use the same version that this library uses.\n\n    \n\n    \n        Extends\n    \n    \n                Base\n    \n\n    \n        Implements\n    \n    \n                    OnInit\n                    OnChanges\n                    ControlValueAccessor\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n            \n                providers\n                \n                                {\n    provide: NG_VALUE_ACCESSOR, multi: true, useExisting: forwardRef(() => DatepickerComponent)\n}\n                \n            \n\n\n            \n                selector\n                common-datepicker\n            \n\n            \n                styleUrls\n                ./datepicker.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./datepicker.component.html\n            \n\n            \n                viewProviders\n                \n                    \n                                { provide: ControlContainer, useExisting: forwardRef(() => NgForm) }\n                    \n                \n            \n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                _onChange\n                            \n                            \n                                    Public\n                                _onTouched\n                            \n                            \n                                datepickerOptions\n                            \n                            \n                                DatepickerSizes\n                            \n                            \n                                model\n                            \n                            \n                                ngxdp\n                            \n                            \n                                    Public\n                                objectId\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                clearDate\n                            \n                            \n                                convertDateToSimpleDate\n                            \n                            \n                                convertSimpleDateToDate\n                            \n                            \n                                isDate\n                            \n                            \n                                ngOnChanges\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                onDateChanged\n                            \n                            \n                                registerOnChange\n                            \n                            \n                                registerOnTouched\n                            \n                            \n                                writeValue\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                clearButton\n                            \n                            \n                                date\n                            \n                            \n                                dateFormat\n                            \n                            \n                                disabled\n                            \n                            \n                                disableSince\n                            \n                            \n                                disableUntil\n                            \n                            \n                                errorMessages\n                            \n                            \n                                labelText\n                            \n                            \n                                onlyFutureDates\n                            \n                            \n                                required\n                            \n                            \n                                size\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                dateChange\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in projects/common/lib/components/datepicker/datepicker.component.ts:114\n                            \n                        \n\n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        clearButton\n                    \n                \n                \n                    \n                        Type :     \"visible\" | \"invisible\" | \"none\"\n\n                    \n                \n                \n                    \n                        Default value : 'visible'\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/datepicker/datepicker.component.ts:92\n                            \n                        \n                \n                    \n                        Control visibility of the clear 'x' button on the mini datepicker.\n'visible' is default, button exists\n'none' means the element does not exist\n'invisible' means the element takes up space but is not visible / cannot be\nused.\nInvisible is useful when you want to make sure a datepicker is the same\nsize as a visible one.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        date\n                    \n                \n                \n                    \n                        Type :         Date\n\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/datepicker/datepicker.component.ts:62\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        dateFormat\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'yyyy/mm/dd'\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/datepicker/datepicker.component.ts:97\n                            \n                        \n                \n                    \n                        Format for how to display the date to the user. \n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        disabled\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/datepicker/datepicker.component.ts:64\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        disableSince\n                    \n                \n                \n                    \n                        Type :         Date\n\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/datepicker/datepicker.component.ts:74\n                            \n                        \n                \n                    \n                        Dates after disableSince will not be valid selections.  Maps to a ngx-mydatepicker option, but we convert IMyDate to Date \n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        disableUntil\n                    \n                \n                \n                    \n                        Type :         Date\n\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/datepicker/datepicker.component.ts:71\n                            \n                        \n                \n                    \n                        Dates before disableUntil will not be valid selections.  Maps to a ngx-mydatepicker option, but we convert IMyDate to Date  \n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        errorMessages\n                    \n                \n                \n                    \n                        Type :         DateErrorMsg\n\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/datepicker/datepicker.component.ts:99\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        labelText\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/datepicker/datepicker.component.ts:65\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        onlyFutureDates\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/datepicker/datepicker.component.ts:77\n                            \n                        \n                \n                    \n                        Equivalent to setting disableBefore to tomorrow. \n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        required\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/datepicker/datepicker.component.ts:67\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        size\n                    \n                \n                \n                    \n                        Type :         DatepickerSizes\n\n                    \n                \n                \n                    \n                        Default value : DatepickerSizes.DEFAULT\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/datepicker/datepicker.component.ts:61\n                            \n                        \n                \n                    \n                        Component size can be reduced, see Datepickersizes for options \n\n                    \n                \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        dateChange\n                    \n                \n                \n                    \n                        Type :         EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/datepicker/datepicker.component.ts:63\n                            \n                        \n            \n        \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            clearDate\n                        \n                        \n                    \n                \n            \n            \n                \nclearDate()\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/components/datepicker/datepicker.component.ts:211\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            convertDateToSimpleDate\n                        \n                        \n                    \n                \n            \n            \n                \nconvertDateToSimpleDate(date: Date)\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/components/datepicker/datepicker.component.ts:120\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    date\n                                    \n                                                Date\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     IMyDate\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            convertSimpleDateToDate\n                        \n                        \n                    \n                \n            \n            \n                \nconvertSimpleDateToDate(date: IMyDate)\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/components/datepicker/datepicker.component.ts:128\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    date\n                                    \n                                            IMyDate\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Date\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            isDate\n                        \n                        \n                    \n                \n            \n            \n                \nisDate(x: any)\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/components/datepicker/datepicker.component.ts:136\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    x\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Date\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnChanges\n                        \n                        \n                    \n                \n            \n            \n                \nngOnChanges(changes: SimpleChanges)\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/components/datepicker/datepicker.component.ts:192\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    changes\n                                    \n                                                SimpleChanges\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/components/datepicker/datepicker.component.ts:141\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            onDateChanged\n                        \n                        \n                    \n                \n            \n            \n                \nonDateChanged(event)\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/components/datepicker/datepicker.component.ts:202\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    event\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            registerOnChange\n                        \n                        \n                    \n                \n            \n            \n                \nregisterOnChange(fn: any)\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/components/datepicker/datepicker.component.ts:219\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    fn\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            registerOnTouched\n                        \n                        \n                    \n                \n            \n            \n                \nregisterOnTouched(fn: any)\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/components/datepicker/datepicker.component.ts:223\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    fn\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            writeValue\n                        \n                        \n                    \n                \n            \n            \n                \nwriteValue(obj: any)\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/components/datepicker/datepicker.component.ts:227\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    obj\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            _onChange\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : () => {...}\n                        \n                    \n                        \n                            \n                                    Defined in projects/common/lib/components/datepicker/datepicker.component.ts:113\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            _onTouched\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : () => {...}\n                        \n                    \n                        \n                            \n                                    Defined in projects/common/lib/components/datepicker/datepicker.component.ts:114\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            datepickerOptions\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     INgxMyDpOptions\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/common/lib/components/datepicker/datepicker.component.ts:111\n                            \n                        \n\n                \n                    \n                        Default options for wrapped ngx-datepicker. \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            DatepickerSizes\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : DatepickerSizes\n                        \n                    \n                        \n                            \n                                    Defined in projects/common/lib/components/datepicker/datepicker.component.ts:106\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            model\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/common/lib/components/datepicker/datepicker.component.ts:103\n                            \n                        \n\n                \n                    \n                        Datetime model used to interface with ngx-datepicker. \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngxdp\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     NgxMyDatePickerDirective\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ViewChild('dp')\n                            \n                        \n                    \n                        \n                            \n                                    Defined in projects/common/lib/components/datepicker/datepicker.component.ts:108\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            objectId\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : UUID.UUID()\n                        \n                    \n                            \n                                \n                                    Inherited from         Base\n\n                                \n                            \n                        \n                            \n                                    Defined in         Base:11\n\n                            \n                        \n\n                \n                    \n                        An identifier for parents to keep track of components \n\n                    \n                \n\n            \n        \n\n\n\n\n    \n        Design Guidelines\nLorem ipsum dolor sit amet consectetur adipisicing elit. Sapiente, magnam ipsam. Sit quasi natus architecto rerum unde non provident! Quia nisi facere amet iste mollitia voluptatem non molestias esse optio?\nAperiam fugiat consectetur temporibus, iste repellat, quisquam sapiente nisi distinctio optio, autem nemo tenetur error eum voluptatibus ab accusamus quis voluptatum blanditiis. Quam et ut reprehenderit vitae nobis, at ipsum!\nExercitationem pariatur animi repudiandae corporis obcaecati ratione ducimus beatae quam, nostrum magnam unde numquam quidem cupiditate odit id. Beatae alias molestiae, optio incidunt harum quia voluptates deserunt sequi. Nesciunt, optio.\n\n    \n\n    \n        import { Component, OnInit, Input, Output, EventEmitter, SimpleChanges, ViewChild, OnChanges, forwardRef } from '@angular/core';\nimport { INgxMyDpOptions, IMyDate, NgxMyDatePickerDirective } from 'ngx-mydatepicker';\nimport * as moment_ from 'moment';\nimport { NgForm, ControlContainer, FormControl, NG_VALUE_ACCESSOR, ControlValueAccessor } from '@angular/forms';\nimport { Base } from '../../models/base';\nconst moment = moment_;\n\n/**\n * Component NPM package dependencies:\n * a) moment\n *\n * This component reports the following errors.\n *    required\n *    dayOutOfRange\n *    yearDistantPast\n *    yearDistantFuture\n *    noFutureDatesAllowed\n *    invalidValue\n *\n *  These messages can be changed by updated messages using the errorMessages interface/\n *  Ex. { required: 'This field is required', invalidValue: '{label} is invalid' }\n */\n\nexport interface DateErrorMsg { // TODO: Remove - possible breaking change - currently datepicker uses it\n  required?: string;\n  dayOutOfRange?: string;\n  yearDistantPast?: string;\n  yearDistantFuture?: string;\n  noPastDatesAllowed?: string;\n  noFutureDatesAllowed?: string;\n  invalidValue?: string;\n}\n\n\n/**\n * PRIME datepicker component. Largely a wrapper for ngx-mydatepicker\n * https://github.com/kekeh/ngx-mydatepicker\n *\n * NOTE - YOU MUST INCLUDE NGX-MYDATEPICKER IN YOUR PARENT APPLICATION TO USE\n * THIS COMPONENT!  This is due to some poor implementation in ngx-mydatepicker.\n * Make sure to use the same version that this library uses.\n */\n@Component({\n  selector: 'common-datepicker',\n  templateUrl: './datepicker.component.html',\n  styleUrls: ['./datepicker.component.scss'],\n  /* Re-use the same ngForm that it's parent is using. The component will show\n   * up in its parents `this.form`, and will auto-update `this.form.valid`\n   */\n  viewProviders: [ { provide: ControlContainer, useExisting: forwardRef(() => NgForm ) } ],\n  providers: [\n    {\n      provide: NG_VALUE_ACCESSOR,\n      multi: true,\n      useExisting: forwardRef(() => DatepickerComponent)\n    }\n  ]\n})\nexport class DatepickerComponent extends Base implements OnInit, OnChanges, ControlValueAccessor {\n  /** Component size can be reduced, see Datepickersizes for options */\n  @Input() size: DatepickerSizes = DatepickerSizes.DEFAULT;\n  @Input() date: Date;\n  @Output() dateChange = new EventEmitter();\n  @Input() disabled: boolean;\n  @Input() labelText: string;\n\n  @Input() required: boolean = false;\n\n\n  /** Dates **before** disableUntil will not be valid selections.  Maps to a ngx-mydatepicker option, but we convert IMyDate to Date  */\n  @Input() disableUntil: Date;\n\n  /** Dates **after** disableSince will not be valid selections.  Maps to a ngx-mydatepicker option, but we convert IMyDate to Date */\n  @Input() disableSince: Date;\n\n  /** Equivalent to setting disableBefore to tomorrow. */\n  @Input() onlyFutureDates: boolean;\n\n  /**\n   * Control visibility of the clear 'x' button on the mini datepicker.\n   *\n   * **'visible'** is default, button exists\n   *\n   * **'none'** means the element does not exist\n   *\n   * **'invisible'** means the element takes up space but is not visible / cannot be\n   * used.\n   *\n   * Invisible is useful when you want to make sure a datepicker is the same\n   * size as a visible one.\n   */\n  @Input() clearButton: 'visible' | 'invisible' | 'none' = 'visible';\n\n\n\n  /** Format for how to display the date to the user. */\n  @Input() dateFormat: string = 'yyyy/mm/dd';\n\n  @Input() errorMessages: DateErrorMsg;\n\n  /** Datetime model used to interface with ngx-datepicker. */\n  // model: any;\n  model: any;\n\n  // Make enum accessible in HTML\n  DatepickerSizes: typeof DatepickerSizes = DatepickerSizes;\n\n  @ViewChild('dp') ngxdp: NgxMyDatePickerDirective;\n\n  /** Default options for wrapped ngx-datepicker. */\n  datepickerOptions: INgxMyDpOptions;\n\n  public _onChange = (_: any) => {};\n  public _onTouched = () => {};\n\n  constructor() {\n    super();\n   }\n\n  convertDateToSimpleDate(date: Date): IMyDate {\n    if (date === null || date === undefined) { return null; }\n    return {\n      year: date.getFullYear(),\n      month: date.getMonth() + 1,\n      day: date.getDate(),\n    };\n  }\n  convertSimpleDateToDate(date: IMyDate): Date {\n    // When ngx-mydatepicker is cleared, it returns {year: 0, month: 0, day: 0}\n    if (date.year === 0) {\n      return null;\n    }\n    return new Date(date.year, date.month - 1, date.day);\n  }\n\n  isDate(x: any): x is Date {\n    if (!x) { return false; }\n    return x.getDate !== undefined;\n  }\n\n  ngOnInit() {\n    if (!this.errorMessages) {\n      this.errorMessages = {\n        required: this.labelText + ' is required.',\n        dayOutOfRange: 'Invalid ' + this.labelText + '.',\n        yearDistantPast: 'Invalid ' + this.labelText + '.',\n        yearDistantFuture: 'Invalid ' + this.labelText + '.',\n        noFutureDatesAllowed: 'Invalid ' + this.labelText + '.',\n        invalidValue: 'Invalid ' + this.labelText + '.'\n      };\n    }\n\n    this.datepickerOptions = {\n      dateFormat: this.dateFormat,\n      sunHighlight: false,\n      appendSelectorToBody: true,\n    };\n\n    if (this.size === DatepickerSizes.MINI) {\n      // Set width/height to 4/5 of default\n      this.datepickerOptions.selectorHeight = '185px';\n      this.datepickerOptions.selectorWidth = '201px';\n    }\n\n    if (this.isDate(this.disableSince)) {\n      this.datepickerOptions.disableSince = this.convertDateToSimpleDate(this.disableSince);\n    }\n\n    if (this.isDate(this.disableUntil)) {\n      this.datepickerOptions.disableUntil = this.convertDateToSimpleDate(this.disableSince);\n    }\n\n    if (this.onlyFutureDates) {\n      const today = new Date();\n      this.datepickerOptions.disableUntil = this.convertDateToSimpleDate(today);\n    }\n\n\n    if (this.date) {\n      // Even if jsdate winds up being undefined, even defining this.model will\n      // set the input as non-empty and it'll satisfy the 'required' validation.\n      // So, we only add the model if there's actual data.\n      this.model = {\n        jsdate: this.date\n      };\n    }\n\n\n  }\n\n\n  ngOnChanges(changes: SimpleChanges) {\n    // Parent component has passed in null, so we have to manually clear the input. This leads to 2 change detection cycles.\n    // We could refactor it down to one, but the performance hit is minimal for such a simple component.\n    if (this.date === null) {\n      this.clearDate();\n      this._onChange(null);\n      this._onTouched();\n    }\n  }\n\n  onDateChanged(event): void {\n    if (event.jsdate || event.jsdate === null) {\n      // Always emit a Date (or null)\n      this.dateChange.emit(event.jsdate);\n      this._onChange(event.jsdate);\n      this._onTouched();\n    }\n  }\n\n  clearDate() {\n    if (this.ngxdp) {\n      // We don't need to emit here, because by changing date we'll trigger onDateChanged automatically.\n      this.date = null;\n      this.ngxdp.clearDate();\n    }\n  }\n\n  registerOnChange(fn: any): void {\n    this._onChange = fn;\n  }\n\n  registerOnTouched(fn: any): void {\n    this._onTouched = fn;\n  }\n\n  writeValue(obj: any): void {\n    this.model = {\n      jsdate: obj\n    };\n  }\n\n}\n\nexport enum DatepickerSizes {\n  MINI = 'mini',\n  DEFAULT = 'default'\n}\n\n    \n\n    \n        \n    {{labelText}}\n        \n\n                \n\n            \n                \n                    \n                \n            \n        \n    \n\n\n\n\n  \n       {{errorMessages.required}}\n  \n  \n  \n       {{errorMessages.dayOutOfRange}}\n  \n  \n       {{errorMessages.yearDistantPast}}\n  \n  \n       {{errorMessages.yearDistantFuture}}\n  \n  \n        {{errorMessages.noPastDatesAllowed}}\n  \n\n  \n       {{errorMessages.noFutureDatesAllowed}}\n   -->\n  \n       {{errorMessages.invalidValue}}\n  \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '    {{labelText}}                                                                                                                         {{errorMessages.required}}             {{errorMessages.dayOutOfRange}}           {{errorMessages.yearDistantPast}}           {{errorMessages.yearDistantFuture}}            {{errorMessages.noPastDatesAllowed}}           {{errorMessages.noFutureDatesAllowed}}   -->         {{errorMessages.invalidValue}}  '\n    var COMPONENTS = [{'name': 'AccordionCommonComponent', 'selector': 'common-accordion'},{'name': 'AddressComponent', 'selector': 'common-address'},{'name': 'ButtonComponent', 'selector': 'common-button'},{'name': 'ButtonGroupComponent', 'selector': 'common-button-group'},{'name': 'CaptchaComponent', 'selector': 'common-captcha'},{'name': 'CheckboxComponent', 'selector': 'common-checkbox'},{'name': 'CityComponent', 'selector': 'common-city'},{'name': 'ConfirmTemplateComponent', 'selector': 'common-confirm-template'},{'name': 'ConsentModalComponent', 'selector': 'common-consent-modal'},{'name': 'CoreBreadcrumbComponent', 'selector': 'common-core-breadcrumb'},{'name': 'CountryComponent', 'selector': 'common-country'},{'name': 'DateComponent', 'selector': 'common-date'},{'name': 'DatepickerComponent', 'selector': 'common-datepicker'},{'name': 'DropdownComponent', 'selector': 'common-dropdown'},{'name': 'EmailComponent', 'selector': 'common-email'},{'name': 'ErrorContainerComponent', 'selector': 'common-error-container'},{'name': 'FileUploaderComponent', 'selector': 'common-file-uploader'},{'name': 'FormActionBarComponent', 'selector': 'common-form-action-bar'},{'name': 'FormSubmitBarComponent', 'selector': 'common-form-submit-bar'},{'name': 'FullNameComponent', 'selector': 'common-full-name'},{'name': 'GeocoderInputComponent', 'selector': 'common-geocoder-input'},{'name': 'HeaderComponent', 'selector': 'common-header'},{'name': 'NameComponent', 'selector': 'common-name'},{'name': 'PageFrameworkComponent', 'selector': 'common-page-framework'},{'name': 'PageSectionComponent', 'selector': 'common-page-section'},{'name': 'PasswordComponent', 'selector': 'common-password'},{'name': 'PhnComponent', 'selector': 'common-phn'},{'name': 'PhoneNumberComponent', 'selector': 'common-phone-number'},{'name': 'PostalCodeComponent', 'selector': 'common-postal-code'},{'name': 'ProvinceComponent', 'selector': 'common-province'},{'name': 'RadioComponent', 'selector': 'common-radio'},{'name': 'SampleModalComponent', 'selector': 'common-sample-modal'},{'name': 'SinComponent', 'selector': 'common-sin'},{'name': 'StreetComponent', 'selector': 'common-street'},{'name': 'ThumbnailComponent', 'selector': 'common-thumbnail'},{'name': 'ToggleComponent', 'selector': 'common-toggle'},{'name': 'WizardProgressBarComponent', 'selector': 'common-wizard-progress-bar'},{'name': 'XiconButtonComponent', 'selector': 'common-xicon-button'}];\n    var DIRECTIVES = [{'name': 'DateFieldFormatDirective', 'selector': '[commonDateFieldFormat]'},{'name': 'DuplicateCheckDirective', 'selector': '[commonDuplicateCheck]'},{'name': 'ValidateBcPostalDirective', 'selector': '[commonValidateBcPostal]'},{'name': 'ValidateCityDirective', 'selector': '[commonValidateCity]'},{'name': 'ValidateNameDirective', 'selector': '[commonValidateName]'},{'name': 'ValidatePostalcodeDirective', 'selector': '[commonValidatePostalcode]'},{'name': 'ValidateRegionDirective', 'selector': '[commonValidateRegion]'},{'name': 'ValidateStreetDirective', 'selector': '[commonValidateStreet]'}];\n    var ACTUAL_COMPONENT = {'name': 'DatepickerComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/DefaultPageGuardService.html":{"url":"injectables/DefaultPageGuardService.html","title":"injectable - DefaultPageGuardService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  DefaultPageGuardService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/common/lib/services/default-page-guard.service.ts\n        \n\n            \n                Description\n            \n            \n                Default page guard service, ByPassGuards & StartPageUrl are injected only if not extending service\n\n            \n\n\n            \n                Example\n            \n            \n                        \n                            providers: [\n          ...\n         { provide: ByPassGuards, useValue: environment.bypassGuards },\n         { provide: StartPageUrl, useValue: CREATE_FACILITY_PAGES.HOME.fullpath },\n         DefaultPageGuardService\n         { provide: AbstractPageGuardService, useExisting: DefaultPageGuardService },\n         LoadPageGuardService\n]\n                        \n            \n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                bypassGuards\n                            \n                            \n                                startPageUrl\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                canBypassGuards\n                            \n                            \n                                    Public\n                                canNavigateToUrl\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(pageStateService: PageStateService, injector: Injector)\n                    \n                \n                        \n                            \n                                Defined in projects/common/lib/services/default-page-guard.service.ts:30\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        pageStateService\n                                                  \n                                                        \n                                                                        PageStateService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        injector\n                                                  \n                                                        \n                                                                        Injector\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            canBypassGuards\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    canBypassGuards()\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/services/default-page-guard.service.ts:34\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         boolean\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            canNavigateToUrl\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    canNavigateToUrl(url: string)\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/services/default-page-guard.service.ts:42\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    url\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            bypassGuards\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in projects/common/lib/services/default-page-guard.service.ts:29\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            startPageUrl\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : ''\n                        \n                    \n                        \n                            \n                                    Defined in projects/common/lib/services/default-page-guard.service.ts:30\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable, InjectionToken, Injector } from '@angular/core';\nimport { PageStateService } from './page-state.service';\nimport { AbstractPageGuardService } from './abstract-page-guard.service';\n\nexport const START_PAGE_URL = new InjectionToken( 'StartPageUrl' );\nexport const BYPASS_GUARDS = new InjectionToken( 'ByPassGuards' );\n\n/**\n * Default page guard service, ByPassGuards & StartPageUrl are injected only if not extending service\n *\n *  @example\n *\n *                providers: [\n *                         ...\n *                        { provide: ByPassGuards, useValue: environment.bypassGuards },\n *                        { provide: StartPageUrl, useValue: CREATE_FACILITY_PAGES.HOME.fullpath },\n *                        DefaultPageGuardService\n *                        { provide: AbstractPageGuardService, useExisting: DefaultPageGuardService },\n *                        LoadPageGuardService\n *                ]\n *\n\n */\n@Injectable({\n  providedIn: 'root'\n})\nexport class DefaultPageGuardService implements AbstractPageGuardService {\n\n  bypassGuards: boolean = false;\n  startPageUrl: string = '';\n\n  constructor( private pageStateService: PageStateService, private injector: Injector ) {}\n\n  public canBypassGuards(): boolean {\n\n    const bypass = this.injector.get( BYPASS_GUARDS );\n    console.log( 'canBypassGuards: injected value = ', bypass );\n\n    return bypass ? bypass : this.bypassGuards;\n  }\n\n  public canNavigateToUrl( url: string ): boolean {\n\n    const startUrl = this.injector.get( START_PAGE_URL );\n    const _startUrl = startUrl ? startUrl : this.startPageUrl;\n    const containStartUrl: boolean = url.includes( _startUrl );\n\n    console.log( 'canNavigateToUrl: injected value = ', startUrl, url );\n\n    // Empty list allow navigation to first page\n    if ( this.pageStateService.pageListIsClear() ) {\n\n      // Trying to navigate to start page\n      if ( containStartUrl ) {\n        return true;\n      }\n\n      // Redirect to start page\n      this.pageStateService.navigateByUrl( _startUrl );\n      return false;\n    }\n\n    return this.pageStateService.canNavigateToPage( url );\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/DropdownComponent.html":{"url":"components/DropdownComponent.html","title":"component - DropdownComponent","body":"\n                   \n\n\n\n\n\n  Components\n  DropdownComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    projects/common/lib/components/dropdown/dropdown.component.ts\n\n\n\n    \n        Extends\n    \n    \n                Base\n    \n\n    \n        Implements\n    \n    \n                    ControlValueAccessor\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                common-dropdown\n            \n\n            \n                styleUrls\n                ./dropdown.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./dropdown.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                _onChange\n                            \n                            \n                                    Public\n                                _onTouched\n                            \n                            \n                                    Public\n                                controlDir\n                            \n                            \n                                    Public\n                                model\n                            \n                            \n                                    Public\n                                objectId\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                registerOnChange\n                            \n                            \n                                registerOnTouched\n                            \n                            \n                                writeValue\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                addTag\n                            \n                            \n                                addTagText\n                            \n                            \n                                autocorrect\n                            \n                            \n                                clearable\n                            \n                            \n                                items\n                            \n                            \n                                label\n                            \n                            \n                                placeholder\n                            \n                            \n                                required\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(controlDir: NgControl)\n                    \n                \n                        \n                            \n                                Defined in projects/common/lib/components/dropdown/dropdown.component.ts:23\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        controlDir\n                                                  \n                                                        \n                                                                        NgControl\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        addTag\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/dropdown/dropdown.component.ts:17\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        addTagText\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'Add'\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/dropdown/dropdown.component.ts:18\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        autocorrect\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/dropdown/dropdown.component.ts:16\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        clearable\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : true\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/dropdown/dropdown.component.ts:20\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        items\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/dropdown/dropdown.component.ts:13\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        label\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'Default label'\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/dropdown/dropdown.component.ts:14\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        placeholder\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/dropdown/dropdown.component.ts:15\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        required\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/dropdown/dropdown.component.ts:19\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            registerOnChange\n                        \n                        \n                    \n                \n            \n            \n                \nregisterOnChange(fn: any)\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/components/dropdown/dropdown.component.ts:36\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    fn\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            registerOnTouched\n                        \n                        \n                    \n                \n            \n            \n                \nregisterOnTouched(fn: any)\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/components/dropdown/dropdown.component.ts:40\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    fn\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            writeValue\n                        \n                        \n                    \n                \n            \n            \n                \nwriteValue(value: any)\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/components/dropdown/dropdown.component.ts:32\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            _onChange\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : () => {...}\n                        \n                    \n                        \n                            \n                                    Defined in projects/common/lib/components/dropdown/dropdown.component.ts:22\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            _onTouched\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : () => {...}\n                        \n                    \n                        \n                            \n                                    Defined in projects/common/lib/components/dropdown/dropdown.component.ts:23\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            controlDir\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         NgControl\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Optional()@Self()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in projects/common/lib/components/dropdown/dropdown.component.ts:25\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            model\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/common/lib/components/dropdown/dropdown.component.ts:11\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            objectId\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : UUID.UUID()\n                        \n                    \n                            \n                                \n                                    Inherited from         Base\n\n                                \n                            \n                        \n                            \n                                    Defined in         Base:11\n\n                            \n                        \n\n                \n                    \n                        An identifier for parents to keep track of components \n\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit, Input, forwardRef, Optional, Self } from '@angular/core';\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR, NgControl } from '@angular/forms';\nimport { Base } from '../../models/base';\n\n@Component({\n  selector: 'common-dropdown',\n  templateUrl: './dropdown.component.html',\n  styleUrls: ['./dropdown.component.scss']\n})\nexport class DropdownComponent extends Base implements ControlValueAccessor {\n  public model: any;\n\n  @Input() items = [];\n  @Input() label: string = 'Default label';\n  @Input() placeholder: string;\n  @Input() autocorrect: string;\n  @Input() addTag: boolean = false;\n  @Input() addTagText: string = 'Add';\n  @Input() required: boolean;\n  @Input() clearable: boolean = true;\n\n  public _onChange = (_: any) => {};\n  public _onTouched = () => {};\n\n  constructor( @Optional() @Self() public controlDir: NgControl ) {\n    super();\n    if ( controlDir ) {\n      controlDir.valueAccessor = this;\n    }\n  }\n\n  writeValue(value: any): void {\n    this.model = value;\n  }\n\n  registerOnChange(fn: any): void {\n    this._onChange = fn;\n  }\n\n  registerOnTouched(fn: any): void {\n    this._onTouched = fn;\n  }\n\n}\n\n    \n\n    \n        \n{{label}}\n\n\n\n\n  {{label}} is required.\n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '{{label}}  {{label}} is required.'\n    var COMPONENTS = [{'name': 'AccordionCommonComponent', 'selector': 'common-accordion'},{'name': 'AddressComponent', 'selector': 'common-address'},{'name': 'ButtonComponent', 'selector': 'common-button'},{'name': 'ButtonGroupComponent', 'selector': 'common-button-group'},{'name': 'CaptchaComponent', 'selector': 'common-captcha'},{'name': 'CheckboxComponent', 'selector': 'common-checkbox'},{'name': 'CityComponent', 'selector': 'common-city'},{'name': 'ConfirmTemplateComponent', 'selector': 'common-confirm-template'},{'name': 'ConsentModalComponent', 'selector': 'common-consent-modal'},{'name': 'CoreBreadcrumbComponent', 'selector': 'common-core-breadcrumb'},{'name': 'CountryComponent', 'selector': 'common-country'},{'name': 'DateComponent', 'selector': 'common-date'},{'name': 'DatepickerComponent', 'selector': 'common-datepicker'},{'name': 'DropdownComponent', 'selector': 'common-dropdown'},{'name': 'EmailComponent', 'selector': 'common-email'},{'name': 'ErrorContainerComponent', 'selector': 'common-error-container'},{'name': 'FileUploaderComponent', 'selector': 'common-file-uploader'},{'name': 'FormActionBarComponent', 'selector': 'common-form-action-bar'},{'name': 'FormSubmitBarComponent', 'selector': 'common-form-submit-bar'},{'name': 'FullNameComponent', 'selector': 'common-full-name'},{'name': 'GeocoderInputComponent', 'selector': 'common-geocoder-input'},{'name': 'HeaderComponent', 'selector': 'common-header'},{'name': 'NameComponent', 'selector': 'common-name'},{'name': 'PageFrameworkComponent', 'selector': 'common-page-framework'},{'name': 'PageSectionComponent', 'selector': 'common-page-section'},{'name': 'PasswordComponent', 'selector': 'common-password'},{'name': 'PhnComponent', 'selector': 'common-phn'},{'name': 'PhoneNumberComponent', 'selector': 'common-phone-number'},{'name': 'PostalCodeComponent', 'selector': 'common-postal-code'},{'name': 'ProvinceComponent', 'selector': 'common-province'},{'name': 'RadioComponent', 'selector': 'common-radio'},{'name': 'SampleModalComponent', 'selector': 'common-sample-modal'},{'name': 'SinComponent', 'selector': 'common-sin'},{'name': 'StreetComponent', 'selector': 'common-street'},{'name': 'ThumbnailComponent', 'selector': 'common-thumbnail'},{'name': 'ToggleComponent', 'selector': 'common-toggle'},{'name': 'WizardProgressBarComponent', 'selector': 'common-wizard-progress-bar'},{'name': 'XiconButtonComponent', 'selector': 'common-xicon-button'}];\n    var DIRECTIVES = [{'name': 'DateFieldFormatDirective', 'selector': '[commonDateFieldFormat]'},{'name': 'DuplicateCheckDirective', 'selector': '[commonDuplicateCheck]'},{'name': 'ValidateBcPostalDirective', 'selector': '[commonValidateBcPostal]'},{'name': 'ValidateCityDirective', 'selector': '[commonValidateCity]'},{'name': 'ValidateNameDirective', 'selector': '[commonValidateName]'},{'name': 'ValidatePostalcodeDirective', 'selector': '[commonValidatePostalcode]'},{'name': 'ValidateRegionDirective', 'selector': '[commonValidateRegion]'},{'name': 'ValidateStreetDirective', 'selector': '[commonValidateStreet]'}];\n    var ACTUAL_COMPONENT = {'name': 'DropdownComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"directives/DuplicateCheckDirective.html":{"url":"directives/DuplicateCheckDirective.html","title":"directive - DuplicateCheckDirective","body":"\n                   \n\n\n\n\n\n\n\n  Directives\n  DuplicateCheckDirective\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/common/lib/components/duplicate-check/duplicate-check.directive.ts\n        \n\n\n            \n                Implements\n            \n            \n                            Validator\n            \n\n\n        \n            Metadata\n            \n                \n                    \n                        Providers\n                        \n                            \n                                { provide: NG_VALIDATORS, useExisting: DuplicateCheckDirective, multi: true }\n                            \n                        \n                    \n\n                    \n                        Selector\n                        [commonDuplicateCheck]\n                    \n\n                \n            \n        \n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                validate\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                dupList\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n\n            \n    Inputs\n        \n            \n                \n                    \n                        \n                        dupList\n                    \n                \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/duplicate-check/duplicate-check.directive.ts:32\n                            \n                        \n            \n        \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            validate\n                        \n                        \n                    \n                \n            \n            \n                \nvalidate(control: AbstractControl)\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/components/duplicate-check/duplicate-check.directive.ts:34\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    control\n                                    \n                                                AbstractControl\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     literal type | null\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n    \n\n\n    \n        import { Directive, Input } from '@angular/core';\nimport { ValidatorFn, AbstractControl, NG_VALIDATORS, Validator } from '@angular/forms';\n\n// Local function\nfunction checkForDuplicates( control: AbstractControl,\n                             dupList: string[] ): { [key: string]: boolean } | null {\n  // Duplicate check\n  if ( dupList && dupList.length ) {\n\n  const duplicate = dupList.find( x => x === control.value );\n  return (duplicate ? { 'duplicate': true } : null);\n  }\n  return null;\n}\n\n// TODO: Need to confirm this works with reactive forms\nexport function commonDuplicateCheck( dupList: string[] ): ValidatorFn {\n\n  return ( control: AbstractControl ): { [key: string]: boolean } | null => {\n    return checkForDuplicates( control, dupList );\n  };\n}\n\n@Directive({\n  selector: '[commonDuplicateCheck]',\n  providers: [\n    {provide: NG_VALIDATORS, useExisting: DuplicateCheckDirective, multi: true}\n    ]\n})\nexport class DuplicateCheckDirective implements Validator {\n\n  @Input() dupList: string[];\n\n  validate( control: AbstractControl ): {[key: string]: any} | null {\n  return checkForDuplicates( control, this.dupList );\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/EmailComponent.html":{"url":"components/EmailComponent.html","title":"component - EmailComponent","body":"\n                   \n\n\n\n\n\n  Components\n  EmailComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    projects/common/lib/components/email/email.component.ts\n\n\n    \n        Description\n    \n    \n        TODO DOCUMENT NEED TO USE NGMODEL FOR REQUIRED TO WORK. Also test with reactive forms to see if still nec\n\n    \n\n    \n        Extends\n    \n    \n                AbstractFormControl\n    \n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                common-email\n            \n\n            \n                styleUrls\n                ./email.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./email.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                _defaultErrMsg\n                            \n                            \n                                    Public\n                                controlDir\n                            \n                            \n                                    Private\n                                criteria\n                            \n                            \n                                email\n                            \n                            \n                                    Abstract\n                                _defaultErrMsg\n                            \n                            \n                                _onChange\n                            \n                            \n                                _onTouched\n                            \n                            \n                                    Public\n                                objectId\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                            \n                                onBlur\n                            \n                            \n                                onValueChange\n                            \n                            \n                                    Private\n                                validateSelf\n                            \n                            \n                                writeValue\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                registerOnChange\n                            \n                            \n                                registerOnTouched\n                            \n                            \n                                    Protected\n                                registerValidation\n                            \n                            \n                                setDisabledState\n                            \n                            \n                                    Protected\n                                setErrorMsg\n                            \n                            \n                                    Private\n                                validateLabel\n                            \n                            \n                                    Abstract\n                                writeValue\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                label\n                            \n                            \n                                labelforId\n                            \n                            \n                                maxlength\n                            \n                            \n                                value\n                            \n                            \n                                disabled\n                            \n                            \n                                errorMessage\n                            \n                            \n                                label\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                blur\n                            \n                            \n                                valueChange\n                            \n                        \n                    \n                \n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    value\n                                \n                            \n                        \n                    \n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(controlDir: NgControl)\n                    \n                \n                        \n                            \n                                Defined in projects/common/lib/components/email/email.component.ts:47\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        controlDir\n                                                  \n                                                        \n                                                                        NgControl\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        label\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'Email'\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/email/email.component.ts:23\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        labelforId\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'email_' + this.objectId\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/email/email.component.ts:25\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        maxlength\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : '255'\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/email/email.component.ts:24\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        value\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/email/email.component.ts:28\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        disabled\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                            \n                                \n                                    Inherited from         AbstractFormControl\n\n                                \n                            \n                        \n                            \n                                    Defined in         AbstractFormControl:16\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        errorMessage\n                    \n                \n                \n                    \n                        Type :         ErrorMessage\n\n                    \n                \n                            \n                                \n                                    Inherited from         AbstractFormControl\n\n                                \n                            \n                        \n                            \n                                    Defined in         AbstractFormControl:19\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        label\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                            \n                                \n                                    Inherited from         AbstractFormControl\n\n                                \n                            \n                        \n                            \n                                    Defined in         AbstractFormControl:14\n\n                            \n                        \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        blur\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/email/email.component.ts:38\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        valueChange\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/email/email.component.ts:37\n                            \n                        \n            \n        \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/components/email/email.component.ts:56\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            onBlur\n                        \n                        \n                    \n                \n            \n            \n                \nonBlur(event: any)\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/components/email/email.component.ts:68\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    event\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            onValueChange\n                        \n                        \n                    \n                \n            \n            \n                \nonValueChange(value: any)\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/components/email/email.component.ts:62\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            validateSelf\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    validateSelf()\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/components/email/email.component.ts:79\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     ValidationErrors | null\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            writeValue\n                        \n                        \n                    \n                \n            \n            \n                \nwriteValue(value: any)\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/components/email/email.component.ts:73\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Inherited from         AbstractFormControl\n\n                \n            \n            \n                \n                        Defined in         AbstractFormControl:27\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            registerOnChange\n                        \n                        \n                    \n                \n            \n            \n                \nregisterOnChange(fn: any)\n                \n            \n\n\n            \n                \n                    Inherited from         AbstractFormControl\n\n                \n            \n            \n                \n                        Defined in         AbstractFormControl:35\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    fn\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            registerOnTouched\n                        \n                        \n                    \n                \n            \n            \n                \nregisterOnTouched(fn: any)\n                \n            \n\n\n            \n                \n                    Inherited from         AbstractFormControl\n\n                \n            \n            \n                \n                        Defined in         AbstractFormControl:40\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    fn\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            registerValidation\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    registerValidation(ngControl: NgControl, fn: ValidationErrors)\n                \n            \n\n\n            \n                \n                    Inherited from         AbstractFormControl\n\n                \n            \n            \n                \n                        Defined in         AbstractFormControl:68\n\n                \n            \n\n\n            \n                \n                    Register self validating method\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    ngControl\n                                    \n                                                NgControl\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                    \n                                \n                                \n                                    fn\n                                    \n                                                ValidationErrors\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        function for validating self\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            setDisabledState\n                        \n                        \n                    \n                \n            \n            \n                \nsetDisabledState(isDisabled: boolean)\n                \n            \n\n\n            \n                \n                    Inherited from         AbstractFormControl\n\n                \n            \n            \n                \n                        Defined in         AbstractFormControl:45\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    isDisabled\n                                    \n                                                boolean\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            setErrorMsg\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    setErrorMsg()\n                \n            \n\n\n            \n                \n                    Inherited from         AbstractFormControl\n\n                \n            \n            \n                \n                        Defined in         AbstractFormControl:49\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            validateLabel\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    validateLabel()\n                \n            \n\n\n            \n                \n                    Inherited from         AbstractFormControl\n\n                \n            \n            \n                \n                        Defined in         AbstractFormControl:88\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Abstract\n                            writeValue\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    writeValue(value: any)\n                \n            \n\n\n            \n                \n                    Inherited from         AbstractFormControl\n\n                \n            \n            \n                \n                        Defined in         AbstractFormControl:32\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            _defaultErrMsg\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         ErrorMessage\n\n                        \n                    \n                    \n                        \n                            Default value : {\n    required: `${LabelReplacementTag} is required.`,\n    invalidEmail: `${LabelReplacementTag} must be properly formatted (e.g. name@domain.com)`\n  }\n                        \n                    \n                        \n                            \n                                    Defined in projects/common/lib/components/email/email.component.ts:42\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            controlDir\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         NgControl\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Optional()@Self()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in projects/common/lib/components/email/email.component.ts:49\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            criteria\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     RegExp\n\n                        \n                    \n                    \n                        \n                            Default value : /^(\\S+)@(\\S+)\\.(\\S+)$/\n                        \n                    \n                        \n                            \n                                    Defined in projects/common/lib/components/email/email.component.ts:47\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            email\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : ''\n                        \n                    \n                        \n                            \n                                    Defined in projects/common/lib/components/email/email.component.ts:40\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Abstract\n                            _defaultErrMsg\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         ErrorMessage\n\n                        \n                    \n                    \n                        \n                            Default value : {}\n                        \n                    \n                            \n                                \n                                    Inherited from         AbstractFormControl\n\n                                \n                            \n                        \n                            \n                                    Defined in         AbstractFormControl:11\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            _onChange\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : () => {...}\n                        \n                    \n                            \n                                \n                                    Inherited from         AbstractFormControl\n\n                                \n                            \n                        \n                            \n                                    Defined in         AbstractFormControl:23\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            _onTouched\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : () => {...}\n                        \n                    \n                            \n                                \n                                    Inherited from         AbstractFormControl\n\n                                \n                            \n                        \n                            \n                                    Defined in         AbstractFormControl:24\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            objectId\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : UUID.UUID()\n                        \n                    \n                            \n                                \n                                    Inherited from         Base\n\n                                \n                            \n                        \n                            \n                                    Defined in         Base:11\n\n                            \n                        \n\n                \n                    \n                        An identifier for parents to keep track of components \n\n                    \n                \n\n            \n        \n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        value\n                    \n                \n\n                \n                    \n                        getvalue()\n                    \n                \n                            \n                                \n                                    Defined in projects/common/lib/components/email/email.component.ts:33\n                                \n                            \n\n                \n                    \n                        setvalue(val: string)\n                    \n                \n                            \n                                \n                                    Defined in projects/common/lib/components/email/email.component.ts:28\n                                \n                            \n                    \n                        \n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                        Type\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                            val\n                                                    \n                                                            \n                                                                            string\n                                                            \n                                                    \n                                                        \n                                                                No\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :         void\n\n                                \n                        \n                    \n            \n        \n\n\n\n\n    \n        import {\n  Component,\n  Input,\n  Optional,\n  Self,\n  Output,\n  EventEmitter,\n  OnInit} from '@angular/core';\nimport { NgControl, ValidationErrors } from '@angular/forms';\nimport { AbstractFormControl } from '../../models/abstract-form-control';\nimport { ErrorMessage, LabelReplacementTag } from '../../models/error-message.interface';\n\n/**\n * TODO DOCUMENT NEED TO USE NGMODEL FOR REQUIRED TO WORK. Also test with reactive forms to see if still nec\n */\n@Component({\n  selector: 'common-email',\n  templateUrl: './email.component.html',\n  styleUrls: ['./email.component.scss']\n})\nexport class EmailComponent extends AbstractFormControl implements OnInit {\n\n  @Input() label: string = 'Email';\n  @Input() maxlength: string = '255';\n  @Input() labelforId: string = 'email_' + this.objectId;\n\n  @Input()\n  set value( val: string ) {\n    if ( val ) {\n      this.email = val;\n    }\n  }\n  get value() {\n    return this.email;\n  }\n\n  @Output() valueChange: EventEmitter = new EventEmitter();\n  @Output() blur: EventEmitter = new EventEmitter();\n\n  email: string = '';\n\n  _defaultErrMsg: ErrorMessage = {\n    required: `${LabelReplacementTag} is required.`,\n    invalidEmail: `${LabelReplacementTag} must be properly formatted (e.g. name@domain.com)`\n  };\n\n  private criteria: RegExp = /^(\\S+)@(\\S+)\\.(\\S+)$/;\n\n  constructor( @Optional() @Self() public controlDir: NgControl ) {\n    super();\n    if ( controlDir ) {\n      controlDir.valueAccessor = this;\n    }\n  }\n\n  ngOnInit() {\n    super.ngOnInit();\n\n    this.registerValidation( this.controlDir, this.validateSelf );\n  }\n\n  onValueChange( value: any ) {\n    this.email = value;\n    this._onChange( value );\n    this.valueChange.emit( value );\n  }\n\n  onBlur( event: any ) {\n    this._onTouched( event );\n    this.blur.emit( event.target.value );\n  }\n\n  writeValue( value: any ): void {\n    if ( value ) {\n      this.email = value;\n    }\n  }\n\n  private validateSelf(): ValidationErrors | null {\n\n    if ( this.email ) {\n      const result = this.criteria.test( this.email );\n      return result ? null : { invalidEmail: true };\n    }\n    return null;\n  }\n}\n\n    \n\n    \n        \n{{label}}\n\n\n\n  \n    {{_defaultErrMsg.required}}\n  \n  \n    {{_defaultErrMsg.invalidEmail}}\n  \n\n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '{{label}}      {{_defaultErrMsg.required}}        {{_defaultErrMsg.invalidEmail}}  '\n    var COMPONENTS = [{'name': 'AccordionCommonComponent', 'selector': 'common-accordion'},{'name': 'AddressComponent', 'selector': 'common-address'},{'name': 'ButtonComponent', 'selector': 'common-button'},{'name': 'ButtonGroupComponent', 'selector': 'common-button-group'},{'name': 'CaptchaComponent', 'selector': 'common-captcha'},{'name': 'CheckboxComponent', 'selector': 'common-checkbox'},{'name': 'CityComponent', 'selector': 'common-city'},{'name': 'ConfirmTemplateComponent', 'selector': 'common-confirm-template'},{'name': 'ConsentModalComponent', 'selector': 'common-consent-modal'},{'name': 'CoreBreadcrumbComponent', 'selector': 'common-core-breadcrumb'},{'name': 'CountryComponent', 'selector': 'common-country'},{'name': 'DateComponent', 'selector': 'common-date'},{'name': 'DatepickerComponent', 'selector': 'common-datepicker'},{'name': 'DropdownComponent', 'selector': 'common-dropdown'},{'name': 'EmailComponent', 'selector': 'common-email'},{'name': 'ErrorContainerComponent', 'selector': 'common-error-container'},{'name': 'FileUploaderComponent', 'selector': 'common-file-uploader'},{'name': 'FormActionBarComponent', 'selector': 'common-form-action-bar'},{'name': 'FormSubmitBarComponent', 'selector': 'common-form-submit-bar'},{'name': 'FullNameComponent', 'selector': 'common-full-name'},{'name': 'GeocoderInputComponent', 'selector': 'common-geocoder-input'},{'name': 'HeaderComponent', 'selector': 'common-header'},{'name': 'NameComponent', 'selector': 'common-name'},{'name': 'PageFrameworkComponent', 'selector': 'common-page-framework'},{'name': 'PageSectionComponent', 'selector': 'common-page-section'},{'name': 'PasswordComponent', 'selector': 'common-password'},{'name': 'PhnComponent', 'selector': 'common-phn'},{'name': 'PhoneNumberComponent', 'selector': 'common-phone-number'},{'name': 'PostalCodeComponent', 'selector': 'common-postal-code'},{'name': 'ProvinceComponent', 'selector': 'common-province'},{'name': 'RadioComponent', 'selector': 'common-radio'},{'name': 'SampleModalComponent', 'selector': 'common-sample-modal'},{'name': 'SinComponent', 'selector': 'common-sin'},{'name': 'StreetComponent', 'selector': 'common-street'},{'name': 'ThumbnailComponent', 'selector': 'common-thumbnail'},{'name': 'ToggleComponent', 'selector': 'common-toggle'},{'name': 'WizardProgressBarComponent', 'selector': 'common-wizard-progress-bar'},{'name': 'XiconButtonComponent', 'selector': 'common-xicon-button'}];\n    var DIRECTIVES = [{'name': 'DateFieldFormatDirective', 'selector': '[commonDateFieldFormat]'},{'name': 'DuplicateCheckDirective', 'selector': '[commonDuplicateCheck]'},{'name': 'ValidateBcPostalDirective', 'selector': '[commonValidateBcPostal]'},{'name': 'ValidateCityDirective', 'selector': '[commonValidateCity]'},{'name': 'ValidateNameDirective', 'selector': '[commonValidateName]'},{'name': 'ValidatePostalcodeDirective', 'selector': '[commonValidatePostalcode]'},{'name': 'ValidateRegionDirective', 'selector': '[commonValidateRegion]'},{'name': 'ValidateStreetDirective', 'selector': '[commonValidateStreet]'}];\n    var ACTUAL_COMPONENT = {'name': 'EmailComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ErrorContainerComponent.html":{"url":"components/ErrorContainerComponent.html","title":"component - ErrorContainerComponent","body":"\n                   \n\n\n\n\n\n  Components\n  ErrorContainerComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    projects/common/lib/components/error-container/error-container.component.ts\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                common-error-container\n            \n\n            \n                styleUrls\n                ./error-container.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./error-container.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                displayError\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in projects/common/lib/components/error-container/error-container.component.ts:10\n                            \n                        \n\n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        displayError\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/error-container/error-container.component.ts:10\n                            \n                        \n            \n        \n\n\n\n\n\n\n\n\n\n    \n        import { Component, Input } from '@angular/core';\n\n@Component({\n  selector: 'common-error-container',\n  templateUrl: './error-container.component.html',\n  styleUrls: ['./error-container.component.scss']\n})\nexport class ErrorContainerComponent {\n\n  @Input() displayError: boolean = false;\n\n  constructor() { }\n}\n\n    \n\n    \n        \n  \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  '\n    var COMPONENTS = [{'name': 'AccordionCommonComponent', 'selector': 'common-accordion'},{'name': 'AddressComponent', 'selector': 'common-address'},{'name': 'ButtonComponent', 'selector': 'common-button'},{'name': 'ButtonGroupComponent', 'selector': 'common-button-group'},{'name': 'CaptchaComponent', 'selector': 'common-captcha'},{'name': 'CheckboxComponent', 'selector': 'common-checkbox'},{'name': 'CityComponent', 'selector': 'common-city'},{'name': 'ConfirmTemplateComponent', 'selector': 'common-confirm-template'},{'name': 'ConsentModalComponent', 'selector': 'common-consent-modal'},{'name': 'CoreBreadcrumbComponent', 'selector': 'common-core-breadcrumb'},{'name': 'CountryComponent', 'selector': 'common-country'},{'name': 'DateComponent', 'selector': 'common-date'},{'name': 'DatepickerComponent', 'selector': 'common-datepicker'},{'name': 'DropdownComponent', 'selector': 'common-dropdown'},{'name': 'EmailComponent', 'selector': 'common-email'},{'name': 'ErrorContainerComponent', 'selector': 'common-error-container'},{'name': 'FileUploaderComponent', 'selector': 'common-file-uploader'},{'name': 'FormActionBarComponent', 'selector': 'common-form-action-bar'},{'name': 'FormSubmitBarComponent', 'selector': 'common-form-submit-bar'},{'name': 'FullNameComponent', 'selector': 'common-full-name'},{'name': 'GeocoderInputComponent', 'selector': 'common-geocoder-input'},{'name': 'HeaderComponent', 'selector': 'common-header'},{'name': 'NameComponent', 'selector': 'common-name'},{'name': 'PageFrameworkComponent', 'selector': 'common-page-framework'},{'name': 'PageSectionComponent', 'selector': 'common-page-section'},{'name': 'PasswordComponent', 'selector': 'common-password'},{'name': 'PhnComponent', 'selector': 'common-phn'},{'name': 'PhoneNumberComponent', 'selector': 'common-phone-number'},{'name': 'PostalCodeComponent', 'selector': 'common-postal-code'},{'name': 'ProvinceComponent', 'selector': 'common-province'},{'name': 'RadioComponent', 'selector': 'common-radio'},{'name': 'SampleModalComponent', 'selector': 'common-sample-modal'},{'name': 'SinComponent', 'selector': 'common-sin'},{'name': 'StreetComponent', 'selector': 'common-street'},{'name': 'ThumbnailComponent', 'selector': 'common-thumbnail'},{'name': 'ToggleComponent', 'selector': 'common-toggle'},{'name': 'WizardProgressBarComponent', 'selector': 'common-wizard-progress-bar'},{'name': 'XiconButtonComponent', 'selector': 'common-xicon-button'}];\n    var DIRECTIVES = [{'name': 'DateFieldFormatDirective', 'selector': '[commonDateFieldFormat]'},{'name': 'DuplicateCheckDirective', 'selector': '[commonDuplicateCheck]'},{'name': 'ValidateBcPostalDirective', 'selector': '[commonValidateBcPostal]'},{'name': 'ValidateCityDirective', 'selector': '[commonValidateCity]'},{'name': 'ValidateNameDirective', 'selector': '[commonValidateName]'},{'name': 'ValidatePostalcodeDirective', 'selector': '[commonValidatePostalcode]'},{'name': 'ValidateRegionDirective', 'selector': '[commonValidateRegion]'},{'name': 'ValidateStreetDirective', 'selector': '[commonValidateStreet]'}];\n    var ACTUAL_COMPONENT = {'name': 'ErrorContainerComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ErrorMessage.html":{"url":"interfaces/ErrorMessage.html","title":"interface - ErrorMessage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  ErrorMessage\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/common/lib/models/error-message.interface.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        required\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n            \n    Indexable\n        \n            \n                \n                    \n                        [key: string]:        string\n\n                    \n                \n                        \n                            \n                                Defined in projects/common/lib/models/error-message.interface.ts:13\n                            \n                        \n            \n        \n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        required\n                                    \n                                \n                                \n                                    \n                                        required:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export const LabelReplacementTag = '{label}';\nexport interface ErrorMessage {\n  required?: string;\n  [key: string]: string;\n}\n\n// To catch all occurances of the label tag in the message\nconst regExpLabel = new RegExp( LabelReplacementTag, 'g' );\n\n// Function only used with library\nexport function replaceLabelTag( str: string, value: string ) {\n  return str.replace( regExpLabel, value );\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/FileUploaderMsg.html":{"url":"interfaces/FileUploaderMsg.html","title":"interface - FileUploaderMsg","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  FileUploaderMsg\n\n\n\n        \n            Info\n        \n        \n            Design Guidelines\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/common/lib/components/file-uploader/file-uploader.component.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        required\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        required\n                                    \n                                \n                                \n                                    \n                                        required:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n    \n        Design Guidelines\nLorem ipsum dolor sit amet consectetur adipisicing elit. Sapiente, magnam ipsam. Sit quasi natus architecto rerum unde non provident! Quia nisi facere amet iste mollitia voluptatem non molestias esse optio?\nAperiam fugiat consectetur temporibus, iste repellat, quisquam sapiente nisi distinctio optio, autem nemo tenetur error eum voluptatibus ab accusamus quis voluptatum blanditiis. Quam et ut reprehenderit vitae nobis, at ipsum!\nExercitationem pariatur animi repudiandae corporis obcaecati ratione ducimus beatae quam, nostrum magnam unde numquam quidem cupiditate odit id. Beatae alias molestiae, optio incidunt harum quia voluptates deserunt sequi. Nesciunt, optio.\n\n    \n\n    \n        import { AfterContentInit, ChangeDetectorRef, Component,\n    ContentChild, ElementRef, EventEmitter, Input, NgZone, OnChanges,\n    OnInit, Output, SimpleChanges, ViewChild, forwardRef, AfterViewInit, ViewEncapsulation } from '@angular/core';\nimport { NgForm, ControlContainer } from '@angular/forms';\nimport * as moment from 'moment';\nimport { ModalDirective} from 'ngx-bootstrap';\nimport { PDFJSStatic } from 'pdfjs-dist';\nimport { Observable ,  Observer, fromEvent, merge } from 'rxjs';\nimport {map, filter, flatMap, scan, delay, retryWhen} from 'rxjs/operators';\nimport { CommonImage, CommonImageError, CommonImageProcessingError,\nCommonImageScaleFactors, CommonImageScaleFactorsImpl } from '../../models/images.model';\n// import { MspLogService } from '../../service/log.service';\n// import { MspDataService } from '../../service/msp-data.service';\n// import { BaseComponent } from '../base.component';\n// import { LogEntry } from '../logging/log-entry.model';\n// import {Person} from '../../model/application.model';\nimport {Router} from '@angular/router';\nimport { Base } from '../../models/base';\n// import {ApplicationBase} from '../../model/application-base.model';\n\n// const loadImage = require('blueimp-load-image');\n// const sha1 = require('sha1');\n\nimport * as loadImage_ from 'blueimp-load-image';\nconst loadImage = loadImage_;\nimport * as sha1_ from 'sha1';\nconst sha1 = sha1_;\n\n// const PDFJS: PDFJSStatic = require('pdfjs-dist');\nimport * as PDFJS_ from 'pdfjs-dist';\nconst PDFJS: PDFJSStatic = (PDFJS_ as any);\n\n// const pdfjs = import('pdfjs-dist/build/pdf');\n// const pdfjsWorker = import('pdfjs-dist/build/pdf.worker.entry');\nimport { pdfJsWorker } from 'pdfjs-dist/build/pdf.worker.entry';\nPDFJS.workerSrc=pdfJsWorker;\n\nexport interface FileUploaderMsg {\n    required: string;\n}\n\n// TODO - Remove this and fix tslint issues\n/* tslint:disable:max-line-length*/\n\n@Component({\n    selector: 'common-file-uploader',\n    templateUrl: './file-uploader.component.html',\n    styleUrls: ['./file-uploader.component.scss'],\n    encapsulation: ViewEncapsulation.None,\n    viewProviders: [ { provide: ControlContainer, useExisting: forwardRef(() => NgForm ) } ]\n})\nexport class FileUploaderComponent extends Base\n    implements OnInit, OnChanges, AfterContentInit {\n    noIdImage: Boolean = false;\n    private appConstants;\n    @ViewChild('dropZone') dropZone: ElementRef;\n    @ViewChild('browseFileRef') browseFileRef: ElementRef;\n    // @ViewChild('captureFileRef') captureFileRef: ElementRef;\n    @ViewChild('imagePlaceholderRef') imagePlaceholderRef: ElementRef;\n    @ViewChild('selectFileLabel') selectFileLabelRef: ElementRef;\n\n    // @ContentChild('uploadInstruction') uploadInstructionRef: ElementRef;\n    @Input() images: Array = new Array(0);\n    @Output() imagesChange: EventEmitter> = new EventEmitter>();\n    @Input() id: string;\n    @Input() showError: boolean;\n    @Input() required: boolean = false;\n    @Input() instructionText: string = 'Please upload required ID documents.';\n    @Input() errorMessages: FileUploaderMsg = {required: 'File is required.'};\n\n    @ViewChild('canvas') canvas: ElementRef;\n\n\n    @Output() errorDocument: EventEmitter = new EventEmitter();\n\n    constructor(\n                // private dataService: MspDataService,\n                // private logService: MspLogService,\n                private zone: NgZone,\n                private cd: ChangeDetectorRef , private router: Router,\n                private controlContainer: ControlContainer) {\n        super();\n        // this.application = this.getApplicationType();\n    }\n\n    /**\n     * This is created as a workaround to access the form control that binds to\n     * the input[type='file']. We can't access it via the template name bindings\n     * as that isn't working, so instead we access the parent form and then find\n     * the input by name.\n     */\n    get fileControl() {\n        const INPUT_NAME = `fileUploadBrowse-${this.id}`;\n        // note - should be \"this.controlContainer as NgForm\" here, which works,\n        // but fails on compiliation due to secondary entries\n        return (this.controlContainer as any).controls[INPUT_NAME];\n    }\n\n    /**\n     * Return true if file already exists in the list; false otherwise.\n     */\n    static checkImageExists(file: CommonImage, imageList: Array) {\n        if (!imageList || imageList.length = 0; i--) {\n                // console.log(`compare  ${imageList[i].id} with ${sha1Sum}, result ${imageList[i].id === sha1Sum}`);\n                if (imageList[i].id === sha1Sum) {\n                    console.log(`This file ${file.name} has already been uploaded.`);\n                    return true;\n                }\n            }\n            return false;\n        }\n    }\n\n    /**\n     * A special method to force the rendering of this component.  This is a workaround\n     * because for some unknown reason, AngularJS2 change detector does not detect the\n     * change of the images Array.\n     */\n    forceRender() {\n        this.zone.run(() => {\n        });\n    }\n\n\n    ngOnChanges(changes: SimpleChanges): void {\n        if (changes['images'] && (\n            (changes['images'].currentValue && changes['images'].currentValue.length === 0)\n            && changes['images'].previousValue\n            && changes['images'].previousValue.length > 0)\n        ) {\n            this.noIdImage = true;\n        } else {\n            this.noIdImage = false;\n        }\n    }\n\n    /*\n     System processing steps\n\n     1. User clicks browse or drag-n-drops an file\n     2. For browse case, the browser is told to only accept mime type image/*, .JPG, .GIF, .PNG, etc,\n     however user can override and for drag-n-drop we don't can't impose this filter\n     4. Using the HTML5 File API, we open a handle on the file\n     5. Read the filename for later display to the user\n     6. Create a hidden Image element in the browser's DOM\n     7. Read the file's bytes as a DataUrl and copy them into the Image element\n     8. Wait until the Image finishes loading the image\n     9. Read the image element's natural width and height\n     10. Pass the File handle into a HTML5 Canvas lib (we need the XIFF headers to auto rotate, XIFF headers are not available in DataUrl)\n     11. The Canvas errors because it's a wrong type, e.g., TIFF, we abort and notify user\n     12. Instruct the Canvas lib to keep resizing the image if it exceeds a maximum width or height,\n     extract meta data, and auto-orient based on XIFF metadata.  It uses a \"contain\" operation which retains\n     it's width to height pixel ratio.\n     13. Call a function on the Canvas element to turn the Canvas into a JPEG of quality 50%.\n     14. Once in a Blob with get the blob size in bytes and a human friendly display size\n     15. In order to more easily manage the image, we convert the Blob to a DataUrl again.\n     16. Pass the DataUrl into a hash algorithm to create an identifier and to check if the image has already been uploaded\n     17. Next we check the final size of the image to ensure it's not to small in resolution\n     (arguably this could've been done earlier), if too small we notify user\n     18. Finally, the image is saved into the user's ongoing EA/PA application including localstorage\n     19. The image is displayed to user as a thumbnail\n\n     */\n\n    ngOnInit(): void {\n\n\n        const dragOverStream =\n            fromEvent(this.dropZone.nativeElement, 'dragover');\n\n        /**\n         * Must cancel the dragover event in order for the drop event to work.\n         */\n        dragOverStream.pipe(map(evt => {\n            return event;\n        })).subscribe(evt => {\n            // console.log('Cancel dragover event.');\n            evt.preventDefault();\n        });\n\n        const dropStream = fromEvent(this.dropZone.nativeElement, 'drop');\n        const filesArrayFromDrop = dropStream.pipe(\n            map(\n                function (event) {\n                    event.preventDefault();\n                    return event.dataTransfer.files;\n                }\n            ));\n\n        const browseFileStream = fromEvent(this.browseFileRef.nativeElement, 'change');\n        // const captureFileStream = fromEvent(this.captureFileRef.nativeElement, 'change');\n\n        merge(merge(browseFileStream).pipe(\n            map(\n                (event) => {\n                    event.preventDefault();\n                    return event.target['files'];\n\n                }\n            )),\n            filesArrayFromDrop).pipe(\n                filter(files => {\n                    // console.log('files');\n                    return !!files && files.length && files.length > 0;\n                }),\n                flatMap(\n                    (fileList: FileList) => {\n\n                        return this.observableFromFiles(fileList, new CommonImageScaleFactorsImpl(1, 1));\n                    }\n                ),\n                filter(\n                    (mspImage: CommonImage) => {\n\n                        const imageExists = FileUploaderComponent.checkImageExists(mspImage, this.images);\n                        if (imageExists) {\n                            this.handleError(CommonImageError.AlreadyExists, mspImage);\n                            this.resetInputFields();\n                        }\n                        return !imageExists;\n                    }\n                ),\n                // TODO - Is this necessary? Can likely be removed as it's exactly identical to the preceding.\n                filter((mspImage: CommonImage) => {\n\n                    const imageExists = FileUploaderComponent.checkImageExists(mspImage, this.images);\n                        if (imageExists) {\n                            this.handleError(CommonImageError.AlreadyExists, mspImage);\n                            this.resetInputFields();\n                        }\n                        return !imageExists;\n                    }\n                ),\n                filter((mspImage: CommonImage) => {\n\n                    const imageSizeOk = this.checkImageDimensions(mspImage);\n                        if (!imageSizeOk) {\n                            this.handleError(CommonImageError.TooSmall, mspImage);\n                            this.resetInputFields();\n                        }\n                        return imageSizeOk;\n                    }\n                )\n            ).subscribe(\n            (file: CommonImage) => {\n\n                this.handleImageFile(file);\n                this.resetInputFields();\n            },\n\n            (error) => {\n                console.log('Error in loading image: %o', error);\n\n                /**\n                 * Handle the error if the image is gigantic that after\n                 * 100 times of scaling down by 30% on each step, the image\n                 * is still over 1 MB.\n                 */\n                if (error.errorCode) {\n                    if (CommonImageError.TooBig === error.errorCode) {\n                        this.handleError(CommonImageError.TooBig, error.image);\n                    } else if (CommonImageError.CannotOpen === error.errorCode) {\n                        if (!error.image) {\n                            error.image = new CommonImage();\n                            if (error.rawImageFile) {\n                                error.image.name = error.rawImageFile.name;\n                            }\n                        }\n                        this.handleError(CommonImageError.CannotOpen, error.image);\n                    } else if (CommonImageError.CannotOpenPDF === error.errorCode) {\n                        this.handleError(CommonImageError.CannotOpenPDF, error.image, error.errorDescription);\n                    } else {\n                        throw error;\n                    }\n                }\n\n\n            },\n            () => {\n                console.log('completed loading image');\n            }\n        );\n    }\n\n    test(var1) {\n        console.log(var1);\n    }\n\n    ngAfterContentInit() {\n\n        const imagePlaceholderEnterKeyStream = merge(\n            fromEvent(this.imagePlaceholderRef.nativeElement, 'keyup'),\n            fromEvent(this.selectFileLabelRef.nativeElement, 'keyup'),\n            // fromEvent(this.uploadInstructionRef.nativeElement, 'keyup')\n        ).pipe(filter((evt: KeyboardEvent) => evt.key === 'Enter'));\n\n        merge(\n            fromEvent(this.imagePlaceholderRef.nativeElement, 'click'),\n            // fromEvent(this.uploadInstructionRef.nativeElement, 'click'),\n            imagePlaceholderEnterKeyStream\n        ).pipe(\n            map((event) => {\n                event.preventDefault();\n                return event;\n            })\n        ).subscribe( (event) => { this.browseFileRef.nativeElement.click(); });\n    }\n\n\n    /** Opens the file upload dialog from the browser. */\n    openFileDialog() {\n        console.log('opening file dialog');\n        this.browseFileRef.nativeElement.click();\n    }\n\n    /**\n     * Solve size in this equation: size * 0.8to-the-power-of30 ) => {\n            const mspImages = [];\n            scaleFactors = scaleFactors.scaleDown(reductionScaleFactor);\n            for (let fileIndex = 0; fileIndex  {\n\n\n                        // this.logService.log({name: file.name + 'is successfully split into ' + images.length + ' images',\n                            // UUID: self.dataService.getMspUuid()}, 'File_Upload');\n\n                        images.map((image, index) => {\n                            image.name = pdfFile.name;\n                            this.resizeImage( image, self, scaleFactors, observer, pageNumber , true); // index starts from zero\n                            pageNumber = pageNumber + 1  ;\n                        });\n                    }, (error: string) => {\n                        console.log('error' + JSON.stringify(error));\n                        const imageReadError: CommonImageProcessingError =\n                            new CommonImageProcessingError(CommonImageError.CannotOpenPDF, error);\n                        observer.error(imageReadError);\n                    });\n                } else {\n                    // Load image into img element to read natural height and width\n                    this.readImage(file, pageNumber , (image: HTMLImageElement , imageFile: File , nextPageNumber: number)  => {\n                            image.id = imageFile.name; // .name deprecated, changed image.name to image.id\n                            this.resizeImage(image, self, scaleFactors, observer , nextPageNumber );\n                        },\n\n                        // can be ignored for bug, the log line is never called\n                        (error: CommonImageProcessingError) => {\n                            console.log('error' + JSON.stringify(error));\n                            observer.error(error);\n                        });\n                    pageNumber = pageNumber + 1  ;\n                }\n            }\n\n            // retryWhen is potential issue!\n        }).pipe(retryWhen(this.retryStrategy(32)));\n        return fileObservable;\n    }\n\n\n    private resizeImage( image: HTMLImageElement, self: this, scaleFactors: CommonImageScaleFactors, observer: Observer, pageNumber: number = 0 , isPdf: boolean = false) {\n// While it's still in an image, get it's height and width\n        const mspImage: CommonImage = new CommonImage();\n        const reader: FileReader = new FileReader();\n        console.log('image.name:' + image.id); // .name deprecated, changed image.name to image.id\n        // Copy file properties\n        mspImage.name = image.id ;\n        if (isPdf) {\n            mspImage.name = image.name + '-page' + pageNumber;  // Just give name to pdf\n        }\n        // Temporary so we don't have duplicate file names. TODO: Improve.\n        //   mspImage.name += Math.ceil(Math.random()*100);\n        mspImage.attachmentOrder = pageNumber ;\n\n\n        mspImage.naturalWidth = image.naturalWidth;\n        mspImage.naturalHeight = image.naturalHeight;\n\n        console.log(`image file natural height and width:\n            ${mspImage.naturalHeight} x ${mspImage.naturalWidth}`);\n\n        // Canvas will force the change to a JPEG\n        mspImage.contentType = 'image/jpeg'; // previously in appConstants\n\n        // Scale the image by loading into a canvas\n\n        console.log('Start scaling down the image using blueimp-load-image lib: ');\n        const scaledImage = loadImage(\n            image.src, // NOTE: we pass the File ref here again even though its already read because we need the XIFF metadata\n            function (canvas: HTMLCanvasElement, metadata: any) {\n\n                // Canvas may be an Event when errors happens\n                if (canvas instanceof Event) {\n                    self.handleError(CommonImageError.WrongType, mspImage);\n                    self.resetInputFields();\n                    return;\n                }\n                // Convert to blob to get size\n                canvas.toBlob((blob: Blob) => {\n                        // Copy the blob properties\n                        mspImage.size = blob.size;\n\n                        // log image info (but only for the first time before any scaling)\n                        // if (s\n\n                        const fileName = mspImage.name;\n                        const nBytes = mspImage.size;\n                        let fileSize = '';\n                        let fileSizeUnit = '';\n                        let sOutput: string = nBytes + ' bytes';\n                        // optional code for multiples approximation\n                        for (let aMultiples = ['KiB', 'MiB', 'GiB', 'TiB', 'PiB', 'EiB', 'ZiB', 'YiB'],\n                                 nMultiple = 0, nApprox = nBytes / 1024; nApprox > 1; nApprox /= 1024, nMultiple++) {\n\n                            sOutput = nApprox.toFixed(3) + ' ' + aMultiples[nMultiple] + ' (' + nBytes + ' bytes)';\n                            fileSize = nApprox.toFixed(0);\n                            fileSizeUnit = aMultiples[nMultiple];\n                            mspImage.sizeUnit = fileSizeUnit;\n                        }\n\n                        console.log(`File ${fileName} is scaled down to: ${sOutput}`);\n                        mspImage.sizeTxt = sOutput;\n\n                        // call reader with new transformed image\n                        reader.onload = function (evt: any) {\n\n                            mspImage.fileContent = evt.target.result;\n                            mspImage.id = sha1(mspImage.fileContent);\n\n                            // keep scaling down the image until the image size is\n                            // under max image size\n\n                            /** previously in appConstants */\n                            const maxSizeBytes = 1048576;\n                            if (mspImage.size > maxSizeBytes) {\n\n                                console.log('File size after scaling down: %d, max file size allowed: %d',\n                                    mspImage.size, maxSizeBytes);\n\n                                const imageTooBigError: CommonImageProcessingError =\n                                    new CommonImageProcessingError(CommonImageError.TooBig);\n\n                                imageTooBigError.maxSizeAllowed = maxSizeBytes;\n                                imageTooBigError.commonImage = mspImage;\n\n                                observer.error(imageTooBigError);\n                            } else {\n                                // log image info\n                                //   self.logImageInfo(\"msp_file-uploader_after_resize_attributes\", self.dataService.getMspUuid(), mspImage);\n                                observer.next(mspImage);\n                            }\n                        };\n                        reader.readAsDataURL(blob);\n                    },\n\n                    // What mime type to make the blob as and jpeg quality\n                    'image/jpeg', 0.5);\n            },\n            {\n                maxWidth: 2600 * scaleFactors.widthFactor,\n                maxHeight: 3300 * scaleFactors.heightFactor,\n                contain: true,\n                canvas: true,\n                meta: true,\n                orientation: true\n            }\n        );\n    }\n\n    /**\n     * Max retry scaling down for maxRetry times.\n     */\n    retryStrategy(maxRetry: number) {\n        return function (errors: Observable) {\n\n            /**Done: COMPLETE THIS! For some reason can't get scan() to work, types always malformed.*/\n\n            // return errors.pipe(\n            //     // scan((acc, curr) => {acc + curr}, 0)\n            //     scan((acc, error, index) => {\n            //         return acc + error;\n            //     }, 0)\n            // );\n\n            // Done: Unsure if we have to re-implement this line. It causes errors, but simply removing it may not be appropriate.\n            // NOTE: RxJS-compat might be saving us here and \"fixing\" the errors. See if errors return when we remove rxjs-compat.\n            // return errors.pipe(scan((acc, curr) => acc + curr, 0))\n\n\n            return errors.pipe(scan(\n                // return errors.pipe(\n                (acc, error: any, index) => {\n                    // console.log('Error encountered: %o', error);;\n\n                    /**\n                     * If the error is about file too big and we have not reach max retry\n                     * yet, theyt keep going to scaling down.\n                     */\n                    if (acc  void,\n                      invalidImageHanlder: (error: CommonImageProcessingError) => void) {\n        const reader = new FileReader();\n\n        reader.onload = function (progressEvt: ProgressEvent) {\n\n            console.log('loading image into an img tag: %o', progressEvt);\n            // Load into an image element\n            const imgEl: HTMLImageElement = document.createElement('img');\n            imgEl.src = (reader.result as string);\n\n            // Wait for onload so all properties are populated\n            imgEl.onload = (args) => {\n                console.log('Completed image loading into an img tag: %o', args);\n                return callback(imgEl, imageFile, nextPageNumber);\n            };\n\n            imgEl.onerror =\n                (args) => {\n\n                    // log it to the console\n                    console.log('This image cannot be opened/read, it is probably an invalid image. %o', args);\n\n                    // throw new Error('This image cannot be opened/read');\n                    const imageReadError: CommonImageProcessingError =\n                        new CommonImageProcessingError(CommonImageError.CannotOpen);\n\n                    imageReadError.rawImageFile = imageFile;\n\n                    return invalidImageHanlder(imageReadError);\n                };\n        };\n\n        reader.readAsDataURL(imageFile);\n    }\n\n    private readPDF(pdfFile: File, pdfScaleFactor: number,\n                    callback: (image: HTMLImageElement[], pdfFile: File) => void, error: (errorReason: any) => void) {\n\n        PDFJS.disableWorker = true;\n        PDFJS.disableStream = true;\n\n        const reader = new FileReader();\n        let currentPage = 1;\n        const canvas = document.createElement('canvas');\n        const imgElsArray: HTMLImageElement[] = [];\n        const ctx = canvas.getContext('2d');\n        reader.onload = function (progressEvt: ProgressEvent) {\n\n            const docInitParams = {data: reader.result};\n            // TODO - The 'as any' was added when porting to common library from MSP\n            PDFJS.getDocument((docInitParams as any)).then((pdfdoc) => {\n                const numPages = pdfdoc.numPages;\n                if (currentPage = 50) {\n\n            // log it\n            // this.logImageInfo('msp_file-uploader_error', this.dataService.getMspUuid(),\n            //     mspImage, `Number of image files exceeds max of ${50}`);\n\n            // log to console\n            console.log(`Max number of image file you can upload is ${50}.\n      This file ${mspImage.name} was not uploaded.`);\n        } else {\n            this.images.push(mspImage);\n            this.imagesChange.emit(this.images);\n            this.showError = false;\n            this.noIdImage = false;\n        }\n    }\n\n    handleError(error: CommonImageError, mspImage: CommonImage, errorDescription?: string) {\n\n        if (!mspImage) {\n            mspImage = new CommonImage();\n        }\n        // just add the error to mspImage\n        mspImage.error = error;\n\n        // log the error\n        if (error !== CommonImageError.PDFnotSupported) {\n            // this.logImageInfo('msp_file-uploader_error', this.dataService.getMspUuid(), mspImage,\n            //     '  mspImageFile: ' + mspImage.name + '  mspErrorNum: ' + error + '  mspError: ' +\n            //     error + '-' + errorDescription);\n        }\n\n        // console.log(\"error with image: \", mspImage);\n        this.errorDocument.emit(mspImage);\n    }\n\n    /**\n     * Reset input fields so that user can delete a file and\n     * immediately upload that file again.\n     */\n    resetInputFields() {\n        // let brosweFileInputElement = this.browseFileRef.nativeElement;\n        // let captureFileInputElement = this.captureFileRef.nativeElement;\n        this.browseFileRef.nativeElement.value = '';\n        // this.captureFileRef.nativeElement.value = '';\n    }\n\n    deleteImage(mspImage: CommonImage) {\n        this.resetInputFields();\n        this.images = this.images.filter(x => x.uuid !== mspImage.uuid);\n        this.imagesChange.emit(this.images);\n\n        // If there are no images yet, we have to reset the input so it triggers 'required'.\n        if ( this.required && this.images.length  {\n        //         // console.log('log rest service response: ');\n        //         // console.log(response);\n        //     },\n        //     (error) => {\n        //         console.log('HTTP error response from logging service: ');\n        //         console.log(error);\n        //     },\n        //     () => {\n        //         // console.log('log rest service completed!');\n        //     }\n        // );\n    }\n\n\n\n    /**\n     * Return true if the image size is within range\n     * @param file\n     */\n    checkImageDimensions(file: CommonImage): boolean {\n        if (file.naturalHeight  0;\n        }\n        return true;\n    }\n\n}\n\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/FormActionBarComponent.html":{"url":"components/FormActionBarComponent.html","title":"component - FormActionBarComponent","body":"\n                   \n\n\n\n\n\n  Components\n  FormActionBarComponent\n\n\n\n        \n            Info\n        \n        \n            Design Guidelines\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    projects/common/lib/components/form-action-bar/form-action-bar.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                common-form-action-bar\n            \n\n            \n                styleUrls\n                ./form-action-bar.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./form-action-bar.component.html\n            \n\n            \n                viewProviders\n                \n                    \n                                { provide: ControlContainer, useExisting: forwardRef(() => NgForm) }\n                    \n                \n            \n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                            \n                                onClick\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                canContinue\n                            \n                            \n                                defaultColor\n                            \n                            \n                                isLoading\n                            \n                            \n                                scrollToErrorsOnSubmit\n                            \n                            \n                                submitLabel\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                btnClick\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in projects/common/lib/components/form-action-bar/form-action-bar.component.ts:19\n                            \n                        \n\n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        canContinue\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : true\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/form-action-bar/form-action-bar.component.ts:14\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        defaultColor\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : true\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/form-action-bar/form-action-bar.component.ts:16\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        isLoading\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/form-action-bar/form-action-bar.component.ts:15\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        scrollToErrorsOnSubmit\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : true\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/form-action-bar/form-action-bar.component.ts:19\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        submitLabel\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'Continue'\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/form-action-bar/form-action-bar.component.ts:13\n                            \n                        \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        btnClick\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/form-action-bar/form-action-bar.component.ts:17\n                            \n                        \n            \n        \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/components/form-action-bar/form-action-bar.component.ts:23\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            onClick\n                        \n                        \n                    \n                \n            \n            \n                \nonClick($event)\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/components/form-action-bar/form-action-bar.component.ts:26\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    $event\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n    \n        Design Guidelines\nLorem ipsum dolor sit amet consectetur adipisicing elit. Sapiente, magnam ipsam. Sit quasi natus architecto rerum unde non provident! Quia nisi facere amet iste mollitia voluptatem non molestias esse optio?\nAperiam fugiat consectetur temporibus, iste repellat, quisquam sapiente nisi distinctio optio, autem nemo tenetur error eum voluptatibus ab accusamus quis voluptatum blanditiis. Quam et ut reprehenderit vitae nobis, at ipsum!\nExercitationem pariatur animi repudiandae corporis obcaecati ratione ducimus beatae quam, nostrum magnam unde numquam quidem cupiditate odit id. Beatae alias molestiae, optio incidunt harum quia voluptates deserunt sequi. Nesciunt, optio.\n\n    \n\n    \n        import { Component, OnInit, Input, Output, EventEmitter, forwardRef } from '@angular/core';\nimport { ControlContainer, NgForm } from '@angular/forms';\nimport { scrollToError } from '../../../helpers/scroll-helpers';\n\n@Component({\n  selector: 'common-form-action-bar',\n  templateUrl: './form-action-bar.component.html',\n  styleUrls: ['./form-action-bar.component.scss'],\n  // TODO: Figure out why this is required.\n  viewProviders: [ { provide: ControlContainer, useExisting: forwardRef(() => NgForm ) } ]\n})\nexport class FormActionBarComponent implements OnInit {\n  @Input() submitLabel: string = 'Continue';\n  @Input() canContinue: boolean = true;\n  @Input() isLoading: boolean = false;\n  @Input() defaultColor: boolean = true;\n  @Output() btnClick: EventEmitter = new EventEmitter();\n\n  @Input() scrollToErrorsOnSubmit: boolean = true;\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n  onClick($event) {\n    if (!this.isLoading && this.canContinue) {\n      this.btnClick.emit($event);\n\n      if (this.scrollToErrorsOnSubmit) {\n        // Scroll to error after 50ms, give time for errors to display etc.\n        // This timeout is outside of Angular change detection.\n        setTimeout(scrollToError, 50);\n      }\n    }\n    $event.stopPropagation();\n    return false;\n  }\n}\n\n    \n\n    \n        \n    \n       {{submitLabel}} \n      \n    \n\n\n\n    \n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '           {{submitLabel}}               '\n    var COMPONENTS = [{'name': 'AccordionCommonComponent', 'selector': 'common-accordion'},{'name': 'AddressComponent', 'selector': 'common-address'},{'name': 'ButtonComponent', 'selector': 'common-button'},{'name': 'ButtonGroupComponent', 'selector': 'common-button-group'},{'name': 'CaptchaComponent', 'selector': 'common-captcha'},{'name': 'CheckboxComponent', 'selector': 'common-checkbox'},{'name': 'CityComponent', 'selector': 'common-city'},{'name': 'ConfirmTemplateComponent', 'selector': 'common-confirm-template'},{'name': 'ConsentModalComponent', 'selector': 'common-consent-modal'},{'name': 'CoreBreadcrumbComponent', 'selector': 'common-core-breadcrumb'},{'name': 'CountryComponent', 'selector': 'common-country'},{'name': 'DateComponent', 'selector': 'common-date'},{'name': 'DatepickerComponent', 'selector': 'common-datepicker'},{'name': 'DropdownComponent', 'selector': 'common-dropdown'},{'name': 'EmailComponent', 'selector': 'common-email'},{'name': 'ErrorContainerComponent', 'selector': 'common-error-container'},{'name': 'FileUploaderComponent', 'selector': 'common-file-uploader'},{'name': 'FormActionBarComponent', 'selector': 'common-form-action-bar'},{'name': 'FormSubmitBarComponent', 'selector': 'common-form-submit-bar'},{'name': 'FullNameComponent', 'selector': 'common-full-name'},{'name': 'GeocoderInputComponent', 'selector': 'common-geocoder-input'},{'name': 'HeaderComponent', 'selector': 'common-header'},{'name': 'NameComponent', 'selector': 'common-name'},{'name': 'PageFrameworkComponent', 'selector': 'common-page-framework'},{'name': 'PageSectionComponent', 'selector': 'common-page-section'},{'name': 'PasswordComponent', 'selector': 'common-password'},{'name': 'PhnComponent', 'selector': 'common-phn'},{'name': 'PhoneNumberComponent', 'selector': 'common-phone-number'},{'name': 'PostalCodeComponent', 'selector': 'common-postal-code'},{'name': 'ProvinceComponent', 'selector': 'common-province'},{'name': 'RadioComponent', 'selector': 'common-radio'},{'name': 'SampleModalComponent', 'selector': 'common-sample-modal'},{'name': 'SinComponent', 'selector': 'common-sin'},{'name': 'StreetComponent', 'selector': 'common-street'},{'name': 'ThumbnailComponent', 'selector': 'common-thumbnail'},{'name': 'ToggleComponent', 'selector': 'common-toggle'},{'name': 'WizardProgressBarComponent', 'selector': 'common-wizard-progress-bar'},{'name': 'XiconButtonComponent', 'selector': 'common-xicon-button'}];\n    var DIRECTIVES = [{'name': 'DateFieldFormatDirective', 'selector': '[commonDateFieldFormat]'},{'name': 'DuplicateCheckDirective', 'selector': '[commonDuplicateCheck]'},{'name': 'ValidateBcPostalDirective', 'selector': '[commonValidateBcPostal]'},{'name': 'ValidateCityDirective', 'selector': '[commonValidateCity]'},{'name': 'ValidateNameDirective', 'selector': '[commonValidateName]'},{'name': 'ValidatePostalcodeDirective', 'selector': '[commonValidatePostalcode]'},{'name': 'ValidateRegionDirective', 'selector': '[commonValidateRegion]'},{'name': 'ValidateStreetDirective', 'selector': '[commonValidateStreet]'}];\n    var ACTUAL_COMPONENT = {'name': 'FormActionBarComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/FormSubmitBarComponent.html":{"url":"components/FormSubmitBarComponent.html","title":"component - FormSubmitBarComponent","body":"\n                   \n\n\n\n\n\n  Components\n  FormSubmitBarComponent\n\n\n\n        \n            Info\n        \n        \n            Design Guidelines\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    projects/common/lib/components/form-submit-bar/form-submit-bar.component.ts\n\n\n    \n        Description\n    \n    \n        FormSubmitBar is similar to FormActionBar, but it is meant to be used with\n(ngSubmit) on the form. Make sure to enclose FormSubmitBar inside of the form\nin question.\n\n    \n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                common-form-submit-bar\n            \n\n            \n                styleUrls\n                ./form-submit-bar.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./form-submit-bar.component.html\n            \n\n            \n                viewProviders\n                \n                    \n                                { provide: ControlContainer, useExisting: forwardRef(() => NgForm) }\n                    \n                \n            \n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                canContinue\n                            \n                            \n                                defaultColor\n                            \n                            \n                                increaseWidth\n                            \n                            \n                                isLoading\n                            \n                            \n                                submitLabel\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                btnClick\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in projects/common/lib/components/form-submit-bar/form-submit-bar.component.ts:31\n                            \n                        \n\n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        canContinue\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : true\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/form-submit-bar/form-submit-bar.component.ts:18\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        defaultColor\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : true\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/form-submit-bar/form-submit-bar.component.ts:20\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        increaseWidth\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/form-submit-bar/form-submit-bar.component.ts:31\n                            \n                        \n                \n                    \n                        Is the component nested inside a form, and not properly full-width in a\npage layout? We add negative margins to space out.\nCurrently tihs only works for the 'blank' layout type for the page\nframework, but would be easy to extend by adding more negative classes as\nneed be.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        isLoading\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/form-submit-bar/form-submit-bar.component.ts:19\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        submitLabel\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'Continue'\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/form-submit-bar/form-submit-bar.component.ts:17\n                            \n                        \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        btnClick\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/form-submit-bar/form-submit-bar.component.ts:21\n                            \n                        \n            \n        \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/components/form-submit-bar/form-submit-bar.component.ts:35\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n\n\n    \n        Design Guidelines\nLorem ipsum dolor sit amet consectetur adipisicing elit. Sapiente, magnam ipsam. Sit quasi natus architecto rerum unde non provident! Quia nisi facere amet iste mollitia voluptatem non molestias esse optio?\nAperiam fugiat consectetur temporibus, iste repellat, quisquam sapiente nisi distinctio optio, autem nemo tenetur error eum voluptatibus ab accusamus quis voluptatum blanditiis. Quam et ut reprehenderit vitae nobis, at ipsum!\nExercitationem pariatur animi repudiandae corporis obcaecati ratione ducimus beatae quam, nostrum magnam unde numquam quidem cupiditate odit id. Beatae alias molestiae, optio incidunt harum quia voluptates deserunt sequi. Nesciunt, optio.\n\n    \n\n    \n        import { Component, OnInit, Input, Output, EventEmitter, forwardRef } from '@angular/core';\nimport { ControlContainer, NgForm } from '@angular/forms';\n\n\n/**\n * FormSubmitBar is similar to FormActionBar, but it is meant to be used with\n * (ngSubmit) on the form. Make sure to enclose FormSubmitBar inside of the form\n * in question.\n */\n@Component({\n  selector: 'common-form-submit-bar',\n  templateUrl: './form-submit-bar.component.html',\n  styleUrls: ['./form-submit-bar.component.scss'],\n  viewProviders: [ { provide: ControlContainer, useExisting: forwardRef(() => NgForm ) } ]\n})\nexport class FormSubmitBarComponent implements OnInit {\n  @Input() submitLabel: string = 'Continue';\n  @Input() canContinue: boolean = true;\n  @Input() isLoading: boolean = false;\n  @Input() defaultColor: boolean = true;\n  @Output() btnClick: EventEmitter = new EventEmitter();\n\n  /**\n   * Is the component nested inside a form, and not properly full-width in a\n   * page layout? We add negative margins to space out.\n   *\n   * Currently tihs only works for the 'blank' layout type for the page\n   * framework, but would be easy to extend by adding more negative classes as\n   * need be.\n   */\n  @Input() increaseWidth: boolean = false;\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n}\n\n    \n\n    \n        \n        \n           {{submitLabel}} \n          \n        \n    \n    \n    \n        \n    \n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                   {{submitLabel}}                                           '\n    var COMPONENTS = [{'name': 'AccordionCommonComponent', 'selector': 'common-accordion'},{'name': 'AddressComponent', 'selector': 'common-address'},{'name': 'ButtonComponent', 'selector': 'common-button'},{'name': 'ButtonGroupComponent', 'selector': 'common-button-group'},{'name': 'CaptchaComponent', 'selector': 'common-captcha'},{'name': 'CheckboxComponent', 'selector': 'common-checkbox'},{'name': 'CityComponent', 'selector': 'common-city'},{'name': 'ConfirmTemplateComponent', 'selector': 'common-confirm-template'},{'name': 'ConsentModalComponent', 'selector': 'common-consent-modal'},{'name': 'CoreBreadcrumbComponent', 'selector': 'common-core-breadcrumb'},{'name': 'CountryComponent', 'selector': 'common-country'},{'name': 'DateComponent', 'selector': 'common-date'},{'name': 'DatepickerComponent', 'selector': 'common-datepicker'},{'name': 'DropdownComponent', 'selector': 'common-dropdown'},{'name': 'EmailComponent', 'selector': 'common-email'},{'name': 'ErrorContainerComponent', 'selector': 'common-error-container'},{'name': 'FileUploaderComponent', 'selector': 'common-file-uploader'},{'name': 'FormActionBarComponent', 'selector': 'common-form-action-bar'},{'name': 'FormSubmitBarComponent', 'selector': 'common-form-submit-bar'},{'name': 'FullNameComponent', 'selector': 'common-full-name'},{'name': 'GeocoderInputComponent', 'selector': 'common-geocoder-input'},{'name': 'HeaderComponent', 'selector': 'common-header'},{'name': 'NameComponent', 'selector': 'common-name'},{'name': 'PageFrameworkComponent', 'selector': 'common-page-framework'},{'name': 'PageSectionComponent', 'selector': 'common-page-section'},{'name': 'PasswordComponent', 'selector': 'common-password'},{'name': 'PhnComponent', 'selector': 'common-phn'},{'name': 'PhoneNumberComponent', 'selector': 'common-phone-number'},{'name': 'PostalCodeComponent', 'selector': 'common-postal-code'},{'name': 'ProvinceComponent', 'selector': 'common-province'},{'name': 'RadioComponent', 'selector': 'common-radio'},{'name': 'SampleModalComponent', 'selector': 'common-sample-modal'},{'name': 'SinComponent', 'selector': 'common-sin'},{'name': 'StreetComponent', 'selector': 'common-street'},{'name': 'ThumbnailComponent', 'selector': 'common-thumbnail'},{'name': 'ToggleComponent', 'selector': 'common-toggle'},{'name': 'WizardProgressBarComponent', 'selector': 'common-wizard-progress-bar'},{'name': 'XiconButtonComponent', 'selector': 'common-xicon-button'}];\n    var DIRECTIVES = [{'name': 'DateFieldFormatDirective', 'selector': '[commonDateFieldFormat]'},{'name': 'DuplicateCheckDirective', 'selector': '[commonDuplicateCheck]'},{'name': 'ValidateBcPostalDirective', 'selector': '[commonValidateBcPostal]'},{'name': 'ValidateCityDirective', 'selector': '[commonValidateCity]'},{'name': 'ValidateNameDirective', 'selector': '[commonValidateName]'},{'name': 'ValidatePostalcodeDirective', 'selector': '[commonValidatePostalcode]'},{'name': 'ValidateRegionDirective', 'selector': '[commonValidateRegion]'},{'name': 'ValidateStreetDirective', 'selector': '[commonValidateStreet]'}];\n    var ACTUAL_COMPONENT = {'name': 'FormSubmitBarComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/FullNameComponent.html":{"url":"components/FullNameComponent.html","title":"component - FullNameComponent","body":"\n                   \n\n\n\n\n\n  Components\n  FullNameComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    projects/common/lib/components/full-name/full-name.component.ts\n\n\n    \n        Description\n    \n    \n        FullNameComponent includes a first, middle, and last name field.  If you only\nneed an individual field, @see NameComponent.\nNote This component is in dev, there are issues around \"required\"\nTODO - Properly handle \"required\"\n\n    \n\n    \n        Extends\n    \n    \n                Base\n    \n\n    \n        Implements\n    \n    \n                    ControlValueAccessor\n                    OnInit\n    \n\n    \n        Example\n    \n    \n                \n                    \n                \n    \n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n            \n                providers\n                \n                            { provide: NG_VALUE_ACCESSOR, multi: true, useExisting: forwardRef(() => FullNameComponent) }\n                \n            \n\n\n            \n                selector\n                common-full-name\n            \n\n            \n                styleUrls\n                ./full-name.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./full-name.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                _onChange\n                            \n                            \n                                    Public\n                                _onTouched\n                            \n                            \n                                    Public\n                                errMsg\n                            \n                            \n                                firstName\n                            \n                            \n                                lastName\n                            \n                            \n                                middleName\n                            \n                            \n                                    Public\n                                NameRegEx\n                            \n                            \n                                    Private\n                                pattern\n                            \n                            \n                                    Private\n                                requiredMsgSeg\n                            \n                            \n                                    Public\n                                objectId\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                            \n                                registerOnChange\n                            \n                            \n                                registerOnTouched\n                            \n                            \n                                writeValue\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                disabled\n                            \n                            \n                                firstNamelabel\n                            \n                            \n                                lastNamelabel\n                            \n                            \n                                middleNamelabel\n                            \n                            \n                                person\n                            \n                            \n                                showError\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                personChange\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in projects/common/lib/components/full-name/full-name.component.ts:57\n                            \n                        \n\n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        disabled\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/full-name/full-name.component.ts:42\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        firstNamelabel\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'First Name'\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/full-name/full-name.component.ts:39\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        lastNamelabel\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'Last Name'\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/full-name/full-name.component.ts:41\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        middleNamelabel\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'Middle Name'\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/full-name/full-name.component.ts:40\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        person\n                    \n                \n                \n                    \n                        Type :         Person\n\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/full-name/full-name.component.ts:36\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        showError\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/full-name/full-name.component.ts:38\n                            \n                        \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        personChange\n                    \n                \n                \n                    \n                        Type :         EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/full-name/full-name.component.ts:37\n                            \n                        \n            \n        \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/components/full-name/full-name.component.ts:63\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            registerOnChange\n                        \n                        \n                    \n                \n            \n            \n                \nregisterOnChange(fn: any)\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/components/full-name/full-name.component.ts:113\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    fn\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            registerOnTouched\n                        \n                        \n                    \n                \n            \n            \n                \nregisterOnTouched(fn: any)\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/components/full-name/full-name.component.ts:117\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    fn\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            writeValue\n                        \n                        \n                    \n                \n            \n            \n                \nwriteValue(value: any)\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/components/full-name/full-name.component.ts:121\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            _onChange\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : () => {...}\n                        \n                    \n                        \n                            \n                                    Defined in projects/common/lib/components/full-name/full-name.component.ts:56\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            _onTouched\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : () => {...}\n                        \n                    \n                        \n                            \n                                    Defined in projects/common/lib/components/full-name/full-name.component.ts:57\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            errMsg\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         FullNameErrorMsg\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/common/lib/components/full-name/full-name.component.ts:51\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            firstName\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/common/lib/components/full-name/full-name.component.ts:45\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            lastName\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/common/lib/components/full-name/full-name.component.ts:47\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            middleName\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/common/lib/components/full-name/full-name.component.ts:46\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            NameRegEx\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : '^[a-zA-Z][a-zA-Z\\\\-.\\' ]*$'\n                        \n                    \n                        \n                            \n                                    Defined in projects/common/lib/components/full-name/full-name.component.ts:49\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            pattern\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'Must begin with a letter followed by a letters, hyphen, period, apostrophe, or blank character'\n                        \n                    \n                        \n                            \n                                    Defined in projects/common/lib/components/full-name/full-name.component.ts:54\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            requiredMsgSeg\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'is required'\n                        \n                    \n                        \n                            \n                                    Defined in projects/common/lib/components/full-name/full-name.component.ts:53\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            objectId\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : UUID.UUID()\n                        \n                    \n                            \n                                \n                                    Inherited from         Base\n\n                                \n                            \n                        \n                            \n                                    Defined in         Base:11\n\n                            \n                        \n\n                \n                    \n                        An identifier for parents to keep track of components \n\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import {forwardRef, Component, Input, Output, EventEmitter, ViewChild, ChangeDetectorRef, OnInit} from '@angular/core';\nimport {Person} from '../../models/person.model';\nimport {Base} from '../../models/base';\nimport {debounceTime} from 'rxjs/operators';\nimport { ControlContainer, ControlValueAccessor, NgForm, NG_VALUE_ACCESSOR } from '@angular/forms';\n\n\nexport interface FullNameErrorMsg {\n  required?: string;\n  pattern?: string;\n}\n\n/**\n * FullNameComponent includes a first, middle, and last name field.  If you only\n * need an individual field, @see NameComponent.\n *\n * **Note** This component is in dev, there are issues around \"required\"\n * TODO - Properly handle \"required\"\n *\n * @example\n *          \n *\n * @export\n */\n@Component({\n  selector: 'common-full-name',\n  templateUrl: './full-name.component.html',\n  styleUrls: ['./full-name.component.scss'],\n  providers: [\n    { provide: NG_VALUE_ACCESSOR, multi: true, useExisting: forwardRef(() => FullNameComponent )}\n  ]\n})\n\nexport class FullNameComponent extends Base implements ControlValueAccessor, OnInit {\n\n  @Input() person: Person;\n  @Output() personChange = new EventEmitter();\n  @Input() showError: boolean;\n  @Input() firstNamelabel: string = 'First Name';\n  @Input() middleNamelabel: string = 'Middle Name';\n  @Input() lastNamelabel: string = 'Last Name';\n  @Input() disabled: boolean = false;\n\n\n  firstName: string ;\n  middleName: string;\n  lastName: string ;\n\n  public NameRegEx: string = '^[a-zA-Z][a-zA-Z\\\\-.\\' ]*$';\n\n  public errMsg: FullNameErrorMsg ;\n  // default messages\n  private requiredMsgSeg: string = 'is required';\n  private pattern: string = 'Must begin with a letter followed by a letters, hyphen, period, apostrophe, or blank character';\n\n  public _onChange = (_: any) => {};\n  public _onTouched = () => {};\n\n  constructor() {\n    super();\n  }\n\n  ngOnInit() {\n\n    if (this.person) {\n      this.firstName = this.person.firstName ? this.person.firstName : '';\n      this.lastName = this.person.lastName ? this.person.lastName : '';\n      this.middleName = this.person.middleName ? this.person.middleName : '';\n    }\n\n    this.errMsg =    {\n      required: this.requiredMsgSeg,\n      pattern: this.pattern\n    };\n  }\n\n  /*ngAfterViewInit(): void {\n      // https://github.com/angular/angular/issues/24818\n      this.form.valueChanges.pipe(debounceTime(0)).subscribe((values) => {\n        this.onChange.emit(values);\n        this._onChange(values);\n        this._onTouched();\n      }\n    );\n\n  }*/\n\n  // setFirstName(value: any) {\n  //   this.person.firstName = value;\n  //   this.onChange.emit(this.person);\n  //   this._onChange(this.person);\n  //   this._onTouched();\n  // }\n\n  // setMiddleName(value: any) {\n\n  //   this.person.middleName = value;\n  //   this.onChange.emit(this.person);\n  //   this._onChange(this.person);\n  //   this._onTouched();\n\n  // }\n\n  // setLastName(value: any) {\n\n  //   this.person.lastName = value;\n  //   this.onChange.emit(this.person);\n  //   this._onChange(this.person);\n  //   this._onTouched();\n\n  // }\n\n  registerOnChange(fn: any): void {\n    this._onChange = fn;\n  }\n\n  registerOnTouched(fn: any): void {\n    this._onTouched = fn;\n  }\n\n  writeValue(value: any): void {\n    this.person = value;\n  }\n\n\n}\n\n    \n\n    \n        \n    \n                 \n\n\n\n    \n\n\n\n    \n\n\n\n\n    \n        \n            {{firstNamelabel}}\n            \n            \n                {{firstNamelabel}} {{errMsg.required}}\n                {{errMsg.pattern}}\n            \n        \n    \n    \n        \n            {{middleNamelabel}}\n            \n            \n                {{middleNamelabel}} {{errMsg.required}}\n                {{errMsg.pattern}}\n            \n        \n    \n    \n        \n            {{lastNamelabel}}\n            \n            \n                {{lastNamelabel}} {{errMsg.required}}\n                {{errMsg.pattern}}\n            \n\n        \n    \n -->\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                                     {{firstNamelabel}}                                        {{firstNamelabel}} {{errMsg.required}}                {{errMsg.pattern}}                                                {{middleNamelabel}}                                        {{middleNamelabel}} {{errMsg.required}}                {{errMsg.pattern}}                                                {{lastNamelabel}}                                        {{lastNamelabel}} {{errMsg.required}}                {{errMsg.pattern}}                         -->'\n    var COMPONENTS = [{'name': 'AccordionCommonComponent', 'selector': 'common-accordion'},{'name': 'AddressComponent', 'selector': 'common-address'},{'name': 'ButtonComponent', 'selector': 'common-button'},{'name': 'ButtonGroupComponent', 'selector': 'common-button-group'},{'name': 'CaptchaComponent', 'selector': 'common-captcha'},{'name': 'CheckboxComponent', 'selector': 'common-checkbox'},{'name': 'CityComponent', 'selector': 'common-city'},{'name': 'ConfirmTemplateComponent', 'selector': 'common-confirm-template'},{'name': 'ConsentModalComponent', 'selector': 'common-consent-modal'},{'name': 'CoreBreadcrumbComponent', 'selector': 'common-core-breadcrumb'},{'name': 'CountryComponent', 'selector': 'common-country'},{'name': 'DateComponent', 'selector': 'common-date'},{'name': 'DatepickerComponent', 'selector': 'common-datepicker'},{'name': 'DropdownComponent', 'selector': 'common-dropdown'},{'name': 'EmailComponent', 'selector': 'common-email'},{'name': 'ErrorContainerComponent', 'selector': 'common-error-container'},{'name': 'FileUploaderComponent', 'selector': 'common-file-uploader'},{'name': 'FormActionBarComponent', 'selector': 'common-form-action-bar'},{'name': 'FormSubmitBarComponent', 'selector': 'common-form-submit-bar'},{'name': 'FullNameComponent', 'selector': 'common-full-name'},{'name': 'GeocoderInputComponent', 'selector': 'common-geocoder-input'},{'name': 'HeaderComponent', 'selector': 'common-header'},{'name': 'NameComponent', 'selector': 'common-name'},{'name': 'PageFrameworkComponent', 'selector': 'common-page-framework'},{'name': 'PageSectionComponent', 'selector': 'common-page-section'},{'name': 'PasswordComponent', 'selector': 'common-password'},{'name': 'PhnComponent', 'selector': 'common-phn'},{'name': 'PhoneNumberComponent', 'selector': 'common-phone-number'},{'name': 'PostalCodeComponent', 'selector': 'common-postal-code'},{'name': 'ProvinceComponent', 'selector': 'common-province'},{'name': 'RadioComponent', 'selector': 'common-radio'},{'name': 'SampleModalComponent', 'selector': 'common-sample-modal'},{'name': 'SinComponent', 'selector': 'common-sin'},{'name': 'StreetComponent', 'selector': 'common-street'},{'name': 'ThumbnailComponent', 'selector': 'common-thumbnail'},{'name': 'ToggleComponent', 'selector': 'common-toggle'},{'name': 'WizardProgressBarComponent', 'selector': 'common-wizard-progress-bar'},{'name': 'XiconButtonComponent', 'selector': 'common-xicon-button'}];\n    var DIRECTIVES = [{'name': 'DateFieldFormatDirective', 'selector': '[commonDateFieldFormat]'},{'name': 'DuplicateCheckDirective', 'selector': '[commonDuplicateCheck]'},{'name': 'ValidateBcPostalDirective', 'selector': '[commonValidateBcPostal]'},{'name': 'ValidateCityDirective', 'selector': '[commonValidateCity]'},{'name': 'ValidateNameDirective', 'selector': '[commonValidateName]'},{'name': 'ValidatePostalcodeDirective', 'selector': '[commonValidatePostalcode]'},{'name': 'ValidateRegionDirective', 'selector': '[commonValidateRegion]'},{'name': 'ValidateStreetDirective', 'selector': '[commonValidateStreet]'}];\n    var ACTUAL_COMPONENT = {'name': 'FullNameComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/FullNameErrorMsg.html":{"url":"interfaces/FullNameErrorMsg.html","title":"interface - FullNameErrorMsg","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  FullNameErrorMsg\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/common/lib/components/full-name/full-name.component.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        pattern\n                                \n                                \n                                            Optional\n                                        required\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        pattern\n                                    \n                                \n                                \n                                    \n                                        pattern:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        required\n                                    \n                                \n                                \n                                    \n                                        required:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import {forwardRef, Component, Input, Output, EventEmitter, ViewChild, ChangeDetectorRef, OnInit} from '@angular/core';\nimport {Person} from '../../models/person.model';\nimport {Base} from '../../models/base';\nimport {debounceTime} from 'rxjs/operators';\nimport { ControlContainer, ControlValueAccessor, NgForm, NG_VALUE_ACCESSOR } from '@angular/forms';\n\n\nexport interface FullNameErrorMsg {\n  required?: string;\n  pattern?: string;\n}\n\n/**\n * FullNameComponent includes a first, middle, and last name field.  If you only\n * need an individual field, @see NameComponent.\n *\n * **Note** This component is in dev, there are issues around \"required\"\n * TODO - Properly handle \"required\"\n *\n * @example\n *          \n *\n * @export\n */\n@Component({\n  selector: 'common-full-name',\n  templateUrl: './full-name.component.html',\n  styleUrls: ['./full-name.component.scss'],\n  providers: [\n    { provide: NG_VALUE_ACCESSOR, multi: true, useExisting: forwardRef(() => FullNameComponent )}\n  ]\n})\n\nexport class FullNameComponent extends Base implements ControlValueAccessor, OnInit {\n\n  @Input() person: Person;\n  @Output() personChange = new EventEmitter();\n  @Input() showError: boolean;\n  @Input() firstNamelabel: string = 'First Name';\n  @Input() middleNamelabel: string = 'Middle Name';\n  @Input() lastNamelabel: string = 'Last Name';\n  @Input() disabled: boolean = false;\n\n\n  firstName: string ;\n  middleName: string;\n  lastName: string ;\n\n  public NameRegEx: string = '^[a-zA-Z][a-zA-Z\\\\-.\\' ]*$';\n\n  public errMsg: FullNameErrorMsg ;\n  // default messages\n  private requiredMsgSeg: string = 'is required';\n  private pattern: string = 'Must begin with a letter followed by a letters, hyphen, period, apostrophe, or blank character';\n\n  public _onChange = (_: any) => {};\n  public _onTouched = () => {};\n\n  constructor() {\n    super();\n  }\n\n  ngOnInit() {\n\n    if (this.person) {\n      this.firstName = this.person.firstName ? this.person.firstName : '';\n      this.lastName = this.person.lastName ? this.person.lastName : '';\n      this.middleName = this.person.middleName ? this.person.middleName : '';\n    }\n\n    this.errMsg =    {\n      required: this.requiredMsgSeg,\n      pattern: this.pattern\n    };\n  }\n\n  /*ngAfterViewInit(): void {\n      // https://github.com/angular/angular/issues/24818\n      this.form.valueChanges.pipe(debounceTime(0)).subscribe((values) => {\n        this.onChange.emit(values);\n        this._onChange(values);\n        this._onTouched();\n      }\n    );\n\n  }*/\n\n  // setFirstName(value: any) {\n  //   this.person.firstName = value;\n  //   this.onChange.emit(this.person);\n  //   this._onChange(this.person);\n  //   this._onTouched();\n  // }\n\n  // setMiddleName(value: any) {\n\n  //   this.person.middleName = value;\n  //   this.onChange.emit(this.person);\n  //   this._onChange(this.person);\n  //   this._onTouched();\n\n  // }\n\n  // setLastName(value: any) {\n\n  //   this.person.lastName = value;\n  //   this.onChange.emit(this.person);\n  //   this._onChange(this.person);\n  //   this._onTouched();\n\n  // }\n\n  registerOnChange(fn: any): void {\n    this._onChange = fn;\n  }\n\n  registerOnTouched(fn: any): void {\n    this._onTouched = fn;\n  }\n\n  writeValue(value: any): void {\n    this.person = value;\n  }\n\n\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/GeoAddressResult.html":{"url":"interfaces/GeoAddressResult.html","title":"interface - GeoAddressResult","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  GeoAddressResult\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/common/lib/services/geocoder.service.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        city\n                                \n                                \n                                        country\n                                \n                                \n                                        fullAddress\n                                \n                                \n                                        province\n                                \n                                \n                                        street\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        city\n                                    \n                                \n                                \n                                    \n                                        city:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        country\n                                    \n                                \n                                \n                                    \n                                        country:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        fullAddress\n                                    \n                                \n                                \n                                    \n                                        fullAddress:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    String from the API that includes street, city, province, and country. \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        province\n                                    \n                                \n                                \n                                    \n                                        province:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        street\n                                    \n                                \n                                \n                                    \n                                        street:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { AbstractHttpService } from './abstract-api-service';\nimport { HttpClient, HttpHeaders, HttpErrorResponse, HttpParams } from '@angular/common/http';\nimport { map } from 'rxjs/operators';\nimport { Observable, throwError } from 'rxjs';\nimport { CANADA } from '../components/country/country.component';\n\nexport interface GeoAddressResult {\n    /** String from the API that includes street, city, province, and country. */\n    fullAddress: string;\n    city: string;\n    street: string;\n    // Set to defaults in response\n    country: string;\n    province: string;\n}\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class GeocoderService extends AbstractHttpService {\n\n    protected _headers: HttpHeaders = new HttpHeaders();\n    protected BASE_URL = 'https://geocoder.api.gov.bc.ca';\n    protected  ADDRESS_URL = `${this.BASE_URL}/addresses.json?`;\n\n    constructor(protected http: HttpClient) {\n        super(http);\n    }\n\n    // https://geocoder.api.gov.bc.ca/addresses.json?minScore=50&maxResults=5&echo=false&brief=true&autoComplete=true&addressString=784+Hock\n    lookup(address: string): Observable {\n        const params = new HttpParams()\n            .set('minScore', '50')\n            .set('maxResults', '10')\n            .set('echo', 'false')\n            .set('brief', 'false') // API splits address string up into sub-attributes, like city  / street name\n            .set('autoComplete', 'true')\n            .set('matchPrecisionNot', 'LOCALITY,STREET')\n            .set('addressString', address);\n\n        return this.get(this.ADDRESS_URL, params).pipe(map(this.processResponse));\n    }\n\n    /**\n     * Formats the response from ADDRESS_URL, trimming irrelevant fields.\n     *\n     * This works for other requests for the same API too, however it may error\n     * out on some items if matchPrecisionNot is not set.\n     *\n     * @param obj The response from ADDRESS_URL\n     */\n    protected processResponse(obj): GeoAddressResult[] {\n        return obj.features.map(feature => {\n            const props = feature.properties;\n            const city = props.localityName;\n            // We get street just by trimming everything before city, more\n            // stable than looking for commas, etc.\n            const cityIndex = props.fullAddress.indexOf(`, ${city}`);\n            const street = props.fullAddress.slice(0, cityIndex);\n            const province = props.provinceCode;\n            const country = CANADA; // ALWAYS return Canada\n\n            return {\n              fullAddress: props.fullAddress,\n              city,\n              street,\n              province,\n              country\n            };\n        });\n    }\n\n    protected handleError(error: HttpErrorResponse) {\n        console.error('GeoCoder network error', { error });\n        return throwError('Geocoder error');\n    }\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/GeocoderInputComponent.html":{"url":"components/GeocoderInputComponent.html","title":"component - GeocoderInputComponent","body":"\n                   \n\n\n\n\n\n  Components\n  GeocoderInputComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    projects/common/lib/components/geocoder-input/geocoder-input.component.ts\n\n\n    \n        Description\n    \n    \n        For TemplateForms, pass in an Address and recieve an Address\n\n    \n\n    \n        Extends\n    \n    \n                Base\n    \n\n    \n        Implements\n    \n    \n                    OnInit\n                    OnChanges\n                    ControlValueAccessor\n    \n\n    \n        Example\n    \n    \n                \n                    \n\n                \n                \n                    \n\n                \n    \n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                common-geocoder-input\n            \n\n            \n                styleUrls\n                ./geocoder-input.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./geocoder-input.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                _onChange\n                            \n                            \n                                _onTouched\n                            \n                            \n                                    Public\n                                controlDir\n                            \n                            \n                                    Public\n                                hasError\n                            \n                            \n                                    Public\n                                hasNoResults\n                            \n                            \n                                    Public\n                                isTypeaheadLoading\n                            \n                            \n                                    Public\n                                search\n                            \n                            \n                                    Private\n                                searchText$\n                            \n                            \n                                    Public\n                                selectedAddress\n                            \n                            \n                                    Public\n                                typeaheadList$\n                            \n                            \n                                    Public\n                                objectId\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnChanges\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                onBlur\n                            \n                            \n                                onError\n                            \n                            \n                                onKeyUp\n                            \n                            \n                                onLoading\n                            \n                            \n                                onNoResults\n                            \n                            \n                                onSelect\n                            \n                            \n                                registerOnChange\n                            \n                            \n                                registerOnTouched\n                            \n                            \n                                    Private\n                                stripStringToMaxLength\n                            \n                            \n                                writeValue\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                address\n                            \n                            \n                                label\n                            \n                            \n                                maxlength\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                addressChange\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(controlDir: NgControl, geocoderService: GeocoderService, cd: ChangeDetectorRef)\n                    \n                \n                        \n                            \n                                Defined in projects/common/lib/components/geocoder-input/geocoder-input.component.ts:60\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        controlDir\n                                                  \n                                                        \n                                                                        NgControl\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        geocoderService\n                                                  \n                                                        \n                                                                        GeocoderService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        cd\n                                                  \n                                                        \n                                                                        ChangeDetectorRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        address\n                    \n                \n                \n                    \n                        Type :         Address\n\n                    \n                \n                \n                    \n                        Default value : new Address()\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/geocoder-input/geocoder-input.component.ts:40\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        label\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'Address Lookup'\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/geocoder-input/geocoder-input.component.ts:39\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        maxlength\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : '255'\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/geocoder-input/geocoder-input.component.ts:42\n                            \n                        \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        addressChange\n                    \n                \n                \n                    \n                        Type :         EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/geocoder-input/geocoder-input.component.ts:41\n                            \n                        \n            \n        \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnChanges\n                        \n                        \n                    \n                \n            \n            \n                \nngOnChanges(changes: SimpleChanges)\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/components/geocoder-input/geocoder-input.component.ts:80\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    changes\n                                    \n                                                SimpleChanges\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/components/geocoder-input/geocoder-input.component.ts:69\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            onBlur\n                        \n                        \n                    \n                \n            \n            \n                \nonBlur(event)\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/components/geocoder-input/geocoder-input.component.ts:153\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    event\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            onError\n                        \n                        \n                    \n                \n            \n            \n                \nonError(err)\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/components/geocoder-input/geocoder-input.component.ts:94\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    err\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            onKeyUp\n                        \n                        \n                    \n                \n            \n            \n                \nonKeyUp(event: KeyboardEvent)\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/components/geocoder-input/geocoder-input.component.ts:140\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    event\n                                    \n                                            KeyboardEvent\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            onLoading\n                        \n                        \n                    \n                \n            \n            \n                \nonLoading(val: boolean)\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/components/geocoder-input/geocoder-input.component.ts:100\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    val\n                                    \n                                                boolean\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            onNoResults\n                        \n                        \n                    \n                \n            \n            \n                \nonNoResults(val: boolean)\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/components/geocoder-input/geocoder-input.component.ts:105\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    val\n                                    \n                                                boolean\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            onSelect\n                        \n                        \n                    \n                \n            \n            \n                \nonSelect(event: TypeaheadMatch)\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/components/geocoder-input/geocoder-input.component.ts:122\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    event\n                                    \n                                            TypeaheadMatch\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            registerOnChange\n                        \n                        \n                    \n                \n            \n            \n                \nregisterOnChange(fn: any)\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/components/geocoder-input/geocoder-input.component.ts:166\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    fn\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            registerOnTouched\n                        \n                        \n                    \n                \n            \n            \n                \nregisterOnTouched(fn: any)\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/components/geocoder-input/geocoder-input.component.ts:171\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    fn\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            stripStringToMaxLength\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    stripStringToMaxLength(str: string)\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/components/geocoder-input/geocoder-input.component.ts:175\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    str\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            writeValue\n                        \n                        \n                    \n                \n            \n            \n                \nwriteValue(value: any)\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/components/geocoder-input/geocoder-input.component.ts:159\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            _onChange\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : () => {...}\n                        \n                    \n                        \n                            \n                                    Defined in projects/common/lib/components/geocoder-input/geocoder-input.component.ts:59\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            _onTouched\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : () => {...}\n                        \n                    \n                        \n                            \n                                    Defined in projects/common/lib/components/geocoder-input/geocoder-input.component.ts:60\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            controlDir\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         NgControl\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Optional()@Self()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in projects/common/lib/components/geocoder-input/geocoder-input.component.ts:62\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            hasError\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in projects/common/lib/components/geocoder-input/geocoder-input.component.ts:50\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            hasNoResults\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in projects/common/lib/components/geocoder-input/geocoder-input.component.ts:49\n                            \n                        \n\n                \n                    \n                        Geocoder API has returned and has no results, an empty array. \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            isTypeaheadLoading\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in projects/common/lib/components/geocoder-input/geocoder-input.component.ts:47\n                            \n                        \n\n                \n                    \n                        Is the Geocoder API request still in progress? \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            search\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/common/lib/components/geocoder-input/geocoder-input.component.ts:45\n                            \n                        \n\n                \n                    \n                        The string in the box the user has typed \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            searchText$\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new Subject()\n                        \n                    \n                        \n                            \n                                    Defined in projects/common/lib/components/geocoder-input/geocoder-input.component.ts:57\n                            \n                        \n\n                \n                    \n                        The subject that triggers on user text input and gets typeaheadList$ to update.  \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            selectedAddress\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Address\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/common/lib/components/geocoder-input/geocoder-input.component.ts:53\n                            \n                        \n\n                \n                    \n                        Similar to this.address, but we can null it when user is searching for new addresses \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            typeaheadList$\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Observable\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/common/lib/components/geocoder-input/geocoder-input.component.ts:55\n                            \n                        \n\n                \n                    \n                        The list of results, from API, that is passed to the typeahead list \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            objectId\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : UUID.UUID()\n                        \n                    \n                            \n                                \n                                    Inherited from         Base\n\n                                \n                            \n                        \n                            \n                                    Defined in         Base:11\n\n                            \n                        \n\n                \n                    \n                        An identifier for parents to keep track of components \n\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit, Input, ChangeDetectorRef, Output, EventEmitter, SimpleChanges, OnChanges, Optional, Self } from '@angular/core';\nimport { Subject, Observable, of } from 'rxjs';\nimport { debounceTime, distinctUntilChanged, switchMap, tap, catchError } from 'rxjs/operators';\nimport { TypeaheadMatch } from 'ngx-bootstrap';\nimport { Base } from '../../models/base';\nimport { GeocoderService, GeoAddressResult } from '../../services/geocoder.service';\nimport { CANADA } from '../country/country.component';\nimport { BRITISH_COLUMBIA } from '../province/province.component';\nimport { Address } from '../../models/address.model';\nimport { NgControl, ControlValueAccessor } from '@angular/forms';\n\n\n/**\n * For TemplateForms, pass in an Address and recieve an Address\n * @example\n *           \n *           \n *\n * @note\n * For ReactiveForms, pass in a string and recieve a string.  If you need the\n * Address object you can use (addressChange) in addition.\n *\n * @example\n *           \n *          \n */\n@Component({\n  selector: 'common-geocoder-input',\n  templateUrl: './geocoder-input.component.html',\n  styleUrls: ['./geocoder-input.component.scss']\n})\nexport class GeocoderInputComponent extends Base implements OnInit, OnChanges, ControlValueAccessor {\n\n  @Input() label: string = 'Address Lookup';\n  @Input() address: Address = new Address();\n  @Output() addressChange = new EventEmitter();\n  @Input() maxlength: string = '255';\n\n  /** The string in the box the user has typed */\n  public search: string;\n  /** Is the Geocoder API request still in progress? */\n  public isTypeaheadLoading: boolean = false;\n  /** Geocoder API has returned and has no results, an empty array. */\n  public hasNoResults: boolean = false;\n  public hasError: boolean = false;\n\n  /** Similar to this.address, but we can null it when user is searching for new addresses */\n  public selectedAddress: Address;\n  /** The list of results, from API, that is passed to the typeahead list */\n  public typeaheadList$: Observable; // Result from GeoCoderService address lookup\n  /** The subject that triggers on user text input and gets typeaheadList$ to update.  */\n  private searchText$ = new Subject();\n\n  _onChange = (_: any) => {};\n  _onTouched = (_?: any) => {};\n\n  constructor(@Optional() @Self() public controlDir: NgControl, private geocoderService: GeocoderService, private cd: ChangeDetectorRef) {\n    super();\n    if ( controlDir ) {\n      controlDir.valueAccessor = this;\n    }\n  }\n\n  ngOnInit() {\n    this.typeaheadList$ = this.searchText$.pipe(\n      debounceTime(500),\n      distinctUntilChanged(),\n      // Trigger the network request, get results\n      switchMap(searchPhrase => this.geocoderService.lookup(searchPhrase)),\n      catchError(err => this.onError(err))\n    );\n\n  }\n\n  ngOnChanges(changes: SimpleChanges) {\n    if (changes &&\n      changes.address &&\n      changes.address.currentValue._geocoderFullAddress) {\n        const stripped = this.stripStringToMaxLength(changes.address.currentValue._geocoderFullAddress);\n\n        this.search = stripped;\n        this.isTypeaheadLoading = false;\n        this.hasNoResults = false;\n        this.selectedAddress = changes.address.currentValue;\n      }\n\n  }\n\n  onError(err): Observable {\n    this.hasError = true;\n    // Empty array simulates no result response, nothing for typeahead to iterate over\n    return of([]);\n  }\n\n  onLoading(val: boolean): void {\n    this.isTypeaheadLoading = val;\n  }\n\n  // Note - this will fire after an onError as well\n  onNoResults(val: boolean): void {\n    this._onChange(null);\n    \n    // If we have results, the error has resolved (e.g. network has re-connected)\n    if (val === false) {\n      this.hasError = false;\n    }\n\n    // If we have no search text, hide the no results errors\n    if (this.search.length === 0) {\n      this.hasNoResults = false;\n      return;\n    }\n\n    this.hasNoResults = val;\n  }\n\n  onSelect(event: TypeaheadMatch): void {\n    const data: GeoAddressResult = event.item;\n\n    const addr = new Address();\n    addr.city = data.city;\n    // GeoCoder is only for BC, Canada, values can be set.\n    addr.country = CANADA; // Default country is Canda\n    addr.province = BRITISH_COLUMBIA;  // Default province is BC\n    addr.street = data.street;\n    // Save and emit Address for (addressChange)\n    this.selectedAddress = addr;\n    this.addressChange.emit(this.selectedAddress);\n\n    // Output string to FormControl.\n    const stripped = this.stripStringToMaxLength(data.fullAddress);\n    this._onChange(stripped);\n  }\n\n  onKeyUp(event: KeyboardEvent): void {\n    // Filter out 'enter' and other similar keyboard events that can trigger\n    // when user is selecting a typeahead option instead of entering new text.\n    // Without this filter, we do another HTTP request + force disiplay the UI\n    // for now reason\n    if (event.keyCode === 13 || event.keyCode === 9) {  // enter & tab\n      return;\n    }\n    // Clear out selection\n    this.selectedAddress = null;\n    this.searchText$.next(this.search);\n  }\n\n  onBlur(event): void {\n    this._onTouched();\n    this._onChange(this.search);\n  }\n\n\n  writeValue( value: any ): void {\n    if ( value ) {\n      this.search = value;\n    }\n  }\n\n  // Register change function\n  registerOnChange( fn: any ): void {\n    this._onChange = fn;\n  }\n\n  // Register touched function\n  registerOnTouched( fn: any ): void {\n    this._onTouched = fn;\n  }\n\n  private stripStringToMaxLength(str: string){\n    const maxlength = parseInt(this.maxlength, 10);\n    return str.slice(0, maxlength);\n  }\n\n}\n\n    \n\n    \n        \n{{label}}\n  \n     &mdash; Loading\n      \n    \n  \n\n  \n    \n  \n\n\n        \n\n\n\n     &mdash; Selected\n        \n    \n\n\n\n     &mdash; No Results\n        \n    \n\n\n\n\n     &mdash; Error\n        \n    \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '{{label}}       — Loading                                 — Selected                 — No Results                 — Error            '\n    var COMPONENTS = [{'name': 'AccordionCommonComponent', 'selector': 'common-accordion'},{'name': 'AddressComponent', 'selector': 'common-address'},{'name': 'ButtonComponent', 'selector': 'common-button'},{'name': 'ButtonGroupComponent', 'selector': 'common-button-group'},{'name': 'CaptchaComponent', 'selector': 'common-captcha'},{'name': 'CheckboxComponent', 'selector': 'common-checkbox'},{'name': 'CityComponent', 'selector': 'common-city'},{'name': 'ConfirmTemplateComponent', 'selector': 'common-confirm-template'},{'name': 'ConsentModalComponent', 'selector': 'common-consent-modal'},{'name': 'CoreBreadcrumbComponent', 'selector': 'common-core-breadcrumb'},{'name': 'CountryComponent', 'selector': 'common-country'},{'name': 'DateComponent', 'selector': 'common-date'},{'name': 'DatepickerComponent', 'selector': 'common-datepicker'},{'name': 'DropdownComponent', 'selector': 'common-dropdown'},{'name': 'EmailComponent', 'selector': 'common-email'},{'name': 'ErrorContainerComponent', 'selector': 'common-error-container'},{'name': 'FileUploaderComponent', 'selector': 'common-file-uploader'},{'name': 'FormActionBarComponent', 'selector': 'common-form-action-bar'},{'name': 'FormSubmitBarComponent', 'selector': 'common-form-submit-bar'},{'name': 'FullNameComponent', 'selector': 'common-full-name'},{'name': 'GeocoderInputComponent', 'selector': 'common-geocoder-input'},{'name': 'HeaderComponent', 'selector': 'common-header'},{'name': 'NameComponent', 'selector': 'common-name'},{'name': 'PageFrameworkComponent', 'selector': 'common-page-framework'},{'name': 'PageSectionComponent', 'selector': 'common-page-section'},{'name': 'PasswordComponent', 'selector': 'common-password'},{'name': 'PhnComponent', 'selector': 'common-phn'},{'name': 'PhoneNumberComponent', 'selector': 'common-phone-number'},{'name': 'PostalCodeComponent', 'selector': 'common-postal-code'},{'name': 'ProvinceComponent', 'selector': 'common-province'},{'name': 'RadioComponent', 'selector': 'common-radio'},{'name': 'SampleModalComponent', 'selector': 'common-sample-modal'},{'name': 'SinComponent', 'selector': 'common-sin'},{'name': 'StreetComponent', 'selector': 'common-street'},{'name': 'ThumbnailComponent', 'selector': 'common-thumbnail'},{'name': 'ToggleComponent', 'selector': 'common-toggle'},{'name': 'WizardProgressBarComponent', 'selector': 'common-wizard-progress-bar'},{'name': 'XiconButtonComponent', 'selector': 'common-xicon-button'}];\n    var DIRECTIVES = [{'name': 'DateFieldFormatDirective', 'selector': '[commonDateFieldFormat]'},{'name': 'DuplicateCheckDirective', 'selector': '[commonDuplicateCheck]'},{'name': 'ValidateBcPostalDirective', 'selector': '[commonValidateBcPostal]'},{'name': 'ValidateCityDirective', 'selector': '[commonValidateCity]'},{'name': 'ValidateNameDirective', 'selector': '[commonValidateName]'},{'name': 'ValidatePostalcodeDirective', 'selector': '[commonValidatePostalcode]'},{'name': 'ValidateRegionDirective', 'selector': '[commonValidateRegion]'},{'name': 'ValidateStreetDirective', 'selector': '[commonValidateStreet]'}];\n    var ACTUAL_COMPONENT = {'name': 'GeocoderInputComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/GeocoderService.html":{"url":"injectables/GeocoderService.html","title":"injectable - GeocoderService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  GeocoderService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/common/lib/services/geocoder.service.ts\n        \n\n\n            \n                Extends\n            \n            \n                        AbstractHttpService\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                _headers\n                            \n                            \n                                    Protected\n                                ADDRESS_URL\n                            \n                            \n                                    Protected\n                                BASE_URL\n                            \n                            \n                                    Protected\n                                    Abstract\n                                _headers\n                            \n                            \n                                    Protected\n                                logHTTPRequestsToConsole\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                handleError\n                            \n                            \n                                lookup\n                            \n                            \n                                    Protected\n                                processResponse\n                            \n                            \n                                    Protected\n                                generateUUID\n                            \n                            \n                                    Protected\n                                get\n                            \n                            \n                                    Protected\n                                    Abstract\n                                handleError\n                            \n                            \n                                    Protected\n                                post\n                            \n                            \n                                    Protected\n                                setupRequest\n                            \n                            \n                                    Protected\n                                uploadAttachment\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(http: HttpClient)\n                    \n                \n                        \n                            \n                                Defined in projects/common/lib/services/geocoder.service.ts:25\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                        HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            handleError\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    handleError(error: HttpErrorResponse)\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/services/geocoder.service.ts:74\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    error\n                                    \n                                                HttpErrorResponse\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            lookup\n                        \n                        \n                    \n                \n            \n            \n                \nlookup(address: string)\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/services/geocoder.service.ts:32\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    address\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            processResponse\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    processResponse(obj)\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/services/geocoder.service.ts:53\n                \n            \n\n\n            \n                \n                    Formats the response from ADDRESS_URL, trimming irrelevant fields.\nThis works for other requests for the same API too, however it may error\nout on some items if matchPrecisionNot is not set.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    obj\n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The response from ADDRESS_URL\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         GeoAddressResult[]\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            generateUUID\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    generateUUID()\n                \n            \n\n\n            \n                \n                    Inherited from         AbstractHttpService\n\n                \n            \n            \n                \n                        Defined in         AbstractHttpService:64\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            get\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    get(url, queryParams?: HttpParams)\n                \n            \n\n\n            \n                \n                    Inherited from         AbstractHttpService\n\n                \n            \n            \n                \n                        Defined in         AbstractHttpService:24\n\n                \n            \n\n            \n                \n                    Type parameters :\n                    \n                        T\n                    \n                \n            \n\n            \n                \n                    Makes a GET request to the specified URL, using headers and HTTP options specified in their respective methods.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    url\n                                    \n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Target URL to make the GET request\n\n                                    \n                                \n                                \n                                    queryParams\n                                    \n                                                HttpParams\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                    \n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            Abstract\n                            handleError\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    handleError(error: HttpErrorResponse)\n                \n            \n\n\n            \n                \n                    Inherited from         AbstractHttpService\n\n                \n            \n            \n                \n                        Defined in         AbstractHttpService:61\n\n                \n            \n\n\n            \n                \n                    Handles all failed requests that throw either a server error (400/500) or a client error (e.g. lost internet). \n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    error\n                                    \n                                                HttpErrorResponse\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            post\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    post(url, body)\n                \n            \n\n\n            \n                \n                    Inherited from         AbstractHttpService\n\n                \n            \n            \n                \n                        Defined in         AbstractHttpService:32\n\n                \n            \n\n            \n                \n                    Type parameters :\n                    \n                        T\n                    \n                \n            \n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    url\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    body\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            setupRequest\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    setupRequest(observable: Observable)\n                \n            \n\n\n            \n                \n                    Inherited from         AbstractHttpService\n\n                \n            \n            \n                \n                        Defined in         AbstractHttpService:40\n\n                \n            \n\n            \n                \n                    Type parameters :\n                    \n                        T\n                    \n                \n            \n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    observable\n                                    \n                                            Observable\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            uploadAttachment\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    uploadAttachment(relativeUrl: string, attachment: CommonImage)\n                \n            \n\n\n            \n                \n                    Inherited from         AbstractHttpService\n\n                \n            \n            \n                \n                        Defined in         AbstractHttpService:75\n\n                \n            \n\n\n            \n                \n                    Uploads an individual attachment.  All you need to do is set the url.\nNote: urls often include UUIDs, so this must be an application decision.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    relativeUrl\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        URL to hit, must include UUIDs of application and CommonImage\n\n                                    \n                                \n                                \n                                    attachment\n                                    \n                                                CommonImage\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        CommonImage to upload\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            _headers\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         HttpHeaders\n\n                        \n                    \n                    \n                        \n                            Default value : new HttpHeaders()\n                        \n                    \n                        \n                            \n                                    Defined in projects/common/lib/services/geocoder.service.ts:23\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            ADDRESS_URL\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : `${this.BASE_URL}/addresses.json?`\n                        \n                    \n                        \n                            \n                                    Defined in projects/common/lib/services/geocoder.service.ts:25\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            BASE_URL\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'https://geocoder.api.gov.bc.ca'\n                        \n                    \n                        \n                            \n                                    Defined in projects/common/lib/services/geocoder.service.ts:24\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                                Abstract\n                            _headers\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         HttpHeaders\n\n                        \n                    \n                            \n                                \n                                    Inherited from         AbstractHttpService\n\n                                \n                            \n                        \n                            \n                                    Defined in         AbstractHttpService:18\n\n                            \n                        \n\n                \n                    \n                        The headers to send along with every GET and POST. \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            logHTTPRequestsToConsole\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                    \n                        \n                            Default value : false\n                        \n                    \n                            \n                                \n                                    Inherited from         AbstractHttpService\n\n                                \n                            \n                        \n                            \n                                    Defined in         AbstractHttpService:13\n\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { AbstractHttpService } from './abstract-api-service';\nimport { HttpClient, HttpHeaders, HttpErrorResponse, HttpParams } from '@angular/common/http';\nimport { map } from 'rxjs/operators';\nimport { Observable, throwError } from 'rxjs';\nimport { CANADA } from '../components/country/country.component';\n\nexport interface GeoAddressResult {\n    /** String from the API that includes street, city, province, and country. */\n    fullAddress: string;\n    city: string;\n    street: string;\n    // Set to defaults in response\n    country: string;\n    province: string;\n}\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class GeocoderService extends AbstractHttpService {\n\n    protected _headers: HttpHeaders = new HttpHeaders();\n    protected BASE_URL = 'https://geocoder.api.gov.bc.ca';\n    protected  ADDRESS_URL = `${this.BASE_URL}/addresses.json?`;\n\n    constructor(protected http: HttpClient) {\n        super(http);\n    }\n\n    // https://geocoder.api.gov.bc.ca/addresses.json?minScore=50&maxResults=5&echo=false&brief=true&autoComplete=true&addressString=784+Hock\n    lookup(address: string): Observable {\n        const params = new HttpParams()\n            .set('minScore', '50')\n            .set('maxResults', '10')\n            .set('echo', 'false')\n            .set('brief', 'false') // API splits address string up into sub-attributes, like city  / street name\n            .set('autoComplete', 'true')\n            .set('matchPrecisionNot', 'LOCALITY,STREET')\n            .set('addressString', address);\n\n        return this.get(this.ADDRESS_URL, params).pipe(map(this.processResponse));\n    }\n\n    /**\n     * Formats the response from ADDRESS_URL, trimming irrelevant fields.\n     *\n     * This works for other requests for the same API too, however it may error\n     * out on some items if matchPrecisionNot is not set.\n     *\n     * @param obj The response from ADDRESS_URL\n     */\n    protected processResponse(obj): GeoAddressResult[] {\n        return obj.features.map(feature => {\n            const props = feature.properties;\n            const city = props.localityName;\n            // We get street just by trimming everything before city, more\n            // stable than looking for commas, etc.\n            const cityIndex = props.fullAddress.indexOf(`, ${city}`);\n            const street = props.fullAddress.slice(0, cityIndex);\n            const province = props.provinceCode;\n            const country = CANADA; // ALWAYS return Canada\n\n            return {\n              fullAddress: props.fullAddress,\n              city,\n              street,\n              province,\n              country\n            };\n        });\n    }\n\n    protected handleError(error: HttpErrorResponse) {\n        console.error('GeoCoder network error', { error });\n        return throwError('Geocoder error');\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/HeaderComponent.html":{"url":"components/HeaderComponent.html","title":"component - HeaderComponent","body":"\n                   \n\n\n\n\n\n  Components\n  HeaderComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    projects/common/lib/components/header/header.component.ts\n\n\n    \n        Description\n    \n    \n        HeaderComponent is the stylized blue header at the top of every single\napplication.  It has a built-in \"Skip to Content\" tab-accessible section\nthat's best practice for screen readers.  You must create an element with\nid='content' for this to work!  Best practice is to put this \"content\"\nelement as a wrapper aroud your \n\n    \n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                common-header\n            \n\n            \n                styleUrls\n                ./header.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./header.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                SKIP_CONTENT_HASH\n                            \n                            \n                                    Public\n                                skipLinkPath\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                generateSkipToContentLink\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                routeIsActive\n                            \n                            \n                                updateSkipContentLink\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                logoSrc\n                            \n                            \n                                serviceName\n                            \n                            \n                                urlBaseName\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(router: Router)\n                    \n                \n                        \n                            \n                                Defined in projects/common/lib/components/header/header.component.ts:25\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        logoSrc\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'assets/gov3_bc_logo.png'\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/header/header.component.ts:22\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        serviceName\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/header/header.component.ts:20\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        urlBaseName\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/header/header.component.ts:21\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            generateSkipToContentLink\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    generateSkipToContentLink()\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/components/header/header.component.ts:51\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/components/header/header.component.ts:30\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            routeIsActive\n                        \n                        \n                    \n                \n            \n            \n                \nrouteIsActive(url: string)\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/components/header/header.component.ts:39\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    url\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            updateSkipContentLink\n                        \n                        \n                    \n                \n            \n            \n                \nupdateSkipContentLink()\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/components/header/header.component.ts:43\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            SKIP_CONTENT_HASH\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : '#content'\n                        \n                    \n                        \n                            \n                                    Defined in projects/common/lib/components/header/header.component.ts:25\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            skipLinkPath\n                            \n                        \n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/header/header.component.ts:24\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit, Input } from '@angular/core';\nimport { Router, NavigationEnd } from '@angular/router';\nimport { filter } from 'rxjs/operators';\n\n/**\n * HeaderComponent is the stylized blue header at the top of every single\n * application.  It has a built-in \"Skip to Content\" tab-accessible section\n * that's best practice for screen readers.  **You must create an element with\n * `id='content'` for this to work!**  Best practice is to put this \"content\"\n * element as a wrapper aroud your ``\n *\n */\n@Component({\n  selector: 'common-header',\n  templateUrl: './header.component.html',\n  styleUrls: ['./header.component.scss']\n})\nexport class HeaderComponent implements OnInit {\n\n  @Input() serviceName: string = '';\n  @Input() urlBaseName: string = '';\n  @Input() logoSrc: string = 'assets/gov3_bc_logo.png';\n\n  public skipLinkPath;\n  private SKIP_CONTENT_HASH = '#content';\n\n  constructor(private router: Router ) {\n  }\n\n  ngOnInit() {\n\n    this.router.events.pipe(\n      filter(ev => ev instanceof NavigationEnd),\n    ).subscribe(this.updateSkipContentLink.bind(this));\n\n    this.updateSkipContentLink();\n  }\n\n  routeIsActive(url: string): boolean {\n    return this.router.url.includes(url);\n  }\n\n  updateSkipContentLink() {\n    this.skipLinkPath = this.generateSkipToContentLink();\n  }\n\n  // Slightly complicated because we have to include the deployUrl in manually.\n  // If deployUrl changes this code must too.\n  //\n  // \"http://full-url.com/fpcare/example#content\"\n  private generateSkipToContentLink(): string {\n    // don't add duplicate #contents\n    if (window.location.href.indexOf(this.SKIP_CONTENT_HASH) !== -1) {\n      return window.location.href;\n    }\n\n    return `${window.location.origin}/${this.urlBaseName + this.router.url}#content`;\n  }\n}\n\n    \n\n    \n        \n  \n    \n      \n        \n      \n      {{serviceName}}\n      Skip to main content\n    \n\n      \n        \n      \n      \n        \n      \n      \n        \n      \n  \n-->\n  \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                {{serviceName}}      Skip to main content                                                                  -->  '\n    var COMPONENTS = [{'name': 'AccordionCommonComponent', 'selector': 'common-accordion'},{'name': 'AddressComponent', 'selector': 'common-address'},{'name': 'ButtonComponent', 'selector': 'common-button'},{'name': 'ButtonGroupComponent', 'selector': 'common-button-group'},{'name': 'CaptchaComponent', 'selector': 'common-captcha'},{'name': 'CheckboxComponent', 'selector': 'common-checkbox'},{'name': 'CityComponent', 'selector': 'common-city'},{'name': 'ConfirmTemplateComponent', 'selector': 'common-confirm-template'},{'name': 'ConsentModalComponent', 'selector': 'common-consent-modal'},{'name': 'CoreBreadcrumbComponent', 'selector': 'common-core-breadcrumb'},{'name': 'CountryComponent', 'selector': 'common-country'},{'name': 'DateComponent', 'selector': 'common-date'},{'name': 'DatepickerComponent', 'selector': 'common-datepicker'},{'name': 'DropdownComponent', 'selector': 'common-dropdown'},{'name': 'EmailComponent', 'selector': 'common-email'},{'name': 'ErrorContainerComponent', 'selector': 'common-error-container'},{'name': 'FileUploaderComponent', 'selector': 'common-file-uploader'},{'name': 'FormActionBarComponent', 'selector': 'common-form-action-bar'},{'name': 'FormSubmitBarComponent', 'selector': 'common-form-submit-bar'},{'name': 'FullNameComponent', 'selector': 'common-full-name'},{'name': 'GeocoderInputComponent', 'selector': 'common-geocoder-input'},{'name': 'HeaderComponent', 'selector': 'common-header'},{'name': 'NameComponent', 'selector': 'common-name'},{'name': 'PageFrameworkComponent', 'selector': 'common-page-framework'},{'name': 'PageSectionComponent', 'selector': 'common-page-section'},{'name': 'PasswordComponent', 'selector': 'common-password'},{'name': 'PhnComponent', 'selector': 'common-phn'},{'name': 'PhoneNumberComponent', 'selector': 'common-phone-number'},{'name': 'PostalCodeComponent', 'selector': 'common-postal-code'},{'name': 'ProvinceComponent', 'selector': 'common-province'},{'name': 'RadioComponent', 'selector': 'common-radio'},{'name': 'SampleModalComponent', 'selector': 'common-sample-modal'},{'name': 'SinComponent', 'selector': 'common-sin'},{'name': 'StreetComponent', 'selector': 'common-street'},{'name': 'ThumbnailComponent', 'selector': 'common-thumbnail'},{'name': 'ToggleComponent', 'selector': 'common-toggle'},{'name': 'WizardProgressBarComponent', 'selector': 'common-wizard-progress-bar'},{'name': 'XiconButtonComponent', 'selector': 'common-xicon-button'}];\n    var DIRECTIVES = [{'name': 'DateFieldFormatDirective', 'selector': '[commonDateFieldFormat]'},{'name': 'DuplicateCheckDirective', 'selector': '[commonDuplicateCheck]'},{'name': 'ValidateBcPostalDirective', 'selector': '[commonValidateBcPostal]'},{'name': 'ValidateCityDirective', 'selector': '[commonValidateCity]'},{'name': 'ValidateNameDirective', 'selector': '[commonValidateName]'},{'name': 'ValidatePostalcodeDirective', 'selector': '[commonValidatePostalcode]'},{'name': 'ValidateRegionDirective', 'selector': '[commonValidateRegion]'},{'name': 'ValidateStreetDirective', 'selector': '[commonValidateStreet]'}];\n    var ACTUAL_COMPONENT = {'name': 'HeaderComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IRadioItems.html":{"url":"interfaces/IRadioItems.html","title":"interface - IRadioItems","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  IRadioItems\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/common/lib/components/radio/radio.component.ts\n        \n\n            \n                Description\n            \n            \n                RadioComponent is a single radio which can be used to have multiple radios\nbased on the radio label values.\nTo display radio in a vertical style use display=\"table-row-group\" by default\nit shows in horizontal or inline display, display='inline-block' You can\nhave many radio's and the number is based on the Radio label Value. For 3\nradio buttons, radioLabels value is of type IRadioItems[].\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        label\n                                \n                                \n                                        value\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        label\n                                    \n                                \n                                \n                                    \n                                        label:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        value\n                                    \n                                \n                                \n                                    \n                                        value:         any\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         any\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import {Component, EventEmitter, Input, Output, Optional, Self, OnInit} from '@angular/core';\nimport { AbstractFormControl } from '../../models/abstract-form-control';\nimport { LabelReplacementTag, ErrorMessage } from '../../models/error-message.interface';\nimport { NgControl } from '@angular/forms';\n\n/**\n * RadioComponent is a single radio which can be used to have multiple radios\n * based on the radio label values.\n *\n * To display radio in a vertical style use display=\"table-row-group\" by default\n * it shows in horizontal or inline display, display='inline-block' You can\n * have many radio's and the number is based on the Radio label Value. For 3\n * radio buttons, radioLabels value is of type IRadioItems[].\n*\n * @example\n *        \n *        \n *\n *  Reactive Form\n *        \n *        \n *\n *  Template Form\n *        \n *        \n *\n * @export\n *\n */\nexport interface IRadioItems {\n  label: string;\n  value: any;\n  // TODO: Make value generic \n}\n@Component({\n  selector: 'common-radio',\n  templateUrl: './radio.component.html',\n  styleUrls: ['./radio.component.scss']\n})\nexport class RadioComponent extends AbstractFormControl implements OnInit {\n\n  _value: any = '';\n  _defaultErrMsg: ErrorMessage = {\n    required: `${LabelReplacementTag} is required.`\n  };\n\n  @Input() radioLabels: IRadioItems[] = [\n    {label: 'No', value: false},\n    {label: 'Yes', value: true}\n  ];\n\n  @Input() label: string;\n  @Input()\n  set value( val: string ) {\n    this._value = val;\n  }\n  get value() {\n    return this._value;\n  }\n\n  @Input() display: 'table-row-group' | 'inline-block'  = 'inline-block';\n  @Input() instructionText: string;\n\n  @Output() valueChange: EventEmitter = new EventEmitter();\n\n  constructor( @Optional() @Self() public controlDir: NgControl ) {\n    super();\n    if ( controlDir ) {\n      controlDir.valueAccessor = this;\n    }\n  }\n\n  ngOnInit() {\n    super.ngOnInit();\n  }\n\n  setStatus(val: any) {\n    this._value = val;\n\n    this._onChange(val);\n    this._onTouched();\n    this.valueChange.emit(val);\n  }\n\n  registerOnChange(fn: any): void {\n    this._onChange = fn;\n  }\n\n  registerOnTouched(fn: any): void {\n    this._onTouched = fn;\n  }\n\n  writeValue(value: any): void {\n    this._value = value;\n  }\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ISpaEnvResponse.html":{"url":"interfaces/ISpaEnvResponse.html","title":"interface - ISpaEnvResponse","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  ISpaEnvResponse\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/common/lib/components/consent-modal/consent-modal.component.ts\n        \n\n            \n                Description\n            \n            \n                Consent Modal is a Modal with the Information or Notice. It can be used to get the User's consent an\nthen proceed with the application. It also makes an API call to the SPA-ENV server to see if the app is under\nmaintenance.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        SPA_ENV_ACL_MAINTENANCE_FLAG\n                                \n                                \n                                        SPA_ENV_ACL_MAINTENANCE_MESSAGE\n                                \n                                \n                                        SPA_ENV_MSP_MAINTENANCE_FLAG\n                                \n                                \n                                        SPA_ENV_MSP_MAINTENANCE_MESSAGE\n                                \n                                \n                                        SPA_ENV_NOW\n                                \n                                \n                                        SPA_ENV_PACUTOFF_MAINTENANCE_END\n                                \n                                \n                                        SPA_ENV_PACUTOFF_MAINTENANCE_FLAG\n                                \n                                \n                                        SPA_ENV_PACUTOFF_MAINTENANCE_MESSAGE\n                                \n                                \n                                        SPA_ENV_PACUTOFF_MAINTENANCE_START\n                                \n                                \n                                        SPA_ENV_SUPPBEN_MAINTENANCE_END\n                                \n                                \n                                        SPA_ENV_SUPPBEN_MAINTENANCE_FLAG\n                                \n                                \n                                        SPA_ENV_SUPPBEN_MAINTENANCE_MESSAGE\n                                \n                                \n                                        SPA_ENV_SUPPBEN_MAINTENANCE_START\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        SPA_ENV_ACL_MAINTENANCE_FLAG\n                                    \n                                \n                                \n                                    \n                                        SPA_ENV_ACL_MAINTENANCE_FLAG:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        SPA_ENV_ACL_MAINTENANCE_MESSAGE\n                                    \n                                \n                                \n                                    \n                                        SPA_ENV_ACL_MAINTENANCE_MESSAGE:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        SPA_ENV_MSP_MAINTENANCE_FLAG\n                                    \n                                \n                                \n                                    \n                                        SPA_ENV_MSP_MAINTENANCE_FLAG:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        SPA_ENV_MSP_MAINTENANCE_MESSAGE\n                                    \n                                \n                                \n                                    \n                                        SPA_ENV_MSP_MAINTENANCE_MESSAGE:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        SPA_ENV_NOW\n                                    \n                                \n                                \n                                    \n                                        SPA_ENV_NOW:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        SPA_ENV_PACUTOFF_MAINTENANCE_END\n                                    \n                                \n                                \n                                    \n                                        SPA_ENV_PACUTOFF_MAINTENANCE_END:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        SPA_ENV_PACUTOFF_MAINTENANCE_FLAG\n                                    \n                                \n                                \n                                    \n                                        SPA_ENV_PACUTOFF_MAINTENANCE_FLAG:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        SPA_ENV_PACUTOFF_MAINTENANCE_MESSAGE\n                                    \n                                \n                                \n                                    \n                                        SPA_ENV_PACUTOFF_MAINTENANCE_MESSAGE:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        SPA_ENV_PACUTOFF_MAINTENANCE_START\n                                    \n                                \n                                \n                                    \n                                        SPA_ENV_PACUTOFF_MAINTENANCE_START:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        SPA_ENV_SUPPBEN_MAINTENANCE_END\n                                    \n                                \n                                \n                                    \n                                        SPA_ENV_SUPPBEN_MAINTENANCE_END:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        SPA_ENV_SUPPBEN_MAINTENANCE_FLAG\n                                    \n                                \n                                \n                                    \n                                        SPA_ENV_SUPPBEN_MAINTENANCE_FLAG:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        SPA_ENV_SUPPBEN_MAINTENANCE_MESSAGE\n                                    \n                                \n                                \n                                    \n                                        SPA_ENV_SUPPBEN_MAINTENANCE_MESSAGE:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        SPA_ENV_SUPPBEN_MAINTENANCE_START\n                                    \n                                \n                                \n                                    \n                                        SPA_ENV_SUPPBEN_MAINTENANCE_START:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { forwardRef, Component, EventEmitter, Input, Output, ViewChild, OnInit} from '@angular/core';\nimport {ModalDirective} from 'ngx-bootstrap';\nimport { Observable, of } from 'rxjs';\nimport { HttpClient, HttpHeaders, HttpErrorResponse } from '@angular/common/http';\nimport { Response } from '@angular/http';\nimport { CommonLogger } from '../../services/logger.service';\nimport { AbstractHttpService } from '../../services/abstract-api-service';\nimport { ControlContainer, ControlValueAccessor, NgForm, NG_VALUE_ACCESSOR } from '@angular/forms';\n\n\n/**\n * Consent Modal is a Modal with the Information or Notice. It can be used to get the User's consent an\n * then proceed with the application. It also makes an API call to the SPA-ENV server to see if the app is under\n * maintenance.\n *\n *\n * @example\n*       \t\n*           \n * @export\n */\n\nexport interface ISpaEnvResponse {\n  SPA_ENV_MSP_MAINTENANCE_FLAG: string;\n  SPA_ENV_MSP_MAINTENANCE_MESSAGE: string;\n  SPA_ENV_ACL_MAINTENANCE_FLAG: string;\n  SPA_ENV_ACL_MAINTENANCE_MESSAGE: string;\n  SPA_ENV_SUPPBEN_MAINTENANCE_FLAG: string;\n  SPA_ENV_SUPPBEN_MAINTENANCE_MESSAGE: string;\n  SPA_ENV_SUPPBEN_MAINTENANCE_START: string;\n  SPA_ENV_SUPPBEN_MAINTENANCE_END: string;\n  SPA_ENV_PACUTOFF_MAINTENANCE_FLAG: string;\n  SPA_ENV_PACUTOFF_MAINTENANCE_MESSAGE: string;\n  SPA_ENV_PACUTOFF_MAINTENANCE_START: string;\n  SPA_ENV_NOW: string;\n  SPA_ENV_PACUTOFF_MAINTENANCE_END: string;\n}\n\n// Disabling tslint for @example below.\n// tslint:disable:max-line-length\n\n/**\n * ConsentModalComponent, aka the \"Information Collection Notice\", is a modal\n * designed to be shown at the beginning of an application. It is a boilerplate\n * checkbox to consent to information collection.\n *\n * Currently this component requires the body to be manually set as a child\n * element (via transclusion)\n *\n * TODO - Set default body if none is passed in.\n *\n * @example\n *       \n *                      Keep your personal information secure – especially when using a shared device like a computer at a library, school or café. To delete any information that was entered, either complete the application and submit it or, if you don’t finish, close the web browser.Need to take a break and come back later? The data you enter on this form is saved locally to the computer or device you are using until you close the web browser or submit your application.Information in this application is collected by the Ministry of Health under section 26(a), (c) and (e) of the Freedom of Information and Protection of Privacy Act and will be used to determine eligibility for provincial health care benefits in BC and administer Premium Assistance. Should you have any questions about the collection of this personal information please contact Health Insurance BC .\n *       \n *\n *\n *        // Component code - Remove backticks when copying (necessary to render docs)\n *        `@ViewChild('consentModal') consentModal: ConsentModalComponent`\n *        ...\n *        openModal(){\n *          this.consentModal.showFullSizeView();\n *        }\n */\n@Component({\n  selector: 'common-consent-modal',\n  templateUrl: './consent-modal.component.html',\n  styleUrls: ['./consent-modal.component.scss'],\n  viewProviders: [\n    { provide: ControlContainer, useExisting: forwardRef(() => NgForm ) }\n  ],\n  providers: [\n    { provide: NG_VALUE_ACCESSOR, multi: true, useExisting: forwardRef(() => ConsentModalComponent )}\n  ]\n})\n\nexport class ConsentModalComponent extends AbstractHttpService implements ControlValueAccessor, OnInit  {\n\n    protected _headers: HttpHeaders = new HttpHeaders();\n    @Input() processName: string;\n\n    /**\n     * If `isUnderMaintenance` is true, then this will automatically try and\n     * make a request to the SPA ENV server to determine if it's in a\n     * maintenance window.  If your application determines this manually, leave\n     * this alone.\n     */\n    @Input() isUnderMaintenance: boolean = false;\n    @Input() title: string;\n    @Input() body: string; // = 'Keep your personal information secure – especially when using a shared device like a computer at a library, school or café. To delete any information that was entered, either complete the application and submit it or, if you don’t finish, close the web browser.Need to take a break and come back later? The data you enter on this form is saved locally to the computer or device you are using until you close the web browser or submit your application.Information in this application is collected by the Ministry of Health under section 26(a), (c) and (e) of the Freedom of Information and Protection of Privacy Act and will be used to determine eligibility for provincial health care benefits in BC and administer Premium Assistance. Should you have any questions about the collection of this personal information please contact Health Insurance BC .';\n    @Input() agreeLabel: string = 'I have read and understand this info';\n    @Input() continueButton: string = 'Continue';\n    @Input() maintenanceFlag: string = 'false';\n    @Input() url: string = '/msp/api/env';\n    @ViewChild('fullSizeViewModal') public fullSizeViewModal: ModalDirective;\n    @Output() close = new EventEmitter();\n    @Output() cutOffDate: EventEmitter = new EventEmitter();\n    @Output() accept = new EventEmitter();\n\n    /**\n     * Used in cases where we have custom form controls inside NgContent that we\n     * wish to be satisifed before user can continue through modal.\n     */\n    @Input() disableContinue: boolean = false;\n\n    public spaEnvRes: ISpaEnvResponse = {} as any;\n    public maintenanceMessage: string;\n\n    // public maintenanceFlag: string ;\n\n    // TODO: This should eventually be pulled out of the common library as it pertains to MSP-specific code.\n    // tslint:disable-next-line:max-line-length\n    private _applicationHeaderMap: Map = new Map([\n      ['ACL', '{\"SPA_ENV_ACL_MAINTENANCE_FLAG\":\"\",\"SPA_ENV_ACL_MAINTENANCE_MESSAGE\":\"\"}'],\n      ['MSP', '{\"SPA_ENV_MSP_MAINTENANCE_FLAG\":\"\",\"SPA_ENV_MSP_MAINTENANCE_MESSAGE\":\"\"}'],\n      ['PA', '{\"SPA_ENV_PACUTOFF_MAINTENANCE_START\":\"\",\"SPA_ENV_PACUTOFF_MAINTENANCE_END\":\"\",\"SPA_ENV_NOW\":\"\",\"SPA_ENV_PACUTOFF_MAINTENANCE_FLAG\":\"\",\"SPA_ENV_PACUTOFF_MAINTENANCE_MESSAGE\":\"\"}'],\n      ['SUPPBEN', '{\"SPA_ENV_SUPPBEN_MAINTENANCE_START\":\"\",\"SPA_ENV_SUPPBEN_MAINTENANCE_END\":\"\",\"SPA_ENV_NOW\":\"\",\"SPA_ENV_SUPPBEN_MAINTENANCE_FLAG\":\"\",\"SPA_ENV_SUPPBEN_MAINTENANCE_MESSAGE\":\"\",\"SPA_ENV_PACUTOFF_MAINTENANCE_START\":\"\",\"SPA_ENV_PACUTOFF_MAINTENANCE_END\":\"\"}'],\n    ]);\n    agreeCheck: boolean = false;\n\n    public _onChange = (_: any) => {};\n    public _onTouched = () => {};\n\n\n    constructor(protected http: HttpClient,  private logService: CommonLogger) {\n        super(http);\n    }\n\n\n\n    ngOnInit(): void {\n      // Called after ngOnInit when the component's or directive's content has been initialized.\n      // Add 'implements AfterContentInit' to the class.\n      if (this.isUnderMaintenance) {\n        this.inMaintenance();\n      }\n\n    }\n\n    /**\n     * Call this method to display the modal.\n     */\n    showFullSizeView() {\n        this.fullSizeViewModal.config.keyboard = false;\n        this.fullSizeViewModal.show();\n    }\n\n    continue() {\n        this.accept.emit(true);\n        this.fullSizeViewModal.hide();\n        this.close.emit();\n        this._onChange(true);\n        this._onTouched();\n    }\n\n    // Api callout to get the message from the Rapid code\n    sendSpaEnvServer(rapidResponseCode: string): Observable {\n        this._headers = new HttpHeaders({\n            'SPA_ENV_NAME': rapidResponseCode\n        });\n        return this.post(this.url, null);\n    }\n\n    protected handleError(error: HttpErrorResponse) {\n      console.log('handleError', JSON.stringify(error));\n      if (error.error instanceof ErrorEvent) {\n          // Client-side / network error occured\n          console.error('MspMaintenanceService error: ', error.error.message);\n      } else {\n          // The backend returned an unsuccessful response code\n          console.error(`MspMaintenanceService Backend returned error code: ${error.status}.  Error body: ${error.error}`);\n      }\n      // this.logService.log({event: 'error', key: 'Cannot get maintenance flag from spa-env-server'});\n\n      // A user facing erorr message /could/ go here; we shouldn't log dev info through the throwError observable\n      return of(error);\n  }\n\n\n  inMaintenance() {\n        const headerName = this._applicationHeaderMap.get(this.processName);\n\n        this.sendSpaEnvServer(headerName)\n                .subscribe(response => {\n                    this.spaEnvRes =  response;\n                    console.log(this.spaEnvRes);\n                    // TODO: This should eventually be pulled out of the common library as it pertains to MSP-specific code.\n                    if (this.spaEnvRes.SPA_ENV_ACL_MAINTENANCE_FLAG === 'true') {\n                        this.maintenanceFlag = 'true';\n                        this.maintenanceMessage = this.spaEnvRes.SPA_ENV_ACL_MAINTENANCE_MESSAGE;\n                    } else if (this.spaEnvRes.SPA_ENV_MSP_MAINTENANCE_FLAG === 'true') {\n                        this.maintenanceFlag = 'true';\n                        this.maintenanceMessage =  this.spaEnvRes.SPA_ENV_MSP_MAINTENANCE_MESSAGE;\n                    } else if (this.spaEnvRes.SPA_ENV_PACUTOFF_MAINTENANCE_FLAG === 'true') {\n                        this.maintenanceFlag = 'true';\n                        this.maintenanceMessage = this.spaEnvRes.SPA_ENV_PACUTOFF_MAINTENANCE_MESSAGE;\n                    } else if (this.spaEnvRes.SPA_ENV_SUPPBEN_MAINTENANCE_FLAG === 'true') {\n                        this.maintenanceFlag = 'true';\n                        this.maintenanceMessage = this.spaEnvRes.SPA_ENV_SUPPBEN_MAINTENANCE_MESSAGE;\n                    }\n                    if (this.spaEnvRes.SPA_ENV_PACUTOFF_MAINTENANCE_START) {\n                        this.cutOffDate.emit(this.spaEnvRes);\n                    }\n\n            }, (error: Response | any) => {\n                console.log('Error when calling the MSP Maintenance: ' + error);\n                this.logService.log({\n                  event: 'ACL - SPA Env System Error',\n                  success: false,\n                  errMsg: 'ACL - SPA Env Rapid Response Error' + error\n                });\n        }\n\n      );\n  }\n\n  registerOnChange(fn: any): void {\n    this.accept.emit(fn) ;\n    this._onChange = fn;\n  }\n\n  registerOnTouched(fn: any): void {\n    this._onTouched = fn;\n  }\n\n  writeValue(value: any): void {\n\n    //\n  }\n\n  isContinueDisabled(): boolean {\n    return !this.agreeCheck || this.disableContinue;\n  }\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"guards/LoadPageGuardService.html":{"url":"guards/LoadPageGuardService.html","title":"guard - LoadPageGuardService","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n    Guards\n    LoadPageGuardService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n        \n            \n            File\n            \n            \n                projects/common/lib/services/load-page-guard.service.ts\n            \n\n                \n                Description\n                \n                \n                    Use this service to implement Load Page Route Guards in your application. This is for a\ntypical form flow, where the user must proceed sequentially from one page to\nthe next.\nTo setup, you must:\n\nCreate a service implementing the abstract methods in AbstractPageGuardService\nSetup AbstractPageGuardService in NgModule providers, to useExisting the service from previous step.\nAdd this LoadPageGuardService to same providers from previous step.\nConfigure routes to use LoadPageGuardService - canActivate or canActivateChild\nHave each \"page\" in the form call setPageIncomplete() or setPageComplete() (from the \"PageStateService\")\n\nYou must make sure to setup AbstractPageGuardService in NgModules correctly.\n\n                \n\n\n\n                \n                Example\n                \n                \n                            \n                                //STEP 2 + STEP 3\n//registration.module.ts\nproviders: [\n...\n{ provide: AbstractPageGuardService, useExisting: DefaultPageGuardService },\nLoadPageGuardService\n]\n\n\n//STEP 4\n//registration-routing.modle.ts\nconst routes: Routes = [{\npath: '',\ncanActivateChild: [LoadPageGuardService] //or canActivate\n}\n...\n]\n\n\n//STEP 5\n//example.component.ts\nngOnInit() { this.pageService.setPageIncomplete(); }\ncontinue() { this.pageService.setPageComplete(); }\n                            \n                \n\n                \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                _continue\n                            \n                            \n                                canActivate\n                            \n                            \n                                canActivateChild\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n                \n    Constructor\n        \n            \n                \n                    \nconstructor(router: Router, service: AbstractPageGuardService)\n                    \n                \n                        \n                            \n                                Defined in projects/common/lib/services/load-page-guard.service.ts:53\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        service\n                                                  \n                                                        \n                                                                        AbstractPageGuardService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n                \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            _continue\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    _continue(pageUrl: string)\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/services/load-page-guard.service.ts:73\n                \n            \n\n\n            \n                \n                    Logic to determine whether or not allow to continue to next page \n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    pageUrl\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            canActivate\n                        \n                        \n                    \n                \n            \n            \n                \ncanActivate(route: ActivatedRouteSnapshot, state: RouterStateSnapshot)\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/services/load-page-guard.service.ts:58\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    route\n                                    \n                                                ActivatedRouteSnapshot\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    state\n                                    \n                                                RouterStateSnapshot\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable | Promise | boolean | UrlTree\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            canActivateChild\n                        \n                        \n                    \n                \n            \n            \n                \ncanActivateChild(next: ActivatedRouteSnapshot, state: RouterStateSnapshot)\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/services/load-page-guard.service.ts:66\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    next\n                                    \n                                                ActivatedRouteSnapshot\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    state\n                                    \n                                                RouterStateSnapshot\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable | Promise | boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n        \n\n\n        \n            import { Injectable } from '@angular/core';\nimport { CanActivateChild, Router, ActivatedRouteSnapshot, RouterStateSnapshot, UrlTree, CanActivate } from '@angular/router';\nimport { Observable } from 'rxjs';\nimport { AbstractPageGuardService } from './abstract-page-guard.service';\n\n\n/**\n * Use this service to implement Load Page Route Guards in your application. This is for a\n * typical form flow, where the user must proceed sequentially from one page to\n * the next.\n *\n * To setup, you must:\n *\n * 1. Create a service implementing the abstract methods in `AbstractPageGuardService`\n * 2. Setup AbstractPageGuardService in NgModule providers, to `useExisting` the service from previous step.\n * 3. Add this LoadPageGuardService to same providers from previous step.\n * 4. Configure routes to use LoadPageGuardService - `canActivate` or `canActivateChild`\n * 5. Have each \"page\" in the form call `setPageIncomplete()` or `setPageComplete()` (from the \"PageStateService\")\n *\n *\n * You must make sure to setup AbstractPageGuardService in NgModules correctly.\n *\n *  @example\n *                //STEP 2 + STEP 3\n *                //registration.module.ts\n *                providers: [\n *                        ...\n *                        { provide: AbstractPageGuardService, useExisting: DefaultPageGuardService },\n *                        LoadPageGuardService\n *                ]\n *\n *\n *                //STEP 4\n *                //registration-routing.modle.ts\n *                const routes: Routes = [{\n *                   path: '',\n *                   canActivateChild: [LoadPageGuardService] //or canActivate\n *                  }\n *                   ...\n *                ]\n *\n *\n *                //STEP 5\n *                //example.component.ts\n *                ngOnInit() { this.pageService.setPageIncomplete(); }\n *                continue() { this.pageService.setPageComplete(); }\n *\n *\n */\n@Injectable({\n  providedIn: 'root'\n})\nexport class LoadPageGuardService implements CanActivate, CanActivateChild {\n\n  constructor(private router: Router, private service: AbstractPageGuardService) {\n  }\n\n  canActivate(\n    route: ActivatedRouteSnapshot,\n    state: RouterStateSnapshot\n  ): Observable | Promise | boolean | UrlTree {\n\n    return this._continue(state.url);\n  }\n\n  canActivateChild(\n    next: ActivatedRouteSnapshot,\n    state: RouterStateSnapshot): Observable | Promise | boolean {\n    return this._continue(state.url);\n  }\n\n  /** Logic to determine whether or not allow to continue to next page */\n  private _continue(pageUrl: string): boolean {\n\n    if (this.service.canBypassGuards()) {\n      return true;\n    }\n\n    /**\n     * Logic within method is specific to application\n     */\n    return this.service.canNavigateToUrl(pageUrl);\n  }\n}\n\n        \n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Maxlengths.html":{"url":"interfaces/Maxlengths.html","title":"interface - Maxlengths","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  Maxlengths\n\n\n\n        \n            Info\n        \n        \n            Design Guidelines\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/common/lib/components/address/address.component.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        address\n                                \n                                \n                                            Optional\n                                        city\n                                \n                                \n                                            Optional\n                                        country\n                                \n                                \n                                            Optional\n                                        postalCode\n                                \n                                \n                                            Optional\n                                        province\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        address\n                                    \n                                \n                                \n                                    \n                                        address:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        city\n                                    \n                                \n                                \n                                    \n                                        city:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        country\n                                    \n                                \n                                \n                                    \n                                        country:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        postalCode\n                                    \n                                \n                                \n                                    \n                                        postalCode:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        province\n                                    \n                                \n                                \n                                    \n                                        province:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n    \n        Design Guidelines\ntodo\n\n    \n\n    \n        import {\n  Component,\n  Input,\n  Output,\n  EventEmitter,\n  OnChanges,\n  forwardRef,\n  OnInit\n} from '@angular/core';\nimport { ControlContainer, ControlValueAccessor, NgForm, NG_VALUE_ACCESSOR } from '@angular/forms';\nimport { Base } from '../../models/base';\nimport { GeoAddressResult } from '../../services/geocoder.service';\nimport { Address } from '../../models/address.model';\nimport { CountryList, CANADA, UNITED_STATES, COUNTRY_LIST } from '../country/country.component';\nimport { ProvinceList, BRITISH_COLUMBIA, PROVINCE_LIST } from '../province/province.component';\n\nexport interface AddrLabelList {\n  address1?: string;\n  address2?: string;\n  address3?: string;\n  city?: string;\n  province?: string;\n  country?: string;\n  postalCode?: string;\n}\n\nexport interface Maxlengths {\n  address?: string;\n  city?: string;\n  province?: string;\n  country?: string;\n  postalCode?: string;\n}\n\nexport interface ReadOnlyFields {\n  address?: boolean;\n  city?: boolean;\n  province?: boolean;\n  country?: boolean;\n  postalCode?: boolean;\n}\n\n/**\n *\n * Note - This component REQUIRES that `HttpClientModule` is registered in your NgModule.\n */\n@Component({\n  selector: 'common-address',\n  templateUrl: './address.component.html',\n  styleUrls: ['./address.component.scss'],\n  /* Re-use the same ngForm that it's parent is using. The component will show\n   * up in its parents `this.form`, and will auto-update `this.form.valid`\n   */\n  viewProviders: [\n    { provide: ControlContainer, useExisting: forwardRef(() => NgForm) }\n  ],\n  providers: [\n    { provide: NG_VALUE_ACCESSOR, useExisting: forwardRef(() => AddressComponent) }\n  ]\n})\nexport class AddressComponent extends Base\n  implements OnInit, OnChanges, ControlValueAccessor {\n\n  /* Disable all fields by sending in boolean,\n   * disable specific fields by sending in ReadOnlyFields structure\n   */\n  @Input() disabled: boolean | ReadOnlyFields = false;\n  @Input() isRequired: boolean = false;\n  @Input() countryList: CountryList[] = COUNTRY_LIST;\n  @Input() defaultCountry: string = CANADA;\n  @Input() provinceList: ProvinceList[] = PROVINCE_LIST;\n  @Input() defaultProvince: string = BRITISH_COLUMBIA;\n  @Input() disableGeocoder: boolean = false;\n  @Input() labels: AddrLabelList;\n  @Input() maxlengths: Maxlengths;\n  @Input() bcOnly: boolean = false;\n\n  @Input()\n  set address(val: Address) {\n    if (val) {\n      this.addr = val;\n    }\n  }\n  get address(): Address {\n    return this.addr;\n  }\n\n  @Output() addressChange: EventEmitter = new EventEmitter();\n  /**\n   * If true, adds a plus icon next to street and enables users to add a second\n   * address line.  This value binds to `address.addressLine2`\n   */\n  @Input() allowExtralines: boolean = false;\n\n  addr: Address;\n  provList: ProvinceList[];\n  showLine2 = false;\n  showLine3 = false;\n\n  // Labels defaulted to MSP\n  addrLabels: AddrLabelList =  {\n    address1: 'Full street address, rural route, PO box or general delivery',\n    address2: 'Address Line 2',\n    address3: 'Address Line 3',\n    city: 'City',\n    province: 'Province or state',\n    country: 'Country',\n    postalCode: 'Postal Code or Zip Code'\n  };\n\n  // Lengths defaulted to MSP\n  fieldMaxLenghts: Maxlengths = {\n    address: '25',\n    city: '25',\n    province: '25',\n    country: '250',\n    postalCode: '25'\n  };\n\n  readOnlyFields: ReadOnlyFields = {\n    address: false,\n    city: false,\n    province: false,\n    country: false,\n    postalCode: false,\n  };\n\n  _onChange = (_: any) => { };\n  _onTouched = (_: any) => { };\n\n  constructor() {\n    super();\n  }\n\n  ngOnInit() {\n\n    // console.log( 'address: ', this.bcOnly );\n\n    this.setLabels();\n    this.setMaxlengths();\n    this.setReadOnlyFields();\n\n    if (this.addr) {\n\n      if (!this.addr.country) {\n        this.addr.country = this.setDefaultCountryAsOption();\n      } else {\n        // If string for country submitted, need to find code to display value in select box\n        this.addr.country = this.findCountryCode( this.addr.country );\n      }\n\n      if (!this.addr.province) {\n        this.addr.province = this.setDefaultProvinceAsOption(this.addr.country);\n      }\n\n      // Make sure addressLine2 is visible if there is data persisted to display there.\n      if (this.allowExtralines) {\n        if (this.addr.addressLine2) {\n          this.addLine(2);\n        }\n\n        if (this.addr.addressLine3) {\n          this.addLine(3);\n        }\n      }\n    }\n\n    this.updateProvList();\n  }\n\n  /**\n   * Set country province blank\n   * @param value\n   */\n  setCountry(value: string) {\n    this.addr.province = this.setDefaultProvinceAsOption( value );\n    this.addr.country = value;\n    this.updateProvList();\n\n   if ( this.isCanada() ) {\n      // If Canada, clear postal code to display mask\n      this.addr.postal = '';\n    }\n\n    this._onChange(this.addr);\n    this.addressChange.emit(this.addr);\n    this._onTouched(this.addr);\n  }\n\n  setProvince(value: string) {\n    this.addr.province = value;\n    this._onChange(this.addr);\n    this.addressChange.emit(this.addr);\n    this._onTouched(this.addr);\n  }\n\n  setStreetAddress(value: string) {\n    this.addr.addressLine1 = value;\n    this._onChange(this.addr);\n    this.addressChange.emit(this.addr);\n    this._onTouched(this.addr);\n  }\n\n  setCity(value: string) {\n    this.addr.city = value;\n    this._onChange(this.addr);\n    this.addressChange.emit(this.addr);\n    this._onTouched(this.addr);\n  }\n\n  /**\n   * Sets string after converted upper case\n   * @param text\n   */\n  setPostalCode(value: string) {\n    this.addr.postal = value;\n    this._onChange(this.addr);\n    this.addressChange.emit(this.addr);\n    this._onTouched(this.addr);\n  }\n\n  isCanada(): boolean {\n    return this.addr && CANADA === this.addr.country;\n  }\n\n  ngOnChanges(changes) {\n    if (changes['countryList'] && changes['countryList'].currentValue) {\n\n      if (this.addr && !this.addr.country) {\n        // Set defaults\n        this.addr.country = this.setDefaultCountryAsOption();\n\n        // Set defaults\n        this.addr.province = this.setDefaultProvinceAsOption(this.addr.country);\n      }\n      this.updateProvList();\n    }\n    if (changes['provinceList'] && changes['provinceList'].currentValue) {\n      if (this.addr && !this.addr.province) {\n        // Set defaults\n        this.addr.province = this.setDefaultProvinceAsOption(this.addr.country);\n      }\n      this.updateProvList();\n    }\n  }\n\n  addLine(line: 2 | 3 = null) {\n\n    // Add lines in order\n    if (line === null) {\n      if (!this.showLine2) {\n        this.showLine2 = true;\n      } else if (!this.showLine3) {\n        this.showLine3 = true;\n      }\n    } else {\n      // Add specific line number\n      const lookup = `showLine${line}`;\n      this[lookup] = true;\n    }\n  }\n\n  removeLine(line: 2 | 3) {\n    // We can remove lines in any order, depending on user input\n    // Dynamically lookup variable based on line number input.\n    const lookup = `showLine${line}`;\n    this[lookup] = false;\n\n    // TODO - Need to clear the data in the appropriate field, just null/undefined it out.\n    const addrLookup = `addressLine${line}`;\n    this.address[addrLookup] = undefined;\n  }\n\n  /**\n   * Updates the provList variable. Values must be stored in a variable and not\n   * accessed via function invocation for performance.\n   */\n  private updateProvList() {\n    if (!this.provinceList) { return; } // When data is async and hasn't loaded\n    this.provList = this.provinceList\n      .map(prov => {\n        if (prov.country === this.addr.country) {\n          return prov;\n        }\n      })\n      .filter(x => x);\n  }\n\n  /**\n   * Sets the default province option value\n   */\n  private setDefaultProvinceAsOption(country: string): string {\n    const provObj = !this.provinceList ? null : this.provinceList.find(\n      val => (val.provinceCode === this.defaultProvince ||\n        val.description === this.defaultProvince) &&\n        val.country === country\n    );\n    return (provObj ? provObj.provinceCode : '');\n  }\n\n  private findProvinceDescription(prov: string): string {\n    const provObj = !this.provinceList ? null : this.provinceList.find(\n      val => val.provinceCode === prov ||\n        val.description === prov\n    );\n    return (provObj ? provObj.description : null);\n  }\n\n  /**\n   * Set country to default\n   * Search uses country code or country name to find item is list.\n   */\n  private setDefaultCountryAsOption(): string {\n    return this.findCountryCode( this.defaultCountry );\n  }\n\n  private findCountryCode( country: string ): string {\n    const countryObj = !this.countryList\n      ? null\n      : this.countryList.find(\n        val =>\n          val.countryCode === country ||\n          val.description === country\n      );\n    return countryObj ? countryObj.countryCode : null;\n  }\n\n  // GeoCoder\n\n  /**\n   * GeoCoder only is applicable when address is BC, Canada.\n   */\n  useGeoCoder(): boolean {\n    if (this.disableGeocoder) {\n      return false;\n    }\n    return this.isCanada() && BRITISH_COLUMBIA === this.addr.province;\n  }\n\n  // Only BC addresses therefore no need to copy province into structure.\n  setAddress(data: GeoAddressResult) {\n    this.addr.addressLine1 = data.street;\n    this.addr.city = data.city;\n    this.addr.province = data.province;\n    this.addr.country = data.country;\n    this.addressChange.emit(this.addr);\n  }\n\n  writeValue( value: Address) {\n    if ( value ) {\n      this.addr = value;\n    }\n  }\n\n  registerOnChange(fn: any): void {\n    this._onChange = fn;\n  }\n\n  registerOnTouched(fn: any): void {\n    this._onTouched = fn;\n  }\n\n  setDisabledState(isDisabled: boolean): void {\n    this.disabled = isDisabled;\n    this.setReadOnlyFields();\n  }\n\n  private setLabels() {\n    if ( this.labels ) {\n      Object.keys(this.labels).map( x => this.addrLabels[x] = this.labels[x] );\n    }\n  }\n\n  private setMaxlengths() {\n    if ( this.maxlengths ) {\n      Object.keys(this.fieldMaxLenghts).map( x => this.maxlengths[x] = this.fieldMaxLenghts[x]);\n    }\n  }\n\n  private setReadOnlyFields() {\n    if ( typeof this.disabled === 'boolean' ) {\n      Object.keys(this.readOnlyFields).map( x => this.readOnlyFields[x] = this.disabled );\n    } else {\n      Object.keys(this.disabled).map( x => this.readOnlyFields[x] = this.disabled[x] );\n    }\n  }\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/MoHCommonLibraryError.html":{"url":"classes/MoHCommonLibraryError.html","title":"class - MoHCommonLibraryError","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  MoHCommonLibraryError\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/common/helpers/library-error.ts\n        \n\n\n            \n                Extends\n            \n            \n                    Error\n            \n\n\n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(message?: string)\n                    \n                \n                        \n                            \n                                Defined in projects/common/helpers/library-error.ts:1\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        message\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class MoHCommonLibraryError extends Error {\n    constructor(message?: string) {\n        super(message); // 'Error' breaks prototype chain here\n        Object.setPrototypeOf(this, new.target.prototype); // restore prototype chain\n    }\n}\n\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/NameComponent.html":{"url":"components/NameComponent.html","title":"component - NameComponent","body":"\n                   \n\n\n\n\n\n  Components\n  NameComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    projects/common/lib/components/name/name.component.ts\n\n\n    \n        Description\n    \n    \n        TODO DOCUMENT NEED TO USE NGMODEL FOR REQUIRED TO WORK. Also test with reactive forms to see if still nec\n\n    \n\n    \n        Extends\n    \n    \n                AbstractFormControl\n    \n\n    \n        Implements\n    \n    \n                    OnInit\n                    ControlValueAccessor\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                common-name\n            \n\n            \n                styleUrls\n                ./name.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./name.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                _defaultErrMsg\n                            \n                            \n                                    Public\n                                controlDir\n                            \n                            \n                                    Public\n                                nameStr\n                            \n                            \n                                    Abstract\n                                _defaultErrMsg\n                            \n                            \n                                _onChange\n                            \n                            \n                                _onTouched\n                            \n                            \n                                    Public\n                                objectId\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                            \n                                onBlur\n                            \n                            \n                                onValueChange\n                            \n                            \n                                    Private\n                                validateSelf\n                            \n                            \n                                writeValue\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                registerOnChange\n                            \n                            \n                                registerOnTouched\n                            \n                            \n                                    Protected\n                                registerValidation\n                            \n                            \n                                setDisabledState\n                            \n                            \n                                    Protected\n                                setErrorMsg\n                            \n                            \n                                    Private\n                                validateLabel\n                            \n                            \n                                    Abstract\n                                writeValue\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                disabled\n                            \n                            \n                                label\n                            \n                            \n                                labelforId\n                            \n                            \n                                maxlength\n                            \n                            \n                                value\n                            \n                            \n                                disabled\n                            \n                            \n                                errorMessage\n                            \n                            \n                                label\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                blur\n                            \n                            \n                                valueChange\n                            \n                        \n                    \n                \n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    value\n                                \n                                \n                                    maxLenAsNumber\n                                \n                            \n                        \n                    \n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(controlDir: NgControl)\n                    \n                \n                        \n                            \n                                Defined in projects/common/lib/components/name/name.component.ts:48\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        controlDir\n                                                  \n                                                        \n                                                                        NgControl\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        disabled\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/name/name.component.ts:23\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        label\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'Name'\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/name/name.component.ts:24\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        labelforId\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'name_' + this.objectId\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/name/name.component.ts:26\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        maxlength\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : '255'\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/name/name.component.ts:25\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        value\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/name/name.component.ts:29\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        disabled\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                            \n                                \n                                    Inherited from         AbstractFormControl\n\n                                \n                            \n                        \n                            \n                                    Defined in         AbstractFormControl:16\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        errorMessage\n                    \n                \n                \n                    \n                        Type :         ErrorMessage\n\n                    \n                \n                            \n                                \n                                    Inherited from         AbstractFormControl\n\n                                \n                            \n                        \n                            \n                                    Defined in         AbstractFormControl:19\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        label\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                            \n                                \n                                    Inherited from         AbstractFormControl\n\n                                \n                            \n                        \n                            \n                                    Defined in         AbstractFormControl:14\n\n                            \n                        \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        blur\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/name/name.component.ts:39\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        valueChange\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/name/name.component.ts:38\n                            \n                        \n            \n        \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/components/name/name.component.ts:58\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            onBlur\n                        \n                        \n                    \n                \n            \n            \n                \nonBlur(event: any)\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/components/name/name.component.ts:70\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    event\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            onValueChange\n                        \n                        \n                    \n                \n            \n            \n                \nonValueChange(value: any)\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/components/name/name.component.ts:64\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            validateSelf\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    validateSelf()\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/components/name/name.component.ts:85\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     ValidationErrors | null\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            writeValue\n                        \n                        \n                    \n                \n            \n            \n                \nwriteValue(value: any)\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/components/name/name.component.ts:75\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Inherited from         AbstractFormControl\n\n                \n            \n            \n                \n                        Defined in         AbstractFormControl:27\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            registerOnChange\n                        \n                        \n                    \n                \n            \n            \n                \nregisterOnChange(fn: any)\n                \n            \n\n\n            \n                \n                    Inherited from         AbstractFormControl\n\n                \n            \n            \n                \n                        Defined in         AbstractFormControl:35\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    fn\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            registerOnTouched\n                        \n                        \n                    \n                \n            \n            \n                \nregisterOnTouched(fn: any)\n                \n            \n\n\n            \n                \n                    Inherited from         AbstractFormControl\n\n                \n            \n            \n                \n                        Defined in         AbstractFormControl:40\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    fn\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            registerValidation\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    registerValidation(ngControl: NgControl, fn: ValidationErrors)\n                \n            \n\n\n            \n                \n                    Inherited from         AbstractFormControl\n\n                \n            \n            \n                \n                        Defined in         AbstractFormControl:68\n\n                \n            \n\n\n            \n                \n                    Register self validating method\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    ngControl\n                                    \n                                                NgControl\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                    \n                                \n                                \n                                    fn\n                                    \n                                                ValidationErrors\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        function for validating self\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            setDisabledState\n                        \n                        \n                    \n                \n            \n            \n                \nsetDisabledState(isDisabled: boolean)\n                \n            \n\n\n            \n                \n                    Inherited from         AbstractFormControl\n\n                \n            \n            \n                \n                        Defined in         AbstractFormControl:45\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    isDisabled\n                                    \n                                                boolean\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            setErrorMsg\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    setErrorMsg()\n                \n            \n\n\n            \n                \n                    Inherited from         AbstractFormControl\n\n                \n            \n            \n                \n                        Defined in         AbstractFormControl:49\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            validateLabel\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    validateLabel()\n                \n            \n\n\n            \n                \n                    Inherited from         AbstractFormControl\n\n                \n            \n            \n                \n                        Defined in         AbstractFormControl:88\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Abstract\n                            writeValue\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    writeValue(value: any)\n                \n            \n\n\n            \n                \n                    Inherited from         AbstractFormControl\n\n                \n            \n            \n                \n                        Defined in         AbstractFormControl:32\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            _defaultErrMsg\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         ErrorMessage\n\n                        \n                    \n                    \n                        \n                            Default value : {\n    required: `${LabelReplacementTag} is required.`,\n    invalid: LabelReplacementTag + ' must begin with a letter and cannot include special ' +\n      'characters except hyphens, periods, apostrophes and blank characters.',\n    invalidChar: `${LabelReplacementTag} must be a letter.` // for Initials when maxlength is 1\n  }\n                        \n                    \n                        \n                            \n                                    Defined in projects/common/lib/components/name/name.component.ts:43\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            controlDir\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         NgControl\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Optional()@Self()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in projects/common/lib/components/name/name.component.ts:51\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            nameStr\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : ''\n                        \n                    \n                        \n                            \n                                    Defined in projects/common/lib/components/name/name.component.ts:41\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Abstract\n                            _defaultErrMsg\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         ErrorMessage\n\n                        \n                    \n                    \n                        \n                            Default value : {}\n                        \n                    \n                            \n                                \n                                    Inherited from         AbstractFormControl\n\n                                \n                            \n                        \n                            \n                                    Defined in         AbstractFormControl:11\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            _onChange\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : () => {...}\n                        \n                    \n                            \n                                \n                                    Inherited from         AbstractFormControl\n\n                                \n                            \n                        \n                            \n                                    Defined in         AbstractFormControl:23\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            _onTouched\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : () => {...}\n                        \n                    \n                            \n                                \n                                    Inherited from         AbstractFormControl\n\n                                \n                            \n                        \n                            \n                                    Defined in         AbstractFormControl:24\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            objectId\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : UUID.UUID()\n                        \n                    \n                            \n                                \n                                    Inherited from         Base\n\n                                \n                            \n                        \n                            \n                                    Defined in         Base:11\n\n                            \n                        \n\n                \n                    \n                        An identifier for parents to keep track of components \n\n                    \n                \n\n            \n        \n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        value\n                    \n                \n\n                \n                    \n                        getvalue()\n                    \n                \n                            \n                                \n                                    Defined in projects/common/lib/components/name/name.component.ts:34\n                                \n                            \n\n                \n                    \n                        setvalue(val: string)\n                    \n                \n                            \n                                \n                                    Defined in projects/common/lib/components/name/name.component.ts:29\n                                \n                            \n                    \n                        \n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                        Type\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                            val\n                                                    \n                                                            \n                                                                            string\n                                                            \n                                                    \n                                                        \n                                                                No\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :         void\n\n                                \n                        \n                    \n            \n        \n        \n            \n                \n                    \n                        \n                        maxLenAsNumber\n                    \n                \n\n                \n                    \n                        getmaxLenAsNumber()\n                    \n                \n                            \n                                \n                                    Defined in projects/common/lib/components/name/name.component.ts:81\n                                \n                            \n\n            \n        \n\n\n\n\n    \n        import {\n  Component,\n  Input,\n  Optional,\n  Self,\n  Output,\n  EventEmitter,\n  OnInit} from '@angular/core';\nimport { ControlValueAccessor, NgControl, ValidationErrors } from '@angular/forms';\nimport { AbstractFormControl } from '../../models/abstract-form-control';\nimport { LabelReplacementTag, ErrorMessage } from '../../models/error-message.interface';\n\n/**\n * TODO DOCUMENT NEED TO USE NGMODEL FOR REQUIRED TO WORK. Also test with reactive forms to see if still nec\n */\n@Component({\n  selector: 'common-name',\n  templateUrl: './name.component.html',\n  styleUrls: ['./name.component.scss']\n})\nexport class NameComponent extends AbstractFormControl implements OnInit, ControlValueAccessor {\n\n  @Input() disabled: boolean = false;\n  @Input() label: string = 'Name';\n  @Input() maxlength: string = '255';\n  @Input() labelforId: string = 'name_' + this.objectId;\n\n  @Input()\n  set value( val: string ) {\n    if ( val ) {\n      this.nameStr = val;\n    }\n  }\n  get value() {\n    return this.nameStr;\n  }\n\n  @Output() valueChange: EventEmitter = new EventEmitter();\n  @Output() blur: EventEmitter = new EventEmitter();\n\n  public nameStr: string = '';\n\n  _defaultErrMsg: ErrorMessage = {\n    required: `${LabelReplacementTag} is required.`,\n    invalid: LabelReplacementTag + ' must begin with a letter and cannot include special ' +\n      'characters except hyphens, periods, apostrophes and blank characters.',\n    invalidChar: `${LabelReplacementTag} must be a letter.` // for Initials when maxlength is 1\n  };\n\n\n  constructor( @Optional() @Self() public controlDir: NgControl ) {\n    super();\n    if ( controlDir ) {\n      controlDir.valueAccessor = this;\n    }\n  }\n\n  ngOnInit() {\n    super.ngOnInit();\n\n    this.registerValidation( this.controlDir, this.validateSelf );\n  }\n\n  onValueChange( value: any ) {\n    this.nameStr = value;\n    this._onChange( value );\n    this.valueChange.emit( value );\n  }\n\n  onBlur( event: any ) {\n    this._onTouched( event );\n    this.blur.emit( event.target.value );\n  }\n\n  writeValue( value: any ): void {\n    if ( value ) {\n      this.nameStr = value;\n    }\n  }\n\n  get maxLenAsNumber(): number {\n    return Number.parseInt( this.maxlength, 10 );\n  }\n\n  private validateSelf(): ValidationErrors | null {\n\n    const maxlen = Number.parseInt( this.maxlength, 10 );\n    if ( this.nameStr ) {\n      if ( maxlen > 1 ) {\n        // Valid characters for name\n        const criteria: RegExp = RegExp( '^[a-zA-Z][a-zA-Z\\-.\\' ]*$' );\n        return criteria.test( this.nameStr ) ? null : { 'invalid': true };\n      } else {\n\n        // Only letters for initials\n        const letters: RegExp = RegExp( '[a-zA-Z]*$' );\n        return letters.test( this.nameStr ) ? null : { 'invalidChar': true };\n      }\n    }\n    return null;\n   }\n\n}\n\n    \n\n    \n        \n{{label}}\n\n\n\n  \n    {{_defaultErrMsg.required}}\n  \n  \n    {{_defaultErrMsg.invalid}}\n  \n  \n    {{_defaultErrMsg.invalidChar}}\n  \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '{{label}}      {{_defaultErrMsg.required}}        {{_defaultErrMsg.invalid}}        {{_defaultErrMsg.invalidChar}}  '\n    var COMPONENTS = [{'name': 'AccordionCommonComponent', 'selector': 'common-accordion'},{'name': 'AddressComponent', 'selector': 'common-address'},{'name': 'ButtonComponent', 'selector': 'common-button'},{'name': 'ButtonGroupComponent', 'selector': 'common-button-group'},{'name': 'CaptchaComponent', 'selector': 'common-captcha'},{'name': 'CheckboxComponent', 'selector': 'common-checkbox'},{'name': 'CityComponent', 'selector': 'common-city'},{'name': 'ConfirmTemplateComponent', 'selector': 'common-confirm-template'},{'name': 'ConsentModalComponent', 'selector': 'common-consent-modal'},{'name': 'CoreBreadcrumbComponent', 'selector': 'common-core-breadcrumb'},{'name': 'CountryComponent', 'selector': 'common-country'},{'name': 'DateComponent', 'selector': 'common-date'},{'name': 'DatepickerComponent', 'selector': 'common-datepicker'},{'name': 'DropdownComponent', 'selector': 'common-dropdown'},{'name': 'EmailComponent', 'selector': 'common-email'},{'name': 'ErrorContainerComponent', 'selector': 'common-error-container'},{'name': 'FileUploaderComponent', 'selector': 'common-file-uploader'},{'name': 'FormActionBarComponent', 'selector': 'common-form-action-bar'},{'name': 'FormSubmitBarComponent', 'selector': 'common-form-submit-bar'},{'name': 'FullNameComponent', 'selector': 'common-full-name'},{'name': 'GeocoderInputComponent', 'selector': 'common-geocoder-input'},{'name': 'HeaderComponent', 'selector': 'common-header'},{'name': 'NameComponent', 'selector': 'common-name'},{'name': 'PageFrameworkComponent', 'selector': 'common-page-framework'},{'name': 'PageSectionComponent', 'selector': 'common-page-section'},{'name': 'PasswordComponent', 'selector': 'common-password'},{'name': 'PhnComponent', 'selector': 'common-phn'},{'name': 'PhoneNumberComponent', 'selector': 'common-phone-number'},{'name': 'PostalCodeComponent', 'selector': 'common-postal-code'},{'name': 'ProvinceComponent', 'selector': 'common-province'},{'name': 'RadioComponent', 'selector': 'common-radio'},{'name': 'SampleModalComponent', 'selector': 'common-sample-modal'},{'name': 'SinComponent', 'selector': 'common-sin'},{'name': 'StreetComponent', 'selector': 'common-street'},{'name': 'ThumbnailComponent', 'selector': 'common-thumbnail'},{'name': 'ToggleComponent', 'selector': 'common-toggle'},{'name': 'WizardProgressBarComponent', 'selector': 'common-wizard-progress-bar'},{'name': 'XiconButtonComponent', 'selector': 'common-xicon-button'}];\n    var DIRECTIVES = [{'name': 'DateFieldFormatDirective', 'selector': '[commonDateFieldFormat]'},{'name': 'DuplicateCheckDirective', 'selector': '[commonDuplicateCheck]'},{'name': 'ValidateBcPostalDirective', 'selector': '[commonValidateBcPostal]'},{'name': 'ValidateCityDirective', 'selector': '[commonValidateCity]'},{'name': 'ValidateNameDirective', 'selector': '[commonValidateName]'},{'name': 'ValidatePostalcodeDirective', 'selector': '[commonValidatePostalcode]'},{'name': 'ValidateRegionDirective', 'selector': '[commonValidateRegion]'},{'name': 'ValidateStreetDirective', 'selector': '[commonValidateStreet]'}];\n    var ACTUAL_COMPONENT = {'name': 'NameComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/PageFrameworkComponent.html":{"url":"components/PageFrameworkComponent.html","title":"component - PageFrameworkComponent","body":"\n                   \n\n\n\n\n\n  Components\n  PageFrameworkComponent\n\n\n\n        \n            Info\n        \n        \n            Design Guidelines\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    projects/common/lib/components/page-framework/page-framework.component.ts\n\n\n    \n        Description\n    \n    \n        The \"Page Framework\" is a template to be used on FPCare pages to ensure\nconsistent layout.  It should be used on every page unless there is a good\nexception.\nNote: CommonFormActionBar (and SubmitBar) must come AFTER this element, not\ninside in version 2.0.0 and above.\n\n    \n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n    \n        Example\n    \n    \n                \n                    \nThis will go in the middle column\nSo will this\n This will go in the side column, or tips.\n\n\n                \n    \n\n\n    Metadata\n    \n        \n\n\n            \n                encapsulation\n                ViewEncapsulation.None\n            \n\n\n\n\n\n\n\n\n\n            \n                selector\n                common-page-framework\n            \n\n            \n                styleUrls\n                ./page-framework.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./page-framework.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                layout\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        layout\n                    \n                \n                \n                    \n                        Type :     \"single\" | \"double\" | \"blank\" | \"default\"\n\n                    \n                \n                \n                    \n                        Default value : 'default'\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/page-framework/page-framework.component.ts:29\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/components/page-framework/page-framework.component.ts:31\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n\n\n    \n        Design Guidelines\nLorem ipsum dolor sit amet consectetur adipisicing elit. Sapiente, magnam ipsam. Sit quasi natus architecto rerum unde non provident! Quia nisi facere amet iste mollitia voluptatem non molestias esse optio?\nAperiam fugiat consectetur temporibus, iste repellat, quisquam sapiente nisi distinctio optio, autem nemo tenetur error eum voluptatibus ab accusamus quis voluptatum blanditiis. Quam et ut reprehenderit vitae nobis, at ipsum!\nExercitationem pariatur animi repudiandae corporis obcaecati ratione ducimus beatae quam, nostrum magnam unde numquam quidem cupiditate odit id. Beatae alias molestiae, optio incidunt harum quia voluptates deserunt sequi. Nesciunt, optio.\n\n    \n\n    \n        import { Component, OnInit, Input, ViewEncapsulation } from '@angular/core';\n\n/**\n * The \"Page Framework\" is a template to be used on FPCare pages to ensure\n * consistent layout.  It should be used on every page unless there is a good\n * exception.\n *\n * Note: CommonFormActionBar (and SubmitBar) must come *AFTER* this element, not\n * inside in version 2.0.0 and above.\n *\n * @example\n * \n *        This will go in the middle column\n *        So will this\n *         This will go in the side column, or tips.\n * \n * \n *\n * @export\n */\n@Component({\n  selector: 'common-page-framework',\n  templateUrl: './page-framework.component.html',\n  styleUrls: ['./page-framework.component.scss'],\n  encapsulation: ViewEncapsulation.None,\n})\nexport class PageFrameworkComponent implements OnInit {\n\n  @Input() layout: 'single' | 'double' | 'blank' | 'default' = 'default';\n\n  ngOnInit() {\n  }\n\n}\n\n    \n\n    \n        \n\n  \n    \n      \n        \n      \n    \n    \n      \n        \n      \n    \n  \n\n\n  \n    \n      \n        \n      \n    \n    \n      \n        \n      \n    \n  \n\n    \n      \n        \n          \n        \n      \n    \n\n    \n      \n        \n          \n        \n      \n    \n\n\n\n\n\n\n  \n\n\n\n    \n\n\n\n  \n  \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                                                                                                                                                                                                              '\n    var COMPONENTS = [{'name': 'AccordionCommonComponent', 'selector': 'common-accordion'},{'name': 'AddressComponent', 'selector': 'common-address'},{'name': 'ButtonComponent', 'selector': 'common-button'},{'name': 'ButtonGroupComponent', 'selector': 'common-button-group'},{'name': 'CaptchaComponent', 'selector': 'common-captcha'},{'name': 'CheckboxComponent', 'selector': 'common-checkbox'},{'name': 'CityComponent', 'selector': 'common-city'},{'name': 'ConfirmTemplateComponent', 'selector': 'common-confirm-template'},{'name': 'ConsentModalComponent', 'selector': 'common-consent-modal'},{'name': 'CoreBreadcrumbComponent', 'selector': 'common-core-breadcrumb'},{'name': 'CountryComponent', 'selector': 'common-country'},{'name': 'DateComponent', 'selector': 'common-date'},{'name': 'DatepickerComponent', 'selector': 'common-datepicker'},{'name': 'DropdownComponent', 'selector': 'common-dropdown'},{'name': 'EmailComponent', 'selector': 'common-email'},{'name': 'ErrorContainerComponent', 'selector': 'common-error-container'},{'name': 'FileUploaderComponent', 'selector': 'common-file-uploader'},{'name': 'FormActionBarComponent', 'selector': 'common-form-action-bar'},{'name': 'FormSubmitBarComponent', 'selector': 'common-form-submit-bar'},{'name': 'FullNameComponent', 'selector': 'common-full-name'},{'name': 'GeocoderInputComponent', 'selector': 'common-geocoder-input'},{'name': 'HeaderComponent', 'selector': 'common-header'},{'name': 'NameComponent', 'selector': 'common-name'},{'name': 'PageFrameworkComponent', 'selector': 'common-page-framework'},{'name': 'PageSectionComponent', 'selector': 'common-page-section'},{'name': 'PasswordComponent', 'selector': 'common-password'},{'name': 'PhnComponent', 'selector': 'common-phn'},{'name': 'PhoneNumberComponent', 'selector': 'common-phone-number'},{'name': 'PostalCodeComponent', 'selector': 'common-postal-code'},{'name': 'ProvinceComponent', 'selector': 'common-province'},{'name': 'RadioComponent', 'selector': 'common-radio'},{'name': 'SampleModalComponent', 'selector': 'common-sample-modal'},{'name': 'SinComponent', 'selector': 'common-sin'},{'name': 'StreetComponent', 'selector': 'common-street'},{'name': 'ThumbnailComponent', 'selector': 'common-thumbnail'},{'name': 'ToggleComponent', 'selector': 'common-toggle'},{'name': 'WizardProgressBarComponent', 'selector': 'common-wizard-progress-bar'},{'name': 'XiconButtonComponent', 'selector': 'common-xicon-button'}];\n    var DIRECTIVES = [{'name': 'DateFieldFormatDirective', 'selector': '[commonDateFieldFormat]'},{'name': 'DuplicateCheckDirective', 'selector': '[commonDuplicateCheck]'},{'name': 'ValidateBcPostalDirective', 'selector': '[commonValidateBcPostal]'},{'name': 'ValidateCityDirective', 'selector': '[commonValidateCity]'},{'name': 'ValidateNameDirective', 'selector': '[commonValidateName]'},{'name': 'ValidatePostalcodeDirective', 'selector': '[commonValidatePostalcode]'},{'name': 'ValidateRegionDirective', 'selector': '[commonValidateRegion]'},{'name': 'ValidateStreetDirective', 'selector': '[commonValidateStreet]'}];\n    var ACTUAL_COMPONENT = {'name': 'PageFrameworkComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/PageList.html":{"url":"interfaces/PageList.html","title":"interface - PageList","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  PageList\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/common/lib/services/page-state.service.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        index\n                                \n                                \n                                        isComplete\n                                \n                                \n                                        path\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n            \n    Indexable\n        \n            \n                \n                    \n                        [key: string]:        any\n\n                    \n                \n                        \n                            \n                                Defined in projects/common/lib/services/page-state.service.ts:7\n                            \n                        \n            \n        \n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        index\n                                    \n                                \n                                \n                                    \n                                        index:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        isComplete\n                                    \n                                \n                                \n                                    \n                                        isComplete:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        path\n                                    \n                                \n                                \n                                    \n                                        path:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { Route, Router } from '@angular/router';\n\nexport interface PageList {\n  index: number;\n  path: string;\n  isComplete: boolean;\n  [key: string]: any;\n}\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class PageStateService {\n\n  pageList: PageList[] = [];\n\n  constructor( protected router: Router ) { }\n\n  setPages( arr: Route[],\n            routeListConst: any,\n            fn?: (x: any) => {[key: string]: any} ): PageList[] {\n\n    if ( this.pageList && !this.pageList.length ) {\n\n      const routeConst = Object.keys( routeListConst ).map( x => routeListConst[x] );\n\n      let cnt = 0;\n      this.pageList = arr.filter((itm: any) => !itm.redirectTo)\n        .map((itm: any) => {\n          const val = routeConst.find( x => x.path === itm.path );\n\n          cnt = cnt + 1; // count for indices\n\n          // Page List to be returned\n          let obj = {\n            index: cnt,\n            path: val.path,\n            isComplete: false,\n          };\n\n          if ( fn ) {\n            obj = Object.assign( obj, fn( val ) );\n          }\n          return obj;\n        });\n    }\n    return this.pageList;\n  }\n\n  // Returns index parameter value\n  findIndex( url: string = null ): number {\n    let idx = 0;\n    if ( this.pageList ) {\n      const obj = this._find(url ? url : this.router.url);\n      if ( obj ) {\n        idx = obj.index;\n      }\n    }\n    return idx;\n  }\n\n  getPageAtIndex( idx: number ): PageList  | null {\n    const index = idx - 1;\n    if ( this.pageList && index >= 0 && this.pageList.length > index ) {\n      return this.pageList[index];\n    }\n    return null;\n  }\n\n  setPageIncomplete( url: string = null ) {\n    const obj = this._find(url ? url : this.router.url);\n    if ( obj ) {\n      obj.isComplete = false;\n      // Set future pages to not complete\n      this.pageList.map( x => {\n        if ( obj.index  {\n        x.isComplete = false;\n    });\n  }\n\n\n  pageListIsClear(): boolean {\n    let isClear = true;\n    if ( this.pageList.length > 0 ) {\n      isClear = this.pageList.every( x  => x.isComplete === false );\n    }\n    return isClear;\n  }\n\n\n  // Redirect\n  navigateByUrl( path: string ) {\n    this.router.navigateByUrl( path );\n  }\n\n  // Find item in list\n  private _find( path: string ) {\n    return this.pageList.find( x => path.includes(x.path) || path.endsWith(x.path));\n  }\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/PageListInterface.html":{"url":"interfaces/PageListInterface.html","title":"interface - PageListInterface","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  PageListInterface\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/common/lib/services/check-complete-base.service.ts\n        \n\n            \n                Description\n            \n            \n                Interface for used when checking completeness of item\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        isComplete\n                                \n                                \n                                        route\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n            \n    Indexable\n        \n            \n                \n                    \n                        [key: string]:        any\n\n                    \n                \n                        \n                            \n                                Defined in projects/common/lib/services/check-complete-base.service.ts:16\n                            \n                        \n            \n        \n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        isComplete\n                                    \n                                \n                                \n                                    \n                                        isComplete:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        route\n                                    \n                                \n                                \n                                    \n                                        route:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Router } from '@angular/router';\nimport { AbstractPgCheckService } from './abstract-pg-check.service';\nimport { Injectable } from '@angular/core';\n\n/* TODO: Revise - does not work quite correct when there is no landing page.\n * @depreciated\n */\n\n\n\n/**\n * Interface for used when checking completeness of item\n */\nexport interface PageListInterface {\n  route: string;\n  isComplete: boolean;\n  [key: string]: any;\n}\n\n/**\n * Extend this class when creating a service to create your custom Route Guard\n * logic.  This class should work as-is for simple use-cases.  For Route Guard\n * setup @see RouteGuardService.\n *\n * @see RouteGuardService\n */\n@Injectable({\n  providedIn: 'root'\n})\nexport class CheckCompleteBaseService implements AbstractPgCheckService {\n\n  public pageCheckList: PageListInterface [] = [];\n\n  private _startUrl: string = '';\n  private _bypassGuards: boolean = false;\n\n  constructor( protected router: Router ) {}\n\n  set startUrl( url: string ) {\n    this._startUrl = url;\n  }\n\n  set bypassGuards( bypass: boolean) {\n    this._bypassGuards = bypass;\n  }\n\n  public canBypassGuards(): boolean {\n    return this._bypassGuards;\n  }\n\n  public getStartUrl(): string {\n    return this._startUrl;\n  }\n\n  /** Any prerequisites that need list of pages */\n  public isPrerequisiteComplete(): boolean {\n    return !this.isPageListEmpty();\n  }\n\n  /**\n   *  Sets page to not be completed, so applicants cannot complete application out of sequence\n   */\n  public setPageIncomplete(): void {\n    const idx = this.getUrlIndex( this.router.url );\n    if ( !this.isPageListEmpty() ) { // Check guards could be turned off in dev environment\n      this.pageCheckList = this.pageCheckList.map((item, index) => {\n        if (index >= idx) {\n          item.isComplete = false;\n        }\n        return item;\n      });\n    }\n  }\n\n  /**\n   * Sets the page to completed, allowing applicant to proceed to next page.\n   */\n  public setPageComplete(): void {\n    const idx = this.getUrlIndex( this.router.url );\n    if ( !this.isPageListEmpty() ) { // Check guards could be turned in dev environment\n      this.pageCheckList[idx].isComplete = true;\n    }\n  }\n\n  /**\n   * Indicates whether page has been completed or not.\n   */\n  public isPageComplete( url: string ): boolean {\n\n    const idx = this.getUrlIndex( url );\n\n    // returns previous items isComplete value\n    return (idx - 1 >= 0) ? this.pageCheckList[idx - 1].isComplete : true;\n  }\n\n  /**\n   * Check for incomplete pages\n   */\n  public isComplete(): boolean {\n    const incompletePages = this.pageCheckList.filter( x => x.isComplete !== true );\n    return (incompletePages.length !== 0 ? false : true );\n  }\n\n  /**\n   * Index of URL in the items list, -1 if not exist\n   */\n  protected getUrlIndex( url: string ): number {\n    return this.pageCheckList.findIndex( x => url.includes( x.route ) );\n  }\n\n  protected isPageListEmpty() {\n    return ( this.pageCheckList.length === 0 );\n  }\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/PageSectionComponent.html":{"url":"components/PageSectionComponent.html","title":"component - PageSectionComponent","body":"\n                   \n\n\n\n\n\n  Components\n  PageSectionComponent\n\n\n\n        \n            Info\n        \n        \n            Design Guidelines\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    projects/common/lib/components/page-section/page-section.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n            \n                encapsulation\n                ViewEncapsulation.None\n            \n\n\n\n\n\n\n\n\n\n            \n                selector\n                common-page-section\n            \n\n            \n                styleUrls\n                ./page-section.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./page-section.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                layout\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in projects/common/lib/components/page-section/page-section.component.ts:17\n                            \n                        \n\n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        layout\n                    \n                \n                \n                    \n                        Type :     \"double\" | \"tips\" | \"noTips\"\n\n                    \n                \n                \n                    \n                        Default value : 'tips'\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/page-section/page-section.component.ts:17\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/components/page-section/page-section.component.ts:21\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n\n\n    \n        Design Guidelines\nLorem ipsum dolor sit amet consectetur adipisicing elit. Sapiente, magnam ipsam. Sit quasi natus architecto rerum unde non provident! Quia nisi facere amet iste mollitia voluptatem non molestias esse optio?\nAperiam fugiat consectetur temporibus, iste repellat, quisquam sapiente nisi distinctio optio, autem nemo tenetur error eum voluptatibus ab accusamus quis voluptatum blanditiis. Quam et ut reprehenderit vitae nobis, at ipsum!\nExercitationem pariatur animi repudiandae corporis obcaecati ratione ducimus beatae quam, nostrum magnam unde numquam quidem cupiditate odit id. Beatae alias molestiae, optio incidunt harum quia voluptates deserunt sequi. Nesciunt, optio.\n\n    \n\n    \n        import { Component, OnInit, Input, ViewEncapsulation } from '@angular/core';\n\n// IMPROVEMENT: Add a 'flex' @Input(), that adds display flex.  Importantly, it\n// must set flex on the wrapper/row divs in the html.  There are some cases\n// (like SiteReg) where having flex layout is beneficial.  My first suggestion\n// was to simply style the , but the problem is that we\n// need flex on the child elements of page-section (that still wrap ng-content).\n\n@Component({\n  selector: 'common-page-section',\n  templateUrl: './page-section.component.html',\n  styleUrls: ['./page-section.component.scss'],\n  encapsulation: ViewEncapsulation.None\n})\nexport class PageSectionComponent implements OnInit {\n\n  @Input() layout: 'double' | 'tips' | 'noTips' = 'tips';\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n\n    \n\n    \n        \n\n  \n    \n      \n    \n    \n      \n    \n  \n\n  \n    \n      \n    \n    \n      \n    \n  \n\n  \n      \n      \n    \n  \n\n\n\n\n\n  \n\n\n\n  \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                                                                        '\n    var COMPONENTS = [{'name': 'AccordionCommonComponent', 'selector': 'common-accordion'},{'name': 'AddressComponent', 'selector': 'common-address'},{'name': 'ButtonComponent', 'selector': 'common-button'},{'name': 'ButtonGroupComponent', 'selector': 'common-button-group'},{'name': 'CaptchaComponent', 'selector': 'common-captcha'},{'name': 'CheckboxComponent', 'selector': 'common-checkbox'},{'name': 'CityComponent', 'selector': 'common-city'},{'name': 'ConfirmTemplateComponent', 'selector': 'common-confirm-template'},{'name': 'ConsentModalComponent', 'selector': 'common-consent-modal'},{'name': 'CoreBreadcrumbComponent', 'selector': 'common-core-breadcrumb'},{'name': 'CountryComponent', 'selector': 'common-country'},{'name': 'DateComponent', 'selector': 'common-date'},{'name': 'DatepickerComponent', 'selector': 'common-datepicker'},{'name': 'DropdownComponent', 'selector': 'common-dropdown'},{'name': 'EmailComponent', 'selector': 'common-email'},{'name': 'ErrorContainerComponent', 'selector': 'common-error-container'},{'name': 'FileUploaderComponent', 'selector': 'common-file-uploader'},{'name': 'FormActionBarComponent', 'selector': 'common-form-action-bar'},{'name': 'FormSubmitBarComponent', 'selector': 'common-form-submit-bar'},{'name': 'FullNameComponent', 'selector': 'common-full-name'},{'name': 'GeocoderInputComponent', 'selector': 'common-geocoder-input'},{'name': 'HeaderComponent', 'selector': 'common-header'},{'name': 'NameComponent', 'selector': 'common-name'},{'name': 'PageFrameworkComponent', 'selector': 'common-page-framework'},{'name': 'PageSectionComponent', 'selector': 'common-page-section'},{'name': 'PasswordComponent', 'selector': 'common-password'},{'name': 'PhnComponent', 'selector': 'common-phn'},{'name': 'PhoneNumberComponent', 'selector': 'common-phone-number'},{'name': 'PostalCodeComponent', 'selector': 'common-postal-code'},{'name': 'ProvinceComponent', 'selector': 'common-province'},{'name': 'RadioComponent', 'selector': 'common-radio'},{'name': 'SampleModalComponent', 'selector': 'common-sample-modal'},{'name': 'SinComponent', 'selector': 'common-sin'},{'name': 'StreetComponent', 'selector': 'common-street'},{'name': 'ThumbnailComponent', 'selector': 'common-thumbnail'},{'name': 'ToggleComponent', 'selector': 'common-toggle'},{'name': 'WizardProgressBarComponent', 'selector': 'common-wizard-progress-bar'},{'name': 'XiconButtonComponent', 'selector': 'common-xicon-button'}];\n    var DIRECTIVES = [{'name': 'DateFieldFormatDirective', 'selector': '[commonDateFieldFormat]'},{'name': 'DuplicateCheckDirective', 'selector': '[commonDuplicateCheck]'},{'name': 'ValidateBcPostalDirective', 'selector': '[commonValidateBcPostal]'},{'name': 'ValidateCityDirective', 'selector': '[commonValidateCity]'},{'name': 'ValidateNameDirective', 'selector': '[commonValidateName]'},{'name': 'ValidatePostalcodeDirective', 'selector': '[commonValidatePostalcode]'},{'name': 'ValidateRegionDirective', 'selector': '[commonValidateRegion]'},{'name': 'ValidateStreetDirective', 'selector': '[commonValidateStreet]'}];\n    var ACTUAL_COMPONENT = {'name': 'PageSectionComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/PageStateService.html":{"url":"injectables/PageStateService.html","title":"injectable - PageStateService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  PageStateService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/common/lib/services/page-state.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                pageList\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                _find\n                            \n                            \n                                canNavigateToPage\n                            \n                            \n                                clearCompletePages\n                            \n                            \n                                findIndex\n                            \n                            \n                                getPageAtIndex\n                            \n                            \n                                navigateByUrl\n                            \n                            \n                                pageListIsClear\n                            \n                            \n                                setPageComplete\n                            \n                            \n                                setPageIncomplete\n                            \n                            \n                                setPages\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(router: Router)\n                    \n                \n                        \n                            \n                                Defined in projects/common/lib/services/page-state.service.ts:16\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            _find\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    _find(path: string)\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/services/page-state.service.ts:124\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    path\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            canNavigateToPage\n                        \n                        \n                    \n                \n            \n            \n                \ncanNavigateToPage(path: string)\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/services/page-state.service.ts:91\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                \n                            \n                            \n                                \n                                    path\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        null\n                                    \n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            clearCompletePages\n                        \n                        \n                    \n                \n            \n            \n                \nclearCompletePages()\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/services/page-state.service.ts:102\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            findIndex\n                        \n                        \n                    \n                \n            \n            \n                \nfindIndex(url: string)\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/services/page-state.service.ts:52\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                \n                            \n                            \n                                \n                                    url\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        null\n                                    \n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         number\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getPageAtIndex\n                        \n                        \n                    \n                \n            \n            \n                \ngetPageAtIndex(idx: number)\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/services/page-state.service.ts:63\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    idx\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         PageList | null\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            navigateByUrl\n                        \n                        \n                    \n                \n            \n            \n                \nnavigateByUrl(path: string)\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/services/page-state.service.ts:119\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    path\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            pageListIsClear\n                        \n                        \n                    \n                \n            \n            \n                \npageListIsClear()\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/services/page-state.service.ts:109\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         boolean\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            setPageComplete\n                        \n                        \n                    \n                \n            \n            \n                \nsetPageComplete(path: string)\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/services/page-state.service.ts:84\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                \n                            \n                            \n                                \n                                    path\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        null\n                                    \n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            setPageIncomplete\n                        \n                        \n                    \n                \n            \n            \n                \nsetPageIncomplete(url: string)\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/services/page-state.service.ts:71\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                \n                            \n                            \n                                \n                                    url\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        null\n                                    \n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            setPages\n                        \n                        \n                    \n                \n            \n            \n                \nsetPages(arr: Route[], routeListConst: any, fn?: (x?: any) => void)\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/services/page-state.service.ts:20\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    arr\n                                    \n                                            Route[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    routeListConst\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    fn\n                                    \n                                                function\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         PageList[]\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            pageList\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         PageList[]\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in projects/common/lib/services/page-state.service.ts:16\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { Route, Router } from '@angular/router';\n\nexport interface PageList {\n  index: number;\n  path: string;\n  isComplete: boolean;\n  [key: string]: any;\n}\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class PageStateService {\n\n  pageList: PageList[] = [];\n\n  constructor( protected router: Router ) { }\n\n  setPages( arr: Route[],\n            routeListConst: any,\n            fn?: (x: any) => {[key: string]: any} ): PageList[] {\n\n    if ( this.pageList && !this.pageList.length ) {\n\n      const routeConst = Object.keys( routeListConst ).map( x => routeListConst[x] );\n\n      let cnt = 0;\n      this.pageList = arr.filter((itm: any) => !itm.redirectTo)\n        .map((itm: any) => {\n          const val = routeConst.find( x => x.path === itm.path );\n\n          cnt = cnt + 1; // count for indices\n\n          // Page List to be returned\n          let obj = {\n            index: cnt,\n            path: val.path,\n            isComplete: false,\n          };\n\n          if ( fn ) {\n            obj = Object.assign( obj, fn( val ) );\n          }\n          return obj;\n        });\n    }\n    return this.pageList;\n  }\n\n  // Returns index parameter value\n  findIndex( url: string = null ): number {\n    let idx = 0;\n    if ( this.pageList ) {\n      const obj = this._find(url ? url : this.router.url);\n      if ( obj ) {\n        idx = obj.index;\n      }\n    }\n    return idx;\n  }\n\n  getPageAtIndex( idx: number ): PageList  | null {\n    const index = idx - 1;\n    if ( this.pageList && index >= 0 && this.pageList.length > index ) {\n      return this.pageList[index];\n    }\n    return null;\n  }\n\n  setPageIncomplete( url: string = null ) {\n    const obj = this._find(url ? url : this.router.url);\n    if ( obj ) {\n      obj.isComplete = false;\n      // Set future pages to not complete\n      this.pageList.map( x => {\n        if ( obj.index  {\n        x.isComplete = false;\n    });\n  }\n\n\n  pageListIsClear(): boolean {\n    let isClear = true;\n    if ( this.pageList.length > 0 ) {\n      isClear = this.pageList.every( x  => x.isComplete === false );\n    }\n    return isClear;\n  }\n\n\n  // Redirect\n  navigateByUrl( path: string ) {\n    this.router.navigateByUrl( path );\n  }\n\n  // Find item in list\n  private _find( path: string ) {\n    return this.pageList.find( x => path.includes(x.path) || path.endsWith(x.path));\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/PasswordComponent.html":{"url":"components/PasswordComponent.html","title":"component - PasswordComponent","body":"\n                   \n\n\n\n\n\n  Components\n  PasswordComponent\n\n\n\n        \n            Info\n        \n        \n            Design Guidelines\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    projects/common/lib/components/password/password.component.ts\n\n\n    \n        Description\n    \n    \n        PasswordComponent is a text input for a user's password. It includes:\n\nA password strength bar\nMinimum length validations\n\nNote - if your application has requirements to check things like username is not\npresent in password, we recommend doing this in the (passwordChange) callback.\n\n    \n\n    \n        Extends\n    \n    \n                Base\n    \n\n    \n        Implements\n    \n    \n                    OnInit\n                    OnChanges\n    \n\n    \n        Example\n    \n    \n                \n                    \n                \n    \n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                common-password\n            \n\n            \n                styleUrls\n                ./password.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./password.component.html\n            \n\n            \n                viewProviders\n                \n                    \n                                { provide: ControlContainer, useExisting: forwardRef(() => NgForm) }\n                    \n                \n            \n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                criteriaMsg\n                            \n                            \n                                    Public\n                                errMsg\n                            \n                            \n                                    Public\n                                hideValue\n                            \n                            \n                                    Private\n                                minLenMsgSeg1\n                            \n                            \n                                    Private\n                                minLenMsgSeg2\n                            \n                            \n                                    Public\n                                pswdStrength\n                            \n                            \n                                    Private\n                                requiredMsgSeg\n                            \n                            \n                                    Public\n                                strengthPercentage\n                            \n                            \n                                    Public\n                                objectId\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                getPasswordStrength\n                            \n                            \n                                ngOnChanges\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                onInputBlur\n                            \n                            \n                                setPassword\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                errorMessages\n                            \n                            \n                                isDisabled\n                            \n                            \n                                isRequired\n                            \n                            \n                                label\n                            \n                            \n                                maxLen\n                            \n                            \n                                minLen\n                            \n                            \n                                objectID\n                            \n                            \n                                password\n                            \n                            \n                                pwdCriteria\n                            \n                            \n                                showPasswordStrength\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                blurEvent\n                            \n                            \n                                passwordChange\n                            \n                        \n                    \n                \n\n\n                \n                    \n                        HostListeners\n                    \n                \n                \n                    \n                        \n                            \n                                document:paste\n                            \n                        \n                    \n                \n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in projects/common/lib/components/password/password.component.ts:85\n                            \n                        \n\n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        errorMessages\n                    \n                \n                \n                    \n                        Type :         PasswordErrorMsg\n\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/password/password.component.ts:65\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        isDisabled\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/password/password.component.ts:60\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        isRequired\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : true\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/password/password.component.ts:59\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        label\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'Password'\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/password/password.component.ts:58\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        maxLen\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : '32'\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/password/password.component.ts:64\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        minLen\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : '8'\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/password/password.component.ts:63\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        objectID\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'password_' + this.objectId\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/password/password.component.ts:67\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        password\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/password/password.component.ts:61\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        pwdCriteria\n                    \n                \n                \n                    \n                        Type :     string | RegExp\n\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/password/password.component.ts:62\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        showPasswordStrength\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/password/password.component.ts:66\n                            \n                        \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        blurEvent\n                    \n                \n                \n                    \n                        Type :         EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/password/password.component.ts:72\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        passwordChange\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/password/password.component.ts:71\n                            \n                        \n            \n        \n\n\n    \n    HostListeners    \n        \n            \n                \n                    \n                    \n                        \n                            document:paste\n                        \n                        \n                    \n                \n            \n            \n                \n                    Arguments : '$event' \n                \n            \n            \n                \ndocument:paste(event)\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/components/password/password.component.ts:142\n                \n            \n\n\n        \n    \n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            getPasswordStrength\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getPasswordStrength(password: string)\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/components/password/password.component.ts:157\n                \n            \n\n\n            \n                \n                    Get the strength of the password\n0 = too guessable: risky password. (guesses = 10^10)  https://github.com/dropbox/zxcvbn\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    password\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         number\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnChanges\n                        \n                        \n                    \n                \n            \n            \n                \nngOnChanges(changes)\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/components/password/password.component.ts:118\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    changes\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/components/password/password.component.ts:92\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            onInputBlur\n                        \n                        \n                    \n                \n            \n            \n                \nonInputBlur($event)\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/components/password/password.component.ts:135\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    $event\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            setPassword\n                        \n                        \n                    \n                \n            \n            \n                \nsetPassword(password: string)\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/components/password/password.component.ts:131\n                \n            \n\n\n            \n                \n                    Passes the value entered back to the calling component\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    password\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        value the was entered by\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            criteriaMsg\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : ' contains invalid characters.'\n                        \n                    \n                        \n                            \n                                    Defined in projects/common/lib/components/password/password.component.ts:85\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            errMsg\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         PasswordErrorMsg\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/common/lib/components/password/password.component.ts:79\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            hideValue\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : true\n                        \n                    \n                        \n                            \n                                    Defined in projects/common/lib/components/password/password.component.ts:75\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            minLenMsgSeg1\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : ' must be at least '\n                        \n                    \n                        \n                            \n                                    Defined in projects/common/lib/components/password/password.component.ts:83\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            minLenMsgSeg2\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : ' characters in length.'\n                        \n                    \n                        \n                            \n                                    Defined in projects/common/lib/components/password/password.component.ts:84\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            pswdStrength\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/common/lib/components/password/password.component.ts:76\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            requiredMsgSeg\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : ' is required.'\n                        \n                    \n                        \n                            \n                                    Defined in projects/common/lib/components/password/password.component.ts:82\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            strengthPercentage\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Default value : 0\n                        \n                    \n                        \n                            \n                                    Defined in projects/common/lib/components/password/password.component.ts:77\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            objectId\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : UUID.UUID()\n                        \n                    \n                            \n                                \n                                    Inherited from         Base\n\n                                \n                            \n                        \n                            \n                                    Defined in         Base:11\n\n                            \n                        \n\n                \n                    \n                        An identifier for parents to keep track of components \n\n                    \n                \n\n            \n        \n\n\n\n\n    \n        Design Guidelines\nLorem ipsum dolor sit amet consectetur adipisicing elit. Sapiente, magnam ipsam. Sit quasi natus architecto rerum unde non provident! Quia nisi facere amet iste mollitia voluptatem non molestias esse optio?\nAperiam fugiat consectetur temporibus, iste repellat, quisquam sapiente nisi distinctio optio, autem nemo tenetur error eum voluptatibus ab accusamus quis voluptatum blanditiis. Quam et ut reprehenderit vitae nobis, at ipsum!\nExercitationem pariatur animi repudiandae corporis obcaecati ratione ducimus beatae quam, nostrum magnam unde numquam quidem cupiditate odit id. Beatae alias molestiae, optio incidunt harum quia voluptates deserunt sequi. Nesciunt, optio.\n\n    \n\n    \n        import { Component, OnInit, Input, Output, EventEmitter, HostListener, OnChanges, Directive, forwardRef } from '@angular/core';\nimport { Base } from '../../models/base';\nimport { ControlContainer, NgForm } from '@angular/forms';\nimport * as zxcvbn_ from 'zxcvbn';\n// Awkward necessary workaround due to bug in build tools\n// https://github.com/jvandemo/generator-angular2-library/issues/221#issuecomment-355945207\nconst zxcvbn = zxcvbn_;\n\n\n/**\n * TODO:  Convert to custom form control - remove ngForm\n */\n/**\n * Interface for passing in error messages\n * Example:\n *  errorMessages = {\n *       required: this.componentLabel + ' is required.',\n *       minLength: this.componentLabel + ' must be ' + this.minLen + ' characters.',\n *       criteria: this.componentLabel + ' does not meet password criteria.'\n *     }\n */\nexport interface PasswordErrorMsg {\n  required?: string;\n  minLength?: string;\n  criteria?: string;\n}\n/**\n * PasswordComponent is a text input for a user's password. It includes:\n *\n * - A password strength bar\n * - Minimum length validations\n *\n * Note - if your application has requirements to check things like username is not\n * present in password, we recommend doing this in the (passwordChange) callback.\n *\n * @example\n *       \n *\n * @export\n */\n@Component({\n  selector: 'common-password',\n  templateUrl: './password.component.html',\n  styleUrls: ['./password.component.scss'],\n  /* Re-use the same ngForm that it's parent is using. The component will show\n   * up in its parents `this.form`, and will auto-update `this.form.valid`\n   */\n  viewProviders: [ { provide: ControlContainer, useExisting: forwardRef(() => NgForm ) } ]\n})\nexport class PasswordComponent extends Base implements OnInit, OnChanges {\n\n  // Inputs for the component\n  @Input() label: string = 'Password';\n  @Input() isRequired: boolean = true;\n  @Input() isDisabled: boolean = false;\n  @Input() password: string;\n  @Input() pwdCriteria: string | RegExp;\n  @Input() minLen: string  = '8';\n  @Input() maxLen: string  = '32';\n  @Input() errorMessages: PasswordErrorMsg;\n  @Input() showPasswordStrength: boolean = false;\n  @Input() objectID: string = 'password_' + this.objectId;\n\n\n  // Output from the component\n  @Output() passwordChange: EventEmitter = new EventEmitter();\n  @Output() blurEvent = new EventEmitter();\n\n  // Flag for the fa-eye to show or hide password\n  public hideValue = true;\n  public pswdStrength: number;\n  public strengthPercentage = 0;\n\n  public errMsg: PasswordErrorMsg;\n\n  // default messages\n  private requiredMsgSeg: string = ' is required.';\n  private minLenMsgSeg1: string = ' must be at least ';\n  private minLenMsgSeg2: string = ' characters in length.';\n  private criteriaMsg: string = ' contains invalid characters.';\n\n\n  constructor() {\n    super();\n  }\n\n  ngOnInit() {\n\n    // Set default messages\n    this.errMsg =    {\n      required: this.label + this.requiredMsgSeg,\n      minLength: this.label + this.minLenMsgSeg1 + this.minLen + this.minLenMsgSeg2,\n      criteria: this.label + this.criteriaMsg\n    };\n\n    // Replace default message if provided\n    if ( this.errorMessages ) {\n\n      if ( this.errorMessages.required ) {\n        this.errMsg.required = this.errorMessages.required;\n      }\n\n      if ( this.errorMessages.minLength ) {\n        this.errMsg.minLength = this.errorMessages.minLength;\n      }\n\n      if ( this.errorMessages.criteria ) {\n        this.errMsg.criteria = this.errorMessages.criteria;\n      }\n    }\n  }\n\n  ngOnChanges(changes) {\n    if (changes.password && this.password) {\n\n      // Check strength of password\n      this.pswdStrength = this.getPasswordStrength( this.password );\n      this.strengthPercentage = ((this.pswdStrength + 1) / 5 ) * 100;\n    }\n  }\n\n  /**\n   * Passes the value entered back to the calling component\n   * @param password value the was entered by\n   */\n  setPassword( password: string ) {\n    this.passwordChange.emit( password );\n  }\n\n  onInputBlur($event) {\n    console.log( 'onBlur: ', event );\n    this.blurEvent.emit( event );\n  }\n\n  // Prevent user from pasting data into the text box\n  @HostListener( 'document:paste', ['$event'] )\n  onPaste( event ) {\n      return false;\n  }\n\n  /**\n   * Get the strength of the password\n\n   *    0 = too guessable: risky password. (guesses = 10^10)\n   *\n   *  https://github.com/dropbox/zxcvbn\n   */\n  private getPasswordStrength( password: string ): number {\n    // Password strength feedback\n    const pswdFeedback = zxcvbn( password );\n    return pswdFeedback.score;\n  }\n}\n\n    \n\n    \n        {{label}}\n\n\n\n\n  \n    = 4? 'bg-success' : (pswdStrength >= 3? 'bg-warning' : 'bg-danger')}}\"\n        role=\"progressbar\"\n        [style.width]='strengthPercentage + \"%\"'\n        [attr.aria-valuenow]=\"strengthPercentage\"\n        aria-valuemin=\"0\"\n        aria-valuemax=\"100\">\n    \n  \n  = 4? 'text-success' : (pswdStrength >= 3? 'text-warning' : 'text-danger')}}\">\n\n\n\n  \n    {{errMsg.required}}\n  \n  \n      {{errMsg.minLength}}\n  \n  \n      {{errMsg.criteria}}\n  \n\n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '{{label}}      = 4? \\'bg-success\\' : (pswdStrength >= 3? \\'bg-warning\\' : \\'bg-danger\\')}}\"        role=\"progressbar\"        [style.width]=\\'strengthPercentage + \"%\"\\'        [attr.aria-valuenow]=\"strengthPercentage\"        aria-valuemin=\"0\"        aria-valuemax=\"100\">        = 4? \\'text-success\\' : (pswdStrength >= 3? \\'text-warning\\' : \\'text-danger\\')}}\">      {{errMsg.required}}          {{errMsg.minLength}}          {{errMsg.criteria}}  '\n    var COMPONENTS = [{'name': 'AccordionCommonComponent', 'selector': 'common-accordion'},{'name': 'AddressComponent', 'selector': 'common-address'},{'name': 'ButtonComponent', 'selector': 'common-button'},{'name': 'ButtonGroupComponent', 'selector': 'common-button-group'},{'name': 'CaptchaComponent', 'selector': 'common-captcha'},{'name': 'CheckboxComponent', 'selector': 'common-checkbox'},{'name': 'CityComponent', 'selector': 'common-city'},{'name': 'ConfirmTemplateComponent', 'selector': 'common-confirm-template'},{'name': 'ConsentModalComponent', 'selector': 'common-consent-modal'},{'name': 'CoreBreadcrumbComponent', 'selector': 'common-core-breadcrumb'},{'name': 'CountryComponent', 'selector': 'common-country'},{'name': 'DateComponent', 'selector': 'common-date'},{'name': 'DatepickerComponent', 'selector': 'common-datepicker'},{'name': 'DropdownComponent', 'selector': 'common-dropdown'},{'name': 'EmailComponent', 'selector': 'common-email'},{'name': 'ErrorContainerComponent', 'selector': 'common-error-container'},{'name': 'FileUploaderComponent', 'selector': 'common-file-uploader'},{'name': 'FormActionBarComponent', 'selector': 'common-form-action-bar'},{'name': 'FormSubmitBarComponent', 'selector': 'common-form-submit-bar'},{'name': 'FullNameComponent', 'selector': 'common-full-name'},{'name': 'GeocoderInputComponent', 'selector': 'common-geocoder-input'},{'name': 'HeaderComponent', 'selector': 'common-header'},{'name': 'NameComponent', 'selector': 'common-name'},{'name': 'PageFrameworkComponent', 'selector': 'common-page-framework'},{'name': 'PageSectionComponent', 'selector': 'common-page-section'},{'name': 'PasswordComponent', 'selector': 'common-password'},{'name': 'PhnComponent', 'selector': 'common-phn'},{'name': 'PhoneNumberComponent', 'selector': 'common-phone-number'},{'name': 'PostalCodeComponent', 'selector': 'common-postal-code'},{'name': 'ProvinceComponent', 'selector': 'common-province'},{'name': 'RadioComponent', 'selector': 'common-radio'},{'name': 'SampleModalComponent', 'selector': 'common-sample-modal'},{'name': 'SinComponent', 'selector': 'common-sin'},{'name': 'StreetComponent', 'selector': 'common-street'},{'name': 'ThumbnailComponent', 'selector': 'common-thumbnail'},{'name': 'ToggleComponent', 'selector': 'common-toggle'},{'name': 'WizardProgressBarComponent', 'selector': 'common-wizard-progress-bar'},{'name': 'XiconButtonComponent', 'selector': 'common-xicon-button'}];\n    var DIRECTIVES = [{'name': 'DateFieldFormatDirective', 'selector': '[commonDateFieldFormat]'},{'name': 'DuplicateCheckDirective', 'selector': '[commonDuplicateCheck]'},{'name': 'ValidateBcPostalDirective', 'selector': '[commonValidateBcPostal]'},{'name': 'ValidateCityDirective', 'selector': '[commonValidateCity]'},{'name': 'ValidateNameDirective', 'selector': '[commonValidateName]'},{'name': 'ValidatePostalcodeDirective', 'selector': '[commonValidatePostalcode]'},{'name': 'ValidateRegionDirective', 'selector': '[commonValidateRegion]'},{'name': 'ValidateStreetDirective', 'selector': '[commonValidateStreet]'}];\n    var ACTUAL_COMPONENT = {'name': 'PasswordComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/PasswordErrorMsg.html":{"url":"interfaces/PasswordErrorMsg.html","title":"interface - PasswordErrorMsg","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  PasswordErrorMsg\n\n\n\n        \n            Info\n        \n        \n            Design Guidelines\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/common/lib/components/password/password.component.ts\n        \n\n            \n                Description\n            \n            \n                TODO:  Convert to custom form control - remove ngForm\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        criteria\n                                \n                                \n                                            Optional\n                                        minLength\n                                \n                                \n                                            Optional\n                                        required\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        criteria\n                                    \n                                \n                                \n                                    \n                                        criteria:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        minLength\n                                    \n                                \n                                \n                                    \n                                        minLength:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        required\n                                    \n                                \n                                \n                                    \n                                        required:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n    \n        Design Guidelines\nLorem ipsum dolor sit amet consectetur adipisicing elit. Sapiente, magnam ipsam. Sit quasi natus architecto rerum unde non provident! Quia nisi facere amet iste mollitia voluptatem non molestias esse optio?\nAperiam fugiat consectetur temporibus, iste repellat, quisquam sapiente nisi distinctio optio, autem nemo tenetur error eum voluptatibus ab accusamus quis voluptatum blanditiis. Quam et ut reprehenderit vitae nobis, at ipsum!\nExercitationem pariatur animi repudiandae corporis obcaecati ratione ducimus beatae quam, nostrum magnam unde numquam quidem cupiditate odit id. Beatae alias molestiae, optio incidunt harum quia voluptates deserunt sequi. Nesciunt, optio.\n\n    \n\n    \n        import { Component, OnInit, Input, Output, EventEmitter, HostListener, OnChanges, Directive, forwardRef } from '@angular/core';\nimport { Base } from '../../models/base';\nimport { ControlContainer, NgForm } from '@angular/forms';\nimport * as zxcvbn_ from 'zxcvbn';\n// Awkward necessary workaround due to bug in build tools\n// https://github.com/jvandemo/generator-angular2-library/issues/221#issuecomment-355945207\nconst zxcvbn = zxcvbn_;\n\n\n/**\n * TODO:  Convert to custom form control - remove ngForm\n */\n/**\n * Interface for passing in error messages\n * Example:\n *  errorMessages = {\n *       required: this.componentLabel + ' is required.',\n *       minLength: this.componentLabel + ' must be ' + this.minLen + ' characters.',\n *       criteria: this.componentLabel + ' does not meet password criteria.'\n *     }\n */\nexport interface PasswordErrorMsg {\n  required?: string;\n  minLength?: string;\n  criteria?: string;\n}\n/**\n * PasswordComponent is a text input for a user's password. It includes:\n *\n * - A password strength bar\n * - Minimum length validations\n *\n * Note - if your application has requirements to check things like username is not\n * present in password, we recommend doing this in the (passwordChange) callback.\n *\n * @example\n *       \n *\n * @export\n */\n@Component({\n  selector: 'common-password',\n  templateUrl: './password.component.html',\n  styleUrls: ['./password.component.scss'],\n  /* Re-use the same ngForm that it's parent is using. The component will show\n   * up in its parents `this.form`, and will auto-update `this.form.valid`\n   */\n  viewProviders: [ { provide: ControlContainer, useExisting: forwardRef(() => NgForm ) } ]\n})\nexport class PasswordComponent extends Base implements OnInit, OnChanges {\n\n  // Inputs for the component\n  @Input() label: string = 'Password';\n  @Input() isRequired: boolean = true;\n  @Input() isDisabled: boolean = false;\n  @Input() password: string;\n  @Input() pwdCriteria: string | RegExp;\n  @Input() minLen: string  = '8';\n  @Input() maxLen: string  = '32';\n  @Input() errorMessages: PasswordErrorMsg;\n  @Input() showPasswordStrength: boolean = false;\n  @Input() objectID: string = 'password_' + this.objectId;\n\n\n  // Output from the component\n  @Output() passwordChange: EventEmitter = new EventEmitter();\n  @Output() blurEvent = new EventEmitter();\n\n  // Flag for the fa-eye to show or hide password\n  public hideValue = true;\n  public pswdStrength: number;\n  public strengthPercentage = 0;\n\n  public errMsg: PasswordErrorMsg;\n\n  // default messages\n  private requiredMsgSeg: string = ' is required.';\n  private minLenMsgSeg1: string = ' must be at least ';\n  private minLenMsgSeg2: string = ' characters in length.';\n  private criteriaMsg: string = ' contains invalid characters.';\n\n\n  constructor() {\n    super();\n  }\n\n  ngOnInit() {\n\n    // Set default messages\n    this.errMsg =    {\n      required: this.label + this.requiredMsgSeg,\n      minLength: this.label + this.minLenMsgSeg1 + this.minLen + this.minLenMsgSeg2,\n      criteria: this.label + this.criteriaMsg\n    };\n\n    // Replace default message if provided\n    if ( this.errorMessages ) {\n\n      if ( this.errorMessages.required ) {\n        this.errMsg.required = this.errorMessages.required;\n      }\n\n      if ( this.errorMessages.minLength ) {\n        this.errMsg.minLength = this.errorMessages.minLength;\n      }\n\n      if ( this.errorMessages.criteria ) {\n        this.errMsg.criteria = this.errorMessages.criteria;\n      }\n    }\n  }\n\n  ngOnChanges(changes) {\n    if (changes.password && this.password) {\n\n      // Check strength of password\n      this.pswdStrength = this.getPasswordStrength( this.password );\n      this.strengthPercentage = ((this.pswdStrength + 1) / 5 ) * 100;\n    }\n  }\n\n  /**\n   * Passes the value entered back to the calling component\n   * @param password value the was entered by\n   */\n  setPassword( password: string ) {\n    this.passwordChange.emit( password );\n  }\n\n  onInputBlur($event) {\n    console.log( 'onBlur: ', event );\n    this.blurEvent.emit( event );\n  }\n\n  // Prevent user from pasting data into the text box\n  @HostListener( 'document:paste', ['$event'] )\n  onPaste( event ) {\n      return false;\n  }\n\n  /**\n   * Get the strength of the password\n\n   *    0 = too guessable: risky password. (guesses = 10^10)\n   *\n   *  https://github.com/dropbox/zxcvbn\n   */\n  private getPasswordStrength( password: string ): number {\n    // Password strength feedback\n    const pswdFeedback = zxcvbn( password );\n    return pswdFeedback.score;\n  }\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Person.html":{"url":"classes/Person.html","title":"class - Person","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Person\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/common/lib/models/person.model.ts\n        \n\n            \n                Description\n            \n            \n                Person, each project can extend this person class\nNPM package dependencies:\n  a) moment\n\n            \n\n            \n                Extends\n            \n            \n                        Base\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                apiDobFormat\n                            \n                            \n                                    Public\n                                dateOfBirth\n                            \n                            \n                                    Public\n                                dobFormat\n                            \n                            \n                                    Public\n                                firstName\n                            \n                            \n                                    Public\n                                lastName\n                            \n                            \n                                    Public\n                                middleName\n                            \n                            \n                                    Public\n                                objectId\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                copy\n                            \n                            \n                                getAge\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    dateOfBirthShort\n                                \n                                \n                                    formatDateOfBirth\n                                \n                                \n                                    name\n                                \n                                \n                                    fullname\n                                \n                            \n                        \n                    \n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            apiDobFormat\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'yyyyMMdd'\n                        \n                    \n                        \n                            \n                                    Defined in projects/common/lib/models/person.model.ts:19\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            dateOfBirth\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/common/lib/models/person.model.ts:22\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            dobFormat\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'yyyy/MM/dd'\n                        \n                    \n                        \n                            \n                                    Defined in projects/common/lib/models/person.model.ts:18\n                            \n                        \n\n                \n                    \n                        Format to display birthdate \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            firstName\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/common/lib/models/person.model.ts:13\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            lastName\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/common/lib/models/person.model.ts:15\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            middleName\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/common/lib/models/person.model.ts:14\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            objectId\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : UUID.UUID()\n                        \n                    \n                            \n                                \n                                    Inherited from         Base\n\n                                \n                            \n                        \n                            \n                                    Defined in         Base:11\n\n                            \n                        \n\n                \n                    \n                        An identifier for parents to keep track of components \n\n                    \n                \n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            copy\n                        \n                        \n                    \n                \n            \n            \n                \ncopy(object: Person)\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/models/person.model.ts:91\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    object\n                                    \n                                                Person\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getAge\n                        \n                        \n                    \n                \n            \n            \n                \ngetAge()\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/models/person.model.ts:86\n                \n            \n\n\n            \n                \n                    Calculates the age from date of birth \n\n\n                    \n                        Returns :         Number\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        dateOfBirthShort\n                    \n                \n\n                \n                    \n                        getdateOfBirthShort()\n                    \n                \n                            \n                                \n                                    Defined in projects/common/lib/models/person.model.ts:25\n                                \n                            \n                    \n                        \n                                Returns DoB in YYYYMMDD format, used by API. \n\n\n                                \n                                    Returns :         string\n\n                                \n                        \n                    \n\n            \n        \n        \n            \n                \n                    \n                        \n                        formatDateOfBirth\n                    \n                \n\n                \n                    \n                        getformatDateOfBirth()\n                    \n                \n                            \n                                \n                                    Defined in projects/common/lib/models/person.model.ts:30\n                                \n                            \n                    \n                        \n                                Returns DoB in dobFormat (default: YYYY/MM/DD), for display purposes \n\n\n                                \n                                    Returns :         string\n\n                                \n                        \n                    \n\n            \n        \n        \n            \n                \n                    \n                        \n                        name\n                    \n                \n\n                \n                    \n                        getname()\n                    \n                \n                            \n                                \n                                    Defined in projects/common/lib/models/person.model.ts:35\n                                \n                            \n                    \n                        \n                                Concatenates the first and last name together \n\n\n                                \n                                    Returns :         string\n\n                                \n                        \n                    \n\n                \n                    \n                        setname(fullName: string)\n                    \n                \n                            \n                                \n                                    Defined in projects/common/lib/models/person.model.ts:53\n                                \n                            \n                    \n                        \n                                Sets the full name for the person (first, middle and last names)\nNOTE: Just for development with dummy data and unit tests\n\n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                        Type\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                            fullName\n                                                    \n                                                            \n                                                                            string\n                                                            \n                                                    \n                                                        \n                                                                No\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :         void\n\n                                \n                        \n                    \n            \n        \n        \n            \n                \n                    \n                        \n                        fullname\n                    \n                \n\n                \n                    \n                        getfullname()\n                    \n                \n                            \n                                \n                                    Defined in projects/common/lib/models/person.model.ts:67\n                                \n                            \n                    \n                        \n                                Returns the person's full name - first middle last name concatenated together \n\n\n                        \n                    \n\n            \n        \n\n    \n\n\n    \n        import { Base } from './base';\nimport { format, startOfToday, differenceInYears } from 'date-fns';\n\n/**\n * Person, each project can extend this person class\n * NPM package dependencies:\n *  a) moment\n */\nexport class Person extends Base {\n\n  // Parts of a person's name\n  public firstName: string;\n  public middleName: string;\n  public lastName: string;\n\n  /** Format to display birthdate */\n  public dobFormat = 'yyyy/MM/dd';\n  public apiDobFormat = 'yyyyMMdd';\n\n  // Initialize dob to nulls - To be removed\n  public dateOfBirth: Date;\n\n  /** Returns DoB in YYYYMMDD format, used by API. */\n  get dateOfBirthShort(): string {\n    return this.dateOfBirth ? format( this.dateOfBirth, this.apiDobFormat ) : null;\n  }\n\n  /** Returns DoB in dobFormat (default: YYYY/MM/DD), for display purposes */\n  get formatDateOfBirth(): string {\n    return this.dateOfBirth ? format( this.dateOfBirth, this.dobFormat ) : null;\n  }\n\n  /** Concatenates the first and last name together */\n  get name(): string {\n    let _name = null;\n\n    if ( this.firstName ) {\n      _name = this.firstName;\n    }\n\n    if ( this.lastName ) {\n      _name = _name ? _name.concat( ' ' + this.lastName ) : this.lastName;\n    }\n\n    return _name;\n  }\n\n  /**\n   * Sets the full name for the person (first, middle and last names)\n   * NOTE: Just for development with dummy data and unit tests\n   */\n  set name( fullName: string ) {\n\n    const names = fullName.split( ' ') ;\n    this.firstName = names[0];\n\n    if ( names.length === 2 ) {\n      this.lastName = names[1];\n    } else if ( names.length === 3 ) {\n      this.middleName = names[1];\n      this.lastName = names[2];\n    }\n  }\n\n  /** Returns the person's full name - first middle last name concatenated together */\n  get fullname() {\n    let _name = null;\n\n    if ( this.firstName ) {\n      _name = this.firstName;\n    }\n\n    if ( this.middleName ) {\n      _name = _name ? _name.concat( ' ' + this.middleName ) : this.middleName;\n    }\n\n    if ( this.lastName ) {\n      _name = _name ? _name.concat( ' ' + this.lastName ) : this.lastName;\n    }\n\n    return _name;\n  }\n\n  /** Calculates the age from date of birth */\n  getAge(): Number {\n    return differenceInYears( this.dateOfBirth, startOfToday() );\n  }\n\n  /* Copy function */\n  copy( object: Person ) {\n    this.firstName = object.firstName;\n    this.middleName = object.middleName;\n    this.lastName = object.lastName;\n    this.dateOfBirth = object.dateOfBirth;\n  }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/PostalCodeComponent.html":{"url":"components/PostalCodeComponent.html","title":"component - PostalCodeComponent","body":"\n                   \n\n\n\n\n\n  Components\n  PostalCodeComponent\n\n\n\n        \n            Info\n        \n        \n            Design Guidelines\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    projects/common/lib/components/postal-code/postal-code.component.ts\n\n\n\n    \n        Extends\n    \n    \n                Base\n    \n\n    \n        Implements\n    \n    \n                    OnInit\n                    ControlValueAccessor\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                common-postal-code\n            \n\n            \n                styleUrls\n                ./postal-code.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./postal-code.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                _onChange\n                            \n                            \n                                _onTouched\n                            \n                            \n                                    Public\n                                controlDir\n                            \n                            \n                                defaultErrMsg\n                            \n                            \n                                mask\n                            \n                            \n                                postalCode\n                            \n                            \n                                    Public\n                                objectId\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                            \n                                onBlurEvent\n                            \n                            \n                                onValueChange\n                            \n                            \n                                registerOnChange\n                            \n                            \n                                registerOnTouched\n                            \n                            \n                                setDisabledState\n                            \n                            \n                                    Private\n                                setErrorMsg\n                            \n                            \n                                upperCasePipe\n                            \n                            \n                                writeValue\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                disabled\n                            \n                            \n                                displayMask\n                            \n                            \n                                errorMessage\n                            \n                            \n                                label\n                            \n                            \n                                labelforId\n                            \n                            \n                                maxlen\n                            \n                            \n                                value\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                blurEvent\n                            \n                            \n                                valueChange\n                            \n                        \n                    \n                \n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    value\n                                \n                            \n                        \n                    \n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(controlDir: NgControl)\n                    \n                \n                        \n                            \n                                Defined in projects/common/lib/components/postal-code/postal-code.component.ts:48\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        controlDir\n                                                  \n                                                        \n                                                                        NgControl\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        disabled\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/postal-code/postal-code.component.ts:19\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        displayMask\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : true\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/postal-code/postal-code.component.ts:16\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        errorMessage\n                    \n                \n                \n                    \n                        Type :         ErrorMessage\n\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/postal-code/postal-code.component.ts:20\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        label\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'Postal Code'\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/postal-code/postal-code.component.ts:15\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        labelforId\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'postalCode_' + this.objectId\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/postal-code/postal-code.component.ts:18\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        maxlen\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : '250'\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/postal-code/postal-code.component.ts:17\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        value\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/postal-code/postal-code.component.ts:23\n                            \n                        \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        blurEvent\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/postal-code/postal-code.component.ts:35\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        valueChange\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/postal-code/postal-code.component.ts:34\n                            \n                        \n            \n        \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/components/postal-code/postal-code.component.ts:59\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            onBlurEvent\n                        \n                        \n                    \n                \n            \n            \n                \nonBlurEvent(event: any)\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/components/postal-code/postal-code.component.ts:73\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    event\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            onValueChange\n                        \n                        \n                    \n                \n            \n            \n                \nonValueChange(value: any)\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/components/postal-code/postal-code.component.ts:63\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            registerOnChange\n                        \n                        \n                    \n                \n            \n            \n                \nregisterOnChange(fn: any)\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/components/postal-code/postal-code.component.ts:85\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    fn\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            registerOnTouched\n                        \n                        \n                    \n                \n            \n            \n                \nregisterOnTouched(fn: any)\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/components/postal-code/postal-code.component.ts:90\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    fn\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            setDisabledState\n                        \n                        \n                    \n                \n            \n            \n                \nsetDisabledState(isDisabled: boolean)\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/components/postal-code/postal-code.component.ts:94\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    isDisabled\n                                    \n                                                boolean\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            setErrorMsg\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    setErrorMsg()\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/components/postal-code/postal-code.component.ts:105\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            upperCasePipe\n                        \n                        \n                    \n                \n            \n            \n                \nupperCasePipe(text: string)\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/components/postal-code/postal-code.component.ts:101\n                \n            \n\n\n            \n                \n                    Upper cases letters in string\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    text\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            writeValue\n                        \n                        \n                    \n                \n            \n            \n                \nwriteValue(value: any)\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/components/postal-code/postal-code.component.ts:78\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            _onChange\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : () => {...}\n                        \n                    \n                        \n                            \n                                    Defined in projects/common/lib/components/postal-code/postal-code.component.ts:47\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            _onTouched\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : () => {...}\n                        \n                    \n                        \n                            \n                                    Defined in projects/common/lib/components/postal-code/postal-code.component.ts:48\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            controlDir\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         NgControl\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Optional()@Self()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in projects/common/lib/components/postal-code/postal-code.component.ts:50\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            defaultErrMsg\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         ErrorMessage\n\n                        \n                    \n                    \n                        \n                            Default value : {\n    required: 'is required.',\n    invalidChar: 'must contain letters and/or numbers and may include blank characters.',\n    pattern: 'Must be in the format A1A 1A1',\n    invalidBCPostal: 'Invalid postal code for British Columbia.'\n  }\n                        \n                    \n                        \n                            \n                                    Defined in projects/common/lib/components/postal-code/postal-code.component.ts:40\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            mask\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/common/lib/components/postal-code/postal-code.component.ts:38\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            postalCode\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : ''\n                        \n                    \n                        \n                            \n                                    Defined in projects/common/lib/components/postal-code/postal-code.component.ts:37\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            objectId\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : UUID.UUID()\n                        \n                    \n                            \n                                \n                                    Inherited from         Base\n\n                                \n                            \n                        \n                            \n                                    Defined in         Base:11\n\n                            \n                        \n\n                \n                    \n                        An identifier for parents to keep track of components \n\n                    \n                \n\n            \n        \n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        value\n                    \n                \n\n                \n                    \n                        getvalue()\n                    \n                \n                            \n                                \n                                    Defined in projects/common/lib/components/postal-code/postal-code.component.ts:29\n                                \n                            \n\n                \n                    \n                        setvalue(val: string)\n                    \n                \n                            \n                                \n                                    Defined in projects/common/lib/components/postal-code/postal-code.component.ts:23\n                                \n                            \n                    \n                        \n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                        Type\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                            val\n                                                    \n                                                            \n                                                                            string\n                                                            \n                                                    \n                                                        \n                                                                No\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :         void\n\n                                \n                        \n                    \n            \n        \n\n\n\n    \n        Design Guidelines\nLorem ipsum dolor sit amet consectetur adipisicing elit. Sapiente, magnam ipsam. Sit quasi natus architecto rerum unde non provident! Quia nisi facere amet iste mollitia voluptatem non molestias esse optio?\nAperiam fugiat consectetur temporibus, iste repellat, quisquam sapiente nisi distinctio optio, autem nemo tenetur error eum voluptatibus ab accusamus quis voluptatum blanditiis. Quam et ut reprehenderit vitae nobis, at ipsum!\nExercitationem pariatur animi repudiandae corporis obcaecati ratione ducimus beatae quam, nostrum magnam unde numquam quidem cupiditate odit id. Beatae alias molestiae, optio incidunt harum quia voluptates deserunt sequi. Nesciunt, optio.\n\n    \n\n    \n        import { Component, Input, Output, EventEmitter, Optional, Self, OnInit } from '@angular/core';\nimport { ControlValueAccessor, NgControl } from '@angular/forms';\nimport { LETTER, NUMBER, SPACE } from '../../models/mask.constants';\nimport { Base } from '../../models/base';\nimport { ErrorMessage } from '../../../public_api';\n\n\n@Component({\n  selector: 'common-postal-code',\n  templateUrl: './postal-code.component.html',\n  styleUrls: ['./postal-code.component.scss']\n})\nexport class PostalCodeComponent extends Base implements OnInit, ControlValueAccessor  {\n\n  @Input() label: string = 'Postal Code';\n  @Input() displayMask: boolean = true;\n  @Input() maxlen: string = '250';\n  @Input() labelforId: string = 'postalCode_' + this.objectId;\n  @Input() disabled: boolean = false;\n  @Input() errorMessage: ErrorMessage;\n\n  @Input()\n  set value( val: string ) {\n    // console.log( 'set value: ', val );\n    if (val) {\n      this.postalCode = val;\n    }\n  }\n  get value() {\n    // console.log( 'get value: ', this.postalCode );\n    return this.postalCode;\n  }\n\n  @Output() valueChange: EventEmitter = new EventEmitter();\n  @Output() blurEvent: EventEmitter = new EventEmitter();\n\n  postalCode: string = '';\n  mask: any;\n\n  defaultErrMsg: ErrorMessage = {\n    required: 'is required.',\n    invalidChar: 'must contain letters and/or numbers and may include blank characters.',\n    pattern: 'Must be in the format A1A 1A1',\n    invalidBCPostal: 'Invalid postal code for British Columbia.'\n  };\n\n  _onChange = (_: any) => {};\n  _onTouched = (_: any) => {};\n\n  constructor( @Optional() @Self() public controlDir: NgControl ) {\n    super();\n    if ( controlDir ) {\n      controlDir.valueAccessor = this;\n    }\n\n    this.mask = [LETTER, NUMBER, LETTER, SPACE, NUMBER, LETTER, NUMBER];\n  }\n\n  ngOnInit() {\n    this.setErrorMsg();\n  }\n\n  onValueChange( value: any ) {\n     //console.log( 'onValueChange: ', value, this.postalCode );\n\n    if ( value !== this.postalCode ) { // IE fix when focus does not display required error\n      this._onChange( value );\n      this.valueChange.emit( value );\n      this.postalCode = value;\n    }\n  }\n\n  onBlurEvent( event: any ) {\n    this._onTouched( event );\n    this.blurEvent.emit( event );\n  }\n\n  writeValue( value: any ): void {\n    if ( value !== undefined ) {\n      this.postalCode = value;\n    }\n  }\n\n  // Register change functiong\n  registerOnChange( fn: any ): void {\n    this._onChange = fn;\n  }\n\n  // Register touched function\n  registerOnTouched( fn: any ): void {\n    this._onTouched = fn;\n  }\n\n  setDisabledState(isDisabled: boolean): void {\n    this.disabled = isDisabled;\n  }\n\n  /**\n   * Upper cases letters in string\n   */\n  upperCasePipe(text: string) {\n    return text.toUpperCase();\n  }\n\n  private setErrorMsg() {\n    if ( this.errorMessage ) {\n      Object.keys(this.errorMessage).map( x => this.defaultErrMsg[x] = this.errorMessage[x] );\n    }\n  }\n}\n\n    \n\n    \n        {{label}}\n\n\n  \n\n  \n  \n    \n      {{label}} {{defaultErrMsg.required}}\n    \n    \n      {{defaultErrMsg.pattern}}\n    \n    \n      {{defaultErrMsg.invalidBCPostal}}\n    \n    \n    {{label}} {{defaultErrMsg.invalidChar}}\n  \n  \n\n\n  \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '{{label}}                {{label}} {{defaultErrMsg.required}}              {{defaultErrMsg.pattern}}              {{defaultErrMsg.invalidBCPostal}}            {{label}} {{defaultErrMsg.invalidChar}}      '\n    var COMPONENTS = [{'name': 'AccordionCommonComponent', 'selector': 'common-accordion'},{'name': 'AddressComponent', 'selector': 'common-address'},{'name': 'ButtonComponent', 'selector': 'common-button'},{'name': 'ButtonGroupComponent', 'selector': 'common-button-group'},{'name': 'CaptchaComponent', 'selector': 'common-captcha'},{'name': 'CheckboxComponent', 'selector': 'common-checkbox'},{'name': 'CityComponent', 'selector': 'common-city'},{'name': 'ConfirmTemplateComponent', 'selector': 'common-confirm-template'},{'name': 'ConsentModalComponent', 'selector': 'common-consent-modal'},{'name': 'CoreBreadcrumbComponent', 'selector': 'common-core-breadcrumb'},{'name': 'CountryComponent', 'selector': 'common-country'},{'name': 'DateComponent', 'selector': 'common-date'},{'name': 'DatepickerComponent', 'selector': 'common-datepicker'},{'name': 'DropdownComponent', 'selector': 'common-dropdown'},{'name': 'EmailComponent', 'selector': 'common-email'},{'name': 'ErrorContainerComponent', 'selector': 'common-error-container'},{'name': 'FileUploaderComponent', 'selector': 'common-file-uploader'},{'name': 'FormActionBarComponent', 'selector': 'common-form-action-bar'},{'name': 'FormSubmitBarComponent', 'selector': 'common-form-submit-bar'},{'name': 'FullNameComponent', 'selector': 'common-full-name'},{'name': 'GeocoderInputComponent', 'selector': 'common-geocoder-input'},{'name': 'HeaderComponent', 'selector': 'common-header'},{'name': 'NameComponent', 'selector': 'common-name'},{'name': 'PageFrameworkComponent', 'selector': 'common-page-framework'},{'name': 'PageSectionComponent', 'selector': 'common-page-section'},{'name': 'PasswordComponent', 'selector': 'common-password'},{'name': 'PhnComponent', 'selector': 'common-phn'},{'name': 'PhoneNumberComponent', 'selector': 'common-phone-number'},{'name': 'PostalCodeComponent', 'selector': 'common-postal-code'},{'name': 'ProvinceComponent', 'selector': 'common-province'},{'name': 'RadioComponent', 'selector': 'common-radio'},{'name': 'SampleModalComponent', 'selector': 'common-sample-modal'},{'name': 'SinComponent', 'selector': 'common-sin'},{'name': 'StreetComponent', 'selector': 'common-street'},{'name': 'ThumbnailComponent', 'selector': 'common-thumbnail'},{'name': 'ToggleComponent', 'selector': 'common-toggle'},{'name': 'WizardProgressBarComponent', 'selector': 'common-wizard-progress-bar'},{'name': 'XiconButtonComponent', 'selector': 'common-xicon-button'}];\n    var DIRECTIVES = [{'name': 'DateFieldFormatDirective', 'selector': '[commonDateFieldFormat]'},{'name': 'DuplicateCheckDirective', 'selector': '[commonDuplicateCheck]'},{'name': 'ValidateBcPostalDirective', 'selector': '[commonValidateBcPostal]'},{'name': 'ValidateCityDirective', 'selector': '[commonValidateCity]'},{'name': 'ValidateNameDirective', 'selector': '[commonValidateName]'},{'name': 'ValidatePostalcodeDirective', 'selector': '[commonValidatePostalcode]'},{'name': 'ValidateRegionDirective', 'selector': '[commonValidateRegion]'},{'name': 'ValidateStreetDirective', 'selector': '[commonValidateStreet]'}];\n    var ACTUAL_COMPONENT = {'name': 'PostalCodeComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ProvinceComponent.html":{"url":"components/ProvinceComponent.html","title":"component - ProvinceComponent","body":"\n                   \n\n\n\n\n\n  Components\n  ProvinceComponent\n\n\n\n        \n            Info\n        \n        \n            Design Guidelines\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    projects/common/lib/components/province/province.component.ts\n\n\n\n    \n        Extends\n    \n    \n                AbstractFormControl\n    \n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                common-province\n            \n\n            \n                styleUrls\n                ./province.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./province.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                _defaultErrMsg\n                            \n                            \n                                    Public\n                                controlDir\n                            \n                            \n                                province\n                            \n                            \n                                    Abstract\n                                _defaultErrMsg\n                            \n                            \n                                _onChange\n                            \n                            \n                                _onTouched\n                            \n                            \n                                    Public\n                                objectId\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                            \n                                onBlur\n                            \n                            \n                                onValueChange\n                            \n                            \n                                writeValue\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                registerOnChange\n                            \n                            \n                                registerOnTouched\n                            \n                            \n                                    Protected\n                                registerValidation\n                            \n                            \n                                setDisabledState\n                            \n                            \n                                    Protected\n                                setErrorMsg\n                            \n                            \n                                    Private\n                                validateLabel\n                            \n                            \n                                    Abstract\n                                writeValue\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                label\n                            \n                            \n                                labelforId\n                            \n                            \n                                maxlength\n                            \n                            \n                                placeholder\n                            \n                            \n                                provinceList\n                            \n                            \n                                required\n                            \n                            \n                                useDropDownList\n                            \n                            \n                                value\n                            \n                            \n                                disabled\n                            \n                            \n                                errorMessage\n                            \n                            \n                                label\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                blur\n                            \n                            \n                                valueChange\n                            \n                        \n                    \n                \n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    value\n                                \n                            \n                        \n                    \n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(controlDir: NgControl)\n                    \n                \n                        \n                            \n                                Defined in projects/common/lib/components/province/province.component.ts:70\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        controlDir\n                                                  \n                                                        \n                                                                        NgControl\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        label\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'Province'\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/province/province.component.ts:43\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        labelforId\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'province_' + this.objectId\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/province/province.component.ts:45\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        maxlength\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : '250'\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/province/province.component.ts:48\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        placeholder\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'Please select a province'\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/province/province.component.ts:47\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        provinceList\n                    \n                \n                \n                    \n                        Type :         ProvinceList[]\n\n                    \n                \n                \n                    \n                        Default value : PROVINCE_LIST\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/province/province.component.ts:44\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        required\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/province/province.component.ts:46\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        useDropDownList\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : true\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/province/province.component.ts:49\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        value\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/province/province.component.ts:52\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        disabled\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                            \n                                \n                                    Inherited from         AbstractFormControl\n\n                                \n                            \n                        \n                            \n                                    Defined in         AbstractFormControl:16\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        errorMessage\n                    \n                \n                \n                    \n                        Type :         ErrorMessage\n\n                    \n                \n                            \n                                \n                                    Inherited from         AbstractFormControl\n\n                                \n                            \n                        \n                            \n                                    Defined in         AbstractFormControl:19\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        label\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                            \n                                \n                                    Inherited from         AbstractFormControl\n\n                                \n                            \n                        \n                            \n                                    Defined in         AbstractFormControl:14\n\n                            \n                        \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        blur\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/province/province.component.ts:62\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        valueChange\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/province/province.component.ts:61\n                            \n                        \n            \n        \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/components/province/province.component.ts:80\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            onBlur\n                        \n                        \n                    \n                \n            \n            \n                \nonBlur(event: any)\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/components/province/province.component.ts:92\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    event\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            onValueChange\n                        \n                        \n                    \n                \n            \n            \n                \nonValueChange(value: any)\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/components/province/province.component.ts:84\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            writeValue\n                        \n                        \n                    \n                \n            \n            \n                \nwriteValue(value: any)\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/components/province/province.component.ts:97\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Inherited from         AbstractFormControl\n\n                \n            \n            \n                \n                        Defined in         AbstractFormControl:27\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            registerOnChange\n                        \n                        \n                    \n                \n            \n            \n                \nregisterOnChange(fn: any)\n                \n            \n\n\n            \n                \n                    Inherited from         AbstractFormControl\n\n                \n            \n            \n                \n                        Defined in         AbstractFormControl:35\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    fn\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            registerOnTouched\n                        \n                        \n                    \n                \n            \n            \n                \nregisterOnTouched(fn: any)\n                \n            \n\n\n            \n                \n                    Inherited from         AbstractFormControl\n\n                \n            \n            \n                \n                        Defined in         AbstractFormControl:40\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    fn\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            registerValidation\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    registerValidation(ngControl: NgControl, fn: ValidationErrors)\n                \n            \n\n\n            \n                \n                    Inherited from         AbstractFormControl\n\n                \n            \n            \n                \n                        Defined in         AbstractFormControl:68\n\n                \n            \n\n\n            \n                \n                    Register self validating method\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    ngControl\n                                    \n                                                NgControl\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                    \n                                \n                                \n                                    fn\n                                    \n                                                ValidationErrors\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        function for validating self\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            setDisabledState\n                        \n                        \n                    \n                \n            \n            \n                \nsetDisabledState(isDisabled: boolean)\n                \n            \n\n\n            \n                \n                    Inherited from         AbstractFormControl\n\n                \n            \n            \n                \n                        Defined in         AbstractFormControl:45\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    isDisabled\n                                    \n                                                boolean\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            setErrorMsg\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    setErrorMsg()\n                \n            \n\n\n            \n                \n                    Inherited from         AbstractFormControl\n\n                \n            \n            \n                \n                        Defined in         AbstractFormControl:49\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            validateLabel\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    validateLabel()\n                \n            \n\n\n            \n                \n                    Inherited from         AbstractFormControl\n\n                \n            \n            \n                \n                        Defined in         AbstractFormControl:88\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Abstract\n                            writeValue\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    writeValue(value: any)\n                \n            \n\n\n            \n                \n                    Inherited from         AbstractFormControl\n\n                \n            \n            \n                \n                        Defined in         AbstractFormControl:32\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            _defaultErrMsg\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         ErrorMessage\n\n                        \n                    \n                    \n                        \n                            Default value : {\n    required: LabelReplacementTag + ' is required.',\n    invalidChar: LabelReplacementTag + ' must contain letters and may include special characters such as hyphens, ' +\n                 'periods, apostrophes and blank characters.'\n  }\n                        \n                    \n                        \n                            \n                                    Defined in projects/common/lib/components/province/province.component.ts:66\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            controlDir\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         NgControl\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Optional()@Self()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in projects/common/lib/components/province/province.component.ts:73\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            province\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/common/lib/components/province/province.component.ts:64\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Abstract\n                            _defaultErrMsg\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         ErrorMessage\n\n                        \n                    \n                    \n                        \n                            Default value : {}\n                        \n                    \n                            \n                                \n                                    Inherited from         AbstractFormControl\n\n                                \n                            \n                        \n                            \n                                    Defined in         AbstractFormControl:11\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            _onChange\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : () => {...}\n                        \n                    \n                            \n                                \n                                    Inherited from         AbstractFormControl\n\n                                \n                            \n                        \n                            \n                                    Defined in         AbstractFormControl:23\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            _onTouched\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : () => {...}\n                        \n                    \n                            \n                                \n                                    Inherited from         AbstractFormControl\n\n                                \n                            \n                        \n                            \n                                    Defined in         AbstractFormControl:24\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            objectId\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : UUID.UUID()\n                        \n                    \n                            \n                                \n                                    Inherited from         Base\n\n                                \n                            \n                        \n                            \n                                    Defined in         Base:11\n\n                            \n                        \n\n                \n                    \n                        An identifier for parents to keep track of components \n\n                    \n                \n\n            \n        \n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        value\n                    \n                \n\n                \n                    \n                        getvalue()\n                    \n                \n                            \n                                \n                                    Defined in projects/common/lib/components/province/province.component.ts:57\n                                \n                            \n\n                \n                    \n                        setvalue(val: string)\n                    \n                \n                            \n                                \n                                    Defined in projects/common/lib/components/province/province.component.ts:52\n                                \n                            \n                    \n                        \n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                        Type\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                            val\n                                                    \n                                                            \n                                                                            string\n                                                            \n                                                    \n                                                        \n                                                                No\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :         void\n\n                                \n                        \n                    \n            \n        \n\n\n\n    \n        Design Guidelines\nLorem ipsum dolor sit amet consectetur adipisicing elit. Sapiente, magnam ipsam. Sit quasi natus architecto rerum unde non provident! Quia nisi facere amet iste mollitia voluptatem non molestias esse optio?\nAperiam fugiat consectetur temporibus, iste repellat, quisquam sapiente nisi distinctio optio, autem nemo tenetur error eum voluptatibus ab accusamus quis voluptatum blanditiis. Quam et ut reprehenderit vitae nobis, at ipsum!\nExercitationem pariatur animi repudiandae corporis obcaecati ratione ducimus beatae quam, nostrum magnam unde numquam quidem cupiditate odit id. Beatae alias molestiae, optio incidunt harum quia voluptates deserunt sequi. Nesciunt, optio.\n\n    \n\n    \n        import { Component, Input, Output, EventEmitter, Optional, Self, OnInit } from '@angular/core';\nimport { Base } from '../../models/base';\nimport { ControlValueAccessor, NgControl } from '@angular/forms';\nimport { CANADA } from '../country/country.component';\nimport { AbstractFormControl } from '../../models/abstract-form-control';\nimport { ErrorMessage, LabelReplacementTag } from '../../models/error-message.interface';\n\nexport const BRITISH_COLUMBIA = 'BC';\nexport interface ProvinceList {\n  provinceCode: string;\n  description: string;\n  country: string;\n}\n\nexport const PROVINCE_LIST: ProvinceList[] = [\n  { provinceCode: 'AB', description: 'Alberta', country: CANADA },\n  { provinceCode: 'BC', description: 'British Columbia', country: CANADA },\n  { provinceCode: 'MB', description: 'Manitoba', country: CANADA },\n  { provinceCode: 'NB', description: 'New Brunswick', country: CANADA },\n  { provinceCode: 'NL', description: 'Newfoundland and Labrador', country: CANADA },\n  { provinceCode: 'NS', description: 'Nova Scotia', country: CANADA },\n  { provinceCode: 'ON', description: 'Ontario', country: CANADA },\n  { provinceCode: 'PE', description: 'Prince Edward Island', country: CANADA },\n  { provinceCode: 'QC', description: 'Quebec', country: CANADA },\n  { provinceCode: 'SK', description: 'Saskatchewan', country: CANADA },\n  { provinceCode: 'NT', description: 'Northwest Territories', country: CANADA },\n  { provinceCode: 'NU', description: 'Nunavut', country: CANADA },\n  { provinceCode: 'YT', description: 'Yukon', country: CANADA }\n];\n\nexport function getProvinceDescription( provinceCode: string ) {\n  const provObj = PROVINCE_LIST.find( val => provinceCode === val.provinceCode && CANADA === val.country );\n  return provObj ? provObj.description : provinceCode;\n}\n\n@Component({\n  selector: 'common-province',\n  templateUrl: './province.component.html',\n  styleUrls: ['./province.component.scss']\n})\nexport class ProvinceComponent extends AbstractFormControl implements OnInit {\n\n  @Input() label: string = 'Province';\n  @Input() provinceList: ProvinceList[] = PROVINCE_LIST;\n  @Input() labelforId: string = 'province_' + this.objectId;\n  @Input() required: boolean = false;\n  @Input() placeholder: string = 'Please select a province';\n  @Input() maxlength: string = '250';\n  @Input() useDropDownList: boolean = true;\n\n  @Input()\n  set value( val: string ) {\n    if ( val ) {\n      this.province = val;\n    }\n  }\n  get value() {\n    return this.province;\n  }\n\n  @Output() valueChange: EventEmitter = new EventEmitter();\n  @Output() blur: EventEmitter = new EventEmitter();\n\n  province: string;\n\n  _defaultErrMsg: ErrorMessage = {\n    required: LabelReplacementTag + ' is required.',\n    invalidChar: LabelReplacementTag + ' must contain letters and may include special characters such as hyphens, ' +\n                 'periods, apostrophes and blank characters.'\n  };\n\n\n  constructor( @Optional() @Self() public controlDir: NgControl ) {\n    super();\n    if ( controlDir ) {\n      controlDir.valueAccessor = this;\n    }\n  }\n\n  ngOnInit() {\n    super.ngOnInit();\n  }\n\n  onValueChange( value: any ) {\n    if ( value !== this.province ) {\n      this._onChange( value );\n      this.valueChange.emit( value );\n      this.province = value;\n    }\n  }\n\n  onBlur( event: any ) {\n    this._onTouched( event );\n    this.blur.emit( event );\n  }\n\n  writeValue( value: any ): void {\n    if ( value !== undefined ) {\n      this.province = value;\n    }\n  }\n}\n\n    \n\n    \n        {{label}}\n\n\n  \n\n\n\n\n  \n    {{_defaultErrMsg.required}}\n  \n  \n    {{_defaultErrMsg.invalidChar}}\n  \n\n\n\n  \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '{{label}}        {{_defaultErrMsg.required}}        {{_defaultErrMsg.invalidChar}}    '\n    var COMPONENTS = [{'name': 'AccordionCommonComponent', 'selector': 'common-accordion'},{'name': 'AddressComponent', 'selector': 'common-address'},{'name': 'ButtonComponent', 'selector': 'common-button'},{'name': 'ButtonGroupComponent', 'selector': 'common-button-group'},{'name': 'CaptchaComponent', 'selector': 'common-captcha'},{'name': 'CheckboxComponent', 'selector': 'common-checkbox'},{'name': 'CityComponent', 'selector': 'common-city'},{'name': 'ConfirmTemplateComponent', 'selector': 'common-confirm-template'},{'name': 'ConsentModalComponent', 'selector': 'common-consent-modal'},{'name': 'CoreBreadcrumbComponent', 'selector': 'common-core-breadcrumb'},{'name': 'CountryComponent', 'selector': 'common-country'},{'name': 'DateComponent', 'selector': 'common-date'},{'name': 'DatepickerComponent', 'selector': 'common-datepicker'},{'name': 'DropdownComponent', 'selector': 'common-dropdown'},{'name': 'EmailComponent', 'selector': 'common-email'},{'name': 'ErrorContainerComponent', 'selector': 'common-error-container'},{'name': 'FileUploaderComponent', 'selector': 'common-file-uploader'},{'name': 'FormActionBarComponent', 'selector': 'common-form-action-bar'},{'name': 'FormSubmitBarComponent', 'selector': 'common-form-submit-bar'},{'name': 'FullNameComponent', 'selector': 'common-full-name'},{'name': 'GeocoderInputComponent', 'selector': 'common-geocoder-input'},{'name': 'HeaderComponent', 'selector': 'common-header'},{'name': 'NameComponent', 'selector': 'common-name'},{'name': 'PageFrameworkComponent', 'selector': 'common-page-framework'},{'name': 'PageSectionComponent', 'selector': 'common-page-section'},{'name': 'PasswordComponent', 'selector': 'common-password'},{'name': 'PhnComponent', 'selector': 'common-phn'},{'name': 'PhoneNumberComponent', 'selector': 'common-phone-number'},{'name': 'PostalCodeComponent', 'selector': 'common-postal-code'},{'name': 'ProvinceComponent', 'selector': 'common-province'},{'name': 'RadioComponent', 'selector': 'common-radio'},{'name': 'SampleModalComponent', 'selector': 'common-sample-modal'},{'name': 'SinComponent', 'selector': 'common-sin'},{'name': 'StreetComponent', 'selector': 'common-street'},{'name': 'ThumbnailComponent', 'selector': 'common-thumbnail'},{'name': 'ToggleComponent', 'selector': 'common-toggle'},{'name': 'WizardProgressBarComponent', 'selector': 'common-wizard-progress-bar'},{'name': 'XiconButtonComponent', 'selector': 'common-xicon-button'}];\n    var DIRECTIVES = [{'name': 'DateFieldFormatDirective', 'selector': '[commonDateFieldFormat]'},{'name': 'DuplicateCheckDirective', 'selector': '[commonDuplicateCheck]'},{'name': 'ValidateBcPostalDirective', 'selector': '[commonValidateBcPostal]'},{'name': 'ValidateCityDirective', 'selector': '[commonValidateCity]'},{'name': 'ValidateNameDirective', 'selector': '[commonValidateName]'},{'name': 'ValidatePostalcodeDirective', 'selector': '[commonValidatePostalcode]'},{'name': 'ValidateRegionDirective', 'selector': '[commonValidateRegion]'},{'name': 'ValidateStreetDirective', 'selector': '[commonValidateStreet]'}];\n    var ACTUAL_COMPONENT = {'name': 'ProvinceComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ProvinceList.html":{"url":"interfaces/ProvinceList.html","title":"interface - ProvinceList","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  ProvinceList\n\n\n\n        \n            Info\n        \n        \n            Design Guidelines\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/common/lib/components/province/province.component.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        country\n                                \n                                \n                                        description\n                                \n                                \n                                        provinceCode\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        country\n                                    \n                                \n                                \n                                    \n                                        country:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        description\n                                    \n                                \n                                \n                                    \n                                        description:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        provinceCode\n                                    \n                                \n                                \n                                    \n                                        provinceCode:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n    \n        Design Guidelines\nLorem ipsum dolor sit amet consectetur adipisicing elit. Sapiente, magnam ipsam. Sit quasi natus architecto rerum unde non provident! Quia nisi facere amet iste mollitia voluptatem non molestias esse optio?\nAperiam fugiat consectetur temporibus, iste repellat, quisquam sapiente nisi distinctio optio, autem nemo tenetur error eum voluptatibus ab accusamus quis voluptatum blanditiis. Quam et ut reprehenderit vitae nobis, at ipsum!\nExercitationem pariatur animi repudiandae corporis obcaecati ratione ducimus beatae quam, nostrum magnam unde numquam quidem cupiditate odit id. Beatae alias molestiae, optio incidunt harum quia voluptates deserunt sequi. Nesciunt, optio.\n\n    \n\n    \n        import { Component, Input, Output, EventEmitter, Optional, Self, OnInit } from '@angular/core';\nimport { Base } from '../../models/base';\nimport { ControlValueAccessor, NgControl } from '@angular/forms';\nimport { CANADA } from '../country/country.component';\nimport { AbstractFormControl } from '../../models/abstract-form-control';\nimport { ErrorMessage, LabelReplacementTag } from '../../models/error-message.interface';\n\nexport const BRITISH_COLUMBIA = 'BC';\nexport interface ProvinceList {\n  provinceCode: string;\n  description: string;\n  country: string;\n}\n\nexport const PROVINCE_LIST: ProvinceList[] = [\n  { provinceCode: 'AB', description: 'Alberta', country: CANADA },\n  { provinceCode: 'BC', description: 'British Columbia', country: CANADA },\n  { provinceCode: 'MB', description: 'Manitoba', country: CANADA },\n  { provinceCode: 'NB', description: 'New Brunswick', country: CANADA },\n  { provinceCode: 'NL', description: 'Newfoundland and Labrador', country: CANADA },\n  { provinceCode: 'NS', description: 'Nova Scotia', country: CANADA },\n  { provinceCode: 'ON', description: 'Ontario', country: CANADA },\n  { provinceCode: 'PE', description: 'Prince Edward Island', country: CANADA },\n  { provinceCode: 'QC', description: 'Quebec', country: CANADA },\n  { provinceCode: 'SK', description: 'Saskatchewan', country: CANADA },\n  { provinceCode: 'NT', description: 'Northwest Territories', country: CANADA },\n  { provinceCode: 'NU', description: 'Nunavut', country: CANADA },\n  { provinceCode: 'YT', description: 'Yukon', country: CANADA }\n];\n\nexport function getProvinceDescription( provinceCode: string ) {\n  const provObj = PROVINCE_LIST.find( val => provinceCode === val.provinceCode && CANADA === val.country );\n  return provObj ? provObj.description : provinceCode;\n}\n\n@Component({\n  selector: 'common-province',\n  templateUrl: './province.component.html',\n  styleUrls: ['./province.component.scss']\n})\nexport class ProvinceComponent extends AbstractFormControl implements OnInit {\n\n  @Input() label: string = 'Province';\n  @Input() provinceList: ProvinceList[] = PROVINCE_LIST;\n  @Input() labelforId: string = 'province_' + this.objectId;\n  @Input() required: boolean = false;\n  @Input() placeholder: string = 'Please select a province';\n  @Input() maxlength: string = '250';\n  @Input() useDropDownList: boolean = true;\n\n  @Input()\n  set value( val: string ) {\n    if ( val ) {\n      this.province = val;\n    }\n  }\n  get value() {\n    return this.province;\n  }\n\n  @Output() valueChange: EventEmitter = new EventEmitter();\n  @Output() blur: EventEmitter = new EventEmitter();\n\n  province: string;\n\n  _defaultErrMsg: ErrorMessage = {\n    required: LabelReplacementTag + ' is required.',\n    invalidChar: LabelReplacementTag + ' must contain letters and may include special characters such as hyphens, ' +\n                 'periods, apostrophes and blank characters.'\n  };\n\n\n  constructor( @Optional() @Self() public controlDir: NgControl ) {\n    super();\n    if ( controlDir ) {\n      controlDir.valueAccessor = this;\n    }\n  }\n\n  ngOnInit() {\n    super.ngOnInit();\n  }\n\n  onValueChange( value: any ) {\n    if ( value !== this.province ) {\n      this._onChange( value );\n      this.valueChange.emit( value );\n      this.province = value;\n    }\n  }\n\n  onBlur( event: any ) {\n    this._onTouched( event );\n    this.blur.emit( event );\n  }\n\n  writeValue( value: any ): void {\n    if ( value !== undefined ) {\n      this.province = value;\n    }\n  }\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/RadioComponent.html":{"url":"components/RadioComponent.html","title":"component - RadioComponent","body":"\n                   \n\n\n\n\n\n  Components\n  RadioComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    projects/common/lib/components/radio/radio.component.ts\n\n\n\n    \n        Extends\n    \n    \n                AbstractFormControl\n    \n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                common-radio\n            \n\n            \n                styleUrls\n                ./radio.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./radio.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                _defaultErrMsg\n                            \n                            \n                                _value\n                            \n                            \n                                    Public\n                                controlDir\n                            \n                            \n                                    Abstract\n                                _defaultErrMsg\n                            \n                            \n                                _onChange\n                            \n                            \n                                _onTouched\n                            \n                            \n                                    Public\n                                objectId\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                            \n                                registerOnChange\n                            \n                            \n                                registerOnTouched\n                            \n                            \n                                setStatus\n                            \n                            \n                                writeValue\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                registerOnChange\n                            \n                            \n                                registerOnTouched\n                            \n                            \n                                    Protected\n                                registerValidation\n                            \n                            \n                                setDisabledState\n                            \n                            \n                                    Protected\n                                setErrorMsg\n                            \n                            \n                                    Private\n                                validateLabel\n                            \n                            \n                                    Abstract\n                                writeValue\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                display\n                            \n                            \n                                instructionText\n                            \n                            \n                                label\n                            \n                            \n                                radioLabels\n                            \n                            \n                                value\n                            \n                            \n                                disabled\n                            \n                            \n                                errorMessage\n                            \n                            \n                                label\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                valueChange\n                            \n                        \n                    \n                \n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    value\n                                \n                            \n                        \n                    \n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(controlDir: NgControl)\n                    \n                \n                        \n                            \n                                Defined in projects/common/lib/components/radio/radio.component.ts:76\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        controlDir\n                                                  \n                                                        \n                                                                        NgControl\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        display\n                    \n                \n                \n                    \n                        Type :     \"table-row-group\" | \"inline-block\"\n\n                    \n                \n                \n                    \n                        Default value : 'inline-block'\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/radio/radio.component.ts:73\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        instructionText\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/radio/radio.component.ts:74\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        label\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/radio/radio.component.ts:64\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        radioLabels\n                    \n                \n                \n                    \n                        Type :         IRadioItems[]\n\n                    \n                \n                \n                    \n                        Default value : [\n    {label: 'No', value: false},\n    {label: 'Yes', value: true}\n  ]\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/radio/radio.component.ts:59\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        value\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/radio/radio.component.ts:66\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        disabled\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                            \n                                \n                                    Inherited from         AbstractFormControl\n\n                                \n                            \n                        \n                            \n                                    Defined in         AbstractFormControl:16\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        errorMessage\n                    \n                \n                \n                    \n                        Type :         ErrorMessage\n\n                    \n                \n                            \n                                \n                                    Inherited from         AbstractFormControl\n\n                                \n                            \n                        \n                            \n                                    Defined in         AbstractFormControl:19\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        label\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                            \n                                \n                                    Inherited from         AbstractFormControl\n\n                                \n                            \n                        \n                            \n                                    Defined in         AbstractFormControl:14\n\n                            \n                        \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        valueChange\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/radio/radio.component.ts:76\n                            \n                        \n            \n        \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/components/radio/radio.component.ts:85\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            registerOnChange\n                        \n                        \n                    \n                \n            \n            \n                \nregisterOnChange(fn: any)\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/components/radio/radio.component.ts:97\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    fn\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            registerOnTouched\n                        \n                        \n                    \n                \n            \n            \n                \nregisterOnTouched(fn: any)\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/components/radio/radio.component.ts:101\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    fn\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            setStatus\n                        \n                        \n                    \n                \n            \n            \n                \nsetStatus(val: any)\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/components/radio/radio.component.ts:89\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    val\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            writeValue\n                        \n                        \n                    \n                \n            \n            \n                \nwriteValue(value: any)\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/components/radio/radio.component.ts:105\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Inherited from         AbstractFormControl\n\n                \n            \n            \n                \n                        Defined in         AbstractFormControl:27\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            registerOnChange\n                        \n                        \n                    \n                \n            \n            \n                \nregisterOnChange(fn: any)\n                \n            \n\n\n            \n                \n                    Inherited from         AbstractFormControl\n\n                \n            \n            \n                \n                        Defined in         AbstractFormControl:35\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    fn\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            registerOnTouched\n                        \n                        \n                    \n                \n            \n            \n                \nregisterOnTouched(fn: any)\n                \n            \n\n\n            \n                \n                    Inherited from         AbstractFormControl\n\n                \n            \n            \n                \n                        Defined in         AbstractFormControl:40\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    fn\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            registerValidation\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    registerValidation(ngControl: NgControl, fn: ValidationErrors)\n                \n            \n\n\n            \n                \n                    Inherited from         AbstractFormControl\n\n                \n            \n            \n                \n                        Defined in         AbstractFormControl:68\n\n                \n            \n\n\n            \n                \n                    Register self validating method\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    ngControl\n                                    \n                                                NgControl\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                    \n                                \n                                \n                                    fn\n                                    \n                                                ValidationErrors\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        function for validating self\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            setDisabledState\n                        \n                        \n                    \n                \n            \n            \n                \nsetDisabledState(isDisabled: boolean)\n                \n            \n\n\n            \n                \n                    Inherited from         AbstractFormControl\n\n                \n            \n            \n                \n                        Defined in         AbstractFormControl:45\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    isDisabled\n                                    \n                                                boolean\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            setErrorMsg\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    setErrorMsg()\n                \n            \n\n\n            \n                \n                    Inherited from         AbstractFormControl\n\n                \n            \n            \n                \n                        Defined in         AbstractFormControl:49\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            validateLabel\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    validateLabel()\n                \n            \n\n\n            \n                \n                    Inherited from         AbstractFormControl\n\n                \n            \n            \n                \n                        Defined in         AbstractFormControl:88\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Abstract\n                            writeValue\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    writeValue(value: any)\n                \n            \n\n\n            \n                \n                    Inherited from         AbstractFormControl\n\n                \n            \n            \n                \n                        Defined in         AbstractFormControl:32\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            _defaultErrMsg\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         ErrorMessage\n\n                        \n                    \n                    \n                        \n                            Default value : {\n    required: `${LabelReplacementTag} is required.`\n  }\n                        \n                    \n                        \n                            \n                                    Defined in projects/common/lib/components/radio/radio.component.ts:55\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            _value\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                    \n                        \n                            Default value : ''\n                        \n                    \n                        \n                            \n                                    Defined in projects/common/lib/components/radio/radio.component.ts:54\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            controlDir\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         NgControl\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Optional()@Self()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in projects/common/lib/components/radio/radio.component.ts:78\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Abstract\n                            _defaultErrMsg\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         ErrorMessage\n\n                        \n                    \n                    \n                        \n                            Default value : {}\n                        \n                    \n                            \n                                \n                                    Inherited from         AbstractFormControl\n\n                                \n                            \n                        \n                            \n                                    Defined in         AbstractFormControl:11\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            _onChange\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : () => {...}\n                        \n                    \n                            \n                                \n                                    Inherited from         AbstractFormControl\n\n                                \n                            \n                        \n                            \n                                    Defined in         AbstractFormControl:23\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            _onTouched\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : () => {...}\n                        \n                    \n                            \n                                \n                                    Inherited from         AbstractFormControl\n\n                                \n                            \n                        \n                            \n                                    Defined in         AbstractFormControl:24\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            objectId\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : UUID.UUID()\n                        \n                    \n                            \n                                \n                                    Inherited from         Base\n\n                                \n                            \n                        \n                            \n                                    Defined in         Base:11\n\n                            \n                        \n\n                \n                    \n                        An identifier for parents to keep track of components \n\n                    \n                \n\n            \n        \n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        value\n                    \n                \n\n                \n                    \n                        getvalue()\n                    \n                \n                            \n                                \n                                    Defined in projects/common/lib/components/radio/radio.component.ts:69\n                                \n                            \n\n                \n                    \n                        setvalue(val: string)\n                    \n                \n                            \n                                \n                                    Defined in projects/common/lib/components/radio/radio.component.ts:66\n                                \n                            \n                    \n                        \n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                        Type\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                            val\n                                                    \n                                                            \n                                                                            string\n                                                            \n                                                    \n                                                        \n                                                                No\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :         void\n\n                                \n                        \n                    \n            \n        \n\n\n\n\n    \n        import {Component, EventEmitter, Input, Output, Optional, Self, OnInit} from '@angular/core';\nimport { AbstractFormControl } from '../../models/abstract-form-control';\nimport { LabelReplacementTag, ErrorMessage } from '../../models/error-message.interface';\nimport { NgControl } from '@angular/forms';\n\n/**\n * RadioComponent is a single radio which can be used to have multiple radios\n * based on the radio label values.\n *\n * To display radio in a vertical style use display=\"table-row-group\" by default\n * it shows in horizontal or inline display, display='inline-block' You can\n * have many radio's and the number is based on the Radio label Value. For 3\n * radio buttons, radioLabels value is of type IRadioItems[].\n*\n * @example\n *        \n *        \n *\n *  Reactive Form\n *        \n *        \n *\n *  Template Form\n *        \n *        \n *\n * @export\n *\n */\nexport interface IRadioItems {\n  label: string;\n  value: any;\n  // TODO: Make value generic \n}\n@Component({\n  selector: 'common-radio',\n  templateUrl: './radio.component.html',\n  styleUrls: ['./radio.component.scss']\n})\nexport class RadioComponent extends AbstractFormControl implements OnInit {\n\n  _value: any = '';\n  _defaultErrMsg: ErrorMessage = {\n    required: `${LabelReplacementTag} is required.`\n  };\n\n  @Input() radioLabels: IRadioItems[] = [\n    {label: 'No', value: false},\n    {label: 'Yes', value: true}\n  ];\n\n  @Input() label: string;\n  @Input()\n  set value( val: string ) {\n    this._value = val;\n  }\n  get value() {\n    return this._value;\n  }\n\n  @Input() display: 'table-row-group' | 'inline-block'  = 'inline-block';\n  @Input() instructionText: string;\n\n  @Output() valueChange: EventEmitter = new EventEmitter();\n\n  constructor( @Optional() @Self() public controlDir: NgControl ) {\n    super();\n    if ( controlDir ) {\n      controlDir.valueAccessor = this;\n    }\n  }\n\n  ngOnInit() {\n    super.ngOnInit();\n  }\n\n  setStatus(val: any) {\n    this._value = val;\n\n    this._onChange(val);\n    this._onTouched();\n    this.valueChange.emit(val);\n  }\n\n  registerOnChange(fn: any): void {\n    this._onChange = fn;\n  }\n\n  registerOnTouched(fn: any): void {\n    this._onTouched = fn;\n  }\n\n  writeValue(value: any): void {\n    this._value = value;\n  }\n}\n\n    \n\n    \n        \n  {{label}}\n  {{instructionText}}\n  \n    \n      \n      \n      {{val.label}}\n      \n    \n  \n\n  \n    {{_defaultErrMsg.required}}\n  \n\n\n\n\n  \n    \n  \n\n\n\n    \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  {{label}}  {{instructionText}}                        {{val.label}}                  {{_defaultErrMsg.required}}              '\n    var COMPONENTS = [{'name': 'AccordionCommonComponent', 'selector': 'common-accordion'},{'name': 'AddressComponent', 'selector': 'common-address'},{'name': 'ButtonComponent', 'selector': 'common-button'},{'name': 'ButtonGroupComponent', 'selector': 'common-button-group'},{'name': 'CaptchaComponent', 'selector': 'common-captcha'},{'name': 'CheckboxComponent', 'selector': 'common-checkbox'},{'name': 'CityComponent', 'selector': 'common-city'},{'name': 'ConfirmTemplateComponent', 'selector': 'common-confirm-template'},{'name': 'ConsentModalComponent', 'selector': 'common-consent-modal'},{'name': 'CoreBreadcrumbComponent', 'selector': 'common-core-breadcrumb'},{'name': 'CountryComponent', 'selector': 'common-country'},{'name': 'DateComponent', 'selector': 'common-date'},{'name': 'DatepickerComponent', 'selector': 'common-datepicker'},{'name': 'DropdownComponent', 'selector': 'common-dropdown'},{'name': 'EmailComponent', 'selector': 'common-email'},{'name': 'ErrorContainerComponent', 'selector': 'common-error-container'},{'name': 'FileUploaderComponent', 'selector': 'common-file-uploader'},{'name': 'FormActionBarComponent', 'selector': 'common-form-action-bar'},{'name': 'FormSubmitBarComponent', 'selector': 'common-form-submit-bar'},{'name': 'FullNameComponent', 'selector': 'common-full-name'},{'name': 'GeocoderInputComponent', 'selector': 'common-geocoder-input'},{'name': 'HeaderComponent', 'selector': 'common-header'},{'name': 'NameComponent', 'selector': 'common-name'},{'name': 'PageFrameworkComponent', 'selector': 'common-page-framework'},{'name': 'PageSectionComponent', 'selector': 'common-page-section'},{'name': 'PasswordComponent', 'selector': 'common-password'},{'name': 'PhnComponent', 'selector': 'common-phn'},{'name': 'PhoneNumberComponent', 'selector': 'common-phone-number'},{'name': 'PostalCodeComponent', 'selector': 'common-postal-code'},{'name': 'ProvinceComponent', 'selector': 'common-province'},{'name': 'RadioComponent', 'selector': 'common-radio'},{'name': 'SampleModalComponent', 'selector': 'common-sample-modal'},{'name': 'SinComponent', 'selector': 'common-sin'},{'name': 'StreetComponent', 'selector': 'common-street'},{'name': 'ThumbnailComponent', 'selector': 'common-thumbnail'},{'name': 'ToggleComponent', 'selector': 'common-toggle'},{'name': 'WizardProgressBarComponent', 'selector': 'common-wizard-progress-bar'},{'name': 'XiconButtonComponent', 'selector': 'common-xicon-button'}];\n    var DIRECTIVES = [{'name': 'DateFieldFormatDirective', 'selector': '[commonDateFieldFormat]'},{'name': 'DuplicateCheckDirective', 'selector': '[commonDuplicateCheck]'},{'name': 'ValidateBcPostalDirective', 'selector': '[commonValidateBcPostal]'},{'name': 'ValidateCityDirective', 'selector': '[commonValidateCity]'},{'name': 'ValidateNameDirective', 'selector': '[commonValidateName]'},{'name': 'ValidatePostalcodeDirective', 'selector': '[commonValidatePostalcode]'},{'name': 'ValidateRegionDirective', 'selector': '[commonValidateRegion]'},{'name': 'ValidateStreetDirective', 'selector': '[commonValidateStreet]'}];\n    var ACTUAL_COMPONENT = {'name': 'RadioComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ReadOnlyFields.html":{"url":"interfaces/ReadOnlyFields.html","title":"interface - ReadOnlyFields","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  ReadOnlyFields\n\n\n\n        \n            Info\n        \n        \n            Design Guidelines\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/common/lib/components/address/address.component.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        address\n                                \n                                \n                                            Optional\n                                        city\n                                \n                                \n                                            Optional\n                                        country\n                                \n                                \n                                            Optional\n                                        postalCode\n                                \n                                \n                                            Optional\n                                        province\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        address\n                                    \n                                \n                                \n                                    \n                                        address:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        city\n                                    \n                                \n                                \n                                    \n                                        city:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        country\n                                    \n                                \n                                \n                                    \n                                        country:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        postalCode\n                                    \n                                \n                                \n                                    \n                                        postalCode:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        province\n                                    \n                                \n                                \n                                    \n                                        province:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n    \n        Design Guidelines\ntodo\n\n    \n\n    \n        import {\n  Component,\n  Input,\n  Output,\n  EventEmitter,\n  OnChanges,\n  forwardRef,\n  OnInit\n} from '@angular/core';\nimport { ControlContainer, ControlValueAccessor, NgForm, NG_VALUE_ACCESSOR } from '@angular/forms';\nimport { Base } from '../../models/base';\nimport { GeoAddressResult } from '../../services/geocoder.service';\nimport { Address } from '../../models/address.model';\nimport { CountryList, CANADA, UNITED_STATES, COUNTRY_LIST } from '../country/country.component';\nimport { ProvinceList, BRITISH_COLUMBIA, PROVINCE_LIST } from '../province/province.component';\n\nexport interface AddrLabelList {\n  address1?: string;\n  address2?: string;\n  address3?: string;\n  city?: string;\n  province?: string;\n  country?: string;\n  postalCode?: string;\n}\n\nexport interface Maxlengths {\n  address?: string;\n  city?: string;\n  province?: string;\n  country?: string;\n  postalCode?: string;\n}\n\nexport interface ReadOnlyFields {\n  address?: boolean;\n  city?: boolean;\n  province?: boolean;\n  country?: boolean;\n  postalCode?: boolean;\n}\n\n/**\n *\n * Note - This component REQUIRES that `HttpClientModule` is registered in your NgModule.\n */\n@Component({\n  selector: 'common-address',\n  templateUrl: './address.component.html',\n  styleUrls: ['./address.component.scss'],\n  /* Re-use the same ngForm that it's parent is using. The component will show\n   * up in its parents `this.form`, and will auto-update `this.form.valid`\n   */\n  viewProviders: [\n    { provide: ControlContainer, useExisting: forwardRef(() => NgForm) }\n  ],\n  providers: [\n    { provide: NG_VALUE_ACCESSOR, useExisting: forwardRef(() => AddressComponent) }\n  ]\n})\nexport class AddressComponent extends Base\n  implements OnInit, OnChanges, ControlValueAccessor {\n\n  /* Disable all fields by sending in boolean,\n   * disable specific fields by sending in ReadOnlyFields structure\n   */\n  @Input() disabled: boolean | ReadOnlyFields = false;\n  @Input() isRequired: boolean = false;\n  @Input() countryList: CountryList[] = COUNTRY_LIST;\n  @Input() defaultCountry: string = CANADA;\n  @Input() provinceList: ProvinceList[] = PROVINCE_LIST;\n  @Input() defaultProvince: string = BRITISH_COLUMBIA;\n  @Input() disableGeocoder: boolean = false;\n  @Input() labels: AddrLabelList;\n  @Input() maxlengths: Maxlengths;\n  @Input() bcOnly: boolean = false;\n\n  @Input()\n  set address(val: Address) {\n    if (val) {\n      this.addr = val;\n    }\n  }\n  get address(): Address {\n    return this.addr;\n  }\n\n  @Output() addressChange: EventEmitter = new EventEmitter();\n  /**\n   * If true, adds a plus icon next to street and enables users to add a second\n   * address line.  This value binds to `address.addressLine2`\n   */\n  @Input() allowExtralines: boolean = false;\n\n  addr: Address;\n  provList: ProvinceList[];\n  showLine2 = false;\n  showLine3 = false;\n\n  // Labels defaulted to MSP\n  addrLabels: AddrLabelList =  {\n    address1: 'Full street address, rural route, PO box or general delivery',\n    address2: 'Address Line 2',\n    address3: 'Address Line 3',\n    city: 'City',\n    province: 'Province or state',\n    country: 'Country',\n    postalCode: 'Postal Code or Zip Code'\n  };\n\n  // Lengths defaulted to MSP\n  fieldMaxLenghts: Maxlengths = {\n    address: '25',\n    city: '25',\n    province: '25',\n    country: '250',\n    postalCode: '25'\n  };\n\n  readOnlyFields: ReadOnlyFields = {\n    address: false,\n    city: false,\n    province: false,\n    country: false,\n    postalCode: false,\n  };\n\n  _onChange = (_: any) => { };\n  _onTouched = (_: any) => { };\n\n  constructor() {\n    super();\n  }\n\n  ngOnInit() {\n\n    // console.log( 'address: ', this.bcOnly );\n\n    this.setLabels();\n    this.setMaxlengths();\n    this.setReadOnlyFields();\n\n    if (this.addr) {\n\n      if (!this.addr.country) {\n        this.addr.country = this.setDefaultCountryAsOption();\n      } else {\n        // If string for country submitted, need to find code to display value in select box\n        this.addr.country = this.findCountryCode( this.addr.country );\n      }\n\n      if (!this.addr.province) {\n        this.addr.province = this.setDefaultProvinceAsOption(this.addr.country);\n      }\n\n      // Make sure addressLine2 is visible if there is data persisted to display there.\n      if (this.allowExtralines) {\n        if (this.addr.addressLine2) {\n          this.addLine(2);\n        }\n\n        if (this.addr.addressLine3) {\n          this.addLine(3);\n        }\n      }\n    }\n\n    this.updateProvList();\n  }\n\n  /**\n   * Set country province blank\n   * @param value\n   */\n  setCountry(value: string) {\n    this.addr.province = this.setDefaultProvinceAsOption( value );\n    this.addr.country = value;\n    this.updateProvList();\n\n   if ( this.isCanada() ) {\n      // If Canada, clear postal code to display mask\n      this.addr.postal = '';\n    }\n\n    this._onChange(this.addr);\n    this.addressChange.emit(this.addr);\n    this._onTouched(this.addr);\n  }\n\n  setProvince(value: string) {\n    this.addr.province = value;\n    this._onChange(this.addr);\n    this.addressChange.emit(this.addr);\n    this._onTouched(this.addr);\n  }\n\n  setStreetAddress(value: string) {\n    this.addr.addressLine1 = value;\n    this._onChange(this.addr);\n    this.addressChange.emit(this.addr);\n    this._onTouched(this.addr);\n  }\n\n  setCity(value: string) {\n    this.addr.city = value;\n    this._onChange(this.addr);\n    this.addressChange.emit(this.addr);\n    this._onTouched(this.addr);\n  }\n\n  /**\n   * Sets string after converted upper case\n   * @param text\n   */\n  setPostalCode(value: string) {\n    this.addr.postal = value;\n    this._onChange(this.addr);\n    this.addressChange.emit(this.addr);\n    this._onTouched(this.addr);\n  }\n\n  isCanada(): boolean {\n    return this.addr && CANADA === this.addr.country;\n  }\n\n  ngOnChanges(changes) {\n    if (changes['countryList'] && changes['countryList'].currentValue) {\n\n      if (this.addr && !this.addr.country) {\n        // Set defaults\n        this.addr.country = this.setDefaultCountryAsOption();\n\n        // Set defaults\n        this.addr.province = this.setDefaultProvinceAsOption(this.addr.country);\n      }\n      this.updateProvList();\n    }\n    if (changes['provinceList'] && changes['provinceList'].currentValue) {\n      if (this.addr && !this.addr.province) {\n        // Set defaults\n        this.addr.province = this.setDefaultProvinceAsOption(this.addr.country);\n      }\n      this.updateProvList();\n    }\n  }\n\n  addLine(line: 2 | 3 = null) {\n\n    // Add lines in order\n    if (line === null) {\n      if (!this.showLine2) {\n        this.showLine2 = true;\n      } else if (!this.showLine3) {\n        this.showLine3 = true;\n      }\n    } else {\n      // Add specific line number\n      const lookup = `showLine${line}`;\n      this[lookup] = true;\n    }\n  }\n\n  removeLine(line: 2 | 3) {\n    // We can remove lines in any order, depending on user input\n    // Dynamically lookup variable based on line number input.\n    const lookup = `showLine${line}`;\n    this[lookup] = false;\n\n    // TODO - Need to clear the data in the appropriate field, just null/undefined it out.\n    const addrLookup = `addressLine${line}`;\n    this.address[addrLookup] = undefined;\n  }\n\n  /**\n   * Updates the provList variable. Values must be stored in a variable and not\n   * accessed via function invocation for performance.\n   */\n  private updateProvList() {\n    if (!this.provinceList) { return; } // When data is async and hasn't loaded\n    this.provList = this.provinceList\n      .map(prov => {\n        if (prov.country === this.addr.country) {\n          return prov;\n        }\n      })\n      .filter(x => x);\n  }\n\n  /**\n   * Sets the default province option value\n   */\n  private setDefaultProvinceAsOption(country: string): string {\n    const provObj = !this.provinceList ? null : this.provinceList.find(\n      val => (val.provinceCode === this.defaultProvince ||\n        val.description === this.defaultProvince) &&\n        val.country === country\n    );\n    return (provObj ? provObj.provinceCode : '');\n  }\n\n  private findProvinceDescription(prov: string): string {\n    const provObj = !this.provinceList ? null : this.provinceList.find(\n      val => val.provinceCode === prov ||\n        val.description === prov\n    );\n    return (provObj ? provObj.description : null);\n  }\n\n  /**\n   * Set country to default\n   * Search uses country code or country name to find item is list.\n   */\n  private setDefaultCountryAsOption(): string {\n    return this.findCountryCode( this.defaultCountry );\n  }\n\n  private findCountryCode( country: string ): string {\n    const countryObj = !this.countryList\n      ? null\n      : this.countryList.find(\n        val =>\n          val.countryCode === country ||\n          val.description === country\n      );\n    return countryObj ? countryObj.countryCode : null;\n  }\n\n  // GeoCoder\n\n  /**\n   * GeoCoder only is applicable when address is BC, Canada.\n   */\n  useGeoCoder(): boolean {\n    if (this.disableGeocoder) {\n      return false;\n    }\n    return this.isCanada() && BRITISH_COLUMBIA === this.addr.province;\n  }\n\n  // Only BC addresses therefore no need to copy province into structure.\n  setAddress(data: GeoAddressResult) {\n    this.addr.addressLine1 = data.street;\n    this.addr.city = data.city;\n    this.addr.province = data.province;\n    this.addr.country = data.country;\n    this.addressChange.emit(this.addr);\n  }\n\n  writeValue( value: Address) {\n    if ( value ) {\n      this.addr = value;\n    }\n  }\n\n  registerOnChange(fn: any): void {\n    this._onChange = fn;\n  }\n\n  registerOnTouched(fn: any): void {\n    this._onTouched = fn;\n  }\n\n  setDisabledState(isDisabled: boolean): void {\n    this.disabled = isDisabled;\n    this.setReadOnlyFields();\n  }\n\n  private setLabels() {\n    if ( this.labels ) {\n      Object.keys(this.labels).map( x => this.addrLabels[x] = this.labels[x] );\n    }\n  }\n\n  private setMaxlengths() {\n    if ( this.maxlengths ) {\n      Object.keys(this.fieldMaxLenghts).map( x => this.maxlengths[x] = this.fieldMaxLenghts[x]);\n    }\n  }\n\n  private setReadOnlyFields() {\n    if ( typeof this.disabled === 'boolean' ) {\n      Object.keys(this.readOnlyFields).map( x => this.readOnlyFields[x] = this.disabled );\n    } else {\n      Object.keys(this.disabled).map( x => this.readOnlyFields[x] = this.disabled[x] );\n    }\n  }\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"guards/RouteGuardService.html":{"url":"guards/RouteGuardService.html","title":"guard - RouteGuardService","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n    Guards\n    RouteGuardService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n        \n            \n            File\n            \n            \n                projects/common/lib/services/route-guard.service.ts\n            \n\n\n\n\n                \n                Example\n                \n                \n                            \n                                //STEP 2 + STEP 3\n//registration.module.ts\nproviders: [\n...\n{ provide: AbstractPgCheckService, useExisting: RegistrationService },\nRouteGuardService\n]\n\n\n//STEP 4\n//registration-routing.modle.ts\nconst routes: Routes = [{\npath: '',\ncanActivateChild: [RouteGuardService] //or canActivate\n}\n...\n]\n\n\n//STEP 5\n//example.component.ts\nngOnInit() { this.setPageIncomplete(); }\ncontinue() { this.setPageComplete(); }\n                            \n                \n\n                \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                _continue\n                            \n                            \n                                canActivate\n                            \n                            \n                                canActivateChild\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n                \n    Constructor\n        \n            \n                \n                    \nconstructor(router: Router, service: AbstractPgCheckService)\n                    \n                \n                        \n                            \n                                Defined in projects/common/lib/services/route-guard.service.ts:53\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        service\n                                                  \n                                                        \n                                                                        AbstractPgCheckService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n                \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            _continue\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    _continue(pageUrl: string)\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/services/route-guard.service.ts:74\n                \n            \n\n\n            \n                \n                    Logic to determine whether or not allow to continue to next page \n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    pageUrl\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            canActivate\n                        \n                        \n                    \n                \n            \n            \n                \ncanActivate(route: ActivatedRouteSnapshot, state: RouterStateSnapshot)\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/services/route-guard.service.ts:59\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    route\n                                    \n                                                ActivatedRouteSnapshot\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    state\n                                    \n                                                RouterStateSnapshot\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable | Promise | boolean | UrlTree\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            canActivateChild\n                        \n                        \n                    \n                \n            \n            \n                \ncanActivateChild(next: ActivatedRouteSnapshot, state: RouterStateSnapshot)\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/services/route-guard.service.ts:67\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    next\n                                    \n                                                ActivatedRouteSnapshot\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    state\n                                    \n                                                RouterStateSnapshot\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable | Promise | boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n        \n\n\n        \n            import { Injectable, InjectionToken, Injector } from '@angular/core';\nimport { CanActivateChild, Router, ActivatedRouteSnapshot, RouterStateSnapshot, UrlTree, CanActivate } from '@angular/router';\nimport { Observable } from 'rxjs';\nimport { AbstractPgCheckService } from './abstract-pg-check.service';\n\n/**\n * @deprecated\n * Use this service to implement Route Guards in your application. This is for a\n * typical form flow, where the user must proceed sequentially from one page to\n * the next.\n *\n * To setup, you must:\n *\n * 1. Create a service implementing the abstract methods in `AbstractPgService` (\"RegistrationService\")\n * 2. Setup AbstractPgCheckService in NgModule providers, to `useExisting` the service from previous step.\n * 3. Add this RouteGuardService to same providers from previous step.\n * 4. Configure routes to use RouteGuardService - `canActivate` or `canActivateChild`\n * 5. Have each \"page\" in the form call `setPageIncomplete()` or `setPageComplete()` (from the \"RegistrationService\")\n *\n *\n * You must make sure to setup AbstractPgCheckService in NgModules correctly.\n *\n *  @example\n *                //STEP 2 + STEP 3\n *                //registration.module.ts\n *                providers: [\n *                        ...\n *                        { provide: AbstractPgCheckService, useExisting: RegistrationService },\n *                        RouteGuardService\n *                ]\n *\n *\n *                //STEP 4\n *                //registration-routing.modle.ts\n *                const routes: Routes = [{\n *                   path: '',\n *                   canActivateChild: [RouteGuardService] //or canActivate\n *                  }\n *                   ...\n *                ]\n *\n *\n *                //STEP 5\n *                //example.component.ts\n *                ngOnInit() { this.setPageIncomplete(); }\n *                continue() { this.setPageComplete(); }\n *\n *\n */\n@Injectable({\n  providedIn: 'root'\n})\nexport class RouteGuardService implements CanActivate, CanActivateChild {\n\n  constructor(private router: Router,\n    private service: AbstractPgCheckService) {\n  }\n\n  canActivate(\n    route: ActivatedRouteSnapshot,\n    state: RouterStateSnapshot\n  ): Observable | Promise | boolean | UrlTree {\n\n    return this._continue(state.url);\n  }\n\n  canActivateChild(\n    next: ActivatedRouteSnapshot,\n    state: RouterStateSnapshot): Observable | Promise | boolean {\n    return this._continue(state.url);\n  }\n\n  /** Logic to determine whether or not allow to continue to next page */\n  private _continue(pageUrl: string): boolean {\n\n    if (this.service.canBypassGuards()) {\n      return true;\n    }\n\n    /**\n     * Pre-requisite has not be completed\n     */\n    if (false === this.service.isPrerequisiteComplete()) {\n      this.router.navigate([this.service.getStartUrl()]);\n      return false;\n    }\n\n    if (false === this.service.isPageComplete(pageUrl)) {\n      return false;\n    }\n\n    return true;\n  }\n}\n\n\n        \n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/SampleImageInterface.html":{"url":"interfaces/SampleImageInterface.html","title":"interface - SampleImageInterface","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  SampleImageInterface\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/common/lib/components/sample-modal/sample-modal.component.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        desc\n                                \n                                \n                                        path\n                                \n                                \n                                            Optional\n                                        title\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        desc\n                                    \n                                \n                                \n                                    \n                                        desc:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        path\n                                    \n                                \n                                \n                                    \n                                        path:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        title\n                                    \n                                \n                                \n                                    \n                                        title:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import {Component, Input, ViewChild} from '@angular/core';\nimport {ModalDirective} from 'ngx-bootstrap';\nimport { Base } from '../../models/base';\n\nexport interface SampleImageInterface {\n  path: string;\n  desc: string;\n  title?: string;\n}\n\n@Component({\n  selector: 'common-sample-modal',\n  templateUrl: './sample-modal.component.html',\n  styleUrls: ['./sample-modal.component.scss']\n})\nexport class SampleModalComponent extends Base {\n\n  @Input() title: string;\n  @Input() images: SampleImageInterface[] = [];\n\n  @ViewChild('samplesModal') public sampleModal: ModalDirective;\n\n  constructor() {\n    super();\n  }\n\n  public openModal(): void {\n    this.sampleModal.show();\n  }\n\n  public closeModal(): void {\n    this.sampleModal.hide();\n  }\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/SampleModalComponent.html":{"url":"components/SampleModalComponent.html","title":"component - SampleModalComponent","body":"\n                   \n\n\n\n\n\n  Components\n  SampleModalComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    projects/common/lib/components/sample-modal/sample-modal.component.ts\n\n\n\n    \n        Extends\n    \n    \n                Base\n    \n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                common-sample-modal\n            \n\n            \n                styleUrls\n                ./sample-modal.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./sample-modal.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                sampleModal\n                            \n                            \n                                    Public\n                                objectId\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                closeModal\n                            \n                            \n                                    Public\n                                openModal\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                images\n                            \n                            \n                                title\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in projects/common/lib/components/sample-modal/sample-modal.component.ts:21\n                            \n                        \n\n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        images\n                    \n                \n                \n                    \n                        Type :         SampleImageInterface[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/sample-modal/sample-modal.component.ts:19\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        title\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/sample-modal/sample-modal.component.ts:18\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            closeModal\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    closeModal()\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/components/sample-modal/sample-modal.component.ts:31\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            openModal\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    openModal()\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/components/sample-modal/sample-modal.component.ts:27\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            sampleModal\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     ModalDirective\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ViewChild('samplesModal')\n                            \n                        \n                    \n                        \n                            \n                                    Defined in projects/common/lib/components/sample-modal/sample-modal.component.ts:21\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            objectId\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : UUID.UUID()\n                        \n                    \n                            \n                                \n                                    Inherited from         Base\n\n                                \n                            \n                        \n                            \n                                    Defined in         Base:11\n\n                            \n                        \n\n                \n                    \n                        An identifier for parents to keep track of components \n\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import {Component, Input, ViewChild} from '@angular/core';\nimport {ModalDirective} from 'ngx-bootstrap';\nimport { Base } from '../../models/base';\n\nexport interface SampleImageInterface {\n  path: string;\n  desc: string;\n  title?: string;\n}\n\n@Component({\n  selector: 'common-sample-modal',\n  templateUrl: './sample-modal.component.html',\n  styleUrls: ['./sample-modal.component.scss']\n})\nexport class SampleModalComponent extends Base {\n\n  @Input() title: string;\n  @Input() images: SampleImageInterface[] = [];\n\n  @ViewChild('samplesModal') public sampleModal: ModalDirective;\n\n  constructor() {\n    super();\n  }\n\n  public openModal(): void {\n    this.sampleModal.show();\n  }\n\n  public closeModal(): void {\n    this.sampleModal.hide();\n  }\n}\n\n    \n\n    \n        \n  \n    \n      \n        {{title}}\n        \n          \n        \n      \n\n      \n        \n          {{image.title}}\n          \n        \n      \n\n      \n        Close\n      \n\n    \n  \n\n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                    {{title}}                                                        {{image.title}}                                      Close            '\n    var COMPONENTS = [{'name': 'AccordionCommonComponent', 'selector': 'common-accordion'},{'name': 'AddressComponent', 'selector': 'common-address'},{'name': 'ButtonComponent', 'selector': 'common-button'},{'name': 'ButtonGroupComponent', 'selector': 'common-button-group'},{'name': 'CaptchaComponent', 'selector': 'common-captcha'},{'name': 'CheckboxComponent', 'selector': 'common-checkbox'},{'name': 'CityComponent', 'selector': 'common-city'},{'name': 'ConfirmTemplateComponent', 'selector': 'common-confirm-template'},{'name': 'ConsentModalComponent', 'selector': 'common-consent-modal'},{'name': 'CoreBreadcrumbComponent', 'selector': 'common-core-breadcrumb'},{'name': 'CountryComponent', 'selector': 'common-country'},{'name': 'DateComponent', 'selector': 'common-date'},{'name': 'DatepickerComponent', 'selector': 'common-datepicker'},{'name': 'DropdownComponent', 'selector': 'common-dropdown'},{'name': 'EmailComponent', 'selector': 'common-email'},{'name': 'ErrorContainerComponent', 'selector': 'common-error-container'},{'name': 'FileUploaderComponent', 'selector': 'common-file-uploader'},{'name': 'FormActionBarComponent', 'selector': 'common-form-action-bar'},{'name': 'FormSubmitBarComponent', 'selector': 'common-form-submit-bar'},{'name': 'FullNameComponent', 'selector': 'common-full-name'},{'name': 'GeocoderInputComponent', 'selector': 'common-geocoder-input'},{'name': 'HeaderComponent', 'selector': 'common-header'},{'name': 'NameComponent', 'selector': 'common-name'},{'name': 'PageFrameworkComponent', 'selector': 'common-page-framework'},{'name': 'PageSectionComponent', 'selector': 'common-page-section'},{'name': 'PasswordComponent', 'selector': 'common-password'},{'name': 'PhnComponent', 'selector': 'common-phn'},{'name': 'PhoneNumberComponent', 'selector': 'common-phone-number'},{'name': 'PostalCodeComponent', 'selector': 'common-postal-code'},{'name': 'ProvinceComponent', 'selector': 'common-province'},{'name': 'RadioComponent', 'selector': 'common-radio'},{'name': 'SampleModalComponent', 'selector': 'common-sample-modal'},{'name': 'SinComponent', 'selector': 'common-sin'},{'name': 'StreetComponent', 'selector': 'common-street'},{'name': 'ThumbnailComponent', 'selector': 'common-thumbnail'},{'name': 'ToggleComponent', 'selector': 'common-toggle'},{'name': 'WizardProgressBarComponent', 'selector': 'common-wizard-progress-bar'},{'name': 'XiconButtonComponent', 'selector': 'common-xicon-button'}];\n    var DIRECTIVES = [{'name': 'DateFieldFormatDirective', 'selector': '[commonDateFieldFormat]'},{'name': 'DuplicateCheckDirective', 'selector': '[commonDuplicateCheck]'},{'name': 'ValidateBcPostalDirective', 'selector': '[commonValidateBcPostal]'},{'name': 'ValidateCityDirective', 'selector': '[commonValidateCity]'},{'name': 'ValidateNameDirective', 'selector': '[commonValidateName]'},{'name': 'ValidatePostalcodeDirective', 'selector': '[commonValidatePostalcode]'},{'name': 'ValidateRegionDirective', 'selector': '[commonValidateRegion]'},{'name': 'ValidateStreetDirective', 'selector': '[commonValidateStreet]'}];\n    var ACTUAL_COMPONENT = {'name': 'SampleModalComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ServerPayload.html":{"url":"injectables/ServerPayload.html","title":"injectable - ServerPayload","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  ServerPayload\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/common/captcha/src/captcha-data.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                captcha\n                            \n                            \n                                expiry\n                            \n                            \n                                nonce\n                            \n                            \n                                validation\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            captcha\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/common/captcha/src/captcha-data.service.ts:10\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            expiry\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/common/captcha/src/captcha-data.service.ts:12\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            nonce\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/common/captcha/src/captcha-data.service.ts:9\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            validation\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/common/captcha/src/captcha-data.service.ts:11\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { HttpClient, HttpResponse } from '@angular/common/http';\n// import { Http, Response } from '@angular/http';\nimport { Observable } from 'rxjs';\n\n// payload returned from the server\n@Injectable()\nexport class ServerPayload {\n    nonce: string;\n    captcha: string;\n    validation: string;\n    expiry: string;\n}\n\n@Injectable()\nexport class CaptchaDataService {\n\n    constructor(private httpClient: HttpClient) { }\n    // private http: Http) { }\n\n    public fetchData(apiBaseUrl: string, nonce: string): Observable> {\n        return this.httpClient\n            .post(\n                apiBaseUrl + '/captcha',\n                { nonce: nonce },\n                { observe: 'response' });\n    }\n\n    public verifyCaptcha(apiBaseUrl: string,\n                            nonce: string,\n                            answer: string,\n                            encryptedAnswer: string): Observable> {\n        return this.httpClient\n            .post(\n                apiBaseUrl + '/verify/captcha',\n                { nonce: nonce, answer: answer, validation: encryptedAnswer },\n                { observe: 'response' });\n    }\n\n    public fetchAudio(apiBaseUrl: string, validation: string, translation?: string) {\n        const payload: any = { validation: validation };\n        if (translation) {\n            payload.translation = translation;\n        }\n        return this.httpClient\n            .post(\n                apiBaseUrl + '/captcha/audio',\n                payload,\n                { observe: 'response' });\n    }\n    /*\n      fetchData(apiBaseUrl: string, nonce: string): Observable {\n        return this.http.post(apiBaseUrl + '/captcha', {nonce: nonce}, {});\n      }\n\n      verifyCaptcha(apiBaseUrl: string, nonce: string, answer: string, encryptedAnswer: string): Observable {\n        return this.http.post(apiBaseUrl + '/verify/captcha', {nonce: nonce, answer: answer, validation: encryptedAnswer}, {});\n      }\n\n      fetchAudio(apiBaseUrl: string, validation: string): Observable {\n        return this.http.post(apiBaseUrl + '/captcha/audio', {validation: validation}, {});\n      }\n    */\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/SharedCoreModule.html":{"url":"modules/SharedCoreModule.html","title":"module - SharedCoreModule","body":"\n                   \n\n\n\n\n    Modules\n    SharedCoreModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_SharedCoreModule\n\n\n\ncluster_SharedCoreModule_declarations\n\n\n\ncluster_SharedCoreModule_exports\n\n\n\n\nAccordionCommonComponent\n\nAccordionCommonComponent\n\n\n\nSharedCoreModule\n\nSharedCoreModule\n\nSharedCoreModule -->\n\nAccordionCommonComponent->SharedCoreModule\n\n\n\n\n\nAddressComponent\n\nAddressComponent\n\nSharedCoreModule -->\n\nAddressComponent->SharedCoreModule\n\n\n\n\n\nButtonComponent\n\nButtonComponent\n\nSharedCoreModule -->\n\nButtonComponent->SharedCoreModule\n\n\n\n\n\nButtonGroupComponent\n\nButtonGroupComponent\n\nSharedCoreModule -->\n\nButtonGroupComponent->SharedCoreModule\n\n\n\n\n\nCheckboxComponent\n\nCheckboxComponent\n\nSharedCoreModule -->\n\nCheckboxComponent->SharedCoreModule\n\n\n\n\n\nCityComponent\n\nCityComponent\n\nSharedCoreModule -->\n\nCityComponent->SharedCoreModule\n\n\n\n\n\nConfirmTemplateComponent\n\nConfirmTemplateComponent\n\nSharedCoreModule -->\n\nConfirmTemplateComponent->SharedCoreModule\n\n\n\n\n\nConsentModalComponent\n\nConsentModalComponent\n\nSharedCoreModule -->\n\nConsentModalComponent->SharedCoreModule\n\n\n\n\n\nCoreBreadcrumbComponent\n\nCoreBreadcrumbComponent\n\nSharedCoreModule -->\n\nCoreBreadcrumbComponent->SharedCoreModule\n\n\n\n\n\nCountryComponent\n\nCountryComponent\n\nSharedCoreModule -->\n\nCountryComponent->SharedCoreModule\n\n\n\n\n\nDateComponent\n\nDateComponent\n\nSharedCoreModule -->\n\nDateComponent->SharedCoreModule\n\n\n\n\n\nDateFieldFormatDirective\n\nDateFieldFormatDirective\n\nSharedCoreModule -->\n\nDateFieldFormatDirective->SharedCoreModule\n\n\n\n\n\nDatepickerComponent\n\nDatepickerComponent\n\nSharedCoreModule -->\n\nDatepickerComponent->SharedCoreModule\n\n\n\n\n\nDropdownComponent\n\nDropdownComponent\n\nSharedCoreModule -->\n\nDropdownComponent->SharedCoreModule\n\n\n\n\n\nDuplicateCheckDirective\n\nDuplicateCheckDirective\n\nSharedCoreModule -->\n\nDuplicateCheckDirective->SharedCoreModule\n\n\n\n\n\nEmailComponent\n\nEmailComponent\n\nSharedCoreModule -->\n\nEmailComponent->SharedCoreModule\n\n\n\n\n\nErrorContainerComponent\n\nErrorContainerComponent\n\nSharedCoreModule -->\n\nErrorContainerComponent->SharedCoreModule\n\n\n\n\n\nFileUploaderComponent\n\nFileUploaderComponent\n\nSharedCoreModule -->\n\nFileUploaderComponent->SharedCoreModule\n\n\n\n\n\nFormActionBarComponent\n\nFormActionBarComponent\n\nSharedCoreModule -->\n\nFormActionBarComponent->SharedCoreModule\n\n\n\n\n\nFormSubmitBarComponent\n\nFormSubmitBarComponent\n\nSharedCoreModule -->\n\nFormSubmitBarComponent->SharedCoreModule\n\n\n\n\n\nFullNameComponent\n\nFullNameComponent\n\nSharedCoreModule -->\n\nFullNameComponent->SharedCoreModule\n\n\n\n\n\nGeocoderInputComponent\n\nGeocoderInputComponent\n\nSharedCoreModule -->\n\nGeocoderInputComponent->SharedCoreModule\n\n\n\n\n\nHeaderComponent\n\nHeaderComponent\n\nSharedCoreModule -->\n\nHeaderComponent->SharedCoreModule\n\n\n\n\n\nNameComponent\n\nNameComponent\n\nSharedCoreModule -->\n\nNameComponent->SharedCoreModule\n\n\n\n\n\nPageFrameworkComponent\n\nPageFrameworkComponent\n\nSharedCoreModule -->\n\nPageFrameworkComponent->SharedCoreModule\n\n\n\n\n\nPageSectionComponent\n\nPageSectionComponent\n\nSharedCoreModule -->\n\nPageSectionComponent->SharedCoreModule\n\n\n\n\n\nPasswordComponent\n\nPasswordComponent\n\nSharedCoreModule -->\n\nPasswordComponent->SharedCoreModule\n\n\n\n\n\nPhnComponent\n\nPhnComponent\n\nSharedCoreModule -->\n\nPhnComponent->SharedCoreModule\n\n\n\n\n\nPhoneNumberComponent\n\nPhoneNumberComponent\n\nSharedCoreModule -->\n\nPhoneNumberComponent->SharedCoreModule\n\n\n\n\n\nPostalCodeComponent\n\nPostalCodeComponent\n\nSharedCoreModule -->\n\nPostalCodeComponent->SharedCoreModule\n\n\n\n\n\nProvinceComponent\n\nProvinceComponent\n\nSharedCoreModule -->\n\nProvinceComponent->SharedCoreModule\n\n\n\n\n\nRadioComponent\n\nRadioComponent\n\nSharedCoreModule -->\n\nRadioComponent->SharedCoreModule\n\n\n\n\n\nSampleModalComponent\n\nSampleModalComponent\n\nSharedCoreModule -->\n\nSampleModalComponent->SharedCoreModule\n\n\n\n\n\nSinComponent\n\nSinComponent\n\nSharedCoreModule -->\n\nSinComponent->SharedCoreModule\n\n\n\n\n\nStreetComponent\n\nStreetComponent\n\nSharedCoreModule -->\n\nStreetComponent->SharedCoreModule\n\n\n\n\n\nThumbnailComponent\n\nThumbnailComponent\n\nSharedCoreModule -->\n\nThumbnailComponent->SharedCoreModule\n\n\n\n\n\nToggleComponent\n\nToggleComponent\n\nSharedCoreModule -->\n\nToggleComponent->SharedCoreModule\n\n\n\n\n\nValidateBcPostalDirective\n\nValidateBcPostalDirective\n\nSharedCoreModule -->\n\nValidateBcPostalDirective->SharedCoreModule\n\n\n\n\n\nValidateCityDirective\n\nValidateCityDirective\n\nSharedCoreModule -->\n\nValidateCityDirective->SharedCoreModule\n\n\n\n\n\nValidateNameDirective\n\nValidateNameDirective\n\nSharedCoreModule -->\n\nValidateNameDirective->SharedCoreModule\n\n\n\n\n\nValidatePostalcodeDirective\n\nValidatePostalcodeDirective\n\nSharedCoreModule -->\n\nValidatePostalcodeDirective->SharedCoreModule\n\n\n\n\n\nValidateRegionDirective\n\nValidateRegionDirective\n\nSharedCoreModule -->\n\nValidateRegionDirective->SharedCoreModule\n\n\n\n\n\nValidateStreetDirective\n\nValidateStreetDirective\n\nSharedCoreModule -->\n\nValidateStreetDirective->SharedCoreModule\n\n\n\n\n\nWizardProgressBarComponent\n\nWizardProgressBarComponent\n\nSharedCoreModule -->\n\nWizardProgressBarComponent->SharedCoreModule\n\n\n\n\n\nXiconButtonComponent\n\nXiconButtonComponent\n\nSharedCoreModule -->\n\nXiconButtonComponent->SharedCoreModule\n\n\n\n\n\nAccordionCommonComponent \n\nAccordionCommonComponent \n\nAccordionCommonComponent  -->\n\nSharedCoreModule->AccordionCommonComponent \n\n\n\n\n\nAddressComponent \n\nAddressComponent \n\nAddressComponent  -->\n\nSharedCoreModule->AddressComponent \n\n\n\n\n\nButtonComponent \n\nButtonComponent \n\nButtonComponent  -->\n\nSharedCoreModule->ButtonComponent \n\n\n\n\n\nButtonGroupComponent \n\nButtonGroupComponent \n\nButtonGroupComponent  -->\n\nSharedCoreModule->ButtonGroupComponent \n\n\n\n\n\nCheckboxComponent \n\nCheckboxComponent \n\nCheckboxComponent  -->\n\nSharedCoreModule->CheckboxComponent \n\n\n\n\n\nCityComponent \n\nCityComponent \n\nCityComponent  -->\n\nSharedCoreModule->CityComponent \n\n\n\n\n\nConfirmTemplateComponent \n\nConfirmTemplateComponent \n\nConfirmTemplateComponent  -->\n\nSharedCoreModule->ConfirmTemplateComponent \n\n\n\n\n\nConsentModalComponent \n\nConsentModalComponent \n\nConsentModalComponent  -->\n\nSharedCoreModule->ConsentModalComponent \n\n\n\n\n\nCoreBreadcrumbComponent \n\nCoreBreadcrumbComponent \n\nCoreBreadcrumbComponent  -->\n\nSharedCoreModule->CoreBreadcrumbComponent \n\n\n\n\n\nCountryComponent \n\nCountryComponent \n\nCountryComponent  -->\n\nSharedCoreModule->CountryComponent \n\n\n\n\n\nDateComponent \n\nDateComponent \n\nDateComponent  -->\n\nSharedCoreModule->DateComponent \n\n\n\n\n\nDateFieldFormatDirective \n\nDateFieldFormatDirective \n\nDateFieldFormatDirective  -->\n\nSharedCoreModule->DateFieldFormatDirective \n\n\n\n\n\nDatepickerComponent \n\nDatepickerComponent \n\nDatepickerComponent  -->\n\nSharedCoreModule->DatepickerComponent \n\n\n\n\n\nDropdownComponent \n\nDropdownComponent \n\nDropdownComponent  -->\n\nSharedCoreModule->DropdownComponent \n\n\n\n\n\nDuplicateCheckDirective \n\nDuplicateCheckDirective \n\nDuplicateCheckDirective  -->\n\nSharedCoreModule->DuplicateCheckDirective \n\n\n\n\n\nEmailComponent \n\nEmailComponent \n\nEmailComponent  -->\n\nSharedCoreModule->EmailComponent \n\n\n\n\n\nErrorContainerComponent \n\nErrorContainerComponent \n\nErrorContainerComponent  -->\n\nSharedCoreModule->ErrorContainerComponent \n\n\n\n\n\nFileUploaderComponent \n\nFileUploaderComponent \n\nFileUploaderComponent  -->\n\nSharedCoreModule->FileUploaderComponent \n\n\n\n\n\nFormActionBarComponent \n\nFormActionBarComponent \n\nFormActionBarComponent  -->\n\nSharedCoreModule->FormActionBarComponent \n\n\n\n\n\nFormSubmitBarComponent \n\nFormSubmitBarComponent \n\nFormSubmitBarComponent  -->\n\nSharedCoreModule->FormSubmitBarComponent \n\n\n\n\n\nFullNameComponent \n\nFullNameComponent \n\nFullNameComponent  -->\n\nSharedCoreModule->FullNameComponent \n\n\n\n\n\nGeocoderInputComponent \n\nGeocoderInputComponent \n\nGeocoderInputComponent  -->\n\nSharedCoreModule->GeocoderInputComponent \n\n\n\n\n\nHeaderComponent \n\nHeaderComponent \n\nHeaderComponent  -->\n\nSharedCoreModule->HeaderComponent \n\n\n\n\n\nNameComponent \n\nNameComponent \n\nNameComponent  -->\n\nSharedCoreModule->NameComponent \n\n\n\n\n\nPageFrameworkComponent \n\nPageFrameworkComponent \n\nPageFrameworkComponent  -->\n\nSharedCoreModule->PageFrameworkComponent \n\n\n\n\n\nPageSectionComponent \n\nPageSectionComponent \n\nPageSectionComponent  -->\n\nSharedCoreModule->PageSectionComponent \n\n\n\n\n\nPasswordComponent \n\nPasswordComponent \n\nPasswordComponent  -->\n\nSharedCoreModule->PasswordComponent \n\n\n\n\n\nPhnComponent \n\nPhnComponent \n\nPhnComponent  -->\n\nSharedCoreModule->PhnComponent \n\n\n\n\n\nPhoneNumberComponent \n\nPhoneNumberComponent \n\nPhoneNumberComponent  -->\n\nSharedCoreModule->PhoneNumberComponent \n\n\n\n\n\nPostalCodeComponent \n\nPostalCodeComponent \n\nPostalCodeComponent  -->\n\nSharedCoreModule->PostalCodeComponent \n\n\n\n\n\nProvinceComponent \n\nProvinceComponent \n\nProvinceComponent  -->\n\nSharedCoreModule->ProvinceComponent \n\n\n\n\n\nRadioComponent \n\nRadioComponent \n\nRadioComponent  -->\n\nSharedCoreModule->RadioComponent \n\n\n\n\n\nSampleModalComponent \n\nSampleModalComponent \n\nSampleModalComponent  -->\n\nSharedCoreModule->SampleModalComponent \n\n\n\n\n\nSinComponent \n\nSinComponent \n\nSinComponent  -->\n\nSharedCoreModule->SinComponent \n\n\n\n\n\nStreetComponent \n\nStreetComponent \n\nStreetComponent  -->\n\nSharedCoreModule->StreetComponent \n\n\n\n\n\nThumbnailComponent \n\nThumbnailComponent \n\nThumbnailComponent  -->\n\nSharedCoreModule->ThumbnailComponent \n\n\n\n\n\nToggleComponent \n\nToggleComponent \n\nToggleComponent  -->\n\nSharedCoreModule->ToggleComponent \n\n\n\n\n\nValidateBcPostalDirective \n\nValidateBcPostalDirective \n\nValidateBcPostalDirective  -->\n\nSharedCoreModule->ValidateBcPostalDirective \n\n\n\n\n\nValidateCityDirective \n\nValidateCityDirective \n\nValidateCityDirective  -->\n\nSharedCoreModule->ValidateCityDirective \n\n\n\n\n\nValidateNameDirective \n\nValidateNameDirective \n\nValidateNameDirective  -->\n\nSharedCoreModule->ValidateNameDirective \n\n\n\n\n\nValidatePostalcodeDirective \n\nValidatePostalcodeDirective \n\nValidatePostalcodeDirective  -->\n\nSharedCoreModule->ValidatePostalcodeDirective \n\n\n\n\n\nValidateRegionDirective \n\nValidateRegionDirective \n\nValidateRegionDirective  -->\n\nSharedCoreModule->ValidateRegionDirective \n\n\n\n\n\nValidateStreetDirective \n\nValidateStreetDirective \n\nValidateStreetDirective  -->\n\nSharedCoreModule->ValidateStreetDirective \n\n\n\n\n\nWizardProgressBarComponent \n\nWizardProgressBarComponent \n\nWizardProgressBarComponent  -->\n\nSharedCoreModule->WizardProgressBarComponent \n\n\n\n\n\nXiconButtonComponent \n\nXiconButtonComponent \n\nXiconButtonComponent  -->\n\nSharedCoreModule->XiconButtonComponent \n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            projects/common/lib/shared-core.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            AccordionCommonComponent\n                        \n                        \n                            AddressComponent\n                        \n                        \n                            ButtonComponent\n                        \n                        \n                            ButtonGroupComponent\n                        \n                        \n                            CheckboxComponent\n                        \n                        \n                            CityComponent\n                        \n                        \n                            ConfirmTemplateComponent\n                        \n                        \n                            ConsentModalComponent\n                        \n                        \n                            CoreBreadcrumbComponent\n                        \n                        \n                            CountryComponent\n                        \n                        \n                            DateComponent\n                        \n                        \n                            DateFieldFormatDirective\n                        \n                        \n                            DatepickerComponent\n                        \n                        \n                            DropdownComponent\n                        \n                        \n                            DuplicateCheckDirective\n                        \n                        \n                            EmailComponent\n                        \n                        \n                            ErrorContainerComponent\n                        \n                        \n                            FileUploaderComponent\n                        \n                        \n                            FormActionBarComponent\n                        \n                        \n                            FormSubmitBarComponent\n                        \n                        \n                            FullNameComponent\n                        \n                        \n                            GeocoderInputComponent\n                        \n                        \n                            HeaderComponent\n                        \n                        \n                            NameComponent\n                        \n                        \n                            PageFrameworkComponent\n                        \n                        \n                            PageSectionComponent\n                        \n                        \n                            PasswordComponent\n                        \n                        \n                            PhnComponent\n                        \n                        \n                            PhoneNumberComponent\n                        \n                        \n                            PostalCodeComponent\n                        \n                        \n                            ProvinceComponent\n                        \n                        \n                            RadioComponent\n                        \n                        \n                            SampleModalComponent\n                        \n                        \n                            SinComponent\n                        \n                        \n                            StreetComponent\n                        \n                        \n                            ThumbnailComponent\n                        \n                        \n                            ToggleComponent\n                        \n                        \n                            ValidateBcPostalDirective\n                        \n                        \n                            ValidateCityDirective\n                        \n                        \n                            ValidateNameDirective\n                        \n                        \n                            ValidatePostalcodeDirective\n                        \n                        \n                            ValidateRegionDirective\n                        \n                        \n                            ValidateStreetDirective\n                        \n                        \n                            WizardProgressBarComponent\n                        \n                        \n                            XiconButtonComponent\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            AccordionCommonComponent\n                        \n                        \n                            AddressComponent\n                        \n                        \n                            ButtonComponent\n                        \n                        \n                            ButtonGroupComponent\n                        \n                        \n                            CheckboxComponent\n                        \n                        \n                            CityComponent\n                        \n                        \n                            ConfirmTemplateComponent\n                        \n                        \n                            ConsentModalComponent\n                        \n                        \n                            CoreBreadcrumbComponent\n                        \n                        \n                            CountryComponent\n                        \n                        \n                            DateComponent\n                        \n                        \n                            DateFieldFormatDirective\n                        \n                        \n                            DatepickerComponent\n                        \n                        \n                            DropdownComponent\n                        \n                        \n                            DuplicateCheckDirective\n                        \n                        \n                            EmailComponent\n                        \n                        \n                            ErrorContainerComponent\n                        \n                        \n                            FileUploaderComponent\n                        \n                        \n                            FormActionBarComponent\n                        \n                        \n                            FormSubmitBarComponent\n                        \n                        \n                            FullNameComponent\n                        \n                        \n                            GeocoderInputComponent\n                        \n                        \n                            HeaderComponent\n                        \n                        \n                            NameComponent\n                        \n                        \n                            PageFrameworkComponent\n                        \n                        \n                            PageSectionComponent\n                        \n                        \n                            PasswordComponent\n                        \n                        \n                            PhnComponent\n                        \n                        \n                            PhoneNumberComponent\n                        \n                        \n                            PostalCodeComponent\n                        \n                        \n                            ProvinceComponent\n                        \n                        \n                            RadioComponent\n                        \n                        \n                            SampleModalComponent\n                        \n                        \n                            SinComponent\n                        \n                        \n                            StreetComponent\n                        \n                        \n                            ThumbnailComponent\n                        \n                        \n                            ToggleComponent\n                        \n                        \n                            ValidateBcPostalDirective\n                        \n                        \n                            ValidateCityDirective\n                        \n                        \n                            ValidateNameDirective\n                        \n                        \n                            ValidatePostalcodeDirective\n                        \n                        \n                            ValidateRegionDirective\n                        \n                        \n                            ValidateStreetDirective\n                        \n                        \n                            WizardProgressBarComponent\n                        \n                        \n                            XiconButtonComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { CoreBreadcrumbComponent } from './components/core-breadcrumb/core-breadcrumb.component';\nimport { FormActionBarComponent } from './components/form-action-bar/form-action-bar.component';\nimport { PageFrameworkComponent } from './components/page-framework/page-framework.component';\nimport { PasswordComponent } from './components/password/password.component';\nimport { WizardProgressBarComponent } from './components/wizard-progress-bar/wizard-progress-bar.component';\nimport { NgForm, FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { ProgressbarModule, ModalModule, TypeaheadModule } from 'ngx-bootstrap';\nimport { RouterModule } from '@angular/router';\nimport { DateComponent } from './components/date/date.component';\nimport { DatepickerComponent } from './components/datepicker/datepicker.component';\nimport { NgxMyDatePickerModule } from 'ngx-mydatepicker';\nimport { FileUploaderComponent } from './components/file-uploader/file-uploader.component';\nimport { ThumbnailComponent } from './components/thumbnail/thumbnail.component';\nimport { FormSubmitBarComponent } from './components/form-submit-bar/form-submit-bar.component';\nimport { TextMaskModule } from 'angular2-text-mask';\nimport { PostalCodeComponent } from './components/postal-code/postal-code.component';\nimport { PageSectionComponent } from './components/page-section/page-section.component';\nimport { DropdownComponent } from './components/dropdown/dropdown.component';\nimport { NgSelectModule } from '@ng-select/ng-select';\nimport { ToggleComponent } from './components/toggle/toggle.component';\nimport { AddressComponent } from './components/address/address.component';\nimport { CountryComponent } from './components/country/country.component';\nimport { ProvinceComponent } from './components/province/province.component';\nimport { CityComponent } from './components/city/city.component';\nimport { StreetComponent } from './components/street/street.component';\nimport { ButtonGroupComponent } from './components/button-group/button-group.component';\nimport { ButtonComponent } from './components/button/button.component';\nimport { CheckboxComponent } from './components/checkbox/checkbox.component';\nimport { ConsentModalComponent } from './components/consent-modal/consent-modal.component';\nimport { NameComponent } from './components/name/name.component';\nimport { PhoneNumberComponent } from './components/phone-number/phone-number.component';\nimport { RadioComponent } from './components/radio/radio.component';\nimport { AccordionModule } from 'ngx-bootstrap/accordion';\nimport { AccordionCommonComponent } from './components/accordion/accordion.component';\nimport { ValidateNameDirective } from './components/name/validate-name.directive';\nimport { SinComponent } from './components/sin/sin.component';\nimport { PhnComponent } from './components/phn/phn.component';\nimport { FullNameComponent } from './components/full-name/full-name.component';\nimport { HeaderComponent } from './components/header/header.component';\nimport { ValidateBcPostalDirective } from './components/postal-code/validate-bc-postal.directive';\nimport { XiconButtonComponent } from './components/xicon-button/xicon-button.component';\nimport { DuplicateCheckDirective } from './components/duplicate-check/duplicate-check.directive';\nimport { ErrorContainerComponent } from './components/error-container/error-container.component';\nimport { ValidateStreetDirective } from './components/street/validate-street.directive';\nimport { ValidateCityDirective } from './components/city/validate-city.directive';\nimport { ValidateRegionDirective } from './components/validate-region/validate-region.directive';\nimport { ValidatePostalcodeDirective } from './components/postal-code/validate-postalcode.directive';\nimport { SampleModalComponent } from './components/sample-modal/sample-modal.component';\nimport { EmailComponent } from './components/email/email.component';\nimport { ConfirmTemplateComponent } from './components/confirm-template/confirm-template.component';\nimport { GeocoderInputComponent } from './components/geocoder-input/geocoder-input.component';\nimport { DateFieldFormatDirective } from './components/date/date-field-format.directive';\n\n\nconst componentList = [\n  CoreBreadcrumbComponent,\n  FormActionBarComponent,\n  PageFrameworkComponent,\n  PasswordComponent,\n  WizardProgressBarComponent,\n  DateComponent,\n  DatepickerComponent,\n  FileUploaderComponent,\n  ThumbnailComponent,\n  FormSubmitBarComponent,\n  PostalCodeComponent,\n  PageSectionComponent,\n  DropdownComponent,\n  ToggleComponent,\n  AddressComponent,\n  CountryComponent,\n  ProvinceComponent,\n  CityComponent,\n  StreetComponent,\n  ButtonGroupComponent,\n  ButtonComponent,\n  CheckboxComponent,\n  ConsentModalComponent,\n  NameComponent,\n  FullNameComponent,\n  PhoneNumberComponent,\n  RadioComponent,\n  AccordionCommonComponent,\n  SinComponent,\n  PhnComponent,\n  HeaderComponent,\n  XiconButtonComponent,\n  ErrorContainerComponent,\n  SampleModalComponent,\n  EmailComponent,\n  ConfirmTemplateComponent,\n  GeocoderInputComponent,\n\n\n  // Directives\n  ValidateNameDirective,\n  DuplicateCheckDirective,\n  ValidateBcPostalDirective,\n  ValidateStreetDirective,\n  ValidateCityDirective,\n  ValidateRegionDirective,\n  ValidatePostalcodeDirective,\n  DateFieldFormatDirective\n];\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    ReactiveFormsModule,\n    ProgressbarModule.forRoot(),\n    RouterModule,\n    NgxMyDatePickerModule.forRoot(),\n    ModalModule.forRoot(),\n    TextMaskModule,\n    NgSelectModule,\n    TypeaheadModule.forRoot(),\n    AccordionModule.forRoot()\n  ],\n  declarations: [\n    componentList,\n  ],\n  exports: [\n    componentList\n  ],\n  providers: [\n    NgForm\n  ]\n})\nexport class SharedCoreModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/SimpleDate.html":{"url":"interfaces/SimpleDate.html","title":"interface - SimpleDate","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  SimpleDate\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/common/lib/models/simple-date.interface.ts\n        \n\n            \n                Description\n            \n            \n                Interface used in the following components/models:\n  a) person.model.ts\n  b) date.component.ts\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        day\n                                \n                                \n                                        month\n                                \n                                \n                                        year\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        day\n                                    \n                                \n                                \n                                    \n                                        day:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        month\n                                    \n                                \n                                \n                                    \n                                        month:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        year\n                                    \n                                \n                                \n                                    \n                                        year:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface SimpleDate {\n  day: number;\n  month: number;\n  year: number;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/SinComponent.html":{"url":"components/SinComponent.html","title":"component - SinComponent","body":"\n                   \n\n\n\n\n\n  Components\n  SinComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    projects/common/lib/components/sin/sin.component.ts\n\n\n    \n        Description\n    \n    \n        This component reports the following errors.\n    required\n    invalid\n    duplicate\n  These messages can be changed by updated messages using the errorMessages interface\n  Ex. { required: 'This field is required', invalid: '{label} is invalid' }\n\n    \n\n    \n        Extends\n    \n    \n                AbstractFormControl\n    \n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                common-sin\n            \n\n            \n                styleUrls\n                ./sin.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./sin.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                _defaultErrMsg\n                            \n                            \n                                    Public\n                                controlDir\n                            \n                            \n                                mask\n                            \n                            \n                                sin\n                            \n                            \n                                    Abstract\n                                _defaultErrMsg\n                            \n                            \n                                _onChange\n                            \n                            \n                                _onTouched\n                            \n                            \n                                    Public\n                                objectId\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                            \n                                onBlur\n                            \n                            \n                                onValueChange\n                            \n                            \n                                    Private\n                                validateSelf\n                            \n                            \n                                    Private\n                                validateSin\n                            \n                            \n                                writeValue\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                registerOnChange\n                            \n                            \n                                registerOnTouched\n                            \n                            \n                                    Protected\n                                registerValidation\n                            \n                            \n                                setDisabledState\n                            \n                            \n                                    Protected\n                                setErrorMsg\n                            \n                            \n                                    Private\n                                validateLabel\n                            \n                            \n                                    Abstract\n                                writeValue\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                label\n                            \n                            \n                                labelforId\n                            \n                            \n                                maxlength\n                            \n                            \n                                placeholder\n                            \n                            \n                                value\n                            \n                            \n                                disabled\n                            \n                            \n                                errorMessage\n                            \n                            \n                                label\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                blur\n                            \n                            \n                                valueChange\n                            \n                        \n                    \n                \n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    value\n                                \n                            \n                        \n                    \n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(controlDir: NgControl)\n                    \n                \n                        \n                            \n                                Defined in projects/common/lib/components/sin/sin.component.ts:50\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        controlDir\n                                                  \n                                                        \n                                                                        NgControl\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        label\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'Social Insurance Number (SIN)'\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/sin/sin.component.ts:33\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        labelforId\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'sin_' + this.objectId\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/sin/sin.component.ts:36\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        maxlength\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : '15'\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/sin/sin.component.ts:34\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        placeholder\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : '111 111 111'\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/sin/sin.component.ts:35\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        value\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/sin/sin.component.ts:39\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        disabled\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                            \n                                \n                                    Inherited from         AbstractFormControl\n\n                                \n                            \n                        \n                            \n                                    Defined in         AbstractFormControl:16\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        errorMessage\n                    \n                \n                \n                    \n                        Type :         ErrorMessage\n\n                    \n                \n                            \n                                \n                                    Inherited from         AbstractFormControl\n\n                                \n                            \n                        \n                            \n                                    Defined in         AbstractFormControl:19\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        label\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                            \n                                \n                                    Inherited from         AbstractFormControl\n\n                                \n                            \n                        \n                            \n                                    Defined in         AbstractFormControl:14\n\n                            \n                        \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        blur\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/sin/sin.component.ts:50\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        valueChange\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/sin/sin.component.ts:49\n                            \n                        \n            \n        \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/components/sin/sin.component.ts:62\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            onBlur\n                        \n                        \n                    \n                \n            \n            \n                \nonBlur(event: any)\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/components/sin/sin.component.ts:77\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    event\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            onValueChange\n                        \n                        \n                    \n                \n            \n            \n                \nonValueChange(value: any)\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/components/sin/sin.component.ts:68\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            validateSelf\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    validateSelf()\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/components/sin/sin.component.ts:88\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     ValidationErrors | null\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            validateSin\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    validateSin()\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/components/sin/sin.component.ts:97\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     ValidationErrors | null\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            writeValue\n                        \n                        \n                    \n                \n            \n            \n                \nwriteValue(value: any)\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/components/sin/sin.component.ts:82\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Inherited from         AbstractFormControl\n\n                \n            \n            \n                \n                        Defined in         AbstractFormControl:27\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            registerOnChange\n                        \n                        \n                    \n                \n            \n            \n                \nregisterOnChange(fn: any)\n                \n            \n\n\n            \n                \n                    Inherited from         AbstractFormControl\n\n                \n            \n            \n                \n                        Defined in         AbstractFormControl:35\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    fn\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            registerOnTouched\n                        \n                        \n                    \n                \n            \n            \n                \nregisterOnTouched(fn: any)\n                \n            \n\n\n            \n                \n                    Inherited from         AbstractFormControl\n\n                \n            \n            \n                \n                        Defined in         AbstractFormControl:40\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    fn\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            registerValidation\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    registerValidation(ngControl: NgControl, fn: ValidationErrors)\n                \n            \n\n\n            \n                \n                    Inherited from         AbstractFormControl\n\n                \n            \n            \n                \n                        Defined in         AbstractFormControl:68\n\n                \n            \n\n\n            \n                \n                    Register self validating method\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    ngControl\n                                    \n                                                NgControl\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                    \n                                \n                                \n                                    fn\n                                    \n                                                ValidationErrors\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        function for validating self\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            setDisabledState\n                        \n                        \n                    \n                \n            \n            \n                \nsetDisabledState(isDisabled: boolean)\n                \n            \n\n\n            \n                \n                    Inherited from         AbstractFormControl\n\n                \n            \n            \n                \n                        Defined in         AbstractFormControl:45\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    isDisabled\n                                    \n                                                boolean\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            setErrorMsg\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    setErrorMsg()\n                \n            \n\n\n            \n                \n                    Inherited from         AbstractFormControl\n\n                \n            \n            \n                \n                        Defined in         AbstractFormControl:49\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            validateLabel\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    validateLabel()\n                \n            \n\n\n            \n                \n                    Inherited from         AbstractFormControl\n\n                \n            \n            \n                \n                        Defined in         AbstractFormControl:88\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Abstract\n                            writeValue\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    writeValue(value: any)\n                \n            \n\n\n            \n                \n                    Inherited from         AbstractFormControl\n\n                \n            \n            \n                \n                        Defined in         AbstractFormControl:32\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            _defaultErrMsg\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         ErrorMessage\n\n                        \n                    \n                    \n                        \n                            Default value : {\n    required: `${LabelReplacementTag} is required.`,\n    invalid: `${LabelReplacementTag} is invalid.`,\n    duplicate: `${LabelReplacementTag} was already used for another family member.`\n  }\n                        \n                    \n                        \n                            \n                                    Defined in projects/common/lib/components/sin/sin.component.ts:24\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            controlDir\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         NgControl\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Optional()@Self()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in projects/common/lib/components/sin/sin.component.ts:52\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            mask\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/common/lib/components/sin/sin.component.ts:31\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            sin\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : ''\n                        \n                    \n                        \n                            \n                                    Defined in projects/common/lib/components/sin/sin.component.ts:30\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Abstract\n                            _defaultErrMsg\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         ErrorMessage\n\n                        \n                    \n                    \n                        \n                            Default value : {}\n                        \n                    \n                            \n                                \n                                    Inherited from         AbstractFormControl\n\n                                \n                            \n                        \n                            \n                                    Defined in         AbstractFormControl:11\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            _onChange\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : () => {...}\n                        \n                    \n                            \n                                \n                                    Inherited from         AbstractFormControl\n\n                                \n                            \n                        \n                            \n                                    Defined in         AbstractFormControl:23\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            _onTouched\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : () => {...}\n                        \n                    \n                            \n                                \n                                    Inherited from         AbstractFormControl\n\n                                \n                            \n                        \n                            \n                                    Defined in         AbstractFormControl:24\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            objectId\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : UUID.UUID()\n                        \n                    \n                            \n                                \n                                    Inherited from         Base\n\n                                \n                            \n                        \n                            \n                                    Defined in         Base:11\n\n                            \n                        \n\n                \n                    \n                        An identifier for parents to keep track of components \n\n                    \n                \n\n            \n        \n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        value\n                    \n                \n\n                \n                    \n                        getvalue()\n                    \n                \n                            \n                                \n                                    Defined in projects/common/lib/components/sin/sin.component.ts:45\n                                \n                            \n\n                \n                    \n                        setvalue(val: string)\n                    \n                \n                            \n                                \n                                    Defined in projects/common/lib/components/sin/sin.component.ts:39\n                                \n                            \n                    \n                        \n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                        Type\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                            val\n                                                    \n                                                            \n                                                                            string\n                                                            \n                                                    \n                                                        \n                                                                No\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :         void\n\n                                \n                        \n                    \n            \n        \n\n\n\n\n    \n        import { Component, EventEmitter, Input, Output, Optional, Self, OnInit} from '@angular/core';\nimport { NUMBER, SPACE } from '../../models/mask.constants';\nimport { NgControl, ValidationErrors } from '@angular/forms';\nimport { AbstractFormControl } from '../../models/abstract-form-control';\nimport { LabelReplacementTag, ErrorMessage } from '../../models/error-message.interface';\n\n/**\n * This component reports the following errors.\n *    required\n *    invalid\n *    duplicate\n *\n *  These messages can be changed by updated messages using the errorMessages interface\n *  Ex. { required: 'This field is required', invalid: '{label} is invalid' }\n */\n\n@Component({\n  selector: 'common-sin',\n  templateUrl: './sin.component.html',\n  styleUrls: ['./sin.component.scss']\n})\nexport class SinComponent extends AbstractFormControl implements OnInit {\n\n  _defaultErrMsg: ErrorMessage = {\n    required: `${LabelReplacementTag} is required.`,\n    invalid: `${LabelReplacementTag} is invalid.`,\n    duplicate: `${LabelReplacementTag} was already used for another family member.`\n  };\n\n  sin: string = '';\n  mask: any;\n\n  @Input() label: string = 'Social Insurance Number (SIN)';\n  @Input() maxlength: string = '15';\n  @Input() placeholder: string = '111 111 111';\n  @Input() labelforId: string = 'sin_' + this.objectId;\n\n  @Input()\n  set value( val: string ) {\n    console.log( 'set value: ', val );\n    if ( val ) {\n      this.sin = val;\n    }\n  }\n  get value() {\n    return this.sin;\n  }\n\n  @Output() valueChange: EventEmitter = new EventEmitter();\n  @Output() blur: EventEmitter = new EventEmitter();\n\n  constructor( @Optional() @Self() public controlDir: NgControl ) {\n    super();\n    if ( controlDir ) {\n      controlDir.valueAccessor = this;\n    }\n\n    this.mask =\n    [NUMBER, NUMBER, NUMBER, SPACE, NUMBER, NUMBER, NUMBER, SPACE, NUMBER, NUMBER, NUMBER];\n  }\n\n  ngOnInit() {\n    super.ngOnInit();\n\n    this.registerValidation( this.controlDir, this.validateSelf );\n  }\n\n  onValueChange( value: any ) {\n\n    if ( value !== this.sin ) { // IE fix when focus does not display required error\n      this.sin = value;\n      this._onChange( value );\n      this.valueChange.emit( value );\n    }\n  }\n\n  onBlur( event: any ) {\n    this._onTouched( event );\n    this.blur.emit( event );\n  }\n\n  writeValue( value: any ): void {\n    if ( value ) {\n      this.sin = value;\n    }\n  }\n\n  private validateSelf(): ValidationErrors | null {\n\n    const validateResult = this.validateSin();\n    if ( validateResult ) {\n      return validateResult;\n    }\n    return null;\n   }\n\n   private validateSin(): ValidationErrors | null {\n\n    if ( this.sin && this.sin.trim().length > 0 ) {\n\n      // Init weights and other stuff\n      const weights: number[] = [1, 2, 1, 2, 1, 2, 1, 2, 1];\n      let sum = 0;\n\n      // Clean up string\n      const value = this.sin.trim();\n      this.sin = value\n                  .replace(/_/g, '') // remove underlines\n                  .replace(/\\s/g, ''); // spaces\n\n      // Test for length\n      if (this.sin.length !== 9) {\n        return { 'invalid': true };\n      }\n\n      // Test for string of zeros\n      if ( this.sin === '000000000') {\n        return { 'invalid': true };\n      }\n\n      // Walk through each character\n      for (let i = 0; i  9) {\n          result = result - 9;\n        }\n\n        // add it to our sum\n        sum += result;\n      }\n\n      // The sum must be divisible by 10\n      if (sum % 10 !== 0) {\n        return { 'invalid': true };\n      }\n\n    }\n\n    return null;\n  }\n}\n\n    \n\n    \n        \n{{label}}\n\n\n\n  \n  \n    \n      {{_defaultErrMsg.required}}\n    \n    \n      {{_defaultErrMsg.invalid}}\n    \n    \n      {{_defaultErrMsg.duplicate}}\n    \n  \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '{{label}}              {{_defaultErrMsg.required}}              {{_defaultErrMsg.invalid}}              {{_defaultErrMsg.duplicate}}      '\n    var COMPONENTS = [{'name': 'AccordionCommonComponent', 'selector': 'common-accordion'},{'name': 'AddressComponent', 'selector': 'common-address'},{'name': 'ButtonComponent', 'selector': 'common-button'},{'name': 'ButtonGroupComponent', 'selector': 'common-button-group'},{'name': 'CaptchaComponent', 'selector': 'common-captcha'},{'name': 'CheckboxComponent', 'selector': 'common-checkbox'},{'name': 'CityComponent', 'selector': 'common-city'},{'name': 'ConfirmTemplateComponent', 'selector': 'common-confirm-template'},{'name': 'ConsentModalComponent', 'selector': 'common-consent-modal'},{'name': 'CoreBreadcrumbComponent', 'selector': 'common-core-breadcrumb'},{'name': 'CountryComponent', 'selector': 'common-country'},{'name': 'DateComponent', 'selector': 'common-date'},{'name': 'DatepickerComponent', 'selector': 'common-datepicker'},{'name': 'DropdownComponent', 'selector': 'common-dropdown'},{'name': 'EmailComponent', 'selector': 'common-email'},{'name': 'ErrorContainerComponent', 'selector': 'common-error-container'},{'name': 'FileUploaderComponent', 'selector': 'common-file-uploader'},{'name': 'FormActionBarComponent', 'selector': 'common-form-action-bar'},{'name': 'FormSubmitBarComponent', 'selector': 'common-form-submit-bar'},{'name': 'FullNameComponent', 'selector': 'common-full-name'},{'name': 'GeocoderInputComponent', 'selector': 'common-geocoder-input'},{'name': 'HeaderComponent', 'selector': 'common-header'},{'name': 'NameComponent', 'selector': 'common-name'},{'name': 'PageFrameworkComponent', 'selector': 'common-page-framework'},{'name': 'PageSectionComponent', 'selector': 'common-page-section'},{'name': 'PasswordComponent', 'selector': 'common-password'},{'name': 'PhnComponent', 'selector': 'common-phn'},{'name': 'PhoneNumberComponent', 'selector': 'common-phone-number'},{'name': 'PostalCodeComponent', 'selector': 'common-postal-code'},{'name': 'ProvinceComponent', 'selector': 'common-province'},{'name': 'RadioComponent', 'selector': 'common-radio'},{'name': 'SampleModalComponent', 'selector': 'common-sample-modal'},{'name': 'SinComponent', 'selector': 'common-sin'},{'name': 'StreetComponent', 'selector': 'common-street'},{'name': 'ThumbnailComponent', 'selector': 'common-thumbnail'},{'name': 'ToggleComponent', 'selector': 'common-toggle'},{'name': 'WizardProgressBarComponent', 'selector': 'common-wizard-progress-bar'},{'name': 'XiconButtonComponent', 'selector': 'common-xicon-button'}];\n    var DIRECTIVES = [{'name': 'DateFieldFormatDirective', 'selector': '[commonDateFieldFormat]'},{'name': 'DuplicateCheckDirective', 'selector': '[commonDuplicateCheck]'},{'name': 'ValidateBcPostalDirective', 'selector': '[commonValidateBcPostal]'},{'name': 'ValidateCityDirective', 'selector': '[commonValidateCity]'},{'name': 'ValidateNameDirective', 'selector': '[commonValidateName]'},{'name': 'ValidatePostalcodeDirective', 'selector': '[commonValidatePostalcode]'},{'name': 'ValidateRegionDirective', 'selector': '[commonValidateRegion]'},{'name': 'ValidateStreetDirective', 'selector': '[commonValidateStreet]'}];\n    var ACTUAL_COMPONENT = {'name': 'SinComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ThumbnailComponent.html":{"url":"components/ThumbnailComponent.html","title":"component - ThumbnailComponent","body":"\n                   \n\n\n\n\n\n  Components\n  ThumbnailComponent\n\n\n\n        \n            Info\n        \n        \n            Design Guidelines\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    projects/common/lib/components/thumbnail/thumbnail.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n            \n                encapsulation\n                ViewEncapsulation.None\n            \n\n\n\n\n\n\n\n\n\n            \n                selector\n                common-thumbnail\n            \n\n            \n                styleUrls\n                ./thumbnail.scss\n            \n\n\n\n            \n                templateUrl\n                ./thumbnail.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                fullSizeViewModal\n                            \n                            \n                                scaledWidth\n                            \n                            \n                                    Private\n                                viewContainerRef\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                delete\n                            \n                            \n                                hideFullSizeView\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                showFullSizeView\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                imageObject\n                            \n                            \n                                reviewMode\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                deleteImage\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(viewContainerRef: ViewContainerRef)\n                    \n                \n                        \n                            \n                                Defined in projects/common/lib/components/thumbnail/thumbnail.component.ts:18\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        viewContainerRef\n                                                  \n                                                        \n                                                                        ViewContainerRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        imageObject\n                    \n                \n                \n                    \n                        Type :         CommonImage\n\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/thumbnail/thumbnail.component.ts:13\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        reviewMode\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/thumbnail/thumbnail.component.ts:14\n                            \n                        \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        deleteImage\n                    \n                \n                \n                    \n                        Type :         EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/thumbnail/thumbnail.component.ts:15\n                            \n                        \n            \n        \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            delete\n                        \n                        \n                    \n                \n            \n            \n                \ndelete(evt: any)\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/components/thumbnail/thumbnail.component.ts:42\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    evt\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            hideFullSizeView\n                        \n                        \n                    \n                \n            \n            \n                \nhideFullSizeView()\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/components/thumbnail/thumbnail.component.ts:53\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/components/thumbnail/thumbnail.component.ts:24\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            showFullSizeView\n                        \n                        \n                    \n                \n            \n            \n                \nshowFullSizeView()\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/components/thumbnail/thumbnail.component.ts:48\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            fullSizeViewModal\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     ModalDirective\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ViewChild('fullSizeViewModal')\n                            \n                        \n                    \n                        \n                            \n                                    Defined in projects/common/lib/components/thumbnail/thumbnail.component.ts:16\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            scaledWidth\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Default value : 300\n                        \n                    \n                        \n                            \n                                    Defined in projects/common/lib/components/thumbnail/thumbnail.component.ts:23\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            viewContainerRef\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         ViewContainerRef\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/common/lib/components/thumbnail/thumbnail.component.ts:18\n                            \n                        \n\n\n            \n        \n\n\n\n\n    \n        Design Guidelines\nLorem ipsum dolor sit amet consectetur adipisicing elit. Sapiente, magnam ipsam. Sit quasi natus architecto rerum unde non provident! Quia nisi facere amet iste mollitia voluptatem non molestias esse optio?\nAperiam fugiat consectetur temporibus, iste repellat, quisquam sapiente nisi distinctio optio, autem nemo tenetur error eum voluptatibus ab accusamus quis voluptatum blanditiis. Quam et ut reprehenderit vitae nobis, at ipsum!\nExercitationem pariatur animi repudiandae corporis obcaecati ratione ducimus beatae quam, nostrum magnam unde numquam quidem cupiditate odit id. Beatae alias molestiae, optio incidunt harum quia voluptates deserunt sequi. Nesciunt, optio.\n\n    \n\n    \n        import { Component, ViewChild, OnInit, Input, Output, EventEmitter, ViewContainerRef, ViewEncapsulation } from '@angular/core';\nimport { ModalDirective } from 'ngx-bootstrap';\n\nimport { CommonImage } from '../../models/images.model';\n\n@Component({\n  selector: 'common-thumbnail',\n  templateUrl: './thumbnail.html',\n  styleUrls: ['./thumbnail.scss'],\n  encapsulation: ViewEncapsulation.None\n})\nexport class ThumbnailComponent implements OnInit {\n  @Input() imageObject: CommonImage;\n  @Input() reviewMode: boolean = false;\n  @Output() deleteImage: EventEmitter = new EventEmitter();\n  @ViewChild('fullSizeViewModal') public fullSizeViewModal: ModalDirective;\n\n  private viewContainerRef: ViewContainerRef;\n  constructor(viewContainerRef: ViewContainerRef) {\n    this.viewContainerRef = viewContainerRef;\n  }\n\n  scaledWidth: number = 300;\n  ngOnInit() {\n\n    const scaledWidthString: string = (180 * this.imageObject.naturalWidth / this.imageObject.naturalHeight).toFixed(0);\n    // console.log('scaled width: ' + scaledWidthString);\n    this.scaledWidth = parseInt(scaledWidthString, 10);\n\n    if (this.scaledWidth > 250) {\n      // console.log('Scaled width > 250, drop it down to 250');\n      this.scaledWidth = 250;\n    } else if (this.scaledWidth \n    \n\n    \n        \n   300}\"\n    (click)=\"showFullSizeView()\">\n  \n    Remove\n  \n\n\n\n  \n    \n      \n        {{imageObject.name}}\n        \n          &times;\n        \n      \n      \n        \n          \n            \n          \n        \n      \n    \n  \n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '   300}\"    (click)=\"showFullSizeView()\">      Remove                      {{imageObject.name}}                  ×                                                                                '\n    var COMPONENTS = [{'name': 'AccordionCommonComponent', 'selector': 'common-accordion'},{'name': 'AddressComponent', 'selector': 'common-address'},{'name': 'ButtonComponent', 'selector': 'common-button'},{'name': 'ButtonGroupComponent', 'selector': 'common-button-group'},{'name': 'CaptchaComponent', 'selector': 'common-captcha'},{'name': 'CheckboxComponent', 'selector': 'common-checkbox'},{'name': 'CityComponent', 'selector': 'common-city'},{'name': 'ConfirmTemplateComponent', 'selector': 'common-confirm-template'},{'name': 'ConsentModalComponent', 'selector': 'common-consent-modal'},{'name': 'CoreBreadcrumbComponent', 'selector': 'common-core-breadcrumb'},{'name': 'CountryComponent', 'selector': 'common-country'},{'name': 'DateComponent', 'selector': 'common-date'},{'name': 'DatepickerComponent', 'selector': 'common-datepicker'},{'name': 'DropdownComponent', 'selector': 'common-dropdown'},{'name': 'EmailComponent', 'selector': 'common-email'},{'name': 'ErrorContainerComponent', 'selector': 'common-error-container'},{'name': 'FileUploaderComponent', 'selector': 'common-file-uploader'},{'name': 'FormActionBarComponent', 'selector': 'common-form-action-bar'},{'name': 'FormSubmitBarComponent', 'selector': 'common-form-submit-bar'},{'name': 'FullNameComponent', 'selector': 'common-full-name'},{'name': 'GeocoderInputComponent', 'selector': 'common-geocoder-input'},{'name': 'HeaderComponent', 'selector': 'common-header'},{'name': 'NameComponent', 'selector': 'common-name'},{'name': 'PageFrameworkComponent', 'selector': 'common-page-framework'},{'name': 'PageSectionComponent', 'selector': 'common-page-section'},{'name': 'PasswordComponent', 'selector': 'common-password'},{'name': 'PhnComponent', 'selector': 'common-phn'},{'name': 'PhoneNumberComponent', 'selector': 'common-phone-number'},{'name': 'PostalCodeComponent', 'selector': 'common-postal-code'},{'name': 'ProvinceComponent', 'selector': 'common-province'},{'name': 'RadioComponent', 'selector': 'common-radio'},{'name': 'SampleModalComponent', 'selector': 'common-sample-modal'},{'name': 'SinComponent', 'selector': 'common-sin'},{'name': 'StreetComponent', 'selector': 'common-street'},{'name': 'ThumbnailComponent', 'selector': 'common-thumbnail'},{'name': 'ToggleComponent', 'selector': 'common-toggle'},{'name': 'WizardProgressBarComponent', 'selector': 'common-wizard-progress-bar'},{'name': 'XiconButtonComponent', 'selector': 'common-xicon-button'}];\n    var DIRECTIVES = [{'name': 'DateFieldFormatDirective', 'selector': '[commonDateFieldFormat]'},{'name': 'DuplicateCheckDirective', 'selector': '[commonDuplicateCheck]'},{'name': 'ValidateBcPostalDirective', 'selector': '[commonValidateBcPostal]'},{'name': 'ValidateCityDirective', 'selector': '[commonValidateCity]'},{'name': 'ValidateNameDirective', 'selector': '[commonValidateName]'},{'name': 'ValidatePostalcodeDirective', 'selector': '[commonValidatePostalcode]'},{'name': 'ValidateRegionDirective', 'selector': '[commonValidateRegion]'},{'name': 'ValidateStreetDirective', 'selector': '[commonValidateStreet]'}];\n    var ACTUAL_COMPONENT = {'name': 'ThumbnailComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ToggleComponent.html":{"url":"components/ToggleComponent.html","title":"component - ToggleComponent","body":"\n                   \n\n\n\n\n\n  Components\n  ToggleComponent\n\n\n\n        \n            Info\n        \n        \n            Design Guidelines\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    projects/common/lib/components/toggle/toggle.component.ts\n\n\n\n    \n        Extends\n    \n    \n                Base\n    \n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                common-toggle\n            \n\n            \n                styleUrls\n                ./toggle.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./toggle.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                objectId\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                data\n                            \n                            \n                                label\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                dataChange\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in projects/common/lib/components/toggle/toggle.component.ts:13\n                            \n                        \n\n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        data\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/toggle/toggle.component.ts:11\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        label\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/toggle/toggle.component.ts:12\n                            \n                        \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        dataChange\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/toggle/toggle.component.ts:13\n                            \n                        \n            \n        \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/components/toggle/toggle.component.ts:19\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            objectId\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : UUID.UUID()\n                        \n                    \n                            \n                                \n                                    Inherited from         Base\n\n                                \n                            \n                        \n                            \n                                    Defined in         Base:11\n\n                            \n                        \n\n                \n                    \n                        An identifier for parents to keep track of components \n\n                    \n                \n\n            \n        \n\n\n\n\n    \n        Design Guidelines\nLorem ipsum dolor sit amet consectetur adipisicing elit. Sapiente, magnam ipsam. Sit quasi natus architecto rerum unde non provident! Quia nisi facere amet iste mollitia voluptatem non molestias esse optio?\nAperiam fugiat consectetur temporibus, iste repellat, quisquam sapiente nisi distinctio optio, autem nemo tenetur error eum voluptatibus ab accusamus quis voluptatum blanditiis. Quam et ut reprehenderit vitae nobis, at ipsum!\nExercitationem pariatur animi repudiandae corporis obcaecati ratione ducimus beatae quam, nostrum magnam unde numquam quidem cupiditate odit id. Beatae alias molestiae, optio incidunt harum quia voluptates deserunt sequi. Nesciunt, optio.\n\n    \n\n    \n        import { Component, OnInit, Input, Output, EventEmitter } from '@angular/core';\nimport { Base } from '../../models/base';\n\n@Component({\n  selector: 'common-toggle',\n  templateUrl: './toggle.component.html',\n  styleUrls: ['./toggle.component.scss']\n})\nexport class ToggleComponent extends Base implements OnInit {\n\n  @Input() data: boolean;\n  @Input() label: string;\n  @Output() dataChange: EventEmitter = new EventEmitter();\n\n  constructor() {\n    super();\n  }\n\n  ngOnInit() {\n  }\n\n}\n\n    \n\n    \n         \n \n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  '\n    var COMPONENTS = [{'name': 'AccordionCommonComponent', 'selector': 'common-accordion'},{'name': 'AddressComponent', 'selector': 'common-address'},{'name': 'ButtonComponent', 'selector': 'common-button'},{'name': 'ButtonGroupComponent', 'selector': 'common-button-group'},{'name': 'CaptchaComponent', 'selector': 'common-captcha'},{'name': 'CheckboxComponent', 'selector': 'common-checkbox'},{'name': 'CityComponent', 'selector': 'common-city'},{'name': 'ConfirmTemplateComponent', 'selector': 'common-confirm-template'},{'name': 'ConsentModalComponent', 'selector': 'common-consent-modal'},{'name': 'CoreBreadcrumbComponent', 'selector': 'common-core-breadcrumb'},{'name': 'CountryComponent', 'selector': 'common-country'},{'name': 'DateComponent', 'selector': 'common-date'},{'name': 'DatepickerComponent', 'selector': 'common-datepicker'},{'name': 'DropdownComponent', 'selector': 'common-dropdown'},{'name': 'EmailComponent', 'selector': 'common-email'},{'name': 'ErrorContainerComponent', 'selector': 'common-error-container'},{'name': 'FileUploaderComponent', 'selector': 'common-file-uploader'},{'name': 'FormActionBarComponent', 'selector': 'common-form-action-bar'},{'name': 'FormSubmitBarComponent', 'selector': 'common-form-submit-bar'},{'name': 'FullNameComponent', 'selector': 'common-full-name'},{'name': 'GeocoderInputComponent', 'selector': 'common-geocoder-input'},{'name': 'HeaderComponent', 'selector': 'common-header'},{'name': 'NameComponent', 'selector': 'common-name'},{'name': 'PageFrameworkComponent', 'selector': 'common-page-framework'},{'name': 'PageSectionComponent', 'selector': 'common-page-section'},{'name': 'PasswordComponent', 'selector': 'common-password'},{'name': 'PhnComponent', 'selector': 'common-phn'},{'name': 'PhoneNumberComponent', 'selector': 'common-phone-number'},{'name': 'PostalCodeComponent', 'selector': 'common-postal-code'},{'name': 'ProvinceComponent', 'selector': 'common-province'},{'name': 'RadioComponent', 'selector': 'common-radio'},{'name': 'SampleModalComponent', 'selector': 'common-sample-modal'},{'name': 'SinComponent', 'selector': 'common-sin'},{'name': 'StreetComponent', 'selector': 'common-street'},{'name': 'ThumbnailComponent', 'selector': 'common-thumbnail'},{'name': 'ToggleComponent', 'selector': 'common-toggle'},{'name': 'WizardProgressBarComponent', 'selector': 'common-wizard-progress-bar'},{'name': 'XiconButtonComponent', 'selector': 'common-xicon-button'}];\n    var DIRECTIVES = [{'name': 'DateFieldFormatDirective', 'selector': '[commonDateFieldFormat]'},{'name': 'DuplicateCheckDirective', 'selector': '[commonDuplicateCheck]'},{'name': 'ValidateBcPostalDirective', 'selector': '[commonValidateBcPostal]'},{'name': 'ValidateCityDirective', 'selector': '[commonValidateCity]'},{'name': 'ValidateNameDirective', 'selector': '[commonValidateName]'},{'name': 'ValidatePostalcodeDirective', 'selector': '[commonValidatePostalcode]'},{'name': 'ValidateRegionDirective', 'selector': '[commonValidateRegion]'},{'name': 'ValidateStreetDirective', 'selector': '[commonValidateStreet]'}];\n    var ACTUAL_COMPONENT = {'name': 'ToggleComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"directives/ValidateBcPostalDirective.html":{"url":"directives/ValidateBcPostalDirective.html","title":"directive - ValidateBcPostalDirective","body":"\n                   \n\n\n\n\n\n\n\n  Directives\n  ValidateBcPostalDirective\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/common/lib/components/postal-code/validate-bc-postal.directive.ts\n        \n\n\n            \n                Implements\n            \n            \n                            Validator\n            \n\n\n        \n            Metadata\n            \n                \n                    \n                        Providers\n                        \n                            \n                                { provide: NG_VALIDATORS, useExisting: ValidateBcPostalDirective, multi: true }\n                            \n                        \n                    \n\n                    \n                        Selector\n                        [commonValidateBcPostal]\n                    \n\n                \n            \n        \n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                validate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            validate\n                        \n                        \n                    \n                \n            \n            \n                \nvalidate(control: AbstractControl)\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/components/postal-code/validate-bc-postal.directive.ts:27\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    control\n                                    \n                                                AbstractControl\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     literal type | null\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n    \n\n\n    \n        import { Directive } from '@angular/core';\nimport { NG_VALIDATORS, Validator, AbstractControl, ValidatorFn, ValidationErrors } from '@angular/forms';\n\n\n// TODO: determine whether this is used or not.  If not use, maybe it can be removed\n//  @deprecated - logic added to validate-postalcode directive\nexport const commonValidateBcPostal: ValidatorFn = (control: AbstractControl): ValidationErrors | null => {\n  /**\n  * Valid characters for BC postal code\n  */\n const criteria: RegExp = RegExp('^[Vv]\\\\d[ABCEGHJ-NPRSTV-Zabceghj-nprstv-z][ ]?\\\\d[ABCEGHJ-NPRSTV-Zabceghj-nprstv-z]\\\\d$');\n\n  if ( control.value ) {\n    return criteria.test( control.value ) ? null : { 'invalidBCPostal': true };\n  }\n  return null;\n};\n\n@Directive({\n  selector: '[commonValidateBcPostal]',\n  providers: [\n    {provide: NG_VALIDATORS, useExisting: ValidateBcPostalDirective, multi: true}\n  ]\n})\nexport class ValidateBcPostalDirective implements Validator {\n\n  validate( control: AbstractControl ): {[key: string]: any} | null {\n    return commonValidateBcPostal( control );\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"directives/ValidateCityDirective.html":{"url":"directives/ValidateCityDirective.html","title":"directive - ValidateCityDirective","body":"\n                   \n\n\n\n\n\n\n\n  Directives\n  ValidateCityDirective\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/common/lib/components/city/validate-city.directive.ts\n        \n\n\n            \n                Implements\n            \n            \n                            Validator\n            \n\n\n        \n            Metadata\n            \n                \n                    \n                        Providers\n                        \n                            \n                                { provide: NG_VALIDATORS, useExisting: ValidateCityDirective, multi: true }\n                            \n                        \n                    \n\n                    \n                        Selector\n                        [commonValidateCity]\n                    \n\n                \n            \n        \n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                validate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            validate\n                        \n                        \n                    \n                \n            \n            \n                \nvalidate(control: AbstractControl)\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/components/city/validate-city.directive.ts:26\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    control\n                                    \n                                                AbstractControl\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     literal type | null\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n    \n\n\n    \n        import { Directive } from '@angular/core';\nimport { ValidatorFn, AbstractControl, ValidationErrors, NG_VALIDATORS, Validator } from '@angular/forms';\n\nexport const commonValidateCity: ValidatorFn = (control: AbstractControl): ValidationErrors | null => {\n\n  /**\n   * Valid characters for  city names\n   */\n const criteria: RegExp = RegExp( '^(?=.*[a-zA-Z])[a-zA-Z0-9\\-.\\' ]*$' );\n\n if ( control.value ) {\n    const result = criteria.test( control.value );\n    return result ? null : { 'invalidChar': true };\n }\n return null;\n};\n\n@Directive({\n  selector: '[commonValidateCity]',\n  providers: [\n    {provide: NG_VALIDATORS, useExisting: ValidateCityDirective, multi: true}\n  ]\n})\nexport class ValidateCityDirective implements Validator {\n\n  validate( control: AbstractControl ): {[key: string]: any} | null {\n\n    return commonValidateCity( control );\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"directives/ValidateNameDirective.html":{"url":"directives/ValidateNameDirective.html","title":"directive - ValidateNameDirective","body":"\n                   \n\n\n\n\n\n\n\n  Directives\n  ValidateNameDirective\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/common/lib/components/name/validate-name.directive.ts\n        \n\n\n            \n                Implements\n            \n            \n                            Validator\n            \n\n            \n                Example\n            \n            \n            \n\n        \n            Metadata\n            \n                \n                    \n                        Providers\n                        \n                            \n                                { provide: NG_VALIDATORS, useExisting: ValidateNameDirective, multi: true }\n                            \n                        \n                    \n\n                    \n                        Selector\n                        [commonValidateName]\n                    \n\n                \n            \n        \n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                validate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            validate\n                        \n                        \n                    \n                \n            \n            \n                \nvalidate(control: AbstractControl)\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/components/name/validate-name.directive.ts:32\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    control\n                                    \n                                                AbstractControl\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     literal type | null\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n    \n\n\n    \n        import { Directive } from '@angular/core';\nimport { NG_VALIDATORS, Validator, AbstractControl, ValidatorFn, ValidationErrors } from '@angular/forms';\n\n/**\n * @deprecated\n * @param control\n */\nexport const commonValidateName: ValidatorFn = (control: AbstractControl): ValidationErrors | null => {\n   /**\n   * Valid characters for name\n   */\n  const criteria: RegExp = RegExp( '^[a-zA-Z][a-zA-Z\\-.\\' ]*$' );\n\n  if ( control.value ) {\n    return criteria.test( control.value ) ? null : { 'invalidChar': true };\n  }\n  return null;\n};\n\n\n/**\n * @deprecated\n */\n@Directive({\n  selector: '[commonValidateName]',\n  providers: [\n    {provide: NG_VALIDATORS, useExisting: ValidateNameDirective, multi: true}\n  ]\n})\nexport class ValidateNameDirective implements Validator {\n\n  validate( control: AbstractControl ): {[key: string]: any} | null {\n\n    return commonValidateName( control );\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"directives/ValidatePostalcodeDirective.html":{"url":"directives/ValidatePostalcodeDirective.html","title":"directive - ValidatePostalcodeDirective","body":"\n                   \n\n\n\n\n\n\n\n  Directives\n  ValidatePostalcodeDirective\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/common/lib/components/postal-code/validate-postalcode.directive.ts\n        \n\n\n            \n                Implements\n            \n            \n                            Validator\n            \n\n\n        \n            Metadata\n            \n                \n                    \n                        Providers\n                        \n                            \n                                { provide: NG_VALIDATORS, useExisting: ValidatePostalcodeDirective, multi: true }\n                            \n                        \n                    \n\n                    \n                        Selector\n                        [commonValidatePostalcode]\n                    \n\n                \n            \n        \n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                validate\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                bcOnly\n                            \n                            \n                                hasMask\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n\n            \n    Inputs\n        \n            \n                \n                    \n                        \n                        bcOnly\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/postal-code/validate-postalcode.directive.ts:49\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        hasMask\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : true\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/postal-code/validate-postalcode.directive.ts:48\n                            \n                        \n            \n        \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            validate\n                        \n                        \n                    \n                \n            \n            \n                \nvalidate(control: AbstractControl)\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/components/postal-code/validate-postalcode.directive.ts:51\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    control\n                                    \n                                                AbstractControl\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     literal type | null\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n    \n\n\n    \n        import { Directive, Input } from '@angular/core';\nimport { ValidatorFn, AbstractControl, NG_VALIDATORS, Validator } from '@angular/forms';\n\n// local function\nfunction validatePC(control: AbstractControl, hasMask: boolean, bcOnly: boolean): { [key: string]: boolean } | null {\n\n  if ( control.value ) {\n\n    if ( hasMask ) {\n      const cdnFormat: RegExp = /^[A-Za-z][0-9][A-Za-z]\\s?[0-9][A-Za-z][0-9]$/;\n\n      if ( !cdnFormat.test( control.value ) ) {\n        return { 'pattern': true };\n      }\n    } else {\n      const criteria: RegExp = RegExp( '^(?=.*[a-zA-Z0-9])[a-zA-Z0-9 ]*$' );\n\n      if ( !criteria.test( control.value ) ) {\n        return  { 'invalidChar': true };\n      }\n    }\n\n    if ( bcOnly ) {\n      // Valid characters for BC postal code\n      const bcFormat: RegExp = RegExp('^[Vv]\\\\d[ABCEGHJ-NPRSTV-Z][ ]?\\\\d[ABCEGHJ-NPRSTV-Z]\\\\d$');\n      if ( !bcFormat.test( control.value ) ) {\n        return { 'invalidBCPostal': true };\n      }\n    }\n  }\n  return null;\n}\n\nexport function commonValidatePostalcode( hasMask: boolean, bcOnly: boolean ): ValidatorFn {\n\n  return ( control: AbstractControl ): { [key: string]: boolean } | null => {\n    return validatePC( control, hasMask , bcOnly);\n  };\n}\n\n@Directive({\n  selector: '[commonValidatePostalcode]',\n  providers: [\n    {provide: NG_VALIDATORS, useExisting: ValidatePostalcodeDirective, multi: true}\n  ]\n})\nexport class ValidatePostalcodeDirective implements Validator {\n  @Input() hasMask: boolean = true;\n  @Input() bcOnly: boolean = false;\n\n  validate( control: AbstractControl ): {[key: string]: any} | null {\n\n    return validatePC( control, this.hasMask , this.bcOnly );\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"directives/ValidateRegionDirective.html":{"url":"directives/ValidateRegionDirective.html","title":"directive - ValidateRegionDirective","body":"\n                   \n\n\n\n\n\n\n\n  Directives\n  ValidateRegionDirective\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/common/lib/components/validate-region/validate-region.directive.ts\n        \n\n\n            \n                Implements\n            \n            \n                            Validator\n            \n\n\n        \n            Metadata\n            \n                \n                    \n                        Providers\n                        \n                            \n                                { provide: NG_VALIDATORS, useExisting: ValidateRegionDirective, multi: true }\n                            \n                        \n                    \n\n                    \n                        Selector\n                        [commonValidateRegion]\n                    \n\n                \n            \n        \n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                validate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            validate\n                        \n                        \n                    \n                \n            \n            \n                \nvalidate(control: AbstractControl)\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/components/validate-region/validate-region.directive.ts:26\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    control\n                                    \n                                                AbstractControl\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     literal type | null\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n    \n\n\n    \n        import { Directive } from '@angular/core';\nimport { ValidatorFn, AbstractControl, ValidationErrors, NG_VALIDATORS, Validator } from '@angular/forms';\n\nexport const commonValidateRegion: ValidatorFn = (control: AbstractControl): ValidationErrors | null => {\n\n  /**\n   * Valid characters for country/province/region names\n   */\n const criteria: RegExp = RegExp( '^(?=.*[a-zA-Z])[a-zA-Z\\-.\\' ]*$' );\n\n if ( control.value ) {\n    const result = criteria.test( control.value );\n    return result ? null : { 'invalidChar': true };\n }\n return null;\n};\n\n@Directive({\n  selector: '[commonValidateRegion]',\n  providers: [\n    {provide: NG_VALIDATORS, useExisting: ValidateRegionDirective, multi: true}\n  ]\n})\nexport class ValidateRegionDirective implements Validator {\n\n  validate( control: AbstractControl ): {[key: string]: any} | null {\n\n    return commonValidateRegion( control );\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"directives/ValidateStreetDirective.html":{"url":"directives/ValidateStreetDirective.html","title":"directive - ValidateStreetDirective","body":"\n                   \n\n\n\n\n\n\n\n  Directives\n  ValidateStreetDirective\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/common/lib/components/street/validate-street.directive.ts\n        \n\n\n            \n                Implements\n            \n            \n                            Validator\n            \n\n\n        \n            Metadata\n            \n                \n                    \n                        Providers\n                        \n                            \n                                { provide: NG_VALIDATORS, useExisting: ValidateStreetDirective, multi: true }\n                            \n                        \n                    \n\n                    \n                        Selector\n                        [commonValidateStreet]\n                    \n\n                \n            \n        \n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                validate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            validate\n                        \n                        \n                    \n                \n            \n            \n                \nvalidate(control: AbstractControl)\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/components/street/validate-street.directive.ts:25\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    control\n                                    \n                                                AbstractControl\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     literal type | null\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n    \n\n\n    \n        import { Directive } from '@angular/core';\nimport { ValidatorFn, AbstractControl, ValidationErrors, NG_VALIDATORS, Validator } from '@angular/forms';\n\nexport const commonValidateStreet: ValidatorFn = (control: AbstractControl): ValidationErrors | null => {\n  /**\n  * Valid characters for street\n  */\n const criteria: RegExp = RegExp( '^(?=.*[a-zA-Z0-9])[a-zA-Z0-9#/&\\-.\\' ]*$' );\n\n if ( control.value ) {\n    const result = criteria.test( control.value );\n    return result ? null : { 'invalidChar': true };\n }\n return null;\n};\n\n@Directive({\n  selector: '[commonValidateStreet]',\n  providers: [\n    {provide: NG_VALIDATORS, useExisting: ValidateStreetDirective, multi: true}\n  ]\n})\nexport class ValidateStreetDirective implements Validator {\n\n  validate( control: AbstractControl ): {[key: string]: any} | null {\n\n    return commonValidateStreet( control );\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/WizardProgressBarComponent.html":{"url":"components/WizardProgressBarComponent.html","title":"component - WizardProgressBarComponent","body":"\n                   \n\n\n\n\n\n  Components\n  WizardProgressBarComponent\n\n\n\n        \n            Info\n        \n        \n            Design Guidelines\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    projects/common/lib/components/wizard-progress-bar/wizard-progress-bar.component.ts\n\n\n    \n        Description\n    \n    \n        NPM Dependencies:\n  a) rxjs\n  b) ngx-bootstrap\n\n    \n\n\n    \n        Implements\n    \n    \n                    OnInit\n                    OnDestroy\n    \n\n\n\n    Metadata\n    \n        \n\n            \n                changeDetection\n                ChangeDetectionStrategy.OnPush\n            \n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                common-wizard-progress-bar\n            \n\n            \n                styleUrls\n                ./wizard-progress-bar.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./wizard-progress-bar.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                activeIndex\n                            \n                            \n                                    Private\n                                routerEvents$\n                            \n                            \n                                stepContainer\n                            \n                            \n                                steps\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                calculateProgressPercentage\n                            \n                            \n                                getActiveIndex\n                            \n                            \n                                ngOnDestroy\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                    Private\n                                scrollStepIntoView\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                progressSteps\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(router: Router, cd: ChangeDetectorRef)\n                    \n                \n                        \n                            \n                                Defined in projects/common/lib/components/wizard-progress-bar/wizard-progress-bar.component.ts:28\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        cd\n                                                  \n                                                        \n                                                                        ChangeDetectorRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        progressSteps\n                    \n                \n                \n                    \n                        Type :         WizardProgressItem[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/wizard-progress-bar/wizard-progress-bar.component.ts:22\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            calculateProgressPercentage\n                        \n                        \n                    \n                \n            \n            \n                \ncalculateProgressPercentage()\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/components/wizard-progress-bar/wizard-progress-bar.component.ts:55\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         Number\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getActiveIndex\n                        \n                        \n                    \n                \n            \n            \n                \ngetActiveIndex(url)\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/components/wizard-progress-bar/wizard-progress-bar.component.ts:70\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    url\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         number\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnDestroy\n                        \n                        \n                    \n                \n            \n            \n                \nngOnDestroy()\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/components/wizard-progress-bar/wizard-progress-bar.component.ts:50\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/components/wizard-progress-bar/wizard-progress-bar.component.ts:33\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            scrollStepIntoView\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    scrollStepIntoView()\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/components/wizard-progress-bar/wizard-progress-bar.component.ts:80\n                \n            \n\n\n            \n                \n                    Primarily for mobile, this horizontally scrolls the step into view.\nNote - be very careful with any changes to this function because it steps\noutside of Angular to call native browser functions.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            activeIndex\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/common/lib/components/wizard-progress-bar/wizard-progress-bar.component.ts:26\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            routerEvents$\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Subscription\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/common/lib/components/wizard-progress-bar/wizard-progress-bar.component.ts:28\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            stepContainer\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         ElementRef\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ViewChild('stepContainer')\n                            \n                        \n                    \n                        \n                            \n                                    Defined in projects/common/lib/components/wizard-progress-bar/wizard-progress-bar.component.ts:23\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            steps\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     QueryList>\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ViewChildren('steps')\n                            \n                        \n                    \n                        \n                            \n                                    Defined in projects/common/lib/components/wizard-progress-bar/wizard-progress-bar.component.ts:24\n                            \n                        \n\n\n            \n        \n\n\n\n\n    \n        Design Guidelines\nLorem ipsum dolor sit amet consectetur adipisicing elit. Sapiente, magnam ipsam. Sit quasi natus architecto rerum unde non provident! Quia nisi facere amet iste mollitia voluptatem non molestias esse optio?\nAperiam fugiat consectetur temporibus, iste repellat, quisquam sapiente nisi distinctio optio, autem nemo tenetur error eum voluptatibus ab accusamus quis voluptatum blanditiis. Quam et ut reprehenderit vitae nobis, at ipsum!\nExercitationem pariatur animi repudiandae corporis obcaecati ratione ducimus beatae quam, nostrum magnam unde numquam quidem cupiditate odit id. Beatae alias molestiae, optio incidunt harum quia voluptates deserunt sequi. Nesciunt, optio.\n\n    \n\n    \n        import { Component, OnInit, Input, ViewChild, ElementRef,\n         ViewChildren, QueryList, ChangeDetectionStrategy,\n         ChangeDetectorRef, OnDestroy } from '@angular/core';\nimport { Router, NavigationEnd } from '@angular/router';\nimport { filter, map } from 'rxjs/operators';\nimport { Subscription } from 'rxjs';\nimport { WizardProgressItem } from '../../models/container';\n\n/**\n * NPM Dependencies:\n *  a) rxjs\n *  b) ngx-bootstrap\n */\n\n@Component({\n  selector: 'common-wizard-progress-bar',\n  templateUrl: './wizard-progress-bar.component.html',\n  styleUrls: ['./wizard-progress-bar.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class WizardProgressBarComponent implements OnInit, OnDestroy {\n  @Input() progressSteps: WizardProgressItem[] = [];\n  @ViewChild('stepContainer') stepContainer: ElementRef;\n  @ViewChildren('steps') steps: QueryList>;\n\n  public activeIndex: number;\n\n  private routerEvents$: Subscription;\n\n  constructor(private router: Router, private cd: ChangeDetectorRef) {\n   }\n\n  ngOnInit() {\n\n    // Update the progress bar view on route change and _only_ route chaange.\n    // Skip most of Angular's ChangeDetection in favour of manually optimizing.\n    this.routerEvents$ = this.router.events.pipe(\n      filter(ev => ev instanceof NavigationEnd),\n      map((ev: NavigationEnd) => ev.url)\n    ).subscribe(url => {\n      this.activeIndex = this.getActiveIndex(url);\n      this.cd.detectChanges();\n      this.scrollStepIntoView();\n    });\n\n    // Must schedule first run manually, or bar won't be set.\n    this.activeIndex = this.getActiveIndex(this.router.url);\n  }\n\n  ngOnDestroy() {\n    this.cd.detach();\n    this.routerEvents$.unsubscribe();\n  }\n\n  calculateProgressPercentage(): Number {\n    const denominator = this.progressSteps.length;\n    const numerator = this.activeIndex + 1;\n\n    if (denominator === 0 || numerator > denominator) {\n      return 100;\n    }\n\n    // Because we've switched from space-evenly to space-around (for IE), we\n    // have to handle the half-space that space-around adds to the start/end of\n    // the container\n    const halfSpace = 1 / (denominator * 2);\n    return Math.round(((numerator / denominator) - halfSpace) * 100);\n  }\n\n  getActiveIndex(url): number {\n    return this.progressSteps.findIndex(x => url.includes(x.route));\n  }\n\n   /**\n   * Primarily for mobile, this horizontally scrolls the step into view.\n   *\n   * Note - be very careful with any changes to this function because it steps\n   * outside of Angular to call native browser functions.\n   */\n  private scrollStepIntoView() {\n    const target = this.steps.toArray()[this.activeIndex];\n    const container = document.getElementsByClassName('horizontal-scroll');\n    if (container.length === 1) {\n      // Since we're already breaking out of Angular, we try and be safe by using a try/catch.\n      // Otherwise an error here could halt execution,\n      try {\n        container[0].scrollLeft = Math.abs(target.nativeElement.offsetLeft - (window.outerWidth / 2));\n      } catch (error) {}\n    }\n  }\n\n}\n\n    \n\n    \n        \n\n\n\n\n  \n\n    \n      {{step.title}}\n    \n\n  \n\n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '            {{step.title}}      '\n    var COMPONENTS = [{'name': 'AccordionCommonComponent', 'selector': 'common-accordion'},{'name': 'AddressComponent', 'selector': 'common-address'},{'name': 'ButtonComponent', 'selector': 'common-button'},{'name': 'ButtonGroupComponent', 'selector': 'common-button-group'},{'name': 'CaptchaComponent', 'selector': 'common-captcha'},{'name': 'CheckboxComponent', 'selector': 'common-checkbox'},{'name': 'CityComponent', 'selector': 'common-city'},{'name': 'ConfirmTemplateComponent', 'selector': 'common-confirm-template'},{'name': 'ConsentModalComponent', 'selector': 'common-consent-modal'},{'name': 'CoreBreadcrumbComponent', 'selector': 'common-core-breadcrumb'},{'name': 'CountryComponent', 'selector': 'common-country'},{'name': 'DateComponent', 'selector': 'common-date'},{'name': 'DatepickerComponent', 'selector': 'common-datepicker'},{'name': 'DropdownComponent', 'selector': 'common-dropdown'},{'name': 'EmailComponent', 'selector': 'common-email'},{'name': 'ErrorContainerComponent', 'selector': 'common-error-container'},{'name': 'FileUploaderComponent', 'selector': 'common-file-uploader'},{'name': 'FormActionBarComponent', 'selector': 'common-form-action-bar'},{'name': 'FormSubmitBarComponent', 'selector': 'common-form-submit-bar'},{'name': 'FullNameComponent', 'selector': 'common-full-name'},{'name': 'GeocoderInputComponent', 'selector': 'common-geocoder-input'},{'name': 'HeaderComponent', 'selector': 'common-header'},{'name': 'NameComponent', 'selector': 'common-name'},{'name': 'PageFrameworkComponent', 'selector': 'common-page-framework'},{'name': 'PageSectionComponent', 'selector': 'common-page-section'},{'name': 'PasswordComponent', 'selector': 'common-password'},{'name': 'PhnComponent', 'selector': 'common-phn'},{'name': 'PhoneNumberComponent', 'selector': 'common-phone-number'},{'name': 'PostalCodeComponent', 'selector': 'common-postal-code'},{'name': 'ProvinceComponent', 'selector': 'common-province'},{'name': 'RadioComponent', 'selector': 'common-radio'},{'name': 'SampleModalComponent', 'selector': 'common-sample-modal'},{'name': 'SinComponent', 'selector': 'common-sin'},{'name': 'StreetComponent', 'selector': 'common-street'},{'name': 'ThumbnailComponent', 'selector': 'common-thumbnail'},{'name': 'ToggleComponent', 'selector': 'common-toggle'},{'name': 'WizardProgressBarComponent', 'selector': 'common-wizard-progress-bar'},{'name': 'XiconButtonComponent', 'selector': 'common-xicon-button'}];\n    var DIRECTIVES = [{'name': 'DateFieldFormatDirective', 'selector': '[commonDateFieldFormat]'},{'name': 'DuplicateCheckDirective', 'selector': '[commonDuplicateCheck]'},{'name': 'ValidateBcPostalDirective', 'selector': '[commonValidateBcPostal]'},{'name': 'ValidateCityDirective', 'selector': '[commonValidateCity]'},{'name': 'ValidateNameDirective', 'selector': '[commonValidateName]'},{'name': 'ValidatePostalcodeDirective', 'selector': '[commonValidatePostalcode]'},{'name': 'ValidateRegionDirective', 'selector': '[commonValidateRegion]'},{'name': 'ValidateStreetDirective', 'selector': '[commonValidateStreet]'}];\n    var ACTUAL_COMPONENT = {'name': 'WizardProgressBarComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/WizardProgressItem.html":{"url":"interfaces/WizardProgressItem.html","title":"interface - WizardProgressItem","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  WizardProgressItem\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/common/lib/models/container.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        route\n                                \n                                \n                                        title\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        route\n                                    \n                                \n                                \n                                    \n                                        route:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        title\n                                    \n                                \n                                \n                                    \n                                        title:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Route } from '@angular/router';\nimport { ContainerService, DefaultSubmitLabel } from '../services/container.service';\nimport { Subscription } from 'rxjs';\n\nexport interface WizardProgressItem {\n  title: string;\n  route: string;\n}\n\n/**\n * Container class contains the basic functionality for containers.\n *\n * @example\n *  Example of how to use Container\n *\n *      export class RegistrationContainerComponent extends Container\n *                   implements AfterViewInit, OnDestroy {\n *\n *        constructor( private headerService: HeaderService,\n *                     private pageStateService: PageStateService,\n *                     protected  containerService: ContainerService) {\n *          super( containerService );\n *          this.setProgressSteps(pages);\n *          this.pageStateService.setPages( pages, PRACTITIONER_REGISTRATION_PAGES );\n *          this.headerService.setTitle('Practitioner Assignment to Medical Services Plan Facility for Business Cost Premium');\n *        }\n *\n *        ngAfterViewInit() {\n *          this.subscribeFormBar();\n *        }\n *\n *        ngOnDestroy() {\n *          this.unsubscribeFormBar();\n *        }\n *        ...\n *      }\n *\n * html would be:\n *\n *    \n *      \n *    \n *    \n *      \n *    \n *    \n *\n * @export\n *\n */\n\n/** Base functionality for container that is used to display bread crumbs */\nexport class Container {\n\n  /** Route items for the stepper */\n  progressSteps: WizardProgressItem[];\n\n  /** Observables for form bar */\n  useDefaultColor: boolean = true;\n  submitLabel: string = DefaultSubmitLabel;\n  isLoading: boolean = false;\n\n  private _subscriptions: Subscription[];\n\n  constructor( protected containerService?: ContainerService ) {\n  }\n\n  /**\n   * Use when form bar is part of the container\n   */\n  continue() {\n    this.containerService.submitButtonClicked();\n  }\n\n  /**\n   * Converts a lower case string of a route in a user readable title.  e.g.\n   * \"personal-info\" -> \"Personal Info\"\n   */\n  convertRouteToTitle(routePath: string): string {\n    return routePath.split('-').map(x => x[0].toUpperCase() + x.slice(1)).join(' ');\n  }\n\n  protected setProgressSteps( pageRoutes: Route[] ): void {\n    // Interface for wizard progress items\n    this.progressSteps = pageRoutes.map(page => {\n      if (page.path !== '') {\n        return {\n          title: this.convertRouteToTitle(page.path),\n          route: page.path\n        };\n      }\n    }).filter(x => x);\n  }\n\n  /**\n   * Subscribe to form bar observables - Called in the AfterViewInit\n   * Use when form bar is part of the container\n   */\n  protected subscribeFormBar() {\n    if ( this.containerService ) {\n\n      this._subscriptions = [\n        this.containerService.$useDefaultColor\n        .subscribe(\n          (async (defaultColor) => {\n            this.useDefaultColor = await defaultColor;\n            // console.log( 'defaultColor: ', this.useDefaultColor );\n        })),\n        this.containerService.$submitLabel\n        .subscribe(\n          (async (label) => {\n            this.submitLabel = await label;\n            // console.log( 'button label: ', this.submitLabel );\n        })),\n        this.containerService.$isLoading\n        .subscribe(\n          (async (isLoading) => {\n            this.isLoading = await isLoading;\n            // console.log( 'isLoading: ', this.isLoading );\n        }))\n      ];\n    }\n  }\n\n  /**\n   * Unsubscribe to form bar observables  - Called in the onDestroy()\n   * Use when form bar is part of the container\n   */\n  protected unsubscribeFormBar() {\n    this._subscriptions.forEach( x => x.unsubscribe() );\n  }\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/XiconButtonComponent.html":{"url":"components/XiconButtonComponent.html","title":"component - XiconButtonComponent","body":"\n                   \n\n\n\n\n\n  Components\n  XiconButtonComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    projects/common/lib/components/xicon-button/xicon-button.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                common-xicon-button\n            \n\n            \n                styleUrls\n                ./xicon-button.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./xicon-button.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                            \n                                onBtnClick\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                label\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                click\n                            \n                            \n                                clickEvent\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in projects/common/lib/components/xicon-button/xicon-button.component.ts:20\n                            \n                        \n\n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        label\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/xicon-button/xicon-button.component.ts:15\n                            \n                        \n                \n                    \n                        Label to use for accessibility.\n\n                    \n                \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        click\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/xicon-button/xicon-button.component.ts:20\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        clickEvent\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/xicon-button/xicon-button.component.ts:19\n                            \n                        \n            \n        \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/components/xicon-button/xicon-button.component.ts:24\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            onBtnClick\n                        \n                        \n                    \n                \n            \n            \n                \nonBtnClick()\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/components/xicon-button/xicon-button.component.ts:35\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n    \n        import { Component, Input, Output, EventEmitter, OnInit } from '@angular/core';\nimport { MoHCommonLibraryError } from '../../../helpers/library-error';\n\n@Component({\n  selector: 'common-xicon-button',\n  templateUrl: './xicon-button.component.html',\n  styleUrls: ['./xicon-button.component.scss']\n})\nexport class XiconButtonComponent implements OnInit {\n\n  /**\n   * Label to use for accessibility.\n   * @required\n   */\n  @Input() label: string;\n  /**\n   * @deprecated - Remove at breaking change and go to (click)\n   */\n  @Output() clickEvent: EventEmitter = new EventEmitter();\n  @Output() click: EventEmitter = new EventEmitter();\n\n  constructor() { }\n\n  ngOnInit() {\n    if (!this.label) {\n      // todo - change to MohCommmonLibraryError -> test in IE10\n      // throw Error('common-xicon-button initialized without label. You MUST supply a label attribute for accessibility.');\n      const msg = `common-xicon-button initialized without label. You MUST supply a label attribute for accessibility.\n      e.g. \n`; // Intentional to create a blank line between our error and stack trace.\n      throw new MoHCommonLibraryError(msg);\n    }\n  }\n\n  onBtnClick() {\n    this.clickEvent.emit();\n    this.click.emit();\n  }\n}\n\n    \n\n    \n        \n  \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  '\n    var COMPONENTS = [{'name': 'AccordionCommonComponent', 'selector': 'common-accordion'},{'name': 'AddressComponent', 'selector': 'common-address'},{'name': 'ButtonComponent', 'selector': 'common-button'},{'name': 'ButtonGroupComponent', 'selector': 'common-button-group'},{'name': 'CaptchaComponent', 'selector': 'common-captcha'},{'name': 'CheckboxComponent', 'selector': 'common-checkbox'},{'name': 'CityComponent', 'selector': 'common-city'},{'name': 'ConfirmTemplateComponent', 'selector': 'common-confirm-template'},{'name': 'ConsentModalComponent', 'selector': 'common-consent-modal'},{'name': 'CoreBreadcrumbComponent', 'selector': 'common-core-breadcrumb'},{'name': 'CountryComponent', 'selector': 'common-country'},{'name': 'DateComponent', 'selector': 'common-date'},{'name': 'DatepickerComponent', 'selector': 'common-datepicker'},{'name': 'DropdownComponent', 'selector': 'common-dropdown'},{'name': 'EmailComponent', 'selector': 'common-email'},{'name': 'ErrorContainerComponent', 'selector': 'common-error-container'},{'name': 'FileUploaderComponent', 'selector': 'common-file-uploader'},{'name': 'FormActionBarComponent', 'selector': 'common-form-action-bar'},{'name': 'FormSubmitBarComponent', 'selector': 'common-form-submit-bar'},{'name': 'FullNameComponent', 'selector': 'common-full-name'},{'name': 'GeocoderInputComponent', 'selector': 'common-geocoder-input'},{'name': 'HeaderComponent', 'selector': 'common-header'},{'name': 'NameComponent', 'selector': 'common-name'},{'name': 'PageFrameworkComponent', 'selector': 'common-page-framework'},{'name': 'PageSectionComponent', 'selector': 'common-page-section'},{'name': 'PasswordComponent', 'selector': 'common-password'},{'name': 'PhnComponent', 'selector': 'common-phn'},{'name': 'PhoneNumberComponent', 'selector': 'common-phone-number'},{'name': 'PostalCodeComponent', 'selector': 'common-postal-code'},{'name': 'ProvinceComponent', 'selector': 'common-province'},{'name': 'RadioComponent', 'selector': 'common-radio'},{'name': 'SampleModalComponent', 'selector': 'common-sample-modal'},{'name': 'SinComponent', 'selector': 'common-sin'},{'name': 'StreetComponent', 'selector': 'common-street'},{'name': 'ThumbnailComponent', 'selector': 'common-thumbnail'},{'name': 'ToggleComponent', 'selector': 'common-toggle'},{'name': 'WizardProgressBarComponent', 'selector': 'common-wizard-progress-bar'},{'name': 'XiconButtonComponent', 'selector': 'common-xicon-button'}];\n    var DIRECTIVES = [{'name': 'DateFieldFormatDirective', 'selector': '[commonDateFieldFormat]'},{'name': 'DuplicateCheckDirective', 'selector': '[commonDuplicateCheck]'},{'name': 'ValidateBcPostalDirective', 'selector': '[commonValidateBcPostal]'},{'name': 'ValidateCityDirective', 'selector': '[commonValidateCity]'},{'name': 'ValidateNameDirective', 'selector': '[commonValidateName]'},{'name': 'ValidatePostalcodeDirective', 'selector': '[commonValidatePostalcode]'},{'name': 'ValidateRegionDirective', 'selector': '[commonValidateRegion]'},{'name': 'ValidateStreetDirective', 'selector': '[commonValidateStreet]'}];\n    var ACTUAL_COMPONENT = {'name': 'XiconButtonComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"changelog.html":{"url":"changelog.html","title":"getting-started - changelog","body":"\n                   \n\n3.0.0 \"moh-common-lib\" (2020-01-08)\n3.0.0-rc.31 \"moh-common-lib\" (2020-01-08)\nBug Fixes\n\nConsentModalComponent: Added keys to interface. (95b1122)\nConsentModalComponent: Added required PACUTOFF env variables. (abad941)\nConsentModalComponent: Update SUPPBEN to return maintenance flags. (fd32157)\n\n3.0.0-rc.30 \"moh-common-lib\" (2020-01-06)\nBug Fixes\n\nlogic for accepting past/future dates, set errors, unit tests (2f4836b)\nConsentModalComponent: Added SUPPBEN environment variables case. (f01339b)\n\nFeatures\n\nConsentModalComponent: Added maintenance flags for PA and SB. (e5b3cfa)\n\n3.0.0-rc.29 \"moh-common-lib\" (2020-01-02)\nBug Fixes\n\nDateComponent: Added unit test. (22fd6aa)\nDateComponent: Empty date field trigger validation. (d302941)\nDateComponent: Moved _onChange call into destroyDate method. (dae52b0)\nHeaderComponent: BCP-197 Accessibility. (a79007f)\n\n3.0.0-rc.28 \"moh-common-lib\" (2019-12-16)\nFeatures\n\nexported abstract-form-control so it can be used in projects (73247f2)\n\n3.0.0-rc.27 \"moh-common-lib\" (2019-12-13)\n3.0.0-rc.26 \"moh-common-lib\" (2019-12-13)\nBug Fixes\n\nAbsractFormControl:  Doesn't throw error on falsy/undefined label (df5bd4d)\n\n3.0.0-rc.25 \"moh-common-lib\" (2019-12-12)\nFeatures\n\nadded container service, modified container to use service (716da42)\nexported abstract-form-control so it can be used in projects (20fa6ea)\nFormActionBar: Now can include arbitrary buttons in ng-content. (85d3767)\n\n3.0.0-rc.24 \"moh-common-lib\" (2019-12-11)\nBug Fixes\n\nFormActionBar: Added vendor prefixes for position: sticky (92c2dc4)\n\nCode Refactoring\n\nAbstractFormControl: Throws error when provided invalid label type (7567a75)\n\n3.0.0-rc.23 \"moh-common-lib\" (2019-12-10)\nBug Fixes\n\nDate: Allows clearing of field conditional on RequiredValidator (7a5b7bc)\n\n3.0.0-rc.22 \"moh-common-lib\" (2019-12-09)\nBug Fixes\n\ndefault page guard working  when navigates to start url when list empty or all pages false (57b73dd)\nself validating - set value in nameStr variable before call onchange (7e674de)\n\nCode Refactoring\n\ncheckbox to use abstract control class, date uses registerValidation(), cleanup (0b0ffca)\n\nFeatures\n\ninject start url & bypass values for default page guard service (f5e3e0d)\n\n3.0.0-rc.21 \"moh-common-lib\" (2019-12-03)\nBug Fixes\n\nScrolling compatibilty with IE 11 (fd57808)\n\nCode Refactoring\n\ncommon template & reactive form items in abstract base form, create abstract react form (c4c9856)\nrename files (fixed spelling on library-error file), added scrollTo() for browser compat (23fe745)\nuse scrollTo() rather than Window.scrollTo() (e56ffdf)\n\nFeatures\n\nCommonImage: Make generic, add toJSON() method. Formatting. (2637a7a)\n\n3.0.0-rc.19 \"moh-common-lib\" (2019-12-02)\nBug Fixes\n\nset each field of date separately so year does not default to 1901 when year is 1. (CR18975) (dc606f1)\n\n3.0.0-rc.18 \"moh-common-lib\" (2019-12-02)\nFeatures\n\nAbstractHttpService: Create uploadAttachment method (bf0bcc2)\nCommonImage: Can set fileContent via optional constructor param (cd1cc3b)\n\n3.0.0-rc.17 \"moh-common-lib\" (2019-11-27)\nBug Fixes\n\nadded set to setter in page-state service (09c1a1b)\nfirst page can navigate to (0803cae)\nfirst page can navigate to (503b449)\npage-state service renamt isPageComplete to canNavigateToPage, tests updated (a33bb9d)\npage-state service renamt isPageComplete to canNavigateToPage, tests updated (9e5d3aa)\n\nCode Refactoring\n\ncreated replacement for existing route components, marked as depreciated (0881790)\ncreated replacement for existing route components, marked as depreciated (636c1d5)\n\nFeatures\n\nAdded page state service & unit tests (cf47d9b)\nFormActionBar: Automatically call scrollToError on click. (3ff09e0)\nHelper: Create scrollToError() function. (7bf5025)\n\nStyles\n\nFileUpload: Reduce default size by removing a spacing element. (322d58c)\nPostalCode: Remove placeholder (f27b941)\n\n3.0.0-rc.16 \"moh-common-lib\" (2019-11-20)\nBug Fixes\n\nadded set to setter in page-state service (3b207b9)\nset sin value before call onChange (7e270d8)\nupdated email error message, strip off (optional) from labels (788c3d1)\nupdated phone error message (f0202f2)\n\nFeatures\n\nAdded page state service & unit tests (7c7ca2f)\n\n3.0.0-rc.15 \"moh-common-lib\" (2019-11-15)\nCode Refactoring\n\nemail component uses abstract control class and is self-validing, units tests started (f21d329)\n\n3.0.0-rc.14 \"moh-common-lib\" (2019-11-14)\nBug Fixes\n\nrange dates indicate no future or past dates allowed (see notes at top of file) (a73785f)\n\nCode Refactoring\n\nprovince component uses abstract control class, added ng-select to styles for testing (48e2120)\ncity component uses abstract control class (492934b)\ncommonPhnValidation deprecriated, phnComponent modified to be self-validating (cc9910b)\ncommonValidateSin removed, sin component self validates, reactive tests started for sin (e0bd207)\nstreet component uses abstract control class (36eeddb)\n\nFeatures\n\nAdded CommonLogEvents to commonLogger - common events that apps have when logging (a1b8211)\n\nTests\n\nrefactored tests so that call helper functions (21afb82)\n\n3.0.0-rc.13 \"moh-common-lib\" (2019-11-06)\nBug Fixes\n\nadded logic to abstract-form-control to check for no label submitted. (ed615a6)\ncheck for label not passed in set default value as 'Field' (655a0fd)\n\n3.0.0-rc.12 \"moh-common-lib\" (2019-11-05)\nBug Fixes\n\nGeocoderInput: Now emits an onChange with null if it has no results. (009d779)\n\n3.0.0-rc.11 \"moh-common-lib\" (2019-11-05)\nBug Fixes\n\nFileUploader: Fix a11y for danging aria label (3f6a466)\nCR18890 - added check for year (679ac15)\n\nTests\n\nRemove extra unnecessary tick() call. (8248e61)\nUnit tests for phone/radio passing.  Also internal refactoring. (14bce6e)\n\n3.0.0-rc.10 \"moh-common-lib\" (2019-11-01)\nFeatures\n\nPhone: Phone now has an 'incompleteValue' error and text. (a1bd381)\n\n3.0.0-rc.9 \"moh-common-lib\" (2019-10-30)\nBug Fixes\n\nDate: Remove debug label (a7efeee)\n\n3.0.0-rc.8 \"moh-common-lib\" (2019-10-30)\nBug Fixes\n\nDate: Replace (chance) event with (blur) for IE (61b54fd)\n\n3.0.0-rc.7 \"moh-common-lib\" (2019-10-29)\nBug Fixes\n\nPhoneNumber: IE fix by changing event (71eb531)\n\nFeatures\n\nPhoneNumber: Add allowInternational flag to disable the \"+1\" (108e46b)\nPhoneNumber: Now a self-validating component. (6650ef8)\n\nBREAKING CHANGES\n\nPhoneNumber: Deleted commonValidatePhone directive\n\n3.0.0-rc.6 \"moh-common-lib\" (2019-10-29)\nBug Fixes\n\nDate: Remove ngOnChanges (015602c)\nadded ngChanges to date to detect label changes, no longer can add question by default (38c822b)\nadded placeholder country & regexp for label (61c0cdc)\n\n3.0.0-rc.5 \"moh-common-lib\" (2019-10-28)\nFeatures\n\nadded fullname to person.model (28d9585)\nAbstractAPI: Has a generateUUID method. (5362c67)\n\n3.0.0-rc.4 \"moh-common-lib\" (2019-10-23)\nBug Fixes\n\nDate format string modified to use format from date-fns module (4bb54c0)\nFixed date component to handle no validators on the control. (5441be2)\n\n3.0.0-rc.3 \"moh-common-lib\" (2019-10-22)\n3.0.0-rc.2 \"moh-common-lib\" (2019-10-22)\nBug Fixes\n\nDate:  Setting restrictDate to \"past\" no longer includes today, matching previous behaviour (8fc79af)\n\n3.0.0-rc.1 \"moh-common-lib\" (2019-10-22)\nBuild\n\nAdd new command to build release candidates for v3 (e89e6f3)\n\nFeatures\n\nDate: DateComponent is NgControl (51f2ea4)\n\n3.0.0-rc.0 \"moh-common-lib\" (2019-10-22)\n2.28.0 \"moh-common-lib\" (2019-10-17)\nBug Fixes\n\ncall _onChange to trigger form validations (c91fef0)\n\n2.27.2 \"moh-common-lib\" (2019-10-17)\nBug Fixes\n\nFileUploader: Attempted fix at PDF parsing for Edge using worker. (2ebd235)\n\n2.27.1 \"moh-common-lib\" (2019-10-16)\nBug Fixes\n\nConsentModal: disableContinue works correctly (f18457b)\n\n2.27.0 \"moh-common-lib\" (2019-10-16)\nBug Fixes\n\nGeocoderService: Change default API filter (34f0a40)\nGeocoderService: Exendable methods via inheiritance (7355610)\n\nFeatures\n\nGeocoderInput: New Component CommonGeocoderInput (224e362)\nGeocoderInput: Now a ControlValueAccessor (730f9c7)\n\n2.26.0 \"moh-common-lib\" (2019-10-15)\nBug Fixes\n\nlogic in validate postal-code directive to handle bcOnly flag (88bc3f3)\n\nDocumentation\n\nPublishing: Make it more clear when to use \"patch\" or \"minor\" versions. (02cb2c5)\n\nFeatures\n\nCAPTCHA: Shows required error on touched (16be24b)\nadded bc only postal code check for address component (e6db87e)\nConsentModal: Add disableContinue @Input(), used with custom controls (8aa41ec)\n\n2.24.0 \"moh-common-lib\" (2019-10-11)\nFeatures\n\nFileUploader: Add a blank \"Add\" thumbnail user can click (1251212)\nAdded confirmation template for response pages (1f1a0f9)\nAdded confirmation template for response pages (aa2b7f9)\n\n2.23.0 \"moh-common-lib\" (2019-10-10)\nFeatures\n\nadded abilty to modify messages in date rather than replace. (2235059)\n\n2.22.0 \"moh-common-lib\" (2019-10-09)\nFeatures\n\ncommonValidatePhone: Phone format validation (510ad9e)\n\n2.21.0 \"moh-common-lib\" (2019-10-09)\nBug Fixes\n\nPhone: Can now use [ngModel] by itself (5910979)\n\nFeatures\n\nemail: Create EmailComponent (based on Name) (27b488b)\n\nStyles\n\nPageSection: Change bullet styles (f541d81)\n\n2.20.1 \"moh-common-lib\" (2019-10-09)\nStyles\n\nHeader: Header text wraps on mobile, no longer breaking mobile (1303722)\n\n2.20.0 \"moh-common-lib\" (2019-10-08)\nFeatures\n\nadded ability to set query parameters on navigate method in abstract form (4f3e59f)\n\n2.19.0 \"moh-common-lib\" (2019-10-01)\nBug Fixes\n\ndate component to check for null, undefined and zero, trigger year validation on month change (0ed3875)\nfile uploader - check to confirm have array to check length in onChange method (c6067fd)\n\n2.18.1 \"moh-common-lib\" (2019-09-27)\nBug Fixes\n\nfixed off by 1 date in year validator (9a38474)\n\n2.18.0 \"moh-common-lib\" (2019-09-26)\nBug Fixes\n\nbug in file uploader - check for null array (cf962bc)\n\nFeatures\n\nadded sample-modal component to display sample doc images (4f8f2e7)\n\n2.17.1 \"moh-common-lib\" (2019-09-25)\nBug Fixes\n\nadded check for errors when component not used as form control (7d274e8)\ncolor-success changed to 83D31D to match color on mockups (c64c066)\nerror in checkbox html check errors exist (29c5160)\n\nDocumentation\n\nTODO: Create TODO file with list of breaking changes for version 3 (9dc5375)\nTODO: Rename todo to a markdown file for GitHub support (496c252)\n\n2.17.0 \"moh-common-lib\" (2019-09-24)\nBug Fixes\n\nadded space in error message (radio) (6427f10)\nbug introduced when try to display errors when field touched (radio/checkbox) (aceb028)\ncheckbox fixed to be custom form control (1c51f01)\nset radio touched on blur, display required message when touched (c78856a)\n\nDocumentation\n\nTweak publishing so it passes markdownlint (901885e)\n\nFeatures\n\nAdded required error message to component (d5dd02f)\n\n2.16.0 \"moh-common-lib\" (2019-09-20)\nBug Fixes\n\nupdate address1 when street updated (29e521c)\n\n2.15.0 \"moh-common-lib\" (2019-09-19)\nBug Fixes\n\nremoved check for US from address component (996cad7)\n\n2.14.0 \"moh-common-lib\" (2019-09-17)\nFeatures\n\nSet label defaults to yes/no in radio component (66e58e7)\n\n2.13.0 \"moh-common-lib\" (2019-09-17)\nBug Fixes\n\nclear province when country changes, placeholders updated (8380850)\n\n2.12.0 \"moh-common-lib\" (2019-09-16)\nBug Fixes\n\nradio buttons working for more than 2 options as custom form control (f2ccfe6)\nRemoved check for undefined (7398e93)\n\nFeatures\n\nAdded ability to disable specfic fields in address component (5965aec)\n\n2.11.0 \"moh-common-lib\" (2019-09-12)\nBug Fixes\n\nPostal code clears when country changes to Canada (2c0b127)\n\nDocumentation\n\nAdd info on publishing new builds (9855d9c)\n\n2.10.0 \"moh-common-lib\" (2019-09-05)\nBug Fixes\n\nPhoneNumber: The first numbers within the brackets must be 2-9 now (5069fe8)\n\n2.9.0 \"moh-common-lib\" (2019-08-30)\nBug Fixes\n\nexport common image elementsgit (483b735)\n\n2.8.1 \"moh-common-lib\" (2019-08-22)\nBug Fixes\n\nDate: Capitalize placeholders (4d39002)\n\n2.8.0 \"moh-common-lib\" (2019-08-20)\nBug Fixes\n\nReorder address fields (cbbfaa8)\n\nFeatures\n\nadded validation for street component (0699178)\nadded validations for postal code, country/province, added abiltiy to update error messages (60befc2)\nvalidation for valid characters in city component (16da113)\n\n2.7.1 \"moh-common-lib\" (2019-08-15)\nBug Fixes\n\nDateComponent: Handles having 00 as day (67b6f78)\nFileUpload: Remove console log on ngchanges (7c99c1e)\n\n2.7.0 \"moh-common-lib\" (2019-08-13)\nBug Fixes\n\nFixed displaying of the error message in name component (1650a23)\nAddress:  Clear out address line data when removing the line (3f1149e)\n\n2.6.0 \"moh-common-lib\" (2019-08-09)\nCode Refactoring\n\nModified address to used MSP label and length defaults (5bb54fc)\n\nFeatures\n\nfunctions to retrieve country, prov descriptions,  maxlengths input for addresss (978250b)\n\n2.5.2 \"moh-common-lib\" (2019-08-02)\n2.5.1 \"moh-common-lib\" (2019-07-31)\nBug Fixes\n\nremoved plus sign used to concatenate string for aria-label (#32) (3a5677b), closes #32\n\n2.5.0 \"moh-common-lib\" (2019-07-31)\nFeatures\n\nAddress: added input to address component to allow users to change default labels on fields. (#31) (ebb6998), closes #31\n\n2.4.0 \"moh-common-lib\" (2019-07-29)\n2.3.0 \"moh-common-lib\" (2019-07-25)\nFeatures\n\nAddress: Now has default country/prov behaviour built in (8361a0e)\n\n2.0.0 \"moh-common-lib\" (2019-07-25)\n2.2.0 \"moh-common-lib\" (2019-07-25)\nFeatures\n\nAddress: Additional lines must be removed in order (ac9d61c)\nAddress: Now can show 2 extra address lines (previously only one) (af91989)\n\nStyles\n\nXIconButton: Change icon from 'times' to 'times-circle' (aad93b5)\n\n2.1.5 \"moh-common-lib\" (2019-07-18)\nAccessibility\n\nRadio: Hide radio for FireFox but keep tab-focusable. (8f6886f)\nXIconButton: Add label (867f969)\n\n2.1.4 \"moh-common-lib\" (2019-07-16)\nAccessibility\n\nPhone: Fix association of labels for phone component (c122a2a)\n\n2.1.3 \"moh-common-lib\" (2019-07-11)\nAccessibility\n\nRadio: Convert radio to use fieldset. (2c2f322)\nRadio: New focus style for RadioComponent, styled better for mouse (c2fd959)\n\n2.1.2 \"moh-common-lib\" (2019-07-10)\nAccessibility\n\nRadio: Radio is now focusable via tab / screenreader (126d876)\n\nStyles\n\nConsentModal: Backdrop enabled when modal is open. (b901868)\n\n2.1.1 \"moh-common-lib\" (2019-07-09)\nBug Fixes\n\nAddress: Implement allowExtralines to opt-in to new multi-line (5a7c37b)\n\nBREAKING CHANGES\n\nAddress: This reverts an accidentally introduced breaking change in 2.1.0 where all address components would use the new line behaviour.  Now, it is opt-in.\n\n2.1.0 \"moh-common-lib\" (2019-07-09)\nAccessibility\n\nStepper/Wizard: Darken link text by 5% to get AA colour contrast (a27faa9)\n\nBug Fixes\n\nRadio: Fix empty label for RadioComponent for a11y (Waze) (7400a64)\n\nBuild\n\nAdd \"a11y\" type to changelog and commit types (edf0b2e)\n\nCode Refactoring\n\nAddressComponent: Reorganize order of inputs, add AddressLine1 (5d8f61d)\n\nDocumentation\n\nAddressModel: Add TSDOC descriptions on street and addressLine1 (6f093d2)\n\nFeatures\n\nAddressComponent: Add 'disableGeocoder' @Input (a512eb0)\n\n2.0.1 \"moh-common-lib\" (2019-07-04)\nBug Fixes\n\nPhoneNumber: Required @Input works properly (5b18c5f)\n\nCode Refactoring\n\nXIconButton: Add (click) event, @deprecate (clickEvent) (baee5ad)\n\n2.0.0 \"moh-common-lib\" (2019-06-28)\nBug Fixes\n\nDate: Remove console logs. (a9aaf59)\nPHN: Remove console logs when setting values. (d4f0e3b)\nStepper/WizardProgress: Add vertical padding (b555787)\n\nFeatures\n\nFormActionBar: Change to full-width,  remove widthOptions (6254d29)\nName, Postal: Update validators to be compatible with reactive forms (e35f16b)\n\nStyles\n\nPageFramework:  Full height page framework, pushes form bar down (6b8cedd)\n\nBREAKING CHANGES\n\nPageFramework: Shows an error when a FormActionBar is embedded\nFormActionBar: Width changes may break designs, @Input removed\n\n1.8.0 \"moh-common-lib\" (2019-06-25)\nBug Fixes\n\nDropdown: Add visible form label to input (2a511e7)\nProvince: Add placeholder when not using dropdown (8e823c5)\nProvince: Init val = undefined (was empty string); fix placeholder. (09ae712)\n\nFeatures\n\nCity: Add placeholder @Input with default (f103e7c)\nDropdown: Add 'clearable' property from ng-select (8f24e2e)\nProvince: Field is clearable when not required (47d614a)\nStreet: Add placeholder @Input with default (ae493e7)\n\n1.7.0 \"moh-common-lib\" (2019-06-24)\nBug Fixes\n\nCheckbox: Checkbox component now defaults to unchecked. (6775a4d)\n\nDocumentation\n\nAdditionalDocumentation:  preserveSymlinks in for npm link (e458627)\nRouteGuard: Document RouteGuardService and related classes. (fc7fe65)\nRouteGuard: Fix instruction examples for RouteGuard. (3a06f99)\n\nFeatures\n\nXIconButton: Add XIconButtonComponent. Include fixes to RadioComponent. (0ba1d1e)\n\n1.6.2 \"moh-common-lib\" (2019-06-20)\nBug Fixes\n\nCheckbox: Fix labels for checkbox to properly associate (af516d0)\n\n1.6.1 \"moh-common-lib\" (2019-06-19)\nBug Fixes\n\naddress and component - defaults now displaying (6c09982)\n\nFeatures\n\nroute guard implemented (befc319)\n\n1.6.0 \"moh-common-lib\" (2019-06-19)\nDocumentation\n\nContributing: Update contributing to show WIP option (3f42b31)\n\nFeatures\n\nPageFramework: Add 15px left/right padding, to counter taking padding from .container-fluid (7febf6d)\n\n1.5.0 \"moh-common-lib\" (2019-06-18)\nBug Fixes\n\nSIN, Address, RouteGuard: SIN all 0s fix, add RouteGuard service, and default address data. (4295b03)\nToggle: Switch order of Yes/No, so that 'No' comes first. (e485f67)\n\n1.4.0 \"moh-common-lib\" (2019-06-13)\nFeatures\n\ne2e: Add new methods in abstract-test-page (#19) (a702d6d), closes #19\n\n1.3.0 \"moh-common-lib\" (2019-06-13)\nDocumentation\n\nConsentModal: Add example typescript code to open modal. (7ff8510)\nConsentModal: Document consent modal with example (fbc012d)\n\nFeatures\n\nFormActionBar: Add 'extra-width' option to widthOption for all bps (5b88093)\n\n1.2.0 \"moh-common-lib\" (2019-06-10)\nFeatures\n\nFormActionBar: Add \"widthOption\" to for custom CSS width override (36476f8)\n\n1.1.1 \"moh-common-lib\" (2019-06-07)\nFeatures\n\nHeader: Logo image path can be overwritten (03c1243)\n\n1.1.0 \"moh-common-lib\" (2019-06-07)\nBug Fixes\n\nSIN string all zeros - invalid (96a58b1)\nSIN, PHN: SIN string all zeros is invalid, added isBCPHn to PHN. (51bfe3b)\n\nBuild\n\nnpm-scripts: Update what is committed after auto-buiding (c8fb31b)\n\nDocumentation\n\nReadme: Update to readme and docs homepage (f334faf)\n\nFeatures\n\nHeader: Create HeaderComponent with built-in \"Skip To Content\" (3868c50)\n\n1.0.2 \"moh-common-lib\" (2019-06-06)\nBug Fixes\n\nToggle: Properly emit value changes. Had a typo. (e2271b7)\n\n1.0.1 \"moh-common-lib\" (2019-06-06)\nBug Fixes\n\nRadio: Removed the default status label and changed the name of radio (#17) (acbbdc1), closes #17\n\nCode Refactoring\n\nSecurity: up to date in 10.256s (ac7406b)\nToggle: ToggleComponent now uses RadioComponent under the hood (e81927b)\n\n1.0.0 \"moh-common-lib\" (2019-06-05)\nBug Fixes\n\nImports: Merge /services, /models, /images entry points into main (151f173)\n\nFeatures\n\nFullName: Create FullNameComponent for first/middle/last (41f5609)\n\n0.0.34 \"moh-common-lib\" (2019-06-05)\nFeatures\n\nPHN, SIN components from FPC. Name majorly refactored. (c04b81d)\n\n0.0.33 \"moh-common-lib\" (2019-06-04)\nBug Fixes\n\nConsentModal:  ConsentModal passes TSLint rules (66f9608)\nConsentModal: Fixed multiple compile time issues with import paths (09ce95a)\nRadioComponent: Changed onStatusChange to statusChange (185148b)\n\nDocumentation\n\nButtonComponent: Updated documentation for ButtonComponent. (4d5992a)\nButtonGroupComponent: ButtonGroupComponent is DEPRECATED (c580225)\nRadioComponent: Re-organize docs for radio component (b80520f)\n\nFeatures\n\nCreate Button, Checkbox, Consent Modal, Radio, Name, Phone Number components (dd29a60)\nCreate Button, Checkbox, Consent Modal, radio, Name, Phone Number Components  (53a109b), closes PR#13\n\n0.0.32 \"moh-common-lib\" (2019-05-15)\nBug Fixes\n\nautocomplete turned off, fixed bug in postal to work with fpcare (1c8242e)\nDatepicker: Remove the IE provided 'X' to clear input (2ddfc23)\n\nDocumentation\n\nBasic styling to use BC Gov colours and fonts (7226b37)\nCreate design guidelines markdown file for each component (9f5a04e)\n\nFeatures\n\nButtonGroupComponent: Create ButtonGroupComponent with ControlValueAccessor (22710b7)\nDocumentation: Customize tabs in docs, adding \"Design Guidelines\" (df678e6)\n\n0.0.31 \"moh-common-lib\" (2019-05-07)\nBug Fixes\n\nAddressComponent: Include Typeahead module necessary to compile. (7d2e7cd)\nCaptchaComponent: Add autocomplete=\"false\" to CAPTCHA (18d69c6)\n\nFeatures\n\nAddressComponent: Create AddressComponent copied from prime-web. (238c01d)\nAddressComponent: Implement NG_VALUE_ACCESSOR for reactive forms. (8d79d30)\nAddressComponent: Split AddressComponent into City/Country/Province Components (3a98fb0)\nE2E: Create AbstractTestPage in moh-common-lib/e2e (c347c39)\n\n0.0.30 \"moh-common-lib\" (2019-04-25)\nBug Fixes\n\nDatepicker: Name attr is always unique thanks to UUID (1ea543d)\n\n0.0.29 \"moh-common-lib\" (2019-04-17)\nBug Fixes\n\nPostalCodeComponent: Placeholder default fixed, changed to @Input() (67c4797)\n\n0.0.28 \"moh-common-lib\" (2019-04-16)\nFeatures\n\nPostalCode: Add 'maxlen' attribute when not using mask (532a3ec)\n\n0.0.27 \"moh-common-lib\" (2019-04-16)\nFeatures\n\nDatepicker: Implement NG_VALUE_ACCESSOR handlers and remove logs (cb65dc6)\n\n0.0.26 \"moh-common-lib\" (2019-04-16)\nFeatures\n\nDatepicker: experimental Add NG_VALUE_ACCESSOR into DatePicker (f603e99)\n\n0.0.25 \"moh-common-lib\" (2019-04-12)\nBug Fixes\n\nFileUploaderComponent: Fix runtime issue with missing reference (a9cafca)\n\n0.0.24 \"moh-common-lib\" (2019-04-10)\nBug Fixes\n\nCommonLogger: Commmon Logger now can be used with application-defined interfaces. (4766a2b)\n\n0.0.23 \"moh-common-lib\" (2019-04-10)\nFeatures\n\nCommonLogger: CommonLogger is exported from moh-common-lib/services (85eab15)\n\n0.0.22 \"moh-common-lib\" (2019-04-08)\nBug Fixes\n\npostal-code-component: Postal Code Component Validation made to match FPC. (3d0a6bc)\n\n0.0.21 \"moh-common-lib\" (2019-04-02)\nBuild\n\nUpdate build scripts and commit hooks. (ca8bd7c)\nchangelog: Improve changelog generation, adding new categories (d5bf00b)\npackage.json: npm scripts for version should now build and package docs. (3ac6d4d)\n\nDocumentation\n\ncontributing: CONTRIBUTING.MD includes instructions on git hooks (c6befdf)\n\nFeatures\n\nToggleComponent: Import ToggleComponent from FPC (df26aa1)\n\n0.0.20 \"moh-common-lib\" (2019-04-01)\nBug Fixes\n\nMove WizardProgressItem to moh-common-lib/models and export (7fd6537)\nbuild: Refactor SimpleDate location but keep same public export API (7eaf326)\nbuild: Refactor SimpleDate location but keep same public export API (d5f44c4)\n\nFeatures\n\nbuild: Add npm run clean command to rimraf dist folders (65b8144)\nbuild: Auto-add githooks after running npm install. (3b90e60)\n\n0.0.19 \"moh-common-lib\" (2019-03-28)\nBug Fixes\n\nfile-uploader: Images array will be initialized if not provided (4e8eb9b)\n\nFeatures\n\ncomponent: Create DropdownComponent (7f968a4)\ncomponents: PasswordComponent emits on blur; page-section imported. (dbb94e1)\n\n0.0.18 \"moh-common-lib\" (2019-03-28)\nFeatures\n\ncaptcha: CaptchaModule successfully configured. (e762fc1)\n\n0.0.17 \"moh-common-lib\" (2019-03-28)\nBug Fixes\n\ncaptcha: Fix compile time bug in CAPTCHA (6caf36c)\nchangelog: Truncate duplicate sections in CHANGELOG.md (c054ca5)\ncomponent: FileUploader required properly flags on return (6242bea)\ndocs: Rename documentation/ to docs/ (650025e)\nschematics: moh-start schematic sets skipLibCheck=false in tsconfig (48dfa9d)\nsecurity: Fixed issues from npm audit. (479804f)\n\nBuild\n\npackaging: Release tagging, auto-version increment, and changelog. (8a22405)\npackaging: Update build scripts for changelog and commit hooks (aee4761)\nChange changelog generation and commit (48966c0)\n\nDocumentation\n\nlib: Generate first docs, update pageframework jsdocs (bf3cf23)\nAdd Getting Started and update main readme (2c5c994)\nCreate local-development subfolder of markdown files (2625608)\nRe-generate docs after updating PasswordComponent (017bd5f)\nUpdate link to issues instead of PR (4b884a6)\nUpdate readme to absolute paths to GitHub pages (8004583)\n\nFeatures\n\nbuild: Create \"setup:git-hooks\" npm script (1a288cd)\ncaptcha: CaptchaModule properly configured so docs are now correct. (35d0bba)\ncomponent: Create common-dropdown component (01d17d3)\ncomponents: Add 'form-bar' CSS class to both form bars (6d5649d)\ndocs: Create docs config file, .compodoccrc.json (c8cd6f4)\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                projects/common/captcha/src/captcha-data.service.ts\n            \n            injectable\n            CaptchaDataService\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                projects/common/captcha/src/captcha-data.service.ts\n            \n            injectable\n            ServerPayload\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                projects/common/captcha/src/captcha.component.ts\n            \n            component\n            CaptchaComponent\n            \n                10 %\n                (4/40)\n            \n        \n        \n            \n                \n                projects/common/e2e/src/abstract-test-page.ts\n            \n            class\n            AbstractTestPage\n            \n                82 %\n                (19/23)\n            \n        \n        \n            \n                \n                projects/common/helpers/library-error.ts\n            \n            class\n            MoHCommonLibraryError\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                projects/common/helpers/scroll-helpers.ts\n            \n            function\n            scrollTo\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/common/helpers/scroll-helpers.ts\n            \n            function\n            scrollToError\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                projects/common/helpers/test-helpers.ts\n            \n            function\n            createTestingModule\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/common/helpers/test-helpers.ts\n            \n            function\n            getDebugElement\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/common/helpers/test-helpers.ts\n            \n            function\n            getErrorContainer\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/common/helpers/test-helpers.ts\n            \n            function\n            getInputDebugElement\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/common/helpers/test-helpers.ts\n            \n            function\n            getInputElement\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/common/helpers/test-helpers.ts\n            \n            function\n            getLabel\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/common/helpers/test-helpers.ts\n            \n            function\n            getLegendContext\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/common/helpers/test-helpers.ts\n            \n            function\n            getSelectDebugElement\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/common/helpers/test-helpers.ts\n            \n            function\n            setInput\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/common/helpers/test-helpers.ts\n            \n            function\n            setSelect\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/common/helpers/test-helpers.ts\n            \n            function\n            tickAndDetectChanges\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/common/lib/components/accordion/accordion.component.ts\n            \n            component\n            AccordionCommonComponent\n            \n                16 %\n                (1/6)\n            \n        \n        \n            \n                \n                projects/common/lib/components/address/address.component.ts\n            \n            component\n            AddressComponent\n            \n                18 %\n                (9/49)\n            \n        \n        \n            \n                \n                projects/common/lib/components/address/address.component.ts\n            \n            interface\n            AddrLabelList\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                projects/common/lib/components/address/address.component.ts\n            \n            interface\n            Maxlengths\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                projects/common/lib/components/address/address.component.ts\n            \n            interface\n            ReadOnlyFields\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                projects/common/lib/components/button-group/button-group.component.ts\n            \n            component\n            ButtonGroupComponent\n            \n                5 %\n                (1/17)\n            \n        \n        \n            \n                \n                projects/common/lib/components/button/button.component.ts\n            \n            component\n            ButtonComponent\n            \n                11 %\n                (1/9)\n            \n        \n        \n            \n                \n                projects/common/lib/components/checkbox/checkbox.component.ts\n            \n            component\n            CheckboxComponent\n            \n                13 %\n                (4/29)\n            \n        \n        \n            \n                \n                projects/common/lib/components/city/city.component.ts\n            \n            component\n            CityComponent\n            \n                6 %\n                (2/31)\n            \n        \n        \n            \n                \n                projects/common/lib/components/city/validate-city.directive.ts\n            \n            directive\n            ValidateCityDirective\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                projects/common/lib/components/city/validate-city.directive.ts\n            \n            variable\n            commonValidateCity\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/common/lib/components/confirm-template/confirm-template.component.ts\n            \n            component\n            ConfirmTemplateComponent\n            \n                25 %\n                (1/4)\n            \n        \n        \n            \n                \n                projects/common/lib/components/consent-modal/consent-modal.component.ts\n            \n            component\n            ConsentModalComponent\n            \n                20 %\n                (8/40)\n            \n        \n        \n            \n                \n                projects/common/lib/components/consent-modal/consent-modal.component.ts\n            \n            interface\n            ISpaEnvResponse\n            \n                7 %\n                (1/14)\n            \n        \n        \n            \n                \n                projects/common/lib/components/core-breadcrumb/core-breadcrumb.component.ts\n            \n            component\n            CoreBreadcrumbComponent\n            \n                33 %\n                (1/3)\n            \n        \n        \n            \n                \n                projects/common/lib/components/country/country.component.ts\n            \n            component\n            CountryComponent\n            \n                3 %\n                (1/28)\n            \n        \n        \n            \n                \n                projects/common/lib/components/country/country.component.ts\n            \n            interface\n            CountryList\n            \n                33 %\n                (1/3)\n            \n        \n        \n            \n                \n                projects/common/lib/components/country/country.component.ts\n            \n            function\n            getCountryDescription\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/common/lib/components/country/country.component.ts\n            \n            variable\n            CANADA\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/common/lib/components/country/country.component.ts\n            \n            variable\n            COUNTRY_LIST\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                projects/common/lib/components/country/country.component.ts\n            \n            variable\n            UNITED_STATES\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/common/lib/components/date/date-field-format.directive.ts\n            \n            directive\n            DateFieldFormatDirective\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                projects/common/lib/components/date/date.component.ts\n            \n            component\n            DateComponent\n            \n                17 %\n                (10/58)\n            \n        \n        \n            \n                \n                projects/common/lib/components/date/date.component.ts\n            \n            variable\n            distantFuture\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/common/lib/components/date/date.component.ts\n            \n            variable\n            distantPast\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/common/lib/components/date/date.component.ts\n            \n            variable\n            MAX_YEAR_RANGE\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                projects/common/lib/components/datepicker/datepicker.component.ts\n            \n            component\n            DatepickerComponent\n            \n                32 %\n                (10/31)\n            \n        \n        \n            \n                \n                projects/common/lib/components/datepicker/datepicker.component.ts\n            \n            interface\n            DateErrorMsg\n            \n                12 %\n                (1/8)\n            \n        \n        \n            \n                \n                projects/common/lib/components/datepicker/datepicker.component.ts\n            \n            variable\n            moment\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/common/lib/components/dropdown/dropdown.component.ts\n            \n            component\n            DropdownComponent\n            \n                5 %\n                (1/18)\n            \n        \n        \n            \n                \n                projects/common/lib/components/duplicate-check/duplicate-check.directive.ts\n            \n            directive\n            DuplicateCheckDirective\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                projects/common/lib/components/duplicate-check/duplicate-check.directive.ts\n            \n            function\n            checkForDuplicates\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/common/lib/components/duplicate-check/duplicate-check.directive.ts\n            \n            function\n            commonDuplicateCheck\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/common/lib/components/email/email.component.ts\n            \n            component\n            EmailComponent\n            \n                9 %\n                (3/32)\n            \n        \n        \n            \n                \n                projects/common/lib/components/error-container/error-container.component.ts\n            \n            component\n            ErrorContainerComponent\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                projects/common/lib/components/file-uploader/file-uploader.component.ts\n            \n            component\n            FileUploaderComponent\n            \n                26 %\n                (10/38)\n            \n        \n        \n            \n                \n                projects/common/lib/components/file-uploader/file-uploader.component.ts\n            \n            interface\n            FileUploaderMsg\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                projects/common/lib/components/file-uploader/file-uploader.component.ts\n            \n            variable\n            loadImage\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/common/lib/components/file-uploader/file-uploader.component.ts\n            \n            variable\n            PDFJS\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/common/lib/components/file-uploader/file-uploader.component.ts\n            \n            variable\n            sha1\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/common/lib/components/form-action-bar/form-action-bar.component.ts\n            \n            component\n            FormActionBarComponent\n            \n                0 %\n                (0/10)\n            \n        \n        \n            \n                \n                projects/common/lib/components/form-submit-bar/form-submit-bar.component.ts\n            \n            component\n            FormSubmitBarComponent\n            \n                22 %\n                (2/9)\n            \n        \n        \n            \n                \n                projects/common/lib/components/full-name/full-name.component.ts\n            \n            component\n            FullNameComponent\n            \n                8 %\n                (2/23)\n            \n        \n        \n            \n                \n                projects/common/lib/components/full-name/full-name.component.ts\n            \n            interface\n            FullNameErrorMsg\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                projects/common/lib/components/geocoder-input/geocoder-input.component.ts\n            \n            component\n            GeocoderInputComponent\n            \n                27 %\n                (8/29)\n            \n        \n        \n            \n                \n                projects/common/lib/components/header/header.component.ts\n            \n            component\n            HeaderComponent\n            \n                9 %\n                (1/11)\n            \n        \n        \n            \n                \n                projects/common/lib/components/name/name.component.ts\n            \n            component\n            NameComponent\n            \n                9 %\n                (3/32)\n            \n        \n        \n            \n                \n                projects/common/lib/components/name/validate-name.directive.ts\n            \n            directive\n            ValidateNameDirective\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                projects/common/lib/components/name/validate-name.directive.ts\n            \n            variable\n            commonValidateName\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/common/lib/components/page-framework/page-framework.component.ts\n            \n            component\n            PageFrameworkComponent\n            \n                33 %\n                (1/3)\n            \n        \n        \n            \n                \n                projects/common/lib/components/page-section/page-section.component.ts\n            \n            component\n            PageSectionComponent\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                projects/common/lib/components/password/password.component.ts\n            \n            component\n            PasswordComponent\n            \n                13 %\n                (4/29)\n            \n        \n        \n            \n                \n                projects/common/lib/components/password/password.component.ts\n            \n            interface\n            PasswordErrorMsg\n            \n                25 %\n                (1/4)\n            \n        \n        \n            \n                \n                projects/common/lib/components/password/password.component.ts\n            \n            variable\n            zxcvbn\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/common/lib/components/phn/phn.component.ts\n            \n            component\n            PhnComponent\n            \n                5 %\n                (2/34)\n            \n        \n        \n            \n                \n                projects/common/lib/components/phone-number/phone-number.component.ts\n            \n            component\n            PhoneNumberComponent\n            \n                8 %\n                (3/34)\n            \n        \n        \n            \n                \n                projects/common/lib/components/postal-code/postal-code.component.ts\n            \n            component\n            PostalCodeComponent\n            \n                7 %\n                (2/27)\n            \n        \n        \n            \n                \n                projects/common/lib/components/postal-code/validate-bc-postal.directive.ts\n            \n            directive\n            ValidateBcPostalDirective\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                projects/common/lib/components/postal-code/validate-bc-postal.directive.ts\n            \n            variable\n            commonValidateBcPostal\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/common/lib/components/postal-code/validate-postalcode.directive.ts\n            \n            directive\n            ValidatePostalcodeDirective\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                projects/common/lib/components/postal-code/validate-postalcode.directive.ts\n            \n            function\n            commonValidatePostalcode\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/common/lib/components/postal-code/validate-postalcode.directive.ts\n            \n            function\n            validatePC\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/common/lib/components/province/province.component.ts\n            \n            component\n            ProvinceComponent\n            \n                5 %\n                (2/34)\n            \n        \n        \n            \n                \n                projects/common/lib/components/province/province.component.ts\n            \n            interface\n            ProvinceList\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                projects/common/lib/components/province/province.component.ts\n            \n            function\n            getProvinceDescription\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/common/lib/components/province/province.component.ts\n            \n            variable\n            BRITISH_COLUMBIA\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/common/lib/components/province/province.component.ts\n            \n            variable\n            PROVINCE_LIST\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/common/lib/components/radio/radio.component.ts\n            \n            component\n            RadioComponent\n            \n                6 %\n                (2/31)\n            \n        \n        \n            \n                \n                projects/common/lib/components/radio/radio.component.ts\n            \n            interface\n            IRadioItems\n            \n                33 %\n                (1/3)\n            \n        \n        \n            \n                \n                projects/common/lib/components/sample-modal/sample-modal.component.ts\n            \n            component\n            SampleModalComponent\n            \n                12 %\n                (1/8)\n            \n        \n        \n            \n                \n                projects/common/lib/components/sample-modal/sample-modal.component.ts\n            \n            interface\n            SampleImageInterface\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                projects/common/lib/components/sin/sin.component.ts\n            \n            component\n            SinComponent\n            \n                8 %\n                (3/34)\n            \n        \n        \n            \n                \n                projects/common/lib/components/street/street.component.ts\n            \n            component\n            StreetComponent\n            \n                12 %\n                (5/39)\n            \n        \n        \n            \n                \n                projects/common/lib/components/street/validate-street.directive.ts\n            \n            directive\n            ValidateStreetDirective\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                projects/common/lib/components/street/validate-street.directive.ts\n            \n            variable\n            commonValidateStreet\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/common/lib/components/thumbnail/thumbnail.component.ts\n            \n            component\n            ThumbnailComponent\n            \n                0 %\n                (0/12)\n            \n        \n        \n            \n                \n                projects/common/lib/components/toggle/toggle.component.ts\n            \n            component\n            ToggleComponent\n            \n                14 %\n                (1/7)\n            \n        \n        \n            \n                \n                projects/common/lib/components/validate-region/validate-region.directive.ts\n            \n            directive\n            ValidateRegionDirective\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                projects/common/lib/components/validate-region/validate-region.directive.ts\n            \n            variable\n            commonValidateRegion\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/common/lib/components/wizard-progress-bar/wizard-progress-bar.component.ts\n            \n            component\n            WizardProgressBarComponent\n            \n                16 %\n                (2/12)\n            \n        \n        \n            \n                \n                projects/common/lib/components/xicon-button/xicon-button.component.ts\n            \n            component\n            XiconButtonComponent\n            \n                14 %\n                (1/7)\n            \n        \n        \n            \n                \n                projects/common/lib/models/abstract-base-form.ts\n            \n            class\n            AbstractBaseForm\n            \n                85 %\n                (6/7)\n            \n        \n        \n            \n                \n                projects/common/lib/models/abstract-form-control.ts\n            \n            class\n            AbstractFormControl\n            \n                15 %\n                (2/13)\n            \n        \n        \n            \n                \n                projects/common/lib/models/abstract-form.ts\n            \n            class\n            AbstractForm\n            \n                90 %\n                (9/10)\n            \n        \n        \n            \n                \n                projects/common/lib/models/abstract-react-form.ts\n            \n            class\n            AbstractReactForm\n            \n                81 %\n                (9/11)\n            \n        \n        \n            \n                \n                projects/common/lib/models/address.model.ts\n            \n            class\n            Address\n            \n                35 %\n                (5/14)\n            \n        \n        \n            \n                \n                projects/common/lib/models/base.ts\n            \n            class\n            Base\n            \n                66 %\n                (2/3)\n            \n        \n        \n            \n                \n                projects/common/lib/models/container.ts\n            \n            class\n            Container\n            \n                58 %\n                (7/12)\n            \n        \n        \n            \n                \n                projects/common/lib/models/container.ts\n            \n            interface\n            WizardProgressItem\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                projects/common/lib/models/error-message.interface.ts\n            \n            interface\n            ErrorMessage\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                projects/common/lib/models/error-message.interface.ts\n            \n            function\n            replaceLabelTag\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/common/lib/models/error-message.interface.ts\n            \n            variable\n            LabelReplacementTag\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                projects/common/lib/models/error-message.interface.ts\n            \n            variable\n            regExpLabel\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/common/lib/models/images.model.ts\n            \n            class\n            CommonImage\n            \n                25 %\n                (4/16)\n            \n        \n        \n            \n                \n                projects/common/lib/models/images.model.ts\n            \n            class\n            CommonImageProcessingError\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                projects/common/lib/models/images.model.ts\n            \n            class\n            CommonImageScaleFactorsImpl\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                projects/common/lib/models/images.model.ts\n            \n            interface\n            CommonAttachmentJson\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                projects/common/lib/models/images.model.ts\n            \n            interface\n            CommonImageScaleFactors\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                projects/common/lib/models/mask.constants.ts\n            \n            variable\n            LETTER\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/common/lib/models/mask.constants.ts\n            \n            variable\n            NUMBER\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/common/lib/models/mask.constants.ts\n            \n            variable\n            SPACE\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/common/lib/models/person.model.ts\n            \n            class\n            Person\n            \n                40 %\n                (4/10)\n            \n        \n        \n            \n                \n                projects/common/lib/models/simple-date.interface.ts\n            \n            interface\n            SimpleDate\n            \n                25 %\n                (1/4)\n            \n        \n        \n            \n                \n                projects/common/lib/services/abstract-api-service.ts\n            \n            class\n            AbstractHttpService\n            \n                50 %\n                (5/10)\n            \n        \n        \n            \n                \n                projects/common/lib/services/abstract-page-guard.service.ts\n            \n            injectable\n            AbstractPageGuardService\n            \n                33 %\n                (1/3)\n            \n        \n        \n            \n                \n                projects/common/lib/services/abstract-pg-check.service.ts\n            \n            injectable\n            AbstractPgCheckService\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                projects/common/lib/services/check-complete-base.service.ts\n            \n            injectable\n            CheckCompleteBaseService\n            \n                50 %\n                (7/14)\n            \n        \n        \n            \n                \n                projects/common/lib/services/check-complete-base.service.ts\n            \n            interface\n            PageListInterface\n            \n                33 %\n                (1/3)\n            \n        \n        \n            \n                \n                projects/common/lib/services/container.service.ts\n            \n            injectable\n            ContainerService\n            \n                21 %\n                (3/14)\n            \n        \n        \n            \n                \n                projects/common/lib/services/container.service.ts\n            \n            variable\n            DefaultSubmitLabel\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/common/lib/services/default-page-guard.service.ts\n            \n            injectable\n            DefaultPageGuardService\n            \n                16 %\n                (1/6)\n            \n        \n        \n            \n                \n                projects/common/lib/services/default-page-guard.service.ts\n            \n            variable\n            BYPASS_GUARDS\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/common/lib/services/default-page-guard.service.ts\n            \n            variable\n            START_PAGE_URL\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/common/lib/services/geocoder.service.ts\n            \n            injectable\n            GeocoderService\n            \n                31 %\n                (5/16)\n            \n        \n        \n            \n                \n                projects/common/lib/services/geocoder.service.ts\n            \n            interface\n            GeoAddressResult\n            \n                16 %\n                (1/6)\n            \n        \n        \n            \n                \n                projects/common/lib/services/load-page-guard.service.ts\n            \n            guard\n            LoadPageGuardService\n            \n                40 %\n                (2/5)\n            \n        \n        \n            \n                \n                projects/common/lib/services/logger.service.ts\n            \n            injectable\n            CommonLogger\n            \n                39 %\n                (9/23)\n            \n        \n        \n            \n                \n                projects/common/lib/services/logger.service.ts\n            \n            interface\n            CommonLogMessage\n            \n                50 %\n                (1/2)\n            \n        \n        \n            \n                \n                projects/common/lib/services/logger.service.ts\n            \n            variable\n            moment\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/common/lib/services/page-state.service.ts\n            \n            injectable\n            PageStateService\n            \n                0 %\n                (0/13)\n            \n        \n        \n            \n                \n                projects/common/lib/services/page-state.service.ts\n            \n            interface\n            PageList\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                projects/common/lib/services/route-guard.service.ts\n            \n            guard\n            RouteGuardService\n            \n                20 %\n                (1/5)\n            \n        \n        \n            \n                \n                projects/common/lib/shared-core.module.ts\n            \n            variable\n            componentList\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/common/schematics/src/copy-license/index.ts\n            \n            function\n            copyLicense\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                projects/common/schematics/src/copy-license/index.ts\n            \n            variable\n            LICENSE\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/common/schematics/src/copy-license/index.ts\n            \n            variable\n            year\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/common/schematics/src/helpers/json.ts\n            \n            function\n            modifyJSON\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/common/schematics/src/helpers/json.ts\n            \n            function\n            sortObjectByKeys\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                projects/common/schematics/src/moh-start/files/MyriadWebPro_ttf_base64.ts\n            \n            variable\n            MyriadWebProTTF_base64\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/common/schematics/src/moh-start/files/app_component_html.ts\n            \n            variable\n            appComponentCSS\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/common/schematics/src/moh-start/files/app_component_html.ts\n            \n            variable\n            appComponentHtml\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/common/schematics/src/moh-start/files/favicon_ico.ts\n            \n            variable\n            favicon_base64\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/common/schematics/src/moh-start/files/gov3_bc_logo_png_base64.ts\n            \n            variable\n            BCLogoBase64\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/common/schematics/src/moh-start/files/overrides_scss.ts\n            \n            variable\n            overridesScss\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/common/schematics/src/moh-start/files/styles.ts\n            \n            variable\n            stylesSCSS\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/common/schematics/src/moh-start/files/variables_scss.ts\n            \n            variable\n            variableScss\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/common/schematics/src/moh-start/index.ts\n            \n            function\n            createIfMissing\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/common/schematics/src/moh-start/index.ts\n            \n            function\n            installPackageJsonDependencies\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/common/schematics/src/moh-start/index.ts\n            \n            function\n            mohStart\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/common/schematics/src/moh-start/index.ts\n            \n            function\n            overwriteFile\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                projects/common/schematics/src/moh-start/index.ts\n            \n            function\n            updateAngularJson\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/common/schematics/src/moh-start/index.ts\n            \n            function\n            updateTsConfig\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                projects/common/schematics/src/moh-start/package-config.ts\n            \n            function\n            addPackageToPackageJson\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                projects/common/schematics/src/moh-start/package-config.ts\n            \n            function\n            getPackageVersionFromPackageJson\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                projects/common/schematics/src/moh-start/package-config.ts\n            \n            function\n            sortObjectByKeys\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                projects/common/schematics/src/version-js/files/version.GENERATED.ts\n            \n            variable\n            buildTime\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/common/schematics/src/version-js/files/version.GENERATED.ts\n            \n            variable\n            gitCommit\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/common/schematics/src/version-js/files/version.GENERATED.ts\n            \n            variable\n            message\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                projects/common/schematics/src/version-js/files/version.GENERATED.ts\n            \n            variable\n            projectVersion\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                projects/common/schematics/src/version-js/files/version.GENERATED.ts\n            \n            variable\n            success\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                projects/common/schematics/src/version-js/index.ts\n            \n            function\n            addPackageJsonScript\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/common/schematics/src/version-js/index.ts\n            \n            function\n            copyVersionFile\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/common/schematics/src/version-js/index.ts\n            \n            function\n            updateAppComponentTs\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                projects/common/schematics/src/version-js/index.ts\n            \n            function\n            updatePackageJson\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/common/schematics/src/version-js/index.ts\n            \n            function\n            versionJS\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                projects/common/test.ts\n            \n            variable\n            context\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/common/test.ts\n            \n            variable\n            require\n            \n                0 %\n                (0/1)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @angular/animations : ^7.2.7\n        \n            @angular/common : ^7.2.7\n        \n            @angular/compiler : ^7.2.7\n        \n            @angular/core : ^7.2.7\n        \n            @angular/forms : ^7.2.7\n        \n            @angular/http : ^7.2.7\n        \n            @angular/platform-browser : ^7.2.7\n        \n            @angular/platform-browser-dynamic : ^7.2.7\n        \n            @angular/router : ^7.2.7\n        \n            @ng-select/ng-select : ^2.16.2\n        \n            @types/pdfjs-dist : ^0.1.2\n        \n            angular2-text-mask : ^9.0.0\n        \n            blueimp-load-image : ^2.20.1\n        \n            bootstrap : ^4.3.1\n        \n            core-js : ^2.5.4\n        \n            date-fns : ^2.5.1\n        \n            moment : ^2.24.0\n        \n            ngx-bootstrap : ^3.2.0\n        \n            pdfjs-dist : ^2.0.550\n        \n            rxjs : 6.4.0\n        \n            sha1 : ^1.1.1\n        \n            zone.js : ^0.8.26\n    \n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/enumerations.html":{"url":"miscellaneous/enumerations.html","title":"miscellaneous-enumerations - enumerations","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n  Miscellaneous\n  Enumerations\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            ApiStatusCodes   (projects/.../confirm-template.component.ts)\n                        \n                        \n                            CAPTCHA_STATE   (projects/.../captcha.component.ts)\n                        \n                        \n                            CommonImageError   (projects/.../images.model.ts)\n                        \n                        \n                            CommonLogEvents   (projects/.../logger.service.ts)\n                        \n                        \n                            DatepickerSizes   (projects/.../datepicker.component.ts)\n                        \n                        \n                            SeverityLevels   (projects/.../logger.service.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    projects/common/lib/components/confirm-template/confirm-template.component.ts\n    \n        \n            \n                \n                    \n                        \n                        ApiStatusCodes\n                    \n                \n                        \n                            \n                                 SUCCESS\n                            \n                        \n                        \n                            \n                                Value : 0\n                            \n                        \n                        \n                            \n                                 ERROR\n                            \n                        \n                        \n                            \n                                Value : 1\n                            \n                        \n                        \n                            \n                                 WARNING\n                            \n                        \n                        \n                            \n                                Value : 2\n                            \n                        \n            \n        \n\n    projects/common/captcha/src/captcha.component.ts\n    \n        \n            \n                \n                    \n                        \n                        CAPTCHA_STATE\n                    \n                \n                    \n                        \n                            7 mutually exclusive states, the program can only be in one of these state\nat any given point..\n\n                        \n                    \n                        \n                            \n                                 FETCHING_CAPTCHA_IMG\n                            \n                        \n                        \n                            \n                                Value : 1\n                            \n                        \n                        \n                            \n                                 SUCCESS_FETCH_IMG\n                            \n                        \n                        \n                            \n                                Value : 2\n                            \n                        \n                        \n                            \n                                 ERROR_FETCH_IMG\n                            \n                        \n                        \n                            \n                                Value : 3\n                            \n                        \n                        \n                            \n                                 VERIFYING_ANSWER\n                            \n                        \n                        \n                            \n                                Value : 4\n                            \n                        \n                        \n                            \n                                 SUCCESS_VERIFY_ANSWER_CORRECT\n                            \n                        \n                        \n                            \n                                Value : 5\n                            \n                        \n                        \n                            \n                                 ERROR_VERIFY\n                            \n                        \n                        \n                            \n                                Value : 6\n                            \n                        \n            \n        \n\n    projects/common/lib/models/images.model.ts\n    \n        \n            \n                \n                    \n                        \n                        CommonImageError\n                    \n                \n                        \n                            \n                                 WrongType\n                            \n                        \n                        \n                            \n                                 TooSmall\n                            \n                        \n                        \n                            \n                                 TooBig\n                            \n                        \n                        \n                            \n                                 AlreadyExists\n                            \n                        \n                        \n                            \n                                 Unknown\n                            \n                        \n                        \n                            \n                                 CannotOpen\n                            \n                        \n                        \n                            \n                                 PDFnotSupported\n                            \n                        \n                        \n                            \n                                 CannotOpenPDF\n                            \n                        \n            \n        \n\n    projects/common/lib/services/logger.service.ts\n    \n        \n            \n                \n                    \n                        \n                        CommonLogEvents\n                    \n                \n                        \n                            \n                                 navigation\n                            \n                        \n                        \n                            \n                                Value : navigation\n                            \n                        \n                        \n                            \n                                 error\n                            \n                        \n                        \n                            \n                                Value : error\n                            \n                        \n                        \n                            \n                                 submission\n                            \n                        \n                        \n                            \n                                Value : submission\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        SeverityLevels\n                    \n                \n                        \n                            \n                                 INFO\n                            \n                        \n                        \n                            \n                                Value : info\n                            \n                        \n                        \n                            \n                                 ERROR\n                            \n                        \n                        \n                            \n                                Value : error\n                            \n                        \n            \n        \n\n    projects/common/lib/components/datepicker/datepicker.component.ts\n    \n        \n            \n                \n                    \n                        \n                        DatepickerSizes\n                    \n                \n                        \n                            \n                                 MINI\n                            \n                        \n                        \n                            \n                                Value : mini\n                            \n                        \n                        \n                            \n                                 DEFAULT\n                            \n                        \n                        \n                            \n                                Value : default\n                            \n                        \n            \n        \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\nMoH Common Styles\nDocumentation\nDocumentation - https://bcgov.github.io/moh-common-styles/\nRequirements\n\nnode (using 8.9.4, but older versions may be compatible)\nnpm (6.4.1, but older versions may be compatible)\n\nInstallation\nnpm install --save moh-common-libSetup (Shared Components)\nTo setup the shared components:\nimport { SharedCoreModule } from 'moh-common-lib';\n\n\n@NgModule({\n    declarations: [ ... ],\n    providers: [ ... ],\n    imports: [\n        ...\n        SharedCoreModule\n    ]\n})You can read more at the Getting Started Guide\nFeedback, Mistakes, and Pull Requests\nThis library and the documentation are still very young and there are bound to be growing pains.\nIf you find any mistakes with either this documentation or the underlying library please submit an Issue on GitHub. Or if you're able you can ask me in person.  Thanks\n- Adam Coard\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"license.html":{"url":"license.html","title":"getting-started - license","body":"\n                   \n\nCopyright © 2017, Province of British Columbia, Canada.\nLicensed under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License.\nYou may obtain a copy of the License at\nhttp://www.apache.org/licenses/LICENSE-2.0Unless required by applicable law or agreed to in writing, software\ndistributed under the License is distributed on an \"AS IS\" BASIS,\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\nSee the License for the specific language governing permissions and\nlimitations under the License.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        CaptchaModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        SharedCoreModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_CaptchaModule\n\n\n\ncluster_CaptchaModule_declarations\n\n\n\ncluster_CaptchaModule_exports\n\n\n\ncluster_CaptchaModule_providers\n\n\n\ncluster_SharedCoreModule\n\n\n\ncluster_SharedCoreModule_declarations\n\n\n\ncluster_SharedCoreModule_exports\n\n\n\n\nCaptchaComponent\n\nCaptchaComponent\n\n\n\nCaptchaModule\n\nCaptchaModule\n\nCaptchaModule -->\n\nCaptchaComponent->CaptchaModule\n\n\n\n\n\nCaptchaComponent \n\nCaptchaComponent \n\nCaptchaComponent  -->\n\nCaptchaModule->CaptchaComponent \n\n\n\n\n\nCaptchaDataService\n\nCaptchaDataService\n\nCaptchaModule -->\n\nCaptchaDataService->CaptchaModule\n\n\n\n\n\nAccordionCommonComponent\n\nAccordionCommonComponent\n\n\n\nSharedCoreModule\n\nSharedCoreModule\n\nSharedCoreModule -->\n\nAccordionCommonComponent->SharedCoreModule\n\n\n\n\n\nAddressComponent\n\nAddressComponent\n\nSharedCoreModule -->\n\nAddressComponent->SharedCoreModule\n\n\n\n\n\nButtonComponent\n\nButtonComponent\n\nSharedCoreModule -->\n\nButtonComponent->SharedCoreModule\n\n\n\n\n\nButtonGroupComponent\n\nButtonGroupComponent\n\nSharedCoreModule -->\n\nButtonGroupComponent->SharedCoreModule\n\n\n\n\n\nCheckboxComponent\n\nCheckboxComponent\n\nSharedCoreModule -->\n\nCheckboxComponent->SharedCoreModule\n\n\n\n\n\nCityComponent\n\nCityComponent\n\nSharedCoreModule -->\n\nCityComponent->SharedCoreModule\n\n\n\n\n\nConfirmTemplateComponent\n\nConfirmTemplateComponent\n\nSharedCoreModule -->\n\nConfirmTemplateComponent->SharedCoreModule\n\n\n\n\n\nConsentModalComponent\n\nConsentModalComponent\n\nSharedCoreModule -->\n\nConsentModalComponent->SharedCoreModule\n\n\n\n\n\nCoreBreadcrumbComponent\n\nCoreBreadcrumbComponent\n\nSharedCoreModule -->\n\nCoreBreadcrumbComponent->SharedCoreModule\n\n\n\n\n\nCountryComponent\n\nCountryComponent\n\nSharedCoreModule -->\n\nCountryComponent->SharedCoreModule\n\n\n\n\n\nDateComponent\n\nDateComponent\n\nSharedCoreModule -->\n\nDateComponent->SharedCoreModule\n\n\n\n\n\nDateFieldFormatDirective\n\nDateFieldFormatDirective\n\nSharedCoreModule -->\n\nDateFieldFormatDirective->SharedCoreModule\n\n\n\n\n\nDatepickerComponent\n\nDatepickerComponent\n\nSharedCoreModule -->\n\nDatepickerComponent->SharedCoreModule\n\n\n\n\n\nDropdownComponent\n\nDropdownComponent\n\nSharedCoreModule -->\n\nDropdownComponent->SharedCoreModule\n\n\n\n\n\nDuplicateCheckDirective\n\nDuplicateCheckDirective\n\nSharedCoreModule -->\n\nDuplicateCheckDirective->SharedCoreModule\n\n\n\n\n\nEmailComponent\n\nEmailComponent\n\nSharedCoreModule -->\n\nEmailComponent->SharedCoreModule\n\n\n\n\n\nErrorContainerComponent\n\nErrorContainerComponent\n\nSharedCoreModule -->\n\nErrorContainerComponent->SharedCoreModule\n\n\n\n\n\nFileUploaderComponent\n\nFileUploaderComponent\n\nSharedCoreModule -->\n\nFileUploaderComponent->SharedCoreModule\n\n\n\n\n\nFormActionBarComponent\n\nFormActionBarComponent\n\nSharedCoreModule -->\n\nFormActionBarComponent->SharedCoreModule\n\n\n\n\n\nFormSubmitBarComponent\n\nFormSubmitBarComponent\n\nSharedCoreModule -->\n\nFormSubmitBarComponent->SharedCoreModule\n\n\n\n\n\nFullNameComponent\n\nFullNameComponent\n\nSharedCoreModule -->\n\nFullNameComponent->SharedCoreModule\n\n\n\n\n\nGeocoderInputComponent\n\nGeocoderInputComponent\n\nSharedCoreModule -->\n\nGeocoderInputComponent->SharedCoreModule\n\n\n\n\n\nHeaderComponent\n\nHeaderComponent\n\nSharedCoreModule -->\n\nHeaderComponent->SharedCoreModule\n\n\n\n\n\nNameComponent\n\nNameComponent\n\nSharedCoreModule -->\n\nNameComponent->SharedCoreModule\n\n\n\n\n\nPageFrameworkComponent\n\nPageFrameworkComponent\n\nSharedCoreModule -->\n\nPageFrameworkComponent->SharedCoreModule\n\n\n\n\n\nPageSectionComponent\n\nPageSectionComponent\n\nSharedCoreModule -->\n\nPageSectionComponent->SharedCoreModule\n\n\n\n\n\nPasswordComponent\n\nPasswordComponent\n\nSharedCoreModule -->\n\nPasswordComponent->SharedCoreModule\n\n\n\n\n\nPhnComponent\n\nPhnComponent\n\nSharedCoreModule -->\n\nPhnComponent->SharedCoreModule\n\n\n\n\n\nPhoneNumberComponent\n\nPhoneNumberComponent\n\nSharedCoreModule -->\n\nPhoneNumberComponent->SharedCoreModule\n\n\n\n\n\nPostalCodeComponent\n\nPostalCodeComponent\n\nSharedCoreModule -->\n\nPostalCodeComponent->SharedCoreModule\n\n\n\n\n\nProvinceComponent\n\nProvinceComponent\n\nSharedCoreModule -->\n\nProvinceComponent->SharedCoreModule\n\n\n\n\n\nRadioComponent\n\nRadioComponent\n\nSharedCoreModule -->\n\nRadioComponent->SharedCoreModule\n\n\n\n\n\nSampleModalComponent\n\nSampleModalComponent\n\nSharedCoreModule -->\n\nSampleModalComponent->SharedCoreModule\n\n\n\n\n\nSinComponent\n\nSinComponent\n\nSharedCoreModule -->\n\nSinComponent->SharedCoreModule\n\n\n\n\n\nStreetComponent\n\nStreetComponent\n\nSharedCoreModule -->\n\nStreetComponent->SharedCoreModule\n\n\n\n\n\nThumbnailComponent\n\nThumbnailComponent\n\nSharedCoreModule -->\n\nThumbnailComponent->SharedCoreModule\n\n\n\n\n\nToggleComponent\n\nToggleComponent\n\nSharedCoreModule -->\n\nToggleComponent->SharedCoreModule\n\n\n\n\n\nValidateBcPostalDirective\n\nValidateBcPostalDirective\n\nSharedCoreModule -->\n\nValidateBcPostalDirective->SharedCoreModule\n\n\n\n\n\nValidateCityDirective\n\nValidateCityDirective\n\nSharedCoreModule -->\n\nValidateCityDirective->SharedCoreModule\n\n\n\n\n\nValidateNameDirective\n\nValidateNameDirective\n\nSharedCoreModule -->\n\nValidateNameDirective->SharedCoreModule\n\n\n\n\n\nValidatePostalcodeDirective\n\nValidatePostalcodeDirective\n\nSharedCoreModule -->\n\nValidatePostalcodeDirective->SharedCoreModule\n\n\n\n\n\nValidateRegionDirective\n\nValidateRegionDirective\n\nSharedCoreModule -->\n\nValidateRegionDirective->SharedCoreModule\n\n\n\n\n\nValidateStreetDirective\n\nValidateStreetDirective\n\nSharedCoreModule -->\n\nValidateStreetDirective->SharedCoreModule\n\n\n\n\n\nWizardProgressBarComponent\n\nWizardProgressBarComponent\n\nSharedCoreModule -->\n\nWizardProgressBarComponent->SharedCoreModule\n\n\n\n\n\nXiconButtonComponent\n\nXiconButtonComponent\n\nSharedCoreModule -->\n\nXiconButtonComponent->SharedCoreModule\n\n\n\n\n\nAccordionCommonComponent \n\nAccordionCommonComponent \n\nAccordionCommonComponent  -->\n\nSharedCoreModule->AccordionCommonComponent \n\n\n\n\n\nAddressComponent \n\nAddressComponent \n\nAddressComponent  -->\n\nSharedCoreModule->AddressComponent \n\n\n\n\n\nButtonComponent \n\nButtonComponent \n\nButtonComponent  -->\n\nSharedCoreModule->ButtonComponent \n\n\n\n\n\nButtonGroupComponent \n\nButtonGroupComponent \n\nButtonGroupComponent  -->\n\nSharedCoreModule->ButtonGroupComponent \n\n\n\n\n\nCheckboxComponent \n\nCheckboxComponent \n\nCheckboxComponent  -->\n\nSharedCoreModule->CheckboxComponent \n\n\n\n\n\nCityComponent \n\nCityComponent \n\nCityComponent  -->\n\nSharedCoreModule->CityComponent \n\n\n\n\n\nConfirmTemplateComponent \n\nConfirmTemplateComponent \n\nConfirmTemplateComponent  -->\n\nSharedCoreModule->ConfirmTemplateComponent \n\n\n\n\n\nConsentModalComponent \n\nConsentModalComponent \n\nConsentModalComponent  -->\n\nSharedCoreModule->ConsentModalComponent \n\n\n\n\n\nCoreBreadcrumbComponent \n\nCoreBreadcrumbComponent \n\nCoreBreadcrumbComponent  -->\n\nSharedCoreModule->CoreBreadcrumbComponent \n\n\n\n\n\nCountryComponent \n\nCountryComponent \n\nCountryComponent  -->\n\nSharedCoreModule->CountryComponent \n\n\n\n\n\nDateComponent \n\nDateComponent \n\nDateComponent  -->\n\nSharedCoreModule->DateComponent \n\n\n\n\n\nDateFieldFormatDirective \n\nDateFieldFormatDirective \n\nDateFieldFormatDirective  -->\n\nSharedCoreModule->DateFieldFormatDirective \n\n\n\n\n\nDatepickerComponent \n\nDatepickerComponent \n\nDatepickerComponent  -->\n\nSharedCoreModule->DatepickerComponent \n\n\n\n\n\nDropdownComponent \n\nDropdownComponent \n\nDropdownComponent  -->\n\nSharedCoreModule->DropdownComponent \n\n\n\n\n\nDuplicateCheckDirective \n\nDuplicateCheckDirective \n\nDuplicateCheckDirective  -->\n\nSharedCoreModule->DuplicateCheckDirective \n\n\n\n\n\nEmailComponent \n\nEmailComponent \n\nEmailComponent  -->\n\nSharedCoreModule->EmailComponent \n\n\n\n\n\nErrorContainerComponent \n\nErrorContainerComponent \n\nErrorContainerComponent  -->\n\nSharedCoreModule->ErrorContainerComponent \n\n\n\n\n\nFileUploaderComponent \n\nFileUploaderComponent \n\nFileUploaderComponent  -->\n\nSharedCoreModule->FileUploaderComponent \n\n\n\n\n\nFormActionBarComponent \n\nFormActionBarComponent \n\nFormActionBarComponent  -->\n\nSharedCoreModule->FormActionBarComponent \n\n\n\n\n\nFormSubmitBarComponent \n\nFormSubmitBarComponent \n\nFormSubmitBarComponent  -->\n\nSharedCoreModule->FormSubmitBarComponent \n\n\n\n\n\nFullNameComponent \n\nFullNameComponent \n\nFullNameComponent  -->\n\nSharedCoreModule->FullNameComponent \n\n\n\n\n\nGeocoderInputComponent \n\nGeocoderInputComponent \n\nGeocoderInputComponent  -->\n\nSharedCoreModule->GeocoderInputComponent \n\n\n\n\n\nHeaderComponent \n\nHeaderComponent \n\nHeaderComponent  -->\n\nSharedCoreModule->HeaderComponent \n\n\n\n\n\nNameComponent \n\nNameComponent \n\nNameComponent  -->\n\nSharedCoreModule->NameComponent \n\n\n\n\n\nPageFrameworkComponent \n\nPageFrameworkComponent \n\nPageFrameworkComponent  -->\n\nSharedCoreModule->PageFrameworkComponent \n\n\n\n\n\nPageSectionComponent \n\nPageSectionComponent \n\nPageSectionComponent  -->\n\nSharedCoreModule->PageSectionComponent \n\n\n\n\n\nPasswordComponent \n\nPasswordComponent \n\nPasswordComponent  -->\n\nSharedCoreModule->PasswordComponent \n\n\n\n\n\nPhnComponent \n\nPhnComponent \n\nPhnComponent  -->\n\nSharedCoreModule->PhnComponent \n\n\n\n\n\nPhoneNumberComponent \n\nPhoneNumberComponent \n\nPhoneNumberComponent  -->\n\nSharedCoreModule->PhoneNumberComponent \n\n\n\n\n\nPostalCodeComponent \n\nPostalCodeComponent \n\nPostalCodeComponent  -->\n\nSharedCoreModule->PostalCodeComponent \n\n\n\n\n\nProvinceComponent \n\nProvinceComponent \n\nProvinceComponent  -->\n\nSharedCoreModule->ProvinceComponent \n\n\n\n\n\nRadioComponent \n\nRadioComponent \n\nRadioComponent  -->\n\nSharedCoreModule->RadioComponent \n\n\n\n\n\nSampleModalComponent \n\nSampleModalComponent \n\nSampleModalComponent  -->\n\nSharedCoreModule->SampleModalComponent \n\n\n\n\n\nSinComponent \n\nSinComponent \n\nSinComponent  -->\n\nSharedCoreModule->SinComponent \n\n\n\n\n\nStreetComponent \n\nStreetComponent \n\nStreetComponent  -->\n\nSharedCoreModule->StreetComponent \n\n\n\n\n\nThumbnailComponent \n\nThumbnailComponent \n\nThumbnailComponent  -->\n\nSharedCoreModule->ThumbnailComponent \n\n\n\n\n\nToggleComponent \n\nToggleComponent \n\nToggleComponent  -->\n\nSharedCoreModule->ToggleComponent \n\n\n\n\n\nValidateBcPostalDirective \n\nValidateBcPostalDirective \n\nValidateBcPostalDirective  -->\n\nSharedCoreModule->ValidateBcPostalDirective \n\n\n\n\n\nValidateCityDirective \n\nValidateCityDirective \n\nValidateCityDirective  -->\n\nSharedCoreModule->ValidateCityDirective \n\n\n\n\n\nValidateNameDirective \n\nValidateNameDirective \n\nValidateNameDirective  -->\n\nSharedCoreModule->ValidateNameDirective \n\n\n\n\n\nValidatePostalcodeDirective \n\nValidatePostalcodeDirective \n\nValidatePostalcodeDirective  -->\n\nSharedCoreModule->ValidatePostalcodeDirective \n\n\n\n\n\nValidateRegionDirective \n\nValidateRegionDirective \n\nValidateRegionDirective  -->\n\nSharedCoreModule->ValidateRegionDirective \n\n\n\n\n\nValidateStreetDirective \n\nValidateStreetDirective \n\nValidateStreetDirective  -->\n\nSharedCoreModule->ValidateStreetDirective \n\n\n\n\n\nWizardProgressBarComponent \n\nWizardProgressBarComponent \n\nWizardProgressBarComponent  -->\n\nSharedCoreModule->WizardProgressBarComponent \n\n\n\n\n\nXiconButtonComponent \n\nXiconButtonComponent \n\nXiconButtonComponent  -->\n\nSharedCoreModule->XiconButtonComponent \n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        2 Modules\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    38 Components\n                \n            \n        \n        \n            \n                \n                    \n                    8 Directives\n                \n            \n        \n        \n            \n                \n                    \n                    10 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    14 Classes\n                \n            \n        \n        \n            \n                \n                    \n                    2 Guards\n                \n            \n        \n        \n            \n                \n                    \n                    21 Interfaces\n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"todo.html":{"url":"todo.html","title":"getting-started - todo","body":"\n                   \n\nMoh-Common-Lib:\n\n Security warnings (GitHub)\n\nBreaking Changes for version 3.0.0:\n\n FormActionBar / FormSubmiBar - make the on load default colour yellow\nThis can fix a \"flash\" of the first colour on macbooks and faster computers (nonVDI)\n\n\n Delete all instances of showError. We never use it as an @Input.\n address.model.ts\n public hasValue: boolean; // TODO: Why do we need this? - Remove - breaking change\n public isValid: boolean; // TODO: Why do we need this? - Remove - breaking change\n\n\n radio.component.ts\n @Input() showError: boolean; // TODO: Remove - breaking change\n // TODO: remove status change - breaking change\n\n\n checkbox.component.ts\n Remove to make custom form control -- possible breaking change\n @Input() required: boolean = false;  // TODO: Remove - breaking change\n Remove the showError\n\n\n xicon-button.component.ts\n Remove clickEvent output. Should be able to just use \"click\", which follows conventional Angular naming.\n\n\n street.component.ts\n Replace \"maxlen\" with \"maxlength\" across this and other components. Maxlength is more semantic / consistent.  Search for this in other places too.\n\n\n date.component.ts - Should become a FormControl (NgControl)\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"additional-documentation/getting-started.html":{"url":"additional-documentation/getting-started.html","title":"additional-page - Getting Started","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\nGetting Started\nAssumption: you've already installed moh-common-lib.\nImporting the Library (moh-common-lib)\nImport components via the SharedCoreModule.\nimport { SharedCoreModule } from 'moh-common-lib';\n\n\n@NgModule({\n    declarations: [ ... ],\n    providers: [ ... ],\n    imports: [\n        ...\n        SharedCoreModule\n    ]\n})By adding this module you will automatically get access to core components, each starting with  \"common-*\". View all components\nThis does not import Services, Models, and some specific components like FileUploader and Captcha. Those will be detailed below.\nImporting Dos and Don'ts\nAll imports from moh-common-lib should go to one of the secondary entry points listed above (e.g. /models or /captcha). You should never import from a deeper level. When auto-importing make sure to double-check the import paths because VS Code often likes to setup incorrect imports.\n// GOOD\nimport { GeocoderService } from 'moh-common-lib/services';\n\n// BAD\nimport { GeoAddressResult } from 'moh-common-lib/services/geocoder.service';If you need access to an export and can only get it this way, let us know and we can export it properly.\nImporting a Service (moh-common-lib/services)\nIf a service is usable as-is, you can find them in the Injectables section of the documentation in the menu.\nimport { GeocoderService } from 'moh-common-lib/services';Setting up an API Service (moh-common-lib/services)\nIn some cases, we provide abstract classes that provide the foundation of services you will create.   \nFor example, the AbstractHTTPService:\nimport { AbstractHttpService } from 'moh-common-lib/services';\n\n@Injectable()\nexport class APIService extends AbstractHTTPService {}\n// You will have to setup _headers, and handleError(), \n// and create your own methods for each API Request using this.get() and this.post()These Abstract classes are not injectables and as such are found under Classes.  The Classes folder section also includes other non-service classes, like models.\nImporting a Model (moh-common-lib/models)\nModels are all found under Classes.\nimport { Address } from 'moh-common-lib/models';\nconst addr = new Address();The address, and others like it, is a pure TypeScript model with no specific Angular integration. However, other components may expect an Address as an @Input.\nFile Uploader classes, interfaces, etc. (moh-common-lib/images)\nAll classes, interfaces, and enums related to the FileUploader are all in moh-common-lib/images\nimport { CommonImage, CommonImageError, CommonImageScaleFactorsImpl } from 'moh-common-lib/images';This does NOT include the actual FileUploader, which is currently in the SharedCoreModule.\nCAPTCHA\nNote: This is still in development and may not be working\nimport { CaptchaModule } from 'moh-common-lib/captcha';\n\n@NgModule({\n    declarations: [ ... ],\n    providers: [ ... ],\n    imports: [\n        ...\n        CaptchaModule\n    ]\n})Then register your application module and use \n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"additional-documentation/local-development.html":{"url":"additional-documentation/local-development.html","title":"additional-page - Local Development","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\nLocal Development\n\ncomponents\nschematics\nschematics\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"additional-documentation/local-development/schematics.html":{"url":"additional-documentation/local-development/schematics.html","title":"additional-page - Schematics","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\nSchematics\nThis file will help you get setup with building and running schematics. This is not necessary for publishing NPM builds of components, but is relevant if you wish to use these schematics for code-generation.\nWriting code & compiling changes\nMake sure to write all changes to .ts files, e.g. index.ts.   The schematics folder, and all schemtaics, must be in projects/common/schematics\n    npm run build # compiles one time - must be run in schematics folder\n    npm run build -- -w # watches for changes and re-compiles - in schematics folder\n    npm run build:schematics # helper command - can be run anywhere in project, even top levelThen use the above to compile to .d.ts, .js, and .map.js files. It's important to compile the files before running any schematics either locally or before publishing to npm, etc. \nUnsure: Potentially you may need to run npm install prior to your first build.\nLinking Schematics\nLinking schematics only has to be done once. You'll only have to do it again if you move this folder.\nWe have to link from the projects/common/schematics folder. You can tell it's the correct folder because it has package.json in it.\n    cd moh-common-styles/projects/common/schematics\n    npm link # creates moh-common-schematics link, name from package.jsonCreating a new project and running schematics\n    ng new example --style=scss --routing=true // both params required\n    npm link moh-common-schematics # creates a symlink to the schematics folder above\n    ng g moh-common-schematics:moh-start # runs the schematicCreating a new schematic\nFirst, you must make sure the schematics-cli is installed on your machine.\n    npm install -g @angular-devkit/schematics-cliTo create a new schematic, make sure to run the command from the right folder.  It should be in the same folder as the moh-common-schematics package.json. projects/common/schematics\n    cd projects/common/schematics\n    schematics blank  --name=schematic-name-exampleTODO\n\n *High Priority Fix compilation errors when lodaing moh-common-lib (WizardProgressBar) in moh-start by adding to tsconfig:* [2019-03-06]\n  \"typeRoots\": [ \"../node_modules/@types\" ],\n  \"skipLibCheck\": true\n Making changes to schematic + re-compiling (npm run build + watch command)\n\n Include integration with upcoming moh-common-styles library\n\n resolve issue with component viewProviders, ControlContainer + ngForms for \"nested\" components\n\n uncomment pollyfills.ts\n\n Package.json scripts from fpc (e.g. version, preversion)\n\n Document need for openshift/ folder to still be manually setup\n\n Configurable project name, e.g. change page title.\n\n Split moh-start schematic into multiple schematics, de-compose them. Will make path to future 'update' calls simpler (update-scss, update-assets, update-dependencies). Moh-start should just call each of them.\n\n Convert moh-start to use templates instead of base64 encoding (like version-js does)\n\n Add momentjs as dependency to package.json\n\n Add NgForm and other modules to appropriate angular modules\n\n angular.json - add preserveSymlinks to new projects\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"additional-documentation/local-development/components.html":{"url":"additional-documentation/local-development/components.html","title":"additional-page - Components","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\nComponents\nThis file will help you get setup with local development for components, modules, and other importable objects. This includes local builds, but it is also a required step in order to create builds for NPM.\nThis does not include schematics which are not imported by projects but rather ran on them or used to generate code. \nNew Project Setup + Schematics\nThis project has 2 main parts to it, and this readme is broken in 2 to reflect that.\n\nThe Library - moh-common-lib - relates to this project as a component library for an Angular application, to appear in the node_modules/ folder of an Angular application\nThe Schematics - moh-common-schematics - relates to this project as a collection of Angular schematics and scripts to setup a whole project or files within a project. These schematics live in this project, but operate on an Angular application.\n\nThere are two different npm links for each of these facets.  Each one corresponds to a different package.json:\n\nmoh-common-lib (library) > projects/common/package.json\nmoh-common-schematics (schematics) > projects/common/schematics/package.json\n\nFor more information on schematics, look at the Schematics documentation.\nThe Library\nBuilding the Library\nFirst make sure to run npm install prior to building, to install necessary dependencies.  You must build the library prior to using and linking in local development.\n> ng build moh-commmon-libIf it runs well, the end of the output should show the following:\nBuilt moh-common-lib\nBuilt Angular Package!\n- from: /space/workspace/moh-common-styles/projects/common\n- to:   /space/workspace/moh-common-styles/dist/commonWe can see build artifacts are created in the \"to\" folder. For local development, we will npm link directly to that folder; when publishing to npm we will publish tohse artifacts.\nSetting up npm link for library\nOh the command line navigate to the \"to\" folder from above, the dist folder for the common project: moh-common-styles/dist/common. Then run the following command:\n> npm linkNote - the dist/common folder MUST have a package.json in it. The name in the package.json will be used as a reference when linking to this folder from other folders (e.g. when configuring PRIME to use this common library). In our case the name is moh-common-lib. Assuming all goes well you should see output at the end like this (paths may differ):\n.../example/path.../node/v8.9.4/lib/node_modules/moh-common-lib -> /space/workspace/moh-common-styles/projects/commonIf the folder does not exist, or is empty, make sure to build the library.\nSetting up npm link for library\nYou must make sure to set \"preserveSymlinks\": true in angular.json under the project>architect>build>options.\nThen navigate to the application which will consume the library, make sure you're in the same folder as that application's package.json (this should be the top level, e.g. prime-web/).  From there, run npm link moh-common-lib.  That's it, the build artifacts from the library will now appear in node_modules/ and can be imported like any other library.  Now in the application you can write...\nimport { example } from 'moh-common-lib'If you've made any chanfges to the library make sure to re-build with ng build moh-commmon-lib from the library folder.\nAs for what specifically you can import from 'moh-common-lib', that is all defined in projects/common/src/public_api.ts.\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
