var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.6","fields":["title","body"],"fieldVectors":[["title/classes/AbstractBaseForm.html",[0,0.015,1,2.97]],["body/classes/AbstractBaseForm.html",[0,0.019,1,4.724,2,2.181,3,0.158,4,0.187,5,0.101,6,5.8,7,1.857,8,4.009,9,0.203,10,0.74,11,2.713,12,5.596,13,0.818,14,2.732,15,5.429,16,4.761,17,2.302,18,4.452,19,0.896,20,3.043,21,4.158,22,0.661,23,6.84,24,1.049,25,0.011,26,0.524,27,0.293,28,0.64,29,1.232,30,4.769,31,5.46,32,1.555,33,1.881,34,5.05,35,0.738,36,0.715,37,1.145,38,5.429,39,3.261,40,4.218,41,5.46,42,1.733,43,4.015,44,1.433,45,1.886,46,4.218,47,5.05,48,1.836,49,0.81,50,5.429,51,5.05,52,2.163,53,4.724,54,4.015,55,5.46,56,4.452,57,1.242,58,1.115,59,5.46,60,0.432,61,5.596,62,4.848,63,5.429,64,5.46,65,2.748,66,3.671,67,4.724,68,3.834,69,2.253,70,2.688,71,0.259,72,2.329,73,0.434,74,1.987,75,1.047,76,2.329,77,0.158,78,3.187,79,5.429,80,5.429,81,5.429,82,4.769,83,0.006,84,0.008,85,0.006]],["title/classes/AbstractForm.html",[0,0.015,86,3.433]],["body/classes/AbstractForm.html",[0,0.019,1,5.839,2,2.131,3,0.154,4,0.183,5,0.098,6,5.556,7,1.173,8,3.916,9,0.198,10,0.729,11,2.694,12,5.116,13,0.806,14,2.675,15,5.769,16,4.682,17,2.473,18,4.386,19,0.886,20,2.973,21,4.071,22,0.682,24,1.034,25,0.011,26,0.516,27,0.3,28,0.631,29,1.198,30,5.919,31,4.234,32,1.684,33,1.459,34,3.916,35,0.721,36,0.699,37,0.888,39,2.529,40,3.271,41,4.234,42,1.344,43,3.113,44,1.594,45,1.87,46,4.182,47,5.47,48,1.82,49,0.889,51,3.916,52,1.677,53,3.663,54,3.113,55,4.234,56,3.452,57,1.065,58,1.161,59,4.234,60,0.388,61,4.654,62,4.156,64,4.234,65,2.131,66,2.846,67,3.663,68,2.973,69,2.201,70,2.626,71,0.269,72,2.275,73,0.424,74,2.711,75,1.023,76,2.275,77,0.154,78,3.113,83,0.006,84,0.008,85,0.006,86,5.379,87,1.491,88,6.846,89,2.065,90,6.739,91,4.654,92,4.976,93,3.777,94,2.694,95,4.659,96,4.659,97,5.304,98,5.304,99,4.976,100,3.777,101,5.919,102,4.659,103,4.659,104,4.659,105,4.659,106,1.051,107,2.626,108,0.614,109,3.113,110,5.304,111,5.304]],["title/classes/AbstractFormControl.html",[0,0.015,112,2.129]],["body/classes/AbstractFormControl.html",[0,0.021,2,1.765,3,0.128,4,0.152,5,0.082,6,5.915,7,1.674,9,0.164,10,0.644,11,2.262,13,0.712,14,2.642,17,2.399,22,0.69,24,1.161,25,0.011,26,0.58,27,0.31,28,0.747,29,1.127,32,1.353,35,1.104,36,1.052,37,0.997,42,1.509,44,1.562,49,0.863,58,1.251,60,0.389,71,0.25,73,0.351,75,0.847,77,0.128,83,0.005,84,0.007,85,0.005,87,1.317,94,1.471,112,2.948,113,3.858,114,0.736,115,1.494,116,2.77,117,3.625,118,2.262,119,2.329,120,0.941,121,2.115,122,1.602,123,2.803,124,2.803,125,3.965,126,3.625,127,3.886,128,2.472,129,3.484,130,2.399,131,4.393,132,4.393,133,4.393,134,1.35,135,1.658,136,1.515,137,1.389,138,1.471,139,1.608,140,1.148,141,4.393,142,1.515,143,4.393,144,2.631,145,1.515,146,4.393,147,2.578,148,3.207,149,3.453,150,4.393,151,3.48,152,3.041,153,4.242,154,2.643,155,0.895,156,2.226,157,2.02,158,4.393,159,2.898,160,4.393,161,1.765,162,4.393,163,4.393,164,4.393,165,4.393,166,4.753,167,0.715,168,2.262,169,1.196,170,3.858,171,1.471,172,4.393,173,2.738,174,2.02,175,0.38,176,3.034,177,2.462,178,3.034,179,4.393,180,2.179,181,4.753,182,2.555,183,3.506,184,1.471,185,2.709,186,1.471,187,3.034,188,2.198,189,2.709,190,2.709,191,2.462,192,3.243,193,2.357,194,3.858,195,1.055,196,5.954,197,3.034,198,4.393,199,1.95,200,3.506,201,3.506,202,2.392,203,6.755,204,3.506,205,2.709,206,3.858,207,4.393,208,2.392,209,0.694,210,3.034,211,2.462,212,2.462,213,4.393,214,3.243,215,3.858,216,3.858,217,4.393,218,5.954,219,4.393,220,4.393,221,4.393]],["title/classes/AbstractHttpService.html",[0,0.015,222,2.41]],["body/classes/AbstractHttpService.html",[0,0.023,2,1.68,3,0.122,4,0.144,5,0.078,9,0.156,10,0.623,13,0.849,14,2.682,17,2.709,19,0.5,22,0.658,24,1.25,25,0.011,26,0.589,27,0.31,28,0.72,29,0.857,35,0.568,36,0.551,37,0.964,49,0.852,60,0.38,61,5.138,62,2.579,69,3.455,70,2.07,71,0.257,77,0.122,78,2.454,83,0.005,84,0.007,85,0.005,100,3.227,108,0.861,134,1.285,154,1.856,155,1.341,156,1.285,167,1.325,171,1.928,195,1.363,208,2.645,214,4.251,222,3.227,223,6.146,224,3.571,225,3.672,226,4.781,227,3.149,228,4.285,229,5.783,230,5.663,231,4.862,232,5.441,233,5.057,234,4.595,235,2.556,236,6.534,237,3.672,238,4.375,239,5.757,240,4.899,241,4.181,242,5.817,243,4.595,244,5.057,245,4.181,246,5.057,247,5.938,248,4.181,249,4.061,250,5.301,251,5.663,252,2.313,253,4.285,254,5.057,255,4.595,256,2.107,257,4.61,258,3.747,259,4.899,260,4.181,261,4.595,262,5.783,263,5.138,264,4.251,265,3.747,266,5.057,267,4.251,268,2.647,269,5.057,270,5.057,271,5.057,272,5.493,273,4.181,274,5.057,275,4.181,276,5.057,277,6.754,278,3.827,279,4.181,280,5.057,281,4.251,282,1.82,283,1.141,284,1.985,285,5.057,286,3.043,287,6.231,288,2.308,289,5.057,290,5.057,291,3.976,292,4.595,293,4.181,294,4.181,295,3.747,296,4.595,297,2.454,298,2.454,299,1.994,300,3.672,301,3.672,302,2.343,303,3.533,304,2.153,305,3.337,306,3.672,307,2.579,308,4.181,309,5.757,310,5.757,311,4.181,312,1.922,313,4.181,314,5.757,315,5.757,316,2.343,317,4.181,318,2.887,319,4.181,320,4.181,321,1.68,322,3.337,323,4.595,324,4.181,325,1.873,326,5.057,327,2.579,328,4.595,329,3.337,330,4.181,331,3.672,332,3.672,333,3.672,334,2.745,335,4.181,336,4.181,337,3.087,338,1.4]],["title/injectables/AbstractPageGuardService.html",[339,1.44,340,2.97]],["body/injectables/AbstractPageGuardService.html",[0,0.027,3,0.17,4,0.202,5,0.109,9,0.218,13,0.966,14,2.825,22,0.572,24,0.898,25,0.011,26,0.448,27,0.218,28,0.548,29,1.202,49,0.775,57,1.308,60,0.446,65,2.879,69,2.974,71,0.202,73,0.467,77,0.17,83,0.007,84,0.009,85,0.007,114,0.886,120,1.331,155,1.192,223,5.719,227,3.741,339,2.4,340,5.574,341,3.14,342,4.041,343,4.524,344,4.331,345,3.69,346,2.346,347,6.443,348,6.293,349,7.165,350,4.948,351,6.293,352,6.293,353,3.69,354,5.291,355,5.719,356,2.545,357,5.574,358,2.142,359,2.266,360,2.142,361,7.165,362,5.574,363,6.802,364,5.851,365,5.139,366,5.851]],["title/injectables/AbstractPgCheckService.html",[339,1.44,367,2.799]],["body/injectables/AbstractPgCheckService.html",[0,0.025,3,0.168,4,0.2,5,0.107,9,0.216,13,0.922,14,2.883,22,0.642,24,0.888,25,0.011,26,0.443,27,0.216,28,0.541,29,1.252,49,0.869,60,0.476,65,2.859,69,2.953,71,0.2,73,0.462,77,0.168,83,0.007,84,0.008,85,0.007,114,0.715,120,1.391,223,6.095,227,3.421,339,2.383,341,3.105,343,3.988,344,3.819,345,2.98,346,2.24,347,5.68,348,5.082,351,5.082,352,5.082,353,2.98,354,4.272,355,4.619,356,2.055,358,2.127,359,2.25,360,2.127,362,5.552,367,5.372,368,5.7,369,5.082,370,5.68,371,6.25,372,4.753,373,6.418,374,6.151,375,6.418,376,5.786,377,5.786,378,5.082,379,5.786,380,5.786,381,3.569]],["title/classes/AbstractReactForm.html",[0,0.015,382,3.433]],["body/classes/AbstractReactForm.html",[0,0.018,1,5.781,2,2.028,3,0.147,4,0.174,5,0.094,6,5.472,7,1.116,8,3.727,9,0.188,10,0.706,11,2.653,12,4.997,13,0.781,14,2.641,15,5.704,16,4.629,17,2.435,18,4.249,19,0.866,20,2.829,21,4.018,22,0.676,24,1.11,25,0.011,26,0.554,27,0.303,28,0.677,29,1.18,31,4.028,32,1.645,33,1.388,34,3.727,35,0.887,36,0.86,37,0.845,39,2.406,40,3.113,41,4.028,42,1.279,43,3.832,44,1.576,45,1.836,46,4.106,47,5.343,48,1.787,49,0.893,51,3.727,52,1.596,53,3.485,54,2.962,55,4.028,56,3.285,57,1.031,58,1.139,59,4.028,60,0.376,61,4.508,62,4.026,64,4.028,65,2.028,66,2.708,67,3.485,68,2.829,69,2.094,70,2.499,71,0.25,75,0.973,76,2.165,77,0.147,78,2.962,83,0.006,84,0.008,85,0.006,87,1.444,88,5.734,91,4.508,92,4.82,93,3.659,94,2.653,95,4.433,96,4.433,99,4.82,100,3.659,101,5.734,102,4.433,103,4.433,104,4.433,105,4.433,106,1.294,107,3.232,108,0.756,174,3.001,185,4.026,202,2.028,283,1,382,5.211,383,6.959,384,8.641,385,6.528,386,5.047,387,6.528,388,6.528,389,5.047,390,7.236,391,2.186,392,5.047,393,4.028,394,5.047,395,5.047,396,1.964,397,2.708,398,5.047,399,5.047,400,5.047,401,5.047]],["title/classes/AbstractTestPage.html",[0,0.015,402,3.175]],["body/classes/AbstractTestPage.html",[0,0.022,2,1.135,3,0.153,4,0.098,5,0.098,9,0.105,10,0.468,13,0.518,14,1.917,16,3.756,18,2.816,22,0.669,24,1.155,25,0.011,26,0.656,27,0.299,28,0.705,33,1.843,35,0.801,36,1.024,44,0.789,46,3.162,48,1.758,49,0.913,52,1.368,53,5.2,57,1.19,58,1.171,60,0.508,67,4.07,68,2.425,69,2.446,71,0.098,77,0.082,83,0.003,84,0.005,85,0.003,108,0.833,120,1.059,130,2.505,140,0.834,155,1.503,169,1.137,175,0.394,191,3.756,195,0.501,199,1.92,208,3.251,251,3.453,253,2.816,256,1.583,268,1.989,282,1.368,284,1.492,288,1.408,291,1.95,325,1.917,334,4.157,353,2.228,358,1.761,402,4.351,403,7.386,404,4.972,405,2.481,406,3.8,407,1.137,408,3.453,409,5.176,410,4.224,411,1.666,412,2.539,413,2.539,414,6.702,415,5.893,416,3.194,417,4.326,418,1.758,419,4.619,420,5.258,421,5.893,422,5.893,423,4.326,424,4.326,425,5.893,426,4.326,427,5.893,428,4.326,429,5.893,430,5.893,431,4.949,432,6.702,433,5.893,434,5.893,435,4.326,436,4.326,437,4.326,438,4.326,439,6.353,440,4.326,441,1.414,442,2.824,443,4.326,444,2.425,445,2.322,446,3.162,447,3.453,448,3.459,449,4.326,450,3.035,451,2.824,452,3.194,453,3.8,454,3.8,455,4.326,456,4.326,457,3.8,458,2.824,459,2.988,460,3.453,461,4.326,462,3.453,463,3.8,464,5.893,465,2.824,466,4.326,467,1.332,468,4.07,469,2.816,470,3.453,471,4.326,472,2.824,473,4.326,474,6.321,475,5.35,476,4.97,477,4.326,478,2.824,479,1.989,480,3.635,481,4.792,482,6.983,483,7.196,484,2.824,485,4.326,486,2.824,487,3.194,488,3.883,489,2.824,490,2.824,491,4.326,492,2.824,493,4.326,494,1.223,495,4.704,496,2.824,497,2.824,498,4.326,499,2.824,500,4.326,501,2.668,502,4.326,503,3.035,504,2.81,505,3.035,506,4.704,507,4.388,508,5.893,509,4.326,510,4.704,511,4.326,512,2.824,513,2.988,514,5.176,515,2.824,516,3.453,517,3.453,518,3.8,519,2.425,520,2.668,521,4.326,522,4.326,523,4.326,524,3.8,525,4.326,526,5.893,527,3.453,528,2.539,529,4.326,530,2.539,531,3.8,532,3.8,533,3.194,534,2.824,535,2.824,536,2.816,537,4.326,538,2.824,539,1.92,540,4.326,541,5.893,542,2.824,543,5.258,544,3.035,545,2.228,546,1.01,547,3.8,548,2.142,549,2.063,550,2.668,551,3.459,552,3.453,553,3.194,554,3.8,555,3.194,556,3.453,557,4.326,558,3.8,559,4.326,560,2.816,561,3.303,562,3.194,563,5.893,564,5.176,565,3.162,566,3.934,567,4.351,568,4.326,569,2.824,570,1.856,571,4.326,572,4.326,573,2.322,574,2.816,575,3.8,576,4.326,577,4.326,578,2.824,579,5.151,580,4.326,581,2.824,582,3.453,583,4.326,584,1.742,585,0.678,586,4.326,587,2.824,588,2.824,589,2.824,590,2.824,591,2.824,592,2.824,593,2.824,594,2.824,595,2.824,596,2.824,597,2.824,598,2.824,599,2.824,600,2.824,601,2.254,602,4.326,603,4.326,604,3.8,605,2.824,606,2.824,607,2.824,608,2.824,609,1.254,610,4.326,611,2.824,612,2.824,613,4.326,614,2.824,615,2.824,616,2.824,617,2.824,618,2.824,619,2.824,620,2.824,621,2.824,622,2.824,623,2.824,624,2.824,625,2.824,626,2.824]],["title/components/AccordionCommonComponent.html",[175,0.209,627,1.06]],["body/components/AccordionCommonComponent.html",[0,0.017,3,0.142,4,0.169,5,0.119,9,0.182,10,0.692,13,0.765,19,0.853,22,0.627,25,0.011,26,0.546,27,0.266,29,0.953,32,1.454,35,0.87,36,0.843,37,1.071,44,1.166,45,1.174,48,1.494,49,0.529,57,1.011,58,0.729,60,0.436,71,0.221,72,2.099,73,0.391,77,0.186,83,0.006,84,0.008,85,0.006,114,0.791,115,1.576,120,1.126,122,1.672,140,1.233,155,0.997,167,0.796,169,1.126,175,0.347,209,0.773,358,1.912,407,1.428,418,1.142,441,1.174,467,1.24,546,1.142,585,1.535,627,1.864,628,1.24,629,1.274,630,1.345,631,4.297,632,7.128,633,1.053,634,1.433,635,6.397,636,1.268,637,6.397,638,1.268,639,6.397,640,7.845,641,7.128,642,4.838,643,4.891,644,4.891,645,4.891,646,4.891,647,4.418,648,6.397,649,4.891,650,2.422,651,2.332,652,1.24,653,1.666,654,2.079,655,1.345,656,1.345,657,1.112,658,1.345,659,1.174,660,1.345,661,1.174,662,1.345,663,1.206,664,1.345,665,1.206,666,1.345,667,1.206,668,1.345,669,1.206,670,1.274,671,1.345,672,1.206,673,1.759,674,1.206,675,1.274,676,1.345,677,1.206,678,1.345,679,1.206,680,1.345,681,1.174,682,1.345,683,1.345,684,1.174,685,1.345,686,1.206,687,1.345,688,1.174,689,1.345,690,1.206,691,1.961,692,1.206,693,1.142,694,1.142,695,1.759,696,1.206,697,1.24,698,1.345,699,1.174,700,1.345,701,1.206,702,1.345,703,1.206,704,1.345,705,1.142,706,1.345,707,1.174,708,1.345,709,1.206,710,1.309,711,1.345,712,1.174,713,1.112,714,1.345,715,1.174,716,1.345,717,1.142,718,1.345,719,1.174,720,1.274,721,1.206,722,1.345,723,1.24,724,1.345,725,1.206,726,1.345,727,1.174,728,1.345,729,1.206,730,1.274,731,1.206,732,1.174,733,1.309,734,1.024,735,1.174,736,1.345,737,1.174,738,1.345,739,1.174,740,1.345,741,1.174,742,1.345,743,1.174,744,1.345,745,1.174,746,1.345,747,1.174,748,1.345,749,1.174,750,1.274,751,1.345]],["title/interfaces/AddrLabelList.html",[752,0.567,753,2.97]],["body/interfaces/AddrLabelList.html",[0,0.011,3,0.089,4,0.105,5,0.057,7,1.013,9,0.114,10,0.495,11,1.02,19,0.364,25,0.011,26,0.233,27,0.267,28,0.755,29,1.212,33,1.26,35,0.623,36,1.053,37,1.351,39,1.452,52,0.963,58,0.82,60,0.508,65,1.223,71,0.247,73,0.243,74,2.015,75,0.587,77,0.178,83,0.004,84,0.005,85,0.004,87,0.673,106,1.214,108,0.889,109,1.787,114,0.376,115,1.013,116,1.676,118,1.02,119,1.05,122,0.673,128,1.114,137,0.963,142,1.05,144,1.448,145,1.05,156,0.936,157,1.4,159,1.306,169,1.286,175,0.298,176,3.163,177,2.567,182,1.965,184,1.02,186,1.02,187,3.163,189,3.396,191,1.707,193,1.634,195,1.223,199,1.352,202,2.639,208,1.84,252,1.223,256,1.114,282,1.741,283,1.368,284,1.05,312,1.4,316,1.707,321,2.212,325,1.791,334,1.452,345,1.568,346,1.331,359,0.963,360,1.369,391,2.398,396,2.143,407,0.481,411,0.861,431,2.248,445,1.634,480,2.825,494,1.295,504,1.452,505,1.568,530,1.787,539,1.352,544,1.568,548,4.132,549,3.809,560,3.583,561,1.707,566,1.787,570,1.306,634,0.481,636,0.604,638,0.604,657,1.041,694,0.711,697,1.161,713,1.041,752,0.725,753,4.23,754,1.02,755,1.579,756,1.579,757,2.248,758,4.849,759,5.242,760,5.242,761,4.12,762,4.905,763,1.13,764,1.434,765,2.567,766,2.212,767,1.84,768,2.184,769,1.082,770,2.567,771,2.248,772,4.25,773,2.248,774,3.583,775,3.252,776,2.103,777,3.163,778,1.982,779,3.777,780,3.396,781,2.981,782,2.248,783,3.986,784,4.536,785,2.103,786,2.248,787,2.431,788,2.431,789,2.431,790,1.508,791,1.787,792,1.878,793,1.634,794,1.352,795,2.567,796,3.656,797,2.689,798,2.103,799,2.431,800,2.431,801,2.248,802,2.103,803,2.431,804,2.404,805,5.715,806,2.248,807,0.525,808,2.103,809,2.248,810,2.248,811,2.689,812,2.431,813,2.248,814,2.431,815,4.05,816,2.248,817,2.431,818,2.248,819,2.103,820,3.656,821,2.431,822,2.431,823,3.656,824,2.981,825,2.431,826,2.431,827,2.431,828,2.431,829,2.431,830,2.212,831,2.532,832,1.878,833,3.02,834,2.431,835,2.431,836,2.431,837,4.23,838,1.787,839,0.885,840,2.248,841,2.431,842,2.431,843,3.656,844,6.129,845,3.656,846,2.689,847,3.656,848,6.016,849,4.395,850,1.568,851,2.248,852,1.982,853,2.431,854,2.431,855,2.431,856,2.431,857,2.431,858,2.431,859,4.889,860,1.306,861,2.431,862,2.431,863,3.656,864,2.825,865,1.634,866,3.656,867,5.242,868,5.508,869,5.242,870,2.431,871,2.431,872,3.656,873,2.431,874,3.656,875,2.825,876,2.431,877,2.248,878,2.431,879,2.431,880,1.707,881,2.431,882,2.431,883,3.583,884,2.431,885,2.431,886,2.431,887,3.382,888,2.981,889,3.656,890,3.656,891,3.656,892,3.656,893,2.431,894,1.185,895,2.431,896,2.431,897,3.802,898,2.103,899,2.431,900,1.306,901,2.431,902,2.431,903,2.431,904,2.248,905,1.787,906,2.431,907,2.431,908,2.431,909,2.103,910,2.141,911,2.431,912,4.889,913,2.431,914,2.431,915,2.431,916,2.431,917,2.431,918,4.066,919,2.103,920,2.431,921,4.23,922,3.656,923,3.163,924,3.656,925,4.395,926,2.103,927,2.431,928,2.431,929,2.103,930,1.982,931,1.878,932,1.878,933,1.568,934,2.431,935,2.431,936,2.431,937,3.382,938,2.431,939,2.431,940,2.248,941,2.431,942,2.248,943,2.106,944,2.431,945,2.431,946,2.248,947,2.431,948,1.878,949,2.431,950,2.248,951,2.248,952,2.431,953,2.431,954,2.431,955,2.431,956,2.431,957,2.431,958,2.431,959,2.431,960,2.431,961,2.431,962,2.431,963,2.431,964,2.431,965,2.103,966,2.431,967,3.656,968,2.431,969,2.431]],["title/classes/Address.html",[0,0.015,772,2.215]],["body/classes/Address.html",[0,0.024,2,1.819,3,0.132,4,0.156,5,0.084,9,0.169,10,0.793,13,0.727,22,0.693,24,0.932,25,0.011,26,0.465,27,0.317,28,0.737,29,1.198,33,1.672,35,0.616,36,0.597,37,0.758,49,0.793,58,0.905,60,0.505,77,0.132,83,0.005,84,0.007,85,0.005,91,4.197,108,0.849,120,1.406,154,2.698,155,0.923,156,1.392,171,2.738,174,2.082,177,3.406,180,2.224,195,0.803,235,2.698,282,2.319,283,0.897,295,5.235,325,1.473,338,1.516,406,5.338,411,1.28,444,3.406,447,4.851,548,3.397,549,3.271,574,3.956,713,1.559,761,3.681,772,4.45,795,4.508,804,2.511,807,0.78,811,4.861,851,5.066,894,2.366,900,3.146,943,2.794,948,4.231,970,3.977,971,3.343,972,2.793,973,7.065,974,6.86,975,6.026,976,6.916,977,5.066,978,6.86,979,5.064,980,7.874,981,6.86,982,4.528,983,4.528,984,7.332,985,6.44,986,4.528,987,4.528,988,4.528,989,4.528,990,4.528,991,4.528,992,6.078,993,6.526,994,6.44,995,3.748,996,4.851,997,4.851,998,4.528,999,4.528,1000,5.338,1001,4.528,1002,4.528,1003,6.078,1004,6.078,1005,4.528,1006,5.338,1007,5.338,1008,4.197,1009,6.078,1010,6.078,1011,4.851,1012,6.078,1013,6.078,1014,5.338,1015,6.078,1016,6.078,1017,6.078,1018,3.748,1019,4.528,1020,4.528,1021,4.528,1022,4.528,1023,4.528,1024,4.528,1025,3.567,1026,4.528,1027,4.528,1028,4.528,1029,7.648,1030,6.026,1031,2.947,1032,5.338,1033,4.851,1034,6.86,1035,4.528,1036,4.528,1037,4.528,1038,4.528,1039,4.528,1040,4.528,1041,4.528,1042,4.528,1043,4.528,1044,4.528,1045,4.528,1046,4.528,1047,4.528]],["title/classes/Base.html",[0,0.015,7,0.951]],["body/classes/Base.html",[0,0.03,2,2.569,3,0.186,4,0.221,5,0.119,7,1.839,9,0.238,10,0.817,19,0.963,22,0.604,25,0.011,27,0.238,35,0.869,36,0.842,60,0.436,71,0.221,77,0.186,83,0.008,84,0.009,85,0.008,120,1.271,121,2.858,134,2.323,136,2.606,137,2.39,138,2.531,139,2.766,140,1.603,155,1.303,295,4.919,303,4.056,304,3.292,972,4.661,1048,5.616,1049,7.557,1050,4.236,1051,4.661,1052,3.742,1053,4.436,1054,7.557]],["title/components/ButtonComponent.html",[175,0.209,659,1.032]],["body/components/ButtonComponent.html",[0,0.02,3,0.124,4,0.147,5,0.108,9,0.159,10,0.631,11,2.228,13,0.698,19,0.796,22,0.644,24,0.654,25,0.011,26,0.548,27,0.279,28,0.399,29,0.869,32,1.326,35,1.112,36,0.877,37,0.977,44,1.064,45,1.024,48,2.027,49,0.631,57,0.922,58,0.869,60,0.336,66,3.132,71,0.202,72,1.83,73,0.341,74,2.435,75,0.822,77,0.17,83,0.005,84,0.007,85,0.005,89,1.66,114,0.721,115,1.471,122,1.582,130,2.303,140,1.125,155,0.869,167,0.949,169,1.13,171,1.954,175,0.386,209,0.674,268,1.961,288,2.328,346,1.696,358,1.744,360,1.744,407,1.419,418,0.996,441,1.024,467,1.081,533,3.149,546,0.996,570,2.504,573,3.132,585,1.401,601,3.404,627,1.052,628,1.081,629,1.111,630,1.173,633,0.918,634,1.425,636,1.157,638,1.157,651,2.783,652,1.081,653,1.52,654,1.968,655,1.173,656,1.173,657,0.969,658,1.173,659,1.717,660,1.173,661,1.024,662,1.173,663,1.052,664,1.173,665,1.052,666,1.173,667,1.052,668,1.173,669,1.052,670,1.111,671,1.173,672,1.052,673,1.605,674,1.052,675,1.111,676,1.173,677,1.052,678,1.173,679,1.052,680,1.173,681,1.024,682,1.173,683,1.173,684,1.024,685,1.173,686,1.052,687,1.173,688,1.024,689,1.173,690,1.052,691,1.83,692,1.052,693,0.996,694,0.996,695,1.605,696,1.052,697,1.081,698,1.173,699,1.024,700,1.173,701,1.052,702,1.173,703,1.052,704,1.173,705,0.996,706,1.173,707,1.024,708,1.173,709,1.052,710,1.141,711,1.173,712,1.024,713,0.969,714,1.173,715,1.024,716,1.173,717,0.996,718,1.173,719,1.024,720,1.111,721,1.052,722,1.173,723,1.081,724,1.173,725,1.052,726,1.173,727,1.024,728,1.173,729,1.052,730,1.111,731,1.052,732,1.024,733,1.141,734,0.893,735,1.024,736,1.173,737,1.024,738,1.173,739,1.024,740,1.173,741,1.024,742,1.173,743,1.024,744,1.173,745,1.024,746,1.173,747,1.024,748,1.173,749,1.024,750,1.111,751,1.173,763,1.439,764,1.863,766,2.673,767,2.673,768,2.034,785,4.03,794,2.591,807,0.735,1055,3.746,1056,4.595,1057,4.309,1058,5.836,1059,2.89,1060,4.309,1061,4.03,1062,5.836,1063,5.836,1064,5.836,1065,5.836,1066,5.836,1067,5.126,1068,4.03,1069,4.009,1070,5.126,1071,3.426,1072,5.126,1073,4.659,1074,5.836,1075,5.126,1076,5.126,1077,5.126,1078,6.653,1079,2.073,1080,5.311,1081,5.836,1082,7.153,1083,4.659,1084,4.265,1085,4.265,1086,4.265,1087,4.265,1088,4.265,1089,5.126,1090,4.265,1091,1.515,1092,4.595,1093,5.836,1094,6.795,1095,3.746]],["title/components/ButtonGroupComponent.html",[175,0.209,661,1.032]],["body/components/ButtonGroupComponent.html",[0,0.013,3,0.112,4,0.133,5,0.101,9,0.143,10,0.587,11,2.107,13,0.649,19,0.753,22,0.678,24,1.049,25,0.011,26,0.589,27,0.308,28,0.64,29,1.17,32,1.233,35,1.086,36,1.053,37,1.145,42,1.827,44,0.989,45,0.921,48,1.835,49,0.78,57,0.857,58,1.17,60,0.394,71,0.187,72,1.647,73,0.307,74,2.302,75,0.74,77,0.158,83,0.005,84,0.006,85,0.005,89,1.494,106,1.355,114,0.671,115,0.849,116,2.302,118,2.107,119,2.169,120,1.183,123,2.251,124,2.251,128,1.985,130,2.217,140,1.046,142,1.87,144,2.161,145,1.87,155,0.782,161,2.179,167,0.625,169,1.216,175,0.306,182,1.647,184,1.286,186,2.107,199,2.408,209,0.607,282,1.715,325,2.047,346,1.987,356,1.927,358,1.621,359,1.715,360,2.043,381,3.879,407,1.41,411,1.534,418,0.897,441,0.921,459,3.746,467,0.973,546,0.897,585,1.302,627,0.947,628,0.973,629,1,630,1.056,633,0.826,634,1.418,636,1.075,638,1.075,652,0.973,653,1.412,654,1.88,655,1.056,656,1.056,657,0.873,658,1.056,659,0.921,660,1.056,661,1.886,662,1.056,663,0.947,664,1.056,665,0.947,666,1.056,667,0.947,668,1.056,669,0.947,670,1,671,1.056,672,0.947,673,1.492,674,0.947,675,1,676,1.056,677,0.947,678,1.056,679,0.947,680,1.056,681,0.921,682,1.056,683,1.056,684,0.921,685,1.056,686,0.947,687,1.056,688,0.921,689,1.056,690,0.947,691,1.73,692,0.947,693,0.897,694,0.897,695,1.492,696,0.947,697,0.973,698,1.056,699,0.921,700,1.056,701,0.947,702,1.056,703,0.947,704,1.056,705,0.897,706,1.056,707,0.921,708,1.056,709,0.947,710,1.027,711,1.056,712,0.921,713,0.873,714,1.056,715,0.921,716,1.056,717,1.469,718,1.056,719,0.921,720,1,721,0.947,722,1.056,723,0.973,724,1.056,725,0.947,726,1.056,727,0.921,728,1.056,729,0.947,730,1,731,0.947,732,0.921,733,1.027,734,0.804,735,0.921,736,1.056,737,0.921,738,1.056,739,0.921,740,1.056,741,0.921,742,1.056,743,0.921,744,1.056,745,0.921,746,1.056,747,0.921,748,1.056,749,0.921,750,1,751,1.056,763,1.338,764,1.78,766,2.897,767,2.527,768,2.999,794,2.408,804,1.405,807,0.661,1018,4.216,1057,4.005,1079,1.927,1092,4.344,1096,7.495,1097,6.812,1098,3.372,1099,4.764,1100,4.764,1101,4.33,1102,4.764,1103,4.33,1104,2.494,1105,4.33,1106,5.424,1107,5.424,1108,6.29,1109,5.424,1110,6.334,1111,4.094,1112,5.021,1113,5.424,1114,3.839,1115,3.839,1116,3.839,1117,3.839,1118,3.839,1119,3.839,1120,3.839,1121,3.839,1122,3.839,1123,3.839,1124,5.424,1125,3.839,1126,3.839,1127,3.839,1128,5.424,1129,3.839,1130,3.839,1131,3.064,1132,3.839,1133,3.372,1134,5.424]],["title/injectables/CaptchaDataService.html",[339,1.44,1135,2.799]],["body/injectables/CaptchaDataService.html",[0,0.023,3,0.15,4,0.178,5,0.096,9,0.192,13,0.792,19,0.617,22,0.616,24,1.183,25,0.011,26,0.591,27,0.288,28,0.722,49,0.79,60,0.522,70,2.553,71,0.266,73,0.412,77,0.193,83,0.006,84,0.008,85,0.006,93,4.831,108,0.945,120,1.342,195,0.914,226,4.29,232,5.048,238,5.034,257,4.512,265,3.356,298,3.026,299,2.458,339,2.448,341,2.767,910,1.499,1135,4.308,1136,6.367,1137,4.116,1138,6.618,1139,6.618,1140,6.618,1141,5.156,1142,5.156,1143,6.42,1144,7.006,1145,5.156,1146,6.515,1147,6.42,1148,7.047,1149,5.156,1150,6.42,1151,7.384,1152,7.169,1153,5.156,1154,4.529,1155,4.323,1156,3.807,1157,6.42,1158,3.18,1159,3.807,1160,5.048,1161,4.529,1162,3.356,1163,6.42,1164,6.42,1165,5.813,1166,4.529,1167,5.813,1168,6.42]],["title/modules/CaptchaModule.html",[1169,2.652,1170,2.799]],["body/modules/CaptchaModule.html",[0,0.02,3,0.164,4,0.195,5,0.105,13,0.677,22,0.452,25,0.011,49,0.611,71,0.298,73,0.452,75,1.09,77,0.164,83,0.007,84,0.008,85,0.007,108,0.655,151,2.6,175,0.275,227,3.114,283,1.121,288,1.84,298,3.319,303,3.035,345,4.223,358,1.69,359,2.642,407,1.109,411,1.984,412,4.118,517,5.6,584,3.488,651,2.696,652,1.433,663,2.164,755,1.95,756,1.95,786,5.18,900,2.426,977,5.18,1052,2.8,1135,5.514,1146,4.514,1148,4.514,1160,5.268,1169,4.704,1170,5.753,1171,3.488,1172,5.663,1173,6.089,1174,4.967,1175,4.967,1176,4.967,1177,4.967,1178,5.6,1179,4.175,1180,5.655,1181,7.628,1182,5.655,1183,7.628,1184,6.162,1185,5.268,1186,5.655,1187,4.967,1188,5.655,1189,4.967,1190,5.655,1191,3.905,1192,5.655,1193,4.967,1194,6.162,1195,5.655,1196,4.967,1197,6.162,1198,4.514]],["title/injectables/CheckCompleteBaseService.html",[339,1.44,1199,3.175]],["body/injectables/CheckCompleteBaseService.html",[0,0.026,3,0.116,4,0.137,5,0.074,9,0.272,10,0.601,13,0.665,14,1.292,17,2.388,19,0.665,20,2.226,21,3.747,22,0.678,24,1.12,25,0.011,26,0.559,27,0.296,28,0.683,29,1.264,33,1.093,35,0.871,36,0.914,37,1.162,49,0.9,57,1.272,58,1.127,60,0.489,65,2.934,69,3.386,71,0.221,73,0.317,76,1.704,77,0.162,83,0.005,84,0.007,85,0.005,106,1.375,108,0.917,114,0.491,120,1.383,155,0.809,171,1.33,190,3.427,195,1.23,202,2.232,227,2.466,235,2.466,282,1.757,283,1.101,288,1.808,338,2.146,339,1.861,341,2.132,343,3.889,344,2.982,356,2.276,358,1.187,362,4.792,367,3.616,368,2.743,372,3.952,373,5.539,374,5.115,375,5.539,378,3.489,411,1.571,444,4.823,445,2.982,479,3.191,494,1.571,528,3.761,573,2.982,609,1.763,752,0.732,875,4.28,900,2.384,910,2.2,932,3.427,933,3.574,972,3.427,979,5.226,1059,2.751,1199,4.102,1200,6.811,1201,3.171,1202,4.88,1203,4.102,1204,3.616,1205,5.115,1206,5.628,1207,5.628,1208,5.628,1209,6.095,1210,4.792,1211,4.516,1212,5.628,1213,5.115,1214,5.556,1215,3.972,1216,3.972,1217,3.972,1218,3.972,1219,3.952,1220,2.085,1221,3.616,1222,3.972,1223,4.88,1224,4.516,1225,3.972,1226,4.88,1227,3.837,1228,5.588,1229,3.972,1230,3.972,1231,4.88,1232,3.972,1233,4.88,1234,4.88,1235,3.837,1236,3.972,1237,4.88,1238,4.88,1239,3.972,1240,4.731,1241,3.972,1242,3.972,1243,3.972,1244,3.489,1245,3.972,1246,5.115,1247,3.171,1248,3.489,1249,3.489,1250,2.933,1251,3.489,1252,3.489,1253,3.489,1254,3.489,1255,2.132,1256,2.132,1257,4.88,1258,4.435,1259,5.628,1260,5.392,1261,5.628,1262,4.102,1263,3.837,1264,4.435,1265,3.837,1266,4.88,1267,3.489,1268,3.489,1269,3.489,1270,3.489,1271,2.743,1272,3.489,1273,3.489,1274,3.489,1275,3.489,1276,2.933,1277,3.489,1278,3.489,1279,3.489,1280,3.489,1281,3.489]],["title/components/CheckboxComponent.html",[175,0.209,665,1.06]],["body/components/CheckboxComponent.html",[0,0.013,3,0.108,4,0.128,5,0.098,7,1.49,9,0.139,10,0.574,11,2.07,13,0.635,19,0.635,22,0.687,24,1.093,25,0.011,26,0.597,27,0.315,28,0.713,29,1.212,32,1.205,33,1.459,35,1.094,36,1.06,37,1.24,42,1.708,44,1.127,45,0.893,48,1.239,49,0.801,57,0.838,58,1.181,60,0.439,71,0.213,72,1.596,73,0.297,74,2.262,75,0.717,77,0.154,83,0.004,84,0.006,85,0.004,87,1.173,89,2.064,94,1.246,114,0.656,115,1.367,116,2.262,118,2.07,119,2.131,120,1.286,121,1.884,122,1.49,123,2.201,124,2.201,128,1.941,130,2.19,134,1.143,135,1.403,136,1.283,137,1.176,138,1.246,139,1.361,140,1.192,142,1.829,144,2.131,145,1.829,148,2.863,152,2.131,155,0.758,161,2.131,167,0.605,169,1.253,175,0.347,180,1.941,182,1.596,184,1.246,186,1.776,188,1.21,197,2.569,209,0.588,256,1.361,325,2.318,346,1.542,358,1.585,360,1.585,407,1.408,411,1.905,416,3.916,418,0.869,441,0.893,459,5.622,467,0.942,546,0.869,573,1.996,585,1.273,627,0.917,628,0.942,629,0.969,630,1.023,633,0.8,634,1.416,636,1.051,638,1.051,652,0.942,653,1.381,654,1.854,655,1.023,656,1.023,657,0.845,658,1.023,659,0.893,660,1.023,661,0.893,662,1.023,663,0.917,664,1.023,665,1.662,666,1.023,667,0.917,668,1.023,669,0.917,670,0.969,671,1.023,672,0.917,673,1.459,674,0.917,675,0.969,676,1.023,677,0.917,678,1.023,679,0.917,680,1.023,681,0.893,682,1.023,683,1.023,684,0.893,685,1.023,686,0.917,687,1.023,688,0.893,689,1.023,690,0.917,691,1.7,692,0.917,693,0.869,694,0.869,695,1.459,696,0.917,697,0.942,698,1.023,699,0.893,700,1.023,701,0.917,702,1.023,703,0.917,704,1.023,705,0.869,706,1.023,707,0.893,708,1.023,709,0.917,710,0.995,711,1.023,712,0.893,713,0.845,714,1.023,715,0.893,716,1.023,717,0.869,718,1.023,719,0.893,720,0.969,721,0.917,722,1.023,723,0.942,724,1.023,725,0.917,726,1.023,727,0.893,728,1.023,729,0.917,730,0.969,731,0.917,732,0.893,733,0.995,734,0.779,735,0.893,736,1.023,737,0.893,738,1.023,739,0.893,740,1.023,741,0.893,742,1.023,743,0.893,744,1.023,745,0.893,746,1.023,747,0.893,748,1.023,749,0.893,750,0.969,751,1.023,763,1.308,764,1.755,766,2.484,767,2.484,768,1.773,769,1.321,794,2.354,807,0.641,839,1.081,894,2.064,1018,4.156,1025,3.113,1079,1.884,1091,1.884,1092,4.269,1110,5.429,1111,4.023,1112,4.934,1133,4.659,1282,3.267,1283,5.304,1284,5.304,1285,3.163,1286,7.623,1287,5.304,1288,1.842,1289,5.304,1290,3.719,1291,5.304,1292,3.916,1293,3.452,1294,3.719,1295,3.719,1296,3.719,1297,3.719,1298,3.719,1299,3.719,1300,3.719,1301,3.719,1302,3.719,1303,3.719,1304,5.304,1305,3.719,1306,3.719,1307,3.719,1308,5.304,1309,3.719,1310,1.842,1311,3.719,1312,3.719,1313,2.746,1314,1.651,1315,5.304,1316,5.304,1317,3.719,1318,3.719,1319,3.719]],["title/components/CityComponent.html",[175,0.209,667,1.06]],["body/components/CityComponent.html",[0,0.011,3,0.093,4,0.111,5,0.088,7,0.708,9,0.119,10,0.514,11,1.593,13,0.569,14,2.043,17,1.93,19,0.569,22,0.696,24,1.193,25,0.011,26,0.628,27,0.32,28,0.747,29,0.845,32,1.081,35,1.072,36,1.138,37,0.536,42,1.591,44,1.034,45,0.768,48,1.111,49,0.863,57,0.751,58,1.202,60,0.491,71,0.217,73,0.256,75,0.617,77,0.093,83,0.004,84,0.006,85,0.004,87,1.052,89,1.246,94,2.727,108,0.371,112,4.092,114,0.588,115,1.255,116,2.076,117,3.6,118,1.593,119,1.64,120,1.06,121,1.689,122,1.61,123,1.974,124,1.974,125,2.791,126,2.552,127,3.044,128,2.455,129,3.123,130,2.237,134,0.984,135,1.208,136,1.104,137,1.012,138,1.072,139,1.172,140,1.094,142,1.104,144,1.986,145,1.104,147,1.879,148,3.004,149,2.267,151,1.472,152,2.523,153,2.665,154,1.421,155,0.652,156,0.984,157,1.472,159,1.374,161,1.911,167,0.774,168,1.649,169,1.111,175,0.276,184,1.072,186,1.072,188,1.042,209,0.506,235,2.111,283,0.635,286,2.04,312,1.472,407,1.394,418,0.748,441,0.768,467,0.811,546,0.748,565,3.044,585,1.141,627,0.789,628,0.811,629,0.834,630,0.881,633,0.689,634,1.405,636,0.943,638,0.943,652,0.811,653,1.238,654,1.727,655,0.881,656,0.881,657,0.728,658,0.881,659,0.768,660,0.881,661,0.768,662,0.881,663,0.789,664,0.881,665,0.789,666,0.881,667,1.548,668,0.881,669,0.789,670,0.834,671,0.881,672,0.789,673,1.308,674,0.789,675,0.834,676,0.881,677,0.789,678,0.881,679,0.789,680,0.881,681,0.768,682,0.881,683,0.881,684,0.768,685,0.881,686,0.789,687,0.881,688,0.768,689,0.881,690,0.789,691,1.56,692,0.789,693,0.748,694,0.748,695,1.308,696,0.789,697,0.811,698,0.881,699,0.768,700,0.881,701,0.789,702,0.881,703,0.789,704,0.881,705,0.748,706,0.881,707,0.768,708,0.881,709,0.789,710,0.857,711,0.881,712,0.768,713,0.728,714,0.881,715,0.768,716,0.881,717,0.748,718,0.881,719,0.768,720,0.834,721,0.789,722,0.881,723,0.811,724,0.881,725,0.789,726,0.881,727,0.768,728,0.881,729,0.789,730,0.834,731,0.789,732,0.768,733,0.857,734,0.67,735,0.768,736,0.881,737,0.768,738,0.881,739,0.768,740,0.881,741,0.768,742,0.881,743,0.768,744,0.881,745,0.768,746,0.881,747,0.768,748,0.881,749,0.768,750,0.834,751,0.881,755,1.64,756,1.64,761,4.099,763,1.399,764,1.895,804,2.298,807,0.819,839,0.931,860,2.04,1030,5.515,1071,2.791,1079,1.689,1091,2.23,1285,2.978,1288,1.585,1310,1.585,1314,1.421,1320,2.812,1321,4.755,1322,4.755,1323,3.044,1324,3.18,1325,3.33,1326,3.18,1327,3.499,1328,2.809,1329,3.202,1330,3.202,1331,4.755,1332,2.449,1333,3.202,1334,3.095,1335,3.202,1336,3.202,1337,4.755,1338,1.975,1339,1.975,1340,1.975,1341,3.202,1342,3.202,1343,3.202,1344,2.084,1345,3.202,1346,1.975,1347,3.202,1348,3.202,1349,1.975,1350,1.975,1351,1.975,1352,1.975,1353,1.975,1354,1.975,1355,1.975,1356,3.455,1357,2.552,1358,3.095,1359,2.933,1360,3.796,1361,3.095,1362,2.787,1363,3.284,1364,3.284,1365,3.284,1366,3.202,1367,3.202,1368,3.202,1369,1.975,1370,1.975,1371,1.975,1372,1.794,1373,3.202,1374,1.794,1375,1.329,1376,1.974,1377,1.329,1378,1.974,1379,1.974,1380,1.974,1381,1.329,1382,1.329,1383,1.974,1384,1.974,1385,1.329,1386,1.329,1387,1.329,1388,1.329,1389,1.329,1390,1.974,1391,1.911,1392,1.329,1393,1.974,1394,1.974,1395,1.329,1396,1.974,1397,1.329,1398,1.329,1399,1.329,1400,1.329,1401,2.606,1402,1.329,1403,1.329,1404,1.329,1405,1.329,1406,1.329,1407,1.329,1408,1.329,1409,1.329,1410,1.329,1411,1.329,1412,1.329,1413,1.329,1414,1.329,1415,1.329,1416,1.329,1417,1.329,1418,1.974,1419,1.329,1420,1.329,1421,1.329,1422,1.329,1423,1.329,1424,1.329,1425,1.329,1426,1.329,1427,1.329,1428,1.329,1429,1.329,1430,1.329,1431,1.329,1432,1.974,1433,1.329,1434,1.329,1435,1.329,1436,1.329,1437,1.329,1438,1.104,1439,1.329,1440,1.329,1441,1.329,1442,1.329,1443,1.329,1444,1.329,1445,1.329,1446,1.329,1447,1.794,1448,1.718,1449,1.794,1450,1.794,1451,2.084,1452,2.933,1453,4.177]],["title/interfaces/CommonAttachmentJson.html",[752,0.567,1454,2.652]],["body/interfaces/CommonAttachmentJson.html",[0,0.026,3,0.152,4,0.18,5,0.144,9,0.195,10,0.722,17,1.607,25,0.011,26,0.4,27,0.299,28,0.489,49,0.565,52,1.653,54,3.068,60,0.501,71,0.18,77,0.238,83,0.006,84,0.008,85,0.006,108,0.773,114,0.646,120,0.826,134,1.607,167,1.197,173,2.403,180,1.913,193,2.805,208,2.1,212,2.929,224,2.242,249,4.781,278,3.508,283,1.323,284,1.802,288,1.701,303,3.948,304,2.692,325,1.701,338,2.236,356,1.856,410,3.068,450,2.692,479,2.403,494,2.499,519,2.929,752,0.88,754,1.75,797,3.068,807,0.9,1220,1.701,1438,1.802,1454,4.537,1455,3.223,1456,5.531,1457,5.75,1458,5.531,1459,3.402,1460,3.742,1461,4.808,1462,3.068,1463,3.223,1464,4.318,1465,3.402,1466,3.402,1467,3.402,1468,3.402,1469,3.223,1470,3.402,1471,3.402,1472,3.402,1473,3.068,1474,3.609,1475,3.609,1476,3.609,1477,3.609,1478,3.609,1479,2.403,1480,3.223,1481,3.223,1482,3.609,1483,3.402,1484,3.609,1485,3.609,1486,3.402,1487,3.402,1488,3.402,1489,5.213,1490,4.788,1491,3.223,1492,3.609,1493,4.611,1494,3.609,1495,2.692,1496,3.609,1497,3.402,1498,3.609,1499,4.611,1500,3.402,1501,3.402,1502,3.609,1503,3.609,1504,3.609,1505,3.402,1506,2.929,1507,3.609,1508,3.609,1509,3.609,1510,3.609,1511,3.609,1512,3.609,1513,3.402,1514,3.609,1515,2.492,1516,3.402,1517,3.609,1518,3.609,1519,4.55,1520,4.611,1521,4.611,1522,4.611,1523,3.742,1524,3.609,1525,4.611,1526,4.611,1527,3.609,1528,4.611,1529,4.345]],["title/classes/CommonImage.html",[0,0.015,278,2.05]],["body/classes/CommonImage.html",[0,0.024,2,1.862,3,0.135,4,0.16,5,0.137,9,0.173,10,0.667,13,0.739,17,1.425,19,0.555,22,0.692,24,0.711,25,0.011,26,0.567,27,0.327,28,0.721,35,0.63,36,0.611,49,0.75,52,1.952,54,3.623,60,0.506,70,2.295,71,0.16,77,0.231,83,0.006,84,0.007,85,0.006,108,0.714,114,0.573,120,0.732,134,1.425,155,1.258,167,1.254,173,2.131,180,1.696,193,3.312,208,1.862,212,2.597,224,2.648,249,4.281,278,3.529,283,1.467,284,1.598,288,2.008,303,4.136,304,2.387,325,2.008,338,2.324,356,2.192,410,2.72,450,3.179,479,2.131,494,2.483,519,3.46,752,0.813,797,2.72,807,0.798,1220,1.508,1438,2.393,1454,4.281,1455,2.858,1456,4.263,1457,5.588,1458,4.263,1459,3.016,1460,3.46,1461,4.974,1462,2.72,1463,2.858,1464,4.344,1465,3.016,1466,3.016,1467,3.016,1468,3.016,1469,2.858,1470,3.016,1471,3.016,1472,3.016,1473,2.72,1474,3.201,1475,3.201,1476,3.201,1477,3.201,1478,3.201,1479,2.131,1480,2.858,1481,2.858,1482,3.201,1483,3.016,1484,3.201,1485,3.201,1486,3.016,1487,3.016,1488,4.017,1489,5.415,1490,5.159,1491,3.807,1492,4.263,1493,4.263,1494,3.201,1495,3.179,1496,4.263,1497,4.017,1498,4.793,1499,5.323,1500,4.017,1501,4.017,1502,4.263,1503,4.263,1504,4.263,1505,3.016,1506,3.89,1507,4.793,1508,4.793,1509,4.793,1510,4.793,1511,3.201,1512,3.201,1513,4.017,1514,4.263,1515,2.943,1516,4.817,1517,3.201,1518,3.201,1519,4.344,1520,4.263,1521,4.263,1522,4.263,1523,3.46,1524,3.201,1525,4.263,1526,4.263,1527,3.201,1528,4.263,1529,4.017,1530,6.172,1531,4.634,1532,4.634,1533,4.634,1534,4.634,1535,4.634,1536,4.634,1537,4.634,1538,4.634,1539,4.634,1540,4.634,1541,4.634,1542,4.634,1543,4.634]],["title/classes/CommonImageProcessingError.html",[0,0.015,1473,2.524]],["body/classes/CommonImageProcessingError.html",[0,0.025,2,2.021,3,0.146,4,0.174,5,0.147,9,0.188,10,0.704,17,1.546,19,0.602,22,0.648,24,0.772,25,0.011,26,0.499,27,0.312,28,0.798,49,0.544,52,1.59,54,2.952,60,0.5,70,2.49,71,0.174,77,0.236,83,0.006,84,0.008,85,0.006,108,0.754,114,0.622,120,1.251,134,1.546,167,1.175,173,2.312,180,1.841,193,2.699,208,2.021,212,2.819,224,2.158,249,4.017,278,3.866,283,1.291,284,1.734,288,1.636,303,3.877,304,2.59,325,1.636,338,2.181,356,1.786,410,2.952,450,2.59,479,2.312,494,2.482,519,2.819,752,0.858,797,2.952,807,0.866,1220,1.636,1438,1.734,1454,4.017,1455,3.102,1456,4.498,1457,5.277,1458,4.498,1459,3.273,1460,3.65,1461,4.759,1462,2.952,1463,3.102,1464,4.759,1465,3.273,1466,3.273,1467,3.273,1468,3.273,1469,3.102,1470,3.273,1471,3.273,1472,3.273,1473,3.823,1474,4.989,1475,4.989,1476,3.473,1477,3.473,1478,3.473,1479,2.312,1480,3.102,1481,3.102,1482,3.473,1483,3.273,1484,3.473,1485,3.473,1486,4.973,1487,5.151,1488,3.273,1489,5.151,1490,4.701,1491,3.102,1492,3.473,1493,4.498,1494,3.473,1495,2.59,1496,3.473,1497,3.273,1498,3.473,1499,4.498,1500,3.273,1501,3.273,1502,3.473,1503,3.473,1504,3.473,1505,3.273,1506,2.819,1507,3.473,1508,3.473,1509,3.473,1510,3.473,1511,3.473,1512,3.473,1513,3.273,1514,3.473,1515,2.398,1516,3.273,1517,3.473,1518,3.473,1519,4.485,1520,4.498,1521,4.498,1522,4.498,1523,3.65,1524,3.473,1525,4.498,1526,4.498,1527,3.473,1528,4.498,1529,4.239,1544,5.029,1545,6.513,1546,5.029,1547,6.513,1548,5.029]],["title/interfaces/CommonImageScaleFactors.html",[752,0.567,1519,2.524]],["body/interfaces/CommonImageScaleFactors.html",[0,0.026,3,0.151,4,0.179,5,0.143,9,0.193,10,0.717,13,0.794,17,1.591,22,0.413,24,0.794,25,0.011,26,0.508,27,0.298,28,0.621,49,0.717,52,1.636,54,3.037,60,0.494,71,0.179,77,0.238,83,0.006,84,0.008,85,0.006,108,0.768,114,0.64,120,0.818,134,1.591,167,1.191,173,2.379,180,1.894,193,2.777,208,2.079,212,2.9,224,2.22,249,4.091,278,3.491,283,1.315,284,1.784,288,1.684,303,3.929,304,2.665,325,1.684,338,2.222,356,1.838,410,3.037,450,2.665,479,2.379,494,2.518,519,2.9,752,0.874,754,1.733,797,3.037,807,0.892,1220,1.684,1438,1.784,1454,4.091,1455,3.191,1456,4.581,1457,5.333,1458,4.581,1459,3.368,1460,3.718,1461,4.795,1462,3.037,1463,3.191,1464,4.298,1465,3.368,1466,3.368,1467,3.368,1468,3.368,1469,3.191,1470,3.368,1471,3.368,1472,3.368,1473,3.037,1474,3.574,1475,3.574,1476,3.574,1477,3.574,1478,3.574,1479,2.379,1480,3.191,1481,3.191,1482,3.574,1483,3.368,1484,3.574,1485,3.574,1486,3.368,1487,3.368,1488,3.368,1489,5.197,1490,4.765,1491,3.191,1492,3.574,1493,4.581,1494,3.574,1495,2.665,1496,3.574,1497,3.368,1498,3.574,1499,4.581,1500,3.368,1501,3.368,1502,3.574,1503,3.574,1504,3.574,1505,3.368,1506,2.9,1507,3.574,1508,3.574,1509,3.574,1510,3.574,1511,3.574,1512,3.574,1513,3.368,1514,3.574,1515,2.467,1516,3.368,1517,3.574,1518,3.574,1519,4.795,1520,5.514,1521,5.514,1522,5.057,1523,3.718,1524,3.574,1525,4.581,1526,4.581,1527,3.574,1528,4.581,1529,4.765,1549,5.827,1550,5.174]],["title/classes/CommonImageScaleFactorsImpl.html",[0,0.015,1523,2.41]],["body/classes/CommonImageScaleFactorsImpl.html",[0,0.025,2,2.046,3,0.148,4,0.176,5,0.142,9,0.19,10,0.71,13,0.786,17,1.565,19,0.609,22,0.613,24,1.007,25,0.011,26,0.556,27,0.303,28,0.68,49,0.71,52,1.61,54,2.989,60,0.492,71,0.176,77,0.237,83,0.006,84,0.008,85,0.006,108,0.76,114,0.812,120,0.805,134,1.565,167,1.182,173,2.341,180,1.864,193,2.732,208,2.046,212,2.854,224,2.184,249,4.049,278,3.465,283,1.301,284,1.756,288,1.657,303,3.899,304,2.622,325,1.657,338,2.199,356,1.808,410,2.989,450,2.622,479,2.341,494,2.523,519,2.854,752,0.865,797,2.989,807,0.877,1220,1.657,1438,1.756,1454,4.049,1455,3.14,1456,4.534,1457,5.301,1458,4.534,1459,3.314,1460,3.68,1461,4.775,1462,2.989,1463,3.14,1464,4.265,1465,3.314,1466,3.314,1467,3.314,1468,3.314,1469,3.14,1470,3.314,1471,3.314,1472,3.314,1473,2.989,1474,3.516,1475,3.516,1476,3.516,1477,3.516,1478,3.516,1479,2.341,1480,3.14,1481,3.14,1482,3.516,1483,3.314,1484,3.516,1485,3.516,1486,3.314,1487,3.314,1488,3.314,1489,5.171,1490,4.729,1491,3.14,1492,3.516,1493,4.534,1494,3.516,1495,2.622,1496,3.516,1497,3.314,1498,3.516,1499,4.534,1500,3.314,1501,3.314,1502,3.516,1503,3.516,1504,3.516,1505,3.314,1506,2.854,1507,3.516,1508,3.516,1509,3.516,1510,3.516,1511,3.516,1512,3.516,1513,3.314,1514,3.516,1515,2.428,1516,3.314,1517,3.516,1518,3.516,1519,4.775,1520,5.301,1521,5.301,1522,5.018,1523,4.073,1524,4.534,1525,5.301,1526,4.534,1527,4.534,1528,4.534,1529,4.729,1549,5.767,1551,6.565,1552,5.092,1553,5.092]],["title/interfaces/CommonLogMessage.html",[752,0.567,1554,3.433]],["body/interfaces/CommonLogMessage.html",[0,0.015,3,0.192,4,0.145,5,0.078,9,0.157,10,0.624,14,1.366,17,2.29,22,0.335,25,0.011,26,0.505,27,0.265,28,0.393,33,1.155,42,1.888,60,0.48,66,2.254,69,2.396,71,0.257,73,0.335,77,0.192,78,2.465,83,0.005,84,0.007,85,0.005,87,0.929,94,1.406,108,0.944,120,1.043,129,2.477,154,1.864,167,1.355,169,0.664,174,1.931,177,2.354,178,2.9,192,4.264,195,1.17,206,3.688,208,2.32,222,3.236,224,1.802,226,3.874,227,2.563,228,2.733,231,3.101,232,3.988,236,5.072,238,3.561,240,4.558,242,5.248,243,5.268,250,3.758,252,2.32,258,2.733,259,4.558,263,2.9,265,2.733,267,3.101,268,1.931,272,4.264,282,1.328,283,1.563,286,1.802,288,1.366,295,4.295,298,2.465,299,2.002,325,1.879,328,6.146,333,5.072,334,2.753,339,1.934,358,1.255,391,1.934,397,2.254,447,3.352,504,2.002,520,2.59,545,2.974,561,2.354,567,3.101,609,2.563,752,0.761,754,1.406,795,2.354,807,0.995,833,3.268,894,1.635,900,1.802,904,3.101,905,2.465,910,2.166,930,2.733,1007,5.072,1011,3.352,1053,3.874,1061,2.9,1070,3.688,1091,2.959,1155,3.983,1158,3.561,1255,2.254,1256,2.254,1293,2.733,1438,1.991,1459,2.733,1460,3.236,1483,4.295,1491,3.561,1495,2.163,1513,2.733,1554,6.296,1555,3.352,1556,3.101,1557,4.199,1558,5.774,1559,3.101,1560,4.609,1561,5.072,1562,3.352,1563,5.072,1564,5.796,1565,4.199,1566,2.9,1567,4.199,1568,4.199,1569,3.101,1570,3.688,1571,5.072,1572,4.199,1573,7.451,1574,4.199,1575,5.774,1576,5.774,1577,7.107,1578,5.774,1579,3.101,1580,5.774,1581,5.774,1582,5.774,1583,4.199,1584,5.774,1585,4.199,1586,4.873,1587,4.785,1588,4.199,1589,4.199,1590,5.774,1591,5.796,1592,5.072,1593,5.796,1594,3.352,1595,3.688,1596,4.199,1597,3.758,1598,4.199,1599,4.199,1600,4.199,1601,4.199,1602,4.199,1603,4.199,1604,4.199,1605,4.199,1606,4.199,1607,3.988,1608,4.199,1609,4.199,1610,4.199,1611,4.199,1612,4.199,1613,4.199,1614,4.199,1615,4.199,1616,4.199,1617,3.688,1618,3.352,1619,3.352,1620,3.352,1621,5.774,1622,3.101,1623,4.199,1624,4.199,1625,4.199,1626,4.199,1627,3.688,1628,4.199,1629,4.199,1630,4.199,1631,4.199,1632,3.352,1633,3.389,1634,2.59,1635,3.688,1636,3.352,1637,3.101,1638,4.199,1639,3.688,1640,4.199,1641,4.199,1642,5.072,1643,2.9,1644,3.688,1645,3.352,1646,5.072,1647,4.199,1648,3.688,1649,3.688,1650,3.688,1651,4.199,1652,3.688,1653,4.199,1654,3.688,1655,3.688,1656,3.688,1657,2.733,1658,4.199,1659,3.688,1660,4.199,1661,4.199,1662,4.199,1663,4.199,1664,4.199,1665,4.199,1666,4.199,1667,4.199,1668,4.199]],["title/components/ConfirmTemplateComponent.html",[175,0.209,669,1.06]],["body/components/ConfirmTemplateComponent.html",[0,0.017,3,0.139,4,0.166,5,0.117,7,1.659,9,0.179,10,0.683,19,0.844,22,0.639,25,0.011,26,0.54,27,0.235,32,1.435,35,0.858,36,0.832,44,1.151,45,1.15,48,1.474,57,0.997,60,0.276,71,0.218,73,0.383,77,0.184,83,0.006,84,0.008,85,0.006,87,1.396,94,1.605,108,0.817,120,0.997,121,2.242,134,1.473,135,1.809,136,1.653,137,1.516,138,1.605,139,1.754,140,1.361,167,1.027,169,0.997,175,0.344,209,0.757,235,2.802,327,2.956,338,1.605,407,1.427,418,1.119,441,1.15,467,1.215,546,1.119,585,1.515,627,1.182,628,1.788,629,1.248,630,1.318,633,1.032,634,1.432,636,1.251,638,1.251,652,1.215,653,1.644,654,2.063,655,1.318,656,1.318,657,1.089,658,1.318,659,1.15,660,1.318,661,1.15,662,1.318,663,1.182,664,1.318,665,1.182,666,1.318,667,1.182,668,1.318,669,1.85,670,2.124,671,1.318,672,1.182,673,1.736,674,1.182,675,1.248,676,1.318,677,1.182,678,1.318,679,1.182,680,1.318,681,1.15,682,1.318,683,1.318,684,1.15,685,1.318,686,1.182,687,1.318,688,1.15,689,1.318,690,1.182,691,1.941,692,1.182,693,1.119,694,1.119,695,1.736,696,1.182,697,1.215,698,1.318,699,1.15,700,1.318,701,1.182,702,1.318,703,1.182,704,1.318,705,1.119,706,1.318,707,1.15,708,1.318,709,1.182,710,1.283,711,1.318,712,1.15,713,1.089,714,1.318,715,1.15,716,1.318,717,1.119,718,1.318,719,1.15,720,1.248,721,1.182,722,1.318,723,1.215,724,1.318,725,1.182,726,1.318,727,1.15,728,1.318,729,1.182,730,1.248,731,1.182,732,1.15,733,1.283,734,1.004,735,1.15,736,1.318,737,1.15,738,1.318,739,1.15,740,1.318,741,1.15,742,1.318,743,1.15,744,1.318,745,1.15,746,1.318,747,1.15,748,1.318,749,1.15,750,1.248,751,1.318,769,1.702,830,1.926,839,1.393,1220,1.56,1460,2.687,1486,4.593,1669,6.388,1670,5.909,1671,3.826,1672,6.312,1673,6.312,1674,7.057,1675,7.057,1676,7.057,1677,6.312,1678,6.199,1679,7.057,1680,4.793,1681,4.793,1682,4.793,1683,4.793,1684,4.793,1685,4.793,1686,3.826,1687,3.826,1688,4.793,1689,4.793,1690,4.793]],["title/classes/Container.html",[0,0.015,1691,2.652]],["body/classes/Container.html",[0,0.02,2,2.329,3,0.24,4,0.2,5,0.108,7,1.576,9,0.216,10,0.77,13,0.853,17,2.371,22,0.616,24,1.093,25,0.011,26,0.546,27,0.288,28,0.667,49,0.77,52,2.253,58,1.061,60,0.5,65,3.504,71,0.2,76,2.487,77,0.207,83,0.007,84,0.009,85,0.007,108,0.825,155,1.181,171,2.386,202,2.329,268,3.276,396,2.773,408,5.687,475,5.687,530,4.182,642,4.962,730,1.51,731,1.43,752,0.939,919,4.004,1219,4.757,1691,4.962,1692,4.628,1693,6.258,1694,6.258,1695,6.157,1696,7.125,1697,6.775,1698,5.02,1699,5.798,1700,6.258,1701,6.258,1702,5.798,1703,6.258,1704,6.258,1705,5.941,1706,5.798,1707,5.798,1708,5.798,1709,6.258,1710,5.093,1711,5.093,1712,5.093,1713,5.093,1714,5.093,1715,5.093,1716,6.258,1717,5.093]],["title/components/CoreBreadcrumbComponent.html",[175,0.209,674,1.06]],["body/components/CoreBreadcrumbComponent.html",[0,0.016,3,0.136,4,0.161,5,0.115,7,1.642,9,0.174,13,0.743,19,0.834,22,0.496,25,0.011,26,0.534,28,0.581,33,1.285,44,1.132,45,1.121,48,1.449,49,0.505,52,1.962,57,0.981,58,0.696,68,3.478,71,0.161,73,0.373,77,0.181,83,0.006,84,0.007,85,0.006,92,4.582,114,0.767,115,1.541,122,1.642,140,1.196,155,0.952,167,0.76,175,0.339,209,0.738,282,1.962,358,2.083,407,1.425,411,1.755,418,1.091,441,1.121,450,3.196,467,1.184,476,4.286,520,3.828,544,3.196,546,1.091,551,3.643,552,4.954,558,5.451,562,4.582,585,1.782,627,1.152,628,1.184,629,1.217,630,1.285,633,1.006,634,1.431,636,1.23,638,1.23,652,1.184,653,1.616,654,2.042,655,1.285,656,1.285,657,1.062,658,1.285,659,1.121,660,1.285,661,1.121,662,1.285,663,1.152,664,1.285,665,1.152,666,1.285,667,1.152,668,1.285,669,1.152,670,1.217,671,1.285,672,1.152,673,1.707,674,1.831,675,2.111,676,1.285,677,1.152,678,1.285,679,1.152,680,1.285,681,1.121,682,1.285,683,1.285,684,1.121,685,1.285,686,1.152,687,1.285,688,1.121,689,1.285,690,1.152,691,1.917,692,1.152,693,1.091,694,1.091,695,1.707,696,1.152,697,1.184,698,1.285,699,1.121,700,1.285,701,1.152,702,1.285,703,1.152,704,1.285,705,1.091,706,1.285,707,1.121,708,1.285,709,1.152,710,1.25,711,1.285,712,1.121,713,1.062,714,1.285,715,1.121,716,1.285,717,1.091,718,1.285,719,1.121,720,1.217,721,1.152,722,1.285,723,1.184,724,1.285,725,1.152,726,1.285,727,1.121,728,1.285,729,1.152,730,1.217,731,1.152,732,1.121,733,1.25,734,0.978,735,1.121,736,1.285,737,1.121,738,1.285,739,1.121,740,1.285,741,1.121,742,1.285,743,1.121,744,1.285,745,1.121,746,1.285,747,1.121,748,1.285,749,1.121,750,1.217,751,1.285,755,2.14,756,2.14,831,2.853,972,3.828,1622,4.582,1718,6.121,1719,5.563,1720,4.104,1721,5.482,1722,8.233,1723,7.425,1724,6.206,1725,6.206,1726,6.206,1727,6.206,1728,6.206,1729,6.206,1730,4.286,1731,6.206,1732,6.206,1733,6.206,1734,6.206,1735,6.206,1736,6.206,1737,6.206,1738,4.672,1739,4.672]],["title/interfaces/CountryList.html",[752,0.567,774,2.799]],["body/interfaces/CountryList.html",[0,0.007,3,0.058,4,0.068,5,0.037,7,0.721,9,0.074,10,0.352,11,0.663,19,0.237,25,0.011,27,0.122,28,0.305,29,0.718,35,0.269,36,0.891,37,0.546,42,1.053,58,0.718,60,0.415,71,0.166,73,0.158,75,0.382,77,0.167,83,0.002,84,0.004,85,0.002,87,0.438,106,0.392,108,0.377,114,0.245,115,0.721,116,1.193,118,0.663,119,0.682,120,0.313,122,0.438,123,0.821,124,0.821,127,1.062,128,0.724,129,2.068,130,0.608,144,1.524,148,1.31,151,1.499,152,1.31,155,1.856,156,1.278,157,0.91,159,0.849,167,0.322,168,1.019,169,1.095,175,0.159,180,0.724,182,1.399,183,1.58,184,1.092,185,1.221,186,1.092,189,1.221,195,0.854,200,1.58,201,1.58,202,0.795,204,1.58,283,0.392,286,0.849,312,0.91,332,1.738,356,0.703,407,0.313,544,1.019,548,2.386,549,0.944,556,1.58,565,1.062,629,0.515,634,0.313,636,0.392,638,0.392,677,0.488,752,0.548,754,0.663,755,1.124,756,1.124,761,1.062,763,1.025,764,1.388,769,0.703,774,3.469,775,1.614,776,1.367,777,2.251,804,1.764,807,0.918,832,2.011,838,1.162,839,0.575,860,0.849,910,0.575,933,1.019,937,2.407,940,1.461,1032,4.681,1071,1.162,1091,1.476,1094,1.738,1285,1.447,1314,0.879,1324,1.109,1326,1.109,1328,0.98,1332,1.019,1357,1.062,1358,1.288,1359,1.221,1361,1.288,1362,1.447,1363,1.367,1364,1.367,1365,1.367,1375,0.821,1376,1.353,1377,0.821,1378,1.353,1379,1.353,1380,1.353,1381,0.821,1382,0.821,1383,1.353,1384,1.353,1385,0.821,1386,0.821,1387,0.821,1388,0.821,1389,0.821,1390,1.353,1391,1.31,1392,0.821,1393,1.353,1394,1.353,1395,0.821,1396,1.353,1397,0.821,1398,0.821,1399,0.821,1400,0.821,1401,2,1402,0.821,1403,0.821,1404,0.821,1405,0.821,1406,0.821,1407,0.821,1408,0.821,1409,0.821,1410,0.821,1411,0.821,1412,0.821,1413,0.821,1414,0.821,1415,0.821,1416,0.821,1417,0.821,1418,1.353,1419,0.821,1420,0.821,1421,0.821,1422,0.821,1423,0.821,1424,0.821,1425,0.821,1426,0.821,1427,0.821,1428,0.821,1429,0.821,1430,0.821,1431,0.821,1432,1.353,1433,0.821,1434,0.821,1435,0.821,1436,0.821,1437,0.821,1438,0.682,1439,0.821,1440,0.821,1441,0.821,1442,0.821,1443,0.821,1444,0.821,1445,0.821,1446,0.821,1448,1.062,1450,1.109,1740,1.738,1741,4.157,1742,9.109,1743,3.26,1744,1.979,1745,1.979,1746,1.979,1747,1.979,1748,7.424,1749,1.979,1750,1.979,1751,1.979,1752,1.979,1753,1.979,1754,1.979,1755,3.26,1756,1.979,1757,1.979,1758,1.979,1759,1.979,1760,1.979,1761,1.979,1762,1.979,1763,1.979,1764,1.979,1765,1.979,1766,1.979,1767,1.979,1768,1.979,1769,1.979,1770,1.979,1771,1.979,1772,1.979,1773,1.979,1774,1.979,1775,1.979,1776,1.979,1777,1.979,1778,1.979,1779,1.979,1780,1.979,1781,1.979,1782,1.979,1783,1.979,1784,1.979,1785,1.979,1786,1.979,1787,1.979,1788,1.979,1789,1.979,1790,1.979,1791,1.979,1792,1.979,1793,1.979,1794,1.979,1795,1.979,1796,1.979,1797,1.979,1798,1.979,1799,1.979,1800,1.979,1801,1.979,1802,3.26,1803,1.979,1804,1.979,1805,1.979,1806,1.979,1807,1.979,1808,1.979,1809,1.979,1810,1.979,1811,1.979,1812,3.847,1813,1.979,1814,1.979,1815,1.979,1816,2.251,1817,1.979,1818,1.979,1819,3.26,1820,1.979,1821,1.979,1822,1.979,1823,1.979,1824,1.979,1825,1.979,1826,1.979,1827,1.979,1828,1.979,1829,1.979,1830,1.979,1831,1.979,1832,1.979,1833,1.979,1834,1.979,1835,1.979,1836,1.979,1837,1.979,1838,1.979,1839,1.738,1840,1.979,1841,1.979,1842,7.206,1843,1.979,1844,1.979,1845,1.979,1846,1.979,1847,1.979,1848,3.26,1849,1.979,1850,1.979,1851,1.979,1852,1.979,1853,1.979,1854,1.979,1855,1.979,1856,1.979,1857,1.979,1858,1.979,1859,3.26,1860,1.979,1861,4.157,1862,1.979,1863,1.979,1864,1.979,1865,1.979,1866,1.979,1867,1.979,1868,1.979,1869,1.979,1870,1.979,1871,1.979,1872,1.979,1873,1.979,1874,1.979,1875,1.979,1876,1.979,1877,1.979,1878,1.979,1879,1.979,1880,1.979,1881,1.979,1882,1.979,1883,1.979,1884,1.979,1885,1.979,1886,1.979,1887,1.979,1888,1.979,1889,1.979,1890,1.979,1891,1.979,1892,1.979,1893,1.979,1894,1.979,1895,1.979,1896,4.819,1897,1.979,1898,1.979,1899,1.979,1900,1.979,1901,1.979,1902,1.979,1903,1.979,1904,1.979,1905,1.979,1906,1.979,1907,1.979,1908,1.979,1909,1.979,1910,1.979,1911,1.979,1912,1.979,1913,1.979,1914,1.979,1915,4.819,1916,1.979,1917,1.979,1918,1.979,1919,1.979,1920,1.979,1921,1.58,1922,1.979,1923,1.979,1924,1.979,1925,1.979,1926,1.979,1927,3.26,1928,1.979,1929,1.979,1930,1.979,1931,1.979,1932,1.738,1933,1.979,1934,1.979,1935,1.979,1936,1.979,1937,1.979,1938,1.979,1939,1.979,1940,1.979,1941,1.979,1942,1.979,1943,1.979,1944,1.979,1945,1.979,1946,1.979,1947,1.979,1948,1.979,1949,1.979,1950,1.979,1951,1.979,1952,1.979,1953,1.979,1954,1.979,1955,1.979,1956,1.979,1957,1.979,1958,1.979,1959,1.979,1960,1.979,1961,1.979,1962,1.979,1963,1.979,1964,1.979,1965,1.979,1966,1.979,1967,1.979,1968,1.979,1969,1.979,1970,1.979,1971,1.979,1972,1.979,1973,1.979,1974,1.979,1975,1.979,1976,1.979,1977,1.979,1978,1.979,1979,1.979,1980,1.979,1981,1.979,1982,1.979,1983,1.979,1984,1.979,1985,1.979,1986,1.979,1987,1.979,1988,1.979,1989,1.979,1990,1.979,1991,1.979,1992,1.979,1993,1.979,1994,1.979,1995,1.979,1996,1.979,1997,1.979,1998,1.979,1999,1.979,2000,1.979,2001,1.979,2002,1.979,2003,3.26,2004,3.26,2005,1.979,2006,1.979,2007,1.979,2008,1.979,2009,1.979,2010,3.26,2011,1.979,2012,1.979,2013,1.979,2014,1.979,2015,1.979,2016,1.979,2017,1.979,2018,1.979,2019,1.979,2020,1.979,2021,1.979,2022,1.979,2023,1.979,2024,1.979,2025,1.979,2026,1.979,2027,1.979,2028,1.979,2029,1.979,2030,1.979,2031,1.979,2032,1.979,2033,1.979,2034,1.979,2035,1.979,2036,1.979,2037,1.979,2038,1.979,2039,1.979,2040,1.979,2041,1.979,2042,1.979,2043,1.979,2044,1.979,2045,1.979,2046,1.979,2047,1.979,2048,1.979,2049,1.979,2050,1.979,2051,1.979,2052,1.979,2053,1.979,2054,1.979,2055,1.979,2056,1.979,2057,1.979,2058,1.979,2059,1.979,2060,3.651,2061,1.979,2062,1.979,2063,1.979,2064,1.979,2065,1.979,2066,1.979,2067,1.979,2068,1.979,2069,1.979,2070,1.979,2071,1.979,2072,1.979,2073,1.979,2074,1.979,2075,1.979,2076,1.979,2077,3.26,2078,1.979,2079,1.979,2080,1.979,2081,1.979,2082,1.979,2083,1.979,2084,1.979,2085,1.979,2086,1.979,2087,1.979,2088,1.979,2089,1.979,2090,1.979,2091,1.979,2092,1.979,2093,1.979,2094,1.979,2095,1.979,2096,1.979,2097,1.979,2098,1.979,2099,1.979,2100,1.979,2101,1.979,2102,1.979,2103,1.979,2104,1.979,2105,1.979,2106,1.979,2107,1.979,2108,1.979,2109,1.979,2110,1.979,2111,1.979,2112,1.979,2113,1.979,2114,1.738,2115,1.979,2116,1.979,2117,1.979,2118,1.979,2119,1.979,2120,1.979,2121,1.979,2122,1.979,2123,1.979,2124,1.979,2125,1.979,2126,1.979,2127,1.979,2128,1.979,2129,1.979,2130,1.979,2131,1.979,2132,1.979,2133,1.979,2134,1.979,2135,1.979,2136,1.979,2137,1.979,2138,1.979,2139,1.979,2140,1.979,2141,1.979,2142,6.062,2143,1.979,2144,1.979,2145,1.979,2146,1.979,2147,1.979,2148,1.979,2149,1.979,2150,1.979,2151,1.979,2152,1.979,2153,1.979,2154,1.979,2155,1.979,2156,1.979,2157,3.26,2158,1.979,2159,1.979,2160,1.979,2161,1.979,2162,1.979,2163,1.979,2164,1.979,2165,1.979,2166,1.979,2167,1.979,2168,1.979,2169,1.979,2170,1.979,2171,1.979,2172,1.979,2173,1.979,2174,1.979,2175,1.979,2176,1.979,2177,1.979,2178,1.979,2179,1.979,2180,1.979,2181,1.979,2182,1.979,2183,1.979,2184,1.979,2185,1.979,2186,1.979,2187,1.979,2188,1.979,2189,1.979,2190,1.979,2191,1.979,2192,1.979,2193,1.979,2194,1.979,2195,1.979,2196,1.979,2197,1.979,2198,4.819,2199,1.979,2200,1.979,2201,1.979,2202,1.979,2203,3.26,2204,1.979,2205,1.979,2206,1.979,2207,1.979,2208,1.979,2209,1.979,2210,1.979,2211,1.979,2212,1.979,2213,1.979,2214,1.979,2215,1.979,2216,1.979,2217,1.979,2218,1.979,2219,1.979,2220,1.979,2221,1.979,2222,1.979,2223,1.979,2224,3.26,2225,1.979,2226,1.979,2227,1.979,2228,1.979,2229,1.979,2230,1.979,2231,5.329,2232,1.979,2233,1.979,2234,1.979,2235,1.979,2236,1.979,2237,1.979,2238,1.979,2239,1.979,2240,1.979,2241,1.979,2242,1.979,2243,1.979,2244,1.979,2245,1.979,2246,1.979,2247,1.979,2248,1.979,2249,1.979,2250,1.979,2251,1.979,2252,1.979,2253,1.979,2254,1.979,2255,1.979,2256,1.979,2257,1.979,2258,1.979,2259,1.979,2260,1.979,2261,1.979,2262,1.979,2263,1.979,2264,1.979,2265,1.979,2266,1.979,2267,1.979,2268,1.979,2269,1.979,2270,1.979,2271,1.979,2272,1.979,2273,1.979,2274,1.979,2275,1.979,2276,1.979,2277,1.979,2278,3.26,2279,1.979,2280,1.979,2281,1.979,2282,1.979,2283,1.979,2284,1.979,2285,1.979,2286,1.979,2287,1.979,2288,1.979,2289,1.979,2290,1.979,2291,1.979,2292,1.979,2293,1.738,2294,1.979,2295,1.979,2296,1.979,2297,1.979,2298,1.979,2299,1.58,2300,1.162,2301,1.288,2302,1.367,2303,1.738,2304,1.58,2305,1.367,2306,1.738]],["title/interfaces/DateErrorMsg.html",[752,0.567,2307,3.175]],["body/interfaces/DateErrorMsg.html",[0,0.012,3,0.096,4,0.114,5,0.061,7,1.077,9,0.123,10,0.527,11,1.108,19,0.396,25,0.011,27,0.274,28,0.766,29,0.861,33,0.91,35,0.924,37,0.968,39,1.577,42,2.075,43,1.941,48,1.138,49,0.358,52,1.046,58,0.95,60,0.494,66,1.775,71,0.235,72,1.419,73,0.264,74,2.116,75,0.638,77,0.168,83,0.004,84,0.006,85,0.004,87,0.731,93,1.853,106,0.965,107,2.412,108,0.823,109,1.941,114,0.409,115,1.077,116,1.783,118,1.108,119,1.14,120,0.77,122,0.731,130,1.497,137,1.046,142,1.14,144,1.54,145,1.14,155,0.674,167,0.538,169,1.294,171,1.631,173,2.933,175,0.392,180,1.783,182,1.419,184,1.108,186,1.936,188,1.076,192,2.442,195,0.863,199,2.162,202,2.323,252,2.323,253,3.17,256,2.116,282,1.046,283,0.965,284,1.14,286,1.419,288,1.076,291,2.284,296,2.64,307,2.04,312,2.659,318,2.284,321,1.329,325,1.076,338,2.136,346,1.416,356,1.175,359,1.046,360,1.456,391,2.528,396,1.287,397,2.614,407,0.523,411,1.635,446,2.614,460,3.888,469,2.152,504,1.577,505,1.703,507,2.284,527,2.64,536,2.152,539,2.567,566,2.859,567,2.442,570,2.481,585,1.169,634,0.523,636,0.655,638,0.655,650,3.814,653,0.861,681,1.169,752,0.84,754,1.108,755,1.68,756,1.68,763,1.201,764,1.268,765,2.73,766,2.323,767,1.957,768,2.322,769,1.175,790,1.637,791,3.394,792,2.04,793,1.775,794,1.468,807,0.996,830,1.329,839,0.961,850,2.508,852,4.426,864,3.004,880,1.853,894,1.287,909,2.284,931,3.004,965,2.284,1025,1.941,1031,2.152,1050,2.73,1051,3.004,1052,2.412,1053,3.744,1071,1.941,1104,1.521,1203,2.442,1220,1.585,1221,2.152,1293,2.152,1313,2.442,1375,1.372,1376,2.021,1377,1.372,1378,2.021,1379,2.021,1380,2.021,1381,1.372,1382,1.372,1383,2.021,1384,2.021,1385,1.372,1386,1.372,1387,1.372,1388,1.372,1389,1.372,1390,2.021,1391,2.323,1392,1.372,1393,2.021,1394,2.021,1395,1.372,1396,2.021,1397,1.372,1398,1.372,1399,1.372,1400,1.372,1401,2.647,1402,1.372,1403,1.372,1404,1.372,1405,1.372,1406,1.372,1407,1.372,1408,1.372,1409,1.372,1410,1.372,1411,1.372,1412,1.372,1413,1.372,1414,1.372,1415,1.372,1416,1.372,1417,1.372,1418,2.021,1419,1.372,1420,1.372,1421,1.372,1422,1.372,1423,1.372,1424,1.372,1425,1.372,1426,1.372,1427,1.372,1428,1.372,1429,1.372,1430,1.372,1431,1.372,1432,2.021,1433,1.372,1434,1.372,1435,1.372,1436,1.372,1437,1.372,1438,1.14,1439,1.372,1440,1.372,1441,1.372,1442,1.372,1443,1.372,1444,1.372,1445,1.372,1446,1.372,1460,2.73,1479,3.382,1506,3.241,1515,1.577,1560,3.888,1597,5.371,1634,2.04,1657,2.152,2307,4.269,2308,2.442,2309,3.888,2310,3.364,2311,6.46,2312,6.46,2313,6.46,2314,6.46,2315,6.767,2316,3.364,2317,3.596,2318,3.763,2319,3.596,2320,5.603,2321,3.596,2322,4.278,2323,5.973,2324,4.278,2325,6.024,2326,2.442,2327,5.871,2328,2.905,2329,2.64,2330,2.905,2331,2.905,2332,2.905,2333,2.04,2334,1.853,2335,2.905,2336,2.905,2337,2.905,2338,5.678,2339,2.905,2340,2.905,2341,2.905,2342,3.888,2343,4.278,2344,4.278,2345,4.278,2346,3.004,2347,4.278,2348,2.905,2349,2.442,2350,2.905,2351,2.905,2352,2.905,2353,2.905,2354,4.615,2355,2.64,2356,3.888,2357,5.079,2358,1.775,2359,2.905,2360,2.905,2361,2.284,2362,4.278,2363,2.64,2364,2.905,2365,4.71,2366,2.64,2367,2.905,2368,2.905,2369,2.905,2370,2.905,2371,2.905,2372,3.364,2373,2.905,2374,3.596,2375,2.905,2376,3.596,2377,2.905,2378,2.905,2379,2.905,2380,2.905,2381,2.905,2382,2.905,2383,2.905,2384,2.905,2385,2.905,2386,3.596,2387,6.248,2388,2.905,2389,2.905,2390,2.905,2391,2.905,2392,2.905,2393,2.905,2394,2.905,2395,2.905,2396,2.905,2397,2.905,2398,2.905,2399,2.905,2400,2.905,2401,2.905,2402,4.278,2403,2.905,2404,4.278,2405,2.905,2406,2.64,2407,2.905,2408,5.603,2409,3.596,2410,5.079,2411,2.905,2412,2.905,2413,4.615,2414,2.905,2415,2.905,2416,2.905,2417,2.442,2418,2.152,2419,2.64,2420,2.905,2421,2.64,2422,2.905,2423,2.905,2424,2.64,2425,2.905,2426,4.278,2427,3.596,2428,2.905,2429,2.905,2430,2.905,2431,2.905,2432,2.64,2433,2.905,2434,2.905,2435,2.905,2436,2.905,2437,2.152]],["title/directives/DateFieldFormatDirective.html",[209,0.679,735,1.032]],["body/directives/DateFieldFormatDirective.html",[0,0.022,3,0.182,4,0.216,5,0.116,9,0.233,22,0.595,25,0.011,27,0.233,71,0.216,73,0.499,77,0.182,83,0.007,84,0.009,85,0.007,169,1.259,195,1.321,199,3.537,209,1.178,338,2.092,494,1.766,633,1.344,634,1.178,734,1.308,735,1.789,763,1.838,764,2.075,807,1.076,1079,2.647,1091,2.83,1325,3.667,2300,4.375,2438,6.998,2439,5.487,2440,7.454,2441,7.967,2442,6.547,2443,6.247,2444,5.487,2445,6.247,2446,5.95,2447,6.247,2448,4.986,2449,6.247,2450,6.247,2451,6.247,2452,6.247,2453,6.247,2454,6.247,2455,8.431,2456,6.247,2457,6.247,2458,7.454,2459,6.247,2460,6.247,2461,6.247]],["title/components/DatepickerComponent.html",[175,0.209,681,1.032]],["body/components/DatepickerComponent.html",[0,0.009,3,0.071,4,0.084,5,0.072,7,1.205,9,0.091,10,0.417,11,1.604,13,0.462,19,0.573,22,0.675,24,1.051,25,0.011,26,0.565,27,0.307,28,0.641,29,0.94,32,0.878,33,0.671,35,1.059,36,0.903,37,0.912,39,1.164,42,1.831,43,1.432,44,0.704,45,0.586,48,1.474,49,0.797,52,1.221,57,0.61,58,1.098,60,0.432,66,1.31,71,0.205,72,1.047,73,0.195,74,1.993,75,0.47,77,0.139,83,0.003,84,0.005,85,0.003,87,0.854,89,0.95,93,1.368,94,0.817,106,0.949,107,2.697,108,0.73,109,1.432,114,0.477,115,1.06,116,1.753,118,1.604,119,1.652,120,1.083,121,1.371,122,1.205,123,1.602,124,1.602,128,1.413,130,0.75,134,0.75,135,0.921,136,0.841,137,1.221,138,0.817,139,0.893,140,0.924,142,1.331,144,1.722,145,1.331,155,0.497,167,0.628,169,1.218,171,1.824,173,1.775,175,0.375,180,1.413,182,1.047,184,0.817,186,1.604,188,1.256,192,1.802,195,0.684,199,1.083,202,2.384,209,0.386,252,1.551,253,3.545,256,2.172,282,0.772,283,0.765,284,1.331,286,1.656,288,1.256,291,1.685,296,3.082,307,1.505,312,2.203,318,1.685,321,0.98,325,0.794,338,1.824,346,1.583,356,1.371,359,1.221,360,1.628,391,2.295,396,1.503,397,1.31,407,1.365,411,1.678,418,0.57,441,0.586,446,2.571,460,4.347,467,0.618,469,1.588,504,1.164,505,1.257,507,2.666,527,1.948,536,1.588,539,2.418,546,0.57,566,3.197,567,2.851,570,2.546,585,1.514,627,0.602,628,0.618,629,0.635,630,0.671,633,0.525,634,1.38,636,0.765,638,0.765,650,3.896,652,0.618,653,1.247,654,1.498,655,0.671,656,0.671,657,0.555,658,0.671,659,0.586,660,0.671,661,0.586,662,0.671,663,0.602,664,0.671,665,0.602,666,0.671,667,0.602,668,0.671,669,0.602,670,0.635,671,0.671,672,0.602,673,1.062,674,0.602,675,0.635,676,0.671,677,0.602,678,0.671,679,0.602,680,0.671,681,1.514,682,0.671,683,0.671,684,0.586,685,0.671,686,0.602,687,0.671,688,0.586,689,0.671,690,0.602,691,1.318,692,0.602,693,0.57,694,0.57,695,1.062,696,0.602,697,0.618,698,0.671,699,0.586,700,0.671,701,0.602,702,0.671,703,0.602,704,0.671,705,0.57,706,0.671,707,0.586,708,0.671,709,0.602,710,0.653,711,0.671,712,0.586,713,0.555,714,0.671,715,0.586,716,0.671,717,0.57,718,0.671,719,0.586,720,0.635,721,0.602,722,0.671,723,0.618,724,0.671,725,0.602,726,0.671,727,0.586,728,0.671,729,0.602,730,0.635,731,0.602,732,0.586,733,0.653,734,0.511,735,0.586,736,0.671,737,0.586,738,0.671,739,0.586,740,0.671,741,0.586,742,0.671,743,0.586,744,0.671,745,0.586,746,0.671,747,0.586,748,0.671,749,0.586,750,0.635,751,0.671,752,0.718,755,1.331,756,1.331,763,0.952,764,1.247,765,2.685,766,2.384,767,1.925,768,2.284,769,0.867,790,1.208,791,3.197,792,1.505,793,1.31,794,1.714,807,0.825,830,0.98,839,0.709,850,2.805,852,4.703,864,2.955,880,2.164,894,0.95,909,1.685,931,2.955,965,1.685,1025,1.432,1031,1.588,1050,1.368,1051,1.505,1052,1.208,1053,2.812,1069,1.368,1071,1.432,1079,1.371,1091,0.867,1104,1.775,1203,1.802,1220,1.256,1221,2.513,1293,1.588,1313,1.802,1375,1.013,1376,1.602,1377,1.013,1378,1.602,1379,1.602,1380,1.602,1381,1.013,1382,1.013,1383,1.602,1384,1.602,1385,1.013,1386,1.013,1387,1.013,1388,1.013,1389,1.013,1390,1.602,1391,1.925,1392,1.013,1393,1.602,1394,1.602,1395,1.013,1396,1.602,1397,1.013,1398,1.013,1399,1.013,1400,1.013,1401,2.26,1402,1.013,1403,1.013,1404,1.013,1405,1.013,1406,1.013,1407,1.013,1408,1.013,1409,1.013,1410,1.013,1411,1.013,1412,1.013,1413,1.013,1414,1.013,1415,1.013,1416,1.013,1417,1.013,1418,1.602,1419,1.013,1420,1.013,1421,1.013,1422,1.013,1423,1.013,1424,1.013,1425,1.013,1426,1.013,1427,1.013,1428,1.013,1429,1.013,1430,1.013,1431,1.013,1432,1.602,1433,1.013,1434,1.013,1435,1.013,1436,1.013,1437,1.013,1438,0.841,1439,1.013,1440,1.013,1441,1.013,1442,1.013,1443,1.013,1444,1.013,1445,1.013,1446,1.013,1460,2.164,1479,2.901,1506,3.704,1515,1.841,1560,3.082,1597,5.486,1634,1.505,1657,2.513,2307,3.537,2308,1.802,2309,1.948,2310,1.685,2311,4.208,2312,4.208,2313,4.208,2314,4.208,2315,4.784,2316,1.685,2317,1.802,2318,3.545,2319,1.802,2320,2.143,2321,4.021,2322,4.208,2323,6.347,2324,4.208,2325,6.151,2326,1.802,2327,6.074,2328,3.391,2329,3.082,2330,3.391,2331,3.391,2332,3.391,2333,2.381,2334,2.164,2335,3.391,2336,3.391,2337,3.391,2338,5.885,2339,3.391,2340,4.208,2341,5.212,2342,4.347,2343,5.212,2344,4.784,2345,4.784,2346,3.359,2347,5.212,2348,3.391,2349,2.851,2350,3.391,2351,3.391,2352,4.208,2353,3.391,2354,4.347,2355,3.082,2356,4.347,2357,5.542,2358,2.072,2359,3.391,2360,4.208,2361,2.666,2362,4.784,2363,3.082,2364,3.391,2365,4.88,2366,1.948,2367,3.391,2368,4.208,2369,3.391,2370,4.208,2371,3.391,2372,2.666,2373,2.143,2374,2.851,2375,2.143,2376,2.851,2377,2.143,2378,3.391,2379,2.143,2380,2.143,2381,2.143,2382,2.143,2383,2.143,2384,3.391,2385,2.143,2386,2.851,2387,5.542,2388,2.143,2389,2.143,2390,2.143,2391,2.143,2392,2.143,2393,2.143,2394,2.143,2395,2.143,2396,2.143,2397,2.143,2398,2.143,2399,2.143,2400,2.143,2401,2.143,2402,3.391,2403,2.143,2404,3.391,2405,2.143,2406,1.948,2407,2.143,2408,4.784,2409,2.851,2410,4.208,2411,2.143,2412,2.143,2413,3.824,2414,2.143,2415,2.143,2416,2.143,2417,1.802,2418,1.588,2419,1.948,2420,2.143,2421,1.948,2422,2.143,2423,2.143,2424,1.948,2425,3.391,2426,3.391,2427,2.851,2428,2.143,2429,2.143,2430,4.784,2431,2.143,2432,1.948,2433,2.143,2434,4.208,2435,2.143,2436,3.391,2437,2.513,2462,3.861,2463,3.861,2464,3.861,2465,2.851,2466,3.861,2467,2.44,2468,2.44,2469,2.44,2470,2.44,2471,2.44,2472,2.44,2473,2.44,2474,2.44,2475,2.44,2476,2.44,2477,2.44,2478,2.44,2479,2.44,2480,2.44,2481,2.44,2482,2.44,2483,2.44,2484,2.44,2485,2.44,2486,2.44,2487,2.44,2488,2.44,2489,2.44,2490,2.44,2491,2.44,2492,2.44,2493,2.44,2494,3.861,2495,3.861,2496,3.861,2497,3.861,2498,3.861,2499,3.861,2500,3.861]],["title/injectables/DefaultPageGuardService.html",[339,1.44,2501,3.175]],["body/injectables/DefaultPageGuardService.html",[0,0.02,3,0.164,4,0.194,5,0.104,9,0.21,10,0.756,13,0.836,14,1.829,19,0.836,22,0.654,24,1.167,25,0.011,26,0.583,27,0.297,28,0.712,29,1.284,35,1.034,36,0.741,37,1.17,49,0.823,57,1.372,58,0.837,60,0.438,69,3.157,71,0.263,73,0.449,77,0.164,83,0.007,84,0.008,85,0.007,108,0.809,114,0.695,120,1.318,155,1.145,235,3.103,283,1.114,339,2.341,340,5.496,341,3.017,342,3.882,343,3.918,346,2.032,357,4.827,358,2.089,359,2.21,360,2.089,362,5.496,363,6.682,365,4.938,910,2.313,1205,6.072,1213,6.072,1244,4.938,1246,6.072,1255,3.017,1256,3.017,1258,5.58,2501,5.877,2502,7.329,2503,6.99,2504,5.621,2505,5.431,2506,6.99,2507,5.621,2508,5.621,2509,5.621,2510,5.621,2511,4.938,2512,5.621]],["title/components/DropdownComponent.html",[175,0.209,546,1.004]],["body/components/DropdownComponent.html",[0,0.014,3,0.12,4,0.143,5,0.106,7,1.563,9,0.154,10,0.618,13,0.684,19,0.684,22,0.688,24,1.084,25,0.011,26,0.602,27,0.317,28,0.718,29,1.142,32,1.3,35,1.118,36,1.084,37,0.958,42,1.879,44,1.043,45,0.994,48,1.336,49,0.708,57,0.904,58,1.142,60,0.468,71,0.226,73,0.331,75,0.798,77,0.12,83,0.005,84,0.007,85,0.005,87,1.265,89,1.612,94,1.387,106,1.134,114,0.707,115,0.916,116,2.398,118,2.194,119,2.259,120,1.342,121,2.031,123,2.374,124,2.374,128,2.093,130,2.498,134,1.273,135,1.563,136,1.428,137,1.31,138,1.387,139,1.516,140,1.263,142,1.972,144,2.234,145,1.972,148,2.979,152,2.298,161,2.298,167,0.674,169,1.284,175,0.319,182,1.777,184,1.387,186,1.387,209,0.654,321,2.298,407,1.416,418,0.967,441,0.994,467,1.049,495,4.566,546,1.65,585,1.373,627,1.021,628,1.049,629,1.078,630,1.139,633,0.891,634,1.423,636,1.134,638,1.134,652,1.049,653,1.489,654,1.943,655,1.139,656,1.139,657,0.941,658,1.139,659,0.994,660,1.139,661,0.994,662,1.139,663,1.021,664,1.139,665,1.021,666,1.139,667,1.021,668,1.139,669,1.021,670,1.078,671,1.139,672,1.021,673,1.573,674,1.021,675,1.078,676,1.139,677,1.021,678,1.139,679,1.021,680,1.139,681,0.994,682,1.139,683,1.139,684,0.994,685,1.139,686,1.021,687,1.139,688,0.994,689,1.139,690,1.021,691,1.802,692,1.021,693,0.967,694,0.967,695,1.573,696,1.021,697,1.049,698,1.139,699,0.994,700,1.139,701,1.021,702,1.139,703,1.021,704,1.139,705,0.967,706,1.139,707,0.994,708,1.139,709,1.021,710,1.108,711,1.139,712,0.994,713,0.941,714,1.139,715,0.994,716,1.139,717,0.967,718,1.139,719,0.994,720,1.078,721,1.021,722,1.139,723,1.049,724,1.139,725,1.021,726,1.139,727,0.994,728,1.139,729,1.021,730,1.078,731,1.021,732,0.994,733,1.108,734,0.867,735,0.994,736,1.139,737,0.994,738,1.139,739,0.994,740,1.139,741,0.994,742,1.139,743,0.994,744,1.139,745,0.994,746,1.139,747,0.994,748,1.139,749,0.994,750,1.078,751,1.139,766,1.664,768,1.975,769,1.471,839,1.204,1219,4.041,1285,3.291,1288,2.051,1310,2.051,1314,1.839,1326,3.672,2365,4.838,2413,3.306,2513,3.638,2514,5.719,2515,5.719,2516,6.551,2517,6.551,2518,6.551,2519,5.754,2520,5.719,2521,4.142,2522,4.142,2523,4.142,2524,4.142,2525,4.142,2526,4.142,2527,4.142,2528,4.142,2529,4.142,2530,4.142,2531,4.142,2532,4.142,2533,4.142,2534,4.142]],["title/directives/DuplicateCheckDirective.html",[209,0.679,737,1.032]],["body/directives/DuplicateCheckDirective.html",[0,0.02,3,0.165,4,0.196,5,0.106,9,0.212,13,0.843,22,0.562,24,0.873,25,0.011,26,0.436,27,0.285,28,0.532,29,1.049,32,1.6,33,1.565,49,0.615,60,0.489,71,0.243,73,0.454,75,1.097,77,0.205,83,0.007,84,0.008,85,0.007,106,1.516,108,0.951,114,0.871,156,2.351,169,1.113,188,2.723,195,1.008,202,2.829,209,1.113,211,4.287,282,1.799,297,3.339,346,2.047,359,2.227,360,2.105,391,2.803,479,2.615,501,4.929,551,3.339,609,3.395,633,1.224,634,1.113,670,1.481,734,1.191,737,1.918,1104,3.238,2535,6.718,2536,6.105,2537,4.996,2538,4.717,2539,6.718,2540,4.489,2541,8.483,2542,5.688,2543,3.508,2544,5.162,2545,5.688,2546,4.343,2547,3.702,2548,6.718,2549,5.688,2550,5.688,2551,3.508,2552,3.702,2553,4.2,2554,5.688]],["title/components/EmailComponent.html",[175,0.209,684,1.032]],["body/components/EmailComponent.html",[0,0.012,3,0.096,4,0.114,5,0.09,7,0.731,9,0.123,10,0.527,11,1.631,13,0.583,14,2.075,17,1.961,19,0.583,22,0.699,24,1.202,25,0.011,26,0.622,27,0.322,28,0.752,29,0.861,32,1.107,33,1.34,35,1.08,36,1.142,37,0.554,42,1.802,44,1.054,45,0.794,48,1.138,49,0.878,57,0.77,58,1.209,60,0.472,71,0.22,73,0.264,75,0.638,77,0.096,83,0.007,84,0.006,85,0.004,87,1.077,89,1.287,94,2.743,106,0.655,108,0.669,112,4.114,114,0.602,115,1.279,117,3.649,118,1.631,119,1.68,120,1.074,121,1.73,122,1.627,123,2.021,124,2.021,125,2.859,126,2.614,127,3.103,128,2.489,129,3.155,130,2.261,134,1.017,135,1.248,136,1.14,137,1.046,138,1.108,139,1.21,140,1.115,142,1.14,144,2.017,145,1.14,147,1.941,148,3.032,149,3.242,151,1.521,152,2.563,153,2.73,154,1.468,155,0.992,156,1.017,157,1.521,159,1.419,161,1.957,167,0.538,168,1.703,169,1.074,175,0.282,184,1.108,186,1.108,188,1.076,195,0.586,209,0.523,210,4.405,235,2.162,268,2.239,282,1.54,283,0.655,356,1.73,391,2.136,404,2.859,407,1.397,411,1.377,418,0.772,441,0.794,467,0.838,528,2.859,546,0.772,565,3.103,585,1.169,627,0.815,628,0.838,629,0.861,630,0.91,633,0.712,634,1.407,636,0.965,638,0.965,652,0.838,653,1.268,654,1.755,655,0.91,656,0.91,657,0.752,658,0.91,659,0.794,660,0.91,661,0.794,662,0.91,663,0.815,664,0.91,665,0.815,666,0.91,667,0.815,668,0.91,669,0.815,670,0.861,671,0.91,672,0.815,673,1.34,674,0.815,675,0.861,676,0.91,677,0.815,678,0.91,679,0.815,680,0.91,681,0.794,682,0.91,683,0.91,684,1.531,685,0.91,686,0.815,687,0.91,688,0.794,689,0.91,690,0.815,691,1.59,692,0.815,693,0.772,694,0.772,695,1.34,696,0.815,697,0.838,698,0.91,699,0.794,700,0.91,701,0.815,702,0.91,703,0.815,704,0.91,705,0.772,706,0.91,707,0.794,708,0.91,709,0.815,710,0.885,711,0.91,712,0.794,713,0.752,714,0.91,715,0.794,716,0.91,717,0.772,718,0.91,719,0.794,720,0.861,721,0.815,722,0.91,723,0.838,724,0.91,725,0.815,726,0.91,727,0.794,728,0.91,729,0.815,730,0.861,731,0.815,732,0.794,733,0.885,734,0.693,735,0.794,736,0.91,737,0.794,738,0.91,739,0.794,740,0.91,741,0.794,742,0.91,743,0.794,744,0.91,745,0.794,746,0.91,747,0.794,748,0.91,749,0.794,750,0.861,751,0.91,763,1.426,764,1.915,804,2.335,807,0.839,839,0.961,910,2.068,1079,1.73,1091,2.054,1285,3.019,1288,1.637,1292,3.596,1310,1.637,1314,1.468,1323,3.103,1324,3.241,1325,3.394,1327,3.566,1328,2.863,1332,2.508,1338,2.04,1339,2.04,1340,2.04,1344,2.152,1346,2.04,1349,2.04,1350,2.04,1351,2.04,1352,2.04,1353,2.04,1354,2.04,1355,2.04,1356,3.502,1369,2.04,1370,2.04,1371,2.04,1372,1.853,1374,1.853,1447,1.853,1448,1.775,1449,1.853,1450,1.853,1451,2.152,1452,3.004,2552,3.17,2553,3.596,2555,2.905,2556,3.596,2557,2.859,2558,4.278,2559,6.46,2560,4.871,2561,4.871,2562,3.241,2563,4.871,2564,3.307,2565,4.871,2566,3.307,2567,3.888,2568,3.307,2569,4.871,2570,3.307,2571,3.307,2572,3.307,2573,3.307,2574,3.307,2575,3.307,2576,3.307,2577,5.782,2578,3.17,2579,4.871,2580,4.871,2581,3.307,2582,3.307,2583,2.508,2584,4.871,2585,3.307,2586,3.307,2587,7.113,2588,2.64,2589,2.442,2590,2.64,2591,2.905,2592,3.307,2593,4.871]],["title/components/ErrorContainerComponent.html",[175,0.209,686,1.06]],["body/components/ErrorContainerComponent.html",[0,0.018,3,0.15,4,0.179,5,0.123,9,0.193,19,0.876,22,0.53,25,0.011,26,0.56,27,0.193,29,0.987,32,1.507,35,0.703,36,0.681,37,1.11,44,1.209,45,1.241,48,1.548,57,1.048,71,0.179,73,0.413,77,0.15,83,0.006,84,0.008,85,0.006,140,1.278,167,1.351,169,1.048,175,0.356,209,0.817,407,1.432,418,1.207,441,1.241,467,1.31,546,1.207,585,1.591,627,1.275,628,1.31,629,1.346,630,1.422,633,1.113,634,1.436,636,1.314,638,1.314,652,1.31,653,1.726,654,2.123,655,1.422,656,1.422,657,1.175,658,1.422,659,1.241,660,1.422,661,1.241,662,1.422,663,1.275,664,1.422,665,1.275,666,1.422,667,1.275,668,1.422,669,1.275,670,1.346,671,1.422,672,1.275,673,1.824,674,1.275,675,1.346,676,1.422,677,1.275,678,1.422,679,1.275,680,1.422,681,1.241,682,1.422,683,1.422,684,1.241,685,1.422,686,1.904,687,1.422,688,1.241,689,1.422,690,1.275,691,2.013,692,1.275,693,1.207,694,1.207,695,1.824,696,1.275,697,1.31,698,1.422,699,1.241,700,1.422,701,1.275,702,1.422,703,1.275,704,1.422,705,1.207,706,1.422,707,1.241,708,1.422,709,1.275,710,1.384,711,1.422,712,1.241,713,1.175,714,1.422,715,1.241,716,1.422,717,1.207,718,1.422,719,1.241,720,1.346,721,1.275,722,1.422,723,1.31,724,1.422,725,1.275,726,1.422,727,1.241,728,1.422,729,1.275,730,1.346,731,1.275,732,1.241,733,1.384,734,1.083,735,1.241,736,1.422,737,1.241,738,1.422,739,1.241,740,1.422,741,1.241,742,1.422,743,1.241,744,1.422,745,1.241,746,1.422,747,1.241,748,1.422,749,1.241,750,1.346,751,1.422,1691,4.089,2594,6.429,2595,5.842,2596,4.541,2597,6.63,2598,6.63,2599,7.319,2600,6.63]],["title/interfaces/ErrorMessage.html",[129,1.845,752,0.567]],["body/interfaces/ErrorMessage.html",[3,0.188,4,0.223,5,0.12,9,0.241,10,0.823,22,0.516,25,0.011,27,0.241,28,0.712,36,1.002,42,2.114,60,0.508,77,0.235,83,0.008,84,0.009,85,0.008,108,0.748,129,3.264,130,2.338,156,2.338,166,5.161,171,2.165,195,1.348,609,3.377,752,0.852,754,2.165,807,1.114,1356,3.918,1556,4.774,1587,3.795,2334,3.624,2583,3.33,2601,6.682,2602,5.679,2603,6.465,2604,5.679,2605,6.465,2606,5.679,2607,6.682,2608,5.161,2609,5.679,2610,6.465]],["title/interfaces/FileUploaderMsg.html",[752,0.567,2611,3.433]],["body/interfaces/FileUploaderMsg.html",[0,0.007,3,0.118,4,0.066,5,0.151,7,0.703,9,0.195,10,0.567,12,3.619,19,0.23,21,2.013,25,0.011,26,0.401,27,0.176,28,0.18,29,0.78,33,1.3,37,1.047,42,1.644,44,0.579,51,1.416,52,1.891,53,1.325,57,0.303,58,0.841,60,0.374,71,0.268,72,0.823,73,0.153,74,1.488,75,0.37,76,0.823,77,0.092,83,0.004,84,0.004,85,0.002,87,0.424,91,2.808,106,1.389,108,0.933,114,0.237,115,0.703,122,0.424,136,0.661,138,1.362,152,1.634,154,0.851,156,1.838,167,1.289,169,1.057,174,0.882,175,0.198,180,1.918,188,0.624,191,1.075,195,1.481,202,0.771,208,0.771,212,1.075,224,0.823,227,1.805,242,2.346,252,1.276,256,0.702,257,1.705,258,1.248,264,2.346,268,0.882,278,3.406,282,1.005,284,1.402,288,0.624,292,3.774,299,1.939,302,1.075,303,1.029,305,1.531,306,4.602,307,1.183,321,0.771,322,2.536,323,1.531,325,1.034,326,1.685,337,3.002,338,2.297,346,0.558,350,3.619,353,0.988,356,0.681,360,0.573,381,1.959,396,1.237,397,3.03,407,0.502,413,2.387,444,1.075,445,1.029,448,1.126,470,1.531,474,1.685,479,1.461,494,1.597,501,1.183,503,0.988,505,2.908,513,1.325,516,1.531,528,1.865,530,1.126,533,3.002,536,3.891,550,1.183,551,1.126,561,1.075,574,1.248,579,1.416,582,1.531,584,1.959,585,1.257,604,1.685,628,0.486,629,0.499,633,0.875,634,0.303,636,0.38,638,0.38,647,2.194,650,0.95,651,0.915,688,0.46,752,0.253,754,0.642,755,1.095,756,1.095,763,1.003,764,1.364,765,1.78,766,1.276,767,1.9,769,0.681,790,0.95,791,1.126,793,1.705,794,0.851,795,1.075,807,1.269,815,2.387,816,1.416,824,1.248,830,0.771,833,0.882,839,0.558,846,1.126,880,1.075,888,2.068,894,1.237,898,1.325,910,1.886,931,1.183,933,0.988,948,2.508,977,1.416,1053,1.865,1059,1.573,1083,1.531,1091,2.375,1092,4.32,1111,1.248,1155,1.78,1179,2.346,1191,1.325,1196,1.685,1220,1.945,1228,1.416,1293,2.068,1334,1.248,1358,2.068,1361,1.248,1375,0.796,1376,1.318,1377,0.796,1378,1.318,1379,1.318,1380,1.318,1381,0.796,1382,0.796,1383,1.318,1384,1.318,1385,0.796,1386,0.796,1387,0.796,1388,0.796,1389,0.796,1390,1.318,1391,1.276,1392,0.796,1393,1.318,1394,1.318,1395,0.796,1396,1.318,1397,0.796,1398,0.796,1399,0.796,1400,0.796,1401,1.962,1402,0.796,1403,0.796,1404,0.796,1405,0.796,1406,0.796,1407,0.796,1408,0.796,1409,0.796,1410,0.796,1411,0.796,1412,0.796,1413,0.796,1414,0.796,1415,0.796,1416,0.796,1417,0.796,1418,1.318,1419,0.796,1420,0.796,1421,0.796,1422,0.796,1423,0.796,1424,0.796,1425,0.796,1426,0.796,1427,0.796,1428,0.796,1429,0.796,1430,0.796,1431,0.796,1432,1.318,1433,0.796,1434,0.796,1435,0.796,1436,0.796,1437,0.796,1438,1.402,1439,0.796,1440,0.796,1441,0.796,1442,0.796,1443,0.796,1444,0.796,1445,0.796,1446,0.796,1461,4.981,1463,1.183,1464,1.865,1469,1.183,1473,3.315,1479,0.882,1480,1.183,1487,2.068,1488,2.646,1495,2.435,1501,2.068,1505,3.077,1506,3.844,1515,0.915,1519,1.865,1523,1.075,1529,1.248,1586,4.415,1592,2.79,1593,2.79,1633,1.865,1634,2.508,1636,1.531,1637,1.416,1643,1.325,1657,1.248,1932,1.685,2114,1.685,2301,1.248,2316,2.194,2318,1.248,2321,2.346,2334,1.075,2346,1.959,2355,1.531,2409,1.416,2446,1.531,2557,1.865,2606,2.79,2611,3.246,2612,1.685,2613,1.531,2614,2.79,2615,2.194,2616,1.918,2617,3.177,2618,1.918,2619,1.416,2620,1.325,2621,4.066,2622,4.508,2623,3.002,2624,1.918,2625,3.571,2626,2.508,2627,2.808,2628,3.177,2629,3.177,2630,1.918,2631,3.177,2632,3.177,2633,1.918,2634,3.177,2635,1.918,2636,1.918,2637,1.918,2638,1.918,2639,1.918,2640,1.918,2641,1.183,2642,1.918,2643,1.918,2644,1.918,2645,1.918,2646,3.571,2647,1.918,2648,3.246,2649,1.918,2650,3.177,2651,2.79,2652,3.177,2653,1.918,2654,3.177,2655,3.177,2656,1.918,2657,3.177,2658,3.177,2659,1.918,2660,1.183,2661,1.531,2662,1.685,2663,1.183,2664,1.531,2665,1.918,2666,1.918,2667,1.416,2668,1.416,2669,1.918,2670,4.066,2671,1.918,2672,1.918,2673,1.918,2674,1.918,2675,1.918,2676,1.918,2677,1.918,2678,1.918,2679,1.918,2680,1.918,2681,1.918,2682,1.918,2683,3.491,2684,1.918,2685,1.918,2686,1.531,2687,1.918,2688,1.918,2689,7.142,2690,1.918,2691,1.918,2692,1.685,2693,1.918,2694,1.416,2695,1.918,2696,1.918,2697,1.685,2698,2.536,2699,1.918,2700,4.066,2701,1.918,2702,1.918,2703,1.531,2704,1.918,2705,1.918,2706,1.918,2707,1.918,2708,3.177,2709,1.918,2710,1.918,2711,1.918,2712,1.918,2713,1.685,2714,1.918,2715,3.177,2716,1.918,2717,1.918,2718,4.066,2719,4.066,2720,1.918,2721,3.177,2722,2.79,2723,1.918,2724,2.79,2725,1.918,2726,1.918,2727,1.685,2728,1.918,2729,1.918,2730,1.918,2731,1.918,2732,1.918,2733,1.918,2734,1.918,2735,4.066,2736,1.685,2737,1.918,2738,1.685,2739,2.79,2740,3.177,2741,3.177,2742,1.918,2743,1.918,2744,1.685,2745,1.918,2746,1.918,2747,3.571,2748,1.918,2749,1.248,2750,3.177,2751,1.685,2752,2.808,2753,1.075,2754,4.182,2755,4.066,2756,1.685,2757,1.531,2758,1.918,2759,1.918,2760,1.416,2761,1.918,2762,4.728,2763,1.248,2764,3.177,2765,2.79,2766,1.918,2767,0.988,2768,1.918,2769,4.066,2770,4.17,2771,4.96,2772,0.988,2773,4.728,2774,1.918,2775,1.918,2776,1.325,2777,1.918,2778,1.918,2779,1.918,2780,3.177,2781,1.531,2782,1.918,2783,1.918,2784,3.177,2785,1.918,2786,1.918,2787,1.918,2788,1.918,2789,1.918,2790,1.918,2791,1.918,2792,1.416,2793,1.918,2794,4.066,2795,3.177,2796,3.265,2797,1.416,2798,1.685,2799,5.979,2800,1.918,2801,1.531,2802,1.918,2803,1.918,2804,3.571,2805,1.531,2806,1.918,2807,1.918,2808,1.685,2809,1.918,2810,3.177,2811,1.918,2812,1.918,2813,1.918,2814,3.571,2815,1.918,2816,1.531,2817,1.918,2818,1.685,2819,1.416,2820,1.918,2821,1.918,2822,1.918,2823,1.918,2824,1.685,2825,1.531,2826,1.918,2827,3.177,2828,4.066,2829,1.918,2830,1.918,2831,1.918,2832,1.918,2833,1.918,2834,1.918,2835,1.918,2836,1.918,2837,4.066,2838,1.918,2839,1.918,2840,1.918,2841,1.918,2842,1.918,2843,1.918,2844,1.918,2845,1.918,2846,1.918,2847,1.918,2848,2.346,2849,3.177,2850,3.177,2851,1.918,2852,1.918,2853,7.365,2854,5.647,2855,3.177,2856,4.066,2857,3.177,2858,5.239,2859,1.416,2860,1.918,2861,1.918,2862,1.918,2863,3.177,2864,4.066,2865,1.918,2866,1.918,2867,1.918,2868,4.153,2869,5.239,2870,1.918,2871,2.536,2872,5.979,2873,1.685,2874,1.325,2875,1.685,2876,1.531,2877,4.728,2878,1.918,2879,1.918,2880,5.239,2881,1.918,2882,1.918,2883,1.918,2884,1.918,2885,1.918,2886,1.918,2887,1.918,2888,1.918,2889,3.177,2890,1.918,2891,1.918,2892,1.918,2893,3.177,2894,3.177,2895,4.066,2896,1.918,2897,3.177,2898,1.918,2899,1.918,2900,1.918,2901,1.918,2902,3.177,2903,3.177,2904,1.918,2905,1.918,2906,1.918,2907,1.918,2908,1.918,2909,1.918,2910,1.918,2911,1.918,2912,4.728,2913,1.918,2914,3.177,2915,1.918,2916,1.685,2917,1.531,2918,1.918,2919,3.177,2920,1.918,2921,1.918,2922,4.728,2923,1.918,2924,1.918,2925,6.488,2926,1.685,2927,1.685,2928,2.79,2929,3.177,2930,1.918,2931,1.918,2932,4.066,2933,1.918,2934,5.239,2935,4.066,2936,4.066,2937,5.239,2938,1.918,2939,1.918,2940,1.918,2941,1.416,2942,1.685,2943,1.918,2944,1.918,2945,1.416,2946,1.918,2947,1.918,2948,1.918,2949,3.177,2950,4.728,2951,4.728,2952,1.918,2953,5.647,2954,1.685,2955,1.918,2956,1.416,2957,1.685,2958,1.918,2959,1.918,2960,3.177,2961,1.918,2962,3.177,2963,1.918,2964,1.918,2965,1.918,2966,3.177,2967,2.79,2968,1.918,2969,1.918,2970,1.918,2971,1.918,2972,1.918,2973,1.918,2974,1.918,2975,1.918,2976,1.918,2977,4.728,2978,1.918,2979,1.416,2980,1.918,2981,4.728,2982,3.177,2983,4.066,2984,4.728,2985,1.918,2986,1.918,2987,1.918,2988,1.918,2989,1.918,2990,1.918,2991,1.918,2992,1.918,2993,1.918,2994,1.918,2995,3.177,2996,4.066,2997,3.177,2998,1.918,2999,3.177,3000,1.918,3001,1.918,3002,1.918,3003,1.918,3004,1.918,3005,1.918,3006,4.066,3007,1.685,3008,1.918,3009,1.918,3010,1.918,3011,1.918,3012,1.248,3013,5.239,3014,4.728,3015,1.918,3016,1.918,3017,3.177,3018,1.685,3019,1.918,3020,1.918,3021,1.918,3022,1.918,3023,1.918,3024,1.918,3025,1.918,3026,1.918,3027,1.918,3028,1.918,3029,1.918,3030,1.918,3031,1.918,3032,1.918,3033,1.918,3034,1.918,3035,1.918,3036,3.177,3037,1.918,3038,1.918,3039,1.918,3040,3.177,3041,3.177,3042,4.728,3043,5.239,3044,1.685,3045,1.416,3046,1.918,3047,1.685,3048,1.685,3049,3.177,3050,1.918,3051,1.918,3052,1.918,3053,1.918,3054,1.918,3055,1.918,3056,1.918,3057,1.918,3058,1.918,3059,1.918,3060,4.066,3061,3.177,3062,1.918,3063,1.918,3064,1.918,3065,1.918,3066,3.177,3067,1.918,3068,1.918,3069,1.918,3070,4.728,3071,1.918,3072,1.918,3073,1.918,3074,3.177,3075,1.918,3076,1.918,3077,1.918,3078,1.918,3079,1.918,3080,1.918,3081,1.918,3082,1.918,3083,1.531,3084,1.918,3085,1.918,3086,1.918,3087,1.918,3088,3.177,3089,1.918,3090,1.918,3091,1.918,3092,1.918,3093,1.918,3094,1.918,3095,1.918,3096,1.918,3097,1.918,3098,1.918,3099,3.177,3100,3.177,3101,3.177,3102,1.918,3103,1.918,3104,3.177,3105,1.918,3106,1.918,3107,1.918,3108,1.918,3109,1.918,3110,1.918,3111,1.918,3112,1.918,3113,1.416,3114,1.918,3115,1.918,3116,1.918,3117,1.918,3118,1.918,3119,1.918,3120,1.918,3121,1.918,3122,1.918,3123,1.918,3124,1.918,3125,1.918,3126,1.685,3127,1.918,3128,1.918,3129,3.177,3130,3.177,3131,1.918,3132,1.918,3133,1.685,3134,1.918,3135,1.918]],["title/components/FormActionBarComponent.html",[175,0.209,690,1.06]],["body/components/FormActionBarComponent.html",[0,0.014,3,0.117,4,0.139,5,0.104,9,0.15,13,0.672,15,4.46,16,3.146,19,0.773,22,0.645,24,0.618,25,0.011,26,0.535,27,0.284,28,0.377,29,1.203,32,1.276,35,0.998,36,0.967,37,1.081,44,1.45,45,2.116,46,3.012,48,1.311,49,0.607,57,0.887,58,0.6,60,0.324,71,0.223,73,0.322,74,2.364,75,0.777,77,0.117,83,0.005,84,0.007,85,0.005,100,2.259,106,1.507,108,0.467,114,0.694,115,1.428,122,1.545,140,1.082,167,1.051,169,1.201,175,0.315,180,1.475,209,0.637,346,1.632,360,1.678,396,1.569,397,2.163,407,1.414,418,0.941,441,0.967,467,1.021,546,0.941,550,2.486,585,1.347,627,0.994,628,1.021,629,1.05,630,1.109,633,0.868,634,1.422,636,1.113,638,1.113,652,1.021,653,1.462,654,1.921,655,1.109,656,1.109,657,0.916,658,1.109,659,0.967,660,1.109,661,0.967,662,1.109,663,0.994,664,1.109,665,0.994,666,1.109,667,0.994,668,1.109,669,0.994,670,1.05,671,1.109,672,0.994,673,1.544,674,0.994,675,1.05,676,1.109,677,0.994,678,1.109,679,0.994,680,1.109,681,0.967,682,1.109,683,1.109,684,0.967,685,1.109,686,0.994,687,1.109,688,0.967,689,1.109,690,1.722,691,1.776,692,0.994,693,0.941,694,0.941,695,1.544,696,0.994,697,1.021,698,1.109,699,0.967,700,1.109,701,0.994,702,1.109,703,0.994,704,1.109,705,0.941,706,1.109,707,0.967,708,1.109,709,0.994,710,1.079,711,1.109,712,0.967,713,0.916,714,1.109,715,0.967,716,1.109,717,0.941,718,1.109,719,0.967,720,1.05,721,0.994,722,1.109,723,1.021,724,1.109,725,0.994,726,1.109,727,0.967,728,1.109,729,0.994,730,1.05,731,0.994,732,0.967,733,1.079,734,0.844,735,0.967,736,1.109,737,0.967,738,1.109,739,0.967,740,1.109,741,0.967,742,1.109,743,0.967,744,1.109,745,0.967,746,1.109,747,0.967,748,1.109,749,0.967,750,1.05,751,1.109,755,1.935,756,1.935,763,1.384,764,1.819,766,2.595,767,2.595,794,2.492,807,0.695,1077,4.93,1079,1.994,1080,5.155,1089,4.93,1091,1.432,1095,3.541,1375,1.673,1376,2.329,1377,1.673,1378,2.329,1379,2.329,1380,2.329,1381,1.673,1382,1.673,1383,2.329,1384,2.329,1385,1.673,1386,1.673,1387,1.673,1388,1.673,1389,1.673,1390,2.329,1391,2.255,1392,1.673,1393,2.329,1394,2.329,1395,1.673,1396,2.329,1397,1.673,1398,1.673,1399,1.673,1400,1.673,1401,2.898,1402,1.673,1403,1.673,1404,1.673,1405,1.673,1406,1.673,1407,1.673,1408,1.673,1409,1.673,1410,1.673,1411,1.673,1412,1.673,1413,1.673,1414,1.673,1415,1.673,1416,1.673,1417,1.673,1418,2.329,1419,1.673,1420,1.673,1421,1.673,1422,1.673,1423,1.673,1424,1.673,1425,1.673,1426,1.673,1427,1.673,1428,1.673,1429,1.673,1430,1.673,1431,1.673,1432,2.329,1433,1.673,1434,1.673,1435,1.673,1436,1.673,1437,1.673,1438,1.39,1439,1.673,1440,1.673,1441,1.673,1442,1.673,1443,1.673,1444,1.673,1445,1.673,1446,1.673,2419,3.218,2796,2.784,2954,3.541,2979,2.976,3136,6.531,3137,6.042,3138,2.976,3139,4.48,3140,4.48,3141,5.672,3142,5.672,3143,6.458,3144,6.449,3145,4.93,3146,4.031,3147,4.031,3148,4.031,3149,4.031,3150,4.031,3151,3.541,3152,4.031,3153,3.218,3154,4.031,3155,4.031,3156,4.031,3157,4.031,3158,4.031,3159,3.541,3160,4.031,3161,4.031,3162,3.541,3163,4.031,3164,4.031]],["title/components/FormSubmitBarComponent.html",[175,0.209,692,1.06]],["body/components/FormSubmitBarComponent.html",[0,0.014,2,2.207,3,0.114,4,0.135,5,0.102,9,0.146,13,0.657,15,4.386,16,3.078,19,0.76,22,0.63,25,0.011,26,0.486,27,0.294,29,1.176,32,1.248,35,0.987,36,0.956,37,1.153,44,1.535,45,0.938,46,2.947,48,1.283,49,0.422,57,1.189,58,0.582,60,0.317,71,0.19,73,0.312,74,2.324,75,0.753,77,0.114,83,0.005,84,0.007,85,0.005,106,1.365,114,0.679,115,1.405,122,1.524,140,1.059,155,0.796,167,0.893,169,1.189,171,1.839,175,0.354,209,0.617,256,2.01,282,1.737,321,2.207,346,1.596,353,2.828,360,1.641,407,1.412,418,0.912,441,2.103,467,0.99,469,3.574,476,4.758,546,0.912,551,3.224,585,1.318,627,0.963,628,0.99,629,1.017,630,1.075,633,0.841,634,1.42,636,1.089,638,1.089,652,0.99,653,1.43,654,1.895,655,1.075,656,1.075,657,0.888,658,1.075,659,0.938,660,1.075,661,0.938,662,1.075,663,0.963,664,1.075,665,0.963,666,1.075,667,0.963,668,1.075,669,0.963,670,1.017,671,1.075,672,0.963,673,1.511,674,0.963,675,1.017,676,1.075,677,0.963,678,1.075,679,0.963,680,1.075,681,0.938,682,1.075,683,1.075,684,0.938,685,1.075,686,0.963,687,1.075,688,0.938,689,1.075,690,0.963,691,1.747,692,1.699,693,0.912,694,1.483,695,1.511,696,0.963,697,0.99,698,1.075,699,0.938,700,1.075,701,0.963,702,1.075,703,0.963,704,1.075,705,0.912,706,1.075,707,0.938,708,1.075,709,0.963,710,1.046,711,1.075,712,0.938,713,0.888,714,1.075,715,0.938,716,1.075,717,0.912,718,1.075,719,0.938,720,1.017,721,0.963,722,1.075,723,0.99,724,1.075,725,0.963,726,1.075,727,0.938,728,1.075,729,0.963,730,1.017,731,0.963,732,0.938,733,1.046,734,0.818,735,0.938,736,1.075,737,0.938,738,1.075,739,0.938,740,1.075,741,0.938,742,1.075,743,0.938,744,1.075,745,0.938,746,1.075,747,0.938,748,1.075,749,0.938,750,1.017,751,1.075,755,1.894,756,1.894,763,1.354,764,1.794,766,2.552,767,2.552,794,2.438,807,0.673,850,2.828,860,2.356,900,2.356,972,3.387,1079,1.951,1080,5.069,1375,1.622,1376,2.279,1377,1.622,1378,2.279,1379,2.279,1380,2.279,1381,1.622,1382,1.622,1383,2.279,1384,2.279,1385,1.622,1386,1.622,1387,1.622,1388,1.622,1389,1.622,1390,2.279,1391,2.207,1392,1.622,1393,2.279,1394,2.279,1395,1.622,1396,2.279,1397,1.622,1398,1.622,1399,1.622,1400,1.622,1401,2.859,1402,1.622,1403,1.622,1404,1.622,1405,1.622,1406,1.622,1407,1.622,1408,1.622,1409,1.622,1410,1.622,1411,1.622,1412,1.622,1413,1.622,1414,1.622,1415,1.622,1416,1.622,1417,1.622,1418,2.279,1419,1.622,1420,1.622,1421,1.622,1422,1.622,1423,1.622,1424,1.622,1425,1.622,1426,1.622,1427,1.622,1428,1.622,1429,1.622,1430,1.622,1431,1.622,1432,2.279,1433,1.622,1434,1.622,1435,1.622,1436,1.622,1437,1.622,1438,1.347,1439,1.622,1440,1.622,1441,1.622,1442,1.622,1443,1.622,1444,1.622,1445,1.622,1446,1.622,1730,3.793,2358,2.947,2578,3.574,2770,4.055,3136,6.404,3137,5.924,3138,2.885,3139,4.384,3140,4.384,3141,5.578,3142,5.578,3144,6.375,3145,3.432,3165,6.889,3166,4.824,3167,4.384,3168,5.492,3169,5.492,3170,5.492,3171,4.824,3172,6.35,3173,5.492,3174,3.907,3175,4.824,3176,5.499,3177,6.889,3178,5.492,3179,5.492,3180,4.384,3181,5.492,3182,3.907,3183,3.907,3184,3.907,3185,3.907]],["title/components/FullNameComponent.html",[175,0.209,693,1.004]],["body/components/FullNameComponent.html",[0,0.012,3,0.096,4,0.114,5,0.09,7,1.41,9,0.123,10,0.526,11,1.935,13,0.582,19,0.691,22,0.682,24,0.887,25,0.011,26,0.636,27,0.313,28,0.541,29,0.949,32,1.106,33,1.339,35,1.08,36,1.087,37,0.815,42,1.912,44,0.887,45,0.793,48,1.137,49,0.689,57,0.769,58,1.124,60,0.491,71,0.235,72,1.417,73,0.264,74,1.209,75,0.637,77,0.168,83,0.004,84,0.006,85,0.004,87,1.076,94,1.106,106,0.965,114,0.602,115,1.278,116,2.115,118,1.935,119,1.992,120,1.294,121,1.728,122,1.41,123,2.02,124,2.02,128,1.781,134,1.015,135,1.246,136,1.139,137,1.045,138,1.106,139,1.209,140,1.114,142,1.678,144,2.016,145,1.678,155,0.673,161,1.955,167,0.537,169,1.162,173,1.519,175,0.331,182,1.417,184,1.106,186,2.276,199,2.83,209,0.522,281,3.593,282,1.539,284,1.678,302,1.851,346,1.415,356,1.728,358,1.455,359,1.539,360,1.455,407,1.397,418,1.349,441,0.793,467,0.837,503,3.283,545,2.506,546,0.771,585,1.168,627,0.815,628,0.837,629,0.86,630,0.909,633,0.711,634,1.407,636,0.965,638,0.965,652,0.837,653,1.267,654,1.754,655,0.909,656,0.909,657,0.751,658,0.909,659,0.793,660,0.909,661,0.793,662,0.909,663,0.815,664,0.909,665,0.815,666,0.909,667,0.815,668,0.909,669,0.815,670,0.86,671,0.909,672,0.815,673,1.339,674,0.815,675,0.86,676,0.909,677,0.815,678,0.909,679,0.815,680,0.909,681,0.793,682,0.909,683,0.909,684,0.793,685,0.909,686,0.815,687,0.909,688,0.793,689,0.909,690,0.815,691,1.589,692,0.815,693,1.762,694,1.717,695,1.339,696,0.815,697,0.837,698,0.909,699,0.793,700,0.909,701,0.815,702,0.909,703,0.815,704,0.909,705,0.771,706,0.909,707,0.793,708,0.909,709,0.815,710,0.884,711,0.909,712,0.793,713,0.751,714,0.909,715,0.793,716,0.909,717,0.771,718,0.909,719,0.793,720,0.86,721,0.815,722,0.909,723,0.837,724,0.909,725,0.815,726,0.909,727,0.793,728,0.909,729,0.815,730,0.86,731,0.815,732,0.793,733,0.884,734,0.692,735,0.793,736,0.909,737,0.793,738,0.909,739,0.793,740,0.909,741,0.793,742,0.909,743,0.793,744,0.909,745,0.793,746,0.909,747,0.793,748,0.909,749,0.793,750,0.86,751,0.909,752,0.435,763,1.2,764,1.505,766,2.322,767,1.327,768,2.755,769,1.173,807,0.569,839,0.96,860,2.088,910,2.067,995,3.002,1079,1.728,1104,2.238,1111,3.761,1191,3.361,1265,3.361,1359,3.002,2578,3.167,2615,2.281,2641,4.385,2752,3.361,3186,6.818,3187,6.307,3188,2.637,3189,4.707,3190,5.089,3191,3.885,3192,3.885,3193,3.885,3194,3.99,3195,4.612,3196,4.612,3197,4.612,3198,5.075,3199,5.019,3200,4.267,3201,6.458,3202,6.458,3203,6.458,3204,5.075,3205,4.866,3206,3.303,3207,3.303,3208,3.303,3209,3.303,3210,3.303,3211,3.303,3212,3.303,3213,3.303,3214,3.303,3215,3.303,3216,3.303,3217,3.303,3218,4.267,3219,3.303,3220,3.303,3221,3.303,3222,3.303,3223,3.932,3224,3.885,3225,3.303,3226,3.885,3227,3.361,3228,4.275,3229,4.275,3230,4.275,3231,4.275,3232,3.593,3233,3.303,3234,3.303,3235,2.901,3236,2.637,3237,4.275,3238,2.637,3239,5.075,3240,2.637,3241,5.075,3242,2.637,3243,5.075,3244,2.439,3245,2.439,3246,2.901,3247,2.901,3248,2.901,3249,2.901,3250,2.901,3251,2.901,3252,2.901,3253,5.075,3254,5.075,3255,2.901,3256,2.901,3257,6.245,3258,7.11]],["title/interfaces/FullNameErrorMsg.html",[752,0.567,3218,3.175]],["body/interfaces/FullNameErrorMsg.html",[0,0.017,3,0.144,4,0.171,5,0.092,7,1.427,9,0.185,10,0.698,11,1.659,19,0.593,25,0.011,26,0.603,27,0.241,28,0.711,29,0.961,33,1.363,35,0.674,36,1.001,37,0.83,42,2.113,58,1.131,60,0.504,71,0.272,72,2.126,73,0.396,74,1.814,75,0.955,77,0.209,83,0.006,84,0.008,85,0.006,87,1.096,106,0.982,114,0.613,115,1.427,116,2.361,118,1.659,119,1.709,120,1.2,122,1.096,142,1.709,144,2.04,145,1.709,161,1.991,169,1.299,173,2.278,175,0.349,182,2.126,184,1.659,186,2.638,199,2.864,281,3.659,282,1.567,284,1.709,302,2.777,346,1.44,356,1.76,358,1.481,359,1.567,360,1.481,407,0.783,418,1.157,503,3.322,545,2.552,634,0.783,636,0.982,638,0.982,693,1.675,694,1.675,752,0.653,754,1.659,763,1.591,764,1.68,766,2.592,767,1.991,768,3.076,769,1.76,807,0.854,839,1.44,860,2.126,910,1.875,995,3.056,1104,2.278,1111,3.225,1191,3.422,1265,3.422,1359,3.056,2578,3.225,2615,3.422,2641,4.424,2752,3.422,3186,3.955,3187,3.659,3188,3.955,3189,4.763,3190,5.149,3191,3.955,3192,3.955,3193,3.955,3194,3.422,3195,3.955,3196,3.955,3197,3.955,3198,4.352,3199,5.963,3200,3.659,3201,4.352,3202,4.352,3203,4.352,3204,4.352,3218,5.296,3223,3.979,3224,3.955,3226,3.955,3227,3.422,3228,4.352,3229,4.352,3230,4.352,3231,4.352,3232,3.659,3235,4.352,3236,3.955,3237,5.666,3238,3.955,3239,6.3,3240,3.955,3241,6.3,3242,3.955,3243,6.3,3244,3.659,3245,3.659,3246,4.352,3247,4.352,3248,4.352,3249,4.352,3250,4.352,3251,4.352,3252,4.352,3253,6.3,3254,6.3,3255,4.352,3256,4.352]],["title/interfaces/GeoAddressResult.html",[752,0.567,770,2.41]],["body/interfaces/GeoAddressResult.html",[0,0.018,3,0.151,4,0.18,5,0.097,9,0.194,10,0.72,14,1.693,17,2.459,25,0.011,26,0.398,27,0.298,37,1.115,60,0.512,62,3.209,71,0.283,73,0.416,77,0.194,78,3.054,83,0.006,84,0.008,85,0.006,87,1.151,106,1.031,108,0.926,167,1.259,195,1.474,208,2.09,222,3.731,224,3.431,226,3.054,227,2.31,228,3.386,238,4.106,240,5.07,247,5.314,257,3.572,258,3.386,259,4.597,263,3.593,283,1.319,298,3.054,299,2.481,302,2.916,307,3.209,339,2.229,353,2.679,539,2.31,545,3.428,548,4.17,549,4.016,550,3.209,551,3.054,570,2.232,752,0.686,754,1.742,761,4.632,770,4.114,772,3.428,775,3.635,795,2.916,807,1.147,811,5.033,883,3.386,900,2.232,1155,4.114,1219,3.209,1255,2.792,1256,2.792,1515,2.481,1559,3.842,1579,3.842,1594,4.153,1607,3.593,2437,3.386,2626,3.209,2772,2.679,2796,3.593,3259,4.153,3260,7.025,3261,4.153,3262,3.209,3263,4.57,3264,4.57,3265,6.448,3266,4.57,3267,4.57,3268,4.57,3269,4.57,3270,4.57,3271,4.57,3272,4.57,3273,4.57,3274,4.57,3275,4.57,3276,4.57,3277,4.57,3278,4.57,3279,4.57,3280,4.57,3281,4.57,3282,4.57,3283,5.847,3284,4.57,3285,4.57,3286,4.57,3287,4.57,3288,4.57,3289,4.57,3290,4.57,3291,4.57,3292,4.57,3293,4.57,3294,5.847,3295,4.57,3296,4.57,3297,4.57,3298,4.57,3299,4.57,3300,4.57]],["title/components/GeocoderInputComponent.html",[175,0.209,696,1.06]],["body/components/GeocoderInputComponent.html",[0,0.01,3,0.079,4,0.094,5,0.078,7,1.28,9,0.102,10,0.456,12,2.911,13,0.504,19,0.327,22,0.68,24,1.183,25,0.011,26,0.61,27,0.311,28,0.731,29,1.148,32,0.958,35,1.048,36,1.04,37,1.271,40,1.684,43,2.474,44,0.768,45,0.655,48,0.984,49,0.833,52,2.179,56,1.777,57,0.666,58,1.215,60,0.46,71,0.258,73,0.218,75,0.526,77,0.079,83,0.006,84,0.005,85,0.009,87,0.932,89,1.063,94,0.914,106,0.541,108,0.67,114,0.521,115,1.139,116,1.884,118,1.724,119,1.775,120,1.323,121,1.497,122,1.28,123,2.136,124,2.136,128,1.884,130,1.923,134,0.839,135,1.03,136,0.941,137,0.863,138,0.914,139,0.999,140,0.992,142,0.941,144,2.091,145,0.941,148,2.514,151,1.938,152,1.693,155,0.556,156,1.296,161,1.097,167,0.942,169,1.125,175,0.251,180,0.999,182,1.808,184,0.914,185,1.684,186,1.412,195,1.109,209,0.431,224,2.837,226,1.602,250,3.768,257,3.357,268,1.255,282,0.863,283,0.541,284,1.453,295,1.777,299,1.302,300,2.398,301,2.398,302,1.53,318,2.911,325,0.888,334,2.76,337,3.801,338,0.914,358,1.539,391,1.724,397,1.465,407,1.378,411,0.772,418,0.638,441,0.655,467,0.692,480,2.599,504,2.01,533,3.801,546,0.638,548,1.352,549,1.302,553,2.016,560,3.35,566,1.602,574,1.777,575,2.398,579,3.112,585,1.011,627,0.673,628,0.692,629,0.711,630,0.751,633,0.588,634,1.391,636,0.835,638,0.835,650,1.352,651,1.302,652,0.692,653,1.098,654,1.592,655,0.751,656,0.751,657,0.62,658,0.751,659,0.655,660,0.751,661,0.655,662,0.751,663,0.673,664,0.751,665,0.673,666,0.751,667,0.673,668,0.751,669,0.673,670,0.711,671,0.751,672,0.673,673,1.159,674,0.673,675,0.711,676,0.751,677,0.673,678,0.751,679,0.673,680,0.751,681,0.655,682,0.751,683,0.751,684,0.655,685,0.751,686,0.673,687,0.751,688,0.655,689,0.751,690,0.673,691,1.416,692,0.673,693,0.638,694,0.638,695,1.159,696,1.427,697,1.953,698,0.751,699,0.655,700,0.751,701,0.673,702,0.751,703,0.673,704,0.751,705,0.638,706,0.751,707,0.655,708,0.751,709,0.673,710,0.731,711,0.751,712,0.655,713,0.62,714,0.751,715,0.655,716,0.751,717,0.638,718,0.751,719,0.655,720,0.711,721,0.673,722,0.751,723,0.692,724,0.751,725,0.673,726,0.751,727,0.655,728,0.751,729,0.673,730,0.711,731,1.269,732,0.655,733,0.731,734,0.572,735,0.655,736,0.751,737,0.655,738,0.751,739,0.655,740,0.751,741,0.655,742,0.751,743,0.655,744,0.751,745,0.655,746,0.751,747,0.655,748,0.751,749,0.655,750,0.711,751,0.751,763,1.269,764,1.341,765,2.885,769,0.97,770,2.362,771,2.016,772,4.251,773,2.016,775,2.549,778,1.777,780,2.599,782,2.016,790,1.352,804,2.29,806,4.619,807,1.259,819,2.911,839,0.794,864,1.684,880,2.362,900,1.808,905,1.602,910,2.069,930,3.768,933,2.981,943,1.938,946,3.112,950,2.016,951,2.016,1031,3.35,1069,2.362,1079,1.497,1091,1.828,1155,1.53,1158,2.599,1285,2.777,1288,1.352,1310,1.352,1314,1.212,1323,2.262,1325,3.672,1344,2.743,1607,2.911,2321,4.274,2326,2.016,2424,2.179,2427,2.016,2446,4.109,2465,3.112,2557,2.474,2567,3.364,2609,2.398,2615,3.998,2627,2.911,2694,3.801,2722,2.398,2724,2.398,2767,1.406,2772,1.406,2792,2.016,2875,2.398,3126,3.702,3166,4.522,3236,2.179,3262,4.39,3301,7.479,3302,6.797,3303,2.398,3304,4.215,3305,5.148,3306,4.215,3307,4.215,3308,5.148,3309,5.148,3310,5.148,3311,5.148,3312,5.148,3313,6.256,3314,5.148,3315,4.215,3316,4.215,3317,4.215,3318,4.215,3319,4.215,3320,4.215,3321,2.73,3322,2.73,3323,2.73,3324,2.73,3325,2.73,3326,2.73,3327,2.73,3328,4.215,3329,2.73,3330,2.73,3331,4.215,3332,2.73,3333,4.215,3334,2.73,3335,4.215,3336,2.73,3337,4.215,3338,5.789,3339,2.73,3340,2.73,3341,2.73,3342,4.215,3343,2.73,3344,2.73,3345,2.73,3346,2.73,3347,2.73,3348,2.73,3349,2.73,3350,2.73,3351,4.215,3352,6.256,3353,2.73,3354,4.215,3355,2.73,3356,4.215,3357,4.215,3358,2.73,3359,5.085,3360,4.215,3361,2.73,3362,2.73,3363,2.73,3364,2.398,3365,2.73,3366,2.73,3367,2.73,3368,2.73,3369,2.73,3370,2.73,3371,2.73,3372,2.73,3373,2.73,3374,4.522,3375,2.73,3376,4.215,3377,4.215,3378,5.148,3379,5.148,3380,2.73,3381,4.215,3382,2.73,3383,2.73,3384,2.73,3385,2.73,3386,2.398,3387,2.73,3388,2.73,3389,2.73,3390,2.73,3391,2.73,3392,2.73,3393,2.73,3394,2.73,3395,2.73,3396,2.179,3397,2.73,3398,2.73,3399,2.73,3400,2.73,3401,2.398,3402,2.73,3403,2.179,3404,2.73,3405,2.73,3406,4.215,3407,2.179,3408,2.73,3409,2.73,3410,2.73,3411,2.73,3412,2.73,3413,5.789,3414,4.215]],["title/injectables/GeocoderService.html",[339,1.44,3262,2.652]],["body/injectables/GeocoderService.html",[0,0.014,3,0.12,4,0.143,5,0.077,9,0.154,10,0.618,13,0.783,14,2.411,17,2.731,19,0.494,22,0.682,24,1.285,25,0.011,26,0.63,27,0.317,28,0.76,29,0.615,35,0.96,36,0.93,37,1.096,49,0.878,60,0.486,61,3.944,62,2.549,69,3.18,70,2.046,71,0.265,73,0.33,77,0.166,78,2.426,83,0.005,84,0.007,85,0.005,87,1.263,94,2.68,106,0.819,108,0.858,155,1.333,167,1.322,195,1.392,208,1.66,214,3.052,222,4.656,224,3.178,226,3.841,227,1.835,228,4.822,229,5.016,230,5.224,231,5.212,232,4.519,233,5.016,234,4.559,237,3.63,238,4.354,240,5.291,242,4.217,243,3.299,244,3.63,246,3.63,247,5.635,249,4.036,250,3.717,251,4.559,252,1.66,253,2.69,254,3.63,255,3.299,256,1.513,257,4.36,258,4.259,259,5.291,261,3.299,262,3.63,263,4.519,264,3.052,265,2.69,266,3.63,267,3.052,268,1.9,269,3.63,270,3.63,271,3.63,272,4.217,274,3.63,276,3.63,277,5.748,278,3.366,280,3.63,281,3.052,282,1.307,283,1.399,284,1.425,285,3.63,286,2.45,287,5.016,288,1.858,289,3.63,290,3.63,291,2.854,292,3.299,298,2.426,299,1.97,302,2.316,307,2.549,339,1.913,341,2.218,353,2.128,539,1.835,545,2.128,548,3.495,549,3.366,550,2.549,551,3.352,560,3.717,570,2.45,752,0.545,761,4.214,770,3.668,772,3.37,775,3.24,795,3.201,807,1.128,811,4.497,883,2.69,900,2.45,1155,4.152,1219,3.522,1255,2.218,1256,2.218,1515,1.97,1559,3.052,1579,3.052,1594,3.299,1607,2.854,2437,3.717,2626,2.549,2772,2.128,2796,2.854,3259,3.299,3260,5.016,3261,3.299,3262,3.522,3263,5.748,3264,5.016,3265,6.898,3266,5.016,3267,3.63,3268,5.016,3269,3.63,3270,3.63,3271,3.63,3272,3.63,3273,3.63,3274,3.63,3275,3.63,3276,3.63,3277,3.63,3278,3.63,3279,3.63,3280,3.63,3281,3.63,3282,5.016,3283,5.748,3284,5.016,3285,5.016,3286,5.016,3287,3.63,3288,3.63,3289,3.63,3290,3.63,3291,3.63,3292,3.63,3293,3.63,3294,5.016,3295,3.63,3296,3.63,3297,3.63,3298,3.63,3299,3.63,3300,3.63,3415,5.711,3416,5.711,3417,4.133,3418,4.133,3419,4.133,3420,4.133,3421,4.133,3422,4.133,3423,4.133,3424,4.133,3425,4.133,3426,4.133,3427,4.133,3428,4.133,3429,4.133]],["title/components/HeaderComponent.html",[175,0.209,699,1.032]],["body/components/HeaderComponent.html",[0,0.015,3,0.122,4,0.145,5,0.107,9,0.157,10,0.625,13,0.691,19,0.503,20,2.355,21,3.813,22,0.659,24,0.886,25,0.011,26,0.571,27,0.287,28,0.541,29,0.86,32,1.313,35,0.966,36,0.937,44,1.053,45,1.008,48,1.349,49,0.769,57,0.913,58,0.86,60,0.484,68,3.238,69,1.744,71,0.228,73,0.336,76,1.803,77,0.122,83,0.005,84,0.007,85,0.005,108,0.764,114,0.714,115,1.46,120,1.043,122,1.572,140,1.114,155,0.856,167,0.684,169,1.123,175,0.322,209,0.664,286,1.803,288,1.88,302,2.355,321,1.688,407,1.417,418,0.981,441,1.008,450,4.138,452,5.249,453,5.074,454,5.074,467,1.065,501,2.592,528,3.391,546,0.981,585,1.848,627,1.036,628,1.065,629,1.094,630,1.156,633,0.904,634,1.424,636,1.145,638,1.145,652,1.065,653,1.504,654,1.955,655,1.156,656,1.156,657,0.955,658,1.156,659,1.008,660,1.156,661,1.008,662,1.156,663,1.036,664,1.156,665,1.036,666,1.156,667,1.036,668,1.156,669,1.036,670,1.094,671,1.156,672,1.036,673,1.589,674,1.036,675,1.094,676,1.156,677,1.036,678,1.156,679,1.036,680,1.156,681,1.008,682,1.156,683,1.156,684,1.008,685,1.156,686,1.036,687,1.156,688,1.008,689,1.156,690,1.036,691,1.816,692,1.036,693,0.981,694,0.981,695,1.589,696,1.036,697,1.065,698,1.156,699,1.848,700,1.156,701,1.036,702,1.156,703,1.036,704,1.156,705,0.981,706,1.156,707,1.008,708,1.156,709,1.036,710,1.125,711,1.156,712,1.008,713,0.955,714,1.156,715,1.008,716,1.156,717,0.981,718,1.156,719,1.008,720,1.094,721,1.036,722,1.156,723,1.065,724,1.156,725,1.036,726,1.156,727,1.008,728,1.156,729,1.036,730,1.094,731,1.036,732,1.008,733,1.125,734,0.88,735,1.008,736,1.156,737,1.008,738,1.156,739,1.008,740,1.156,741,1.008,742,1.156,743,1.008,744,1.156,745,1.008,746,1.156,747,1.008,748,1.156,749,1.008,750,1.094,751,1.156,833,1.932,910,2.239,1059,2.86,1061,3.99,1069,2.355,1162,2.735,1220,1.367,1293,2.735,1619,4.612,1643,2.902,2329,4.612,2366,4.612,2418,2.735,2627,2.902,3407,4.612,3430,3.691,3431,5.777,3432,5.777,3433,6.244,3434,4.266,3435,4.612,3436,3.99,3437,7.109,3438,7.109,3439,5.777,3440,5.777,3441,5.777,3442,5.777,3443,5.777,3444,6.602,3445,6.602,3446,7.109,3447,5.777,3448,7.109,3449,6.602,3450,7.453,3451,6.602,3452,5.777,3453,5.777,3454,4.202,3455,4.202,3456,4.202,3457,4.202,3458,4.202,3459,5.777,3460,4.202,3461,4.202,3462,4.202,3463,5.074,3464,3.691,3465,3.691,3466,3.691,3467,4.202,3468,4.202,3469,4.202,3470,4.202,3471,4.202,3472,4.202,3473,4.202,3474,5.777,3475,4.202,3476,4.202,3477,4.202,3478,4.202,3479,4.202,3480,4.202,3481,4.202]],["title/interfaces/IRadioItems.html",[752,0.567,3482,3.175]],["body/interfaces/IRadioItems.html",[0,0.018,3,0.149,4,0.177,5,0.095,9,0.192,10,0.714,19,0.615,25,0.011,27,0.287,28,0.618,33,1.413,35,0.898,36,1.152,37,0.86,42,1.673,44,1.33,58,1.087,60,0.47,70,2.544,71,0.266,73,0.41,75,0.99,77,0.212,83,0.006,84,0.008,85,0.006,87,1.136,106,1.018,108,0.595,112,3.269,114,0.635,115,1.46,117,2.757,120,0.812,122,1.136,129,2.833,130,2.648,142,1.771,144,2.088,145,1.771,148,2.653,152,2.653,155,1.047,161,2.064,168,2.646,169,1.288,171,2.211,175,0.322,184,1.72,186,2.211,188,1.672,191,4.317,256,1.88,283,1.018,358,1.535,396,3.101,407,0.812,411,1.867,494,1.867,628,1.302,634,0.812,636,1.018,638,1.018,717,1.704,752,0.677,754,1.72,763,1.628,764,1.9,804,2.671,807,0.885,831,3.036,839,1.493,905,3.876,1056,4.56,1060,4.876,1105,5.825,1131,4.101,1285,2.931,1314,2.281,1328,2.544,1356,3.401,1447,2.879,1448,2.757,1449,2.879,1566,4.56,2552,3.344,2686,4.101,3434,4.876,3482,5.883,3483,4.101,3484,6.876,3485,5.8,3486,5.271,3487,5.8,3488,6.41,3489,5.271,3490,5.8,3491,6.765,3492,5.8,3493,6.765,3494,5.8,3495,5.8,3496,6.41,3497,4.101,3498,4.512,3499,4.512,3500,4.512,3501,6.765,3502,4.101,3503,4.512,3504,4.512]],["title/interfaces/ISpaEnvResponse.html",[752,0.567,3505,3.433]],["body/interfaces/ISpaEnvResponse.html",[0,0.017,3,0.171,4,0.118,5,0.063,9,0.127,10,0.539,16,3.302,17,1.533,25,0.011,27,0.277,29,0.965,33,0.939,35,0.464,37,1.205,43,2.005,44,1.074,47,2.522,52,1.577,58,0.965,60,0.505,66,1.833,69,1.417,71,0.263,72,1.465,73,0.273,74,1.825,75,0.658,77,0.171,78,2.005,83,0.004,84,0.006,85,0.004,87,0.755,106,1.426,108,0.682,114,0.617,115,1.103,116,1.825,118,1.144,119,1.178,120,1.137,122,1.103,138,1.67,142,1.178,144,1.577,145,1.178,154,1.516,155,0.696,161,1.372,167,1.284,169,1.247,171,2.307,175,0.316,182,1.465,184,1.144,186,1.67,195,0.605,214,3.683,222,2.795,224,2.779,226,2.005,227,1.516,228,2.223,238,3.076,240,4.474,250,2.223,252,2.603,256,1.25,257,3.161,258,2.223,259,3.444,265,4.216,267,2.522,272,4.783,283,0.989,288,2.478,298,2.005,299,1.629,321,1.372,325,1.623,327,2.107,328,2.726,346,1.45,354,5.974,356,1.771,358,1.761,359,1.08,360,1.491,391,1.144,396,1.329,407,0.54,419,3,441,1.555,444,2.795,445,1.833,448,2.005,450,1.759,459,2.359,462,5.171,463,5.174,467,1.93,468,5.26,469,2.223,476,2.359,505,1.759,519,1.914,520,2.107,561,1.914,573,1.833,579,3.683,584,3.076,585,0.82,609,1.516,634,0.54,636,0.677,638,0.677,642,2.107,650,1.691,651,1.629,672,1.597,752,0.45,754,1.144,763,1.597,764,1.794,766,2.367,767,2.004,768,2.378,785,2.359,794,1.516,807,1.24,815,2.927,824,3.246,833,2.979,894,1.329,910,1.45,943,2.979,1008,4.068,1091,1.213,1104,1.57,1155,3.862,1156,2.522,1158,3.076,1204,2.223,1235,3.444,1265,2.359,1462,2.005,1497,2.223,1515,1.629,1559,2.522,1569,3.683,1579,2.522,1586,2.522,1587,2.927,1595,3,1607,2.359,1633,3.458,1634,2.107,1635,4.381,1639,3,1642,4.381,1643,2.359,1644,3,1645,2.726,1646,3,1648,3,1649,4.381,1650,3,1652,3,1705,4.783,1839,4.381,2301,3.246,2334,2.795,2356,2.726,2418,3.246,2614,3,2620,3.444,2626,2.107,2661,2.726,2662,3,2663,3.076,2692,3,2736,3,2744,3,2754,2.726,2756,4.381,2765,4.381,2818,4.381,2819,3.683,2868,3,2928,3,2942,3,3012,4.216,3113,3.683,3194,2.359,3436,3.444,3505,4.702,3506,3,3507,2.726,3508,2.522,3509,7.195,3510,7.195,3511,4.987,3512,6.89,3513,6.478,3514,6.478,3515,6.478,3516,6.478,3517,6.478,3518,6.478,3519,6.478,3520,3.415,3521,3.415,3522,3.415,3523,3,3524,3.415,3525,3.415,3526,3.415,3527,3.415,3528,3.415,3529,3,3530,3.415,3531,4.987,3532,4.987,3533,4.381,3534,6.478,3535,6.478,3536,4.987,3537,3.981,3538,4.987,3539,4.987,3540,6.052,3541,5.171,3542,4.987,3543,4.987,3544,4.381,3545,4.381,3546,3.981,3547,4.381,3548,4.987,3549,4.987,3550,4.987,3551,6.32,3552,4.987,3553,4.987,3554,4.987,3555,4.987,3556,4.987,3557,4.987,3558,4.987,3559,4.987,3560,4.987,3561,4.987,3562,4.987,3563,4.987,3564,4.987,3565,4.987,3566,4.987,3567,4.381,3568,3.415,3569,3.415,3570,3,3571,3.415,3572,3,3573,2.726,3574,3.415,3575,2.726,3576,3.415,3577,4.987,3578,2.726,3579,3.415,3580,3.415,3581,3.415,3582,3.415,3583,3.415,3584,4.987,3585,3.415,3586,3,3587,3,3588,3.415,3589,3,3590,3.415,3591,3,3592,3.415,3593,3.981,3594,3,3595,3.415,3596,3.415,3597,3.415,3598,3.415,3599,3.415,3600,3.415,3601,3.415,3602,3.415,3603,3.415,3604,3.415,3605,3.415,3606,3.415,3607,3.415,3608,2.726,3609,3.415,3610,3.415,3611,3,3612,3.415,3613,3.415,3614,3.415,3615,3.415,3616,3.415,3617,3.415,3618,3.415,3619,4.987,3620,3.415,3621,3.415,3622,3.415,3623,3.415,3624,3.415,3625,3.415,3626,3.415,3627,2.522,3628,3.415,3629,3.415,3630,3.415,3631,3.415,3632,3.415,3633,3.415,3634,3.415,3635,3.415,3636,3.415,3637,3.415,3638,3.415,3639,3.415,3640,4.987,3641,4.987,3642,3.415,3643,3.415,3644,3.415,3645,3.415,3646,3.415,3647,4.987,3648,3.415,3649,3.415,3650,3.415,3651,3.415]],["title/guards/LoadPageGuardService.html",[343,2.41,357,2.97]],["body/guards/LoadPageGuardService.html",[0,0.016,3,0.13,4,0.154,5,0.083,9,0.166,13,0.872,14,2.214,16,4.083,19,0.533,20,2.498,21,3.881,22,0.582,24,1.118,25,0.011,26,0.558,27,0.272,28,0.682,29,1.167,44,1.328,49,0.736,52,1.902,57,1.356,60,0.392,65,2.927,71,0.252,73,0.356,76,1.912,77,0.13,83,0.005,84,0.007,85,0.005,106,0.884,108,0.843,114,0.551,122,1.33,154,1.979,155,0.908,174,2.765,177,2.498,178,4.153,181,4.8,190,4.198,195,1.066,227,3.665,256,2.201,257,4.082,288,2.214,299,2.125,321,2.416,339,2.014,340,5.857,342,3.078,344,4.206,345,3.097,346,1.748,350,4.153,357,5.763,358,1.797,359,2.479,360,2.178,370,4.8,411,2.06,445,4.206,446,3.227,510,5.816,513,3.078,570,2.58,830,2.734,831,3.129,832,4.834,850,3.097,910,2.118,1008,4.153,1059,2.978,1162,2.901,1210,4.153,1211,3.914,1220,1.45,1227,4.153,1235,4.153,1255,2.392,1256,2.392,1263,4.7,1271,5.032,1632,4.8,1633,3.53,2501,4.441,2505,3.914,2511,3.915,2749,4.429,2753,3.814,2874,5.857,3045,4.441,3652,6.682,3653,5.282,3654,5.282,3655,5.282,3656,6.885,3657,7.251,3658,7.251,3659,5.282,3660,4.8,3661,5.282,3662,5.282,3663,3.53,3664,5.282,3665,6.014,3666,6.014,3667,5.282,3668,3.915,3669,5.282,3670,4.457,3671,3.915,3672,3.915,3673,7.037,3674,7.037,3675,4.457,3676,5.978,3677,3.915,3678,4.457,3679,5.282,3680,3.915,3681,4.457]],["title/interfaces/Maxlengths.html",[752,0.567,783,2.799]],["body/interfaces/Maxlengths.html",[0,0.011,3,0.089,4,0.106,5,0.057,7,1.02,9,0.115,10,0.499,11,1.03,19,0.368,25,0.011,26,0.235,27,0.246,28,0.72,29,1.214,33,1.269,35,0.627,36,1.055,37,1.353,39,1.466,52,0.972,58,0.825,60,0.506,65,1.235,71,0.248,73,0.246,74,2.027,75,0.593,77,0.179,83,0.004,84,0.006,85,0.004,87,0.68,106,1.22,108,0.891,109,1.805,114,0.38,115,1.02,116,1.689,118,1.03,119,1.06,122,0.68,128,1.125,137,0.972,142,1.06,144,1.459,145,1.06,156,0.945,157,1.414,159,1.319,169,1.288,175,0.3,176,3.186,177,2.586,182,1.979,184,1.03,186,1.03,187,3.186,189,3.416,191,1.723,193,1.65,195,1.228,199,1.365,202,2.65,208,1.854,252,1.235,256,1.125,282,1.751,283,1.373,284,1.06,312,1.414,316,1.723,321,2.225,325,1.802,334,1.466,345,1.583,346,1.341,359,0.972,360,1.379,391,2.405,396,2.156,407,0.486,411,0.869,431,2.27,445,1.65,480,2.846,494,1.304,504,1.466,505,1.583,530,1.805,539,1.365,544,1.583,548,4.138,549,3.817,560,3.604,561,1.723,566,1.805,570,1.319,634,0.486,636,0.609,638,0.609,657,1.049,694,0.718,697,1.169,713,1.049,752,0.73,753,3.825,754,1.03,755,1.591,756,1.591,757,2.27,758,3.407,759,3.683,760,3.683,761,4.13,762,4.918,763,1.138,764,1.442,765,2.586,766,2.225,767,1.854,768,2.2,769,1.092,770,2.586,771,2.27,772,4.325,773,2.27,774,3.604,775,3.265,776,2.123,777,3.186,778,2.001,779,3.796,780,3.416,781,3.003,782,2.27,783,4.292,784,4.554,785,2.123,786,2.27,787,2.454,788,2.454,789,2.454,790,1.522,791,1.805,792,1.896,793,1.65,794,1.365,795,2.586,796,3.683,797,2.708,798,2.123,799,2.454,800,2.454,801,2.27,802,2.123,803,2.454,804,2.414,805,5.733,806,2.27,807,0.53,808,2.123,809,2.27,810,2.27,811,2.708,812,2.454,813,2.27,814,2.454,815,4.065,816,2.27,817,2.454,818,2.27,819,2.123,820,3.683,821,2.454,822,2.454,823,3.683,824,3.003,825,2.454,826,2.454,827,2.454,828,2.454,829,2.454,830,2.225,831,2.546,832,1.896,833,3.032,834,2.454,835,2.454,836,2.454,837,4.25,838,1.805,839,0.894,840,2.27,841,2.454,842,2.454,843,3.683,844,6.143,845,3.683,846,2.708,847,3.683,848,6.031,849,4.421,850,1.583,851,2.27,852,2.001,853,2.454,854,2.454,855,2.454,856,2.454,857,2.454,858,2.454,859,4.913,860,1.319,861,2.454,862,2.454,863,3.683,864,2.846,865,1.65,866,3.683,867,5.264,868,5.528,869,5.264,870,2.454,871,2.454,872,3.683,873,2.454,874,3.683,875,2.846,876,2.454,877,2.27,878,2.454,879,2.454,880,1.723,881,2.454,882,2.454,883,3.604,884,2.454,885,2.454,886,2.454,887,3.407,888,3.003,889,3.683,890,3.683,891,3.683,892,3.683,893,2.454,894,1.197,895,2.454,896,2.454,897,3.825,898,2.123,899,2.454,900,1.319,901,2.454,902,2.454,903,2.454,904,2.27,905,1.805,906,2.454,907,2.454,908,2.454,909,2.123,910,2.147,911,2.454,912,4.913,913,2.454,914,2.454,915,2.454,916,2.454,917,2.454,918,4.089,919,2.123,920,2.454,921,4.25,922,3.683,923,3.186,924,3.683,925,4.421,926,2.123,927,2.454,928,2.454,929,2.123,930,2.001,931,1.896,932,1.896,933,1.583,934,2.454,935,2.454,936,2.454,937,3.407,938,2.454,939,2.454,940,2.27,941,2.454,942,2.27,943,2.121,944,2.454,945,2.454,946,2.27,947,2.454,948,1.896,949,2.454,950,2.27,951,2.27,952,2.454,953,2.454,954,2.454,955,2.454,956,2.454,957,2.454,958,2.454,959,2.454,960,2.454,961,2.454,962,2.454,963,2.454,964,2.454,965,2.123,966,2.454,967,3.683,968,2.454,969,2.454]],["title/classes/MoHCommonLibraryError.html",[0,0.015,3682,3.175]],["body/classes/MoHCommonLibraryError.html",[0,0.023,2,2.679,3,0.194,4,0.23,5,0.124,19,0.798,22,0.533,24,1.023,25,0.011,26,0.511,27,0.249,28,0.624,60,0.472,70,3.302,77,0.194,83,0.008,84,0.009,85,0.008,87,1.713,167,1.332,1587,3.914,1634,4.113,3682,5.72,3683,6.804,3684,5.857,3685,7.746,3686,6.669,3687,6.669,3688,6.669,3689,7.746,3690,7.746,3691,6.669,3692,6.669,3693,6.669]],["title/components/NameComponent.html",[175,0.209,418,1.004]],["body/components/NameComponent.html",[0,0.013,3,0.105,4,0.124,5,0.096,7,1.469,9,0.134,10,0.561,11,2.034,13,0.62,19,0.62,22,0.689,24,1.186,25,0.011,26,0.641,27,0.317,28,0.748,29,1.048,32,1.178,33,1.426,35,1.051,36,1.137,37,0.868,42,1.683,44,0.945,45,0.864,48,1.211,49,0.817,57,0.819,58,1.205,60,0.475,71,0.21,73,0.288,75,0.695,77,0.105,83,0.004,84,0.006,85,0.004,87,1.146,89,1.402,94,1.206,108,0.6,114,0.641,116,2.222,118,2.034,119,2.094,120,1.221,121,1.841,123,2.52,124,2.52,126,2.782,128,2.222,130,2.486,134,1.107,135,1.359,136,1.242,137,1.139,138,1.206,139,1.318,140,1.171,142,1.242,144,2.317,145,1.242,148,2.827,151,2.383,152,2.083,155,0.734,156,1.593,157,2.383,159,2.224,161,1.447,167,0.586,169,1.158,175,0.296,180,1.318,182,2.224,184,1.736,185,2.222,186,1.736,189,2.222,209,0.569,235,2.301,282,1.639,283,0.714,286,2.224,356,1.841,404,3.043,407,1.405,411,1.466,418,1.551,441,0.864,467,0.913,494,1.019,528,3.043,546,0.841,565,3.259,585,1.244,627,0.888,628,0.913,629,0.938,630,0.991,633,0.775,634,1.414,636,1.027,638,1.027,652,0.913,653,1.35,654,1.827,655,0.991,656,0.991,657,0.819,658,0.991,659,0.864,660,0.991,661,0.864,662,0.991,663,0.888,664,0.991,665,0.888,666,0.991,667,0.888,668,0.991,669,0.888,670,0.938,671,0.991,672,0.888,673,1.426,674,0.888,675,0.938,676,0.991,677,0.888,678,0.991,679,0.888,680,0.991,681,0.864,682,0.991,683,0.991,684,0.864,685,0.991,686,0.888,687,0.991,688,0.864,689,0.991,690,0.888,691,1.67,692,0.888,693,0.841,694,0.841,695,1.426,696,0.888,697,0.913,698,0.991,699,0.864,700,0.991,701,0.888,702,0.991,703,0.888,704,0.991,705,0.841,706,0.991,707,0.864,708,0.991,709,0.888,710,0.964,711,0.991,712,0.864,713,0.819,714,0.991,715,0.864,716,0.991,717,0.841,718,0.991,719,0.864,720,0.938,721,0.888,722,0.991,723,0.913,724,0.991,725,0.888,726,0.991,727,0.864,728,0.991,729,0.888,730,0.938,731,0.888,732,0.864,733,0.964,734,0.754,735,0.864,736,0.991,737,0.864,738,0.991,739,0.864,740,0.991,741,0.864,742,0.991,743,0.864,744,0.991,745,0.864,746,0.991,747,0.864,748,0.991,749,0.864,750,0.938,751,0.991,763,1.497,764,1.966,769,1.279,804,2.431,807,0.893,839,1.047,860,2.224,1079,1.841,1091,2.157,1220,1.687,1285,3.124,1288,1.784,1292,3.828,1310,1.784,1314,1.599,1324,3.403,1328,3.007,1332,2.67,1346,2.222,1361,3.374,1362,2.948,1363,3.58,1364,3.58,1365,3.58,1372,2.019,1374,2.019,1450,2.019,1618,4.138,2300,3.564,2302,4.194,2304,4.847,2305,2.488,2552,3.374,2553,3.828,2556,3.828,2557,3.043,2558,4.553,2567,4.138,2591,3.164,2772,1.855,3192,4.138,3193,4.138,3226,4.138,3227,4.587,3694,3.164,3695,6.072,3696,6.072,3697,5.184,3698,3.602,3699,3.602,3700,5.184,3701,3.602,3702,3.602,3703,5.184,3704,3.602,3705,3.602,3706,3.164,3707,3.602,3708,3.602,3709,3.602,3710,3.602,3711,3.602,3712,3.602,3713,3.602,3714,3.602,3715,3.602,3716,3.602,3717,3.602,3718,3.602,3719,6.072,3720,3.602,3721,3.602,3722,5.184]],["title/components/PageFrameworkComponent.html",[175,0.209,701,1.06]],["body/components/PageFrameworkComponent.html",[0,0.015,3,0.127,4,0.151,5,0.11,9,0.163,13,0.71,22,0.474,25,0.011,26,0.516,27,0.163,32,1.348,35,1.027,36,0.576,44,1.082,45,1.049,48,1.386,49,0.472,57,1.336,58,0.651,71,0.151,73,0.349,77,0.173,83,0.005,84,0.007,85,0.005,114,0.733,115,1.49,122,1.598,140,1.144,155,0.89,167,0.965,169,0.937,171,2.42,175,0.328,209,0.69,284,2.046,358,1.773,407,1.42,418,1.02,441,1.049,467,1.107,476,4.097,520,4.457,546,1.02,585,1.734,627,1.077,628,1.707,629,1.138,630,1.202,633,0.94,634,1.427,636,1.176,638,1.176,652,1.107,653,1.545,654,1.988,655,1.202,656,1.202,657,0.993,658,1.202,659,1.049,660,1.202,661,1.049,662,1.202,663,1.077,664,1.202,665,1.077,666,1.202,667,1.077,668,1.202,669,1.077,670,1.138,671,1.202,672,1.077,673,1.632,674,1.077,675,1.138,676,1.202,677,1.077,678,1.202,679,1.077,680,1.202,681,1.049,682,1.202,683,1.202,684,1.049,685,1.202,686,1.077,687,1.202,688,1.049,689,1.202,690,1.077,691,1.853,692,1.077,693,1.02,694,1.02,695,1.632,696,1.077,697,1.107,698,1.202,699,1.049,700,1.202,701,1.782,702,1.202,703,1.077,704,1.202,705,1.02,706,1.202,707,1.049,708,1.202,709,1.077,710,1.169,711,1.202,712,1.049,713,0.993,714,1.202,715,1.049,716,1.202,717,1.02,718,1.202,719,1.049,720,1.138,721,1.077,722,1.202,723,1.107,724,1.202,725,1.077,726,1.202,727,1.049,728,1.202,729,1.077,730,1.138,731,1.077,732,1.049,733,1.169,734,0.915,735,1.049,736,1.202,737,1.049,738,1.202,739,1.049,740,1.202,741,1.049,742,1.202,743,1.049,744,1.202,745,1.049,746,1.202,747,1.049,748,1.202,749,1.049,750,1.138,751,1.202,755,2.046,756,2.046,860,2.545,1099,5.211,1224,3.861,1375,1.813,1376,2.462,1377,1.813,1378,2.462,1379,2.462,1380,2.462,1381,1.813,1382,1.813,1383,2.462,1384,2.462,1385,1.813,1386,1.813,1387,1.813,1388,1.813,1389,1.813,1390,2.462,1391,2.384,1392,1.813,1393,2.462,1394,2.462,1395,1.813,1396,2.462,1397,1.813,1398,1.813,1399,1.813,1400,1.813,1401,2.999,1402,1.813,1403,1.813,1404,1.813,1405,1.813,1406,1.813,1407,1.813,1408,1.813,1409,1.813,1410,1.813,1411,1.813,1412,1.813,1413,1.813,1414,1.813,1415,1.813,1416,1.813,1417,1.813,1418,2.462,1419,1.813,1420,1.813,1421,1.813,1422,1.813,1423,1.813,1424,1.813,1425,1.813,1426,1.813,1427,1.813,1428,1.813,1429,1.813,1430,1.813,1431,1.813,1432,2.462,1433,1.813,1434,1.813,1435,1.813,1436,1.813,1437,1.813,1438,1.507,1439,1.813,1440,1.813,1441,1.813,1442,1.813,1443,1.813,1444,1.813,1445,1.813,1446,1.813,1620,4.736,1636,4.736,1645,4.736,2333,3.659,2619,3.226,2667,4.381,2668,4.381,3176,6.031,3180,5.768,3189,4.381,3434,4.381,3545,5.211,3723,5.377,3724,5.377,3725,3.838,3726,5.211,3727,5.211,3728,5.933,3729,5.933,3730,5.933,3731,5.211,3732,4.381,3733,7.226,3734,5.211,3735,5.933,3736,5.933,3737,4.736,3738,4.369,3739,4.369]],["title/interfaces/PageList.html",[752,0.567,3740,3.175]],["body/interfaces/PageList.html",[0,0.018,3,0.15,4,0.178,5,0.096,9,0.319,10,0.715,17,1.583,19,0.616,21,3.618,22,0.411,25,0.011,27,0.273,29,1.088,36,0.679,37,1.223,49,0.557,57,0.814,60,0.489,65,2.658,69,3.2,71,0.228,73,0.411,76,2.21,77,0.192,83,0.006,84,0.008,85,0.006,108,0.945,144,2.31,195,1.413,202,3.204,283,1.021,338,2.447,339,2.215,391,2.582,393,4.112,444,2.887,494,2.255,609,3.243,752,0.679,754,1.725,804,2.421,846,3.024,910,1.497,932,3.177,933,3.406,979,5.507,1068,3.557,1158,3.177,1211,3.353,1220,2.152,1224,3.353,1255,2.764,1256,2.764,1260,5.888,1262,4.884,1276,3.804,1556,3.804,2437,5.471,2505,3.353,2626,3.177,3663,4.79,3740,6.025,3741,5.28,3742,4.112,3743,5.151,3744,4.525,3745,4.525,3746,5.81,3747,7.004,3748,5.81,3749,4.525,3750,4.525,3751,4.525,3752,6.772,3753,4.525,3754,4.525,3755,4.525,3756,4.525,3757,4.525,3758,4.525,3759,4.525,3760,4.525,3761,4.525,3762,4.525,3763,4.525,3764,5.81,3765,5.81,3766,4.525,3767,4.525,3768,4.525,3769,4.525,3770,4.525,3771,4.525,3772,4.525,3773,4.525]],["title/interfaces/PageListInterface.html",[752,0.567,1240,3.175]],["body/interfaces/PageListInterface.html",[0,0.025,3,0.14,4,0.166,5,0.089,9,0.28,10,0.684,14,1.564,17,2.172,19,0.575,21,3.499,22,0.384,25,0.011,27,0.236,29,1.248,33,1.322,36,0.633,37,1.183,49,0.52,57,1.232,58,0.942,60,0.488,65,3.217,69,3.323,71,0.244,73,0.384,76,2.062,77,0.184,83,0.006,84,0.008,85,0.006,106,1.488,108,0.959,114,0.594,120,1.309,155,0.979,171,2.117,190,2.964,195,1.331,202,2.54,227,2.133,282,1.52,283,1.253,288,1.564,338,2.366,339,2.117,343,3.544,344,2.579,356,2.246,362,3.319,367,4.115,368,3.319,372,3.899,373,3.836,374,3.836,375,3.836,411,1.359,444,3.96,445,2.579,479,3.249,494,1.359,528,3.711,573,2.579,609,2.807,752,0.931,754,1.609,875,3.899,900,2.062,910,1.838,932,4.358,933,3.256,972,2.964,979,5.53,1059,2.379,1199,3.548,1200,5.047,1201,3.836,1202,4.221,1203,3.548,1204,3.128,1205,3.836,1206,4.221,1207,4.221,1208,4.221,1209,4.221,1210,3.319,1211,3.128,1212,4.221,1213,3.836,1219,3.899,1220,2.057,1221,3.128,1223,4.221,1224,4.115,1226,4.221,1227,3.319,1228,5.218,1231,4.221,1233,4.221,1234,4.221,1235,3.319,1237,4.221,1238,4.221,1240,5.218,1246,5.047,1247,3.836,1248,4.221,1249,4.221,1250,3.548,1251,4.221,1252,4.221,1253,5.553,1254,5.553,1255,2.579,1256,2.579,1257,5.553,1258,5.047,1259,6.207,1260,5.76,1261,6.207,1262,4.669,1263,4.366,1264,5.047,1265,4.366,1266,5.553,1267,4.221,1268,4.221,1269,4.221,1270,4.221,1271,3.319,1272,4.221,1273,4.221,1274,4.221,1275,4.221,1276,3.548,1277,4.221,1278,4.221,1279,4.221,1280,4.221,1281,4.221,1556,3.548,3774,4.805]],["title/components/PageSectionComponent.html",[175,0.209,703,1.06]],["body/components/PageSectionComponent.html",[0,0.016,3,0.131,4,0.155,5,0.112,9,0.168,13,0.724,19,0.818,22,0.546,25,0.011,26,0.523,27,0.168,32,1.375,35,0.611,36,0.592,44,1.103,45,1.079,48,1.413,49,0.486,57,1.307,58,0.67,71,0.155,73,0.359,77,0.131,83,0.005,84,0.007,85,0.005,92,3.32,114,0.748,115,1.512,122,1.617,140,1.166,167,0.984,169,1.08,175,0.333,209,0.71,282,1.422,283,0.891,321,1.806,396,1.75,407,1.422,418,1.05,441,1.079,450,2.315,467,1.139,481,2.773,503,2.315,546,1.05,585,1.452,627,1.109,628,1.139,629,1.171,630,1.237,633,0.968,634,1.428,636,1.199,638,1.199,652,1.139,653,1.78,654,2.011,655,1.237,656,1.237,657,1.022,658,1.237,659,1.079,660,1.237,661,1.079,662,1.237,663,1.109,664,1.237,665,1.109,666,1.237,667,1.109,668,1.237,669,1.109,670,1.171,671,1.237,672,1.109,673,1.664,674,1.109,675,1.171,676,1.237,677,1.109,678,1.237,679,1.109,680,1.237,681,1.079,682,1.237,683,1.237,684,1.079,685,1.237,686,1.109,687,1.237,688,1.079,689,1.237,690,1.109,691,1.88,692,1.109,693,1.05,694,1.05,695,1.664,696,1.109,697,1.139,698,1.237,699,1.079,700,1.237,701,1.109,702,1.237,703,1.803,704,1.237,705,1.05,706,1.237,707,1.079,708,1.237,709,1.109,710,1.203,711,1.237,712,1.079,713,1.022,714,1.237,715,1.079,716,1.237,717,1.05,718,1.237,719,1.079,720,1.171,721,1.109,722,1.237,723,1.139,724,1.237,725,1.109,726,1.237,727,1.079,728,1.237,729,1.109,730,1.171,731,1.109,732,1.079,733,1.203,734,0.942,735,1.079,736,1.237,737,1.079,738,1.237,739,1.079,740,1.237,741,1.079,742,1.237,743,1.079,744,1.237,745,1.079,746,1.237,747,1.079,748,1.237,749,1.079,750,1.171,751,1.237,755,2.086,756,2.086,808,3.105,1056,3.105,1204,2.926,1375,1.866,1376,2.51,1377,1.866,1378,2.51,1379,2.51,1380,2.51,1381,1.866,1382,1.866,1383,2.51,1384,2.51,1385,1.866,1386,1.866,1387,1.866,1388,1.866,1389,1.866,1390,2.51,1391,2.43,1392,1.866,1393,2.51,1394,2.51,1395,1.866,1396,2.51,1397,1.866,1398,1.866,1399,1.866,1400,1.866,1401,3.034,1402,1.866,1403,1.866,1404,1.866,1405,1.866,1406,1.866,1407,1.866,1408,1.866,1409,1.866,1410,1.866,1411,1.866,1412,1.866,1413,1.866,1414,1.866,1415,1.866,1416,1.866,1417,1.866,1418,2.51,1419,1.866,1420,1.866,1421,1.866,1422,1.866,1423,1.866,1424,1.866,1425,1.866,1426,1.866,1427,1.866,1428,1.866,1429,1.866,1430,1.866,1431,1.866,1432,2.51,1433,1.866,1434,1.866,1435,1.866,1436,1.866,1437,1.866,1438,1.55,1439,1.866,1440,1.866,1441,1.866,1442,1.866,1443,1.866,1444,1.866,1445,1.866,1446,1.866,2557,2.639,2619,3.32,2667,4.466,2668,4.466,3047,3.949,3176,5.836,3436,4.721,3529,3.949,3723,5.836,3734,6.422,3737,4.828,3775,5.836,3776,3.949,3777,6.049,3778,6.049,3779,6.049,3780,6.049,3781,4.496,3782,4.496,3783,7.629,3784,4.496,3785,4.496,3786,4.496,3787,4.496,3788,3.949,3789,4.496,3790,4.496,3791,4.496,3792,4.496]],["title/injectables/PageStateService.html",[339,1.44,2505,2.799]],["body/injectables/PageStateService.html",[0,0.016,3,0.132,4,0.156,5,0.084,9,0.3,10,0.658,13,0.728,17,1.393,19,0.728,20,2.54,21,3.9,22,0.669,24,1.255,25,0.011,26,0.626,27,0.309,28,0.765,29,0.906,35,1.04,36,1.038,37,1.149,49,0.896,57,0.716,58,1.092,60,0.5,65,2.947,69,3.269,70,2.244,71,0.21,73,0.362,76,1.944,77,0.177,83,0.005,84,0.007,85,0.005,108,0.912,144,2.419,156,1.393,195,1.356,202,3.164,283,0.898,338,2.298,339,2.036,341,2.432,391,2.774,393,3.617,444,2.54,494,2.227,609,2.699,752,0.597,804,2.226,846,2.66,910,1.995,932,2.795,933,3.132,979,4.2,1068,3.13,1158,2.795,1210,4.2,1211,4.467,1220,1.979,1224,2.949,1255,2.432,1256,2.432,1260,5.815,1262,4.49,1276,3.346,2437,5.322,2505,3.958,2626,2.795,3663,4.623,3740,6.18,3741,6.739,3742,3.617,3744,6.028,3745,5.341,3746,6.442,3747,6.719,3748,5.341,3749,3.98,3750,3.98,3751,3.98,3752,6.442,3753,3.98,3754,3.98,3755,3.98,3756,3.98,3757,3.98,3758,3.98,3759,3.98,3760,3.98,3761,3.98,3762,3.98,3763,6.028,3764,5.341,3765,5.341,3766,6.028,3767,3.98,3768,3.98,3769,3.98,3770,6.028,3771,3.98,3772,3.98,3773,3.98,3793,6.081,3794,6.863,3795,6.081,3796,4.532,3797,4.532,3798,4.532,3799,4.532,3800,4.532,3801,4.532,3802,4.532,3803,4.532,3804,4.532,3805,4.532,3806,4.532,3807,4.532,3808,4.532,3809,4.532,3810,4.532]],["title/components/PasswordComponent.html",[175,0.209,705,1.004]],["body/components/PasswordComponent.html",[0,0.01,3,0.079,4,0.094,5,0.078,7,1.279,9,0.102,10,0.455,13,0.504,19,0.615,22,0.68,24,0.887,25,0.011,26,0.527,27,0.311,28,0.541,29,0.984,32,1.169,33,0.75,35,1.101,36,1.075,37,1.047,39,2.007,40,1.681,42,1.674,44,0.938,45,0.654,46,2.259,48,0.983,49,0.676,52,0.862,57,0.665,58,0.861,60,0.493,71,0.2,73,0.218,74,2.288,75,0.526,77,0.15,83,0.003,84,0.005,85,0.003,87,0.931,94,0.913,106,1.146,108,0.487,109,1.6,114,0.52,115,1.138,120,1.247,121,2.221,122,1.279,130,1.922,134,0.838,135,1.029,136,0.94,137,1.331,138,0.913,139,0.998,140,0.992,155,0.858,159,2.207,167,0.837,169,1.233,173,2.365,175,0.347,188,0.887,195,0.746,197,3.552,205,1.681,208,1.095,209,0.665,252,1.095,283,0.54,284,1.452,288,1.37,304,1.404,316,1.528,325,0.887,327,3.568,334,3.481,338,1.937,346,1.224,358,1.537,360,1.258,407,1.378,411,0.771,418,0.637,441,0.654,448,1.6,467,0.691,479,2.365,480,1.681,488,2.013,494,1.768,504,1.3,505,1.404,519,2.36,539,1.21,545,2.168,546,0.637,570,1.17,573,1.463,585,1.01,601,4.617,627,0.672,628,0.691,629,0.71,630,0.75,633,0.587,634,1.391,636,0.834,638,0.834,652,0.691,653,1.096,654,1.591,655,0.75,656,0.75,657,0.62,658,0.75,659,0.654,660,0.75,661,0.654,662,0.75,663,0.672,664,0.75,665,0.672,666,0.75,667,0.672,668,0.75,669,0.672,670,0.71,671,0.75,672,0.672,673,1.158,674,0.672,675,0.71,676,0.75,677,0.672,678,0.75,679,0.672,680,0.75,681,0.654,682,0.75,683,0.75,684,0.654,685,0.75,686,0.672,687,0.75,688,0.654,689,0.75,690,0.672,691,1.415,692,0.672,693,0.637,694,0.637,695,1.158,696,0.672,697,0.691,698,0.75,699,0.654,700,0.75,701,0.672,702,0.75,703,0.672,704,0.75,705,1.543,706,0.75,707,0.654,708,0.75,709,0.672,710,0.73,711,0.75,712,0.654,713,0.62,714,0.75,715,0.654,716,0.75,717,0.637,718,0.75,719,0.654,720,0.71,721,0.672,722,0.75,723,0.691,724,0.75,725,0.672,726,0.75,727,0.654,728,0.75,729,0.672,730,0.71,731,0.672,732,0.654,733,0.73,734,0.571,735,0.654,736,0.75,737,0.654,738,0.75,739,0.654,740,0.75,741,0.654,742,0.75,743,0.654,744,0.75,745,0.654,746,0.75,747,0.654,748,0.75,749,0.654,750,0.71,751,0.75,752,0.555,755,1.452,756,1.452,763,1.426,764,1.721,765,2.883,766,2.066,767,2.066,769,0.968,790,1.35,791,1.6,792,1.681,793,1.463,794,1.869,798,3.552,807,0.725,831,2.66,839,0.792,880,2.36,894,1.061,910,2.317,1069,1.528,1079,1.495,1091,2.347,1101,3.361,1220,0.887,1323,1.463,1332,2.168,1334,1.774,1362,2.775,1375,1.131,1376,1.747,1377,1.131,1378,1.747,1379,1.747,1380,1.747,1381,1.131,1382,1.131,1383,1.747,1384,1.747,1385,1.131,1386,1.131,1387,1.131,1388,1.131,1389,1.131,1390,1.747,1391,1.692,1392,1.131,1393,1.747,1394,1.747,1395,1.131,1396,1.747,1397,1.131,1398,1.131,1399,1.131,1400,1.131,1401,2.401,1402,1.131,1403,1.131,1404,1.131,1405,1.131,1406,1.131,1407,1.131,1408,1.131,1409,1.131,1410,1.131,1411,1.131,1412,1.131,1413,1.131,1414,1.131,1415,1.131,1416,1.131,1417,1.131,1418,1.747,1419,1.131,1420,1.131,1421,1.131,1422,1.131,1423,1.131,1424,1.131,1425,1.131,1426,1.131,1427,1.131,1428,1.131,1429,1.131,1430,1.131,1431,1.131,1432,1.747,1433,1.131,1434,1.131,1435,1.131,1436,1.131,1437,1.131,1438,0.94,1439,1.131,1440,1.131,1441,1.131,1442,1.131,1443,1.131,1444,1.131,1445,1.131,1446,1.131,1479,1.936,1481,5.251,1587,1.6,1657,1.774,1686,4.617,2300,3.019,2302,3.552,2305,1.883,2318,3.765,2346,1.681,2386,2.013,2442,3.698,2444,2.395,2448,3.361,2465,3.109,2562,3.242,2583,2.168,2663,3.568,2698,2.176,2749,3.765,2753,1.528,2763,2.74,2819,3.109,2941,2.013,3083,3.361,3194,3.552,3200,3.798,3244,2.013,3245,2.013,3257,3.698,3537,4.617,3546,3.361,3627,2.013,3811,2.176,3812,5.804,3813,3.698,3814,3.361,3815,3.361,3816,3.698,3817,3.698,3818,3.698,3819,3.698,3820,5.491,3821,3.698,3822,3.698,3823,4.518,3824,4.518,3825,4.518,3826,4.518,3827,6.05,3828,4.518,3829,4.518,3830,4.21,3831,4.518,3832,4.518,3833,4.518,3834,4.518,3835,4.518,3836,4.21,3837,4.616,3838,2.726,3839,2.726,3840,2.726,3841,2.726,3842,3.109,3843,2.726,3844,2.726,3845,3.698,3846,2.726,3847,2.726,3848,2.726,3849,2.726,3850,2.726,3851,2.726,3852,2.726,3853,2.726,3854,2.726,3855,2.726,3856,3.698,3857,3.698,3858,3.698,3859,3.698,3860,3.698,3861,2.726,3862,2.726,3863,3.698,3864,2.726,3865,2.726,3866,2.726,3867,3.361,3868,3.698,3869,2.726,3870,2.726,3871,2.726,3872,2.726,3873,2.726,3874,2.726,3875,2.726,3876,3.698,3877,4.106,3878,2.395,3879,1.883,3880,2.395,3881,2.395,3882,2.395,3883,2.395,3884,2.176,3885,4.518,3886,4.518,3887,3.698,3888,2.395,3889,2.395,3890,2.395,3891,2.395,3892,2.395,3893,2.395,3894,3.698,3895,2.395,3896,3.698,3897,2.395,3898,3.698,3899,2.395,3900,2.395,3901,3.698,3902,3.698,3903,2.395,3904,2.395,3905,2.395,3906,2.395,3907,2.395,3908,2.395,3909,2.176,3910,2.395,3911,2.395,3912,6.608,3913,4.21,3914,2.726,3915,4.21,3916,4.21,3917,5.081,3918,4.21,3919,4.21,3920,4.21,3921,4.21,3922,2.726]],["title/interfaces/PasswordErrorMsg.html",[752,0.567,3837,3.175]],["body/interfaces/PasswordErrorMsg.html",[0,0.014,3,0.116,4,0.137,5,0.074,7,1.229,9,0.148,10,0.601,19,0.476,25,0.011,27,0.239,28,0.708,29,0.955,32,0.903,33,1.529,35,0.871,36,0.732,37,1.073,39,2.65,40,2.452,42,2.009,44,1.013,46,2.133,52,1.257,60,0.501,71,0.24,73,0.318,74,2.673,75,0.766,77,0.186,83,0.005,84,0.007,85,0.005,87,0.879,106,1.102,108,0.643,109,2.333,114,0.491,115,1.229,120,1.097,121,1.412,122,0.879,130,1.222,137,1.257,155,0.81,159,1.705,167,0.904,169,1.315,173,2.947,175,0.369,188,1.809,195,0.985,197,4.427,205,2.452,208,1.597,209,0.628,252,1.597,283,0.788,284,1.371,288,1.293,304,2.047,316,2.228,325,1.293,334,2.65,338,1.862,346,1.155,358,1.661,360,1.188,407,0.628,411,1.124,448,2.333,479,2.556,480,2.452,488,2.935,494,1.572,504,1.895,505,2.047,519,2.228,539,1.765,545,2.047,570,1.705,573,2.983,634,0.628,636,0.788,638,0.788,705,1.298,752,0.732,754,1.331,755,1.917,756,1.917,763,1.712,764,1.807,765,3.115,766,2.233,767,2.233,769,1.412,790,1.968,791,2.333,792,2.452,793,2.133,794,1.765,798,2.745,807,0.958,839,1.155,880,2.228,894,2.164,910,2.123,1091,2.465,1101,3.173,1220,1.293,1323,2.133,1332,2.047,1334,2.587,1362,2.845,1375,1.65,1376,2.307,1377,1.65,1378,2.307,1379,2.307,1380,2.307,1381,1.65,1382,1.65,1383,2.307,1384,2.307,1385,1.65,1386,1.65,1387,1.65,1388,1.65,1389,1.65,1390,2.307,1391,2.233,1392,1.65,1393,2.307,1394,2.307,1395,1.65,1396,2.307,1397,1.65,1398,1.65,1399,1.65,1400,1.65,1401,2.881,1402,1.65,1403,1.65,1404,1.65,1405,1.65,1406,1.65,1407,1.65,1408,1.65,1409,1.65,1410,1.65,1411,1.65,1412,1.65,1413,1.65,1414,1.65,1415,1.65,1416,1.65,1417,1.65,1418,2.307,1419,1.65,1420,1.65,1421,1.65,1422,1.65,1423,1.65,1424,1.65,1425,1.65,1426,1.65,1427,1.65,1428,1.65,1429,1.65,1430,1.65,1431,1.65,1432,2.307,1433,1.65,1434,1.65,1435,1.65,1436,1.65,1437,1.65,1438,1.371,1439,1.65,1440,1.65,1441,1.65,1442,1.65,1443,1.65,1444,1.65,1445,1.65,1446,1.65,1479,1.828,1481,5.287,1587,2.333,1657,2.587,2300,2.333,2302,2.745,2305,2.745,2318,3.618,2346,3.428,2386,2.935,2448,4.437,2562,4.355,2583,2.047,2663,3.428,2698,3.173,2753,2.228,2763,2.587,2819,2.935,2941,2.935,3083,3.173,3194,2.745,3200,2.935,3244,2.935,3245,2.935,3537,4.437,3546,3.173,3627,2.935,3811,3.173,3812,6.097,3813,3.491,3814,3.173,3815,3.173,3816,3.491,3817,3.491,3818,3.491,3819,3.491,3820,4.882,3821,3.491,3822,3.491,3823,3.491,3824,3.491,3825,3.491,3826,3.491,3827,3.491,3828,3.491,3829,3.491,3831,3.491,3832,3.491,3833,3.491,3834,3.491,3835,3.491,3837,5.125,3842,2.935,3845,3.491,3856,3.491,3857,3.491,3858,3.491,3859,3.491,3860,3.491,3863,3.491,3867,3.173,3868,3.491,3876,4.882,3877,5.116,3878,3.491,3879,2.745,3880,3.491,3881,3.491,3882,3.491,3883,3.491,3884,3.173,3885,5.63,3886,6.648,3887,4.882,3888,3.491,3889,3.491,3890,3.491,3891,3.491,3892,3.491,3893,3.491,3894,4.882,3895,3.491,3896,4.882,3897,3.491,3898,4.882,3899,3.491,3900,3.491,3901,4.882,3902,4.882,3903,3.491,3904,3.491,3905,3.491,3906,3.491,3907,3.491,3908,3.491,3909,3.173,3910,3.491,3911,3.491]],["title/classes/Person.html",[0,0.015,2641,2.652]],["body/classes/Person.html",[0,0.023,2,1.71,3,0.124,4,0.147,5,0.079,7,1.656,9,0.159,10,0.63,13,0.697,22,0.681,24,0.894,25,0.011,26,0.656,27,0.305,28,0.545,35,1.018,36,0.876,49,0.91,58,0.868,60,0.5,71,0.201,77,0.124,83,0.005,84,0.007,85,0.005,87,1.289,94,1.425,108,0.867,120,1.379,121,2.07,134,1.308,135,1.606,136,1.467,137,1.346,138,1.425,139,1.558,140,0.82,155,0.867,156,1.308,171,1.952,174,2.679,195,0.754,224,2.5,235,2.587,283,0.843,284,2.009,295,3.793,325,1.896,391,2.393,396,2.782,410,3.42,494,1.648,503,3.981,694,1.669,830,1.71,831,1.957,875,3.594,948,4.408,971,4.303,972,3.594,1000,3.738,1050,3.266,1051,3.594,1052,2.885,1053,3.42,1597,4.872,2361,5.466,2363,5.705,2641,5.15,2859,3.142,2956,4.907,3189,5.277,3190,6.171,3195,5.304,3196,5.304,3197,5.304,3238,6.171,3240,6.526,3242,5.976,3923,3.738,3924,6.645,3925,6.645,3926,7.486,3927,7.147,3928,6.645,3929,6.645,3930,6.575,3931,7.147,3932,4.255,3933,4.255,3934,4.255,3935,5.827,3936,4.255,3937,4.255,3938,4.255,3939,4.255,3940,4.255,3941,5.827,3942,5.827,3943,5.827,3944,4.255,3945,4.255,3946,7.486,3947,4.255,3948,4.255,3949,5.827,3950,4.255,3951,4.255,3952,5.827,3953,7.147,3954,4.255,3955,4.255,3956,3.793,3957,5.827,3958,5.118,3959,4.255,3960,4.255,3961,6.645,3962,5.827,3963,5.827,3964,5.827,3965,3.397,3966,3.738,3967,4.255,3968,4.255,3969,7.73,3970,4.255,3971,4.255,3972,8.418,3973,6.645,3974,4.255,3975,4.255,3976,5.827,3977,5.827,3978,4.255,3979,4.255,3980,4.255,3981,4.255,3982,4.255]],["title/components/PhnComponent.html",[175,0.209,707,1.032]],["body/components/PhnComponent.html",[0,0.01,3,0.084,4,0.1,5,0.082,7,0.642,9,0.108,10,0.478,11,1.48,13,0.529,14,1.945,17,1.837,19,0.529,22,0.694,24,1.164,25,0.011,26,0.606,27,0.318,28,0.732,29,0.958,32,1.216,35,1.048,36,1.137,37,0.486,42,1.63,44,0.975,45,0.697,48,1.032,49,0.864,56,2.875,57,0.698,58,1.178,60,0.465,71,0.222,73,0.232,75,0.56,77,0.084,83,0.008,84,0.005,85,0.003,87,0.977,89,1.13,93,1.627,94,2.677,106,1.396,108,0.861,112,4.026,114,0.546,115,1.183,116,1.957,117,3.452,118,1.48,119,1.523,120,1.016,121,1.569,122,1.558,123,1.834,124,1.834,125,2.593,126,2.371,127,2.87,128,2.354,129,3.022,130,2.165,134,0.892,135,1.095,136,1.001,137,0.918,138,0.972,139,1.063,140,1.031,142,1.001,144,1.89,145,1.001,147,1.704,148,2.917,149,3.358,151,1.335,152,2.584,153,2.476,154,1.289,155,0.591,156,0.892,157,1.335,159,1.245,161,1.775,167,0.719,168,1.495,169,1.07,171,1.48,174,1.335,175,0.261,184,0.972,186,0.972,188,0.945,195,1.14,205,1.79,209,0.459,210,4.128,235,1.961,283,0.575,312,1.335,321,1.166,338,2.154,391,2.269,396,1.13,404,1.704,407,1.384,418,0.678,441,0.697,467,0.736,494,2.299,501,2.725,539,1.289,546,0.678,565,2.87,585,1.06,627,0.716,628,0.736,629,0.756,630,0.798,633,0.625,634,1.396,636,0.876,638,0.876,652,0.736,653,1.15,654,1.644,655,0.798,656,0.798,657,0.66,658,0.798,659,0.697,660,0.798,661,0.697,662,0.798,663,0.716,664,0.798,665,0.716,666,0.798,667,0.716,668,0.798,669,0.716,670,0.756,671,0.798,672,0.716,673,1.215,674,0.716,675,0.756,676,0.798,677,0.716,678,0.798,679,0.716,680,0.798,681,0.697,682,0.798,683,0.798,684,0.697,685,0.798,686,0.716,687,0.798,688,0.697,689,0.798,690,0.716,691,1.471,692,0.716,693,0.678,694,0.678,695,1.215,696,0.716,697,0.736,698,0.798,699,0.697,700,0.798,701,0.716,702,0.798,703,0.716,704,0.798,705,0.678,706,0.798,707,1.435,708,0.798,709,0.716,710,0.777,711,0.798,712,0.697,713,0.66,714,0.798,715,0.697,716,0.798,717,0.678,718,0.798,719,0.697,720,0.756,721,0.716,722,0.798,723,0.736,724,0.798,725,0.716,726,0.798,727,0.697,728,0.798,729,0.716,730,0.756,731,0.716,732,0.697,733,0.777,734,0.608,735,0.697,736,0.798,737,0.697,738,0.798,739,0.697,740,0.798,741,0.697,742,0.798,743,0.697,744,0.798,745,0.697,746,0.798,747,0.697,748,0.798,749,0.697,750,0.756,751,0.798,763,1.319,764,1.834,804,2.188,807,0.761,830,1.166,831,1.335,839,0.844,865,2.87,894,1.72,910,1.969,943,1.335,1018,1.79,1079,1.569,1091,2.123,1220,1.437,1285,2.855,1288,1.437,1310,1.437,1314,1.289,1323,2.87,1324,2.998,1326,2.998,1327,3.299,1328,2.648,1332,2.275,1338,1.79,1339,1.79,1340,1.79,1344,1.889,1346,1.79,1349,1.79,1350,1.79,1351,1.79,1352,1.79,1353,1.79,1354,1.79,1355,1.79,1356,3.627,1369,1.79,1370,1.79,1371,1.79,1372,1.627,1374,1.627,1447,1.627,1448,1.558,1449,1.627,1450,1.627,1451,1.889,1452,2.725,1479,3.487,1495,2.275,1705,3.262,2358,2.87,2588,2.317,2589,2.144,2590,2.317,2660,1.79,2663,1.79,2749,1.889,2753,1.627,2760,2.144,2763,1.889,2767,3.312,2772,3.312,2776,4.864,2926,2.55,3232,2.144,3396,2.317,3551,3.88,3593,2.317,3983,2.55,3984,6.376,3985,4.418,3986,4.418,3987,5.978,3988,4.698,3989,4.418,3990,2.903,3991,2.903,3992,4.418,3993,2.903,3994,4.418,3995,5.25,3996,2.903,3997,4.418,3998,2.903,3999,2.903,4000,2.903,4001,2.903,4002,2.903,4003,2.903,4004,2.903,4005,2.903,4006,3.88,4007,3.88,4008,2.903,4009,2.903,4010,2.903,4011,2.903,4012,2.144,4013,7.043,4014,2.144,4015,2.005,4016,5.348,4017,2.903,4018,2.903,4019,2.317,4020,3.88,4021,2.55,4022,5.348,4023,2.317,4024,2.903,4025,2.903,4026,2.317,4027,2.317,4028,2.317,4029,2.317,4030,2.317,4031,2.903,4032,2.55,4033,4.418,4034,4.418,4035,2.55,4036,2.903,4037,4.418,4038,2.903,4039,2.903,4040,2.903,4041,2.903,4042,2.903,4043,2.55,4044,2.903,4045,5.978,4046,2.903,4047,2.903,4048,2.903,4049,4.418,4050,2.903,4051,3.88,4052,3.88]],["title/components/PhoneNumberComponent.html",[175,0.209,709,1.06]],["body/components/PhoneNumberComponent.html",[0,0.01,3,0.087,4,0.104,5,0.084,7,0.663,9,0.112,10,0.49,11,1.516,13,0.542,14,1.977,17,1.868,19,0.359,22,0.697,24,1.173,25,0.011,26,0.61,27,0.318,28,0.727,29,1.139,32,1.029,35,1.07,36,1.133,37,0.913,39,2.159,42,1.805,44,1.108,45,0.72,48,1.057,49,0.861,52,0.948,57,0.715,58,1.186,60,0.459,71,0.225,73,0.24,74,1.098,75,0.578,77,0.132,83,0.004,84,0.005,85,0.004,87,1.001,89,1.167,93,1.681,94,2.694,106,1.293,107,3.009,108,0.631,112,4.048,114,0.56,115,1.207,117,3.501,118,1.516,119,1.561,120,1.271,121,1.608,122,1.575,123,1.879,124,1.879,125,2.658,126,2.43,127,2.928,128,2.224,129,3.056,130,2.189,134,0.922,135,1.132,136,1.034,137,0.948,138,1.004,139,1.098,140,1.052,142,1.034,144,1.922,145,1.034,147,1.76,148,2.946,149,2.159,151,2.082,152,2.621,153,2.538,154,1.331,155,0.923,156,0.922,157,1.379,159,1.287,161,2.192,167,0.488,168,1.544,169,1.084,171,1.827,175,0.296,188,0.976,195,1.262,205,3.365,209,0.474,210,4.197,215,2.634,216,2.634,235,2.01,283,0.594,312,2.082,316,1.681,325,1.473,358,1.353,391,1.516,407,1.388,418,0.7,441,0.72,467,0.76,470,2.394,494,2.274,546,0.7,585,1.087,627,0.739,628,0.76,629,0.781,630,0.825,633,0.645,634,1.399,636,0.897,638,0.897,652,0.76,653,1.179,654,1.672,655,0.825,656,0.825,657,0.682,658,0.825,659,0.72,660,0.825,661,0.72,662,0.825,663,0.739,664,0.825,665,0.739,666,0.825,667,0.739,668,0.825,669,0.739,670,0.781,671,0.825,672,0.739,673,1.245,674,0.739,675,0.781,676,0.825,677,0.739,678,0.825,679,0.739,680,0.825,681,0.72,682,0.825,683,0.825,684,0.72,685,0.825,686,0.739,687,0.825,688,0.72,689,0.825,690,0.739,691,1.501,692,0.739,693,0.7,694,0.7,695,1.245,696,0.739,697,0.76,698,0.825,699,0.72,700,0.825,701,0.739,702,0.825,703,0.739,704,0.825,705,0.7,706,0.825,707,0.72,708,0.825,709,1.692,710,2.008,711,0.825,712,0.72,713,0.682,714,0.825,715,0.72,716,0.825,717,0.7,718,0.825,719,0.72,720,0.781,721,0.739,722,0.825,723,0.76,724,0.825,725,0.739,726,0.825,727,0.72,728,0.825,729,0.739,730,0.781,731,0.739,732,0.72,733,0.803,734,0.628,735,0.72,736,0.825,737,0.72,738,0.825,739,0.72,740,0.825,741,0.72,742,0.825,743,0.72,744,0.825,745,0.72,746,0.825,747,0.72,748,0.825,749,0.72,750,0.781,751,0.825,763,1.117,764,1.583,766,1.205,767,1.205,804,2.224,807,0.517,830,2.192,839,0.872,865,2.928,894,1.167,897,2.071,910,1.586,977,4.028,1079,1.608,1091,1.608,1220,1.473,1285,2.896,1288,1.485,1310,1.485,1314,1.331,1323,2.928,1326,3.058,1328,2.701,1338,1.85,1339,1.85,1340,1.85,1349,1.85,1350,1.85,1351,1.85,1352,1.85,1353,1.85,1354,1.85,1355,1.85,1356,3.36,1369,1.85,1370,1.85,1371,1.85,1372,1.681,1374,1.681,1447,1.681,1448,1.609,1449,1.681,1452,2.793,2319,2.214,2358,2.928,2417,2.214,2589,2.214,2608,2.394,2767,1.544,2772,1.544,2776,2.071,3364,2.634,3374,2.634,4012,2.214,4014,4.028,4027,2.394,4028,2.394,4029,2.394,4030,2.394,4053,7.384,4054,6.71,4055,2.634,4056,4.528,4057,4.528,4058,5.338,4059,5.455,4060,5.455,4061,4.792,4062,4.792,4063,2.999,4064,2.999,4065,2.999,4066,3.614,4067,2.999,4068,2.999,4069,4.528,4070,2.999,4071,2.999,4072,2.999,4073,2.999,4074,4.528,4075,2.999,4076,2.999,4077,5.338,4078,2.999,4079,3.977,4080,2.999,4081,2.999,4082,2.999,4083,2.999,4084,4.528,4085,4.528,4086,4.528,4087,2.999,4088,2.999,4089,2.999,4090,2.999,4091,2.999,4092,2.999,4093,6.524,4094,2.999,4095,4.528,4096,5.455,4097,4.528,4098,2.999,4099,4.528,4100,4.528,4101,2.999,4102,2.999,4103,2.999,4104,2.999,4105,2.999,4106,2.999,4107,2.999,4108,2.999,4109,2.999,4110,4.528,4111,2.999,4112,2.999,4113,4.528]],["title/components/PostalCodeComponent.html",[175,0.209,712,1.032]],["body/components/PostalCodeComponent.html",[0,0.011,3,0.088,4,0.104,5,0.084,7,1.349,9,0.113,10,0.492,11,1.835,13,0.545,19,0.545,22,0.687,24,1.154,25,0.011,26,0.604,27,0.316,28,0.728,29,1.063,32,1.034,35,1.041,36,1.137,37,0.762,42,1.658,44,0.83,45,0.725,48,1.063,49,0.828,57,0.719,58,1.188,60,0.478,71,0.226,73,0.241,75,0.582,77,0.088,83,0.004,84,0.005,85,0.004,87,1.007,89,1.175,94,1.011,106,0.902,108,0.527,114,0.563,115,1.212,116,2.005,118,1.835,119,1.889,120,1.034,121,1.617,122,1.349,123,2.273,124,2.273,126,2.442,127,3.273,128,2.005,129,3.152,130,2.311,134,0.928,135,1.139,136,1.041,137,0.955,138,1.011,139,1.105,140,1.056,142,1.041,144,2.175,145,1.041,148,2.629,151,2.093,152,1.829,156,0.928,157,2.093,159,1.953,161,1.213,167,0.891,169,1.161,175,0.267,180,1.105,182,1.953,183,2.41,184,1.524,185,1.862,186,1.524,189,1.862,200,2.41,201,2.41,202,1.213,204,2.41,209,0.477,235,2.02,283,0.902,286,1.953,312,1.388,316,3.07,334,1.44,396,1.175,407,1.388,418,0.705,441,0.725,467,0.765,494,1.724,546,0.705,565,2.94,585,1.092,627,0.745,628,0.765,629,0.786,630,0.83,633,0.65,634,1.4,636,0.902,638,0.902,652,0.765,653,1.185,654,1.677,655,0.83,656,0.83,657,0.686,658,0.83,659,0.725,660,0.83,661,0.725,662,0.83,663,0.745,664,0.83,665,0.745,666,0.83,667,0.745,668,0.83,669,0.745,670,0.786,671,0.83,672,0.745,673,1.252,674,0.745,675,0.786,676,0.83,677,0.745,678,0.83,679,0.745,680,0.83,681,0.725,682,0.83,683,0.83,684,0.725,685,0.83,686,0.745,687,0.83,688,0.725,689,0.83,690,0.745,691,1.507,692,0.745,693,0.705,694,0.705,695,1.252,696,0.745,697,0.765,698,0.83,699,0.725,700,0.83,701,0.745,702,0.83,703,0.745,704,0.83,705,0.705,706,0.83,707,0.725,708,0.83,709,0.745,710,0.808,711,0.83,712,1.464,713,1.769,714,0.83,715,0.725,716,0.83,717,0.705,718,0.83,719,0.725,720,0.786,721,0.745,722,0.83,723,0.765,724,0.83,725,0.745,726,0.83,727,0.725,728,0.83,729,0.745,730,0.786,731,0.745,732,0.725,733,0.808,734,0.632,735,0.725,736,0.83,737,0.725,738,0.83,739,0.725,740,0.83,741,0.725,742,0.83,743,0.725,744,0.83,745,0.725,746,0.83,747,0.725,748,0.83,749,0.725,750,0.786,751,0.83,755,1.569,756,1.569,762,3.565,763,1.351,764,1.859,769,1.072,804,2.395,807,0.784,833,3.162,838,2.671,839,0.878,860,1.953,865,2.94,877,3.361,910,1.592,1018,1.862,1079,1.617,1091,2.166,1204,2.962,1285,2.905,1288,1.495,1310,1.495,1314,1.34,1324,3.418,1328,2.712,1332,2.344,1346,1.862,1357,2.442,1358,2.962,1359,3.761,1360,3.633,1362,2.02,1372,1.692,1374,1.692,1375,1.253,1376,1.889,1377,1.253,1378,1.889,1379,1.889,1380,1.889,1381,1.253,1382,1.253,1383,1.889,1384,1.889,1385,1.253,1386,1.253,1387,1.253,1388,1.253,1389,1.253,1390,1.889,1391,1.829,1392,1.253,1393,1.889,1394,1.889,1395,1.253,1396,1.889,1397,1.253,1398,1.253,1399,1.253,1400,1.253,1401,2.531,1402,1.253,1403,1.253,1404,1.253,1405,1.253,1406,1.253,1407,1.253,1408,1.253,1409,1.253,1410,1.253,1411,1.253,1412,1.253,1413,1.253,1414,1.253,1415,1.253,1416,1.253,1417,1.253,1418,1.889,1419,1.253,1420,1.253,1421,1.253,1422,1.253,1423,1.253,1424,1.253,1425,1.253,1426,1.253,1427,1.253,1428,1.253,1429,1.253,1430,1.253,1431,1.253,1432,1.889,1433,1.253,1434,1.253,1435,1.253,1436,1.253,1437,1.253,1438,1.041,1439,1.253,1440,1.253,1441,1.253,1442,1.253,1443,1.253,1444,1.253,1445,1.253,1446,1.253,1450,1.692,1479,2.093,1816,3.143,2300,3.215,2302,3.783,2303,4.811,2304,4.373,2305,2.085,2306,2.652,2358,2.442,2361,3.143,2660,1.862,3199,3.361,3227,4.212,3706,2.652,4012,2.229,4014,2.229,4015,2.085,4062,4.811,4114,6.355,4115,6.87,4116,2.652,4117,4.551,4118,4.551,4119,4.551,4120,4.551,4121,3.019,4122,3.019,4123,3.019,4124,3.019,4125,4.551,4126,3.019,4127,3.019,4128,4.551,4129,3.019,4130,3.019,4131,3.019,4132,3.019,4133,3.019,4134,3.019,4135,3.019,4136,3.019,4137,3.019,4138,4.551,4139,3.019,4140,3.019,4141,3.019,4142,3.019,4143,4.551,4144,4.551,4145,4.551,4146,3.633,4147,3.361,4148,3.019,4149,3.019,4150,3.019,4151,3.019,4152,3.019,4153,7.138,4154,3.019,4155,3.019,4156,4.551,4157,4.551,4158,4.551,4159,4.551]],["title/components/ProvinceComponent.html",[175,0.209,715,1.032]],["body/components/ProvinceComponent.html",[0,0.01,3,0.083,4,0.099,5,0.081,7,0.967,9,0.107,10,0.473,11,1.464,13,0.523,14,1.931,17,1.824,19,0.523,22,0.693,24,1.159,25,0.011,26,0.604,27,0.319,28,0.729,29,1.044,32,0.993,35,1.072,36,1.133,37,0.888,42,1.776,44,0.967,45,0.687,48,1.021,49,0.843,57,0.691,58,1.175,60,0.479,71,0.233,73,0.229,75,0.552,77,0.186,83,0.003,84,0.005,85,0.003,87,0.967,89,1.114,94,2.669,106,0.866,108,0.506,112,4.016,114,0.54,115,1.173,116,1.048,117,3.43,118,1.464,119,1.507,120,1.01,121,1.552,122,1.55,123,1.814,124,1.814,125,2.565,126,2.346,127,2.845,128,2.339,129,3.007,130,2.154,134,0.88,135,1.08,136,0.987,137,0.905,138,0.959,139,1.048,140,1.022,142,0.987,144,1.876,145,0.987,147,1.68,148,2.904,149,2.084,151,1.316,152,2.384,153,2.45,154,1.271,155,1.639,156,1.344,157,1.316,159,1.228,161,1.756,167,0.711,168,1.474,169,1.17,175,0.258,184,0.959,186,0.959,188,0.931,195,0.94,209,0.452,235,1.94,283,0.567,286,1.875,312,1.316,407,1.383,418,0.668,441,0.687,467,0.725,544,2.251,546,0.668,548,3.947,549,3.531,565,2.845,585,1.049,627,0.706,628,0.725,629,0.745,630,0.787,633,0.616,634,1.395,636,0.866,638,0.866,652,0.725,653,1.138,654,1.632,655,0.787,656,0.787,657,0.651,658,0.787,659,0.687,660,0.787,661,0.687,662,0.787,663,0.706,664,0.787,665,0.706,666,0.787,667,0.706,668,0.787,669,0.706,670,0.745,671,0.787,672,0.706,673,1.202,674,0.706,675,0.745,676,0.787,677,0.706,678,0.787,679,0.706,680,0.787,681,0.687,682,0.787,683,0.787,684,0.687,685,0.787,686,0.706,687,0.787,688,0.687,689,0.787,690,0.706,691,1.458,692,0.706,693,0.668,694,0.668,695,1.202,696,0.706,697,0.725,698,0.787,699,0.687,700,0.787,701,0.706,702,0.787,703,0.706,704,0.787,705,0.668,706,0.787,707,0.687,708,0.787,709,0.706,710,0.766,711,0.787,712,0.687,713,0.651,714,0.787,715,1.424,716,0.787,717,0.668,718,0.787,719,0.687,720,0.745,721,0.706,722,0.787,723,0.725,724,0.787,725,0.706,726,0.787,727,0.687,728,0.787,729,0.706,730,0.745,731,0.706,732,0.687,733,0.766,734,0.599,735,0.687,736,0.787,737,0.687,738,0.787,739,0.687,740,0.787,741,0.687,742,0.787,743,0.687,744,0.787,745,0.687,746,0.787,747,0.687,748,0.787,749,0.687,750,0.745,751,0.787,752,0.377,755,1.507,756,1.507,763,1.307,764,1.825,769,1.017,775,3.983,778,1.863,779,4.323,780,1.765,781,3.451,804,2.339,807,0.914,838,2.565,839,0.832,860,1.875,921,3.018,923,1.977,926,1.977,929,1.977,943,2.01,1033,5.102,1071,2.565,1079,1.552,1091,2.108,1285,2.837,1288,1.417,1310,1.417,1314,1.271,1323,2.845,1324,2.972,1325,3.112,1326,2.972,1327,3.27,1328,2.625,1332,2.251,1338,1.765,1339,1.765,1340,1.765,1344,1.863,1346,1.765,1349,1.765,1350,1.765,1351,1.765,1352,1.765,1353,1.765,1354,1.765,1355,1.765,1356,3.292,1357,2.346,1358,2.845,1359,2.696,1361,2.845,1362,2.634,1363,3.018,1364,3.018,1365,3.018,1369,1.765,1370,1.765,1371,1.765,1372,1.604,1374,1.604,1375,1.188,1376,1.814,1377,1.188,1378,1.814,1379,1.814,1380,1.814,1381,1.188,1382,1.188,1383,1.814,1384,1.814,1385,1.188,1386,1.188,1387,1.188,1388,1.188,1389,1.188,1390,1.814,1391,1.756,1392,1.188,1393,1.814,1394,1.814,1395,1.188,1396,1.814,1397,1.188,1398,1.188,1399,1.188,1400,1.188,1401,2.463,1402,1.188,1403,1.188,1404,1.188,1405,1.188,1406,1.188,1407,1.188,1408,1.188,1409,1.188,1410,1.188,1411,1.188,1412,1.188,1413,1.814,1414,1.188,1415,1.188,1416,1.188,1417,1.188,1418,1.814,1419,1.188,1420,1.188,1421,1.188,1422,1.188,1423,1.188,1424,1.188,1425,1.188,1426,1.188,1427,1.188,1428,1.188,1429,1.188,1430,1.188,1431,1.188,1432,1.814,1433,1.188,1434,1.188,1435,1.188,1436,1.188,1437,1.188,1438,0.987,1439,1.188,1440,1.188,1441,1.188,1442,1.188,1443,1.188,1444,1.188,1445,1.188,1446,1.188,1447,1.604,1448,1.536,1449,1.604,1450,1.604,1451,1.863,1452,2.696,1453,3.839,1812,2.285,1816,1.977,1921,2.285,2299,4.232,2301,2.845,2876,2.285,4147,2.114,4160,2.285,4161,3.839,4162,3.839,4163,2.862,4164,2.862,4165,3.839,4166,2.862,4167,2.862,4168,2.862,4169,2.862,4170,2.862,4171,2.862,4172,4.371,4173,2.862,4174,2.862,4175,2.862,4176,2.862,4177,2.862,4178,2.862,4179,2.862,4180,2.862,4181,2.862,4182,2.862,4183,7.175,4184,2.514,4185,2.514,4186,2.514,4187,2.514,4188,2.514,4189,2.514,4190,2.514,4191,2.514,4192,2.514,4193,2.514,4194,2.514,4195,2.514,4196,2.514,4197,2.514,4198,2.514,4199,2.514,4200,2.514,4201,2.514,4202,2.514,4203,2.514,4204,2.514,4205,2.514,4206,2.514,4207,2.514,4208,2.285,4209,2.514]],["title/interfaces/ProvinceList.html",[752,0.567,779,2.652]],["body/interfaces/ProvinceList.html",[0,0.015,3,0.126,4,0.149,5,0.08,7,0.956,9,0.161,10,0.637,19,0.517,25,0.011,27,0.25,28,0.551,29,0.877,36,1.093,37,0.724,42,1.698,44,0.788,58,0.644,60,0.497,71,0.268,73,0.345,75,0.833,77,0.219,83,0.005,84,0.007,85,0.005,87,0.956,106,0.857,108,0.682,112,2.916,114,0.534,115,1.303,116,1.582,117,2.32,120,0.683,122,0.956,128,1.582,129,2.527,130,1.329,148,2.367,152,2.367,155,1.764,156,1.329,167,0.703,168,2.226,169,1.296,175,0.287,184,1.448,186,1.448,188,1.407,195,1.188,283,0.857,286,1.855,312,1.988,407,0.683,544,2.226,548,4.288,549,3.43,565,2.32,634,0.683,636,0.857,638,0.857,715,1.037,752,0.57,754,1.448,755,2.031,756,2.031,763,1.652,764,1.96,769,1.535,775,4.252,778,2.814,779,4.643,780,2.666,781,3.833,804,2.633,807,1.154,838,2.537,839,1.257,860,1.855,921,4.068,923,2.985,926,2.985,929,2.985,943,2.708,1033,6.009,1071,2.537,1091,2.38,1285,2.615,1314,1.919,1323,2.32,1324,2.423,1325,2.537,1326,2.423,1327,2.666,1328,2.14,1332,2.226,1356,3.45,1357,2.32,1358,2.814,1359,2.666,1361,2.814,1362,2.615,1363,2.985,1364,2.985,1365,2.985,1375,1.794,1376,2.444,1377,1.794,1378,2.444,1379,2.444,1380,2.444,1381,1.794,1382,1.794,1383,2.444,1384,2.444,1385,1.794,1386,1.794,1387,1.794,1388,1.794,1389,1.794,1390,2.444,1391,2.367,1392,1.794,1393,2.444,1394,2.444,1395,1.794,1396,2.444,1397,1.794,1398,1.794,1399,1.794,1400,1.794,1401,2.986,1402,1.794,1403,1.794,1404,1.794,1405,1.794,1406,1.794,1407,1.794,1408,1.794,1409,1.794,1410,1.794,1411,1.794,1412,1.794,1413,2.444,1414,1.794,1415,1.794,1416,1.794,1417,1.794,1418,2.444,1419,1.794,1420,1.794,1421,1.794,1422,1.794,1423,1.794,1424,1.794,1425,1.794,1426,1.794,1427,1.794,1428,1.794,1429,1.794,1430,1.794,1431,1.794,1432,2.444,1433,1.794,1434,1.794,1435,1.794,1436,1.794,1437,1.794,1438,1.491,1439,1.794,1440,1.794,1441,1.794,1442,1.794,1443,1.794,1444,1.794,1445,1.794,1446,1.794,1447,2.423,1448,2.32,1449,2.423,1450,2.423,1451,2.814,1812,3.451,1816,2.985,1921,3.451,2299,3.451,2301,2.814,2876,3.451,4147,3.192,4160,3.451,4161,3.797,4162,3.797,4165,3.797,4183,7.679,4184,3.797,4185,3.797,4186,3.797,4187,3.797,4188,3.797,4189,3.797,4190,3.797,4191,3.797,4192,3.797,4193,3.797,4194,3.797,4195,3.797,4196,3.797,4197,3.797,4198,3.797,4199,3.797,4200,3.797,4201,3.797,4202,3.797,4203,3.797,4204,3.797,4205,3.797,4206,3.797,4207,3.797,4208,3.451,4209,3.797]],["title/components/RadioComponent.html",[175,0.209,717,1.004]],["body/components/RadioComponent.html",[0,0.012,3,0.097,4,0.115,5,0.091,7,0.735,9,0.124,10,0.529,11,1.637,13,0.585,14,2.081,17,1.966,19,0.585,22,0.698,24,1.22,25,0.011,26,0.628,27,0.323,28,0.761,29,0.864,32,1.111,33,0.914,35,1.066,36,1.139,37,0.971,42,1.62,44,1.242,45,0.798,48,1.142,49,0.879,57,0.773,58,1.238,60,0.458,70,2.421,71,0.221,73,0.266,75,0.641,77,0.169,83,0.004,84,0.006,85,0.004,87,1.081,89,1.294,94,2.745,106,0.969,108,0.385,112,4.117,114,0.604,115,1.283,117,3.657,118,1.637,119,1.686,120,1.077,121,1.737,122,1.629,123,2.654,124,2.654,125,2.87,126,2.624,127,3.112,128,2.34,129,3.161,130,2.52,134,1.022,135,1.254,136,1.146,137,1.051,138,1.113,139,1.217,140,1.118,142,2,144,2.39,145,2,147,1.951,148,3.037,149,2.331,151,1.528,152,2.569,153,2.74,154,1.476,155,0.677,156,1.022,157,1.528,159,1.426,161,2.33,167,0.541,168,1.712,169,1.126,171,1.113,175,0.282,184,1.113,186,1.637,188,1.082,191,2.74,209,0.525,235,2.17,256,1.217,283,0.659,358,0.994,396,2.652,407,1.398,411,0.94,418,0.776,441,0.798,467,0.842,494,0.94,546,0.776,585,1.173,627,0.82,628,1.239,629,0.866,630,0.914,633,0.715,634,1.408,636,0.969,638,0.969,652,0.842,653,1.273,654,1.759,655,0.914,656,0.914,657,0.756,658,0.914,659,0.798,660,0.914,661,0.798,662,0.914,663,0.82,664,0.914,665,0.82,666,0.914,667,0.82,668,0.914,669,0.82,670,0.866,671,0.914,672,0.82,673,1.345,674,0.82,675,0.866,676,0.914,677,0.82,678,0.914,679,0.82,680,0.914,681,0.798,682,0.914,683,0.914,684,0.798,685,0.914,686,0.82,687,0.914,688,0.798,689,0.914,690,0.82,691,1.595,692,0.82,693,0.776,694,0.776,695,1.345,696,0.82,697,0.842,698,0.914,699,0.798,700,0.914,701,0.82,702,0.914,703,0.82,704,0.914,705,0.776,706,0.914,707,0.798,708,0.914,709,0.82,710,0.89,711,0.914,712,0.798,713,0.756,714,0.914,715,0.798,716,0.914,717,1.591,718,0.914,719,0.798,720,0.866,721,0.82,722,0.914,723,0.842,724,0.914,725,0.82,726,0.914,727,0.798,728,0.914,729,0.82,730,0.866,731,0.82,732,0.798,733,0.89,734,0.696,735,0.798,736,0.914,737,0.798,738,0.914,739,0.798,740,0.914,741,0.798,742,0.914,743,0.798,744,0.914,745,0.798,746,0.914,747,0.798,748,0.914,749,0.798,750,0.866,751,0.914,752,0.438,763,1.206,764,1.665,804,2.494,807,0.573,831,1.528,839,0.966,905,1.951,1056,2.296,1060,2.455,1079,1.737,1105,4.629,1131,2.654,1285,3.025,1288,1.646,1310,1.646,1314,1.476,1328,2.872,1338,2.05,1339,2.05,1340,2.05,1349,2.05,1350,2.05,1351,2.05,1352,2.05,1353,2.05,1354,2.05,1355,2.05,1356,2.987,1369,2.05,1370,2.05,1371,2.05,1372,1.863,1374,1.863,1447,1.863,1448,1.784,1449,1.863,1452,3.016,1566,2.296,2552,2.164,2686,5.439,3434,2.455,3482,4.722,3483,2.654,3484,5.88,3485,2.92,3486,2.654,3487,2.92,3488,5.094,3489,2.654,3490,2.92,3491,5.985,3492,2.92,3493,5.985,3494,2.92,3495,2.92,3496,5.617,3497,2.654,3498,4.295,3499,4.295,3500,5.094,3501,5.617,3502,3.903,3503,4.295,3504,2.92,4210,4.889,4211,4.889,4212,3.324,4213,3.324,4214,3.324,4215,3.324,4216,4.889,4217,3.324,4218,3.324,4219,3.324,4220,3.324,4221,3.324,4222,3.324,4223,3.324,4224,3.324,4225,3.324,4226,4.889]],["title/interfaces/ReadOnlyFields.html",[752,0.567,784,2.97]],["body/interfaces/ReadOnlyFields.html",[0,0.011,3,0.089,4,0.106,5,0.057,7,1.02,9,0.115,10,0.499,11,1.03,19,0.368,25,0.011,26,0.235,27,0.246,28,0.72,29,1.274,33,1.269,35,0.627,36,1.055,37,1.353,39,1.466,52,0.972,58,0.825,60,0.497,65,1.235,71,0.248,73,0.246,74,2.027,75,0.593,77,0.179,83,0.004,84,0.006,85,0.004,87,0.68,106,1.22,108,0.891,109,1.805,114,0.38,115,1.02,116,1.689,118,1.03,119,1.06,122,0.68,128,1.125,137,0.972,142,1.06,144,1.459,145,1.06,156,0.945,157,1.414,159,1.319,169,1.288,175,0.3,176,3.186,177,2.586,182,1.979,184,1.03,186,1.03,187,3.186,189,3.416,191,1.723,193,1.65,195,1.228,199,1.365,202,2.65,208,1.854,252,1.235,256,1.125,282,1.751,283,1.373,284,1.06,312,1.414,316,1.723,321,2.225,325,1.802,334,1.466,345,1.583,346,1.341,359,0.972,360,1.379,391,2.405,396,2.156,407,0.486,411,0.869,431,2.27,445,1.65,480,2.846,494,1.304,504,1.466,505,1.583,530,1.805,539,1.365,544,1.583,548,4.138,549,3.817,560,3.604,561,1.723,566,1.805,570,1.319,634,0.486,636,0.609,638,0.609,657,1.049,694,0.718,697,1.169,713,1.049,752,0.73,753,3.825,754,1.03,755,1.591,756,1.591,757,2.27,758,3.407,759,3.683,760,3.683,761,4.13,762,4.918,763,1.138,764,1.442,765,2.586,766,2.225,767,1.854,768,2.2,769,1.092,770,2.586,771,2.27,772,4.325,773,2.27,774,3.604,775,3.265,776,2.123,777,3.186,778,2.001,779,3.796,780,3.416,781,3.003,782,2.27,783,4.005,784,4.783,785,2.123,786,2.27,787,2.454,788,2.454,789,2.454,790,1.522,791,1.805,792,1.896,793,1.65,794,1.365,795,2.586,796,3.683,797,2.708,798,2.123,799,2.454,800,2.454,801,2.27,802,2.123,803,2.454,804,2.414,805,5.733,806,2.27,807,0.53,808,2.123,809,2.27,810,2.27,811,2.708,812,2.454,813,2.27,814,2.454,815,4.065,816,2.27,817,2.454,818,2.27,819,2.123,820,3.683,821,2.454,822,2.454,823,3.683,824,3.003,825,2.454,826,2.454,827,2.454,828,2.454,829,2.454,830,2.225,831,2.546,832,1.896,833,3.032,834,2.454,835,2.454,836,2.454,837,4.25,838,1.805,839,0.894,840,2.27,841,2.454,842,2.454,843,3.683,844,6.143,845,3.683,846,2.708,847,3.683,848,6.031,849,4.421,850,1.583,851,2.27,852,2.001,853,2.454,854,2.454,855,2.454,856,2.454,857,2.454,858,2.454,859,4.913,860,1.319,861,2.454,862,2.454,863,3.683,864,2.846,865,1.65,866,3.683,867,5.264,868,5.528,869,5.264,870,2.454,871,2.454,872,3.683,873,2.454,874,3.683,875,2.846,876,2.454,877,2.27,878,2.454,879,2.454,880,1.723,881,2.454,882,2.454,883,3.604,884,2.454,885,2.454,886,2.454,887,3.407,888,3.003,889,3.683,890,3.683,891,3.683,892,3.683,893,2.454,894,1.197,895,2.454,896,2.454,897,3.825,898,2.123,899,2.454,900,1.319,901,2.454,902,2.454,903,2.454,904,2.27,905,1.805,906,2.454,907,2.454,908,2.454,909,2.123,910,2.147,911,2.454,912,4.913,913,2.454,914,2.454,915,2.454,916,2.454,917,2.454,918,4.089,919,2.123,920,2.454,921,4.25,922,3.683,923,3.186,924,3.683,925,4.421,926,2.123,927,2.454,928,2.454,929,2.123,930,2.001,931,1.896,932,1.896,933,1.583,934,2.454,935,2.454,936,2.454,937,3.407,938,2.454,939,2.454,940,2.27,941,2.454,942,2.27,943,2.121,944,2.454,945,2.454,946,2.27,947,2.454,948,1.896,949,2.454,950,2.27,951,2.27,952,2.454,953,2.454,954,2.454,955,2.454,956,2.454,957,2.454,958,2.454,959,2.454,960,2.454,961,2.454,962,2.454,963,2.454,964,2.454,965,2.123,966,2.454,967,3.683,968,2.454,969,2.454]],["title/guards/RouteGuardService.html",[343,2.41,372,2.652]],["body/guards/RouteGuardService.html",[0,0.016,3,0.135,4,0.16,5,0.086,9,0.173,13,0.83,14,2.006,16,4.145,19,0.554,20,2.593,21,3.923,22,0.591,24,1.135,25,0.011,26,0.566,27,0.276,28,0.692,29,1.18,37,1.238,44,1.124,49,0.75,52,1.463,57,1.169,60,0.4,65,2.786,71,0.255,73,0.37,76,1.985,77,0.135,83,0.006,84,0.007,85,0.006,106,1.222,108,0.917,114,0.572,122,1.364,174,2.127,178,4.258,181,3.693,190,3.803,195,1.093,227,3.517,256,1.693,257,4.134,288,1.505,299,2.206,321,1.859,339,2.065,342,3.195,344,3.722,345,2.383,346,1.792,358,1.843,359,2.339,360,2.073,367,5.347,368,3.195,370,4.922,371,6.496,372,5.067,381,2.854,411,1.743,445,4.134,446,2.483,510,5.904,570,1.985,830,2.786,831,3.189,832,4.887,850,2.383,910,2.15,1008,4.258,1059,2.291,1162,3.011,1210,3.195,1211,3.011,1220,1.505,1227,4.258,1228,3.416,1235,3.195,1247,3.693,1255,2.483,1256,2.483,1263,4.258,1271,4.258,1632,3.693,1633,2.716,2749,4.513,2753,3.887,2874,5.802,3045,3.416,3653,4.064,3654,4.064,3655,4.064,3656,6.766,3657,7.216,3658,7.216,3659,4.064,3660,3.693,3661,5.416,3662,5.416,3663,3.619,3664,5.416,3667,5.416,3668,4.064,3669,5.416,3671,4.064,3672,4.064,3673,7.104,3674,7.104,3676,6.091,3677,4.064,3679,5.416,3680,4.064,4227,6.766,4228,6.166,4229,6.166,4230,4.627,4231,4.627,4232,4.627,4233,4.627,4234,4.627,4235,4.627,4236,4.627,4237,4.627,4238,4.627,4239,4.627,4240,4.627]],["title/interfaces/SampleImageInterface.html",[752,0.567,4241,3.175]],["body/interfaces/SampleImageInterface.html",[0,0.022,3,0.182,4,0.215,5,0.116,7,1.648,9,0.233,10,0.805,19,0.747,25,0.011,27,0.297,28,0.697,58,1.109,60,0.508,71,0.275,72,2.677,73,0.498,77,0.217,83,0.007,84,0.009,85,0.007,87,1.38,120,1.258,169,1.258,175,0.363,407,0.986,468,4.309,634,0.986,636,1.237,638,1.237,642,5.199,650,3.09,651,2.975,719,1.497,720,2.074,752,0.822,754,2.09,769,2.216,839,1.814,1462,3.663,2620,5.144,2683,4.608,3508,4.608,3573,4.981,3575,4.981,3663,4.841,4241,5.88,4242,4.981,4243,4.608,4244,7.245,4245,5.481,4246,5.481,4247,5.481,4248,5.481,4249,5.481]],["title/components/SampleModalComponent.html",[175,0.209,719,1.032]],["body/components/SampleModalComponent.html",[0,0.016,3,0.136,4,0.161,5,0.115,7,1.641,9,0.174,10,0.67,13,0.742,19,0.833,22,0.647,25,0.011,26,0.533,27,0.277,32,1.409,35,0.843,36,0.817,44,1.13,45,1.119,48,1.448,49,0.67,57,0.98,58,1.105,60,0.458,71,0.24,72,2.001,73,0.373,77,0.18,83,0.006,84,0.007,85,0.006,87,1.371,89,1.816,94,1.562,120,1.34,121,2.202,134,1.434,135,1.76,136,1.608,137,1.475,138,1.562,139,1.707,140,1.342,167,0.759,169,1.1,175,0.339,209,0.737,407,1.425,418,1.089,441,1.119,467,1.182,468,4.281,546,1.089,585,1.488,627,1.15,628,1.182,629,1.215,630,1.283,633,1.004,634,1.431,636,1.229,638,1.229,642,4.898,650,2.31,651,2.224,652,1.182,653,1.614,654,2.041,655,1.283,656,1.283,657,1.06,658,1.283,659,1.119,660,1.283,661,1.119,662,1.283,663,1.15,664,1.283,665,1.15,666,1.283,667,1.15,668,1.283,669,1.15,670,1.215,671,1.283,672,1.15,673,1.705,674,1.15,675,1.215,676,1.283,677,1.15,678,1.283,679,1.15,680,1.283,681,1.119,682,1.283,683,1.283,684,1.119,685,1.283,686,1.15,687,1.283,688,1.119,689,1.283,690,1.15,691,1.915,692,1.15,693,1.089,694,1.089,695,1.705,696,1.15,697,1.182,698,1.283,699,1.119,700,1.283,701,1.15,702,1.283,703,1.15,704,1.283,705,1.089,706,1.283,707,1.119,708,1.283,709,1.15,710,1.248,711,1.283,712,1.119,713,1.06,714,1.283,715,1.119,716,1.283,717,1.089,718,1.283,719,1.781,720,2.11,721,1.15,722,1.283,723,1.182,724,1.283,725,1.15,726,1.283,727,1.119,728,1.283,729,1.15,730,1.215,731,1.15,732,1.119,733,1.248,734,0.977,735,1.119,736,1.283,737,1.119,738,1.283,739,1.119,740,1.283,741,1.119,742,1.283,743,1.119,744,1.283,745,1.119,746,1.283,747,1.119,748,1.283,749,1.119,750,1.215,751,1.283,752,0.615,769,1.657,839,1.356,1462,3.639,2620,4.809,2683,5.141,3508,3.444,3540,5.445,3573,5.923,3575,4.949,3663,2.738,4241,5.141,4242,6.469,4243,5.984,4244,4.097,4245,5.445,4246,6.116,4247,4.097,4248,6.517,4249,4.097,4250,6.199,4251,4.664,4252,4.664,4253,4.664,4254,4.664,4255,6.199]],["title/injectables/ServerPayload.html",[339,1.44,1159,3.175]],["body/injectables/ServerPayload.html",[0,0.024,3,0.159,4,0.189,5,0.101,9,0.204,10,0.742,22,0.629,25,0.011,27,0.294,60,0.518,71,0.272,73,0.436,77,0.2,83,0.007,84,0.008,85,0.007,93,4.872,108,0.959,120,1.186,195,0.968,226,4.407,232,5.185,238,4.63,257,4.446,265,3.554,298,3.205,299,2.604,339,2.514,341,2.93,910,1.587,1135,3.554,1136,6.479,1137,4.359,1143,6.029,1144,6.594,1146,5.993,1147,6.029,1148,7.05,1150,6.029,1151,7.276,1152,6.919,1154,4.796,1155,4.415,1156,4.032,1157,6.594,1158,3.368,1159,5.069,1160,5.605,1161,6.594,1162,3.554,1163,6.594,1164,6.594,1165,6.029,1166,4.796,1167,6.029,1168,6.594,4256,5.46,4257,5.46,4258,5.46,4259,5.46]],["title/modules/SharedCoreModule.html",[1169,2.652,4260,2.799]],["body/modules/SharedCoreModule.html",[0,0.011,3,0.088,4,0.105,5,0.056,25,0.011,45,1.097,71,0.307,73,0.243,74,1.674,75,0.586,76,1.304,77,0.088,83,0.004,84,0.005,85,0.004,195,0.539,199,1.349,304,1.565,334,1.449,345,2.355,359,1.446,418,1.82,441,1.097,481,1.874,544,1.565,546,1.82,627,1.922,650,2.723,651,2.181,652,0.77,657,1.771,659,1.87,661,1.87,665,1.922,667,1.922,669,1.922,672,1.922,674,1.922,677,1.922,679,1.922,681,1.87,684,1.87,686,1.922,688,1.87,690,1.922,692,1.922,693,1.82,696,1.922,699,1.87,701,1.922,703,1.922,705,1.82,707,1.87,709,1.922,712,1.87,715,1.87,717,1.82,719,1.87,721,1.922,723,1.975,725,1.922,727,1.87,729,1.922,731,1.128,732,1.87,734,0.636,735,1.87,737,1.87,739,1.87,741,1.87,743,1.87,745,1.87,747,1.87,749,1.87,865,1.631,900,1.304,943,1.397,1052,1.504,1097,2.425,1169,1.874,1171,1.874,1172,3.798,1173,4.389,1178,3.65,1179,2.244,1185,2.098,1194,4.017,1197,4.017,1198,2.425,1670,2.244,1719,2.425,2325,2.425,2536,2.425,2595,2.425,2613,2.425,3137,3.377,3187,2.244,3261,2.425,3302,2.425,3507,2.425,3724,2.425,3775,2.425,4054,2.425,4115,2.425,4243,2.244,4260,5.926,4261,2.669,4262,2.669,4263,2.669,4264,2.669,4265,2.669,4266,3.038,4267,3.038,4268,4.573,4269,5.499,4270,4.573,4271,3.038,4272,3.038,4273,3.038,4274,2.425,4275,3.038,4276,3.038,4277,3.038,4278,4.573,4279,3.038,4280,3.038,4281,3.038,4282,3.038,4283,3.038,4284,3.038,4285,4.573,4286,5.499,4287,3.038,4288,3.038,4289,3.038,4290,4.573,4291,2.669,4292,3.038,4293,3.038,4294,3.038,4295,3.038,4296,3.038,4297,3.038,4298,3.038,4299,3.038,4300,3.038,4301,3.038,4302,4.573,4303,3.038,4304,3.038,4305,3.038,4306,3.038,4307,3.038,4308,3.038,4309,3.038,4310,3.038,4311,3.038,4312,3.038,4313,3.038,4314,3.038,4315,3.038,4316,3.038,4317,3.377,4318,3.038,4319,3.038,4320,2.425,4321,3.038,4322,3.038,4323,3.038,4324,3.038,4325,3.038,4326,3.038,4327,3.038,4328,3.038,4329,3.038,4330,3.038,4331,2.425,4332,3.038,4333,3.038,4334,3.038,4335,3.038,4336,3.038,4337,3.038,4338,3.038,4339,3.038,4340,3.038,4341,3.038,4342,4.83,4343,3.038,4344,3.038,4345,3.038,4346,3.038,4347,3.038]],["title/interfaces/SimpleDate.html",[752,0.567,4348,3.175]],["body/interfaces/SimpleDate.html",[3,0.193,4,0.229,5,0.123,9,0.248,10,0.836,25,0.01,27,0.305,77,0.193,83,0.008,84,0.009,85,0.008,155,1.354,171,2.226,494,2.504,752,1.019,754,2.226,2310,4.589,2372,5.814,2374,6.216,2376,6.216,4348,5.708,4349,5.837,4350,5.837,4351,6.645,4352,6.645,4353,5.837,4354,5.837]],["title/components/SinComponent.html",[175,0.209,721,1.06]],["body/components/SinComponent.html",[0,0.01,3,0.086,4,0.102,5,0.083,7,0.65,9,0.11,10,0.482,11,1.494,13,0.534,14,1.958,17,1.85,19,0.534,22,0.694,24,1.167,25,0.011,26,0.607,27,0.318,28,0.734,29,0.803,32,1.014,35,1.051,36,1.139,37,0.492,42,1.96,44,0.983,45,0.706,48,1.042,49,0.866,56,2.903,57,0.705,58,1.181,60,0.476,71,0.223,73,0.235,75,0.567,77,0.086,83,0.007,84,0.005,85,0.004,87,0.987,89,1.144,94,2.684,106,1.068,108,0.819,112,4.035,114,0.551,115,1.192,117,3.471,118,1.494,119,1.538,120,1.022,121,1.584,122,1.565,123,1.851,124,1.851,125,2.618,126,2.394,127,2.893,128,2.367,129,3.035,130,2.294,134,0.904,135,1.109,136,1.014,137,0.93,138,0.985,139,1.076,140,1.039,142,1.014,144,1.903,145,1.014,147,1.726,148,2.928,149,3.373,151,1.352,152,2.417,153,2.5,154,1.305,155,0.909,156,0.904,157,1.352,159,1.261,161,1.792,167,0.726,168,1.514,169,1.076,171,1.494,173,2.767,174,1.352,175,0.315,184,0.985,186,0.985,188,0.957,195,0.955,199,1.98,209,0.465,210,4.155,235,1.98,252,1.792,283,0.884,316,1.648,321,1.181,338,2.015,391,2.28,396,1.144,397,2.394,404,2.618,407,1.386,418,0.687,441,0.706,467,0.745,494,2.243,501,3.711,539,1.305,546,0.687,565,2.893,585,1.071,627,0.725,628,0.745,629,0.766,630,0.809,633,0.633,634,1.398,636,0.884,638,0.884,652,0.745,653,1.162,654,1.655,655,0.809,656,0.809,657,0.668,658,0.809,659,0.706,660,0.809,661,0.706,662,0.809,663,0.725,664,0.809,665,0.725,666,0.809,667,0.725,668,0.809,669,0.725,670,0.766,671,0.809,672,0.725,673,1.227,674,0.725,675,0.766,676,0.809,677,0.725,678,0.809,679,0.725,680,0.809,681,0.706,682,0.809,683,0.809,684,0.706,685,0.809,686,0.725,687,0.809,688,0.706,689,0.809,690,0.725,691,1.483,692,0.725,693,0.687,694,0.687,695,1.227,696,0.725,697,0.745,698,0.809,699,0.706,700,0.809,701,0.725,702,0.809,703,0.725,704,0.809,705,0.687,706,0.809,707,0.706,708,0.809,709,0.725,710,0.787,711,0.809,712,0.706,713,0.668,714,0.809,715,0.706,716,0.809,717,0.687,718,0.809,719,0.706,720,0.766,721,1.484,722,0.809,723,0.745,724,0.809,725,0.725,726,0.809,727,0.706,728,0.809,729,0.725,730,0.766,731,0.725,732,0.706,733,0.787,734,0.616,735,0.706,736,0.809,737,0.706,738,0.809,739,0.706,740,0.809,741,0.706,742,0.809,743,0.706,744,0.809,745,0.706,746,0.809,747,0.706,748,0.809,749,0.706,750,0.766,751,0.809,752,0.588,763,1.329,764,1.842,804,2.367,807,0.769,830,2.417,839,0.855,865,2.893,894,1.144,910,1.979,1018,1.813,1079,1.584,1091,2.137,1220,2.105,1285,2.871,1288,1.456,1310,1.456,1314,1.305,1323,2.893,1324,3.021,1325,3.164,1326,3.021,1327,3.324,1328,2.669,1332,2.297,1338,1.813,1339,1.813,1340,1.813,1344,1.914,1346,1.813,1349,1.813,1350,1.813,1351,1.813,1352,1.813,1353,1.813,1354,1.813,1355,1.813,1356,3.643,1369,1.813,1370,1.813,1371,1.813,1372,1.648,1374,1.648,1447,1.648,1448,1.578,1449,1.648,1450,1.648,1451,1.914,1452,2.751,1479,3.647,1495,2.297,2309,3.561,2310,3.081,2316,3.081,2317,3.294,2318,2.903,2319,3.294,2358,2.893,2588,2.347,2589,2.171,2590,2.347,2660,1.813,2663,1.813,2767,2.776,2772,2.297,2801,3.561,3232,2.171,3567,3.918,3593,2.347,3995,5.98,4006,3.918,4007,3.918,4012,2.171,4014,2.171,4015,2.031,4019,2.347,4020,3.918,4021,2.583,4023,2.347,4026,2.347,4027,2.347,4028,2.347,4029,2.347,4030,2.347,4035,2.583,4043,5.681,4051,3.918,4052,3.918,4355,2.583,4356,6.214,4357,4.461,4358,4.461,4359,6.017,4360,4.461,4361,4.461,4362,2.94,4363,4.461,4364,2.94,4365,2.94,4366,2.94,4367,4.461,4368,2.94,4369,2.94,4370,2.94,4371,2.94,4372,2.94,4373,2.94,4374,2.94,4375,2.94,4376,2.94,4377,2.94,4378,2.94,4379,2.94,4380,7.288,4381,5.39,4382,2.94,4383,2.94,4384,2.94,4385,2.94,4386,2.94,4387,2.94]],["title/components/ThumbnailComponent.html",[175,0.209,725,1.06]],["body/components/ThumbnailComponent.html",[0,0.014,3,0.12,4,0.143,5,0.106,9,0.154,10,0.618,13,0.684,19,0.496,22,0.664,24,0.878,25,0.011,26,0.568,27,0.299,28,0.535,29,0.852,32,1.3,35,0.778,36,0.754,37,0.958,44,1.043,45,0.994,48,1.336,49,0.764,57,0.904,58,1.052,60,0.239,71,0.226,72,1.777,73,0.331,77,0.12,83,0.005,84,0.007,85,0.005,89,1.612,114,0.707,115,1.449,120,1.035,122,1.563,140,1.103,167,0.93,169,1.035,175,0.319,195,0.734,209,0.654,278,3.124,305,3.306,407,1.416,418,0.967,441,0.994,467,1.049,494,1.617,536,2.696,546,0.967,585,1.373,627,1.021,628,1.049,629,1.078,630,1.139,633,0.891,634,1.423,636,1.134,638,1.134,650,2.051,651,1.975,652,1.049,653,1.489,654,1.943,655,1.139,656,1.139,657,0.941,658,1.139,659,0.994,660,1.139,661,0.994,662,1.139,663,1.021,664,1.139,665,1.021,666,1.139,667,1.021,668,1.139,669,1.021,670,1.078,671,1.139,672,1.021,673,1.573,674,1.021,675,1.078,676,1.139,677,1.021,678,1.139,679,1.021,680,1.139,681,0.994,682,1.139,683,1.139,684,0.994,685,1.139,686,1.021,687,1.139,688,0.994,689,1.139,690,1.021,691,1.802,692,1.021,693,0.967,694,0.967,695,1.573,696,1.021,697,1.049,698,1.139,699,0.994,700,1.139,701,1.021,702,1.139,703,1.021,704,1.139,705,0.967,706,1.139,707,0.994,708,1.139,709,1.021,710,1.108,711,1.139,712,0.994,713,0.941,714,1.139,715,0.994,716,1.139,717,0.967,718,1.139,719,0.994,720,1.078,721,1.021,722,1.139,723,1.049,724,1.139,725,1.742,726,1.139,727,0.994,728,1.139,729,1.021,730,1.078,731,1.021,732,0.994,733,1.108,734,0.867,735,0.994,736,1.139,737,0.994,738,1.139,739,0.994,740,1.139,741,0.994,742,1.139,743,0.994,744,1.139,745,0.994,746,1.139,747,0.994,748,1.139,749,0.994,750,1.078,751,1.139,755,1.972,756,1.972,763,1.41,764,1.84,807,0.714,838,4.147,894,2.226,910,1.904,1079,2.031,1375,1.719,1376,2.374,1377,1.719,1378,2.374,1379,2.374,1380,2.374,1381,1.719,1382,1.719,1383,2.374,1384,2.374,1385,1.719,1386,1.719,1387,1.719,1388,1.719,1389,1.719,1390,2.374,1391,2.298,1392,1.719,1393,2.374,1394,2.374,1395,1.719,1396,2.374,1397,1.719,1398,1.719,1399,1.719,1400,1.719,1401,2.932,1402,1.719,1403,1.719,1404,1.719,1405,1.719,1406,1.719,1407,1.719,1408,1.719,1409,1.719,1410,1.719,1411,1.719,1412,1.719,1413,1.719,1414,1.719,1415,1.719,1416,1.719,1417,1.719,1418,2.374,1419,1.719,1420,1.719,1421,1.719,1422,1.719,1423,1.719,1424,1.719,1425,1.719,1426,1.719,1427,1.719,1428,1.719,1429,1.719,1430,1.719,1431,1.719,1432,2.374,1433,1.719,1434,1.719,1435,1.719,1436,1.719,1437,1.719,1438,1.428,1439,1.719,1440,1.719,1441,1.719,1442,1.719,1443,1.719,1444,1.719,1445,1.719,1446,1.719,2619,3.058,2620,4.525,2667,4.223,2668,4.223,2747,3.638,2770,4.223,2772,2.133,2825,4.566,2871,3.306,3007,3.638,3113,4.223,3586,5.024,3587,5.754,3611,5.754,4388,3.638,4389,5.719,4390,5.719,4391,6.551,4392,8.31,4393,6.551,4394,6.551,4395,6.551,4396,6.551,4397,5.719,4398,5.719,4399,4.142,4400,4.142,4401,4.142,4402,4.142,4403,4.142,4404,4.142,4405,4.142,4406,4.142,4407,4.142,4408,7.065,4409,4.142,4410,4.142,4411,5.719,4412,4.142,4413,4.142,4414,4.142,4415,5.719,4416,7.065,4417,4.142,4418,5.719,4419,5.719]],["title/components/ToggleComponent.html",[175,0.209,727,1.032]],["body/components/ToggleComponent.html",[0,0.016,3,0.132,4,0.157,5,0.113,7,1.624,9,0.17,10,0.659,13,0.729,19,0.822,22,0.63,25,0.011,26,0.526,27,0.274,29,0.908,32,1.385,35,0.618,36,0.599,44,1.111,45,1.091,48,1.423,49,0.492,57,0.963,58,0.677,60,0.396,71,0.21,73,0.363,77,0.132,83,0.005,84,0.007,85,0.005,87,1.348,94,1.522,114,0.753,115,1.52,120,0.963,121,2.164,122,1.624,130,2.113,134,1.397,135,1.715,136,1.568,137,1.438,138,1.522,139,1.664,140,1.325,167,0.991,169,1.086,175,0.335,209,0.718,325,2.237,407,1.423,418,1.062,441,1.091,467,1.152,546,1.062,585,1.462,627,1.121,628,1.152,629,1.184,630,1.25,633,0.978,634,1.429,636,1.208,638,1.208,652,1.152,653,1.587,654,2.02,655,1.25,656,1.25,657,1.033,658,1.25,659,1.091,660,1.25,661,1.091,662,1.25,663,1.121,664,1.25,665,1.121,666,1.25,667,1.121,668,1.25,669,1.121,670,1.184,671,1.25,672,1.121,673,1.676,674,1.121,675,1.184,676,1.25,677,1.121,678,1.25,679,1.121,680,1.25,681,1.091,682,1.25,683,1.25,684,1.091,685,1.25,686,1.121,687,1.25,688,1.091,689,1.25,690,1.121,691,1.891,692,1.121,693,1.062,694,1.062,695,1.676,696,1.121,697,1.152,698,1.25,699,1.091,700,1.25,701,1.121,702,1.25,703,1.121,704,1.25,705,1.062,706,1.25,707,1.091,708,1.25,709,1.121,710,1.217,711,1.25,712,1.091,713,1.033,714,1.25,715,1.091,716,1.25,717,1.062,718,1.25,719,1.091,720,1.184,721,1.121,722,1.25,723,1.152,724,1.25,725,1.121,726,1.25,727,1.762,728,1.25,729,1.121,730,1.184,731,1.121,732,1.091,733,1.217,734,0.952,735,1.091,736,1.25,737,1.091,738,1.25,739,1.091,740,1.25,741,1.091,742,1.25,743,1.091,744,1.25,745,1.091,746,1.25,747,1.091,748,1.25,749,1.091,750,1.184,751,1.25,755,2.101,756,2.101,763,1.503,764,1.912,769,1.615,807,0.783,839,1.321,1079,2.164,1103,4.864,1112,5.487,1375,1.887,1376,2.529,1377,1.887,1378,2.529,1379,2.529,1380,2.529,1381,1.887,1382,1.887,1383,2.529,1384,2.529,1385,1.887,1386,1.887,1387,1.887,1388,1.887,1389,1.887,1390,2.529,1391,2.448,1392,1.887,1393,2.529,1394,2.529,1395,1.887,1396,2.529,1397,1.887,1398,1.887,1399,1.887,1400,1.887,1401,3.048,1402,1.887,1403,1.887,1404,1.887,1405,1.887,1406,1.887,1407,1.887,1408,1.887,1409,1.887,1410,1.887,1411,1.887,1412,1.887,1413,1.887,1414,1.887,1415,1.887,1416,1.887,1417,1.887,1418,2.529,1419,1.887,1420,1.887,1421,1.887,1422,1.887,1423,1.887,1424,1.887,1425,1.887,1426,1.887,1427,1.887,1428,1.887,1429,1.887,1430,1.887,1431,1.887,1432,2.529,1433,1.887,1434,1.887,1435,1.887,1436,1.887,1437,1.887,1438,1.568,1439,1.887,1440,1.887,1441,1.887,1442,1.887,1443,1.887,1444,1.887,1445,1.887,1446,1.887,4420,3.993,4421,6.094,4422,6.094,4423,6.094,4424,4.546,4425,4.546,4426,4.546]],["title/directives/ValidateBcPostalDirective.html",[209,0.679,739,1.032]],["body/directives/ValidateBcPostalDirective.html",[0,0.021,3,0.171,4,0.203,5,0.109,9,0.219,13,0.859,22,0.469,24,0.9,25,0.011,26,0.449,27,0.268,28,0.549,33,1.614,49,0.635,60,0.338,71,0.248,73,0.469,75,1.132,77,0.209,83,0.007,84,0.009,85,0.007,106,1.537,107,2.906,108,0.898,114,0.887,149,3.423,171,1.966,188,2.629,190,3.62,195,1.272,209,1.225,211,4.347,212,3.289,297,3.445,346,2.087,359,2.27,360,2.146,381,3.62,391,2.776,411,1.659,609,2.605,633,1.263,634,1.134,713,1.334,734,1.229,739,1.939,762,3.82,833,2.699,943,3.566,993,6.449,994,6.305,995,3.62,996,4.685,997,4.685,1008,4.053,1104,3.301,1227,4.053,1362,2.605,2538,4.783,2540,4.742,2543,3.62,2544,5.112,2546,4.427,2551,4.427,2562,3.289,2583,3.023,2859,4.334,4114,5.3,4146,4.685,4317,5.3,4427,5.155,4428,7.097,4429,5.869,4430,5.869,4431,5.155,4432,3.82]],["title/directives/ValidateCityDirective.html",[209,0.679,741,1.032]],["body/directives/ValidateCityDirective.html",[0,0.021,3,0.174,4,0.206,5,0.111,9,0.223,13,0.868,22,0.477,24,0.916,25,0.011,26,0.457,27,0.271,28,0.559,49,0.646,60,0.344,71,0.251,73,0.477,75,1.152,77,0.211,83,0.009,84,0.009,85,0.007,106,1.549,107,2.958,108,0.905,114,0.897,149,3.46,188,2.645,195,1.385,209,1.146,211,4.38,297,3.506,346,2.109,359,2.294,360,2.169,391,2.789,609,2.652,633,1.286,634,1.146,734,1.251,741,1.951,761,3.205,1104,3.336,1357,3.205,1362,2.652,2538,4.82,2540,4.587,2543,3.684,2544,5.137,2546,4.475,2551,4.475,2562,3.348,2583,3.737,2767,3.076,2956,4.411,3223,4.475,4432,3.888,4433,6.373,4434,5.247,4435,7.139,4436,5.973,4437,5.247,4438,4.768]],["title/directives/ValidateNameDirective.html",[209,0.679,743,1.032]],["body/directives/ValidateNameDirective.html",[0,0.021,3,0.175,4,0.208,5,0.112,9,0.224,13,0.871,22,0.48,24,0.922,25,0.011,26,0.558,27,0.272,28,0.563,49,0.65,60,0.346,71,0.252,73,0.48,75,1.159,77,0.212,83,0.007,84,0.009,85,0.007,106,1.553,107,2.976,108,0.907,114,0.9,149,3.473,188,2.65,195,1.291,209,1.151,211,4.392,297,3.528,346,2.117,359,2.303,360,2.177,391,2.794,609,2.668,633,1.294,634,1.151,734,1.259,743,1.955,995,3.707,1104,3.349,1357,3.226,1362,2.668,2538,4.833,2540,4.6,2543,3.707,2544,5.146,2546,4.492,2551,4.492,2562,3.369,2583,3.751,3223,4.492,3224,4.798,4432,3.912,4439,6.397,4440,5.28,4441,7.155,4442,6.011]],["title/directives/ValidatePostalcodeDirective.html",[209,0.679,745,1.032]],["body/directives/ValidatePostalcodeDirective.html",[0,0.018,3,0.152,4,0.181,5,0.097,9,0.195,13,0.799,22,0.588,24,0.803,25,0.011,26,0.401,27,0.289,28,0.49,29,1.278,32,1.518,35,0.908,36,0.88,37,1.119,49,0.566,60,0.424,71,0.231,73,0.418,75,1.009,77,0.194,83,0.006,84,0.008,85,0.006,106,1.651,107,2.59,108,0.964,114,0.826,156,2.262,169,1.163,188,2.607,195,1.305,209,1.056,211,4.125,297,3.07,346,1.942,359,2.112,360,1.997,391,2.683,609,3.267,633,1.126,634,1.056,713,1.189,734,1.095,745,1.861,802,5.751,833,2.405,840,3.863,943,2.405,993,5.332,995,3.226,996,4.176,997,4.176,1104,3.071,1357,2.807,1362,2.322,2538,4.539,2540,4.32,2543,3.226,2544,5.053,2546,4.12,2547,3.405,2551,4.782,2562,2.932,2583,3.993,2767,3.44,3199,3.863,3223,4.941,4114,5.726,4146,4.176,4317,5.726,4431,4.595,4432,3.405,4438,5.332,4443,4.595,4444,6.464,4445,8.328,4446,5.231,4447,5.231,4448,5.231,4449,5.231,4450,5.231,4451,6.68,4452,6.68,4453,5.231,4454,5.231,4455,4.595,4456,5.231,4457,5.231,4458,5.868,4459,5.231]],["title/directives/ValidateRegionDirective.html",[209,0.679,747,1.032]],["body/directives/ValidateRegionDirective.html",[0,0.021,3,0.174,4,0.206,5,0.111,9,0.223,13,0.868,22,0.477,24,0.915,25,0.011,26,0.457,27,0.27,28,0.558,49,0.645,60,0.344,71,0.25,73,0.477,75,1.15,77,0.211,83,0.009,84,0.009,85,0.007,106,1.548,107,2.954,108,0.904,114,0.896,149,3.457,188,2.644,195,1.385,209,1.146,211,4.378,297,3.502,346,2.108,359,2.293,360,2.167,391,2.788,609,2.649,633,1.284,634,1.146,734,1.25,747,1.95,995,3.68,1104,3.334,1357,3.202,1362,2.649,2538,4.818,2540,4.585,2543,3.68,2544,5.135,2546,4.472,2551,4.472,2562,3.344,2583,3.734,2956,4.406,3223,4.472,4331,5.788,4432,3.884,4437,5.241,4460,6.369,4461,5.241,4462,7.137,4463,5.967,4464,5.967]],["title/directives/ValidateStreetDirective.html",[209,0.679,749,1.032]],["body/directives/ValidateStreetDirective.html",[0,0.021,3,0.174,4,0.206,5,0.111,9,0.223,13,0.868,22,0.477,24,0.916,25,0.011,26,0.457,27,0.271,28,0.559,49,0.646,60,0.344,71,0.251,73,0.477,75,1.152,77,0.211,83,0.009,84,0.009,85,0.007,106,1.549,107,2.958,108,0.905,114,0.897,149,3.46,188,2.645,195,1.385,209,1.146,211,4.38,297,3.506,346,2.109,359,2.294,360,2.169,391,2.789,609,2.652,633,1.286,634,1.146,734,1.251,749,1.951,750,2.117,811,3.506,1104,3.336,1357,3.205,1362,2.652,2538,4.82,2540,4.587,2543,3.684,2544,5.137,2546,4.475,2551,4.475,2562,3.348,2583,3.737,2767,3.076,3223,4.475,4432,3.888,4438,5.792,4455,5.247,4465,6.373,4466,5.247,4467,5.973]],["title/components/WizardProgressBarComponent.html",[175,0.209,729,1.06]],["body/components/WizardProgressBarComponent.html",[0,0.012,3,0.102,4,0.121,5,0.094,9,0.13,10,0.549,13,0.607,19,0.418,20,1.96,21,3.592,22,0.642,24,0.778,25,0.011,26,0.533,27,0.271,28,0.475,32,1.153,35,0.475,36,0.461,44,0.925,45,0.839,46,3.515,48,1.185,49,0.752,57,0.802,58,0.889,65,2.038,67,3.504,69,1.451,71,0.24,72,1.5,73,0.279,76,1.5,77,0.102,83,0.004,84,0.006,85,0.004,89,1.975,100,3.347,108,0.691,114,0.627,115,1.321,120,0.943,122,1.449,140,0.978,155,0.712,156,1.56,167,1.066,169,0.802,175,0.291,180,1.28,195,1.233,209,0.553,252,1.405,255,2.791,283,0.693,284,1.749,299,2.847,302,1.96,338,1.171,407,1.402,418,0.817,441,0.839,452,2.582,467,0.886,494,2.051,503,1.801,504,1.667,546,0.817,584,3.129,585,1.218,627,0.862,628,0.886,629,0.911,630,0.962,633,0.753,634,1.412,636,1.006,638,1.006,650,2.512,651,2.419,652,0.886,653,1.321,654,1.802,655,0.962,656,0.962,657,0.795,658,0.962,659,0.839,660,0.962,661,0.839,662,0.962,663,0.862,664,0.962,665,0.862,666,0.962,667,0.862,668,0.962,669,0.862,670,0.911,671,0.962,672,0.862,673,1.396,674,0.862,675,0.911,676,0.962,677,0.862,678,0.962,679,0.862,680,0.962,681,0.839,682,0.962,683,0.962,684,0.839,685,0.962,686,0.862,687,0.962,688,0.839,689,0.962,690,0.862,691,1.642,692,0.862,693,0.817,694,0.817,695,1.396,696,0.862,697,0.886,698,0.962,699,0.839,700,0.962,701,0.862,702,0.962,703,0.862,704,0.962,705,0.817,706,0.962,707,0.839,708,0.962,709,0.862,710,0.936,711,0.962,712,0.839,713,0.795,714,0.962,715,0.839,716,0.962,717,0.817,718,0.962,719,0.839,720,0.911,721,0.862,722,0.962,723,0.886,724,0.962,725,0.862,726,0.962,727,0.839,728,0.962,729,1.615,730,1.949,731,2.167,732,0.839,733,0.936,734,0.732,735,0.839,736,0.962,737,0.839,738,0.962,739,0.839,740,0.962,741,0.839,742,0.962,743,0.839,744,0.962,745,0.839,746,0.962,747,0.839,748,0.962,749,0.839,750,0.911,751,0.962,755,1.749,756,1.749,808,2.415,830,2.038,900,1.5,910,2.175,1006,4.456,1025,2.052,1050,2.844,1052,2.512,1069,2.844,1092,4.124,1162,2.276,1220,1.943,1334,3.302,1375,1.451,1376,2.106,1377,1.451,1378,2.106,1379,2.106,1380,2.106,1381,1.451,1382,1.451,1383,2.106,1384,2.106,1385,1.451,1386,1.451,1387,1.451,1388,1.451,1389,1.451,1390,2.106,1391,2.038,1392,1.451,1393,2.106,1394,2.106,1395,1.451,1396,2.106,1397,1.451,1398,1.451,1399,1.451,1400,1.451,1401,2.718,1402,1.451,1403,1.451,1404,1.451,1405,1.451,1406,1.451,1407,1.451,1408,1.451,1409,1.451,1410,1.451,1411,1.451,1412,1.451,1413,1.451,1414,1.451,1415,1.451,1416,1.451,1417,1.451,1418,2.106,1419,1.451,1420,1.451,1421,1.451,1422,1.451,1423,1.451,1424,1.451,1425,1.451,1426,1.451,1427,1.451,1428,1.451,1429,1.451,1430,1.451,1431,1.451,1432,2.106,1433,1.451,1434,1.451,1435,1.451,1436,1.451,1437,1.451,1438,1.206,1439,1.451,1440,1.451,1441,1.451,1442,1.451,1443,1.451,1444,1.451,1445,1.451,1446,1.451,1495,1.801,1633,2.978,1634,2.157,1643,2.415,1654,3.071,1656,3.071,1691,3.129,1695,4.766,1698,3.886,2358,3.515,2418,3.302,2604,3.071,2615,4.524,2626,2.157,2627,2.415,2694,4.409,2713,3.071,2738,6.109,2752,2.415,2874,3.504,3138,2.582,3139,4.05,3140,4.05,3151,3.071,3159,3.071,3162,4.456,3191,4.05,3463,5.245,3464,3.071,3465,3.071,3466,3.071,3578,4.05,4015,2.415,4066,4.05,4274,6.487,4353,4.456,4468,7.139,4469,5.971,4470,5.971,4471,5.073,4472,5.971,4473,5.971,4474,5.971,4475,6.55,4476,5.073,4477,6.55,4478,6.55,4479,5.073,4480,3.497,4481,5.073,4482,3.497,4483,3.497,4484,3.497,4485,3.497,4486,5.073,4487,5.073,4488,5.245,4489,4.456,4490,5.073,4491,4.456,4492,3.497,4493,5.971,4494,5.073,4495,3.497,4496,5.971,4497,5.073,4498,3.497,4499,3.497,4500,3.497,4501,3.497,4502,3.497,4503,3.497,4504,3.497,4505,3.497,4506,3.497,4507,3.497,4508,3.497,4509,3.497,4510,5.971,4511,3.497,4512,3.497,4513,3.497,4514,3.497,4515,2.582,4516,3.497,4517,3.497,4518,3.497,4519,6.955,4520,3.497,4521,5.073,4522,3.497,4523,3.497,4524,3.497,4525,3.497,4526,3.497,4527,5.073,4528,3.497,4529,3.497,4530,3.497,4531,3.497,4532,3.497,4533,3.497,4534,3.497,4535,3.497,4536,3.497,4537,3.497,4538,3.497,4539,3.497,4540,3.497,4541,3.497,4542,5.073]],["title/interfaces/WizardProgressItem.html",[752,0.567,1698,2.799]],["body/interfaces/WizardProgressItem.html",[0,0.021,3,0.23,4,0.212,5,0.114,7,1.356,9,0.229,10,0.797,17,1.885,25,0.011,27,0.275,52,1.939,58,0.913,60,0.504,65,3.514,71,0.212,76,2.631,77,0.214,83,0.007,84,0.009,85,0.007,108,0.853,171,2.054,202,2.464,268,2.82,396,2.387,408,4.896,475,4.896,530,3.6,642,5.255,730,1.597,731,1.512,752,0.971,754,2.054,919,4.236,1219,4.547,1691,4.547,1692,4.896,1693,5.387,1694,5.387,1695,4.896,1697,5.387,1698,5.145,1700,5.387,1701,5.387,1703,5.387,1704,5.387,1705,5.444,1709,5.387,1710,5.387,1711,5.387,1712,5.387,1713,5.387,1714,5.387,1715,5.387,1716,6.476,1717,5.387]],["title/components/XiconButtonComponent.html",[175,0.209,732,1.032]],["body/components/XiconButtonComponent.html",[0,0.016,3,0.134,4,0.159,5,0.114,9,0.171,13,0.735,19,0.827,22,0.632,25,0.011,26,0.529,27,0.258,32,1.395,33,1.264,42,1.165,44,1.119,45,1.103,48,1.847,49,0.664,57,0.97,58,0.914,60,0.354,71,0.212,73,0.367,77,0.134,83,0.005,84,0.007,85,0.005,114,0.759,115,1.529,122,1.632,130,2.554,140,1.184,167,1.125,169,0.97,175,0.337,180,2.247,195,0.815,197,3.175,209,0.726,264,4.533,268,2.114,381,2.835,404,2.698,407,1.425,411,1.736,418,1.074,441,1.103,467,1.165,520,2.835,546,1.074,562,4.533,585,1.473,627,1.134,628,1.165,629,1.197,630,1.264,633,0.989,634,1.43,636,1.217,638,1.217,647,5.095,652,1.165,653,1.599,654,2.029,655,1.264,656,1.264,657,1.045,658,1.264,659,1.103,660,1.264,661,1.103,662,1.264,663,1.134,664,1.264,665,1.134,666,1.264,667,1.134,668,1.264,669,1.134,670,1.197,671,1.264,672,1.134,673,1.689,674,1.134,675,1.197,676,1.264,677,1.134,678,1.264,679,1.134,680,1.264,681,1.103,682,1.264,683,1.264,684,1.103,685,1.264,686,1.134,687,1.264,688,1.103,689,1.264,690,1.134,691,1.901,692,1.134,693,1.074,694,1.074,695,1.689,696,1.134,697,1.165,698,1.264,699,1.103,700,1.264,701,1.134,702,1.264,703,1.134,704,1.264,705,1.074,706,1.264,707,1.103,708,1.264,709,1.134,710,1.23,711,1.264,712,1.103,713,1.045,714,1.264,715,1.103,716,1.264,717,1.074,718,1.264,719,1.103,720,1.197,721,1.134,722,1.264,723,1.165,724,1.264,725,1.134,726,1.264,727,1.103,728,1.264,729,1.134,730,1.197,731,1.134,732,1.77,733,2.223,734,0.963,735,1.103,736,1.264,737,1.103,738,1.264,739,1.103,740,1.264,741,1.103,742,1.264,743,1.103,744,1.264,745,1.103,746,1.264,747,1.103,748,1.264,749,1.103,750,1.197,751,1.264,763,1.705,764,2.103,807,1.191,815,2.698,860,1.972,894,1.789,1025,2.698,1059,2.276,1075,5.393,1076,5.393,1079,2.181,1627,4.038,3403,4.901,3608,4.901,3682,3.394,4320,6.445,4543,7.092,4544,3.67,4545,7.377,4546,5.518,4547,6.139,4548,4.597,4549,6.48,4550,4.597,4551,4.597,4552,4.597,4553,4.597,4554,4.597,4555,4.597,4556,4.597,4557,6.139,4558,4.597,4559,4.597,4560,4.597,4561,4.597,4562,4.597,4563,4.597,4564,4.597]],["title/changelog.html",[4565,2.108,4566,2.108,4567,3.154]],["body/changelog.html",[0,0.017,2,0.67,3,0.049,5,0.109,13,0.338,14,1.824,18,1.086,19,0.2,22,0.133,24,0.256,25,0.006,26,0.451,27,0.062,28,0.265,32,0.379,33,1.191,34,1.232,35,0.911,36,0.485,39,1.348,40,1.029,42,1.333,43,0.979,44,1.159,46,1.517,48,0.66,52,0.528,57,0.581,60,0.279,65,0.67,66,0.895,68,0.935,71,0.098,77,0.126,83,0.002,84,0.004,85,0.003,93,2.715,107,0.826,108,0.193,116,1.034,118,0.559,120,0.447,130,2.105,138,1.231,140,1.081,148,0.67,152,1.739,153,1.584,154,2.15,156,0.513,167,1.034,169,1.034,170,1.465,171,1.622,173,1.3,174,1.3,175,0.393,176,2.989,178,1.152,180,2.158,185,2.67,187,1.952,188,1.999,190,1.743,191,0.935,193,0.895,194,1.465,199,1.922,202,0.67,205,1.743,208,0.67,209,0.447,211,0.935,212,4.293,222,0.935,224,1.578,227,0.741,230,1.332,234,1.332,252,1.477,253,1.086,256,1.034,261,1.332,278,1.348,283,1.111,286,1.213,288,0.543,303,0.895,307,1.029,312,1.691,318,1.952,321,3.275,322,2.935,323,1.332,325,0.92,327,1.029,329,2.256,331,1.465,334,1.753,337,2.715,343,0.935,353,1.456,356,0.593,358,0.845,372,1.029,381,1.029,391,1.231,396,1.431,397,1.973,402,1.232,404,0.979,407,1.398,409,2.483,410,3.088,411,1.487,412,5.19,413,5.183,416,1.232,446,0.895,448,0.979,450,0.859,452,1.232,457,1.465,459,4.071,467,0.932,468,3.633,479,3.083,481,1.743,487,2.715,488,2.087,494,0.799,495,3.455,501,1.029,503,1.894,504,3.197,506,1.332,507,1.152,513,1.152,516,1.332,518,1.465,528,0.979,532,1.465,536,1.086,539,0.741,544,1.456,545,1.456,546,0.39,548,2.143,549,2.309,551,1.659,553,5.315,554,1.465,555,2.087,556,1.332,561,2.061,562,1.232,566,1.659,570,1.213,573,2.323,574,1.086,582,1.332,585,0.4,628,0.716,647,2.539,653,0.434,657,1.34,659,0.678,661,1.039,663,0.411,670,0.434,679,0.697,684,0.4,688,0.4,693,0.39,694,0.66,699,0.4,705,0.66,707,0.4,710,1.644,712,0.4,713,1.34,717,1.229,720,0.736,727,0.882,732,0.4,754,0.559,755,0.975,756,0.975,758,1.232,761,1.973,762,1.839,768,1.753,772,3.841,775,0.826,783,1.086,790,1.399,793,1.973,795,2.061,801,1.232,802,1.152,804,0.611,807,1.016,809,1.232,810,1.232,811,2.843,813,1.232,815,2.541,818,1.232,824,1.086,830,1.477,831,0.767,833,3.149,837,3.345,852,1.086,860,0.716,864,2.67,865,0.895,875,1.029,883,2.817,887,2.087,888,2.393,894,2.474,900,0.716,905,0.979,918,1.232,931,2.987,933,0.859,943,1.3,973,2.483,985,3.23,1018,1.029,1025,3.088,1031,1.839,1050,3.142,1051,1.029,1056,1.152,1059,3.611,1060,1.232,1061,1.952,1068,1.152,1069,3.443,1072,1.465,1073,1.332,1091,1.306,1102,2.483,1103,2.935,1104,0.767,1155,1.584,1160,3.633,1169,1.743,1170,1.839,1185,1.152,1187,2.483,1191,2.539,1220,1.196,1221,1.086,1224,2.393,1250,1.232,1264,1.332,1271,1.152,1292,1.232,1326,3.142,1327,2.268,1360,1.332,1362,0.741,1461,1.659,1479,1.3,1480,1.029,1489,1.086,1491,1.029,1500,1.839,1506,0.935,1515,0.795,1516,1.086,1562,1.332,1566,1.152,1569,3.196,1570,1.465,1586,1.232,1587,3.088,1591,3.23,1597,4.685,1617,1.465,1633,2.843,1655,1.465,1687,1.332,1691,1.029,1698,1.086,1721,4.353,1730,1.952,2300,0.979,2316,2.989,2317,3.576,2327,3.866,2333,2.268,2342,2.256,2346,1.029,2349,2.087,2358,0.895,2361,2.539,2372,3.345,2374,1.232,2376,1.232,2406,1.332,2421,2.256,2427,1.232,2432,1.332,2465,1.232,2519,2.483,2540,0.979,2547,1.086,2552,2.393,2553,2.087,2556,2.087,2559,3.23,2578,3.152,2583,0.859,2623,1.232,2625,1.465,2627,1.152,2660,4.034,2661,1.332,2663,1.743,2664,2.935,2683,2.715,2703,1.332,2727,1.465,2751,2.483,2752,1.952,2753,0.935,2767,0.859,2770,3.196,2771,1.465,2772,4.074,2776,4.389,2781,4.199,2792,2.715,2797,1.232,2801,3.455,2805,4.474,2808,4.924,2816,2.256,2824,4.254,2825,1.332,2848,1.232,2859,4.139,2871,2.256,2873,3.23,2916,1.465,2917,1.332,2927,1.465,2941,6.364,2945,1.232,2957,1.465,2967,1.465,2979,2.087,3012,1.086,3018,1.465,3045,2.715,3048,2.483,3133,1.465,3153,2.256,3167,4.199,3171,1.465,3180,1.332,3262,1.743,3359,1.465,3401,1.465,3407,2.256,3433,3.802,3435,2.256,3436,1.152,3484,5.821,3486,1.332,3489,2.256,3497,1.332,3541,1.332,3544,1.465,3570,5.745,3572,5.178,3578,1.332,3589,1.465,3594,2.483,3608,1.332,3627,2.087,3660,1.332,3663,0.979,3726,1.465,3731,1.465,3788,1.465,3814,2.256,3842,2.087,3867,2.256,3879,4.819,3884,1.332,3917,2.483,3930,2.483,3956,1.086,3958,1.465,3965,1.332,3984,3.802,3988,1.465,4015,2.539,4019,1.332,4023,1.332,4026,2.256,4058,4.621,4061,1.465,4066,2.256,4077,1.465,4348,2.087,4356,5.395,4491,2.483,4515,1.232,4546,1.332,4549,4.254,4565,0.979,4566,2.158,4567,4.924,4568,1.668,4569,7.753,4570,4.254,4571,6.673,4572,1.668,4573,8.456,4574,1.668,4575,1.668,4576,1.668,4577,4.328,4578,8.59,4579,1.668,4580,1.668,4581,1.668,4582,1.668,4583,1.668,4584,1.668,4585,1.668,4586,1.668,4587,2.483,4588,1.668,4589,1.668,4590,2.826,4591,1.668,4592,1.668,4593,1.668,4594,1.668,4595,1.668,4596,3.802,4597,3.677,4598,1.668,4599,1.668,4600,1.668,4601,1.668,4602,5.605,4603,1.668,4604,1.668,4605,1.668,4606,1.668,4607,1.668,4608,2.826,4609,1.668,4610,1.668,4611,1.668,4612,1.668,4613,1.668,4614,1.668,4615,3.677,4616,1.668,4617,1.668,4618,1.668,4619,1.668,4620,1.668,4621,1.668,4622,1.668,4623,2.826,4624,1.668,4625,1.668,4626,6.615,4627,1.668,4628,1.668,4629,1.668,4630,5.605,4631,3.677,4632,2.826,4633,1.668,4634,1.668,4635,3.802,4636,3.677,4637,1.668,4638,1.668,4639,1.668,4640,1.668,4641,1.668,4642,1.668,4643,1.668,4644,1.668,4645,1.668,4646,1.668,4647,3.677,4648,1.668,4649,1.668,4650,1.668,4651,1.668,4652,1.668,4653,1.668,4654,1.668,4655,1.668,4656,3.677,4657,1.668,4658,1.668,4659,1.668,4660,1.668,4661,2.826,4662,1.668,4663,1.668,4664,2.826,4665,3.677,4666,1.668,4667,1.668,4668,1.668,4669,4.843,4670,1.668,4671,1.668,4672,1.668,4673,1.668,4674,1.668,4675,1.668,4676,1.668,4677,5.895,4678,2.826,4679,1.668,4680,1.668,4681,4.254,4682,1.668,4683,1.668,4684,3.677,4685,1.668,4686,1.668,4687,2.256,4688,2.826,4689,1.668,4690,1.668,4691,1.668,4692,1.668,4693,1.668,4694,1.668,4695,1.668,4696,1.668,4697,1.668,4698,1.668,4699,1.668,4700,1.668,4701,1.668,4702,1.668,4703,1.668,4704,1.668,4705,1.668,4706,1.668,4707,1.668,4708,1.668,4709,1.668,4710,1.668,4711,1.668,4712,1.668,4713,4.971,4714,2.935,4715,1.668,4716,1.465,4717,1.668,4718,1.668,4719,1.668,4720,1.668,4721,1.465,4722,1.668,4723,2.826,4724,1.668,4725,1.668,4726,1.668,4727,1.668,4728,1.668,4729,1.668,4730,1.668,4731,7.293,4732,1.668,4733,1.668,4734,1.668,4735,1.668,4736,1.668,4737,1.668,4738,1.668,4739,1.668,4740,1.465,4741,1.668,4742,1.668,4743,1.668,4744,6.142,4745,2.826,4746,1.668,4747,1.668,4748,1.668,4749,1.668,4750,1.668,4751,1.668,4752,1.668,4753,1.668,4754,1.465,4755,1.668,4756,1.668,4757,1.668,4758,1.668,4759,1.668,4760,2.826,4761,1.668,4762,1.668,4763,1.668,4764,1.668,4765,1.668,4766,2.826,4767,3.677,4768,1.465,4769,1.668,4770,1.668,4771,2.826,4772,1.668,4773,2.826,4774,1.668,4775,1.668,4776,1.668,4777,1.668,4778,1.668,4779,1.668,4780,1.668,4781,1.668,4782,1.668,4783,1.668,4784,1.668,4785,1.668,4786,1.668,4787,1.668,4788,1.668,4789,2.826,4790,1.668,4791,1.668,4792,1.668,4793,1.668,4794,1.668,4795,1.668,4796,1.668,4797,1.668,4798,1.668,4799,1.332,4800,1.668,4801,1.668,4802,1.668,4803,1.668,4804,1.668,4805,1.668,4806,1.668,4807,1.668,4808,1.668,4809,1.668,4810,1.668,4811,1.668,4812,1.668,4813,1.668,4814,1.668,4815,1.668,4816,1.668,4817,1.668,4818,1.668,4819,1.668,4820,1.668,4821,1.668,4822,1.668,4823,2.826,4824,1.668,4825,1.668,4826,1.668,4827,1.668,4828,1.668,4829,2.826,4830,1.668,4831,1.668,4832,1.668,4833,1.465,4834,7.093,4835,3.802,4836,1.668,4837,1.668,4838,1.668,4839,4.843,4840,1.668,4841,1.668,4842,1.668,4843,1.668,4844,1.668,4845,1.668,4846,1.668,4847,1.152,4848,1.668,4849,1.668,4850,4.328,4851,1.668,4852,1.668,4853,1.668,4854,1.668,4855,2.826,4856,1.668,4857,1.668,4858,1.668,4859,1.668,4860,1.668,4861,1.668,4862,1.668,4863,1.668,4864,1.668,4865,1.668,4866,1.668,4867,1.668,4868,1.668,4869,1.668,4870,1.668,4871,1.668,4872,1.668,4873,1.668,4874,1.668,4875,2.826,4876,1.668,4877,1.668,4878,1.668,4879,2.826,4880,1.668,4881,1.668,4882,1.668,4883,1.668,4884,1.668,4885,1.668,4886,1.668,4887,4.328,4888,1.668,4889,1.668,4890,1.668,4891,1.668,4892,1.668,4893,1.668,4894,1.668,4895,1.668,4896,6.849,4897,1.668,4898,1.668,4899,1.668,4900,1.668,4901,1.668,4902,1.668,4903,3.677,4904,1.668,4905,1.668,4906,1.668,4907,1.465,4908,1.668,4909,4.328,4910,1.668,4911,1.668,4912,1.668,4913,1.668,4914,1.668,4915,1.668,4916,1.668,4917,1.668,4918,1.668,4919,1.668,4920,1.668,4921,1.668,4922,1.668,4923,1.668,4924,1.668,4925,1.668,4926,1.332,4927,1.668,4928,4.843,4929,1.465,4930,1.668,4931,1.668,4932,1.668,4933,1.668,4934,1.668,4935,1.668,4936,1.668,4937,1.668,4938,1.668,4939,1.668,4940,1.668,4941,1.668,4942,3.677,4943,1.668,4944,1.668,4945,1.668,4946,1.668,4947,1.668,4948,1.668,4949,1.668,4950,1.668,4951,1.668,4952,1.668,4953,1.668,4954,1.668,4955,1.668,4956,1.668,4957,1.668,4958,1.668,4959,1.668,4960,1.332,4961,1.668,4962,1.668,4963,2.826,4964,1.668,4965,1.668,4966,1.668,4967,2.826,4968,1.668,4969,1.465,4970,1.668,4971,1.668,4972,1.668,4973,1.668,4974,1.668,4975,3.455,4976,1.668,4977,1.668,4978,1.668,4979,3.802,4980,1.668,4981,1.668,4982,1.668,4983,1.668,4984,1.668,4985,1.668,4986,1.668,4987,2.483,4988,1.668,4989,1.668,4990,1.668,4991,1.668,4992,1.668,4993,1.465,4994,1.465,4995,1.465,4996,1.465,4997,1.668,4998,1.668,4999,1.668,5000,1.668,5001,3.23,5002,1.668,5003,1.668,5004,1.668,5005,1.668,5006,1.668,5007,3.23,5008,2.256,5009,1.668,5010,1.668,5011,1.668,5012,1.668,5013,1.668,5014,1.668,5015,1.668,5016,1.668,5017,1.668,5018,1.668,5019,1.668,5020,1.668,5021,1.668,5022,1.668,5023,1.668,5024,1.668,5025,1.668,5026,1.668,5027,1.668,5028,1.668,5029,1.668,5030,1.668,5031,1.668,5032,1.668,5033,1.668,5034,1.668,5035,1.668,5036,1.668,5037,1.668,5038,1.668,5039,1.668,5040,1.668,5041,1.668,5042,1.668,5043,1.668,5044,1.668,5045,1.668,5046,1.668,5047,1.465,5048,1.668,5049,1.668,5050,1.668,5051,1.668,5052,1.668,5053,1.668,5054,1.668,5055,1.668,5056,1.668,5057,1.668,5058,1.668,5059,1.668,5060,1.668,5061,1.668,5062,1.465,5063,1.668,5064,1.668,5065,1.465,5066,1.668,5067,1.668,5068,1.465,5069,1.668,5070,1.668,5071,1.465,5072,1.668,5073,1.668,5074,4.328,5075,1.668,5076,2.483,5077,1.668,5078,1.668,5079,1.332,5080,1.668,5081,1.668,5082,1.668,5083,1.668,5084,1.668,5085,1.668,5086,1.668,5087,1.465,5088,1.465,5089,1.668,5090,2.826,5091,1.668,5092,1.668,5093,1.668,5094,1.465,5095,1.668,5096,1.668,5097,1.465,5098,1.232,5099,1.668,5100,1.668,5101,1.668,5102,1.668,5103,1.668,5104,1.668,5105,1.668,5106,1.668,5107,1.668,5108,1.668,5109,1.668,5110,1.668,5111,1.668,5112,1.668,5113,1.668,5114,1.668,5115,1.152,5116,1.465,5117,1.465,5118,1.668,5119,1.465,5120,1.668,5121,1.668,5122,1.668,5123,2.826,5124,1.668,5125,1.668,5126,1.668,5127,1.668,5128,1.668,5129,2.483,5130,1.668,5131,1.668,5132,1.668,5133,1.668,5134,1.668,5135,1.668,5136,1.668,5137,1.668,5138,1.668,5139,1.668,5140,1.668,5141,1.668,5142,1.668,5143,1.668,5144,1.668,5145,1.668,5146,1.668,5147,1.668,5148,1.668,5149,1.668]],["title/coverage.html",[5150,5.155]],["body/coverage.html",[0,0.028,1,2.008,5,0.054,6,4.131,7,0.978,8,3.953,25,0.011,27,0.108,44,0.53,45,1.061,57,0.846,82,2.554,83,0.003,84,0.005,85,0.003,86,2.321,112,1.44,113,2.554,129,1.247,136,1.003,156,2.654,166,2.321,175,0.426,199,1.291,209,1.148,222,1.63,223,3.953,224,1.247,225,2.554,278,1.386,327,1.793,338,3.02,339,2.491,340,2.008,342,4.131,343,2.479,357,2.008,367,1.892,368,2.008,369,2.554,372,1.793,382,2.321,383,2.554,402,2.147,403,2.554,404,1.707,405,2.554,418,0.679,441,1.061,444,2.479,494,0.822,546,0.679,627,0.717,631,2.554,657,0.661,659,0.698,661,0.698,663,0.717,665,0.717,667,0.717,669,0.717,672,0.717,674,0.717,677,0.717,679,0.717,681,0.698,684,0.698,686,0.717,688,0.698,690,0.717,692,0.717,693,0.679,696,0.717,699,0.698,701,0.717,703,0.717,705,0.679,707,0.698,709,0.717,712,0.698,715,0.698,717,0.679,719,0.698,721,0.717,723,0.737,725,0.717,727,0.698,729,0.717,731,1.091,732,0.698,735,0.698,737,0.698,739,0.698,741,0.698,743,0.698,745,0.698,747,0.698,749,0.698,750,0.757,752,1.103,753,2.008,757,4.417,770,1.63,772,1.497,774,1.892,775,1.44,776,2.008,777,2.008,779,1.793,780,1.793,781,1.892,783,1.892,784,2.008,807,0.501,831,1.337,837,4.131,897,6.066,943,2.034,970,2.554,1048,2.554,1053,2.596,1055,2.554,1096,2.554,1097,2.321,1098,2.554,1135,1.892,1136,3.531,1137,3.531,1159,2.147,1199,2.147,1200,3.531,1201,3.531,1240,2.147,1282,2.554,1320,2.554,1334,5.293,1356,1.497,1454,1.793,1455,3.97,1463,3.97,1473,1.707,1519,1.707,1523,1.63,1554,2.321,1555,4.273,1569,2.147,1587,1.707,1669,2.321,1670,2.147,1671,2.321,1691,1.793,1692,3.531,1698,1.892,1718,2.554,1719,2.321,1720,2.554,1740,5.954,2293,2.554,2307,2.147,2308,3.953,2358,1.56,2372,2.008,2438,2.554,2439,2.554,2501,2.147,2502,2.554,2505,1.892,2513,2.554,2535,4.702,2536,4.273,2537,4.702,2539,2.554,2548,2.554,2555,2.554,2594,2.554,2595,2.321,2596,2.554,2601,5.255,2602,5.255,2607,2.554,2611,2.321,2612,5.653,2613,5.138,2622,2.321,2641,1.793,2646,2.554,2648,2.321,2753,2.479,2757,4.775,2760,2.147,2763,1.892,2767,3.081,2772,2.278,2776,2.008,2781,4.273,2792,3.266,2796,3.697,2797,3.953,2805,4.775,2816,3.531,3136,3.531,3137,3.266,3138,3.953,3153,2.321,3186,3.531,3187,3.266,3188,3.531,3218,2.147,3227,2.008,3259,3.531,3262,1.793,3301,2.554,3302,2.321,3303,2.554,3430,2.554,3482,2.147,3483,3.531,3502,2.321,3505,2.321,3506,3.885,3507,3.531,3508,4.417,3652,2.554,3682,2.147,3683,2.554,3684,2.554,3694,2.554,3723,3.531,3724,2.321,3725,2.554,3740,2.147,3741,3.531,3742,3.531,3775,2.321,3776,2.554,3811,4.273,3837,2.147,3842,2.147,3877,2.321,3923,2.554,3983,2.554,4053,2.554,4054,2.321,4055,2.554,4114,5.005,4115,2.321,4116,2.554,4160,5.138,4208,2.321,4227,2.554,4241,2.147,4242,3.531,4243,3.266,4264,2.554,4265,2.554,4274,2.321,4317,4.752,4320,2.321,4331,3.531,4342,2.554,4348,2.147,4349,2.554,4350,2.554,4355,2.554,4388,2.554,4420,2.554,4427,3.885,4428,2.554,4433,3.885,4434,3.885,4435,2.554,4439,3.885,4440,3.885,4441,2.554,4443,4.702,4444,2.554,4458,2.554,4460,3.885,4461,3.885,4462,2.554,4465,3.885,4466,3.885,4468,2.554,4543,2.554,4544,2.321,4587,2.554,4596,4.702,4681,2.554,4713,2.008,4754,2.554,4835,2.554,5150,2.554,5151,2.907,5152,5.982,5153,2.554,5154,2.907,5155,2.907,5156,2.907,5157,7.262,5158,4.423,5159,7.047,5160,8.899,5161,8.132,5162,6.436,5163,2.907,5164,2.907,5165,2.907,5166,2.907,5167,2.907,5168,4.423,5169,2.907,5170,2.907,5171,4.423,5172,2.907,5173,2.907,5174,2.907,5175,4.423,5176,5.353,5177,2.907,5178,5.353,5179,6.779,5180,6.779,5181,2.907,5182,6.436,5183,5.982,5184,2.907,5185,2.907,5186,2.907,5187,2.907,5188,2.907,5189,2.907,5190,2.907,5191,2.907,5192,2.907,5193,2.907,5194,2.907,5195,2.907,5196,2.907,5197,2.907,5198,7.047,5199,2.907,5200,4.423,5201,4.423,5202,2.907,5203,2.907,5204,2.907,5205,2.907,5206,4.423,5207,4.423,5208,2.907,5209,2.907,5210,4.423,5211,4.423,5212,2.907,5213,2.907,5214,2.907,5215,2.907,5216,2.907,5217,2.907,5218,2.907,5219,2.907,5220,5.353,5221,4.423,5222,2.907,5223,2.907,5224,2.907,5225,4.423,5226,2.907,5227,2.907,5228,2.907,5229,2.907,5230,2.907,5231,2.907,5232,5.353,5233,5.353,5234,2.907,5235,2.321,5236,4.423,5237,2.907,5238,4.423,5239,8.19,5240,2.907,5241,2.907,5242,4.423,5243,2.907,5244,2.907,5245,2.907,5246,2.907,5247,2.907,5248,2.907,5249,2.907,5250,2.907,5251,2.907,5252,2.907,5253,2.907,5254,2.907,5255,6.779,5256,2.907,5257,2.907,5258,2.907,5259,2.907,5260,2.907,5261,2.907,5262,5.353,5263,5.353,5264,2.907,5265,2.907,5266,7.587,5267,6.436,5268,2.907,5269,2.907,5270,2.907,5271,6.436,5272,2.907,5273,2.907,5274,2.907,5275,2.907,5276,2.907,5277,4.423,5278,2.907,5279,2.907,5280,2.907]],["title/dependencies.html",[1051,2.215,1052,2.561]],["body/dependencies.html",[25,0.011,73,0.512,75,1.237,76,2.752,83,0.008,84,0.009,85,0.008,299,3.059,304,3.303,334,3.059,350,4.43,481,3.956,544,3.303,584,4.67,650,3.176,651,3.611,675,1.67,865,3.442,1052,3.176,1053,3.765,1156,4.737,1193,6.651,1198,5.12,1461,3.765,1597,4.175,2622,5.12,2623,5.591,2648,5.12,2651,5.634,3965,5.12,4291,5.634,4721,5.634,4740,5.634,4833,5.634,4969,5.634,5281,6.415,5282,8.808,5283,6.415,5284,6.415,5285,6.415,5286,6.415,5287,6.415,5288,6.415,5289,6.415,5290,5.634,5291,6.415,5292,6.415,5293,6.415,5294,6.415,5295,6.415,5296,6.415]],["title/miscellaneous/enumerations.html",[5297,3.154,5298,4.543]],["body/miscellaneous/enumerations.html",[3,0.216,9,0.232,25,0.011,35,1.01,36,1.181,83,0.007,84,0.009,85,0.007,167,1.37,327,3.832,338,2.081,446,3.334,514,5.457,517,4.959,830,2.985,831,2.857,832,3.832,1220,2.417,1455,3.832,1464,4.361,1465,4.044,1466,4.044,1467,4.044,1468,4.044,1469,3.832,1470,4.044,1471,4.044,1472,4.044,1555,4.959,1561,6.526,1562,5.931,1563,6.526,1564,6.526,1571,5.457,1669,4.959,1670,4.588,1671,5.931,1678,6.526,1686,4.959,2060,5.457,2308,4.588,2338,5.931,2354,5.931,2749,4.044,2753,3.482,2757,4.959,2760,4.588,5153,5.457,5297,5.457,5298,5.457,5299,6.213,5300,7.43,5301,6.213,5302,6.213,5303,7.43,5304,6.213,5305,6.213,5306,6.213,5307,6.213,5308,6.213,5309,6.213,5310,6.213,5311,6.213,5312,6.213]],["title/index.html",[9,0.134,4565,2.108,4566,2.108]],["body/index.html",[25,0.011,71,0.221,83,0.008,84,0.009,85,0.008,140,1.456,252,2.566,263,4.41,344,3.427,345,3.289,353,3.289,359,2.019,407,1.313,412,4.72,413,3.748,441,1.533,555,4.715,846,3.748,1050,4.233,1057,4.715,1172,4.41,1185,4.41,1721,5.577,2301,4.156,2334,4.233,2557,3.748,2641,3.939,2754,5.098,2945,4.715,3396,5.098,3533,6.634,3815,5.098,3909,5.098,4260,4.915,4489,5.609,4565,3.748,4566,3.748,4713,5.74,4716,6.634,4907,6.634,5047,5.609,5098,4.715,5313,6.386,5314,6.386,5315,6.386,5316,7.552,5317,6.386,5318,6.386,5319,6.386,5320,6.386,5321,7.552,5322,6.386,5323,6.386,5324,6.386,5325,6.386,5326,6.386,5327,6.386,5328,6.386,5329,6.386,5330,6.386]],["title/license.html",[4565,2.108,4566,2.108,5235,2.867]],["body/license.html",[5,0.123,25,0.01,42,1.684,83,0.008,84,0.009,85,0.008,177,3.725,356,2.36,411,1.879,549,3.169,775,3.29,942,4.907,948,4.099,1618,5.305,1816,4.589,2333,4.099,3012,5.321,3403,5.305,4147,4.907,5235,6.986,5331,6.645,5332,6.645,5333,6.645,5334,6.645,5335,6.645,5336,6.645,5337,6.645,5338,6.645,5339,6.645,5340,6.645,5341,6.645,5342,5.837,5343,6.645,5344,7.731,5345,6.645,5346,6.645,5347,6.645,5348,6.645,5349,6.645,5350,6.645,5351,6.645,5352,6.645,5353,6.645,5354,6.645]],["title/modules.html",[1171,3.62]],["body/modules.html",[25,0.009,83,0.008,84,0.009,85,0.008,584,4.897,1170,4.53,1171,4.293,2739,6.974,4260,4.53,4768,6.974,5355,7.94]],["title/overview.html",[5356,5.155]],["body/overview.html",[2,1.636,25,0.011,83,0.005,84,0.007,85,0.005,140,0.785,341,2.185,359,1.287,418,1.827,546,1.827,627,1.929,651,1.941,652,1.032,657,1.778,659,1.877,661,1.877,663,1.929,665,1.929,667,1.929,669,1.929,672,1.929,674,1.929,677,1.929,679,1.929,681,1.877,684,1.877,686,1.929,688,1.877,690,1.929,692,1.929,693,1.827,696,1.929,699,1.877,701,1.929,703,1.929,705,1.827,707,1.877,709,1.929,712,1.877,715,1.877,717,1.827,719,1.877,721,1.929,723,1.982,725,1.929,727,1.877,729,1.929,732,1.877,734,0.853,735,1.877,737,1.877,739,1.877,741,1.877,743,1.877,745,1.877,747,1.877,749,1.877,754,1.363,830,2.271,900,1.747,1052,2.016,1135,4.225,1169,2.511,1170,5.09,1171,2.511,1172,2.811,1173,3.25,1174,3.576,1175,3.576,1176,3.576,1177,3.576,1178,4.511,1179,3.006,1263,2.811,2763,2.65,2767,2.096,2797,3.006,4260,5.958,4261,3.576,4262,3.576,4263,3.576,5356,3.576,5357,4.071,5358,4.071]],["title/todo.html",[33,0.988,4565,2.108,4566,2.108]],["body/todo.html",[25,0.011,29,1.224,33,2.311,35,0.838,37,1.032,42,1.562,44,1.124,83,0.007,84,0.009,85,0.007,100,3.456,120,1.169,140,1.189,148,2.477,169,1.252,180,3.157,188,2.006,205,3.803,256,2.707,282,2.339,350,4.258,353,3.175,407,0.974,411,2.091,412,3.619,413,3.619,503,3.175,555,4.553,573,3.309,647,4.258,733,1.65,763,1.521,894,3.386,930,4.013,975,5.416,976,5.416,1025,5.063,1069,3.456,1073,5.904,1111,5.157,1313,4.553,1325,4.341,1620,4.922,1637,4.553,1687,4.922,2300,3.619,2326,4.553,2333,3.803,2660,3.803,3113,4.553,3167,4.922,4354,5.416,4544,4.922,4546,4.922,4571,5.416,4987,5.416,5359,6.166,5360,6.166,5361,6.166,5362,6.166,5363,6.166,5364,6.166,5365,6.166,5366,6.166,5367,6.166,5368,6.166,5369,6.166,5370,6.166,5371,6.166,5372,6.166,5373,6.166,5374,6.166,5375,6.166,5376,6.166,5377,6.166]],["title/additional-documentation/getting-started.html",[57,0.487,4565,1.809,4566,1.809,4847,2.129]],["body/additional-documentation/getting-started.html",[0,0.018,2,3.383,5,0.096,13,0.621,14,2.163,25,0.011,66,2.787,71,0.3,77,0.213,83,0.006,84,0.008,85,0.006,87,1.149,91,4.592,100,2.911,140,1.541,151,2.388,169,0.821,174,3.057,177,3.727,195,0.921,222,4.111,224,2.853,227,3.433,228,3.38,231,3.835,250,3.38,252,2.087,256,1.901,268,2.388,278,2.476,282,1.642,284,1.791,286,2.228,288,1.69,339,1.739,341,3.568,344,3.568,345,3.424,346,1.933,355,5.308,358,1.552,359,2.103,407,1.396,411,1.468,412,5.171,413,4.539,446,2.787,469,3.38,479,2.388,520,3.203,531,4.561,539,2.305,545,2.674,547,4.561,550,3.203,561,2.911,675,1.352,754,2.227,770,2.911,772,3.777,793,2.787,807,0.895,819,3.586,833,2.388,846,3.048,850,2.674,1011,4.145,1059,3.292,1071,3.048,1083,4.145,1100,4.561,1160,5.065,1169,4.101,1170,4.328,1172,4.592,1184,4.561,1185,5.341,1204,3.38,1391,2.087,1464,3.048,1495,2.674,1523,2.911,1622,3.835,1637,3.835,1730,3.586,2334,2.911,2365,4.91,2417,3.835,2557,3.048,2578,3.38,2664,4.145,2703,4.145,3012,4.328,3262,4.101,3436,4.592,3523,4.561,3727,4.561,3732,3.835,3737,4.145,3956,3.38,4260,5.033,4488,4.561,4565,3.048,4566,3.048,4635,6.442,4713,3.586,4929,4.561,4960,4.145,4993,5.84,4994,6.792,4995,4.561,4996,4.561,5008,4.145,5068,6.792,5088,5.84,5378,5.193,5379,4.561,5380,4.561,5381,7.994,5382,5.193,5383,5.193,5384,5.193,5385,5.193,5386,5.193,5387,5.193,5388,5.193,5389,5.193,5390,5.193,5391,5.193,5392,5.193,5393,5.193,5394,5.193,5395,5.193,5396,5.193,5397,5.193,5398,5.193,5399,5.193,5400,4.145,5401,5.193,5402,5.193,5403,4.561,5404,5.193,5405,6.649,5406,5.193,5407,5.193]],["title/additional-documentation/local-development.html",[57,0.487,2547,2.006,3956,2.006,4847,2.129]],["body/additional-documentation/local-development.html",[25,0.01,83,0.008,84,0.01,85,0.008,140,1.352,2547,4.563,3956,4.563,5115,5.506]],["title/additional-documentation/local-development/schematics.html",[57,0.567,4847,2.48,5115,2.48]],["body/additional-documentation/local-development/schematics.html",[5,0.094,25,0.01,26,0.555,42,1.281,57,0.799,62,3.118,68,2.834,74,1.85,83,0.006,84,0.008,85,0.006,99,3.733,100,3.663,106,1.002,140,1.26,174,2.325,175,0.246,180,1.85,256,2.802,268,3.33,282,2.067,286,2.169,321,2.91,329,4.036,344,3.507,358,1.511,397,2.713,407,1.306,411,2.048,412,5.044,413,2.967,416,3.733,446,2.713,448,2.967,481,4.031,487,5.653,503,3.366,504,3.65,505,3.366,550,3.118,552,4.036,570,2.169,574,3.29,642,3.118,767,2.031,790,3.236,794,2.244,807,1.366,833,3.005,850,3.729,860,2.169,898,3.492,971,5.347,1050,4.783,1052,2.503,1059,2.503,1067,4.441,1068,3.492,1069,4.291,1171,4.031,1189,4.441,1250,3.733,1490,3.29,1515,3.116,1566,3.492,1633,2.967,1659,4.441,1721,3.733,1730,3.492,2333,4.031,2334,2.834,2346,3.118,2409,3.733,2418,3.29,2556,3.733,2557,2.967,2608,5.217,2660,3.118,2694,4.826,2798,4.441,2804,4.441,2814,4.441,2848,5.347,2917,4.036,2945,3.733,2979,3.733,3044,4.441,3175,4.441,3547,4.441,3591,4.441,3663,2.967,3732,4.826,3879,5.287,4515,6.183,4569,4.441,4570,4.441,4626,4.441,4687,5.781,4714,5.217,4799,4.036,4926,4.036,4975,4.036,5001,4.441,5007,5.74,5076,4.441,5079,6.111,5087,4.441,5097,6.361,5098,4.826,5115,6.085,5116,6.963,5117,6.724,5119,4.441,5290,5.74,5342,4.441,5380,4.441,5400,6.812,5403,4.441,5408,4.441,5409,4.441,5410,5.056,5411,6.535,5412,4.441,5413,5.056,5414,5.056,5415,5.056,5416,7.656,5417,6.535,5418,5.056,5419,5.056,5420,5.056,5421,5.056,5422,5.056,5423,5.056,5424,5.056,5425,5.056,5426,5.056,5427,4.441,5428,5.74,5429,5.056,5430,5.056,5431,5.056,5432,6.535,5433,5.056,5434,5.056,5435,5.056,5436,5.056,5437,5.056,5438,5.056,5439,5.056,5440,5.056,5441,5.056,5442,5.056,5443,5.056,5444,5.056,5445,5.056,5446,5.056,5447,5.056,5448,5.056,5449,5.056,5450,5.056,5451,5.056,5452,5.056,5453,5.056,5454,5.056,5455,5.056,5456,5.056,5457,5.056,5458,5.056,5459,5.056,5460,5.056,5461,5.056,5462,5.056,5463,5.056,5464,5.056,5465,5.056,5466,5.056,5467,5.056,5468,5.056,5469,5.056,5470,4.441,5471,4.441]],["title/additional-documentation/local-development/components.html",[57,0.567,140,0.692,4847,2.48]],["body/additional-documentation/local-development/components.html",[5,0.095,18,4.275,22,0.407,25,0.01,26,0.503,39,2.43,42,1.291,68,2.856,71,0.227,83,0.006,84,0.008,85,0.006,99,3.763,100,4.454,106,1.01,140,1.266,171,2.2,174,3.02,175,0.248,252,2.048,256,2.909,268,3.02,283,1.01,286,2.186,288,2.586,344,3.901,347,4.068,353,2.624,354,3.763,356,2.333,358,1.523,407,1.389,411,1.441,412,5.079,413,4.974,446,2.735,448,2.991,462,4.068,481,4.052,482,4.476,487,5.67,503,2.624,506,5.244,507,4.537,513,3.519,524,4.476,530,2.991,539,2.916,545,2.624,553,4.851,564,4.476,570,2.186,763,1.62,790,2.523,807,0.878,815,2.991,830,2.639,833,2.343,850,4.093,888,3.317,971,6.193,1014,4.476,1031,3.317,1050,4.749,1051,3.143,1052,2.523,1057,3.763,1059,2.523,1061,3.519,1171,3.143,1221,3.317,1619,4.068,1622,3.763,2310,4.537,2334,4.912,2349,4.851,2547,4.998,2623,3.763,2697,4.476,2848,3.763,2874,3.519,3012,3.317,3386,5.77,3435,5.244,3541,4.068,3732,3.763,3879,5.717,3956,4.731,3966,4.476,4032,4.476,4079,5.77,4515,5.368,4687,5.244,4713,3.519,4714,4.068,4799,5.244,4926,4.068,4960,4.068,4975,4.068,4979,4.476,5008,4.068,5062,4.476,5065,5.77,5071,4.476,5079,6.129,5094,4.476,5098,4.851,5115,5.901,5129,4.476,5379,4.476,5400,6.821,5408,4.476,5409,5.77,5412,4.476,5427,5.77,5428,5.77,5470,4.476,5471,4.476,5472,5.096,5473,5.096,5474,5.096,5475,5.096,5476,6.569,5477,6.569,5478,5.096,5479,5.096,5480,5.096,5481,5.096,5482,6.569,5483,5.096,5484,5.096,5485,5.096,5486,5.096,5487,6.569,5488,7.269,5489,6.569,5490,5.096,5491,7.269,5492,5.096,5493,5.096,5494,5.096,5495,5.096,5496,5.096,5497,5.096,5498,5.096,5499,5.096,5500,5.096,5501,5.096,5502,5.096,5503,5.096,5504,5.096,5505,5.096,5506,5.096,5507,5.096]]],"invertedIndex":[["",{"_index":25,"title":{},"body":{"classes/AbstractBaseForm.html":{},"classes/AbstractForm.html":{},"classes/AbstractFormControl.html":{},"classes/AbstractHttpService.html":{},"injectables/AbstractPageGuardService.html":{},"injectables/AbstractPgCheckService.html":{},"classes/AbstractReactForm.html":{},"classes/AbstractTestPage.html":{},"components/AccordionCommonComponent.html":{},"interfaces/AddrLabelList.html":{},"classes/Address.html":{},"classes/Base.html":{},"components/ButtonComponent.html":{},"components/ButtonGroupComponent.html":{},"injectables/CaptchaDataService.html":{},"modules/CaptchaModule.html":{},"injectables/CheckCompleteBaseService.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"interfaces/CommonAttachmentJson.html":{},"classes/CommonImage.html":{},"classes/CommonImageProcessingError.html":{},"interfaces/CommonImageScaleFactors.html":{},"classes/CommonImageScaleFactorsImpl.html":{},"interfaces/CommonLogMessage.html":{},"components/ConfirmTemplateComponent.html":{},"classes/Container.html":{},"components/CoreBreadcrumbComponent.html":{},"interfaces/CountryList.html":{},"interfaces/DateErrorMsg.html":{},"directives/DateFieldFormatDirective.html":{},"components/DatepickerComponent.html":{},"injectables/DefaultPageGuardService.html":{},"components/DropdownComponent.html":{},"directives/DuplicateCheckDirective.html":{},"components/EmailComponent.html":{},"components/ErrorContainerComponent.html":{},"interfaces/ErrorMessage.html":{},"interfaces/FileUploaderMsg.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/FullNameComponent.html":{},"interfaces/FullNameErrorMsg.html":{},"interfaces/GeoAddressResult.html":{},"components/GeocoderInputComponent.html":{},"injectables/GeocoderService.html":{},"components/HeaderComponent.html":{},"interfaces/IRadioItems.html":{},"interfaces/ISpaEnvResponse.html":{},"guards/LoadPageGuardService.html":{},"interfaces/Maxlengths.html":{},"classes/MoHCommonLibraryError.html":{},"components/NameComponent.html":{},"components/PageFrameworkComponent.html":{},"interfaces/PageList.html":{},"interfaces/PageListInterface.html":{},"components/PageSectionComponent.html":{},"injectables/PageStateService.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"classes/Person.html":{},"components/PhnComponent.html":{},"components/PhoneNumberComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{},"components/RadioComponent.html":{},"interfaces/ReadOnlyFields.html":{},"guards/RouteGuardService.html":{},"interfaces/SampleImageInterface.html":{},"components/SampleModalComponent.html":{},"injectables/ServerPayload.html":{},"modules/SharedCoreModule.html":{},"interfaces/SimpleDate.html":{},"components/SinComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"directives/ValidateBcPostalDirective.html":{},"directives/ValidateCityDirective.html":{},"directives/ValidateNameDirective.html":{},"directives/ValidatePostalcodeDirective.html":{},"directives/ValidateRegionDirective.html":{},"directives/ValidateStreetDirective.html":{},"components/WizardProgressBarComponent.html":{},"interfaces/WizardProgressItem.html":{},"components/XiconButtonComponent.html":{},"changelog.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"todo.html":{},"additional-documentation/getting-started.html":{},"additional-documentation/local-development.html":{},"additional-documentation/local-development/schematics.html":{},"additional-documentation/local-development/components.html":{}}}],["0",{"_index":338,"title":{},"body":{"classes/AbstractHttpService.html":{},"classes/Address.html":{},"injectables/CheckCompleteBaseService.html":{},"interfaces/CommonAttachmentJson.html":{},"classes/CommonImage.html":{},"classes/CommonImageProcessingError.html":{},"interfaces/CommonImageScaleFactors.html":{},"classes/CommonImageScaleFactorsImpl.html":{},"components/ConfirmTemplateComponent.html":{},"interfaces/DateErrorMsg.html":{},"directives/DateFieldFormatDirective.html":{},"components/DatepickerComponent.html":{},"interfaces/FileUploaderMsg.html":{},"components/GeocoderInputComponent.html":{},"interfaces/PageList.html":{},"interfaces/PageListInterface.html":{},"injectables/PageStateService.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"components/PhnComponent.html":{},"components/SinComponent.html":{},"components/WizardProgressBarComponent.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{}}}],["0.0.17",{"_index":5106,"title":{},"body":{"changelog.html":{}}}],["0.0.18",{"_index":5104,"title":{},"body":{"changelog.html":{}}}],["0.0.19",{"_index":5100,"title":{},"body":{"changelog.html":{}}}],["0.0.20",{"_index":5086,"title":{},"body":{"changelog.html":{}}}],["0.0.21",{"_index":5073,"title":{},"body":{"changelog.html":{}}}],["0.0.22",{"_index":5070,"title":{},"body":{"changelog.html":{}}}],["0.0.23",{"_index":5067,"title":{},"body":{"changelog.html":{}}}],["0.0.24",{"_index":5064,"title":{},"body":{"changelog.html":{}}}],["0.0.25",{"_index":5059,"title":{},"body":{"changelog.html":{}}}],["0.0.26",{"_index":5056,"title":{},"body":{"changelog.html":{}}}],["0.0.27",{"_index":5053,"title":{},"body":{"changelog.html":{}}}],["0.0.28",{"_index":5051,"title":{},"body":{"changelog.html":{}}}],["0.0.29",{"_index":5049,"title":{},"body":{"changelog.html":{}}}],["0.0.30",{"_index":5045,"title":{},"body":{"changelog.html":{}}}],["0.0.31",{"_index":5035,"title":{},"body":{"changelog.html":{}}}],["0.0.32",{"_index":5020,"title":{},"body":{"changelog.html":{}}}],["0.0.33",{"_index":5004,"title":{},"body":{"changelog.html":{}}}],["0.0.34",{"_index":5000,"title":{},"body":{"changelog.html":{}}}],["0.1.2",{"_index":5287,"title":{},"body":{"dependencies.html":{}}}],["0.5",{"_index":3028,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["0.8.26",{"_index":5296,"title":{},"body":{"dependencies.html":{}}}],["0.8to",{"_index":2908,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["0/1",{"_index":5160,"title":{},"body":{"coverage.html":{}}}],["0/10",{"_index":5192,"title":{},"body":{"coverage.html":{}}}],["0/11",{"_index":5231,"title":{},"body":{"coverage.html":{}}}],["0/12",{"_index":5205,"title":{},"body":{"coverage.html":{}}}],["0/2",{"_index":5157,"title":{},"body":{"coverage.html":{}}}],["0/3",{"_index":5182,"title":{},"body":{"coverage.html":{}}}],["0/4",{"_index":5198,"title":{},"body":{"coverage.html":{}}}],["0/5",{"_index":5152,"title":{},"body":{"coverage.html":{}}}],["0/6",{"_index":5171,"title":{},"body":{"coverage.html":{}}}],["0/7",{"_index":5219,"title":{},"body":{"coverage.html":{}}}],["0/8",{"_index":5170,"title":{},"body":{"coverage.html":{}}}],["00",{"_index":4819,"title":{},"body":{"changelog.html":{}}}],["000000000",{"_index":4386,"title":{},"body":{"components/SinComponent.html":{}}}],["009d779",{"_index":4633,"title":{},"body":{"changelog.html":{}}}],["01",{"_index":4647,"title":{},"body":{"changelog.html":{}}}],["015602c",{"_index":4663,"title":{},"body":{"changelog.html":{}}}],["017bd5f",{"_index":5135,"title":{},"body":{"changelog.html":{}}}],["01d17d3",{"_index":5144,"title":{},"body":{"changelog.html":{}}}],["02",{"_index":4577,"title":{},"body":{"changelog.html":{}}}],["02cb2c5",{"_index":4717,"title":{},"body":{"changelog.html":{}}}],["03",{"_index":4570,"title":{},"body":{"changelog.html":{},"additional-documentation/local-development/schematics.html":{}}}],["03c1243",{"_index":4971,"title":{},"body":{"changelog.html":{}}}],["04",{"_index":4896,"title":{},"body":{"changelog.html":{}}}],["05",{"_index":4630,"title":{},"body":{"changelog.html":{}}}],["06",{"_index":4626,"title":{},"body":{"changelog.html":{},"additional-documentation/local-development/schematics.html":{}}}],["0699178",{"_index":4813,"title":{},"body":{"changelog.html":{}}}],["07",{"_index":4834,"title":{},"body":{"changelog.html":{}}}],["08",{"_index":4744,"title":{},"body":{"changelog.html":{}}}],["09",{"_index":4731,"title":{},"body":{"changelog.html":{}}}],["09ae712",{"_index":4917,"title":{},"body":{"changelog.html":{}}}],["09ce95a",{"_index":5009,"title":{},"body":{"changelog.html":{}}}],["0ba1d1e",{"_index":4934,"title":{},"body":{"changelog.html":{}}}],["0ed3875",{"_index":4749,"title":{},"body":{"changelog.html":{}}}],["0s",{"_index":4952,"title":{},"body":{"changelog.html":{}}}],["1",{"_index":1220,"title":{},"body":{"injectables/CheckCompleteBaseService.html":{},"interfaces/CommonAttachmentJson.html":{},"classes/CommonImage.html":{},"classes/CommonImageProcessingError.html":{},"interfaces/CommonImageScaleFactors.html":{},"classes/CommonImageScaleFactorsImpl.html":{},"components/ConfirmTemplateComponent.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"interfaces/FileUploaderMsg.html":{},"components/HeaderComponent.html":{},"guards/LoadPageGuardService.html":{},"components/NameComponent.html":{},"interfaces/PageList.html":{},"interfaces/PageListInterface.html":{},"injectables/PageStateService.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"components/PhnComponent.html":{},"components/PhoneNumberComponent.html":{},"guards/RouteGuardService.html":{},"components/SinComponent.html":{},"components/WizardProgressBarComponent.html":{},"changelog.html":{},"miscellaneous/enumerations.html":{}}}],["1.0.0",{"_index":4992,"title":{},"body":{"changelog.html":{}}}],["1.0.1",{"_index":4985,"title":{},"body":{"changelog.html":{}}}],["1.0.2",{"_index":4983,"title":{},"body":{"changelog.html":{}}}],["1.1.0",{"_index":4972,"title":{},"body":{"changelog.html":{}}}],["1.1.1",{"_index":4969,"title":{},"body":{"changelog.html":{},"dependencies.html":{}}}],["1.2.0",{"_index":4966,"title":{},"body":{"changelog.html":{}}}],["1.3.0",{"_index":4959,"title":{},"body":{"changelog.html":{}}}],["1.4.0",{"_index":4957,"title":{},"body":{"changelog.html":{}}}],["1.5.0",{"_index":4951,"title":{},"body":{"changelog.html":{}}}],["1.6.0",{"_index":4941,"title":{},"body":{"changelog.html":{}}}],["1.6.1",{"_index":4938,"title":{},"body":{"changelog.html":{}}}],["1.6.2",{"_index":4935,"title":{},"body":{"changelog.html":{}}}],["1.7.0",{"_index":4922,"title":{},"body":{"changelog.html":{}}}],["1.8.0",{"_index":4914,"title":{},"body":{"changelog.html":{}}}],["1/1",{"_index":5161,"title":{},"body":{"coverage.html":{}}}],["1/11",{"_index":5196,"title":{},"body":{"coverage.html":{}}}],["1/17",{"_index":5172,"title":{},"body":{"coverage.html":{}}}],["1/18",{"_index":5189,"title":{},"body":{"coverage.html":{}}}],["1/2",{"_index":5230,"title":{},"body":{"coverage.html":{}}}],["1/28",{"_index":5181,"title":{},"body":{"coverage.html":{}}}],["1/3",{"_index":5180,"title":{},"body":{"coverage.html":{}}}],["1/4",{"_index":5176,"title":{},"body":{"coverage.html":{}}}],["1/5",{"_index":5225,"title":{},"body":{"coverage.html":{}}}],["1/6",{"_index":5168,"title":{},"body":{"coverage.html":{}}}],["1/7",{"_index":5206,"title":{},"body":{"coverage.html":{}}}],["1/8",{"_index":5178,"title":{},"body":{"coverage.html":{}}}],["1/9",{"_index":5173,"title":{},"body":{"coverage.html":{}}}],["10",{"_index":2772,"title":{},"body":{"interfaces/FileUploaderMsg.html":{},"interfaces/GeoAddressResult.html":{},"components/GeocoderInputComponent.html":{},"injectables/GeocoderService.html":{},"components/NameComponent.html":{},"components/PhnComponent.html":{},"components/PhoneNumberComponent.html":{},"components/SinComponent.html":{},"components/ThumbnailComponent.html":{},"changelog.html":{},"coverage.html":{}}}],["10.256s",{"_index":4988,"title":{},"body":{"changelog.html":{}}}],["10/31",{"_index":5188,"title":{},"body":{"coverage.html":{}}}],["10/38",{"_index":5191,"title":{},"body":{"coverage.html":{}}}],["10/54",{"_index":5184,"title":{},"body":{"coverage.html":{}}}],["100",{"_index":1334,"title":{},"body":{"components/CityComponent.html":{},"interfaces/FileUploaderMsg.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"components/WizardProgressBarComponent.html":{},"coverage.html":{}}}],["1024",{"_index":2997,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["1048576",{"_index":3015,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["108e46b",{"_index":4658,"title":{},"body":{"changelog.html":{}}}],["10^10",{"_index":3859,"title":{},"body":{"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{}}}],["10th",{"_index":4047,"title":{},"body":{"components/PhnComponent.html":{}}}],["11",{"_index":2776,"title":{},"body":{"interfaces/FileUploaderMsg.html":{},"components/PhnComponent.html":{},"components/PhoneNumberComponent.html":{},"changelog.html":{},"coverage.html":{}}}],["111",{"_index":3995,"title":{},"body":{"components/PhnComponent.html":{},"components/SinComponent.html":{}}}],["1111",{"_index":3994,"title":{},"body":{"components/PhnComponent.html":{}}}],["12",{"_index":2781,"title":{},"body":{"interfaces/FileUploaderMsg.html":{},"changelog.html":{},"coverage.html":{}}}],["1251212",{"_index":4722,"title":{},"body":{"changelog.html":{}}}],["126d876",{"_index":4870,"title":{},"body":{"changelog.html":{}}}],["13",{"_index":2792,"title":{},"body":{"interfaces/FileUploaderMsg.html":{},"components/GeocoderInputComponent.html":{},"changelog.html":{},"coverage.html":{}}}],["1303722",{"_index":4742,"title":{},"body":{"changelog.html":{}}}],["14",{"_index":2797,"title":{},"body":{"interfaces/FileUploaderMsg.html":{},"changelog.html":{},"coverage.html":{},"overview.html":{}}}],["14bce6e",{"_index":4645,"title":{},"body":{"changelog.html":{}}}],["15",{"_index":2801,"title":{},"body":{"interfaces/FileUploaderMsg.html":{},"components/SinComponent.html":{},"changelog.html":{}}}],["151f173",{"_index":4997,"title":{},"body":{"changelog.html":{}}}],["15px",{"_index":4945,"title":{},"body":{"changelog.html":{}}}],["16",{"_index":2805,"title":{},"body":{"interfaces/FileUploaderMsg.html":{},"changelog.html":{},"coverage.html":{}}}],["1650a23",{"_index":4824,"title":{},"body":{"changelog.html":{}}}],["16be24b",{"_index":4718,"title":{},"body":{"changelog.html":{}}}],["16da113",{"_index":4817,"title":{},"body":{"changelog.html":{}}}],["17",{"_index":2808,"title":{},"body":{"interfaces/FileUploaderMsg.html":{},"changelog.html":{}}}],["18",{"_index":2816,"title":{},"body":{"interfaces/FileUploaderMsg.html":{},"changelog.html":{},"coverage.html":{}}}],["180",{"_index":4412,"title":{},"body":{"components/ThumbnailComponent.html":{}}}],["185148b",{"_index":5012,"title":{},"body":{"changelog.html":{}}}],["185px",{"_index":2397,"title":{},"body":{"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{}}}],["18d69c6",{"_index":5038,"title":{},"body":{"changelog.html":{}}}],["19",{"_index":2824,"title":{},"body":{"interfaces/FileUploaderMsg.html":{},"changelog.html":{}}}],["19/23",{"_index":5156,"title":{},"body":{"coverage.html":{}}}],["1901",{"_index":4580,"title":{},"body":{"changelog.html":{}}}],["1].iscomplete",{"_index":1273,"title":{},"body":{"injectables/CheckCompleteBaseService.html":{},"interfaces/PageListInterface.html":{}}}],["1a1",{"_index":4145,"title":{},"body":{"components/PostalCodeComponent.html":{}}}],["1a288cd",{"_index":5142,"title":{},"body":{"changelog.html":{}}}],["1c51f01",{"_index":4776,"title":{},"body":{"changelog.html":{}}}],["1c8242e",{"_index":5022,"title":{},"body":{"changelog.html":{}}}],["1ea543d",{"_index":5048,"title":{},"body":{"changelog.html":{}}}],["1f1a0f9",{"_index":4724,"title":{},"body":{"changelog.html":{}}}],["2",{"_index":830,"title":{},"body":{"interfaces/AddrLabelList.html":{},"components/ConfirmTemplateComponent.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"interfaces/FileUploaderMsg.html":{},"guards/LoadPageGuardService.html":{},"interfaces/Maxlengths.html":{},"classes/Person.html":{},"components/PhnComponent.html":{},"components/PhoneNumberComponent.html":{},"interfaces/ReadOnlyFields.html":{},"guards/RouteGuardService.html":{},"components/SinComponent.html":{},"components/WizardProgressBarComponent.html":{},"changelog.html":{},"miscellaneous/enumerations.html":{},"overview.html":{},"additional-documentation/local-development/components.html":{}}}],["2.0",{"_index":5335,"title":{},"body":{"license.html":{}}}],["2.0.0",{"_index":3731,"title":{},"body":{"components/PageFrameworkComponent.html":{},"changelog.html":{}}}],["2.0.1",{"_index":4895,"title":{},"body":{"changelog.html":{}}}],["2.0.550",{"_index":5293,"title":{},"body":{"dependencies.html":{}}}],["2.0unless",{"_index":5339,"title":{},"body":{"license.html":{}}}],["2.1.0",{"_index":4879,"title":{},"body":{"changelog.html":{}}}],["2.1.1",{"_index":4874,"title":{},"body":{"changelog.html":{}}}],["2.1.2",{"_index":4868,"title":{},"body":{"changelog.html":{}}}],["2.1.3",{"_index":4861,"title":{},"body":{"changelog.html":{}}}],["2.1.4",{"_index":4858,"title":{},"body":{"changelog.html":{}}}],["2.1.5",{"_index":4853,"title":{},"body":{"changelog.html":{}}}],["2.10.0",{"_index":4801,"title":{},"body":{"changelog.html":{}}}],["2.11.0",{"_index":4796,"title":{},"body":{"changelog.html":{}}}],["2.12.0",{"_index":4791,"title":{},"body":{"changelog.html":{}}}],["2.13.0",{"_index":4788,"title":{},"body":{"changelog.html":{}}}],["2.14.0",{"_index":4786,"title":{},"body":{"changelog.html":{}}}],["2.15.0",{"_index":4784,"title":{},"body":{"changelog.html":{}}}],["2.16.0",{"_index":4782,"title":{},"body":{"changelog.html":{}}}],["2.16.2",{"_index":5285,"title":{},"body":{"dependencies.html":{}}}],["2.17.0",{"_index":4770,"title":{},"body":{"changelog.html":{}}}],["2.17.1",{"_index":4758,"title":{},"body":{"changelog.html":{}}}],["2.18.0",{"_index":4753,"title":{},"body":{"changelog.html":{}}}],["2.18.1",{"_index":4751,"title":{},"body":{"changelog.html":{}}}],["2.19.0",{"_index":4748,"title":{},"body":{"changelog.html":{}}}],["2.2.0",{"_index":4846,"title":{},"body":{"changelog.html":{}}}],["2.20.0",{"_index":4743,"title":{},"body":{"changelog.html":{}}}],["2.20.1",{"_index":4740,"title":{},"body":{"changelog.html":{},"dependencies.html":{}}}],["2.21.0",{"_index":4733,"title":{},"body":{"changelog.html":{}}}],["2.22.0",{"_index":4730,"title":{},"body":{"changelog.html":{}}}],["2.23.0",{"_index":4726,"title":{},"body":{"changelog.html":{}}}],["2.24.0",{"_index":4721,"title":{},"body":{"changelog.html":{},"dependencies.html":{}}}],["2.26.0",{"_index":4711,"title":{},"body":{"changelog.html":{}}}],["2.27.0",{"_index":4703,"title":{},"body":{"changelog.html":{}}}],["2.27.1",{"_index":4701,"title":{},"body":{"changelog.html":{}}}],["2.27.2",{"_index":4696,"title":{},"body":{"changelog.html":{}}}],["2.28.0",{"_index":4694,"title":{},"body":{"changelog.html":{}}}],["2.3.0",{"_index":4843,"title":{},"body":{"changelog.html":{}}}],["2.4.0",{"_index":4842,"title":{},"body":{"changelog.html":{}}}],["2.5.0",{"_index":4840,"title":{},"body":{"changelog.html":{}}}],["2.5.1",{"_index":4833,"title":{},"body":{"changelog.html":{},"dependencies.html":{}}}],["2.5.2",{"_index":4832,"title":{},"body":{"changelog.html":{}}}],["2.5.4",{"_index":5291,"title":{},"body":{"dependencies.html":{}}}],["2.6.0",{"_index":4826,"title":{},"body":{"changelog.html":{}}}],["2.7.0",{"_index":4822,"title":{},"body":{"changelog.html":{}}}],["2.7.1",{"_index":4818,"title":{},"body":{"changelog.html":{}}}],["2.8.0",{"_index":4810,"title":{},"body":{"changelog.html":{}}}],["2.8.1",{"_index":4807,"title":{},"body":{"changelog.html":{}}}],["2.9.0",{"_index":4804,"title":{},"body":{"changelog.html":{}}}],["2/12",{"_index":5207,"title":{},"body":{"coverage.html":{}}}],["2/20",{"_index":5197,"title":{},"body":{"coverage.html":{}}}],["2/23",{"_index":5194,"title":{},"body":{"coverage.html":{}}}],["2/27",{"_index":5202,"title":{},"body":{"coverage.html":{}}}],["2/3",{"_index":5215,"title":{},"body":{"coverage.html":{}}}],["2/30",{"_index":5175,"title":{},"body":{"coverage.html":{}}}],["2/33",{"_index":5200,"title":{},"body":{"coverage.html":{}}}],["2/5",{"_index":5227,"title":{},"body":{"coverage.html":{}}}],["2/9",{"_index":5193,"title":{},"body":{"coverage.html":{}}}],["20",{"_index":4596,"title":{},"body":{"changelog.html":{},"coverage.html":{}}}],["2017",{"_index":5332,"title":{},"body":{"license.html":{}}}],["2019",{"_index":4569,"title":{},"body":{"changelog.html":{},"additional-documentation/local-development/schematics.html":{}}}],["201px",{"_index":2399,"title":{},"body":{"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{}}}],["21",{"_index":5358,"title":{},"body":{"overview.html":{}}}],["21afb82",{"_index":4624,"title":{},"body":{"changelog.html":{}}}],["22",{"_index":4681,"title":{},"body":{"changelog.html":{},"coverage.html":{}}}],["2235059",{"_index":4729,"title":{},"body":{"changelog.html":{}}}],["224e362",{"_index":4709,"title":{},"body":{"changelog.html":{}}}],["22710b7",{"_index":5031,"title":{},"body":{"changelog.html":{}}}],["23",{"_index":4675,"title":{},"body":{"changelog.html":{}}}],["238c01d",{"_index":5039,"title":{},"body":{"changelog.html":{}}}],["24",{"_index":4771,"title":{},"body":{"changelog.html":{}}}],["25",{"_index":837,"title":{},"body":{"interfaces/AddrLabelList.html":{},"interfaces/Maxlengths.html":{},"interfaces/ReadOnlyFields.html":{},"changelog.html":{},"coverage.html":{}}}],["250",{"_index":838,"title":{},"body":{"interfaces/AddrLabelList.html":{},"interfaces/CountryList.html":{},"interfaces/Maxlengths.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{},"interfaces/ReadOnlyFields.html":{},"components/ThumbnailComponent.html":{}}}],["255",{"_index":2567,"title":{},"body":{"components/EmailComponent.html":{},"components/GeocoderInputComponent.html":{},"components/NameComponent.html":{}}}],["26",{"_index":4754,"title":{},"body":{"changelog.html":{},"coverage.html":{}}}],["26(a",{"_index":3552,"title":{},"body":{"interfaces/ISpaEnvResponse.html":{}}}],["2600",{"_index":3030,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["2625608",{"_index":5134,"title":{},"body":{"changelog.html":{}}}],["27",{"_index":4587,"title":{},"body":{"changelog.html":{},"coverage.html":{}}}],["27b488b",{"_index":4736,"title":{},"body":{"changelog.html":{}}}],["28",{"_index":4669,"title":{},"body":{"changelog.html":{}}}],["28d9585",{"_index":4671,"title":{},"body":{"changelog.html":{}}}],["29",{"_index":4656,"title":{},"body":{"changelog.html":{}}}],["29c5160",{"_index":4764,"title":{},"body":{"changelog.html":{}}}],["29e521c",{"_index":4783,"title":{},"body":{"changelog.html":{}}}],["2a511e7",{"_index":4915,"title":{},"body":{"changelog.html":{}}}],["2c0b127",{"_index":4798,"title":{},"body":{"changelog.html":{}}}],["2c2f322",{"_index":4863,"title":{},"body":{"changelog.html":{}}}],["2c5c994",{"_index":5132,"title":{},"body":{"changelog.html":{}}}],["2ddfc23",{"_index":5023,"title":{},"body":{"changelog.html":{}}}],["2ebd235",{"_index":4700,"title":{},"body":{"changelog.html":{}}}],["3",{"_index":831,"title":{},"body":{"interfaces/AddrLabelList.html":{},"components/CoreBreadcrumbComponent.html":{},"interfaces/IRadioItems.html":{},"guards/LoadPageGuardService.html":{},"interfaces/Maxlengths.html":{},"components/PasswordComponent.html":{},"classes/Person.html":{},"components/PhnComponent.html":{},"components/RadioComponent.html":{},"interfaces/ReadOnlyFields.html":{},"guards/RouteGuardService.html":{},"changelog.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{}}}],["3.0.0",{"_index":4571,"title":{},"body":{"changelog.html":{},"todo.html":{}}}],["3.2.0",{"_index":5292,"title":{},"body":{"dependencies.html":{}}}],["3/21",{"_index":5174,"title":{},"body":{"coverage.html":{}}}],["3/31",{"_index":5190,"title":{},"body":{"coverage.html":{}}}],["3/33",{"_index":5201,"title":{},"body":{"coverage.html":{}}}],["3/4",{"_index":5217,"title":{},"body":{"coverage.html":{}}}],["30",{"_index":2873,"title":{},"body":{"interfaces/FileUploaderMsg.html":{},"changelog.html":{}}}],["300",{"_index":4408,"title":{},"body":{"components/ThumbnailComponent.html":{}}}],["31",{"_index":4835,"title":{},"body":{"changelog.html":{},"coverage.html":{}}}],["32",{"_index":3842,"title":{},"body":{"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"changelog.html":{},"coverage.html":{}}}],["322d58c",{"_index":4593,"title":{},"body":{"changelog.html":{}}}],["33",{"_index":5179,"title":{},"body":{"coverage.html":{}}}],["3300",{"_index":3033,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["34f0a40",{"_index":4704,"title":{},"body":{"changelog.html":{}}}],["35",{"_index":5212,"title":{},"body":{"coverage.html":{}}}],["355945207",{"_index":3883,"title":{},"body":{"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{}}}],["35d0bba",{"_index":5143,"title":{},"body":{"changelog.html":{}}}],["36476f8",{"_index":4968,"title":{},"body":{"changelog.html":{}}}],["36eeddb",{"_index":4620,"title":{},"body":{"changelog.html":{}}}],["38",{"_index":5357,"title":{},"body":{"overview.html":{}}}],["3868c50",{"_index":4982,"title":{},"body":{"changelog.html":{}}}],["38c822b",{"_index":4666,"title":{},"body":{"changelog.html":{}}}],["39",{"_index":5228,"title":{},"body":{"coverage.html":{}}}],["3a06f99",{"_index":4933,"title":{},"body":{"changelog.html":{}}}],["3a5677b",{"_index":4838,"title":{},"body":{"changelog.html":{}}}],["3a98fb0",{"_index":5042,"title":{},"body":{"changelog.html":{}}}],["3ac6d4d",{"_index":5080,"title":{},"body":{"changelog.html":{}}}],["3b90e60",{"_index":5099,"title":{},"body":{"changelog.html":{}}}],["3d0a6bc",{"_index":5072,"title":{},"body":{"changelog.html":{}}}],["3f1149e",{"_index":4825,"title":{},"body":{"changelog.html":{}}}],["3f42b31",{"_index":4944,"title":{},"body":{"changelog.html":{}}}],["3f6a466",{"_index":4638,"title":{},"body":{"changelog.html":{}}}],["3ff09e0",{"_index":4588,"title":{},"body":{"changelog.html":{}}}],["4",{"_index":2749,"title":{},"body":{"interfaces/FileUploaderMsg.html":{},"guards/LoadPageGuardService.html":{},"components/PasswordComponent.html":{},"components/PhnComponent.html":{},"guards/RouteGuardService.html":{},"miscellaneous/enumerations.html":{}}}],["4.3.1",{"_index":5289,"title":{},"body":{"dependencies.html":{}}}],["4/10",{"_index":5222,"title":{},"body":{"coverage.html":{}}}],["4/16",{"_index":5218,"title":{},"body":{"coverage.html":{}}}],["4/29",{"_index":5199,"title":{},"body":{"coverage.html":{}}}],["4/40",{"_index":5154,"title":{},"body":{"coverage.html":{}}}],["4/5",{"_index":2395,"title":{},"body":{"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{}}}],["40",{"_index":5221,"title":{},"body":{"coverage.html":{}}}],["400/500",{"_index":266,"title":{},"body":{"classes/AbstractHttpService.html":{},"injectables/GeocoderService.html":{}}}],["41f5609",{"_index":4999,"title":{},"body":{"changelog.html":{}}}],["4295b03",{"_index":4953,"title":{},"body":{"changelog.html":{}}}],["4766a2b",{"_index":5066,"title":{},"body":{"changelog.html":{}}}],["479804f",{"_index":5122,"title":{},"body":{"changelog.html":{}}}],["47d614a",{"_index":4920,"title":{},"body":{"changelog.html":{}}}],["483b735",{"_index":4806,"title":{},"body":{"changelog.html":{}}}],["48966c0",{"_index":5128,"title":{},"body":{"changelog.html":{}}}],["48dfa9d",{"_index":5120,"title":{},"body":{"changelog.html":{}}}],["48e2120",{"_index":4611,"title":{},"body":{"changelog.html":{}}}],["492934b",{"_index":4612,"title":{},"body":{"changelog.html":{}}}],["496c252",{"_index":4769,"title":{},"body":{"changelog.html":{}}}],["4b884a6",{"_index":5137,"title":{},"body":{"changelog.html":{}}}],["4bb54c0",{"_index":4676,"title":{},"body":{"changelog.html":{}}}],["4d39002",{"_index":4809,"title":{},"body":{"changelog.html":{}}}],["4d5992a",{"_index":5013,"title":{},"body":{"changelog.html":{}}}],["4e8eb9b",{"_index":5101,"title":{},"body":{"changelog.html":{}}}],["4f3e59f",{"_index":4747,"title":{},"body":{"changelog.html":{}}}],["4f8f2e7",{"_index":4757,"title":{},"body":{"changelog.html":{}}}],["5",{"_index":2753,"title":{},"body":{"interfaces/FileUploaderMsg.html":{},"guards/LoadPageGuardService.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"components/PhnComponent.html":{},"guards/RouteGuardService.html":{},"changelog.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{}}}],["5/10",{"_index":5223,"title":{},"body":{"coverage.html":{}}}],["5/14",{"_index":5213,"title":{},"body":{"coverage.html":{}}}],["5/16",{"_index":5226,"title":{},"body":{"coverage.html":{}}}],["5/38",{"_index":5204,"title":{},"body":{"coverage.html":{}}}],["50",{"_index":2796,"title":{},"body":{"interfaces/FileUploaderMsg.html":{},"components/FormActionBarComponent.html":{},"interfaces/GeoAddressResult.html":{},"injectables/GeocoderService.html":{},"coverage.html":{}}}],["5069fe8",{"_index":4803,"title":{},"body":{"changelog.html":{}}}],["50ms",{"_index":3160,"title":{},"body":{"components/FormActionBarComponent.html":{}}}],["510ad9e",{"_index":4732,"title":{},"body":{"changelog.html":{}}}],["51bfe3b",{"_index":4974,"title":{},"body":{"changelog.html":{}}}],["51f2ea4",{"_index":4692,"title":{},"body":{"changelog.html":{}}}],["532a3ec",{"_index":5052,"title":{},"body":{"changelog.html":{}}}],["5362c67",{"_index":4673,"title":{},"body":{"changelog.html":{}}}],["53a109b",{"_index":5018,"title":{},"body":{"changelog.html":{}}}],["5441be2",{"_index":4679,"title":{},"body":{"changelog.html":{}}}],["555",{"_index":4097,"title":{},"body":{"components/PhoneNumberComponent.html":{}}}],["5555",{"_index":4098,"title":{},"body":{"components/PhoneNumberComponent.html":{}}}],["5910979",{"_index":4735,"title":{},"body":{"changelog.html":{}}}],["5965aec",{"_index":4795,"title":{},"body":{"changelog.html":{}}}],["5a7c37b",{"_index":4876,"title":{},"body":{"changelog.html":{}}}],["5b18c5f",{"_index":4897,"title":{},"body":{"changelog.html":{}}}],["5b88093",{"_index":4965,"title":{},"body":{"changelog.html":{}}}],["5bb54fc",{"_index":4827,"title":{},"body":{"changelog.html":{}}}],["5d8f61d",{"_index":4890,"title":{},"body":{"changelog.html":{}}}],["6",{"_index":2757,"title":{},"body":{"interfaces/FileUploaderMsg.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{}}}],["6.4.0",{"_index":5294,"title":{},"body":{"dependencies.html":{}}}],["6.4.1",{"_index":5317,"title":{},"body":{"index.html":{}}}],["6/7",{"_index":5209,"title":{},"body":{"coverage.html":{}}}],["60befc2",{"_index":4816,"title":{},"body":{"changelog.html":{}}}],["61b54fd",{"_index":4654,"title":{},"body":{"changelog.html":{}}}],["61c0cdc",{"_index":4667,"title":{},"body":{"changelog.html":{}}}],["6242bea",{"_index":5113,"title":{},"body":{"changelog.html":{}}}],["6254d29",{"_index":4906,"title":{},"body":{"changelog.html":{}}}],["6427f10",{"_index":4772,"title":{},"body":{"changelog.html":{}}}],["650025e",{"_index":5114,"title":{},"body":{"changelog.html":{}}}],["655a0fd",{"_index":4628,"title":{},"body":{"changelog.html":{}}}],["65b8144",{"_index":5095,"title":{},"body":{"changelog.html":{}}}],["66",{"_index":5214,"title":{},"body":{"coverage.html":{}}}],["6650ef8",{"_index":4659,"title":{},"body":{"changelog.html":{}}}],["66e58e7",{"_index":4787,"title":{},"body":{"changelog.html":{}}}],["66f9608",{"_index":5006,"title":{},"body":{"changelog.html":{}}}],["6775a4d",{"_index":4924,"title":{},"body":{"changelog.html":{}}}],["679ac15",{"_index":4640,"title":{},"body":{"changelog.html":{}}}],["67b6f78",{"_index":4820,"title":{},"body":{"changelog.html":{}}}],["67c4797",{"_index":5050,"title":{},"body":{"changelog.html":{}}}],["6b8cedd",{"_index":4911,"title":{},"body":{"changelog.html":{}}}],["6c09982",{"_index":4939,"title":{},"body":{"changelog.html":{}}}],["6caf36c",{"_index":5107,"title":{},"body":{"changelog.html":{}}}],["6d5649d",{"_index":5146,"title":{},"body":{"changelog.html":{}}}],["6f093d2",{"_index":4893,"title":{},"body":{"changelog.html":{}}}],["7",{"_index":2760,"title":{},"body":{"interfaces/FileUploaderMsg.html":{},"components/PhnComponent.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{}}}],["7.2.7",{"_index":5282,"title":{},"body":{"dependencies.html":{}}}],["7/14",{"_index":5224,"title":{},"body":{"coverage.html":{}}}],["71eb531",{"_index":4657,"title":{},"body":{"changelog.html":{}}}],["7226b37",{"_index":5029,"title":{},"body":{"changelog.html":{}}}],["730f9c7",{"_index":4710,"title":{},"body":{"changelog.html":{}}}],["7355610",{"_index":4707,"title":{},"body":{"changelog.html":{}}}],["7398e93",{"_index":4793,"title":{},"body":{"changelog.html":{}}}],["7400a64",{"_index":4886,"title":{},"body":{"changelog.html":{}}}],["75",{"_index":5216,"title":{},"body":{"coverage.html":{}}}],["788c3d1",{"_index":4599,"title":{},"body":{"changelog.html":{}}}],["7bf5025",{"_index":4589,"title":{},"body":{"changelog.html":{}}}],["7c99c1e",{"_index":4821,"title":{},"body":{"changelog.html":{}}}],["7d274e8",{"_index":4759,"title":{},"body":{"changelog.html":{}}}],["7d2e7cd",{"_index":5036,"title":{},"body":{"changelog.html":{}}}],["7e270d8",{"_index":4598,"title":{},"body":{"changelog.html":{}}}],["7eaf326",{"_index":5091,"title":{},"body":{"changelog.html":{}}}],["7f968a4",{"_index":5102,"title":{},"body":{"changelog.html":{}}}],["7fd6537",{"_index":5089,"title":{},"body":{"changelog.html":{}}}],["7febf6d",{"_index":4950,"title":{},"body":{"changelog.html":{}}}],["7ff8510",{"_index":4961,"title":{},"body":{"changelog.html":{}}}],["8",{"_index":2763,"title":{},"body":{"interfaces/FileUploaderMsg.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"components/PhnComponent.html":{},"coverage.html":{},"overview.html":{}}}],["8.9.4",{"_index":5315,"title":{},"body":{"index.html":{}}}],["8/29",{"_index":5195,"title":{},"body":{"coverage.html":{}}}],["8/40",{"_index":5177,"title":{},"body":{"coverage.html":{}}}],["8004583",{"_index":5139,"title":{},"body":{"changelog.html":{}}}],["82",{"_index":5155,"title":{},"body":{"coverage.html":{}}}],["8248e61",{"_index":4643,"title":{},"body":{"changelog.html":{}}}],["8361a0e",{"_index":4845,"title":{},"body":{"changelog.html":{}}}],["8380850",{"_index":4790,"title":{},"body":{"changelog.html":{}}}],["83d31d",{"_index":4761,"title":{},"body":{"changelog.html":{}}}],["85",{"_index":5208,"title":{},"body":{"coverage.html":{}}}],["85eab15",{"_index":5069,"title":{},"body":{"changelog.html":{}}}],["867f969",{"_index":4857,"title":{},"body":{"changelog.html":{}}}],["88bc3f3",{"_index":4712,"title":{},"body":{"changelog.html":{}}}],["8a22405",{"_index":5126,"title":{},"body":{"changelog.html":{}}}],["8a9392e",{"_index":4575,"title":{},"body":{"changelog.html":{}}}],["8aa41ec",{"_index":4720,"title":{},"body":{"changelog.html":{}}}],["8d79d30",{"_index":5040,"title":{},"body":{"changelog.html":{}}}],["8e823c5",{"_index":4916,"title":{},"body":{"changelog.html":{}}}],["8f24e2e",{"_index":4919,"title":{},"body":{"changelog.html":{}}}],["8f6886f",{"_index":4856,"title":{},"body":{"changelog.html":{}}}],["8fc79af",{"_index":4685,"title":{},"body":{"changelog.html":{}}}],["9",{"_index":2767,"title":{},"body":{"interfaces/FileUploaderMsg.html":{},"components/GeocoderInputComponent.html":{},"components/PhnComponent.html":{},"components/PhoneNumberComponent.html":{},"components/SinComponent.html":{},"directives/ValidateCityDirective.html":{},"directives/ValidatePostalcodeDirective.html":{},"directives/ValidateStreetDirective.html":{},"changelog.html":{},"coverage.html":{},"overview.html":{}}}],["9.0.0",{"_index":5288,"title":{},"body":{"dependencies.html":{}}}],["9/10",{"_index":5211,"title":{},"body":{"coverage.html":{}}}],["9/23",{"_index":5229,"title":{},"body":{"coverage.html":{}}}],["9/49",{"_index":5169,"title":{},"body":{"coverage.html":{}}}],["90",{"_index":5210,"title":{},"body":{"coverage.html":{}}}],["901885e",{"_index":4780,"title":{},"body":{"changelog.html":{}}}],["96a58b1",{"_index":4973,"title":{},"body":{"changelog.html":{}}}],["978250b",{"_index":4831,"title":{},"body":{"changelog.html":{}}}],["9855d9c",{"_index":4800,"title":{},"body":{"changelog.html":{}}}],["996cad7",{"_index":4785,"title":{},"body":{"changelog.html":{}}}],["9])[a",{"_index":4455,"title":{},"body":{"directives/ValidatePostalcodeDirective.html":{},"directives/ValidateStreetDirective.html":{}}}],["9][a",{"_index":4452,"title":{},"body":{"directives/ValidatePostalcodeDirective.html":{}}}],["9]{1}\\\\d{2",{"_index":4084,"title":{},"body":{"components/PhoneNumberComponent.html":{}}}],["9a38474",{"_index":4752,"title":{},"body":{"changelog.html":{}}}],["9dc5375",{"_index":4765,"title":{},"body":{"changelog.html":{}}}],["9f5a04e",{"_index":5030,"title":{},"body":{"changelog.html":{}}}],["_",{"_index":182,"title":{},"body":{"classes/AbstractFormControl.html":{},"interfaces/AddrLabelList.html":{},"components/ButtonGroupComponent.html":{},"components/CheckboxComponent.html":{},"interfaces/CountryList.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"components/DropdownComponent.html":{},"components/FullNameComponent.html":{},"interfaces/FullNameErrorMsg.html":{},"components/GeocoderInputComponent.html":{},"interfaces/ISpaEnvResponse.html":{},"interfaces/Maxlengths.html":{},"components/NameComponent.html":{},"components/PostalCodeComponent.html":{},"interfaces/ReadOnlyFields.html":{}}}],["_applicationheadermap",{"_index":3599,"title":{},"body":{"interfaces/ISpaEnvResponse.html":{}}}],["_bypassguards",{"_index":1205,"title":{},"body":{"injectables/CheckCompleteBaseService.html":{},"injectables/DefaultPageGuardService.html":{},"interfaces/PageListInterface.html":{}}}],["_continue",{"_index":3667,"title":{},"body":{"guards/LoadPageGuardService.html":{},"guards/RouteGuardService.html":{}}}],["_continue(pageurl",{"_index":3669,"title":{},"body":{"guards/LoadPageGuardService.html":{},"guards/RouteGuardService.html":{}}}],["_defaulterrmsg",{"_index":117,"title":{},"body":{"classes/AbstractFormControl.html":{},"components/CityComponent.html":{},"components/EmailComponent.html":{},"interfaces/IRadioItems.html":{},"components/PhnComponent.html":{},"components/PhoneNumberComponent.html":{},"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{},"components/RadioComponent.html":{},"components/SinComponent.html":{}}}],["_defaulterrmsg.duplicate",{"_index":4052,"title":{},"body":{"components/PhnComponent.html":{},"components/SinComponent.html":{}}}],["_defaulterrmsg.incompletevalue",{"_index":4113,"title":{},"body":{"components/PhoneNumberComponent.html":{}}}],["_defaulterrmsg.invalid",{"_index":4051,"title":{},"body":{"components/PhnComponent.html":{},"components/SinComponent.html":{}}}],["_defaulterrmsg.invalidchar",{"_index":1453,"title":{},"body":{"components/CityComponent.html":{},"components/ProvinceComponent.html":{}}}],["_defaulterrmsg.invalidemail",{"_index":2593,"title":{},"body":{"components/EmailComponent.html":{}}}],["_defaulterrmsg.required",{"_index":1452,"title":{},"body":{"components/CityComponent.html":{},"components/EmailComponent.html":{},"components/PhnComponent.html":{},"components/PhoneNumberComponent.html":{},"components/ProvinceComponent.html":{},"components/RadioComponent.html":{},"components/SinComponent.html":{}}}],["_find",{"_index":3770,"title":{},"body":{"interfaces/PageList.html":{},"injectables/PageStateService.html":{}}}],["_find(path",{"_index":3796,"title":{},"body":{"injectables/PageStateService.html":{}}}],["_headers",{"_index":228,"title":{},"body":{"classes/AbstractHttpService.html":{},"interfaces/CommonLogMessage.html":{},"interfaces/GeoAddressResult.html":{},"injectables/GeocoderService.html":{},"interfaces/ISpaEnvResponse.html":{},"additional-documentation/getting-started.html":{}}}],["_label",{"_index":196,"title":{},"body":{"classes/AbstractFormControl.html":{}}}],["_log(message",{"_index":1600,"title":{},"body":{"interfaces/CommonLogMessage.html":{}}}],["_logerror(errormessage",{"_index":1603,"title":{},"body":{"interfaces/CommonLogMessage.html":{}}}],["_name",{"_index":3972,"title":{},"body":{"classes/Person.html":{}}}],["_name.concat",{"_index":3973,"title":{},"body":{"classes/Person.html":{}}}],["_not_",{"_index":587,"title":{},"body":{"classes/AbstractTestPage.html":{}}}],["_onchange",{"_index":118,"title":{},"body":{"classes/AbstractFormControl.html":{},"interfaces/AddrLabelList.html":{},"components/ButtonGroupComponent.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"interfaces/CountryList.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"components/DropdownComponent.html":{},"components/EmailComponent.html":{},"components/FullNameComponent.html":{},"interfaces/FullNameErrorMsg.html":{},"components/GeocoderInputComponent.html":{},"interfaces/ISpaEnvResponse.html":{},"interfaces/Maxlengths.html":{},"components/NameComponent.html":{},"components/PhnComponent.html":{},"components/PhoneNumberComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"components/RadioComponent.html":{},"interfaces/ReadOnlyFields.html":{},"components/SinComponent.html":{},"changelog.html":{}}}],["_only_",{"_index":4502,"title":{},"body":{"components/WizardProgressBarComponent.html":{}}}],["_ontouched",{"_index":119,"title":{},"body":{"classes/AbstractFormControl.html":{},"interfaces/AddrLabelList.html":{},"components/ButtonGroupComponent.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"interfaces/CountryList.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"components/DropdownComponent.html":{},"components/EmailComponent.html":{},"components/FullNameComponent.html":{},"interfaces/FullNameErrorMsg.html":{},"components/GeocoderInputComponent.html":{},"interfaces/ISpaEnvResponse.html":{},"interfaces/Maxlengths.html":{},"components/NameComponent.html":{},"components/PhnComponent.html":{},"components/PhoneNumberComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"components/RadioComponent.html":{},"interfaces/ReadOnlyFields.html":{},"components/SinComponent.html":{}}}],["_sendlog(message",{"_index":1624,"title":{},"body":{"interfaces/CommonLogMessage.html":{}}}],["_starturl",{"_index":1206,"title":{},"body":{"injectables/CheckCompleteBaseService.html":{},"interfaces/PageListInterface.html":{}}}],["_value",{"_index":3500,"title":{},"body":{"interfaces/IRadioItems.html":{},"components/RadioComponent.html":{}}}],["a11y",{"_index":4636,"title":{},"body":{"changelog.html":{}}}],["a1a",{"_index":4144,"title":{},"body":{"components/PostalCodeComponent.html":{}}}],["a1b8211",{"_index":4622,"title":{},"body":{"changelog.html":{}}}],["a1bd381",{"_index":4648,"title":{},"body":{"changelog.html":{}}}],["a27faa9",{"_index":4884,"title":{},"body":{"changelog.html":{}}}],["a512eb0",{"_index":4894,"title":{},"body":{"changelog.html":{}}}],["a702d6d",{"_index":4958,"title":{},"body":{"changelog.html":{}}}],["a73785f",{"_index":4610,"title":{},"body":{"changelog.html":{}}}],["a7efeee",{"_index":4651,"title":{},"body":{"changelog.html":{}}}],["a9aaf59",{"_index":4900,"title":{},"body":{"changelog.html":{}}}],["a9cafca",{"_index":5063,"title":{},"body":{"changelog.html":{}}}],["aa",{"_index":4882,"title":{},"body":{"changelog.html":{}}}],["aa2b7f9",{"_index":4725,"title":{},"body":{"changelog.html":{}}}],["aad93b5",{"_index":4852,"title":{},"body":{"changelog.html":{}}}],["ab",{"_index":1413,"title":{},"body":{"components/CityComponent.html":{},"interfaces/CountryList.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"interfaces/FileUploaderMsg.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{}}}],["ability",{"_index":4745,"title":{},"body":{"changelog.html":{}}}],["abiltiy",{"_index":4815,"title":{},"body":{"changelog.html":{}}}],["abilty",{"_index":4727,"title":{},"body":{"changelog.html":{}}}],["abort",{"_index":2779,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["above",{"_index":3732,"title":{},"body":{"components/PageFrameworkComponent.html":{},"additional-documentation/getting-started.html":{},"additional-documentation/local-development/schematics.html":{},"additional-documentation/local-development/components.html":{}}}],["absolute",{"_index":5138,"title":{},"body":{"changelog.html":{}}}],["abstact",{"_index":4094,"title":{},"body":{"components/PhoneNumberComponent.html":{}}}],["abstract",{"_index":14,"title":{},"body":{"classes/AbstractBaseForm.html":{},"classes/AbstractForm.html":{},"classes/AbstractFormControl.html":{},"classes/AbstractHttpService.html":{},"injectables/AbstractPageGuardService.html":{},"injectables/AbstractPgCheckService.html":{},"classes/AbstractReactForm.html":{},"classes/AbstractTestPage.html":{},"injectables/CheckCompleteBaseService.html":{},"components/CityComponent.html":{},"interfaces/CommonLogMessage.html":{},"injectables/DefaultPageGuardService.html":{},"components/EmailComponent.html":{},"interfaces/GeoAddressResult.html":{},"injectables/GeocoderService.html":{},"guards/LoadPageGuardService.html":{},"interfaces/PageListInterface.html":{},"components/PhnComponent.html":{},"components/PhoneNumberComponent.html":{},"components/ProvinceComponent.html":{},"components/RadioComponent.html":{},"guards/RouteGuardService.html":{},"components/SinComponent.html":{},"changelog.html":{},"additional-documentation/getting-started.html":{}}}],["abstractapi",{"_index":4672,"title":{},"body":{"changelog.html":{}}}],["abstractbaseform",{"_index":1,"title":{"classes/AbstractBaseForm.html":{}},"body":{"classes/AbstractBaseForm.html":{},"classes/AbstractForm.html":{},"classes/AbstractReactForm.html":{},"coverage.html":{}}}],["abstractbaseform:10",{"_index":96,"title":{},"body":{"classes/AbstractForm.html":{},"classes/AbstractReactForm.html":{}}}],["abstractbaseform:12",{"_index":103,"title":{},"body":{"classes/AbstractForm.html":{},"classes/AbstractReactForm.html":{}}}],["abstractbaseform:14",{"_index":102,"title":{},"body":{"classes/AbstractForm.html":{},"classes/AbstractReactForm.html":{}}}],["abstractbaseform:24",{"_index":104,"title":{},"body":{"classes/AbstractForm.html":{},"classes/AbstractReactForm.html":{}}}],["abstractbaseform:8",{"_index":95,"title":{},"body":{"classes/AbstractForm.html":{},"classes/AbstractReactForm.html":{}}}],["abstractcontrol",{"_index":2544,"title":{},"body":{"directives/DuplicateCheckDirective.html":{},"directives/ValidateBcPostalDirective.html":{},"directives/ValidateCityDirective.html":{},"directives/ValidateNameDirective.html":{},"directives/ValidatePostalcodeDirective.html":{},"directives/ValidateRegionDirective.html":{},"directives/ValidateStreetDirective.html":{}}}],["abstractform",{"_index":86,"title":{"classes/AbstractForm.html":{}},"body":{"classes/AbstractForm.html":{},"coverage.html":{}}}],["abstractformcontrol",{"_index":112,"title":{"classes/AbstractFormControl.html":{}},"body":{"classes/AbstractFormControl.html":{},"components/CityComponent.html":{},"components/EmailComponent.html":{},"interfaces/IRadioItems.html":{},"components/PhnComponent.html":{},"components/PhoneNumberComponent.html":{},"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{},"components/RadioComponent.html":{},"components/SinComponent.html":{},"coverage.html":{}}}],["abstractformcontrol:10",{"_index":1369,"title":{},"body":{"components/CityComponent.html":{},"components/EmailComponent.html":{},"components/PhnComponent.html":{},"components/PhoneNumberComponent.html":{},"components/ProvinceComponent.html":{},"components/RadioComponent.html":{},"components/SinComponent.html":{}}}],["abstractformcontrol:13",{"_index":1340,"title":{},"body":{"components/CityComponent.html":{},"components/EmailComponent.html":{},"components/PhnComponent.html":{},"components/PhoneNumberComponent.html":{},"components/ProvinceComponent.html":{},"components/RadioComponent.html":{},"components/SinComponent.html":{}}}],["abstractformcontrol:15",{"_index":1338,"title":{},"body":{"components/CityComponent.html":{},"components/EmailComponent.html":{},"components/PhnComponent.html":{},"components/PhoneNumberComponent.html":{},"components/ProvinceComponent.html":{},"components/RadioComponent.html":{},"components/SinComponent.html":{}}}],["abstractformcontrol:18",{"_index":1339,"title":{},"body":{"components/CityComponent.html":{},"components/EmailComponent.html":{},"components/PhnComponent.html":{},"components/PhoneNumberComponent.html":{},"components/ProvinceComponent.html":{},"components/RadioComponent.html":{},"components/SinComponent.html":{}}}],["abstractformcontrol:22",{"_index":1370,"title":{},"body":{"components/CityComponent.html":{},"components/EmailComponent.html":{},"components/PhnComponent.html":{},"components/PhoneNumberComponent.html":{},"components/ProvinceComponent.html":{},"components/RadioComponent.html":{},"components/SinComponent.html":{}}}],["abstractformcontrol:23",{"_index":1371,"title":{},"body":{"components/CityComponent.html":{},"components/EmailComponent.html":{},"components/PhnComponent.html":{},"components/PhoneNumberComponent.html":{},"components/ProvinceComponent.html":{},"components/RadioComponent.html":{},"components/SinComponent.html":{}}}],["abstractformcontrol:26",{"_index":1349,"title":{},"body":{"components/CityComponent.html":{},"components/EmailComponent.html":{},"components/PhnComponent.html":{},"components/PhoneNumberComponent.html":{},"components/ProvinceComponent.html":{},"components/RadioComponent.html":{},"components/SinComponent.html":{}}}],["abstractformcontrol:31",{"_index":1355,"title":{},"body":{"components/CityComponent.html":{},"components/EmailComponent.html":{},"components/PhnComponent.html":{},"components/PhoneNumberComponent.html":{},"components/ProvinceComponent.html":{},"components/RadioComponent.html":{},"components/SinComponent.html":{}}}],["abstractformcontrol:34",{"_index":1350,"title":{},"body":{"components/CityComponent.html":{},"components/EmailComponent.html":{},"components/PhnComponent.html":{},"components/PhoneNumberComponent.html":{},"components/ProvinceComponent.html":{},"components/RadioComponent.html":{},"components/SinComponent.html":{}}}],["abstractformcontrol:39",{"_index":1351,"title":{},"body":{"components/CityComponent.html":{},"components/EmailComponent.html":{},"components/PhnComponent.html":{},"components/PhoneNumberComponent.html":{},"components/ProvinceComponent.html":{},"components/RadioComponent.html":{},"components/SinComponent.html":{}}}],["abstractformcontrol:44",{"_index":1353,"title":{},"body":{"components/CityComponent.html":{},"components/EmailComponent.html":{},"components/PhnComponent.html":{},"components/PhoneNumberComponent.html":{},"components/ProvinceComponent.html":{},"components/RadioComponent.html":{},"components/SinComponent.html":{}}}],["abstractformcontrol:48",{"_index":1354,"title":{},"body":{"components/CityComponent.html":{},"components/EmailComponent.html":{},"components/PhnComponent.html":{},"components/PhoneNumberComponent.html":{},"components/ProvinceComponent.html":{},"components/RadioComponent.html":{},"components/SinComponent.html":{}}}],["abstractformcontrol:65",{"_index":1352,"title":{},"body":{"components/CityComponent.html":{},"components/EmailComponent.html":{},"components/PhnComponent.html":{},"components/PhoneNumberComponent.html":{},"components/ProvinceComponent.html":{},"components/RadioComponent.html":{},"components/SinComponent.html":{}}}],["abstractguardservice",{"_index":349,"title":{},"body":{"injectables/AbstractPageGuardService.html":{}}}],["abstracthttpservice",{"_index":222,"title":{"classes/AbstractHttpService.html":{}},"body":{"classes/AbstractHttpService.html":{},"interfaces/CommonLogMessage.html":{},"interfaces/GeoAddressResult.html":{},"injectables/GeocoderService.html":{},"interfaces/ISpaEnvResponse.html":{},"changelog.html":{},"coverage.html":{},"additional-documentation/getting-started.html":{}}}],["abstracthttpservice:13",{"_index":3429,"title":{},"body":{"injectables/GeocoderService.html":{}}}],["abstracthttpservice:18",{"_index":3428,"title":{},"body":{"injectables/GeocoderService.html":{}}}],["abstracthttpservice:24",{"_index":3421,"title":{},"body":{"injectables/GeocoderService.html":{}}}],["abstracthttpservice:32",{"_index":3423,"title":{},"body":{"injectables/GeocoderService.html":{}}}],["abstracthttpservice:40",{"_index":3424,"title":{},"body":{"injectables/GeocoderService.html":{}}}],["abstracthttpservice:61",{"_index":3422,"title":{},"body":{"injectables/GeocoderService.html":{}}}],["abstracthttpservice:64",{"_index":3420,"title":{},"body":{"injectables/GeocoderService.html":{}}}],["abstracthttpservice:75",{"_index":3425,"title":{},"body":{"injectables/GeocoderService.html":{}}}],["abstractpageguardservice",{"_index":340,"title":{"injectables/AbstractPageGuardService.html":{}},"body":{"injectables/AbstractPageGuardService.html":{},"injectables/DefaultPageGuardService.html":{},"guards/LoadPageGuardService.html":{},"coverage.html":{}}}],["abstractpgcheckservice",{"_index":367,"title":{"injectables/AbstractPgCheckService.html":{}},"body":{"injectables/AbstractPgCheckService.html":{},"injectables/CheckCompleteBaseService.html":{},"interfaces/PageListInterface.html":{},"guards/RouteGuardService.html":{},"coverage.html":{}}}],["abstractpgservice",{"_index":4235,"title":{},"body":{"guards/RouteGuardService.html":{}}}],["abstractreactform",{"_index":382,"title":{"classes/AbstractReactForm.html":{}},"body":{"classes/AbstractReactForm.html":{},"coverage.html":{}}}],["abstracttestpage",{"_index":402,"title":{"classes/AbstractTestPage.html":{}},"body":{"classes/AbstractTestPage.html":{},"changelog.html":{},"coverage.html":{}}}],["abw",{"_index":1770,"title":{},"body":{"interfaces/CountryList.html":{}}}],["ac7406b",{"_index":4989,"title":{},"body":{"changelog.html":{}}}],["ac9d61c",{"_index":4848,"title":{},"body":{"changelog.html":{}}}],["acbbdc1",{"_index":4986,"title":{},"body":{"changelog.html":{}}}],["acc",{"_index":3043,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["accept",{"_index":2744,"title":{},"body":{"interfaces/FileUploaderMsg.html":{},"interfaces/ISpaEnvResponse.html":{}}}],["access",{"_index":91,"title":{},"body":{"classes/AbstractForm.html":{},"classes/AbstractReactForm.html":{},"classes/Address.html":{},"interfaces/FileUploaderMsg.html":{},"additional-documentation/getting-started.html":{}}}],["accessed",{"_index":907,"title":{},"body":{"interfaces/AddrLabelList.html":{},"interfaces/Maxlengths.html":{},"interfaces/ReadOnlyFields.html":{}}}],["accessibility",{"_index":4549,"title":{},"body":{"components/XiconButtonComponent.html":{},"changelog.html":{}}}],["accessible",{"_index":2366,"title":{},"body":{"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"components/HeaderComponent.html":{}}}],["accessors",{"_index":235,"title":{},"body":{"classes/AbstractHttpService.html":{},"classes/Address.html":{},"injectables/CheckCompleteBaseService.html":{},"components/CityComponent.html":{},"components/ConfirmTemplateComponent.html":{},"injectables/DefaultPageGuardService.html":{},"components/EmailComponent.html":{},"components/NameComponent.html":{},"classes/Person.html":{},"components/PhnComponent.html":{},"components/PhoneNumberComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"components/RadioComponent.html":{},"components/SinComponent.html":{}}}],["accidentally",{"_index":4878,"title":{},"body":{"changelog.html":{}}}],["accordion",{"_index":635,"title":{},"body":{"components/AccordionCommonComponent.html":{}}}],["accordion'},{'name",{"_index":656,"title":{},"body":{"components/AccordionCommonComponent.html":{},"components/ButtonComponent.html":{},"components/ButtonGroupComponent.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"components/ConfirmTemplateComponent.html":{},"components/CoreBreadcrumbComponent.html":{},"components/DatepickerComponent.html":{},"components/DropdownComponent.html":{},"components/EmailComponent.html":{},"components/ErrorContainerComponent.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/FullNameComponent.html":{},"components/GeocoderInputComponent.html":{},"components/HeaderComponent.html":{},"components/NameComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"components/PhnComponent.html":{},"components/PhoneNumberComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"components/RadioComponent.html":{},"components/SampleModalComponent.html":{},"components/SinComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{},"components/XiconButtonComponent.html":{}}}],["accordion.component.html",{"_index":639,"title":{},"body":{"components/AccordionCommonComponent.html":{}}}],["accordion.component.scss",{"_index":637,"title":{},"body":{"components/AccordionCommonComponent.html":{}}}],["accordioncommoncomponent",{"_index":627,"title":{"components/AccordionCommonComponent.html":{}},"body":{"components/AccordionCommonComponent.html":{},"components/ButtonComponent.html":{},"components/ButtonGroupComponent.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"components/ConfirmTemplateComponent.html":{},"components/CoreBreadcrumbComponent.html":{},"components/DatepickerComponent.html":{},"components/DropdownComponent.html":{},"components/EmailComponent.html":{},"components/ErrorContainerComponent.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/FullNameComponent.html":{},"components/GeocoderInputComponent.html":{},"components/HeaderComponent.html":{},"components/NameComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"components/PhnComponent.html":{},"components/PhoneNumberComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"components/RadioComponent.html":{},"components/SampleModalComponent.html":{},"modules/SharedCoreModule.html":{},"components/SinComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{},"components/XiconButtonComponent.html":{},"coverage.html":{},"overview.html":{}}}],["accordioncomponent",{"_index":632,"title":{},"body":{"components/AccordionCommonComponent.html":{}}}],["accordionmodule",{"_index":4307,"title":{},"body":{"modules/SharedCoreModule.html":{}}}],["accordionmodule.forroot",{"_index":4347,"title":{},"body":{"modules/SharedCoreModule.html":{}}}],["accusamus",{"_index":1414,"title":{},"body":{"components/CityComponent.html":{},"interfaces/CountryList.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"interfaces/FileUploaderMsg.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{}}}],["aceb028",{"_index":4775,"title":{},"body":{"changelog.html":{}}}],["acl",{"_index":3647,"title":{},"body":{"interfaces/ISpaEnvResponse.html":{}}}],["act",{"_index":3558,"title":{},"body":{"interfaces/ISpaEnvResponse.html":{}}}],["action",{"_index":45,"title":{},"body":{"classes/AbstractBaseForm.html":{},"classes/AbstractForm.html":{},"classes/AbstractReactForm.html":{},"components/AccordionCommonComponent.html":{},"components/ButtonComponent.html":{},"components/ButtonGroupComponent.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"components/ConfirmTemplateComponent.html":{},"components/CoreBreadcrumbComponent.html":{},"components/DatepickerComponent.html":{},"components/DropdownComponent.html":{},"components/EmailComponent.html":{},"components/ErrorContainerComponent.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/FullNameComponent.html":{},"components/GeocoderInputComponent.html":{},"components/HeaderComponent.html":{},"components/NameComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"components/PhnComponent.html":{},"components/PhoneNumberComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"components/RadioComponent.html":{},"components/SampleModalComponent.html":{},"modules/SharedCoreModule.html":{},"components/SinComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{},"components/XiconButtonComponent.html":{},"coverage.html":{}}}],["activatedroutesnapshot",{"_index":3673,"title":{},"body":{"guards/LoadPageGuardService.html":{},"guards/RouteGuardService.html":{}}}],["activeindex",{"_index":4472,"title":{},"body":{"components/WizardProgressBarComponent.html":{}}}],["actual",{"_index":2417,"title":{},"body":{"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"components/PhoneNumberComponent.html":{},"additional-documentation/getting-started.html":{}}}],["actual_component",{"_index":751,"title":{},"body":{"components/AccordionCommonComponent.html":{},"components/ButtonComponent.html":{},"components/ButtonGroupComponent.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"components/ConfirmTemplateComponent.html":{},"components/CoreBreadcrumbComponent.html":{},"components/DatepickerComponent.html":{},"components/DropdownComponent.html":{},"components/EmailComponent.html":{},"components/ErrorContainerComponent.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/FullNameComponent.html":{},"components/GeocoderInputComponent.html":{},"components/HeaderComponent.html":{},"components/NameComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"components/PhnComponent.html":{},"components/PhoneNumberComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"components/RadioComponent.html":{},"components/SampleModalComponent.html":{},"components/SinComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{},"components/XiconButtonComponent.html":{}}}],["adam",{"_index":5329,"title":{},"body":{"index.html":{}}}],["add",{"_index":321,"title":{},"body":{"classes/AbstractHttpService.html":{},"interfaces/AddrLabelList.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"components/DropdownComponent.html":{},"interfaces/FileUploaderMsg.html":{},"components/FormSubmitBarComponent.html":{},"components/HeaderComponent.html":{},"interfaces/ISpaEnvResponse.html":{},"guards/LoadPageGuardService.html":{},"interfaces/Maxlengths.html":{},"components/PageSectionComponent.html":{},"components/PhnComponent.html":{},"interfaces/ReadOnlyFields.html":{},"guards/RouteGuardService.html":{},"components/SinComponent.html":{},"changelog.html":{},"additional-documentation/local-development/schematics.html":{}}}],["added",{"_index":212,"title":{},"body":{"classes/AbstractFormControl.html":{},"interfaces/CommonAttachmentJson.html":{},"classes/CommonImage.html":{},"classes/CommonImageProcessingError.html":{},"interfaces/CommonImageScaleFactors.html":{},"classes/CommonImageScaleFactorsImpl.html":{},"interfaces/FileUploaderMsg.html":{},"directives/ValidateBcPostalDirective.html":{},"changelog.html":{}}}],["adding",{"_index":1730,"title":{},"body":{"components/CoreBreadcrumbComponent.html":{},"components/FormSubmitBarComponent.html":{},"changelog.html":{},"additional-documentation/getting-started.html":{},"additional-documentation/local-development/schematics.html":{}}}],["addition",{"_index":3363,"title":{},"body":{"components/GeocoderInputComponent.html":{}}}],["additional",{"_index":4847,"title":{"additional-documentation/getting-started.html":{},"additional-documentation/local-development.html":{},"additional-documentation/local-development/schematics.html":{},"additional-documentation/local-development/components.html":{}},"body":{"changelog.html":{}}}],["additionaldocumentation",{"_index":4925,"title":{},"body":{"changelog.html":{}}}],["addline(line",{"_index":886,"title":{},"body":{"interfaces/AddrLabelList.html":{},"interfaces/Maxlengths.html":{},"interfaces/ReadOnlyFields.html":{}}}],["addpackagejsonscript",{"_index":5272,"title":{},"body":{"coverage.html":{}}}],["addpackagetopackagejson",{"_index":5264,"title":{},"body":{"coverage.html":{}}}],["addr",{"_index":819,"title":{},"body":{"interfaces/AddrLabelList.html":{},"components/GeocoderInputComponent.html":{},"interfaces/Maxlengths.html":{},"interfaces/ReadOnlyFields.html":{},"additional-documentation/getting-started.html":{}}}],["addr.city",{"_index":3391,"title":{},"body":{"components/GeocoderInputComponent.html":{}}}],["addr.country",{"_index":3392,"title":{},"body":{"components/GeocoderInputComponent.html":{}}}],["addr.province",{"_index":3394,"title":{},"body":{"components/GeocoderInputComponent.html":{}}}],["addr.street",{"_index":3395,"title":{},"body":{"components/GeocoderInputComponent.html":{}}}],["address",{"_index":772,"title":{"classes/Address.html":{}},"body":{"interfaces/AddrLabelList.html":{},"classes/Address.html":{},"interfaces/GeoAddressResult.html":{},"components/GeocoderInputComponent.html":{},"injectables/GeocoderService.html":{},"interfaces/Maxlengths.html":{},"interfaces/ReadOnlyFields.html":{},"changelog.html":{},"coverage.html":{},"additional-documentation/getting-started.html":{}}}],["address'},{'name",{"_index":658,"title":{},"body":{"components/AccordionCommonComponent.html":{},"components/ButtonComponent.html":{},"components/ButtonGroupComponent.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"components/ConfirmTemplateComponent.html":{},"components/CoreBreadcrumbComponent.html":{},"components/DatepickerComponent.html":{},"components/DropdownComponent.html":{},"components/EmailComponent.html":{},"components/ErrorContainerComponent.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/FullNameComponent.html":{},"components/GeocoderInputComponent.html":{},"components/HeaderComponent.html":{},"components/NameComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"components/PhnComponent.html":{},"components/PhoneNumberComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"components/RadioComponent.html":{},"components/SampleModalComponent.html":{},"components/SinComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{},"components/XiconButtonComponent.html":{}}}],["address();the",{"_index":5401,"title":{},"body":{"additional-documentation/getting-started.html":{}}}],["address(val",{"_index":803,"title":{},"body":{"interfaces/AddrLabelList.html":{},"interfaces/Maxlengths.html":{},"interfaces/ReadOnlyFields.html":{}}}],["address.addressline2",{"_index":817,"title":{},"body":{"interfaces/AddrLabelList.html":{},"interfaces/Maxlengths.html":{},"interfaces/ReadOnlyFields.html":{}}}],["address.component.html",{"_index":788,"title":{},"body":{"interfaces/AddrLabelList.html":{},"interfaces/Maxlengths.html":{},"interfaces/ReadOnlyFields.html":{}}}],["address.component.scss",{"_index":789,"title":{},"body":{"interfaces/AddrLabelList.html":{},"interfaces/Maxlengths.html":{},"interfaces/ReadOnlyFields.html":{}}}],["address.model.ts",{"_index":5368,"title":{},"body":{"todo.html":{}}}],["address1",{"_index":758,"title":{},"body":{"interfaces/AddrLabelList.html":{},"interfaces/Maxlengths.html":{},"interfaces/ReadOnlyFields.html":{},"changelog.html":{}}}],["address2",{"_index":759,"title":{},"body":{"interfaces/AddrLabelList.html":{},"interfaces/Maxlengths.html":{},"interfaces/ReadOnlyFields.html":{}}}],["address3",{"_index":760,"title":{},"body":{"interfaces/AddrLabelList.html":{},"interfaces/Maxlengths.html":{},"interfaces/ReadOnlyFields.html":{}}}],["address_url",{"_index":3265,"title":{},"body":{"interfaces/GeoAddressResult.html":{},"injectables/GeocoderService.html":{}}}],["addresschange",{"_index":806,"title":{},"body":{"interfaces/AddrLabelList.html":{},"components/GeocoderInputComponent.html":{},"interfaces/Maxlengths.html":{},"interfaces/ReadOnlyFields.html":{}}}],["addresscomponent",{"_index":657,"title":{},"body":{"components/AccordionCommonComponent.html":{},"interfaces/AddrLabelList.html":{},"components/ButtonComponent.html":{},"components/ButtonGroupComponent.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"components/ConfirmTemplateComponent.html":{},"components/CoreBreadcrumbComponent.html":{},"components/DatepickerComponent.html":{},"components/DropdownComponent.html":{},"components/EmailComponent.html":{},"components/ErrorContainerComponent.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/FullNameComponent.html":{},"components/GeocoderInputComponent.html":{},"components/HeaderComponent.html":{},"interfaces/Maxlengths.html":{},"components/NameComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"components/PhnComponent.html":{},"components/PhoneNumberComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"components/RadioComponent.html":{},"interfaces/ReadOnlyFields.html":{},"components/SampleModalComponent.html":{},"modules/SharedCoreModule.html":{},"components/SinComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{},"components/XiconButtonComponent.html":{},"changelog.html":{},"coverage.html":{},"overview.html":{}}}],["addresses",{"_index":946,"title":{},"body":{"interfaces/AddrLabelList.html":{},"components/GeocoderInputComponent.html":{},"interfaces/Maxlengths.html":{},"interfaces/ReadOnlyFields.html":{}}}],["addressline${line",{"_index":902,"title":{},"body":{"interfaces/AddrLabelList.html":{},"interfaces/Maxlengths.html":{},"interfaces/ReadOnlyFields.html":{}}}],["addressline1",{"_index":973,"title":{},"body":{"classes/Address.html":{},"changelog.html":{}}}],["addressline2",{"_index":851,"title":{},"body":{"interfaces/AddrLabelList.html":{},"classes/Address.html":{},"interfaces/Maxlengths.html":{},"interfaces/ReadOnlyFields.html":{}}}],["addressline3",{"_index":974,"title":{},"body":{"classes/Address.html":{}}}],["addressmodel",{"_index":4891,"title":{},"body":{"changelog.html":{}}}],["addresss",{"_index":4830,"title":{},"body":{"changelog.html":{}}}],["addrlabellist",{"_index":753,"title":{"interfaces/AddrLabelList.html":{}},"body":{"interfaces/AddrLabelList.html":{},"interfaces/Maxlengths.html":{},"interfaces/ReadOnlyFields.html":{},"coverage.html":{}}}],["addrlabels",{"_index":825,"title":{},"body":{"interfaces/AddrLabelList.html":{},"interfaces/Maxlengths.html":{},"interfaces/ReadOnlyFields.html":{}}}],["addrlookup",{"_index":901,"title":{},"body":{"interfaces/AddrLabelList.html":{},"interfaces/Maxlengths.html":{},"interfaces/ReadOnlyFields.html":{}}}],["adds",{"_index":808,"title":{},"body":{"interfaces/AddrLabelList.html":{},"interfaces/Maxlengths.html":{},"components/PageSectionComponent.html":{},"interfaces/ReadOnlyFields.html":{},"components/WizardProgressBarComponent.html":{}}}],["addtag",{"_index":2516,"title":{},"body":{"components/DropdownComponent.html":{}}}],["addtagtext",{"_index":2517,"title":{},"body":{"components/DropdownComponent.html":{}}}],["adipisicing",{"_index":1381,"title":{},"body":{"components/CityComponent.html":{},"interfaces/CountryList.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"interfaces/FileUploaderMsg.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{}}}],["administer",{"_index":3562,"title":{},"body":{"interfaces/ISpaEnvResponse.html":{}}}],["advantages",{"_index":1062,"title":{},"body":{"components/ButtonComponent.html":{}}}],["ae493e7",{"_index":4921,"title":{},"body":{"changelog.html":{}}}],["aee4761",{"_index":5127,"title":{},"body":{"changelog.html":{}}}],["af516d0",{"_index":4937,"title":{},"body":{"changelog.html":{}}}],["af91989",{"_index":4849,"title":{},"body":{"changelog.html":{}}}],["afg",{"_index":1744,"title":{},"body":{"interfaces/CountryList.html":{}}}],["afghanistan",{"_index":1745,"title":{},"body":{"interfaces/CountryList.html":{}}}],["africa",{"_index":2199,"title":{},"body":{"interfaces/CountryList.html":{}}}],["african",{"_index":1841,"title":{},"body":{"interfaces/CountryList.html":{}}}],["aftercontentinit",{"_index":2614,"title":{},"body":{"interfaces/FileUploaderMsg.html":{},"interfaces/ISpaEnvResponse.html":{}}}],["afterviewinit",{"_index":2618,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["again",{"_index":2804,"title":{},"body":{"interfaces/FileUploaderMsg.html":{},"additional-documentation/local-development/schematics.html":{}}}],["against",{"_index":4037,"title":{},"body":{"components/PhnComponent.html":{}}}],["age",{"_index":3942,"title":{},"body":{"classes/Person.html":{}}}],["ago",{"_index":1757,"title":{},"body":{"interfaces/CountryList.html":{}}}],["agreecheck",{"_index":3605,"title":{},"body":{"interfaces/ISpaEnvResponse.html":{}}}],["agreeconsentmodal",{"_index":421,"title":{},"body":{"classes/AbstractTestPage.html":{}}}],["agreed",{"_index":5341,"title":{},"body":{"license.html":{}}}],["agreelabel",{"_index":3582,"title":{},"body":{"interfaces/ISpaEnvResponse.html":{}}}],["agrees",{"_index":461,"title":{},"body":{"classes/AbstractTestPage.html":{}}}],["aia",{"_index":1759,"title":{},"body":{"interfaces/CountryList.html":{}}}],["aka",{"_index":3524,"title":{},"body":{"interfaces/ISpaEnvResponse.html":{}}}],["ala",{"_index":1746,"title":{},"body":{"interfaces/CountryList.html":{}}}],["alb",{"_index":1749,"title":{},"body":{"interfaces/CountryList.html":{}}}],["albania",{"_index":1750,"title":{},"body":{"interfaces/CountryList.html":{}}}],["alberta",{"_index":4184,"title":{},"body":{"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{}}}],["algeria",{"_index":1752,"title":{},"body":{"interfaces/CountryList.html":{}}}],["algorithm",{"_index":2807,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["alias",{"_index":1439,"title":{},"body":{"components/CityComponent.html":{},"interfaces/CountryList.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"interfaces/FileUploaderMsg.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{}}}],["allow",{"_index":178,"title":{},"body":{"classes/AbstractFormControl.html":{},"interfaces/CommonLogMessage.html":{},"guards/LoadPageGuardService.html":{},"guards/RouteGuardService.html":{},"changelog.html":{}}}],["allowed",{"_index":3018,"title":{},"body":{"interfaces/FileUploaderMsg.html":{},"changelog.html":{}}}],["allowextralines",{"_index":818,"title":{},"body":{"interfaces/AddrLabelList.html":{},"interfaces/Maxlengths.html":{},"interfaces/ReadOnlyFields.html":{},"changelog.html":{}}}],["allowing",{"_index":1233,"title":{},"body":{"injectables/CheckCompleteBaseService.html":{},"interfaces/PageListInterface.html":{}}}],["allowinternational",{"_index":4061,"title":{},"body":{"components/PhoneNumberComponent.html":{},"changelog.html":{}}}],["allvalidators",{"_index":216,"title":{},"body":{"classes/AbstractFormControl.html":{},"components/PhoneNumberComponent.html":{}}}],["allvalidators.push",{"_index":219,"title":{},"body":{"classes/AbstractFormControl.html":{}}}],["allvalidators.push(this.controldir.control.validator",{"_index":4104,"title":{},"body":{"components/PhoneNumberComponent.html":{}}}],["alone",{"_index":3581,"title":{},"body":{"interfaces/ISpaEnvResponse.html":{}}}],["along",{"_index":244,"title":{},"body":{"classes/AbstractHttpService.html":{},"injectables/GeocoderService.html":{}}}],["already",{"_index":1495,"title":{},"body":{"interfaces/CommonAttachmentJson.html":{},"classes/CommonImage.html":{},"classes/CommonImageProcessingError.html":{},"interfaces/CommonImageScaleFactors.html":{},"classes/CommonImageScaleFactorsImpl.html":{},"interfaces/CommonLogMessage.html":{},"interfaces/FileUploaderMsg.html":{},"components/PhnComponent.html":{},"components/SinComponent.html":{},"components/WizardProgressBarComponent.html":{},"additional-documentation/getting-started.html":{}}}],["alreadyexists",{"_index":1468,"title":{},"body":{"interfaces/CommonAttachmentJson.html":{},"classes/CommonImage.html":{},"classes/CommonImageProcessingError.html":{},"interfaces/CommonImageScaleFactors.html":{},"classes/CommonImageScaleFactorsImpl.html":{},"miscellaneous/enumerations.html":{}}}],["always",{"_index":307,"title":{},"body":{"classes/AbstractHttpService.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"interfaces/FileUploaderMsg.html":{},"interfaces/GeoAddressResult.html":{},"injectables/GeocoderService.html":{},"changelog.html":{}}}],["american",{"_index":1754,"title":{},"body":{"interfaces/CountryList.html":{}}}],["amet",{"_index":1379,"title":{},"body":{"components/CityComponent.html":{},"interfaces/CountryList.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"interfaces/FileUploaderMsg.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{}}}],["amultiples",{"_index":2987,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["amultiples[nmultiple",{"_index":2999,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["and/or",{"_index":4143,"title":{},"body":{"components/PostalCodeComponent.html":{}}}],["andorra",{"_index":1756,"title":{},"body":{"interfaces/CountryList.html":{}}}],["angola",{"_index":1758,"title":{},"body":{"interfaces/CountryList.html":{}}}],["anguilla",{"_index":1760,"title":{},"body":{"interfaces/CountryList.html":{}}}],["angular",{"_index":100,"title":{},"body":{"classes/AbstractForm.html":{},"classes/AbstractHttpService.html":{},"classes/AbstractReactForm.html":{},"components/FormActionBarComponent.html":{},"components/WizardProgressBarComponent.html":{},"todo.html":{},"additional-documentation/getting-started.html":{},"additional-documentation/local-development/schematics.html":{},"additional-documentation/local-development/components.html":{}}}],["angular's",{"_index":1654,"title":{},"body":{"interfaces/CommonLogMessage.html":{},"components/WizardProgressBarComponent.html":{}}}],["angular.json",{"_index":5470,"title":{},"body":{"additional-documentation/local-development/schematics.html":{},"additional-documentation/local-development/components.html":{}}}],["angular/animations",{"_index":5281,"title":{},"body":{"dependencies.html":{}}}],["angular/common",{"_index":1198,"title":{},"body":{"modules/CaptchaModule.html":{},"modules/SharedCoreModule.html":{},"dependencies.html":{}}}],["angular/common/http",{"_index":298,"title":{},"body":{"classes/AbstractHttpService.html":{},"injectables/CaptchaDataService.html":{},"modules/CaptchaModule.html":{},"interfaces/CommonLogMessage.html":{},"interfaces/GeoAddressResult.html":{},"injectables/GeocoderService.html":{},"interfaces/ISpaEnvResponse.html":{},"injectables/ServerPayload.html":{}}}],["angular/compiler",{"_index":5283,"title":{},"body":{"dependencies.html":{}}}],["angular/core",{"_index":73,"title":{},"body":{"classes/AbstractBaseForm.html":{},"classes/AbstractForm.html":{},"classes/AbstractFormControl.html":{},"injectables/AbstractPageGuardService.html":{},"injectables/AbstractPgCheckService.html":{},"components/AccordionCommonComponent.html":{},"interfaces/AddrLabelList.html":{},"components/ButtonComponent.html":{},"components/ButtonGroupComponent.html":{},"injectables/CaptchaDataService.html":{},"modules/CaptchaModule.html":{},"injectables/CheckCompleteBaseService.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"interfaces/CommonLogMessage.html":{},"components/ConfirmTemplateComponent.html":{},"components/CoreBreadcrumbComponent.html":{},"interfaces/CountryList.html":{},"interfaces/DateErrorMsg.html":{},"directives/DateFieldFormatDirective.html":{},"components/DatepickerComponent.html":{},"injectables/DefaultPageGuardService.html":{},"components/DropdownComponent.html":{},"directives/DuplicateCheckDirective.html":{},"components/EmailComponent.html":{},"components/ErrorContainerComponent.html":{},"interfaces/FileUploaderMsg.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/FullNameComponent.html":{},"interfaces/FullNameErrorMsg.html":{},"interfaces/GeoAddressResult.html":{},"components/GeocoderInputComponent.html":{},"injectables/GeocoderService.html":{},"components/HeaderComponent.html":{},"interfaces/IRadioItems.html":{},"interfaces/ISpaEnvResponse.html":{},"guards/LoadPageGuardService.html":{},"interfaces/Maxlengths.html":{},"components/NameComponent.html":{},"components/PageFrameworkComponent.html":{},"interfaces/PageList.html":{},"interfaces/PageListInterface.html":{},"components/PageSectionComponent.html":{},"injectables/PageStateService.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"components/PhnComponent.html":{},"components/PhoneNumberComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{},"components/RadioComponent.html":{},"interfaces/ReadOnlyFields.html":{},"guards/RouteGuardService.html":{},"interfaces/SampleImageInterface.html":{},"components/SampleModalComponent.html":{},"injectables/ServerPayload.html":{},"modules/SharedCoreModule.html":{},"components/SinComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"directives/ValidateBcPostalDirective.html":{},"directives/ValidateCityDirective.html":{},"directives/ValidateNameDirective.html":{},"directives/ValidatePostalcodeDirective.html":{},"directives/ValidateRegionDirective.html":{},"directives/ValidateStreetDirective.html":{},"components/WizardProgressBarComponent.html":{},"components/XiconButtonComponent.html":{},"dependencies.html":{}}}],["angular/forms",{"_index":75,"title":{},"body":{"classes/AbstractBaseForm.html":{},"classes/AbstractForm.html":{},"classes/AbstractFormControl.html":{},"classes/AbstractReactForm.html":{},"interfaces/AddrLabelList.html":{},"components/ButtonComponent.html":{},"components/ButtonGroupComponent.html":{},"modules/CaptchaModule.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"interfaces/CountryList.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"components/DropdownComponent.html":{},"directives/DuplicateCheckDirective.html":{},"components/EmailComponent.html":{},"interfaces/FileUploaderMsg.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/FullNameComponent.html":{},"interfaces/FullNameErrorMsg.html":{},"components/GeocoderInputComponent.html":{},"interfaces/IRadioItems.html":{},"interfaces/ISpaEnvResponse.html":{},"interfaces/Maxlengths.html":{},"components/NameComponent.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"components/PhnComponent.html":{},"components/PhoneNumberComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{},"components/RadioComponent.html":{},"interfaces/ReadOnlyFields.html":{},"modules/SharedCoreModule.html":{},"components/SinComponent.html":{},"directives/ValidateBcPostalDirective.html":{},"directives/ValidateCityDirective.html":{},"directives/ValidateNameDirective.html":{},"directives/ValidatePostalcodeDirective.html":{},"directives/ValidateRegionDirective.html":{},"directives/ValidateStreetDirective.html":{},"dependencies.html":{}}}],["angular/http",{"_index":1156,"title":{},"body":{"injectables/CaptchaDataService.html":{},"interfaces/ISpaEnvResponse.html":{},"injectables/ServerPayload.html":{},"dependencies.html":{}}}],["angular/platform",{"_index":1193,"title":{},"body":{"modules/CaptchaModule.html":{},"dependencies.html":{}}}],["angular/router",{"_index":76,"title":{},"body":{"classes/AbstractBaseForm.html":{},"classes/AbstractForm.html":{},"classes/AbstractReactForm.html":{},"injectables/CheckCompleteBaseService.html":{},"classes/Container.html":{},"interfaces/FileUploaderMsg.html":{},"components/HeaderComponent.html":{},"guards/LoadPageGuardService.html":{},"interfaces/PageList.html":{},"interfaces/PageListInterface.html":{},"injectables/PageStateService.html":{},"guards/RouteGuardService.html":{},"modules/SharedCoreModule.html":{},"components/WizardProgressBarComponent.html":{},"interfaces/WizardProgressItem.html":{},"dependencies.html":{}}}],["angular2",{"_index":304,"title":{},"body":{"classes/AbstractHttpService.html":{},"classes/Base.html":{},"interfaces/CommonAttachmentJson.html":{},"classes/CommonImage.html":{},"classes/CommonImageProcessingError.html":{},"interfaces/CommonImageScaleFactors.html":{},"classes/CommonImageScaleFactorsImpl.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"modules/SharedCoreModule.html":{},"dependencies.html":{}}}],["angularjs2",{"_index":2725,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["animi",{"_index":1426,"title":{},"body":{"components/CityComponent.html":{},"interfaces/CountryList.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"interfaces/FileUploaderMsg.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{}}}],["another",{"_index":56,"title":{},"body":{"classes/AbstractBaseForm.html":{},"classes/AbstractForm.html":{},"classes/AbstractReactForm.html":{},"components/GeocoderInputComponent.html":{},"components/PhnComponent.html":{},"components/SinComponent.html":{}}}],["answer",{"_index":1151,"title":{},"body":{"injectables/CaptchaDataService.html":{},"injectables/ServerPayload.html":{}}}],["answer.label",{"_index":1134,"title":{},"body":{"components/ButtonGroupComponent.html":{}}}],["antarctica",{"_index":1762,"title":{},"body":{"interfaces/CountryList.html":{}}}],["antigua",{"_index":1764,"title":{},"body":{"interfaces/CountryList.html":{}}}],["any)).then((pdfdoc",{"_index":3096,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["any).controls[input_name",{"_index":2712,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["anything",{"_index":1459,"title":{},"body":{"interfaces/CommonAttachmentJson.html":{},"classes/CommonImage.html":{},"classes/CommonImageProcessingError.html":{},"interfaces/CommonImageScaleFactors.html":{},"classes/CommonImageScaleFactorsImpl.html":{},"interfaces/CommonLogMessage.html":{}}}],["anywhere",{"_index":5421,"title":{},"body":{"additional-documentation/local-development/schematics.html":{}}}],["apache",{"_index":5334,"title":{},"body":{"license.html":{}}}],["aperiam",{"_index":1402,"title":{},"body":{"components/CityComponent.html":{},"interfaces/CountryList.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"interfaces/FileUploaderMsg.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{}}}],["api",{"_index":224,"title":{},"body":{"classes/AbstractHttpService.html":{},"interfaces/CommonAttachmentJson.html":{},"classes/CommonImage.html":{},"classes/CommonImageProcessingError.html":{},"interfaces/CommonImageScaleFactors.html":{},"classes/CommonImageScaleFactorsImpl.html":{},"interfaces/CommonLogMessage.html":{},"interfaces/FileUploaderMsg.html":{},"interfaces/GeoAddressResult.html":{},"components/GeocoderInputComponent.html":{},"injectables/GeocoderService.html":{},"interfaces/ISpaEnvResponse.html":{},"classes/Person.html":{},"changelog.html":{},"coverage.html":{},"additional-documentation/getting-started.html":{}}}],["apibaseurl",{"_index":1146,"title":{},"body":{"injectables/CaptchaDataService.html":{},"modules/CaptchaModule.html":{},"injectables/ServerPayload.html":{}}}],["apidobformat",{"_index":3924,"title":{},"body":{"classes/Person.html":{}}}],["apiservice",{"_index":5397,"title":{},"body":{"additional-documentation/getting-started.html":{}}}],["apistatuscodes",{"_index":1678,"title":{},"body":{"components/ConfirmTemplateComponent.html":{},"miscellaneous/enumerations.html":{}}}],["apistatuscodes.error",{"_index":1689,"title":{},"body":{"components/ConfirmTemplateComponent.html":{}}}],["apistatuscodes.success",{"_index":1679,"title":{},"body":{"components/ConfirmTemplateComponent.html":{}}}],["apistatuscodes.warning",{"_index":1690,"title":{},"body":{"components/ConfirmTemplateComponent.html":{}}}],["apostrophe",{"_index":3231,"title":{},"body":{"components/FullNameComponent.html":{},"interfaces/FullNameErrorMsg.html":{}}}],["apostrophes",{"_index":1365,"title":{},"body":{"components/CityComponent.html":{},"interfaces/CountryList.html":{},"components/NameComponent.html":{},"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{}}}],["app",{"_index":3511,"title":{},"body":{"interfaces/ISpaEnvResponse.html":{}}}],["appcomponentcss",{"_index":5243,"title":{},"body":{"coverage.html":{}}}],["appcomponenthtml",{"_index":5244,"title":{},"body":{"coverage.html":{}}}],["appconstants",{"_index":2670,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["appear",{"_index":4079,"title":{},"body":{"components/PhoneNumberComponent.html":{},"additional-documentation/local-development/components.html":{}}}],["appears",{"_index":455,"title":{},"body":{"classes/AbstractTestPage.html":{}}}],["appendselectortobody",{"_index":2391,"title":{},"body":{"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{}}}],["applicable",{"_index":942,"title":{},"body":{"interfaces/AddrLabelList.html":{},"interfaces/Maxlengths.html":{},"interfaces/ReadOnlyFields.html":{},"license.html":{}}}],["applicant",{"_index":1234,"title":{},"body":{"injectables/CheckCompleteBaseService.html":{},"interfaces/PageListInterface.html":{}}}],["applicants",{"_index":1237,"title":{},"body":{"injectables/CheckCompleteBaseService.html":{},"interfaces/PageListInterface.html":{}}}],["application",{"_index":288,"title":{},"body":{"classes/AbstractHttpService.html":{},"classes/AbstractTestPage.html":{},"components/ButtonComponent.html":{},"modules/CaptchaModule.html":{},"injectables/CheckCompleteBaseService.html":{},"interfaces/CommonAttachmentJson.html":{},"classes/CommonImage.html":{},"classes/CommonImageProcessingError.html":{},"interfaces/CommonImageScaleFactors.html":{},"classes/CommonImageScaleFactorsImpl.html":{},"interfaces/CommonLogMessage.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"interfaces/FileUploaderMsg.html":{},"injectables/GeocoderService.html":{},"components/HeaderComponent.html":{},"interfaces/ISpaEnvResponse.html":{},"guards/LoadPageGuardService.html":{},"interfaces/PageListInterface.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"guards/RouteGuardService.html":{},"changelog.html":{},"additional-documentation/getting-started.html":{},"additional-documentation/local-development/components.html":{}}}],["application's",{"_index":347,"title":{},"body":{"injectables/AbstractPageGuardService.html":{},"injectables/AbstractPgCheckService.html":{},"additional-documentation/local-development/components.html":{}}}],["application.information",{"_index":3548,"title":{},"body":{"interfaces/ISpaEnvResponse.html":{}}}],["applicationbase",{"_index":2643,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["applicationid",{"_index":1573,"title":{},"body":{"interfaces/CommonLogMessage.html":{}}}],["applications",{"_index":1028,"title":{},"body":{"classes/Address.html":{}}}],["appropriate",{"_index":898,"title":{},"body":{"interfaces/AddrLabelList.html":{},"interfaces/FileUploaderMsg.html":{},"interfaces/Maxlengths.html":{},"interfaces/ReadOnlyFields.html":{},"additional-documentation/local-development/schematics.html":{}}}],["approximation",{"_index":2986,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["apps",{"_index":4621,"title":{},"body":{"changelog.html":{}}}],["arab",{"_index":2224,"title":{},"body":{"interfaces/CountryList.html":{}}}],["arabia",{"_index":2174,"title":{},"body":{"interfaces/CountryList.html":{}}}],["architecto",{"_index":1388,"title":{},"body":{"components/CityComponent.html":{},"interfaces/CountryList.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"interfaces/FileUploaderMsg.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{}}}],["aren't",{"_index":1665,"title":{},"body":{"interfaces/CommonLogMessage.html":{}}}],["arg",{"_index":1766,"title":{},"body":{"interfaces/CountryList.html":{}}}],["argentina",{"_index":1767,"title":{},"body":{"interfaces/CountryList.html":{}}}],["args",{"_index":3070,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["arguably",{"_index":2812,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["arguments",{"_index":2444,"title":{},"body":{"directives/DateFieldFormatDirective.html":{},"components/PasswordComponent.html":{}}}],["aria",{"_index":3917,"title":{},"body":{"components/PasswordComponent.html":{},"changelog.html":{}}}],["arm",{"_index":1768,"title":{},"body":{"interfaces/CountryList.html":{}}}],["armenia",{"_index":1769,"title":{},"body":{"interfaces/CountryList.html":{}}}],["aroud",{"_index":3441,"title":{},"body":{"components/HeaderComponent.html":{}}}],["around",{"_index":3191,"title":{},"body":{"components/FullNameComponent.html":{},"interfaces/FullNameErrorMsg.html":{},"components/WizardProgressBarComponent.html":{}}}],["arr",{"_index":3745,"title":{},"body":{"interfaces/PageList.html":{},"injectables/PageStateService.html":{}}}],["arr.filter((itm",{"_index":3753,"title":{},"body":{"interfaces/PageList.html":{},"injectables/PageStateService.html":{}}}],["array",{"_index":337,"title":{},"body":{"classes/AbstractHttpService.html":{},"interfaces/FileUploaderMsg.html":{},"components/GeocoderInputComponent.html":{},"changelog.html":{}}}],["array(0",{"_index":2684,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["array.isarray",{"_index":394,"title":{},"body":{"classes/AbstractReactForm.html":{}}}],["artifacts",{"_index":5491,"title":{},"body":{"additional-documentation/local-development/components.html":{}}}],["aruba",{"_index":1771,"title":{},"body":{"interfaces/CountryList.html":{}}}],["ascension",{"_index":2146,"title":{},"body":{"interfaces/CountryList.html":{}}}],["ask",{"_index":5328,"title":{},"body":{"index.html":{}}}],["asm",{"_index":1753,"title":{},"body":{"interfaces/CountryList.html":{}}}],["assets",{"_index":5466,"title":{},"body":{"additional-documentation/local-development/schematics.html":{}}}],["assets/gov3_bc_logo.png",{"_index":3453,"title":{},"body":{"components/HeaderComponent.html":{}}}],["assistance",{"_index":3564,"title":{},"body":{"interfaces/ISpaEnvResponse.html":{}}}],["associate",{"_index":4936,"title":{},"body":{"changelog.html":{}}}],["associated",{"_index":500,"title":{},"body":{"classes/AbstractTestPage.html":{}}}],["association",{"_index":4859,"title":{},"body":{"changelog.html":{}}}],["assuming",{"_index":5499,"title":{},"body":{"additional-documentation/local-development/components.html":{}}}],["assumption",{"_index":5378,"title":{},"body":{"additional-documentation/getting-started.html":{}}}],["async",{"_index":431,"title":{},"body":{"classes/AbstractTestPage.html":{},"interfaces/AddrLabelList.html":{},"interfaces/Maxlengths.html":{},"interfaces/ReadOnlyFields.html":{}}}],["ata",{"_index":1761,"title":{},"body":{"interfaces/CountryList.html":{}}}],["atf",{"_index":1919,"title":{},"body":{"interfaces/CountryList.html":{}}}],["atg",{"_index":1763,"title":{},"body":{"interfaces/CountryList.html":{}}}],["atob(attachment.filecontent.split(',')[1",{"_index":336,"title":{},"body":{"classes/AbstractHttpService.html":{}}}],["attachment",{"_index":277,"title":{},"body":{"classes/AbstractHttpService.html":{},"injectables/GeocoderService.html":{}}}],["attachmentdocumenttype",{"_index":1456,"title":{},"body":{"interfaces/CommonAttachmentJson.html":{},"classes/CommonImage.html":{},"classes/CommonImageProcessingError.html":{},"interfaces/CommonImageScaleFactors.html":{},"classes/CommonImageScaleFactorsImpl.html":{}}}],["attachmentorder",{"_index":1457,"title":{},"body":{"interfaces/CommonAttachmentJson.html":{},"classes/CommonImage.html":{},"classes/CommonImageProcessingError.html":{},"interfaces/CommonImageScaleFactors.html":{},"classes/CommonImageScaleFactorsImpl.html":{}}}],["attachmentuuid",{"_index":1458,"title":{},"body":{"interfaces/CommonAttachmentJson.html":{},"classes/CommonImage.html":{},"classes/CommonImageProcessingError.html":{},"interfaces/CommonImageScaleFactors.html":{},"classes/CommonImageScaleFactorsImpl.html":{}}}],["attempted",{"_index":4697,"title":{},"body":{"changelog.html":{}}}],["attr",{"_index":5046,"title":{},"body":{"changelog.html":{}}}],["attr.aria",{"_index":3915,"title":{},"body":{"components/PasswordComponent.html":{}}}],["attribute",{"_index":562,"title":{},"body":{"classes/AbstractTestPage.html":{},"components/CoreBreadcrumbComponent.html":{},"components/XiconButtonComponent.html":{},"changelog.html":{}}}],["attributes",{"_index":3275,"title":{},"body":{"interfaces/GeoAddressResult.html":{},"injectables/GeocoderService.html":{}}}],["audit",{"_index":5121,"title":{},"body":{"changelog.html":{}}}],["aus",{"_index":1772,"title":{},"body":{"interfaces/CountryList.html":{}}}],["australia",{"_index":1773,"title":{},"body":{"interfaces/CountryList.html":{}}}],["austria",{"_index":1775,"title":{},"body":{"interfaces/CountryList.html":{}}}],["aut",{"_index":1774,"title":{},"body":{"interfaces/CountryList.html":{}}}],["autem",{"_index":1408,"title":{},"body":{"components/CityComponent.html":{},"interfaces/CountryList.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"interfaces/FileUploaderMsg.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{}}}],["auto",{"_index":793,"title":{},"body":{"interfaces/AddrLabelList.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"interfaces/FileUploaderMsg.html":{},"interfaces/Maxlengths.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"interfaces/ReadOnlyFields.html":{},"changelog.html":{},"additional-documentation/getting-started.html":{}}}],["autocomplete",{"_index":5021,"title":{},"body":{"changelog.html":{}}}],["autocomplete=\"false",{"_index":5037,"title":{},"body":{"changelog.html":{}}}],["autocorrect",{"_index":2518,"title":{},"body":{"components/DropdownComponent.html":{}}}],["automatically",{"_index":66,"title":{},"body":{"classes/AbstractBaseForm.html":{},"classes/AbstractForm.html":{},"classes/AbstractReactForm.html":{},"components/ButtonComponent.html":{},"interfaces/CommonLogMessage.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"interfaces/ISpaEnvResponse.html":{},"changelog.html":{},"additional-documentation/getting-started.html":{}}}],["available",{"_index":2775,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["avoids",{"_index":529,"title":{},"body":{"classes/AbstractTestPage.html":{}}}],["await",{"_index":598,"title":{},"body":{"classes/AbstractTestPage.html":{}}}],["awkward",{"_index":3878,"title":{},"body":{"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{}}}],["aze",{"_index":1776,"title":{},"body":{"interfaces/CountryList.html":{}}}],["azerbaijan",{"_index":1777,"title":{},"body":{"interfaces/CountryList.html":{}}}],["b",{"_index":4353,"title":{},"body":{"interfaces/SimpleDate.html":{},"components/WizardProgressBarComponent.html":{}}}],["b555787",{"_index":4904,"title":{},"body":{"changelog.html":{}}}],["b80520f",{"_index":5016,"title":{},"body":{"changelog.html":{}}}],["b901868",{"_index":4873,"title":{},"body":{"changelog.html":{}}}],["back",{"_index":3546,"title":{},"body":{"interfaces/ISpaEnvResponse.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{}}}],["backdrop",{"_index":4871,"title":{},"body":{"changelog.html":{}}}],["backend",{"_index":1649,"title":{},"body":{"interfaces/CommonLogMessage.html":{},"interfaces/ISpaEnvResponse.html":{}}}],["backticks",{"_index":3568,"title":{},"body":{"interfaces/ISpaEnvResponse.html":{}}}],["backward",{"_index":1026,"title":{},"body":{"classes/Address.html":{}}}],["bad",{"_index":5391,"title":{},"body":{"additional-documentation/getting-started.html":{}}}],["baee5ad",{"_index":4899,"title":{},"body":{"changelog.html":{}}}],["bahamas",{"_index":1779,"title":{},"body":{"interfaces/CountryList.html":{}}}],["bahrain",{"_index":1781,"title":{},"body":{"interfaces/CountryList.html":{}}}],["bangladesh",{"_index":1783,"title":{},"body":{"interfaces/CountryList.html":{}}}],["bar",{"_index":46,"title":{},"body":{"classes/AbstractBaseForm.html":{},"classes/AbstractForm.html":{},"classes/AbstractReactForm.html":{},"classes/AbstractTestPage.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"components/WizardProgressBarComponent.html":{},"changelog.html":{}}}],["bar'},{'name",{"_index":691,"title":{},"body":{"components/AccordionCommonComponent.html":{},"components/ButtonComponent.html":{},"components/ButtonGroupComponent.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"components/ConfirmTemplateComponent.html":{},"components/CoreBreadcrumbComponent.html":{},"components/DatepickerComponent.html":{},"components/DropdownComponent.html":{},"components/EmailComponent.html":{},"components/ErrorContainerComponent.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/FullNameComponent.html":{},"components/GeocoderInputComponent.html":{},"components/HeaderComponent.html":{},"components/NameComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"components/PhnComponent.html":{},"components/PhoneNumberComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"components/RadioComponent.html":{},"components/SampleModalComponent.html":{},"components/SinComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{},"components/XiconButtonComponent.html":{}}}],["bar.component",{"_index":4269,"title":{},"body":{"modules/SharedCoreModule.html":{}}}],["bar.component.html",{"_index":3140,"title":{},"body":{"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/WizardProgressBarComponent.html":{}}}],["bar.component.scss",{"_index":3139,"title":{},"body":{"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/WizardProgressBarComponent.html":{}}}],["bar.component.ts",{"_index":3138,"title":{},"body":{"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/WizardProgressBarComponent.html":{},"coverage.html":{}}}],["bar.component.ts:12",{"_index":3149,"title":{},"body":{"components/FormActionBarComponent.html":{}}}],["bar.component.ts:13",{"_index":3146,"title":{},"body":{"components/FormActionBarComponent.html":{}}}],["bar.component.ts:14",{"_index":3148,"title":{},"body":{"components/FormActionBarComponent.html":{}}}],["bar.component.ts:15",{"_index":3147,"title":{},"body":{"components/FormActionBarComponent.html":{}}}],["bar.component.ts:16",{"_index":3150,"title":{},"body":{"components/FormActionBarComponent.html":{}}}],["bar.component.ts:17",{"_index":3183,"title":{},"body":{"components/FormSubmitBarComponent.html":{}}}],["bar.component.ts:18",{"_index":3145,"title":{},"body":{"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{}}}],["bar.component.ts:19",{"_index":3182,"title":{},"body":{"components/FormSubmitBarComponent.html":{}}}],["bar.component.ts:20",{"_index":3174,"title":{},"body":{"components/FormSubmitBarComponent.html":{}}}],["bar.component.ts:21",{"_index":3184,"title":{},"body":{"components/FormSubmitBarComponent.html":{}}}],["bar.component.ts:22",{"_index":3151,"title":{},"body":{"components/FormActionBarComponent.html":{},"components/WizardProgressBarComponent.html":{}}}],["bar.component.ts:23",{"_index":4495,"title":{},"body":{"components/WizardProgressBarComponent.html":{}}}],["bar.component.ts:24",{"_index":4498,"title":{},"body":{"components/WizardProgressBarComponent.html":{}}}],["bar.component.ts:25",{"_index":3152,"title":{},"body":{"components/FormActionBarComponent.html":{}}}],["bar.component.ts:26",{"_index":4492,"title":{},"body":{"components/WizardProgressBarComponent.html":{}}}],["bar.component.ts:28",{"_index":4479,"title":{},"body":{"components/WizardProgressBarComponent.html":{}}}],["bar.component.ts:31",{"_index":3173,"title":{},"body":{"components/FormSubmitBarComponent.html":{}}}],["bar.component.ts:33",{"_index":4484,"title":{},"body":{"components/WizardProgressBarComponent.html":{}}}],["bar.component.ts:35",{"_index":3185,"title":{},"body":{"components/FormSubmitBarComponent.html":{}}}],["bar.component.ts:50",{"_index":4483,"title":{},"body":{"components/WizardProgressBarComponent.html":{}}}],["bar.component.ts:55",{"_index":4480,"title":{},"body":{"components/WizardProgressBarComponent.html":{}}}],["bar.component.ts:70",{"_index":4482,"title":{},"body":{"components/WizardProgressBarComponent.html":{}}}],["bar.component.ts:80",{"_index":4485,"title":{},"body":{"components/WizardProgressBarComponent.html":{}}}],["bar/form",{"_index":3137,"title":{},"body":{"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"modules/SharedCoreModule.html":{},"coverage.html":{}}}],["bar/wizard",{"_index":4274,"title":{},"body":{"modules/SharedCoreModule.html":{},"components/WizardProgressBarComponent.html":{},"coverage.html":{}}}],["barbados",{"_index":1785,"title":{},"body":{"interfaces/CountryList.html":{}}}],["barbuda",{"_index":1765,"title":{},"body":{"interfaces/CountryList.html":{}}}],["bars",{"_index":5145,"title":{},"body":{"changelog.html":{}}}],["barthélemy",{"_index":2143,"title":{},"body":{"interfaces/CountryList.html":{}}}],["base",{"_index":7,"title":{"classes/Base.html":{}},"body":{"classes/AbstractBaseForm.html":{},"classes/AbstractForm.html":{},"classes/AbstractFormControl.html":{},"classes/AbstractReactForm.html":{},"interfaces/AddrLabelList.html":{},"classes/Base.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"components/ConfirmTemplateComponent.html":{},"classes/Container.html":{},"components/CoreBreadcrumbComponent.html":{},"interfaces/CountryList.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"components/DropdownComponent.html":{},"components/EmailComponent.html":{},"interfaces/FileUploaderMsg.html":{},"components/FullNameComponent.html":{},"interfaces/FullNameErrorMsg.html":{},"components/GeocoderInputComponent.html":{},"interfaces/Maxlengths.html":{},"components/NameComponent.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"classes/Person.html":{},"components/PhnComponent.html":{},"components/PhoneNumberComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{},"components/RadioComponent.html":{},"interfaces/ReadOnlyFields.html":{},"interfaces/SampleImageInterface.html":{},"components/SampleModalComponent.html":{},"components/SinComponent.html":{},"components/ToggleComponent.html":{},"interfaces/WizardProgressItem.html":{},"coverage.html":{}}}],["base.component",{"_index":2637,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["base.model",{"_index":2645,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["base.service.ts",{"_index":1201,"title":{},"body":{"injectables/CheckCompleteBaseService.html":{},"interfaces/PageListInterface.html":{},"coverage.html":{}}}],["base.service.ts:107",{"_index":1218,"title":{},"body":{"injectables/CheckCompleteBaseService.html":{}}}],["base.service.ts:111",{"_index":1229,"title":{},"body":{"injectables/CheckCompleteBaseService.html":{}}}],["base.service.ts:16",{"_index":3774,"title":{},"body":{"interfaces/PageListInterface.html":{}}}],["base.service.ts:32",{"_index":1241,"title":{},"body":{"injectables/CheckCompleteBaseService.html":{}}}],["base.service.ts:34",{"_index":1239,"title":{},"body":{"injectables/CheckCompleteBaseService.html":{}}}],["base.service.ts:35",{"_index":1214,"title":{},"body":{"injectables/CheckCompleteBaseService.html":{}}}],["base.service.ts:39",{"_index":1243,"title":{},"body":{"injectables/CheckCompleteBaseService.html":{}}}],["base.service.ts:43",{"_index":1245,"title":{},"body":{"injectables/CheckCompleteBaseService.html":{}}}],["base.service.ts:47",{"_index":1215,"title":{},"body":{"injectables/CheckCompleteBaseService.html":{}}}],["base.service.ts:51",{"_index":1216,"title":{},"body":{"injectables/CheckCompleteBaseService.html":{}}}],["base.service.ts:56",{"_index":1230,"title":{},"body":{"injectables/CheckCompleteBaseService.html":{}}}],["base.service.ts:63",{"_index":1236,"title":{},"body":{"injectables/CheckCompleteBaseService.html":{}}}],["base.service.ts:78",{"_index":1232,"title":{},"body":{"injectables/CheckCompleteBaseService.html":{}}}],["base.service.ts:88",{"_index":1225,"title":{},"body":{"injectables/CheckCompleteBaseService.html":{}}}],["base.service.ts:99",{"_index":1222,"title":{},"body":{"injectables/CheckCompleteBaseService.html":{}}}],["base64",{"_index":1490,"title":{},"body":{"interfaces/CommonAttachmentJson.html":{},"classes/CommonImage.html":{},"classes/CommonImageProcessingError.html":{},"interfaces/CommonImageScaleFactors.html":{},"classes/CommonImageScaleFactorsImpl.html":{},"additional-documentation/local-development/schematics.html":{}}}],["base:11",{"_index":135,"title":{},"body":{"classes/AbstractFormControl.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"components/ConfirmTemplateComponent.html":{},"components/DatepickerComponent.html":{},"components/DropdownComponent.html":{},"components/EmailComponent.html":{},"components/FullNameComponent.html":{},"components/GeocoderInputComponent.html":{},"components/NameComponent.html":{},"components/PasswordComponent.html":{},"classes/Person.html":{},"components/PhnComponent.html":{},"components/PhoneNumberComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"components/RadioComponent.html":{},"components/SampleModalComponent.html":{},"components/SinComponent.html":{},"components/ToggleComponent.html":{}}}],["base_url",{"_index":3263,"title":{},"body":{"interfaces/GeoAddressResult.html":{},"injectables/GeocoderService.html":{}}}],["basecomponent",{"_index":2636,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["based",{"_index":191,"title":{},"body":{"classes/AbstractFormControl.html":{},"classes/AbstractTestPage.html":{},"interfaces/AddrLabelList.html":{},"interfaces/FileUploaderMsg.html":{},"interfaces/IRadioItems.html":{},"interfaces/Maxlengths.html":{},"components/RadioComponent.html":{},"interfaces/ReadOnlyFields.html":{},"changelog.html":{}}}],["basic",{"_index":5024,"title":{},"body":{"changelog.html":{}}}],["basis",{"_index":5345,"title":{},"body":{"license.html":{}}}],["bc",{"_index":943,"title":{},"body":{"interfaces/AddrLabelList.html":{},"classes/Address.html":{},"components/GeocoderInputComponent.html":{},"interfaces/ISpaEnvResponse.html":{},"interfaces/Maxlengths.html":{},"components/PhnComponent.html":{},"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{},"interfaces/ReadOnlyFields.html":{},"modules/SharedCoreModule.html":{},"directives/ValidateBcPostalDirective.html":{},"directives/ValidatePostalcodeDirective.html":{},"changelog.html":{},"coverage.html":{}}}],["bcformat",{"_index":4456,"title":{},"body":{"directives/ValidatePostalcodeDirective.html":{}}}],["bcformat.test",{"_index":4457,"title":{},"body":{"directives/ValidatePostalcodeDirective.html":{}}}],["bclogobase64",{"_index":5248,"title":{},"body":{"coverage.html":{}}}],["bconly",{"_index":802,"title":{},"body":{"interfaces/AddrLabelList.html":{},"interfaces/Maxlengths.html":{},"interfaces/ReadOnlyFields.html":{},"directives/ValidatePostalcodeDirective.html":{},"changelog.html":{}}}],["bdi",{"_index":1828,"title":{},"body":{"interfaces/CountryList.html":{}}}],["beatae",{"_index":1432,"title":{},"body":{"components/CityComponent.html":{},"interfaces/CountryList.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"interfaces/FileUploaderMsg.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{}}}],["become",{"_index":5377,"title":{},"body":{"todo.html":{}}}],["befc319",{"_index":4940,"title":{},"body":{"changelog.html":{}}}],["before",{"_index":1515,"title":{},"body":{"interfaces/CommonAttachmentJson.html":{},"classes/CommonImage.html":{},"classes/CommonImageProcessingError.html":{},"interfaces/CommonImageScaleFactors.html":{},"classes/CommonImageScaleFactorsImpl.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"interfaces/FileUploaderMsg.html":{},"interfaces/GeoAddressResult.html":{},"injectables/GeocoderService.html":{},"interfaces/ISpaEnvResponse.html":{},"changelog.html":{},"additional-documentation/local-development/schematics.html":{}}}],["begin",{"_index":3226,"title":{},"body":{"components/FullNameComponent.html":{},"interfaces/FullNameErrorMsg.html":{},"components/NameComponent.html":{}}}],["beginning",{"_index":3527,"title":{},"body":{"interfaces/ISpaEnvResponse.html":{}}}],["behaviour",{"_index":4684,"title":{},"body":{"changelog.html":{}}}],["being",{"_index":192,"title":{},"body":{"classes/AbstractFormControl.html":{},"interfaces/CommonLogMessage.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{}}}],["bel",{"_index":1788,"title":{},"body":{"interfaces/CountryList.html":{}}}],["belarus",{"_index":1787,"title":{},"body":{"interfaces/CountryList.html":{}}}],["belgium",{"_index":1789,"title":{},"body":{"interfaces/CountryList.html":{}}}],["belize",{"_index":1791,"title":{},"body":{"interfaces/CountryList.html":{}}}],["below",{"_index":3523,"title":{},"body":{"interfaces/ISpaEnvResponse.html":{},"additional-documentation/getting-started.html":{}}}],["ben",{"_index":1792,"title":{},"body":{"interfaces/CountryList.html":{}}}],["beneficial",{"_index":3789,"title":{},"body":{"components/PageSectionComponent.html":{}}}],["benefits",{"_index":3561,"title":{},"body":{"interfaces/ISpaEnvResponse.html":{}}}],["benin",{"_index":1793,"title":{},"body":{"interfaces/CountryList.html":{}}}],["bermuda",{"_index":1795,"title":{},"body":{"interfaces/CountryList.html":{}}}],["bes",{"_index":1800,"title":{},"body":{"interfaces/CountryList.html":{}}}],["best",{"_index":3437,"title":{},"body":{"components/HeaderComponent.html":{}}}],["better",{"_index":4865,"title":{},"body":{"changelog.html":{}}}],["between",{"_index":4559,"title":{},"body":{"components/XiconButtonComponent.html":{}}}],["bf0bcc2",{"_index":4584,"title":{},"body":{"changelog.html":{}}}],["bf3cf23",{"_index":5131,"title":{},"body":{"changelog.html":{}}}],["bfa",{"_index":1825,"title":{},"body":{"interfaces/CountryList.html":{}}}],["bg",{"_index":3912,"title":{},"body":{"components/PasswordComponent.html":{}}}],["bgd",{"_index":1782,"title":{},"body":{"interfaces/CountryList.html":{}}}],["bgr",{"_index":1823,"title":{},"body":{"interfaces/CountryList.html":{}}}],["bhr",{"_index":1780,"title":{},"body":{"interfaces/CountryList.html":{}}}],["bhs",{"_index":1778,"title":{},"body":{"interfaces/CountryList.html":{}}}],["bhutan",{"_index":1796,"title":{},"body":{"interfaces/CountryList.html":{}}}],["big",{"_index":3055,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["bih",{"_index":1805,"title":{},"body":{"interfaces/CountryList.html":{}}}],["binary",{"_index":335,"title":{},"body":{"classes/AbstractHttpService.html":{}}}],["bind",{"_index":1291,"title":{},"body":{"components/CheckboxComponent.html":{}}}],["bindings",{"_index":2701,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["binds",{"_index":816,"title":{},"body":{"interfaces/AddrLabelList.html":{},"interfaces/FileUploaderMsg.html":{},"interfaces/Maxlengths.html":{},"interfaces/ReadOnlyFields.html":{}}}],["birth",{"_index":3943,"title":{},"body":{"classes/Person.html":{}}}],["birthdate",{"_index":3935,"title":{},"body":{"classes/Person.html":{}}}],["bissau",{"_index":1950,"title":{},"body":{"interfaces/CountryList.html":{}}}],["blanditiis",{"_index":1417,"title":{},"body":{"components/CityComponent.html":{},"interfaces/CountryList.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"interfaces/FileUploaderMsg.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{}}}],["blank",{"_index":860,"title":{},"body":{"interfaces/AddrLabelList.html":{},"components/CityComponent.html":{},"interfaces/CountryList.html":{},"components/FormSubmitBarComponent.html":{},"components/FullNameComponent.html":{},"interfaces/FullNameErrorMsg.html":{},"interfaces/Maxlengths.html":{},"components/NameComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{},"interfaces/ReadOnlyFields.html":{},"components/XiconButtonComponent.html":{},"changelog.html":{},"additional-documentation/local-development/schematics.html":{}}}],["blm",{"_index":2141,"title":{},"body":{"interfaces/CountryList.html":{}}}],["blob",{"_index":2799,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["blob.size",{"_index":2978,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["block",{"_index":3493,"title":{},"body":{"interfaces/IRadioItems.html":{},"components/RadioComponent.html":{}}}],["blr",{"_index":1786,"title":{},"body":{"interfaces/CountryList.html":{}}}],["blue",{"_index":3432,"title":{},"body":{"components/HeaderComponent.html":{}}}],["blueimp",{"_index":2651,"title":{},"body":{"interfaces/FileUploaderMsg.html":{},"dependencies.html":{}}}],["blur",{"_index":1327,"title":{},"body":{"components/CityComponent.html":{},"components/EmailComponent.html":{},"components/PhnComponent.html":{},"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{},"components/SinComponent.html":{},"changelog.html":{}}}],["blurevent",{"_index":2302,"title":{},"body":{"interfaces/CountryList.html":{},"components/NameComponent.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"components/PostalCodeComponent.html":{}}}],["blz",{"_index":1790,"title":{},"body":{"interfaces/CountryList.html":{}}}],["bmu",{"_index":1794,"title":{},"body":{"interfaces/CountryList.html":{}}}],["body",{"_index":272,"title":{},"body":{"classes/AbstractHttpService.html":{},"interfaces/CommonLogMessage.html":{},"injectables/GeocoderService.html":{},"interfaces/ISpaEnvResponse.html":{}}}],["body).subscribe",{"_index":1640,"title":{},"body":{"interfaces/CommonLogMessage.html":{}}}],["boilerplate",{"_index":3528,"title":{},"body":{"interfaces/ISpaEnvResponse.html":{}}}],["bol",{"_index":1797,"title":{},"body":{"interfaces/CountryList.html":{}}}],["bolivarian",{"_index":2274,"title":{},"body":{"interfaces/CountryList.html":{}}}],["bolivia",{"_index":1798,"title":{},"body":{"interfaces/CountryList.html":{}}}],["bonaire",{"_index":1801,"title":{},"body":{"interfaces/CountryList.html":{}}}],["boolean",{"_index":29,"title":{},"body":{"classes/AbstractBaseForm.html":{},"classes/AbstractForm.html":{},"classes/AbstractFormControl.html":{},"classes/AbstractHttpService.html":{},"injectables/AbstractPageGuardService.html":{},"injectables/AbstractPgCheckService.html":{},"classes/AbstractReactForm.html":{},"components/AccordionCommonComponent.html":{},"interfaces/AddrLabelList.html":{},"classes/Address.html":{},"components/ButtonComponent.html":{},"components/ButtonGroupComponent.html":{},"injectables/CheckCompleteBaseService.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"interfaces/CountryList.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"injectables/DefaultPageGuardService.html":{},"components/DropdownComponent.html":{},"directives/DuplicateCheckDirective.html":{},"components/EmailComponent.html":{},"components/ErrorContainerComponent.html":{},"interfaces/FileUploaderMsg.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/FullNameComponent.html":{},"interfaces/FullNameErrorMsg.html":{},"components/GeocoderInputComponent.html":{},"injectables/GeocoderService.html":{},"components/HeaderComponent.html":{},"interfaces/ISpaEnvResponse.html":{},"guards/LoadPageGuardService.html":{},"interfaces/Maxlengths.html":{},"components/NameComponent.html":{},"interfaces/PageList.html":{},"interfaces/PageListInterface.html":{},"injectables/PageStateService.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"components/PhnComponent.html":{},"components/PhoneNumberComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{},"components/RadioComponent.html":{},"interfaces/ReadOnlyFields.html":{},"guards/RouteGuardService.html":{},"components/SinComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"directives/ValidatePostalcodeDirective.html":{},"todo.html":{}}}],["bootstrap",{"_index":651,"title":{},"body":{"components/AccordionCommonComponent.html":{},"components/ButtonComponent.html":{},"modules/CaptchaModule.html":{},"interfaces/FileUploaderMsg.html":{},"components/GeocoderInputComponent.html":{},"interfaces/ISpaEnvResponse.html":{},"interfaces/SampleImageInterface.html":{},"components/SampleModalComponent.html":{},"modules/SharedCoreModule.html":{},"components/ThumbnailComponent.html":{},"components/WizardProgressBarComponent.html":{},"dependencies.html":{},"overview.html":{}}}],["bootstrap/accordion",{"_index":4308,"title":{},"body":{"modules/SharedCoreModule.html":{}}}],["bosnia",{"_index":1806,"title":{},"body":{"interfaces/CountryList.html":{}}}],["both",{"_index":416,"title":{},"body":{"classes/AbstractTestPage.html":{},"components/CheckboxComponent.html":{},"changelog.html":{},"additional-documentation/local-development/schematics.html":{}}}],["botswana",{"_index":1809,"title":{},"body":{"interfaces/CountryList.html":{}}}],["bottom",{"_index":537,"title":{},"body":{"classes/AbstractTestPage.html":{}}}],["bound",{"_index":5324,"title":{},"body":{"index.html":{}}}],["bouvet",{"_index":1811,"title":{},"body":{"interfaces/CountryList.html":{}}}],["box",{"_index":480,"title":{},"body":{"classes/AbstractTestPage.html":{},"interfaces/AddrLabelList.html":{},"components/GeocoderInputComponent.html":{},"interfaces/Maxlengths.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"interfaces/ReadOnlyFields.html":{}}}],["bps",{"_index":4964,"title":{},"body":{"changelog.html":{}}}],["bra",{"_index":1813,"title":{},"body":{"interfaces/CountryList.html":{}}}],["brackets",{"_index":4802,"title":{},"body":{"changelog.html":{}}}],["brazil",{"_index":1814,"title":{},"body":{"interfaces/CountryList.html":{}}}],["brb",{"_index":1784,"title":{},"body":{"interfaces/CountryList.html":{}}}],["bread",{"_index":1693,"title":{},"body":{"classes/Container.html":{},"interfaces/WizardProgressItem.html":{}}}],["breadcrumb",{"_index":1722,"title":{},"body":{"components/CoreBreadcrumbComponent.html":{}}}],["breadcrumb'},{'name",{"_index":676,"title":{},"body":{"components/AccordionCommonComponent.html":{},"components/ButtonComponent.html":{},"components/ButtonGroupComponent.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"components/ConfirmTemplateComponent.html":{},"components/CoreBreadcrumbComponent.html":{},"components/DatepickerComponent.html":{},"components/DropdownComponent.html":{},"components/EmailComponent.html":{},"components/ErrorContainerComponent.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/FullNameComponent.html":{},"components/GeocoderInputComponent.html":{},"components/HeaderComponent.html":{},"components/NameComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"components/PhnComponent.html":{},"components/PhoneNumberComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"components/RadioComponent.html":{},"components/SampleModalComponent.html":{},"components/SinComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{},"components/XiconButtonComponent.html":{}}}],["breadcrumb.component",{"_index":4267,"title":{},"body":{"modules/SharedCoreModule.html":{}}}],["breadcrumb.component.html",{"_index":1737,"title":{},"body":{"components/CoreBreadcrumbComponent.html":{}}}],["breadcrumb.component.scss",{"_index":1736,"title":{},"body":{"components/CoreBreadcrumbComponent.html":{}}}],["breadcrumb.component.ts",{"_index":1720,"title":{},"body":{"components/CoreBreadcrumbComponent.html":{},"coverage.html":{}}}],["breadcrumb.component.ts:29",{"_index":1738,"title":{},"body":{"components/CoreBreadcrumbComponent.html":{}}}],["breadcrumb.component.ts:33",{"_index":1739,"title":{},"body":{"components/CoreBreadcrumbComponent.html":{}}}],["breadcrumb/core",{"_index":1719,"title":{},"body":{"components/CoreBreadcrumbComponent.html":{},"modules/SharedCoreModule.html":{},"coverage.html":{}}}],["break",{"_index":3544,"title":{},"body":{"interfaces/ISpaEnvResponse.html":{},"changelog.html":{}}}],["breaking",{"_index":1025,"title":{},"body":{"classes/Address.html":{},"components/CheckboxComponent.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"components/WizardProgressBarComponent.html":{},"components/XiconButtonComponent.html":{},"changelog.html":{},"todo.html":{}}}],["breaks",{"_index":3688,"title":{},"body":{"classes/MoHCommonLibraryError.html":{}}}],["british",{"_index":1816,"title":{},"body":{"interfaces/CountryList.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{},"license.html":{}}}],["british_columbia",{"_index":780,"title":{},"body":{"interfaces/AddrLabelList.html":{},"components/GeocoderInputComponent.html":{},"interfaces/Maxlengths.html":{},"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{},"interfaces/ReadOnlyFields.html":{},"coverage.html":{}}}],["brn",{"_index":1820,"title":{},"body":{"interfaces/CountryList.html":{}}}],["broken",{"_index":5475,"title":{},"body":{"additional-documentation/local-development/components.html":{}}}],["broswefileinputelement",{"_index":3116,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["browse",{"_index":2739,"title":{},"body":{"interfaces/FileUploaderMsg.html":{},"modules.html":{}}}],["browsefileref",{"_index":2674,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["browsefilestream",{"_index":2839,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["browser",{"_index":584,"title":{},"body":{"classes/AbstractTestPage.html":{},"modules/CaptchaModule.html":{},"interfaces/FileUploaderMsg.html":{},"interfaces/ISpaEnvResponse.html":{},"components/WizardProgressBarComponent.html":{},"dependencies.html":{},"modules.html":{}}}],["browser's",{"_index":2759,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["browser.actions().sendkeys(protractor.key.enter).perform",{"_index":608,"title":{},"body":{"classes/AbstractTestPage.html":{}}}],["browser.executescript('window.scrollto(0",{"_index":591,"title":{},"body":{"classes/AbstractTestPage.html":{}}}],["browser.executescript('window.scrollto(0,0",{"_index":621,"title":{},"body":{"classes/AbstractTestPage.html":{}}}],["browser.get(&#39;/enrolment/profile&#39",{"_index":534,"title":{},"body":{"classes/AbstractTestPage.html":{}}}],["browser.get('/enrolment/profile",{"_index":588,"title":{},"body":{"classes/AbstractTestPage.html":{}}}],["browser.need",{"_index":3542,"title":{},"body":{"interfaces/ISpaEnvResponse.html":{}}}],["browsermodule",{"_index":1192,"title":{},"body":{"modules/CaptchaModule.html":{}}}],["brunei",{"_index":1821,"title":{},"body":{"interfaces/CountryList.html":{}}}],["brunswick",{"_index":4187,"title":{},"body":{"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{}}}],["btn",{"_index":1094,"title":{},"body":{"components/ButtonComponent.html":{},"interfaces/CountryList.html":{}}}],["btnclick",{"_index":1080,"title":{},"body":{"components/ButtonComponent.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{}}}],["bug",{"_index":2941,"title":{},"body":{"interfaces/FileUploaderMsg.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"changelog.html":{}}}],["buiding",{"_index":4977,"title":{},"body":{"changelog.html":{}}}],["build",{"_index":3879,"title":{},"body":{"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"changelog.html":{},"additional-documentation/local-development/schematics.html":{},"additional-documentation/local-development/components.html":{}}}],["build:schematics",{"_index":5420,"title":{},"body":{"additional-documentation/local-development/schematics.html":{}}}],["building",{"_index":5409,"title":{},"body":{"additional-documentation/local-development/schematics.html":{},"additional-documentation/local-development/components.html":{}}}],["builds",{"_index":4799,"title":{},"body":{"changelog.html":{},"additional-documentation/local-development/schematics.html":{},"additional-documentation/local-development/components.html":{}}}],["buildtime",{"_index":5268,"title":{},"body":{"coverage.html":{}}}],["built",{"_index":3435,"title":{},"body":{"components/HeaderComponent.html":{},"changelog.html":{},"additional-documentation/local-development/components.html":{}}}],["bulgaria",{"_index":1824,"title":{},"body":{"interfaces/CountryList.html":{}}}],["bullet",{"_index":4738,"title":{},"body":{"changelog.html":{}}}],["burkina",{"_index":1826,"title":{},"body":{"interfaces/CountryList.html":{}}}],["burundi",{"_index":1829,"title":{},"body":{"interfaces/CountryList.html":{}}}],["button",{"_index":48,"title":{},"body":{"classes/AbstractBaseForm.html":{},"classes/AbstractForm.html":{},"classes/AbstractReactForm.html":{},"classes/AbstractTestPage.html":{},"components/AccordionCommonComponent.html":{},"components/ButtonComponent.html":{},"components/ButtonGroupComponent.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"components/ConfirmTemplateComponent.html":{},"components/CoreBreadcrumbComponent.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"components/DropdownComponent.html":{},"components/EmailComponent.html":{},"components/ErrorContainerComponent.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/FullNameComponent.html":{},"components/GeocoderInputComponent.html":{},"components/HeaderComponent.html":{},"components/NameComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"components/PhnComponent.html":{},"components/PhoneNumberComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"components/RadioComponent.html":{},"components/SampleModalComponent.html":{},"components/SinComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{},"components/XiconButtonComponent.html":{},"changelog.html":{}}}],["button'},{'name",{"_index":660,"title":{},"body":{"components/AccordionCommonComponent.html":{},"components/ButtonComponent.html":{},"components/ButtonGroupComponent.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"components/ConfirmTemplateComponent.html":{},"components/CoreBreadcrumbComponent.html":{},"components/DatepickerComponent.html":{},"components/DropdownComponent.html":{},"components/EmailComponent.html":{},"components/ErrorContainerComponent.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/FullNameComponent.html":{},"components/GeocoderInputComponent.html":{},"components/HeaderComponent.html":{},"components/NameComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"components/PhnComponent.html":{},"components/PhoneNumberComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"components/RadioComponent.html":{},"components/SampleModalComponent.html":{},"components/SinComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{},"components/XiconButtonComponent.html":{}}}],["button.component",{"_index":4321,"title":{},"body":{"modules/SharedCoreModule.html":{}}}],["button.component.html",{"_index":1076,"title":{},"body":{"components/ButtonComponent.html":{},"components/XiconButtonComponent.html":{}}}],["button.component.scss",{"_index":1075,"title":{},"body":{"components/ButtonComponent.html":{},"components/XiconButtonComponent.html":{}}}],["button.component.ts",{"_index":4544,"title":{},"body":{"components/XiconButtonComponent.html":{},"coverage.html":{},"todo.html":{}}}],["button.component.ts:15",{"_index":4548,"title":{},"body":{"components/XiconButtonComponent.html":{}}}],["button.component.ts:19",{"_index":4550,"title":{},"body":{"components/XiconButtonComponent.html":{}}}],["button.component.ts:20",{"_index":4547,"title":{},"body":{"components/XiconButtonComponent.html":{}}}],["button.component.ts:24",{"_index":4551,"title":{},"body":{"components/XiconButtonComponent.html":{}}}],["button.component.ts:35",{"_index":4552,"title":{},"body":{"components/XiconButtonComponent.html":{}}}],["button/xicon",{"_index":4320,"title":{},"body":{"modules/SharedCoreModule.html":{},"components/XiconButtonComponent.html":{},"coverage.html":{}}}],["buttoncomponent",{"_index":659,"title":{"components/ButtonComponent.html":{}},"body":{"components/AccordionCommonComponent.html":{},"components/ButtonComponent.html":{},"components/ButtonGroupComponent.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"components/ConfirmTemplateComponent.html":{},"components/CoreBreadcrumbComponent.html":{},"components/DatepickerComponent.html":{},"components/DropdownComponent.html":{},"components/EmailComponent.html":{},"components/ErrorContainerComponent.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/FullNameComponent.html":{},"components/GeocoderInputComponent.html":{},"components/HeaderComponent.html":{},"components/NameComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"components/PhnComponent.html":{},"components/PhoneNumberComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"components/RadioComponent.html":{},"components/SampleModalComponent.html":{},"modules/SharedCoreModule.html":{},"components/SinComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{},"components/XiconButtonComponent.html":{},"changelog.html":{},"coverage.html":{},"overview.html":{}}}],["buttongroup",{"_index":1108,"title":{},"body":{"components/ButtonGroupComponent.html":{}}}],["buttongroupcomponent",{"_index":661,"title":{"components/ButtonGroupComponent.html":{}},"body":{"components/AccordionCommonComponent.html":{},"components/ButtonComponent.html":{},"components/ButtonGroupComponent.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"components/ConfirmTemplateComponent.html":{},"components/CoreBreadcrumbComponent.html":{},"components/DatepickerComponent.html":{},"components/DropdownComponent.html":{},"components/EmailComponent.html":{},"components/ErrorContainerComponent.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/FullNameComponent.html":{},"components/GeocoderInputComponent.html":{},"components/HeaderComponent.html":{},"components/NameComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"components/PhnComponent.html":{},"components/PhoneNumberComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"components/RadioComponent.html":{},"components/SampleModalComponent.html":{},"modules/SharedCoreModule.html":{},"components/SinComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{},"components/XiconButtonComponent.html":{},"changelog.html":{},"coverage.html":{},"overview.html":{}}}],["buttons",{"_index":1060,"title":{},"body":{"components/ButtonComponent.html":{},"interfaces/IRadioItems.html":{},"components/RadioComponent.html":{},"changelog.html":{}}}],["buttontype",{"_index":1078,"title":{},"body":{"components/ButtonComponent.html":{}}}],["bvt",{"_index":1810,"title":{},"body":{"interfaces/CountryList.html":{}}}],["bwa",{"_index":1808,"title":{},"body":{"interfaces/CountryList.html":{}}}],["bypass",{"_index":1246,"title":{},"body":{"injectables/CheckCompleteBaseService.html":{},"injectables/DefaultPageGuardService.html":{},"interfaces/PageListInterface.html":{}}}],["bypassguards",{"_index":1213,"title":{},"body":{"injectables/CheckCompleteBaseService.html":{},"injectables/DefaultPageGuardService.html":{},"interfaces/PageListInterface.html":{}}}],["bytes",{"_index":1505,"title":{},"body":{"interfaces/CommonAttachmentJson.html":{},"classes/CommonImage.html":{},"classes/CommonImageProcessingError.html":{},"interfaces/CommonImageScaleFactors.html":{},"classes/CommonImageScaleFactorsImpl.html":{},"interfaces/FileUploaderMsg.html":{}}}],["c",{"_index":3553,"title":{},"body":{"interfaces/ISpaEnvResponse.html":{}}}],["c04b81d",{"_index":5003,"title":{},"body":{"changelog.html":{}}}],["c054ca5",{"_index":5111,"title":{},"body":{"changelog.html":{}}}],["c122a2a",{"_index":4860,"title":{},"body":{"changelog.html":{}}}],["c2fd959",{"_index":4867,"title":{},"body":{"changelog.html":{}}}],["c347c39",{"_index":5044,"title":{},"body":{"changelog.html":{}}}],["c580225",{"_index":5014,"title":{},"body":{"changelog.html":{}}}],["c6067fd",{"_index":4750,"title":{},"body":{"changelog.html":{}}}],["c64c066",{"_index":4763,"title":{},"body":{"changelog.html":{}}}],["c6befdf",{"_index":5084,"title":{},"body":{"changelog.html":{}}}],["c78856a",{"_index":4777,"title":{},"body":{"changelog.html":{}}}],["c8cd6f4",{"_index":5149,"title":{},"body":{"changelog.html":{}}}],["c8fb31b",{"_index":4978,"title":{},"body":{"changelog.html":{}}}],["c91fef0",{"_index":4695,"title":{},"body":{"changelog.html":{}}}],["ca8bd7c",{"_index":5075,"title":{},"body":{"changelog.html":{}}}],["caf",{"_index":1839,"title":{},"body":{"interfaces/CountryList.html":{},"interfaces/ISpaEnvResponse.html":{}}}],["caicos",{"_index":2254,"title":{},"body":{"interfaces/CountryList.html":{}}}],["calculateprogresspercentage",{"_index":4475,"title":{},"body":{"components/WizardProgressBarComponent.html":{}}}],["calculates",{"_index":3941,"title":{},"body":{"classes/Person.html":{}}}],["caledonia",{"_index":2086,"title":{},"body":{"interfaces/CountryList.html":{}}}],["call",{"_index":1633,"title":{},"body":{"interfaces/CommonLogMessage.html":{},"interfaces/FileUploaderMsg.html":{},"interfaces/ISpaEnvResponse.html":{},"guards/LoadPageGuardService.html":{},"guards/RouteGuardService.html":{},"components/WizardProgressBarComponent.html":{},"changelog.html":{},"additional-documentation/local-development/schematics.html":{}}}],["callback",{"_index":3083,"title":{},"body":{"interfaces/FileUploaderMsg.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{}}}],["callback(imgel",{"_index":3071,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["called",{"_index":2942,"title":{},"body":{"interfaces/FileUploaderMsg.html":{},"interfaces/ISpaEnvResponse.html":{}}}],["calling",{"_index":519,"title":{},"body":{"classes/AbstractTestPage.html":{},"interfaces/CommonAttachmentJson.html":{},"classes/CommonImage.html":{},"classes/CommonImageProcessingError.html":{},"interfaces/CommonImageScaleFactors.html":{},"classes/CommonImageScaleFactorsImpl.html":{},"interfaces/ISpaEnvResponse.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{}}}],["callout",{"_index":3618,"title":{},"body":{"interfaces/ISpaEnvResponse.html":{}}}],["calls",{"_index":5463,"title":{},"body":{"additional-documentation/local-development/schematics.html":{}}}],["cambodia",{"_index":1831,"title":{},"body":{"interfaces/CountryList.html":{}}}],["cameroon",{"_index":1833,"title":{},"body":{"interfaces/CountryList.html":{}}}],["can't",{"_index":2700,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["canactivate",{"_index":3657,"title":{},"body":{"guards/LoadPageGuardService.html":{},"guards/RouteGuardService.html":{}}}],["canactivate(route",{"_index":3672,"title":{},"body":{"guards/LoadPageGuardService.html":{},"guards/RouteGuardService.html":{}}}],["canactivatechild",{"_index":3658,"title":{},"body":{"guards/LoadPageGuardService.html":{},"guards/RouteGuardService.html":{}}}],["canactivatechild(next",{"_index":3677,"title":{},"body":{"guards/LoadPageGuardService.html":{},"guards/RouteGuardService.html":{}}}],["canada",{"_index":775,"title":{},"body":{"interfaces/AddrLabelList.html":{},"interfaces/CountryList.html":{},"interfaces/GeoAddressResult.html":{},"components/GeocoderInputComponent.html":{},"injectables/GeocoderService.html":{},"interfaces/Maxlengths.html":{},"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{},"interfaces/ReadOnlyFields.html":{},"changelog.html":{},"coverage.html":{},"license.html":{}}}],["canbypassguards",{"_index":362,"title":{},"body":{"injectables/AbstractPageGuardService.html":{},"injectables/AbstractPgCheckService.html":{},"injectables/CheckCompleteBaseService.html":{},"injectables/DefaultPageGuardService.html":{},"interfaces/PageListInterface.html":{}}}],["cancel",{"_index":2829,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["cancontinue",{"_index":15,"title":{},"body":{"classes/AbstractBaseForm.html":{},"classes/AbstractForm.html":{},"classes/AbstractReactForm.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{}}}],["canda",{"_index":3393,"title":{},"body":{"components/GeocoderInputComponent.html":{}}}],["candidates",{"_index":4689,"title":{},"body":{"changelog.html":{}}}],["cannavigatetopage",{"_index":3793,"title":{},"body":{"injectables/PageStateService.html":{}}}],["cannavigatetopage(path",{"_index":3798,"title":{},"body":{"injectables/PageStateService.html":{}}}],["cannavigatetourl",{"_index":363,"title":{},"body":{"injectables/AbstractPageGuardService.html":{},"injectables/DefaultPageGuardService.html":{}}}],["cannavigatetourl(url",{"_index":365,"title":{},"body":{"injectables/AbstractPageGuardService.html":{},"injectables/DefaultPageGuardService.html":{}}}],["cannotopen",{"_index":1470,"title":{},"body":{"interfaces/CommonAttachmentJson.html":{},"classes/CommonImage.html":{},"classes/CommonImageProcessingError.html":{},"interfaces/CommonImageScaleFactors.html":{},"classes/CommonImageScaleFactorsImpl.html":{},"miscellaneous/enumerations.html":{}}}],["cannotopenpdf",{"_index":1472,"title":{},"body":{"interfaces/CommonAttachmentJson.html":{},"classes/CommonImage.html":{},"classes/CommonImageProcessingError.html":{},"interfaces/CommonImageScaleFactors.html":{},"classes/CommonImageScaleFactorsImpl.html":{},"miscellaneous/enumerations.html":{}}}],["canvas",{"_index":2689,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["canvas.getcontext('2d",{"_index":3092,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["canvas.toblob((blob",{"_index":2976,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["cape",{"_index":1835,"title":{},"body":{"interfaces/CountryList.html":{}}}],["capitalize",{"_index":4808,"title":{},"body":{"changelog.html":{}}}],["captcha",{"_index":1160,"title":{},"body":{"injectables/CaptchaDataService.html":{},"modules/CaptchaModule.html":{},"injectables/ServerPayload.html":{},"changelog.html":{},"additional-documentation/getting-started.html":{}}}],["captcha'},{'name",{"_index":664,"title":{},"body":{"components/AccordionCommonComponent.html":{},"components/ButtonComponent.html":{},"components/ButtonGroupComponent.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"components/ConfirmTemplateComponent.html":{},"components/CoreBreadcrumbComponent.html":{},"components/DatepickerComponent.html":{},"components/DropdownComponent.html":{},"components/EmailComponent.html":{},"components/ErrorContainerComponent.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/FullNameComponent.html":{},"components/GeocoderInputComponent.html":{},"components/HeaderComponent.html":{},"components/NameComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"components/PhnComponent.html":{},"components/PhoneNumberComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"components/RadioComponent.html":{},"components/SampleModalComponent.html":{},"components/SinComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{},"components/XiconButtonComponent.html":{}}}],["captcha.component",{"_index":1195,"title":{},"body":{"modules/CaptchaModule.html":{}}}],["captcha/audio",{"_index":1167,"title":{},"body":{"injectables/CaptchaDataService.html":{},"injectables/ServerPayload.html":{}}}],["captcha_state",{"_index":5300,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["captchacomponent",{"_index":663,"title":{},"body":{"components/AccordionCommonComponent.html":{},"components/ButtonComponent.html":{},"components/ButtonGroupComponent.html":{},"modules/CaptchaModule.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"components/ConfirmTemplateComponent.html":{},"components/CoreBreadcrumbComponent.html":{},"components/DatepickerComponent.html":{},"components/DropdownComponent.html":{},"components/EmailComponent.html":{},"components/ErrorContainerComponent.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/FullNameComponent.html":{},"components/GeocoderInputComponent.html":{},"components/HeaderComponent.html":{},"components/NameComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"components/PhnComponent.html":{},"components/PhoneNumberComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"components/RadioComponent.html":{},"components/SampleModalComponent.html":{},"components/SinComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{},"components/XiconButtonComponent.html":{},"changelog.html":{},"coverage.html":{},"overview.html":{}}}],["captchadataservice",{"_index":1135,"title":{"injectables/CaptchaDataService.html":{}},"body":{"injectables/CaptchaDataService.html":{},"modules/CaptchaModule.html":{},"injectables/ServerPayload.html":{},"coverage.html":{},"overview.html":{}}}],["captchamodule",{"_index":1170,"title":{"modules/CaptchaModule.html":{}},"body":{"modules/CaptchaModule.html":{},"changelog.html":{},"modules.html":{},"overview.html":{},"additional-documentation/getting-started.html":{}}}],["capturefileinputelement",{"_index":3118,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["capturefileref",{"_index":2676,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["capturefilestream",{"_index":2841,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["care",{"_index":1635,"title":{},"body":{"interfaces/CommonLogMessage.html":{},"interfaces/ISpaEnvResponse.html":{}}}],["careful",{"_index":4490,"title":{},"body":{"components/WizardProgressBarComponent.html":{}}}],["case",{"_index":530,"title":{},"body":{"classes/AbstractTestPage.html":{},"interfaces/AddrLabelList.html":{},"classes/Container.html":{},"interfaces/FileUploaderMsg.html":{},"interfaces/Maxlengths.html":{},"interfaces/ReadOnlyFields.html":{},"interfaces/WizardProgressItem.html":{},"additional-documentation/local-development/components.html":{}}}],["cases",{"_index":1204,"title":{},"body":{"injectables/CheckCompleteBaseService.html":{},"interfaces/ISpaEnvResponse.html":{},"interfaces/PageListInterface.html":{},"components/PageSectionComponent.html":{},"components/PostalCodeComponent.html":{},"additional-documentation/getting-started.html":{}}}],["catch",{"_index":2604,"title":{},"body":{"interfaces/ErrorMessage.html":{},"components/WizardProgressBarComponent.html":{}}}],["catcherror",{"_index":300,"title":{},"body":{"classes/AbstractHttpService.html":{},"components/GeocoderInputComponent.html":{}}}],["catcherror(err",{"_index":3370,"title":{},"body":{"components/GeocoderInputComponent.html":{}}}],["categories",{"_index":5077,"title":{},"body":{"changelog.html":{}}}],["causes",{"_index":3046,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["cayman",{"_index":1838,"title":{},"body":{"interfaces/CountryList.html":{}}}],["cb65dc6",{"_index":5055,"title":{},"body":{"changelog.html":{}}}],["cbbfaa8",{"_index":4812,"title":{},"body":{"changelog.html":{}}}],["cc9910b",{"_index":4616,"title":{},"body":{"changelog.html":{}}}],["cck",{"_index":1851,"title":{},"body":{"interfaces/CountryList.html":{}}}],["cd",{"_index":2694,"title":{},"body":{"interfaces/FileUploaderMsg.html":{},"components/GeocoderInputComponent.html":{},"components/WizardProgressBarComponent.html":{},"additional-documentation/local-development/schematics.html":{}}}],["cd1cc3b",{"_index":4585,"title":{},"body":{"changelog.html":{}}}],["cdnformat",{"_index":4450,"title":{},"body":{"directives/ValidatePostalcodeDirective.html":{}}}],["cdnformat.test",{"_index":4454,"title":{},"body":{"directives/ValidatePostalcodeDirective.html":{}}}],["center",{"_index":1727,"title":{},"body":{"components/CoreBreadcrumbComponent.html":{}}}],["central",{"_index":1840,"title":{},"body":{"interfaces/CountryList.html":{}}}],["cf962bc",{"_index":4755,"title":{},"body":{"changelog.html":{}}}],["chaange",{"_index":4503,"title":{},"body":{"components/WizardProgressBarComponent.html":{}}}],["chad",{"_index":1844,"title":{},"body":{"interfaces/CountryList.html":{}}}],["chain",{"_index":3690,"title":{},"body":{"classes/MoHCommonLibraryError.html":{}}}],["chance",{"_index":4653,"title":{},"body":{"changelog.html":{}}}],["chanfges",{"_index":5505,"title":{},"body":{"additional-documentation/local-development/components.html":{}}}],["change",{"_index":180,"title":{},"body":{"classes/AbstractFormControl.html":{},"classes/Address.html":{},"components/CheckboxComponent.html":{},"interfaces/CommonAttachmentJson.html":{},"classes/CommonImage.html":{},"classes/CommonImageProcessingError.html":{},"interfaces/CommonImageScaleFactors.html":{},"classes/CommonImageScaleFactorsImpl.html":{},"interfaces/CountryList.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"interfaces/FileUploaderMsg.html":{},"components/FormActionBarComponent.html":{},"components/GeocoderInputComponent.html":{},"components/NameComponent.html":{},"components/PostalCodeComponent.html":{},"components/WizardProgressBarComponent.html":{},"components/XiconButtonComponent.html":{},"changelog.html":{},"todo.html":{},"additional-documentation/local-development/schematics.html":{}}}],["changed",{"_index":2316,"title":{},"body":{"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"interfaces/FileUploaderMsg.html":{},"components/SinComponent.html":{},"changelog.html":{}}}],["changedetection",{"_index":4470,"title":{},"body":{"components/WizardProgressBarComponent.html":{}}}],["changedetectionstrategy",{"_index":4500,"title":{},"body":{"components/WizardProgressBarComponent.html":{}}}],["changedetectionstrategy.onpush",{"_index":4471,"title":{},"body":{"components/WizardProgressBarComponent.html":{}}}],["changedetectorref",{"_index":2615,"title":{},"body":{"interfaces/FileUploaderMsg.html":{},"components/FullNameComponent.html":{},"interfaces/FullNameErrorMsg.html":{},"components/GeocoderInputComponent.html":{},"components/WizardProgressBarComponent.html":{}}}],["changelog",{"_index":4567,"title":{"changelog.html":{}},"body":{"changelog.html":{}}}],["changelog.md",{"_index":5110,"title":{},"body":{"changelog.html":{}}}],["changes",{"_index":1069,"title":{},"body":{"components/ButtonComponent.html":{},"components/DatepickerComponent.html":{},"components/GeocoderInputComponent.html":{},"components/HeaderComponent.html":{},"components/PasswordComponent.html":{},"components/WizardProgressBarComponent.html":{},"changelog.html":{},"todo.html":{},"additional-documentation/local-development/schematics.html":{}}}],["changes.address",{"_index":3372,"title":{},"body":{"components/GeocoderInputComponent.html":{}}}],["changes.address.currentvalue",{"_index":3380,"title":{},"body":{"components/GeocoderInputComponent.html":{}}}],["changes.address.currentvalue._geocoderfulladdress",{"_index":3373,"title":{},"body":{"components/GeocoderInputComponent.html":{}}}],["changes.password",{"_index":3900,"title":{},"body":{"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{}}}],["changes['countrylist",{"_index":881,"title":{},"body":{"interfaces/AddrLabelList.html":{},"interfaces/Maxlengths.html":{},"interfaces/ReadOnlyFields.html":{}}}],["changes['countrylist'].currentvalue",{"_index":882,"title":{},"body":{"interfaces/AddrLabelList.html":{},"interfaces/Maxlengths.html":{},"interfaces/ReadOnlyFields.html":{}}}],["changes['images",{"_index":2730,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["changes['images'].currentvalue",{"_index":2731,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["changes['images'].currentvalue.length",{"_index":2732,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["changes['images'].previousvalue",{"_index":2733,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["changes['images'].previousvalue.length",{"_index":2734,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["changes['provincelist",{"_index":884,"title":{},"body":{"interfaces/AddrLabelList.html":{},"interfaces/Maxlengths.html":{},"interfaces/ReadOnlyFields.html":{}}}],["changes['provincelist'].currentvalue",{"_index":885,"title":{},"body":{"interfaces/AddrLabelList.html":{},"interfaces/Maxlengths.html":{},"interfaces/ReadOnlyFields.html":{}}}],["changing",{"_index":2432,"title":{},"body":{"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"changelog.html":{}}}],["character",{"_index":3232,"title":{},"body":{"components/FullNameComponent.html":{},"interfaces/FullNameErrorMsg.html":{},"components/PhnComponent.html":{},"components/SinComponent.html":{}}}],["characters",{"_index":1362,"title":{},"body":{"components/CityComponent.html":{},"interfaces/CountryList.html":{},"components/NameComponent.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{},"directives/ValidateBcPostalDirective.html":{},"directives/ValidateCityDirective.html":{},"directives/ValidateNameDirective.html":{},"directives/ValidatePostalcodeDirective.html":{},"directives/ValidateRegionDirective.html":{},"directives/ValidateStreetDirective.html":{},"changelog.html":{}}}],["che",{"_index":2220,"title":{},"body":{"interfaces/CountryList.html":{}}}],["check",{"_index":479,"title":{},"body":{"classes/AbstractTestPage.html":{},"injectables/CheckCompleteBaseService.html":{},"interfaces/CommonAttachmentJson.html":{},"classes/CommonImage.html":{},"classes/CommonImageProcessingError.html":{},"interfaces/CommonImageScaleFactors.html":{},"classes/CommonImageScaleFactorsImpl.html":{},"directives/DuplicateCheckDirective.html":{},"interfaces/FileUploaderMsg.html":{},"interfaces/PageListInterface.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"changelog.html":{},"additional-documentation/getting-started.html":{}}}],["check.directive",{"_index":4323,"title":{},"body":{"modules/SharedCoreModule.html":{}}}],["check.directive.ts",{"_index":2537,"title":{},"body":{"directives/DuplicateCheckDirective.html":{},"coverage.html":{}}}],["check.directive.ts:32",{"_index":2542,"title":{},"body":{"directives/DuplicateCheckDirective.html":{}}}],["check.directive.ts:34",{"_index":2545,"title":{},"body":{"directives/DuplicateCheckDirective.html":{}}}],["check.service",{"_index":1247,"title":{},"body":{"injectables/CheckCompleteBaseService.html":{},"interfaces/PageListInterface.html":{},"guards/RouteGuardService.html":{}}}],["check.service.ts",{"_index":369,"title":{},"body":{"injectables/AbstractPgCheckService.html":{},"coverage.html":{}}}],["check.service.ts:25",{"_index":376,"title":{},"body":{"injectables/AbstractPgCheckService.html":{}}}],["check.service.ts:26",{"_index":379,"title":{},"body":{"injectables/AbstractPgCheckService.html":{}}}],["check.service.ts:27",{"_index":380,"title":{},"body":{"injectables/AbstractPgCheckService.html":{}}}],["check.service.ts:28",{"_index":377,"title":{},"body":{"injectables/AbstractPgCheckService.html":{}}}],["check/duplicate",{"_index":2536,"title":{},"body":{"directives/DuplicateCheckDirective.html":{},"modules/SharedCoreModule.html":{},"coverage.html":{}}}],["checkbox",{"_index":459,"title":{},"body":{"classes/AbstractTestPage.html":{},"components/ButtonGroupComponent.html":{},"components/CheckboxComponent.html":{},"interfaces/ISpaEnvResponse.html":{},"changelog.html":{}}}],["checkbox'},{'name",{"_index":666,"title":{},"body":{"components/AccordionCommonComponent.html":{},"components/ButtonComponent.html":{},"components/ButtonGroupComponent.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"components/ConfirmTemplateComponent.html":{},"components/CoreBreadcrumbComponent.html":{},"components/DatepickerComponent.html":{},"components/DropdownComponent.html":{},"components/EmailComponent.html":{},"components/ErrorContainerComponent.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/FullNameComponent.html":{},"components/GeocoderInputComponent.html":{},"components/HeaderComponent.html":{},"components/NameComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"components/PhnComponent.html":{},"components/PhoneNumberComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"components/RadioComponent.html":{},"components/SampleModalComponent.html":{},"components/SinComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{},"components/XiconButtonComponent.html":{}}}],["checkbox.component.html",{"_index":1284,"title":{},"body":{"components/CheckboxComponent.html":{}}}],["checkbox.component.scss",{"_index":1283,"title":{},"body":{"components/CheckboxComponent.html":{}}}],["checkbox.component.ts",{"_index":5370,"title":{},"body":{"todo.html":{}}}],["checkboxcomponent",{"_index":665,"title":{"components/CheckboxComponent.html":{}},"body":{"components/AccordionCommonComponent.html":{},"components/ButtonComponent.html":{},"components/ButtonGroupComponent.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"components/ConfirmTemplateComponent.html":{},"components/CoreBreadcrumbComponent.html":{},"components/DatepickerComponent.html":{},"components/DropdownComponent.html":{},"components/EmailComponent.html":{},"components/ErrorContainerComponent.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/FullNameComponent.html":{},"components/GeocoderInputComponent.html":{},"components/HeaderComponent.html":{},"components/NameComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"components/PhnComponent.html":{},"components/PhoneNumberComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"components/RadioComponent.html":{},"components/SampleModalComponent.html":{},"modules/SharedCoreModule.html":{},"components/SinComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{},"components/XiconButtonComponent.html":{},"coverage.html":{},"overview.html":{}}}],["checkcompletebaseservice",{"_index":1199,"title":{"injectables/CheckCompleteBaseService.html":{}},"body":{"injectables/CheckCompleteBaseService.html":{},"interfaces/PageListInterface.html":{},"coverage.html":{}}}],["checkconsentmodal",{"_index":422,"title":{},"body":{"classes/AbstractTestPage.html":{}}}],["checkdigit",{"_index":4045,"title":{},"body":{"components/PhnComponent.html":{}}}],["checkforduplicates",{"_index":2548,"title":{},"body":{"directives/DuplicateCheckDirective.html":{},"coverage.html":{}}}],["checkimagedimensions(file",{"_index":3134,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["checkimageexists(file",{"_index":2714,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["checking",{"_index":1253,"title":{},"body":{"injectables/CheckCompleteBaseService.html":{},"interfaces/PageListInterface.html":{}}}],["checks",{"_index":466,"title":{},"body":{"classes/AbstractTestPage.html":{}}}],["checksum",{"_index":1512,"title":{},"body":{"interfaces/CommonAttachmentJson.html":{},"classes/CommonImage.html":{},"classes/CommonImageProcessingError.html":{},"interfaces/CommonImageScaleFactors.html":{},"classes/CommonImageScaleFactorsImpl.html":{}}}],["child",{"_index":3529,"title":{},"body":{"interfaces/ISpaEnvResponse.html":{},"components/PageSectionComponent.html":{}}}],["chile",{"_index":1846,"title":{},"body":{"interfaces/CountryList.html":{}}}],["china",{"_index":1848,"title":{},"body":{"interfaces/CountryList.html":{}}}],["chl",{"_index":1845,"title":{},"body":{"interfaces/CountryList.html":{}}}],["chn",{"_index":1847,"title":{},"body":{"interfaces/CountryList.html":{}}}],["choice",{"_index":576,"title":{},"body":{"classes/AbstractTestPage.html":{}}}],["christmas",{"_index":1850,"title":{},"body":{"interfaces/CountryList.html":{}}}],["circle",{"_index":4851,"title":{},"body":{"changelog.html":{}}}],["city",{"_index":761,"title":{},"body":{"interfaces/AddrLabelList.html":{},"classes/Address.html":{},"components/CityComponent.html":{},"interfaces/CountryList.html":{},"interfaces/GeoAddressResult.html":{},"injectables/GeocoderService.html":{},"interfaces/Maxlengths.html":{},"interfaces/ReadOnlyFields.html":{},"directives/ValidateCityDirective.html":{},"changelog.html":{}}}],["city'},{'name",{"_index":668,"title":{},"body":{"components/AccordionCommonComponent.html":{},"components/ButtonComponent.html":{},"components/ButtonGroupComponent.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"components/ConfirmTemplateComponent.html":{},"components/CoreBreadcrumbComponent.html":{},"components/DatepickerComponent.html":{},"components/DropdownComponent.html":{},"components/EmailComponent.html":{},"components/ErrorContainerComponent.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/FullNameComponent.html":{},"components/GeocoderInputComponent.html":{},"components/HeaderComponent.html":{},"components/NameComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"components/PhnComponent.html":{},"components/PhoneNumberComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"components/RadioComponent.html":{},"components/SampleModalComponent.html":{},"components/SinComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{},"components/XiconButtonComponent.html":{}}}],["city.component.html",{"_index":1322,"title":{},"body":{"components/CityComponent.html":{}}}],["city.component.scss",{"_index":1321,"title":{},"body":{"components/CityComponent.html":{}}}],["city.directive",{"_index":4329,"title":{},"body":{"modules/SharedCoreModule.html":{}}}],["city.directive.ts",{"_index":4434,"title":{},"body":{"directives/ValidateCityDirective.html":{},"coverage.html":{}}}],["city.directive.ts:26",{"_index":4436,"title":{},"body":{"directives/ValidateCityDirective.html":{}}}],["city/country/province",{"_index":5041,"title":{},"body":{"changelog.html":{}}}],["city_",{"_index":1331,"title":{},"body":{"components/CityComponent.html":{}}}],["citycomponent",{"_index":667,"title":{"components/CityComponent.html":{}},"body":{"components/AccordionCommonComponent.html":{},"components/ButtonComponent.html":{},"components/ButtonGroupComponent.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"components/ConfirmTemplateComponent.html":{},"components/CoreBreadcrumbComponent.html":{},"components/DatepickerComponent.html":{},"components/DropdownComponent.html":{},"components/EmailComponent.html":{},"components/ErrorContainerComponent.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/FullNameComponent.html":{},"components/GeocoderInputComponent.html":{},"components/HeaderComponent.html":{},"components/NameComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"components/PhnComponent.html":{},"components/PhoneNumberComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"components/RadioComponent.html":{},"components/SampleModalComponent.html":{},"modules/SharedCoreModule.html":{},"components/SinComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{},"components/XiconButtonComponent.html":{},"coverage.html":{},"overview.html":{}}}],["cityindex",{"_index":3294,"title":{},"body":{"interfaces/GeoAddressResult.html":{},"injectables/GeocoderService.html":{}}}],["civ",{"_index":1867,"title":{},"body":{"interfaces/CountryList.html":{}}}],["class",{"_index":0,"title":{"classes/AbstractBaseForm.html":{},"classes/AbstractForm.html":{},"classes/AbstractFormControl.html":{},"classes/AbstractHttpService.html":{},"classes/AbstractReactForm.html":{},"classes/AbstractTestPage.html":{},"classes/Address.html":{},"classes/Base.html":{},"classes/CommonImage.html":{},"classes/CommonImageProcessingError.html":{},"classes/CommonImageScaleFactorsImpl.html":{},"classes/Container.html":{},"classes/MoHCommonLibraryError.html":{},"classes/Person.html":{}},"body":{"classes/AbstractBaseForm.html":{},"classes/AbstractForm.html":{},"classes/AbstractFormControl.html":{},"classes/AbstractHttpService.html":{},"injectables/AbstractPageGuardService.html":{},"injectables/AbstractPgCheckService.html":{},"classes/AbstractReactForm.html":{},"classes/AbstractTestPage.html":{},"components/AccordionCommonComponent.html":{},"interfaces/AddrLabelList.html":{},"classes/Address.html":{},"classes/Base.html":{},"components/ButtonComponent.html":{},"components/ButtonGroupComponent.html":{},"injectables/CaptchaDataService.html":{},"modules/CaptchaModule.html":{},"injectables/CheckCompleteBaseService.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"interfaces/CommonAttachmentJson.html":{},"classes/CommonImage.html":{},"classes/CommonImageProcessingError.html":{},"interfaces/CommonImageScaleFactors.html":{},"classes/CommonImageScaleFactorsImpl.html":{},"interfaces/CommonLogMessage.html":{},"components/ConfirmTemplateComponent.html":{},"classes/Container.html":{},"components/CoreBreadcrumbComponent.html":{},"interfaces/CountryList.html":{},"interfaces/DateErrorMsg.html":{},"directives/DateFieldFormatDirective.html":{},"components/DatepickerComponent.html":{},"injectables/DefaultPageGuardService.html":{},"components/DropdownComponent.html":{},"directives/DuplicateCheckDirective.html":{},"components/EmailComponent.html":{},"components/ErrorContainerComponent.html":{},"interfaces/FileUploaderMsg.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/FullNameComponent.html":{},"interfaces/FullNameErrorMsg.html":{},"interfaces/GeoAddressResult.html":{},"components/GeocoderInputComponent.html":{},"injectables/GeocoderService.html":{},"components/HeaderComponent.html":{},"interfaces/IRadioItems.html":{},"interfaces/ISpaEnvResponse.html":{},"guards/LoadPageGuardService.html":{},"interfaces/Maxlengths.html":{},"classes/MoHCommonLibraryError.html":{},"components/NameComponent.html":{},"components/PageFrameworkComponent.html":{},"interfaces/PageList.html":{},"interfaces/PageListInterface.html":{},"components/PageSectionComponent.html":{},"injectables/PageStateService.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"classes/Person.html":{},"components/PhnComponent.html":{},"components/PhoneNumberComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{},"components/RadioComponent.html":{},"interfaces/ReadOnlyFields.html":{},"guards/RouteGuardService.html":{},"interfaces/SampleImageInterface.html":{},"components/SampleModalComponent.html":{},"injectables/ServerPayload.html":{},"modules/SharedCoreModule.html":{},"components/SinComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"directives/ValidateBcPostalDirective.html":{},"directives/ValidateCityDirective.html":{},"directives/ValidateNameDirective.html":{},"directives/ValidatePostalcodeDirective.html":{},"directives/ValidateRegionDirective.html":{},"directives/ValidateStreetDirective.html":{},"components/WizardProgressBarComponent.html":{},"interfaces/WizardProgressItem.html":{},"components/XiconButtonComponent.html":{},"changelog.html":{},"coverage.html":{},"additional-documentation/getting-started.html":{}}}],["classes",{"_index":2,"title":{},"body":{"classes/AbstractBaseForm.html":{},"classes/AbstractForm.html":{},"classes/AbstractFormControl.html":{},"classes/AbstractHttpService.html":{},"classes/AbstractReactForm.html":{},"classes/AbstractTestPage.html":{},"classes/Address.html":{},"classes/Base.html":{},"classes/CommonImage.html":{},"classes/CommonImageProcessingError.html":{},"classes/CommonImageScaleFactorsImpl.html":{},"classes/Container.html":{},"components/FormSubmitBarComponent.html":{},"classes/MoHCommonLibraryError.html":{},"classes/Person.html":{},"changelog.html":{},"overview.html":{},"additional-documentation/getting-started.html":{}}}],["classval",{"_index":473,"title":{},"body":{"classes/AbstractTestPage.html":{}}}],["clean",{"_index":4023,"title":{},"body":{"components/PhnComponent.html":{},"components/SinComponent.html":{},"changelog.html":{}}}],["clear",{"_index":864,"title":{},"body":{"interfaces/AddrLabelList.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"components/GeocoderInputComponent.html":{},"interfaces/Maxlengths.html":{},"interfaces/ReadOnlyFields.html":{},"changelog.html":{}}}],["clearable",{"_index":2519,"title":{},"body":{"components/DropdownComponent.html":{},"changelog.html":{}}}],["clearbutton",{"_index":2360,"title":{},"body":{"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{}}}],["clearcompletepages",{"_index":3794,"title":{},"body":{"injectables/PageStateService.html":{}}}],["cleardate",{"_index":2430,"title":{},"body":{"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{}}}],["cleared",{"_index":2379,"title":{},"body":{"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{}}}],["clears",{"_index":4797,"title":{},"body":{"changelog.html":{}}}],["cli",{"_index":5439,"title":{},"body":{"additional-documentation/local-development/schematics.html":{}}}],["click",{"_index":647,"title":{},"body":{"components/AccordionCommonComponent.html":{},"interfaces/FileUploaderMsg.html":{},"components/XiconButtonComponent.html":{},"changelog.html":{},"todo.html":{}}}],["click)=\"showfullsizeview",{"_index":4418,"title":{},"body":{"components/ThumbnailComponent.html":{}}}],["clickbutton",{"_index":423,"title":{},"body":{"classes/AbstractTestPage.html":{}}}],["clickbutton(classval",{"_index":471,"title":{},"body":{"classes/AbstractTestPage.html":{}}}],["clickcheckbox",{"_index":424,"title":{},"body":{"classes/AbstractTestPage.html":{}}}],["clickcheckbox(refnameval",{"_index":477,"title":{},"body":{"classes/AbstractTestPage.html":{}}}],["clickconsentmodalcontinue",{"_index":425,"title":{},"body":{"classes/AbstractTestPage.html":{}}}],["clickevent",{"_index":4546,"title":{},"body":{"components/XiconButtonComponent.html":{},"changelog.html":{},"todo.html":{}}}],["clicking",{"_index":443,"title":{},"body":{"classes/AbstractTestPage.html":{}}}],["clicklink",{"_index":426,"title":{},"body":{"classes/AbstractTestPage.html":{}}}],["clicklink(label",{"_index":485,"title":{},"body":{"classes/AbstractTestPage.html":{}}}],["clicks",{"_index":53,"title":{},"body":{"classes/AbstractBaseForm.html":{},"classes/AbstractForm.html":{},"classes/AbstractReactForm.html":{},"classes/AbstractTestPage.html":{},"interfaces/FileUploaderMsg.html":{}}}],["clickskiptocontent",{"_index":427,"title":{},"body":{"classes/AbstractTestPage.html":{}}}],["client",{"_index":267,"title":{},"body":{"classes/AbstractHttpService.html":{},"interfaces/CommonLogMessage.html":{},"injectables/GeocoderService.html":{},"interfaces/ISpaEnvResponse.html":{}}}],["clito",{"_index":5442,"title":{},"body":{"additional-documentation/local-development/schematics.html":{}}}],["close",{"_index":3540,"title":{},"body":{"interfaces/ISpaEnvResponse.html":{},"components/SampleModalComponent.html":{}}}],["closemodal",{"_index":4248,"title":{},"body":{"interfaces/SampleImageInterface.html":{},"components/SampleModalComponent.html":{}}}],["closes",{"_index":4839,"title":{},"body":{"changelog.html":{}}}],["cluster_captchamodule",{"_index":1174,"title":{},"body":{"modules/CaptchaModule.html":{},"overview.html":{}}}],["cluster_captchamodule_declarations",{"_index":1175,"title":{},"body":{"modules/CaptchaModule.html":{},"overview.html":{}}}],["cluster_captchamodule_exports",{"_index":1176,"title":{},"body":{"modules/CaptchaModule.html":{},"overview.html":{}}}],["cluster_captchamodule_providers",{"_index":1177,"title":{},"body":{"modules/CaptchaModule.html":{},"overview.html":{}}}],["cluster_sharedcoremodule",{"_index":4261,"title":{},"body":{"modules/SharedCoreModule.html":{},"overview.html":{}}}],["cluster_sharedcoremodule_declarations",{"_index":4262,"title":{},"body":{"modules/SharedCoreModule.html":{},"overview.html":{}}}],["cluster_sharedcoremodule_exports",{"_index":4263,"title":{},"body":{"modules/SharedCoreModule.html":{},"overview.html":{}}}],["cmr",{"_index":1832,"title":{},"body":{"interfaces/CountryList.html":{}}}],["cnt",{"_index":3752,"title":{},"body":{"interfaces/PageList.html":{},"injectables/PageStateService.html":{}}}],["coard",{"_index":5330,"title":{},"body":{"index.html":{}}}],["cocos",{"_index":1852,"title":{},"body":{"interfaces/CountryList.html":{}}}],["cod",{"_index":1860,"title":{},"body":{"interfaces/CountryList.html":{}}}],["code",{"_index":833,"title":{},"body":{"interfaces/AddrLabelList.html":{},"interfaces/CommonLogMessage.html":{},"interfaces/FileUploaderMsg.html":{},"components/HeaderComponent.html":{},"interfaces/ISpaEnvResponse.html":{},"interfaces/Maxlengths.html":{},"components/PostalCodeComponent.html":{},"interfaces/ReadOnlyFields.html":{},"directives/ValidateBcPostalDirective.html":{},"directives/ValidatePostalcodeDirective.html":{},"changelog.html":{},"additional-documentation/getting-started.html":{},"additional-documentation/local-development/schematics.html":{},"additional-documentation/local-development/components.html":{}}}],["code'},{'name",{"_index":714,"title":{},"body":{"components/AccordionCommonComponent.html":{},"components/ButtonComponent.html":{},"components/ButtonGroupComponent.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"components/ConfirmTemplateComponent.html":{},"components/CoreBreadcrumbComponent.html":{},"components/DatepickerComponent.html":{},"components/DropdownComponent.html":{},"components/EmailComponent.html":{},"components/ErrorContainerComponent.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/FullNameComponent.html":{},"components/GeocoderInputComponent.html":{},"components/HeaderComponent.html":{},"components/NameComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"components/PhnComponent.html":{},"components/PhoneNumberComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"components/RadioComponent.html":{},"components/SampleModalComponent.html":{},"components/SinComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{},"components/XiconButtonComponent.html":{}}}],["code.component",{"_index":4287,"title":{},"body":{"modules/SharedCoreModule.html":{}}}],["code.component.html",{"_index":4118,"title":{},"body":{"components/PostalCodeComponent.html":{}}}],["code.component.scss",{"_index":4117,"title":{},"body":{"components/PostalCodeComponent.html":{}}}],["code.component.ts",{"_index":4116,"title":{},"body":{"components/PostalCodeComponent.html":{},"coverage.html":{}}}],["code.component.ts:101",{"_index":4139,"title":{},"body":{"components/PostalCodeComponent.html":{}}}],["code.component.ts:105",{"_index":4137,"title":{},"body":{"components/PostalCodeComponent.html":{}}}],["code.component.ts:15",{"_index":4124,"title":{},"body":{"components/PostalCodeComponent.html":{}}}],["code.component.ts:16",{"_index":4122,"title":{},"body":{"components/PostalCodeComponent.html":{}}}],["code.component.ts:17",{"_index":4127,"title":{},"body":{"components/PostalCodeComponent.html":{}}}],["code.component.ts:18",{"_index":4126,"title":{},"body":{"components/PostalCodeComponent.html":{}}}],["code.component.ts:19",{"_index":4121,"title":{},"body":{"components/PostalCodeComponent.html":{}}}],["code.component.ts:20",{"_index":4123,"title":{},"body":{"components/PostalCodeComponent.html":{}}}],["code.component.ts:23",{"_index":4128,"title":{},"body":{"components/PostalCodeComponent.html":{}}}],["code.component.ts:29",{"_index":4151,"title":{},"body":{"components/PostalCodeComponent.html":{}}}],["code.component.ts:34",{"_index":4130,"title":{},"body":{"components/PostalCodeComponent.html":{}}}],["code.component.ts:35",{"_index":4129,"title":{},"body":{"components/PostalCodeComponent.html":{}}}],["code.component.ts:37",{"_index":4150,"title":{},"body":{"components/PostalCodeComponent.html":{}}}],["code.component.ts:38",{"_index":4149,"title":{},"body":{"components/PostalCodeComponent.html":{}}}],["code.component.ts:40",{"_index":4148,"title":{},"body":{"components/PostalCodeComponent.html":{}}}],["code.component.ts:47",{"_index":4141,"title":{},"body":{"components/PostalCodeComponent.html":{}}}],["code.component.ts:48",{"_index":4120,"title":{},"body":{"components/PostalCodeComponent.html":{}}}],["code.component.ts:50",{"_index":4142,"title":{},"body":{"components/PostalCodeComponent.html":{}}}],["code.component.ts:59",{"_index":4131,"title":{},"body":{"components/PostalCodeComponent.html":{}}}],["code.component.ts:63",{"_index":4133,"title":{},"body":{"components/PostalCodeComponent.html":{}}}],["code.component.ts:73",{"_index":4132,"title":{},"body":{"components/PostalCodeComponent.html":{}}}],["code.component.ts:78",{"_index":4140,"title":{},"body":{"components/PostalCodeComponent.html":{}}}],["code.component.ts:85",{"_index":4134,"title":{},"body":{"components/PostalCodeComponent.html":{}}}],["code.component.ts:90",{"_index":4135,"title":{},"body":{"components/PostalCodeComponent.html":{}}}],["code.component.ts:94",{"_index":4136,"title":{},"body":{"components/PostalCodeComponent.html":{}}}],["code/postal",{"_index":4115,"title":{},"body":{"components/PostalCodeComponent.html":{},"modules/SharedCoreModule.html":{},"coverage.html":{}}}],["code/validate",{"_index":4317,"title":{},"body":{"modules/SharedCoreModule.html":{},"directives/ValidateBcPostalDirective.html":{},"directives/ValidatePostalcodeDirective.html":{},"coverage.html":{}}}],["codes",{"_index":1688,"title":{},"body":{"components/ConfirmTemplateComponent.html":{}}}],["cog",{"_index":1858,"title":{},"body":{"interfaces/CountryList.html":{}}}],["cok",{"_index":1862,"title":{},"body":{"interfaces/CountryList.html":{}}}],["col",{"_index":1854,"title":{},"body":{"interfaces/CountryList.html":{}}}],["collected",{"_index":3549,"title":{},"body":{"interfaces/ISpaEnvResponse.html":{}}}],["collection",{"_index":462,"title":{},"body":{"classes/AbstractTestPage.html":{},"interfaces/ISpaEnvResponse.html":{},"additional-documentation/local-development/components.html":{}}}],["colombia",{"_index":1855,"title":{},"body":{"interfaces/CountryList.html":{}}}],["color",{"_index":4760,"title":{},"body":{"changelog.html":{}}}],["colour",{"_index":1073,"title":{},"body":{"components/ButtonComponent.html":{},"changelog.html":{},"todo.html":{}}}],["colours",{"_index":5027,"title":{},"body":{"changelog.html":{}}}],["columbia",{"_index":4147,"title":{},"body":{"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{},"license.html":{}}}],["column",{"_index":3733,"title":{},"body":{"components/PageFrameworkComponent.html":{}}}],["com",{"_index":1856,"title":{},"body":{"interfaces/CountryList.html":{}}}],["come",{"_index":3545,"title":{},"body":{"interfaces/ISpaEnvResponse.html":{},"components/PageFrameworkComponent.html":{}}}],["comes",{"_index":4955,"title":{},"body":{"changelog.html":{}}}],["command",{"_index":4687,"title":{},"body":{"changelog.html":{},"additional-documentation/local-development/schematics.html":{},"additional-documentation/local-development/components.html":{}}}],["commas",{"_index":3293,"title":{},"body":{"interfaces/GeoAddressResult.html":{},"injectables/GeocoderService.html":{}}}],["commit",{"_index":4887,"title":{},"body":{"changelog.html":{}}}],["committed",{"_index":4976,"title":{},"body":{"changelog.html":{}}}],["commmon",{"_index":5065,"title":{},"body":{"changelog.html":{},"additional-documentation/local-development/components.html":{}}}],["common",{"_index":407,"title":{},"body":{"classes/AbstractTestPage.html":{},"components/AccordionCommonComponent.html":{},"interfaces/AddrLabelList.html":{},"components/ButtonComponent.html":{},"components/ButtonGroupComponent.html":{},"modules/CaptchaModule.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"components/ConfirmTemplateComponent.html":{},"components/CoreBreadcrumbComponent.html":{},"interfaces/CountryList.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"components/DropdownComponent.html":{},"components/EmailComponent.html":{},"components/ErrorContainerComponent.html":{},"interfaces/FileUploaderMsg.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/FullNameComponent.html":{},"interfaces/FullNameErrorMsg.html":{},"components/GeocoderInputComponent.html":{},"components/HeaderComponent.html":{},"interfaces/IRadioItems.html":{},"interfaces/ISpaEnvResponse.html":{},"interfaces/Maxlengths.html":{},"components/NameComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"components/PhnComponent.html":{},"components/PhoneNumberComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{},"components/RadioComponent.html":{},"interfaces/ReadOnlyFields.html":{},"interfaces/SampleImageInterface.html":{},"components/SampleModalComponent.html":{},"components/SinComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{},"components/XiconButtonComponent.html":{},"changelog.html":{},"index.html":{},"todo.html":{},"additional-documentation/getting-started.html":{},"additional-documentation/local-development/schematics.html":{},"additional-documentation/local-development/components.html":{}}}],["commonattachmentjson",{"_index":1454,"title":{"interfaces/CommonAttachmentJson.html":{}},"body":{"interfaces/CommonAttachmentJson.html":{},"classes/CommonImage.html":{},"classes/CommonImageProcessingError.html":{},"interfaces/CommonImageScaleFactors.html":{},"classes/CommonImageScaleFactorsImpl.html":{},"coverage.html":{}}}],["commondatefieldformat",{"_index":2440,"title":{},"body":{"directives/DateFieldFormatDirective.html":{}}}],["commondatefieldformat]'},{'name",{"_index":736,"title":{},"body":{"components/AccordionCommonComponent.html":{},"components/ButtonComponent.html":{},"components/ButtonGroupComponent.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"components/ConfirmTemplateComponent.html":{},"components/CoreBreadcrumbComponent.html":{},"components/DatepickerComponent.html":{},"components/DropdownComponent.html":{},"components/EmailComponent.html":{},"components/ErrorContainerComponent.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/FullNameComponent.html":{},"components/GeocoderInputComponent.html":{},"components/HeaderComponent.html":{},"components/NameComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"components/PhnComponent.html":{},"components/PhoneNumberComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"components/RadioComponent.html":{},"components/SampleModalComponent.html":{},"components/SinComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{},"components/XiconButtonComponent.html":{}}}],["commonduplicatecheck",{"_index":2539,"title":{},"body":{"directives/DuplicateCheckDirective.html":{},"coverage.html":{}}}],["commonduplicatecheck]'},{'name",{"_index":738,"title":{},"body":{"components/AccordionCommonComponent.html":{},"components/ButtonComponent.html":{},"components/ButtonGroupComponent.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"components/ConfirmTemplateComponent.html":{},"components/CoreBreadcrumbComponent.html":{},"components/DatepickerComponent.html":{},"components/DropdownComponent.html":{},"components/EmailComponent.html":{},"components/ErrorContainerComponent.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/FullNameComponent.html":{},"components/GeocoderInputComponent.html":{},"components/HeaderComponent.html":{},"components/NameComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"components/PhnComponent.html":{},"components/PhoneNumberComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"components/RadioComponent.html":{},"components/SampleModalComponent.html":{},"components/SinComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{},"components/XiconButtonComponent.html":{}}}],["commonformactionbar",{"_index":3729,"title":{},"body":{"components/PageFrameworkComponent.html":{}}}],["commongeocoderinput",{"_index":4708,"title":{},"body":{"changelog.html":{}}}],["commonimage",{"_index":278,"title":{"classes/CommonImage.html":{}},"body":{"classes/AbstractHttpService.html":{},"interfaces/CommonAttachmentJson.html":{},"classes/CommonImage.html":{},"classes/CommonImageProcessingError.html":{},"interfaces/CommonImageScaleFactors.html":{},"classes/CommonImageScaleFactorsImpl.html":{},"interfaces/FileUploaderMsg.html":{},"injectables/GeocoderService.html":{},"components/ThumbnailComponent.html":{},"changelog.html":{},"coverage.html":{},"additional-documentation/getting-started.html":{}}}],["commonimageerror",{"_index":1464,"title":{},"body":{"interfaces/CommonAttachmentJson.html":{},"classes/CommonImage.html":{},"classes/CommonImageProcessingError.html":{},"interfaces/CommonImageScaleFactors.html":{},"classes/CommonImageScaleFactorsImpl.html":{},"interfaces/FileUploaderMsg.html":{},"miscellaneous/enumerations.html":{},"additional-documentation/getting-started.html":{}}}],["commonimageerror.cannotopen",{"_index":2881,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["commonimageerror.cannotopenpdf",{"_index":2886,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["commonimageerror.pdfnotsupported",{"_index":3107,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["commonimageerror.toobig",{"_index":2878,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["commonimageprocessingerror",{"_index":1473,"title":{"classes/CommonImageProcessingError.html":{}},"body":{"interfaces/CommonAttachmentJson.html":{},"classes/CommonImage.html":{},"classes/CommonImageProcessingError.html":{},"interfaces/CommonImageScaleFactors.html":{},"classes/CommonImageScaleFactorsImpl.html":{},"interfaces/FileUploaderMsg.html":{},"coverage.html":{}}}],["commonimageprocessingerror(commonimageerror.cannotopen",{"_index":3077,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["commonimageprocessingerror(commonimageerror.cannotopenpdf",{"_index":2930,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["commonimageprocessingerror(commonimageerror.toobig",{"_index":3020,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["commonimagescalefactors",{"_index":1519,"title":{"interfaces/CommonImageScaleFactors.html":{}},"body":{"interfaces/CommonAttachmentJson.html":{},"classes/CommonImage.html":{},"classes/CommonImageProcessingError.html":{},"interfaces/CommonImageScaleFactors.html":{},"classes/CommonImageScaleFactorsImpl.html":{},"interfaces/FileUploaderMsg.html":{},"coverage.html":{}}}],["commonimagescalefactorsimpl",{"_index":1523,"title":{"classes/CommonImageScaleFactorsImpl.html":{}},"body":{"interfaces/CommonAttachmentJson.html":{},"classes/CommonImage.html":{},"classes/CommonImageProcessingError.html":{},"interfaces/CommonImageScaleFactors.html":{},"classes/CommonImageScaleFactorsImpl.html":{},"interfaces/FileUploaderMsg.html":{},"coverage.html":{},"additional-documentation/getting-started.html":{}}}],["commonimagescalefactorsimpl(1",{"_index":2852,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["commonlogevents",{"_index":1562,"title":{},"body":{"interfaces/CommonLogMessage.html":{},"changelog.html":{},"miscellaneous/enumerations.html":{}}}],["commonlogevents.error",{"_index":1611,"title":{},"body":{"interfaces/CommonLogMessage.html":{}}}],["commonlogger",{"_index":1569,"title":{},"body":{"interfaces/CommonLogMessage.html":{},"interfaces/ISpaEnvResponse.html":{},"changelog.html":{},"coverage.html":{}}}],["commonlogmessage",{"_index":1554,"title":{"interfaces/CommonLogMessage.html":{}},"body":{"interfaces/CommonLogMessage.html":{},"coverage.html":{}}}],["commonmodule",{"_index":1197,"title":{},"body":{"modules/CaptchaModule.html":{},"modules/SharedCoreModule.html":{}}}],["commonphnvalidation",{"_index":4613,"title":{},"body":{"changelog.html":{}}}],["commonvalidatebcpostal",{"_index":4428,"title":{},"body":{"directives/ValidateBcPostalDirective.html":{},"coverage.html":{}}}],["commonvalidatebcpostal]'},{'name",{"_index":740,"title":{},"body":{"components/AccordionCommonComponent.html":{},"components/ButtonComponent.html":{},"components/ButtonGroupComponent.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"components/ConfirmTemplateComponent.html":{},"components/CoreBreadcrumbComponent.html":{},"components/DatepickerComponent.html":{},"components/DropdownComponent.html":{},"components/EmailComponent.html":{},"components/ErrorContainerComponent.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/FullNameComponent.html":{},"components/GeocoderInputComponent.html":{},"components/HeaderComponent.html":{},"components/NameComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"components/PhnComponent.html":{},"components/PhoneNumberComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"components/RadioComponent.html":{},"components/SampleModalComponent.html":{},"components/SinComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{},"components/XiconButtonComponent.html":{}}}],["commonvalidatecity",{"_index":4435,"title":{},"body":{"directives/ValidateCityDirective.html":{},"coverage.html":{}}}],["commonvalidatecity]'},{'name",{"_index":742,"title":{},"body":{"components/AccordionCommonComponent.html":{},"components/ButtonComponent.html":{},"components/ButtonGroupComponent.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"components/ConfirmTemplateComponent.html":{},"components/CoreBreadcrumbComponent.html":{},"components/DatepickerComponent.html":{},"components/DropdownComponent.html":{},"components/EmailComponent.html":{},"components/ErrorContainerComponent.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/FullNameComponent.html":{},"components/GeocoderInputComponent.html":{},"components/HeaderComponent.html":{},"components/NameComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"components/PhnComponent.html":{},"components/PhoneNumberComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"components/RadioComponent.html":{},"components/SampleModalComponent.html":{},"components/SinComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{},"components/XiconButtonComponent.html":{}}}],["commonvalidatename",{"_index":4441,"title":{},"body":{"directives/ValidateNameDirective.html":{},"coverage.html":{}}}],["commonvalidatename]'},{'name",{"_index":744,"title":{},"body":{"components/AccordionCommonComponent.html":{},"components/ButtonComponent.html":{},"components/ButtonGroupComponent.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"components/ConfirmTemplateComponent.html":{},"components/CoreBreadcrumbComponent.html":{},"components/DatepickerComponent.html":{},"components/DropdownComponent.html":{},"components/EmailComponent.html":{},"components/ErrorContainerComponent.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/FullNameComponent.html":{},"components/GeocoderInputComponent.html":{},"components/HeaderComponent.html":{},"components/NameComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"components/PhnComponent.html":{},"components/PhoneNumberComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"components/RadioComponent.html":{},"components/SampleModalComponent.html":{},"components/SinComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{},"components/XiconButtonComponent.html":{}}}],["commonvalidatephone",{"_index":4661,"title":{},"body":{"changelog.html":{}}}],["commonvalidatepostalcode",{"_index":4444,"title":{},"body":{"directives/ValidatePostalcodeDirective.html":{},"coverage.html":{}}}],["commonvalidatepostalcode]'},{'name",{"_index":746,"title":{},"body":{"components/AccordionCommonComponent.html":{},"components/ButtonComponent.html":{},"components/ButtonGroupComponent.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"components/ConfirmTemplateComponent.html":{},"components/CoreBreadcrumbComponent.html":{},"components/DatepickerComponent.html":{},"components/DropdownComponent.html":{},"components/EmailComponent.html":{},"components/ErrorContainerComponent.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/FullNameComponent.html":{},"components/GeocoderInputComponent.html":{},"components/HeaderComponent.html":{},"components/NameComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"components/PhnComponent.html":{},"components/PhoneNumberComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"components/RadioComponent.html":{},"components/SampleModalComponent.html":{},"components/SinComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{},"components/XiconButtonComponent.html":{}}}],["commonvalidateregion",{"_index":4462,"title":{},"body":{"directives/ValidateRegionDirective.html":{},"coverage.html":{}}}],["commonvalidateregion]'},{'name",{"_index":748,"title":{},"body":{"components/AccordionCommonComponent.html":{},"components/ButtonComponent.html":{},"components/ButtonGroupComponent.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"components/ConfirmTemplateComponent.html":{},"components/CoreBreadcrumbComponent.html":{},"components/DatepickerComponent.html":{},"components/DropdownComponent.html":{},"components/EmailComponent.html":{},"components/ErrorContainerComponent.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/FullNameComponent.html":{},"components/GeocoderInputComponent.html":{},"components/HeaderComponent.html":{},"components/NameComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"components/PhnComponent.html":{},"components/PhoneNumberComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"components/RadioComponent.html":{},"components/SampleModalComponent.html":{},"components/SinComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{},"components/XiconButtonComponent.html":{}}}],["commonvalidatesin",{"_index":4617,"title":{},"body":{"changelog.html":{}}}],["commonvalidatestreet",{"_index":750,"title":{},"body":{"components/AccordionCommonComponent.html":{},"components/ButtonComponent.html":{},"components/ButtonGroupComponent.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"components/ConfirmTemplateComponent.html":{},"components/CoreBreadcrumbComponent.html":{},"components/DatepickerComponent.html":{},"components/DropdownComponent.html":{},"components/EmailComponent.html":{},"components/ErrorContainerComponent.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/FullNameComponent.html":{},"components/GeocoderInputComponent.html":{},"components/HeaderComponent.html":{},"components/NameComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"components/PhnComponent.html":{},"components/PhoneNumberComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"components/RadioComponent.html":{},"components/SampleModalComponent.html":{},"components/SinComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"directives/ValidateStreetDirective.html":{},"components/WizardProgressBarComponent.html":{},"components/XiconButtonComponent.html":{},"coverage.html":{}}}],["comoros",{"_index":1857,"title":{},"body":{"interfaces/CountryList.html":{}}}],["compare",{"_index":4046,"title":{},"body":{"components/PhnComponent.html":{}}}],["compat",{"_index":3049,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["compatibilty",{"_index":1027,"title":{},"body":{"classes/Address.html":{}}}],["compatible",{"_index":4907,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["compilation",{"_index":5447,"title":{},"body":{"additional-documentation/local-development/schematics.html":{}}}],["compile",{"_index":5007,"title":{},"body":{"changelog.html":{},"additional-documentation/local-development/schematics.html":{}}}],["compiles",{"_index":5417,"title":{},"body":{"additional-documentation/local-development/schematics.html":{}}}],["compiliation",{"_index":2710,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["compiling",{"_index":5411,"title":{},"body":{"additional-documentation/local-development/schematics.html":{}}}],["complete",{"_index":444,"title":{},"body":{"classes/AbstractTestPage.html":{},"classes/Address.html":{},"injectables/CheckCompleteBaseService.html":{},"interfaces/FileUploaderMsg.html":{},"interfaces/ISpaEnvResponse.html":{},"interfaces/PageList.html":{},"interfaces/PageListInterface.html":{},"injectables/PageStateService.html":{},"coverage.html":{}}}],["completed",{"_index":1228,"title":{},"body":{"injectables/CheckCompleteBaseService.html":{},"interfaces/FileUploaderMsg.html":{},"interfaces/PageListInterface.html":{},"guards/RouteGuardService.html":{}}}],["completeness",{"_index":1254,"title":{},"body":{"injectables/CheckCompleteBaseService.html":{},"interfaces/PageListInterface.html":{}}}],["complex",{"_index":1724,"title":{},"body":{"components/CoreBreadcrumbComponent.html":{}}}],["compliance",{"_index":5336,"title":{},"body":{"license.html":{}}}],["complicated",{"_index":3473,"title":{},"body":{"components/HeaderComponent.html":{}}}],["compodoccrc.json",{"_index":5148,"title":{},"body":{"changelog.html":{}}}],["component",{"_index":175,"title":{"components/AccordionCommonComponent.html":{},"components/ButtonComponent.html":{},"components/ButtonGroupComponent.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"components/ConfirmTemplateComponent.html":{},"components/CoreBreadcrumbComponent.html":{},"components/DatepickerComponent.html":{},"components/DropdownComponent.html":{},"components/EmailComponent.html":{},"components/ErrorContainerComponent.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/FullNameComponent.html":{},"components/GeocoderInputComponent.html":{},"components/HeaderComponent.html":{},"components/NameComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"components/PhnComponent.html":{},"components/PhoneNumberComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"components/RadioComponent.html":{},"components/SampleModalComponent.html":{},"components/SinComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{},"components/XiconButtonComponent.html":{}},"body":{"classes/AbstractFormControl.html":{},"classes/AbstractTestPage.html":{},"components/AccordionCommonComponent.html":{},"interfaces/AddrLabelList.html":{},"components/ButtonComponent.html":{},"components/ButtonGroupComponent.html":{},"modules/CaptchaModule.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"components/ConfirmTemplateComponent.html":{},"components/CoreBreadcrumbComponent.html":{},"interfaces/CountryList.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"components/DropdownComponent.html":{},"components/EmailComponent.html":{},"components/ErrorContainerComponent.html":{},"interfaces/FileUploaderMsg.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/FullNameComponent.html":{},"interfaces/FullNameErrorMsg.html":{},"components/GeocoderInputComponent.html":{},"components/HeaderComponent.html":{},"interfaces/IRadioItems.html":{},"interfaces/ISpaEnvResponse.html":{},"interfaces/Maxlengths.html":{},"components/NameComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"components/PhnComponent.html":{},"components/PhoneNumberComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{},"components/RadioComponent.html":{},"interfaces/ReadOnlyFields.html":{},"interfaces/SampleImageInterface.html":{},"components/SampleModalComponent.html":{},"components/SinComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{},"components/XiconButtonComponent.html":{},"changelog.html":{},"coverage.html":{},"additional-documentation/local-development/schematics.html":{},"additional-documentation/local-development/components.html":{}}}],["component's",{"_index":3606,"title":{},"body":{"interfaces/ISpaEnvResponse.html":{}}}],["component_template",{"_index":655,"title":{},"body":{"components/AccordionCommonComponent.html":{},"components/ButtonComponent.html":{},"components/ButtonGroupComponent.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"components/ConfirmTemplateComponent.html":{},"components/CoreBreadcrumbComponent.html":{},"components/DatepickerComponent.html":{},"components/DropdownComponent.html":{},"components/EmailComponent.html":{},"components/ErrorContainerComponent.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/FullNameComponent.html":{},"components/GeocoderInputComponent.html":{},"components/HeaderComponent.html":{},"components/NameComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"components/PhnComponent.html":{},"components/PhoneNumberComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"components/RadioComponent.html":{},"components/SampleModalComponent.html":{},"components/SinComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{},"components/XiconButtonComponent.html":{}}}],["componentlist",{"_index":4342,"title":{},"body":{"modules/SharedCoreModule.html":{},"coverage.html":{}}}],["components",{"_index":140,"title":{"additional-documentation/local-development/components.html":{}},"body":{"classes/AbstractFormControl.html":{},"classes/AbstractTestPage.html":{},"components/AccordionCommonComponent.html":{},"classes/Base.html":{},"components/ButtonComponent.html":{},"components/ButtonGroupComponent.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"components/ConfirmTemplateComponent.html":{},"components/CoreBreadcrumbComponent.html":{},"components/DatepickerComponent.html":{},"components/DropdownComponent.html":{},"components/EmailComponent.html":{},"components/ErrorContainerComponent.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/FullNameComponent.html":{},"components/GeocoderInputComponent.html":{},"components/HeaderComponent.html":{},"components/NameComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"classes/Person.html":{},"components/PhnComponent.html":{},"components/PhoneNumberComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"components/RadioComponent.html":{},"components/SampleModalComponent.html":{},"components/SinComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{},"components/XiconButtonComponent.html":{},"changelog.html":{},"index.html":{},"overview.html":{},"todo.html":{},"additional-documentation/getting-started.html":{},"additional-documentation/local-development.html":{},"additional-documentation/local-development/schematics.html":{},"additional-documentation/local-development/components.html":{}}}],["components/accordion/accordion.component",{"_index":4309,"title":{},"body":{"modules/SharedCoreModule.html":{}}}],["components/address/address.component",{"_index":4293,"title":{},"body":{"modules/SharedCoreModule.html":{}}}],["components/button",{"_index":4297,"title":{},"body":{"modules/SharedCoreModule.html":{}}}],["components/button/button.component",{"_index":4299,"title":{},"body":{"modules/SharedCoreModule.html":{}}}],["components/checkbox/checkbox.component",{"_index":4300,"title":{},"body":{"modules/SharedCoreModule.html":{}}}],["components/city/city.component",{"_index":4295,"title":{},"body":{"modules/SharedCoreModule.html":{}}}],["components/city/validate",{"_index":4328,"title":{},"body":{"modules/SharedCoreModule.html":{}}}],["components/confirm",{"_index":4336,"title":{},"body":{"modules/SharedCoreModule.html":{}}}],["components/consent",{"_index":4301,"title":{},"body":{"modules/SharedCoreModule.html":{}}}],["components/core",{"_index":4266,"title":{},"body":{"modules/SharedCoreModule.html":{}}}],["components/country/country.component",{"_index":3261,"title":{},"body":{"interfaces/GeoAddressResult.html":{},"injectables/GeocoderService.html":{},"modules/SharedCoreModule.html":{}}}],["components/date/date",{"_index":4340,"title":{},"body":{"modules/SharedCoreModule.html":{}}}],["components/date/date.component",{"_index":4279,"title":{},"body":{"modules/SharedCoreModule.html":{}}}],["components/datepicker/datepicker.component",{"_index":4280,"title":{},"body":{"modules/SharedCoreModule.html":{}}}],["components/dropdown/dropdown.component",{"_index":4289,"title":{},"body":{"modules/SharedCoreModule.html":{}}}],["components/duplicate",{"_index":4322,"title":{},"body":{"modules/SharedCoreModule.html":{}}}],["components/email/email.component",{"_index":4335,"title":{},"body":{"modules/SharedCoreModule.html":{}}}],["components/error",{"_index":4324,"title":{},"body":{"modules/SharedCoreModule.html":{}}}],["components/file",{"_index":4282,"title":{},"body":{"modules/SharedCoreModule.html":{}}}],["components/form",{"_index":4268,"title":{},"body":{"modules/SharedCoreModule.html":{}}}],["components/full",{"_index":4314,"title":{},"body":{"modules/SharedCoreModule.html":{}}}],["components/geocoder",{"_index":4338,"title":{},"body":{"modules/SharedCoreModule.html":{}}}],["components/header/header.component",{"_index":4316,"title":{},"body":{"modules/SharedCoreModule.html":{}}}],["components/models",{"_index":4351,"title":{},"body":{"interfaces/SimpleDate.html":{}}}],["components/name/name.component",{"_index":4303,"title":{},"body":{"modules/SharedCoreModule.html":{}}}],["components/name/validate",{"_index":4310,"title":{},"body":{"modules/SharedCoreModule.html":{}}}],["components/page",{"_index":4270,"title":{},"body":{"modules/SharedCoreModule.html":{}}}],["components/password/password.component",{"_index":4272,"title":{},"body":{"modules/SharedCoreModule.html":{}}}],["components/phn/phn.component",{"_index":4313,"title":{},"body":{"modules/SharedCoreModule.html":{}}}],["components/phone",{"_index":4304,"title":{},"body":{"modules/SharedCoreModule.html":{}}}],["components/postal",{"_index":4286,"title":{},"body":{"modules/SharedCoreModule.html":{}}}],["components/province/province.component",{"_index":4294,"title":{},"body":{"modules/SharedCoreModule.html":{}}}],["components/radio/radio.component",{"_index":4306,"title":{},"body":{"modules/SharedCoreModule.html":{}}}],["components/sample",{"_index":4334,"title":{},"body":{"modules/SharedCoreModule.html":{}}}],["components/sin/sin.component",{"_index":4312,"title":{},"body":{"modules/SharedCoreModule.html":{}}}],["components/street/street.component",{"_index":4296,"title":{},"body":{"modules/SharedCoreModule.html":{}}}],["components/street/validate",{"_index":4326,"title":{},"body":{"modules/SharedCoreModule.html":{}}}],["components/thumbnail/thumbnail.component",{"_index":4284,"title":{},"body":{"modules/SharedCoreModule.html":{}}}],["components/toggle/toggle.component",{"_index":4292,"title":{},"body":{"modules/SharedCoreModule.html":{}}}],["components/validate",{"_index":4330,"title":{},"body":{"modules/SharedCoreModule.html":{}}}],["components/wizard",{"_index":4273,"title":{},"body":{"modules/SharedCoreModule.html":{}}}],["components/xicon",{"_index":4319,"title":{},"body":{"modules/SharedCoreModule.html":{}}}],["compose",{"_index":5462,"title":{},"body":{"additional-documentation/local-development/schematics.html":{}}}],["computer",{"_index":3535,"title":{},"body":{"interfaces/ISpaEnvResponse.html":{}}}],["computers",{"_index":5365,"title":{},"body":{"todo.html":{}}}],["concatenate",{"_index":4837,"title":{},"body":{"changelog.html":{}}}],["concatenated",{"_index":3962,"title":{},"body":{"classes/Person.html":{}}}],["concatenates",{"_index":3952,"title":{},"body":{"classes/Person.html":{}}}],["conditions",{"_index":5347,"title":{},"body":{"license.html":{}}}],["config",{"_index":5147,"title":{},"body":{"changelog.html":{}}}],["config.ts",{"_index":5263,"title":{},"body":{"coverage.html":{}}}],["configurable",{"_index":5460,"title":{},"body":{"additional-documentation/local-development/schematics.html":{}}}],["configuration",{"_index":1728,"title":{},"body":{"components/CoreBreadcrumbComponent.html":{}}}],["configure",{"_index":1632,"title":{},"body":{"interfaces/CommonLogMessage.html":{},"guards/LoadPageGuardService.html":{},"guards/RouteGuardService.html":{}}}],["configured",{"_index":1187,"title":{},"body":{"modules/CaptchaModule.html":{},"changelog.html":{}}}],["configuring",{"_index":5498,"title":{},"body":{"additional-documentation/local-development/components.html":{}}}],["confirm",{"_index":670,"title":{},"body":{"components/AccordionCommonComponent.html":{},"components/ButtonComponent.html":{},"components/ButtonGroupComponent.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"components/ConfirmTemplateComponent.html":{},"components/CoreBreadcrumbComponent.html":{},"components/DatepickerComponent.html":{},"components/DropdownComponent.html":{},"directives/DuplicateCheckDirective.html":{},"components/EmailComponent.html":{},"components/ErrorContainerComponent.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/FullNameComponent.html":{},"components/GeocoderInputComponent.html":{},"components/HeaderComponent.html":{},"components/NameComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"components/PhnComponent.html":{},"components/PhoneNumberComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"components/RadioComponent.html":{},"components/SampleModalComponent.html":{},"components/SinComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{},"components/XiconButtonComponent.html":{},"changelog.html":{}}}],["confirmation",{"_index":4723,"title":{},"body":{"changelog.html":{}}}],["confirmtemplatecomponent",{"_index":669,"title":{"components/ConfirmTemplateComponent.html":{}},"body":{"components/AccordionCommonComponent.html":{},"components/ButtonComponent.html":{},"components/ButtonGroupComponent.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"components/ConfirmTemplateComponent.html":{},"components/CoreBreadcrumbComponent.html":{},"components/DatepickerComponent.html":{},"components/DropdownComponent.html":{},"components/EmailComponent.html":{},"components/ErrorContainerComponent.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/FullNameComponent.html":{},"components/GeocoderInputComponent.html":{},"components/HeaderComponent.html":{},"components/NameComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"components/PhnComponent.html":{},"components/PhoneNumberComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"components/RadioComponent.html":{},"components/SampleModalComponent.html":{},"modules/SharedCoreModule.html":{},"components/SinComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{},"components/XiconButtonComponent.html":{},"coverage.html":{},"overview.html":{}}}],["congo",{"_index":1859,"title":{},"body":{"interfaces/CountryList.html":{}}}],["connected",{"_index":3388,"title":{},"body":{"components/GeocoderInputComponent.html":{}}}],["connectivity",{"_index":1608,"title":{},"body":{"interfaces/CommonLogMessage.html":{}}}],["consectetur",{"_index":1380,"title":{},"body":{"components/CityComponent.html":{},"interfaces/CountryList.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"interfaces/FileUploaderMsg.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{}}}],["consent",{"_index":467,"title":{},"body":{"classes/AbstractTestPage.html":{},"components/AccordionCommonComponent.html":{},"components/ButtonComponent.html":{},"components/ButtonGroupComponent.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"components/ConfirmTemplateComponent.html":{},"components/CoreBreadcrumbComponent.html":{},"components/DatepickerComponent.html":{},"components/DropdownComponent.html":{},"components/EmailComponent.html":{},"components/ErrorContainerComponent.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/FullNameComponent.html":{},"components/GeocoderInputComponent.html":{},"components/HeaderComponent.html":{},"interfaces/ISpaEnvResponse.html":{},"components/NameComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"components/PhnComponent.html":{},"components/PhoneNumberComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"components/RadioComponent.html":{},"components/SampleModalComponent.html":{},"components/SinComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{},"components/XiconButtonComponent.html":{},"changelog.html":{}}}],["consentmodal",{"_index":3572,"title":{},"body":{"interfaces/ISpaEnvResponse.html":{},"changelog.html":{}}}],["consentmodalcomponent",{"_index":672,"title":{},"body":{"components/AccordionCommonComponent.html":{},"components/ButtonComponent.html":{},"components/ButtonGroupComponent.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"components/ConfirmTemplateComponent.html":{},"components/CoreBreadcrumbComponent.html":{},"components/DatepickerComponent.html":{},"components/DropdownComponent.html":{},"components/EmailComponent.html":{},"components/ErrorContainerComponent.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/FullNameComponent.html":{},"components/GeocoderInputComponent.html":{},"components/HeaderComponent.html":{},"interfaces/ISpaEnvResponse.html":{},"components/NameComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"components/PhnComponent.html":{},"components/PhoneNumberComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"components/RadioComponent.html":{},"components/SampleModalComponent.html":{},"modules/SharedCoreModule.html":{},"components/SinComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{},"components/XiconButtonComponent.html":{},"coverage.html":{},"overview.html":{}}}],["considered",{"_index":1004,"title":{},"body":{"classes/Address.html":{}}}],["consistency",{"_index":1063,"title":{},"body":{"components/ButtonComponent.html":{}}}],["consistent",{"_index":1620,"title":{},"body":{"interfaces/CommonLogMessage.html":{},"components/PageFrameworkComponent.html":{},"todo.html":{}}}],["console",{"_index":322,"title":{},"body":{"classes/AbstractHttpService.html":{},"interfaces/FileUploaderMsg.html":{},"changelog.html":{}}}],["console.error('an",{"_index":1647,"title":{},"body":{"interfaces/CommonLogMessage.html":{}}}],["console.error('geocoder",{"_index":3299,"title":{},"body":{"interfaces/GeoAddressResult.html":{},"injectables/GeocoderService.html":{}}}],["console.error('mspmaintenanceservice",{"_index":3624,"title":{},"body":{"interfaces/ISpaEnvResponse.html":{}}}],["console.error(`backend",{"_index":1651,"title":{},"body":{"interfaces/CommonLogMessage.html":{}}}],["console.error(`mspmaintenanceservice",{"_index":3625,"title":{},"body":{"interfaces/ISpaEnvResponse.html":{}}}],["console.error(msg",{"_index":1630,"title":{},"body":{"interfaces/CommonLogMessage.html":{}}}],["console.log",{"_index":316,"title":{},"body":{"classes/AbstractHttpService.html":{},"interfaces/AddrLabelList.html":{},"interfaces/Maxlengths.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"components/PhoneNumberComponent.html":{},"components/PostalCodeComponent.html":{},"interfaces/ReadOnlyFields.html":{},"components/SinComponent.html":{}}}],["console.log(\"error",{"_index":3111,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["console.log('cancel",{"_index":2832,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["console.log('completed",{"_index":2889,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["console.log('error",{"_index":2868,"title":{},"body":{"interfaces/FileUploaderMsg.html":{},"interfaces/ISpaEnvResponse.html":{}}}],["console.log('file",{"_index":3016,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["console.log('files",{"_index":2847,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["console.log('handleerror",{"_index":3623,"title":{},"body":{"interfaces/ISpaEnvResponse.html":{}}}],["console.log('http",{"_index":326,"title":{},"body":{"classes/AbstractHttpService.html":{},"interfaces/FileUploaderMsg.html":{}}}],["console.log('image.name",{"_index":2952,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["console.log('loading",{"_index":3062,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["console.log('log",{"_index":3129,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["console.log('logservice",{"_index":1641,"title":{},"body":{"interfaces/CommonLogMessage.html":{}}}],["console.log('opening",{"_index":2905,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["console.log('scaled",{"_index":4415,"title":{},"body":{"components/ThumbnailComponent.html":{}}}],["console.log('start",{"_index":2968,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["console.log('this",{"_index":3073,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["console.log(`compare",{"_index":2717,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["console.log(`file",{"_index":3002,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["console.log(`image",{"_index":2964,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["console.log(`max",{"_index":3102,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["console.log(`this",{"_index":2720,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["console.log(error",{"_index":3132,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["console.log(response",{"_index":3131,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["console.log(this.spaenvres",{"_index":3638,"title":{},"body":{"interfaces/ISpaEnvResponse.html":{}}}],["console.log(var1",{"_index":2891,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["const",{"_index":195,"title":{},"body":{"classes/AbstractFormControl.html":{},"classes/AbstractHttpService.html":{},"classes/AbstractTestPage.html":{},"interfaces/AddrLabelList.html":{},"classes/Address.html":{},"injectables/CaptchaDataService.html":{},"injectables/CheckCompleteBaseService.html":{},"interfaces/CommonLogMessage.html":{},"interfaces/CountryList.html":{},"interfaces/DateErrorMsg.html":{},"directives/DateFieldFormatDirective.html":{},"components/DatepickerComponent.html":{},"directives/DuplicateCheckDirective.html":{},"components/EmailComponent.html":{},"interfaces/ErrorMessage.html":{},"interfaces/FileUploaderMsg.html":{},"interfaces/GeoAddressResult.html":{},"components/GeocoderInputComponent.html":{},"injectables/GeocoderService.html":{},"interfaces/ISpaEnvResponse.html":{},"guards/LoadPageGuardService.html":{},"interfaces/Maxlengths.html":{},"interfaces/PageList.html":{},"interfaces/PageListInterface.html":{},"injectables/PageStateService.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"classes/Person.html":{},"components/PhnComponent.html":{},"components/PhoneNumberComponent.html":{},"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{},"interfaces/ReadOnlyFields.html":{},"guards/RouteGuardService.html":{},"injectables/ServerPayload.html":{},"modules/SharedCoreModule.html":{},"components/SinComponent.html":{},"components/ThumbnailComponent.html":{},"directives/ValidateBcPostalDirective.html":{},"directives/ValidateCityDirective.html":{},"directives/ValidateNameDirective.html":{},"directives/ValidatePostalcodeDirective.html":{},"directives/ValidateRegionDirective.html":{},"directives/ValidateStreetDirective.html":{},"components/WizardProgressBarComponent.html":{},"components/XiconButtonComponent.html":{},"additional-documentation/getting-started.html":{}}}],["constants",{"_index":526,"title":{},"body":{"classes/AbstractTestPage.html":{}}}],["constructor",{"_index":19,"title":{},"body":{"classes/AbstractBaseForm.html":{},"classes/AbstractForm.html":{},"classes/AbstractHttpService.html":{},"classes/AbstractReactForm.html":{},"components/AccordionCommonComponent.html":{},"interfaces/AddrLabelList.html":{},"classes/Base.html":{},"components/ButtonComponent.html":{},"components/ButtonGroupComponent.html":{},"injectables/CaptchaDataService.html":{},"injectables/CheckCompleteBaseService.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"classes/CommonImage.html":{},"classes/CommonImageProcessingError.html":{},"classes/CommonImageScaleFactorsImpl.html":{},"components/ConfirmTemplateComponent.html":{},"components/CoreBreadcrumbComponent.html":{},"interfaces/CountryList.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"injectables/DefaultPageGuardService.html":{},"components/DropdownComponent.html":{},"components/EmailComponent.html":{},"components/ErrorContainerComponent.html":{},"interfaces/FileUploaderMsg.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/FullNameComponent.html":{},"interfaces/FullNameErrorMsg.html":{},"components/GeocoderInputComponent.html":{},"injectables/GeocoderService.html":{},"components/HeaderComponent.html":{},"interfaces/IRadioItems.html":{},"guards/LoadPageGuardService.html":{},"interfaces/Maxlengths.html":{},"classes/MoHCommonLibraryError.html":{},"components/NameComponent.html":{},"interfaces/PageList.html":{},"interfaces/PageListInterface.html":{},"components/PageSectionComponent.html":{},"injectables/PageStateService.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"components/PhnComponent.html":{},"components/PhoneNumberComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{},"components/RadioComponent.html":{},"interfaces/ReadOnlyFields.html":{},"guards/RouteGuardService.html":{},"interfaces/SampleImageInterface.html":{},"components/SampleModalComponent.html":{},"components/SinComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{},"components/XiconButtonComponent.html":{},"changelog.html":{}}}],["constructor(@optional",{"_index":3364,"title":{},"body":{"components/GeocoderInputComponent.html":{},"components/PhoneNumberComponent.html":{}}}],["constructor(controldir",{"_index":1288,"title":{},"body":{"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"components/DropdownComponent.html":{},"components/EmailComponent.html":{},"components/GeocoderInputComponent.html":{},"components/NameComponent.html":{},"components/PhnComponent.html":{},"components/PhoneNumberComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"components/RadioComponent.html":{},"components/SinComponent.html":{}}}],["constructor(errorcode",{"_index":1544,"title":{},"body":{"classes/CommonImageProcessingError.html":{}}}],["constructor(filecontent",{"_index":1492,"title":{},"body":{"interfaces/CommonAttachmentJson.html":{},"classes/CommonImage.html":{},"classes/CommonImageProcessingError.html":{},"interfaces/CommonImageScaleFactors.html":{},"classes/CommonImageScaleFactorsImpl.html":{}}}],["constructor(http",{"_index":237,"title":{},"body":{"classes/AbstractHttpService.html":{},"injectables/GeocoderService.html":{}}}],["constructor(httpclient",{"_index":1141,"title":{},"body":{"injectables/CaptchaDataService.html":{}}}],["constructor(message",{"_index":3685,"title":{},"body":{"classes/MoHCommonLibraryError.html":{}}}],["constructor(pagestateservice",{"_index":2504,"title":{},"body":{"injectables/DefaultPageGuardService.html":{}}}],["constructor(private",{"_index":1162,"title":{},"body":{"injectables/CaptchaDataService.html":{},"components/HeaderComponent.html":{},"guards/LoadPageGuardService.html":{},"guards/RouteGuardService.html":{},"injectables/ServerPayload.html":{},"components/WizardProgressBarComponent.html":{}}}],["constructor(protected",{"_index":78,"title":{},"body":{"classes/AbstractBaseForm.html":{},"classes/AbstractForm.html":{},"classes/AbstractHttpService.html":{},"classes/AbstractReactForm.html":{},"interfaces/CommonLogMessage.html":{},"interfaces/GeoAddressResult.html":{},"injectables/GeocoderService.html":{},"interfaces/ISpaEnvResponse.html":{}}}],["constructor(public",{"_index":1485,"title":{},"body":{"interfaces/CommonAttachmentJson.html":{},"classes/CommonImage.html":{},"classes/CommonImageProcessingError.html":{},"interfaces/CommonImageScaleFactors.html":{},"classes/CommonImageScaleFactorsImpl.html":{}}}],["constructor(router",{"_index":20,"title":{},"body":{"classes/AbstractBaseForm.html":{},"classes/AbstractForm.html":{},"classes/AbstractReactForm.html":{},"injectables/CheckCompleteBaseService.html":{},"components/HeaderComponent.html":{},"guards/LoadPageGuardService.html":{},"injectables/PageStateService.html":{},"guards/RouteGuardService.html":{},"components/WizardProgressBarComponent.html":{}}}],["constructor(viewcontainerref",{"_index":4397,"title":{},"body":{"components/ThumbnailComponent.html":{}}}],["constructor(wfactor",{"_index":1524,"title":{},"body":{"interfaces/CommonAttachmentJson.html":{},"classes/CommonImage.html":{},"classes/CommonImageProcessingError.html":{},"interfaces/CommonImageScaleFactors.html":{},"classes/CommonImageScaleFactorsImpl.html":{}}}],["consume",{"_index":5504,"title":{},"body":{"additional-documentation/local-development/components.html":{}}}],["contact",{"_index":3566,"title":{},"body":{"interfaces/ISpaEnvResponse.html":{}}}],["contain",{"_index":1358,"title":{},"body":{"components/CityComponent.html":{},"interfaces/CountryList.html":{},"interfaces/FileUploaderMsg.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{}}}],["container",{"_index":1691,"title":{"classes/Container.html":{}},"body":{"classes/Container.html":{},"components/ErrorContainerComponent.html":{},"components/WizardProgressBarComponent.html":{},"interfaces/WizardProgressItem.html":{},"changelog.html":{},"coverage.html":{}}}],["container'},{'name",{"_index":687,"title":{},"body":{"components/AccordionCommonComponent.html":{},"components/ButtonComponent.html":{},"components/ButtonGroupComponent.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"components/ConfirmTemplateComponent.html":{},"components/CoreBreadcrumbComponent.html":{},"components/DatepickerComponent.html":{},"components/DropdownComponent.html":{},"components/EmailComponent.html":{},"components/ErrorContainerComponent.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/FullNameComponent.html":{},"components/GeocoderInputComponent.html":{},"components/HeaderComponent.html":{},"components/NameComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"components/PhnComponent.html":{},"components/PhoneNumberComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"components/RadioComponent.html":{},"components/SampleModalComponent.html":{},"components/SinComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{},"components/XiconButtonComponent.html":{}}}],["container.component",{"_index":4325,"title":{},"body":{"modules/SharedCoreModule.html":{}}}],["container.component.html",{"_index":2598,"title":{},"body":{"components/ErrorContainerComponent.html":{}}}],["container.component.scss",{"_index":2597,"title":{},"body":{"components/ErrorContainerComponent.html":{}}}],["container.component.ts",{"_index":2596,"title":{},"body":{"components/ErrorContainerComponent.html":{},"coverage.html":{}}}],["container.component.ts:10",{"_index":2600,"title":{},"body":{"components/ErrorContainerComponent.html":{}}}],["container.length",{"_index":4533,"title":{},"body":{"components/WizardProgressBarComponent.html":{}}}],["container/error",{"_index":2595,"title":{},"body":{"components/ErrorContainerComponent.html":{},"modules/SharedCoreModule.html":{},"coverage.html":{}}}],["container[0].scrollleft",{"_index":4539,"title":{},"body":{"components/WizardProgressBarComponent.html":{}}}],["contains",{"_index":3868,"title":{},"body":{"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{}}}],["content",{"_index":450,"title":{},"body":{"classes/AbstractTestPage.html":{},"interfaces/CommonAttachmentJson.html":{},"classes/CommonImage.html":{},"classes/CommonImageProcessingError.html":{},"interfaces/CommonImageScaleFactors.html":{},"classes/CommonImageScaleFactorsImpl.html":{},"components/CoreBreadcrumbComponent.html":{},"components/HeaderComponent.html":{},"interfaces/ISpaEnvResponse.html":{},"components/PageSectionComponent.html":{},"changelog.html":{}}}],["contentchild",{"_index":2616,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["contentchild('uploadinstruction",{"_index":2681,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["contents",{"_index":3477,"title":{},"body":{"components/HeaderComponent.html":{}}}],["contenttype",{"_index":1499,"title":{},"body":{"interfaces/CommonAttachmentJson.html":{},"classes/CommonImage.html":{},"classes/CommonImageProcessingError.html":{},"interfaces/CommonImageScaleFactors.html":{},"classes/CommonImageScaleFactorsImpl.html":{}}}],["context",{"_index":5278,"title":{},"body":{"coverage.html":{}}}],["continue",{"_index":16,"title":{},"body":{"classes/AbstractBaseForm.html":{},"classes/AbstractForm.html":{},"classes/AbstractReactForm.html":{},"classes/AbstractTestPage.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"interfaces/ISpaEnvResponse.html":{},"guards/LoadPageGuardService.html":{},"guards/RouteGuardService.html":{}}}],["continuebutton",{"_index":419,"title":{},"body":{"classes/AbstractTestPage.html":{},"interfaces/ISpaEnvResponse.html":{}}}],["contrast",{"_index":4883,"title":{},"body":{"changelog.html":{}}}],["contributing",{"_index":4942,"title":{},"body":{"changelog.html":{}}}],["contributing.md",{"_index":5081,"title":{},"body":{"changelog.html":{}}}],["control",{"_index":188,"title":{},"body":{"classes/AbstractFormControl.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"directives/DuplicateCheckDirective.html":{},"components/EmailComponent.html":{},"interfaces/FileUploaderMsg.html":{},"interfaces/IRadioItems.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"components/PhnComponent.html":{},"components/PhoneNumberComponent.html":{},"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{},"components/RadioComponent.html":{},"components/SinComponent.html":{},"directives/ValidateBcPostalDirective.html":{},"directives/ValidateCityDirective.html":{},"directives/ValidateNameDirective.html":{},"directives/ValidatePostalcodeDirective.html":{},"directives/ValidateRegionDirective.html":{},"directives/ValidateStreetDirective.html":{},"changelog.html":{},"todo.html":{}}}],["control.ts",{"_index":113,"title":{},"body":{"classes/AbstractFormControl.html":{},"coverage.html":{}}}],["control.ts:10",{"_index":131,"title":{},"body":{"classes/AbstractFormControl.html":{}}}],["control.ts:13",{"_index":165,"title":{},"body":{"classes/AbstractFormControl.html":{}}}],["control.ts:15",{"_index":163,"title":{},"body":{"classes/AbstractFormControl.html":{}}}],["control.ts:18",{"_index":164,"title":{},"body":{"classes/AbstractFormControl.html":{}}}],["control.ts:22",{"_index":132,"title":{},"body":{"classes/AbstractFormControl.html":{}}}],["control.ts:23",{"_index":133,"title":{},"body":{"classes/AbstractFormControl.html":{}}}],["control.ts:26",{"_index":141,"title":{},"body":{"classes/AbstractFormControl.html":{}}}],["control.ts:31",{"_index":162,"title":{},"body":{"classes/AbstractFormControl.html":{}}}],["control.ts:34",{"_index":143,"title":{},"body":{"classes/AbstractFormControl.html":{}}}],["control.ts:39",{"_index":146,"title":{},"body":{"classes/AbstractFormControl.html":{}}}],["control.ts:44",{"_index":158,"title":{},"body":{"classes/AbstractFormControl.html":{}}}],["control.ts:48",{"_index":160,"title":{},"body":{"classes/AbstractFormControl.html":{}}}],["control.ts:65",{"_index":150,"title":{},"body":{"classes/AbstractFormControl.html":{}}}],["control.value",{"_index":2551,"title":{},"body":{"directives/DuplicateCheckDirective.html":{},"directives/ValidateBcPostalDirective.html":{},"directives/ValidateCityDirective.html":{},"directives/ValidateNameDirective.html":{},"directives/ValidatePostalcodeDirective.html":{},"directives/ValidateRegionDirective.html":{},"directives/ValidateStreetDirective.html":{}}}],["controlcontainer",{"_index":767,"title":{},"body":{"interfaces/AddrLabelList.html":{},"components/ButtonComponent.html":{},"components/ButtonGroupComponent.html":{},"components/CheckboxComponent.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"interfaces/FileUploaderMsg.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/FullNameComponent.html":{},"interfaces/FullNameErrorMsg.html":{},"interfaces/ISpaEnvResponse.html":{},"interfaces/Maxlengths.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"components/PhoneNumberComponent.html":{},"interfaces/ReadOnlyFields.html":{},"additional-documentation/local-development/schematics.html":{}}}],["controldir",{"_index":1285,"title":{},"body":{"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"interfaces/CountryList.html":{},"components/DropdownComponent.html":{},"components/EmailComponent.html":{},"components/GeocoderInputComponent.html":{},"interfaces/IRadioItems.html":{},"components/NameComponent.html":{},"components/PhnComponent.html":{},"components/PhoneNumberComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{},"components/RadioComponent.html":{},"components/SinComponent.html":{}}}],["controldir.valueaccessor",{"_index":1314,"title":{},"body":{"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"interfaces/CountryList.html":{},"components/DropdownComponent.html":{},"components/EmailComponent.html":{},"components/GeocoderInputComponent.html":{},"interfaces/IRadioItems.html":{},"components/NameComponent.html":{},"components/PhnComponent.html":{},"components/PhoneNumberComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{},"components/RadioComponent.html":{},"components/SinComponent.html":{}}}],["controls",{"_index":3589,"title":{},"body":{"interfaces/ISpaEnvResponse.html":{},"changelog.html":{}}}],["controlvalueaccessor",{"_index":116,"title":{},"body":{"classes/AbstractFormControl.html":{},"interfaces/AddrLabelList.html":{},"components/ButtonGroupComponent.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"interfaces/CountryList.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"components/DropdownComponent.html":{},"components/FullNameComponent.html":{},"interfaces/FullNameErrorMsg.html":{},"components/GeocoderInputComponent.html":{},"interfaces/ISpaEnvResponse.html":{},"interfaces/Maxlengths.html":{},"components/NameComponent.html":{},"components/PhnComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{},"interfaces/ReadOnlyFields.html":{},"changelog.html":{}}}],["conventional",{"_index":5372,"title":{},"body":{"todo.html":{}}}],["convert",{"_index":2346,"title":{},"body":{"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"interfaces/FileUploaderMsg.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"changelog.html":{},"additional-documentation/local-development/schematics.html":{}}}],["convertdatetosimpledate",{"_index":2462,"title":{},"body":{"components/DatepickerComponent.html":{}}}],["convertdatetosimpledate(date",{"_index":2371,"title":{},"body":{"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{}}}],["converted",{"_index":876,"title":{},"body":{"interfaces/AddrLabelList.html":{},"interfaces/Maxlengths.html":{},"interfaces/ReadOnlyFields.html":{}}}],["convertroutetotitle",{"_index":1696,"title":{},"body":{"classes/Container.html":{}}}],["convertroutetotitle(routepath",{"_index":1701,"title":{},"body":{"classes/Container.html":{},"interfaces/WizardProgressItem.html":{}}}],["converts",{"_index":1703,"title":{},"body":{"classes/Container.html":{},"interfaces/WizardProgressItem.html":{}}}],["convertsimpledatetodate",{"_index":2463,"title":{},"body":{"components/DatepickerComponent.html":{}}}],["convertsimpledatetodate(date",{"_index":2378,"title":{},"body":{"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{}}}],["cook",{"_index":1863,"title":{},"body":{"interfaces/CountryList.html":{}}}],["copied",{"_index":554,"title":{},"body":{"classes/AbstractTestPage.html":{},"changelog.html":{}}}],["copy",{"_index":948,"title":{},"body":{"interfaces/AddrLabelList.html":{},"classes/Address.html":{},"interfaces/FileUploaderMsg.html":{},"interfaces/Maxlengths.html":{},"classes/Person.html":{},"interfaces/ReadOnlyFields.html":{},"license.html":{}}}],["copy(object",{"_index":1000,"title":{},"body":{"classes/Address.html":{},"classes/Person.html":{}}}],["copying",{"_index":3569,"title":{},"body":{"interfaces/ISpaEnvResponse.html":{}}}],["copylicense",{"_index":5234,"title":{},"body":{"coverage.html":{}}}],["copyright",{"_index":5331,"title":{},"body":{"license.html":{}}}],["copyversionfile",{"_index":5273,"title":{},"body":{"coverage.html":{}}}],["core",{"_index":675,"title":{},"body":{"components/AccordionCommonComponent.html":{},"components/ButtonComponent.html":{},"components/ButtonGroupComponent.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"components/ConfirmTemplateComponent.html":{},"components/CoreBreadcrumbComponent.html":{},"components/DatepickerComponent.html":{},"components/DropdownComponent.html":{},"components/EmailComponent.html":{},"components/ErrorContainerComponent.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/FullNameComponent.html":{},"components/GeocoderInputComponent.html":{},"components/HeaderComponent.html":{},"components/NameComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"components/PhnComponent.html":{},"components/PhoneNumberComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"components/RadioComponent.html":{},"components/SampleModalComponent.html":{},"components/SinComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{},"components/XiconButtonComponent.html":{},"dependencies.html":{},"additional-documentation/getting-started.html":{}}}],["core.module.ts",{"_index":4265,"title":{},"body":{"modules/SharedCoreModule.html":{},"coverage.html":{}}}],["corebreadcrumb",{"_index":1725,"title":{},"body":{"components/CoreBreadcrumbComponent.html":{}}}],["corebreadcrumbcomponent",{"_index":674,"title":{"components/CoreBreadcrumbComponent.html":{}},"body":{"components/AccordionCommonComponent.html":{},"components/ButtonComponent.html":{},"components/ButtonGroupComponent.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"components/ConfirmTemplateComponent.html":{},"components/CoreBreadcrumbComponent.html":{},"components/DatepickerComponent.html":{},"components/DropdownComponent.html":{},"components/EmailComponent.html":{},"components/ErrorContainerComponent.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/FullNameComponent.html":{},"components/GeocoderInputComponent.html":{},"components/HeaderComponent.html":{},"components/NameComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"components/PhnComponent.html":{},"components/PhoneNumberComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"components/RadioComponent.html":{},"components/SampleModalComponent.html":{},"modules/SharedCoreModule.html":{},"components/SinComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{},"components/XiconButtonComponent.html":{},"coverage.html":{},"overview.html":{}}}],["corporis",{"_index":1428,"title":{},"body":{"components/CityComponent.html":{},"interfaces/CountryList.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"interfaces/FileUploaderMsg.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{}}}],["correct",{"_index":1250,"title":{},"body":{"injectables/CheckCompleteBaseService.html":{},"interfaces/PageListInterface.html":{},"changelog.html":{},"additional-documentation/local-development/schematics.html":{}}}],["correctly",{"_index":3660,"title":{},"body":{"guards/LoadPageGuardService.html":{},"guards/RouteGuardService.html":{},"changelog.html":{}}}],["correspond",{"_index":417,"title":{},"body":{"classes/AbstractTestPage.html":{}}}],["corresponding",{"_index":521,"title":{},"body":{"classes/AbstractTestPage.html":{}}}],["corresponds",{"_index":564,"title":{},"body":{"classes/AbstractTestPage.html":{},"additional-documentation/local-development/components.html":{}}}],["costa",{"_index":1865,"title":{},"body":{"interfaces/CountryList.html":{}}}],["could've",{"_index":2813,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["count",{"_index":3759,"title":{},"body":{"interfaces/PageList.html":{},"injectables/PageStateService.html":{}}}],["counter",{"_index":4947,"title":{},"body":{"changelog.html":{}}}],["countlength",{"_index":428,"title":{},"body":{"classes/AbstractTestPage.html":{}}}],["countlength(refnameval",{"_index":491,"title":{},"body":{"classes/AbstractTestPage.html":{}}}],["countries",{"_index":1741,"title":{},"body":{"interfaces/CountryList.html":{}}}],["country",{"_index":548,"title":{},"body":{"classes/AbstractTestPage.html":{},"interfaces/AddrLabelList.html":{},"classes/Address.html":{},"interfaces/CountryList.html":{},"interfaces/GeoAddressResult.html":{},"components/GeocoderInputComponent.html":{},"injectables/GeocoderService.html":{},"interfaces/Maxlengths.html":{},"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{},"interfaces/ReadOnlyFields.html":{},"changelog.html":{}}}],["country'},{'name",{"_index":678,"title":{},"body":{"components/AccordionCommonComponent.html":{},"components/ButtonComponent.html":{},"components/ButtonGroupComponent.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"components/ConfirmTemplateComponent.html":{},"components/CoreBreadcrumbComponent.html":{},"components/DatepickerComponent.html":{},"components/DropdownComponent.html":{},"components/EmailComponent.html":{},"components/ErrorContainerComponent.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/FullNameComponent.html":{},"components/GeocoderInputComponent.html":{},"components/HeaderComponent.html":{},"components/NameComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"components/PhnComponent.html":{},"components/PhoneNumberComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"components/RadioComponent.html":{},"components/SampleModalComponent.html":{},"components/SinComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{},"components/XiconButtonComponent.html":{}}}],["country.component.html",{"_index":2296,"title":{},"body":{"interfaces/CountryList.html":{}}}],["country.component.scss",{"_index":2297,"title":{},"body":{"interfaces/CountryList.html":{}}}],["country/country.component",{"_index":778,"title":{},"body":{"interfaces/AddrLabelList.html":{},"components/GeocoderInputComponent.html":{},"interfaces/Maxlengths.html":{},"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{},"interfaces/ReadOnlyFields.html":{}}}],["country/prov",{"_index":4844,"title":{},"body":{"changelog.html":{}}}],["country/province",{"_index":4814,"title":{},"body":{"changelog.html":{}}}],["country/province/region",{"_index":4464,"title":{},"body":{"directives/ValidateRegionDirective.html":{}}}],["country_",{"_index":2298,"title":{},"body":{"interfaces/CountryList.html":{}}}],["country_list",{"_index":777,"title":{},"body":{"interfaces/AddrLabelList.html":{},"interfaces/CountryList.html":{},"interfaces/Maxlengths.html":{},"interfaces/ReadOnlyFields.html":{},"coverage.html":{}}}],["country_list.find",{"_index":2294,"title":{},"body":{"interfaces/CountryList.html":{}}}],["countrycode",{"_index":1742,"title":{},"body":{"interfaces/CountryList.html":{}}}],["countrycomponent",{"_index":677,"title":{},"body":{"components/AccordionCommonComponent.html":{},"components/ButtonComponent.html":{},"components/ButtonGroupComponent.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"components/ConfirmTemplateComponent.html":{},"components/CoreBreadcrumbComponent.html":{},"interfaces/CountryList.html":{},"components/DatepickerComponent.html":{},"components/DropdownComponent.html":{},"components/EmailComponent.html":{},"components/ErrorContainerComponent.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/FullNameComponent.html":{},"components/GeocoderInputComponent.html":{},"components/HeaderComponent.html":{},"components/NameComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"components/PhnComponent.html":{},"components/PhoneNumberComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"components/RadioComponent.html":{},"components/SampleModalComponent.html":{},"modules/SharedCoreModule.html":{},"components/SinComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{},"components/XiconButtonComponent.html":{},"coverage.html":{},"overview.html":{}}}],["countrylist",{"_index":774,"title":{"interfaces/CountryList.html":{}},"body":{"interfaces/AddrLabelList.html":{},"interfaces/CountryList.html":{},"interfaces/Maxlengths.html":{},"interfaces/ReadOnlyFields.html":{},"coverage.html":{}}}],["countryobj",{"_index":937,"title":{},"body":{"interfaces/AddrLabelList.html":{},"interfaces/CountryList.html":{},"interfaces/Maxlengths.html":{},"interfaces/ReadOnlyFields.html":{}}}],["countryobj.countrycode",{"_index":941,"title":{},"body":{"interfaces/AddrLabelList.html":{},"interfaces/Maxlengths.html":{},"interfaces/ReadOnlyFields.html":{}}}],["countryobj.description",{"_index":2295,"title":{},"body":{"interfaces/CountryList.html":{}}}],["counts",{"_index":493,"title":{},"body":{"classes/AbstractTestPage.html":{}}}],["coverage",{"_index":5150,"title":{"coverage.html":{}},"body":{"coverage.html":{}}}],["cpv",{"_index":1834,"title":{},"body":{"interfaces/CountryList.html":{}}}],["cr18890",{"_index":4639,"title":{},"body":{"changelog.html":{}}}],["cr18975",{"_index":4581,"title":{},"body":{"changelog.html":{}}}],["create",{"_index":1059,"title":{},"body":{"components/ButtonComponent.html":{},"injectables/CheckCompleteBaseService.html":{},"interfaces/FileUploaderMsg.html":{},"components/HeaderComponent.html":{},"guards/LoadPageGuardService.html":{},"interfaces/PageListInterface.html":{},"guards/RouteGuardService.html":{},"components/XiconButtonComponent.html":{},"changelog.html":{},"additional-documentation/getting-started.html":{},"additional-documentation/local-development/schematics.html":{},"additional-documentation/local-development/components.html":{}}}],["created",{"_index":2697,"title":{},"body":{"interfaces/FileUploaderMsg.html":{},"additional-documentation/local-development/components.html":{}}}],["createifmissing",{"_index":5256,"title":{},"body":{"coverage.html":{}}}],["creates",{"_index":5432,"title":{},"body":{"additional-documentation/local-development/schematics.html":{}}}],["createtestingmodule",{"_index":5163,"title":{},"body":{"coverage.html":{}}}],["creating",{"_index":1202,"title":{},"body":{"injectables/CheckCompleteBaseService.html":{},"interfaces/PageListInterface.html":{}}}],["cri",{"_index":1864,"title":{},"body":{"interfaces/CountryList.html":{}}}],["criteria",{"_index":2562,"title":{},"body":{"components/EmailComponent.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"directives/ValidateBcPostalDirective.html":{},"directives/ValidateCityDirective.html":{},"directives/ValidateNameDirective.html":{},"directives/ValidatePostalcodeDirective.html":{},"directives/ValidateRegionDirective.html":{},"directives/ValidateStreetDirective.html":{}}}],["criteria.test",{"_index":4432,"title":{},"body":{"directives/ValidateBcPostalDirective.html":{},"directives/ValidateCityDirective.html":{},"directives/ValidateNameDirective.html":{},"directives/ValidatePostalcodeDirective.html":{},"directives/ValidateRegionDirective.html":{},"directives/ValidateStreetDirective.html":{}}}],["criteriamsg",{"_index":3823,"title":{},"body":{"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{}}}],["croatia",{"_index":1871,"title":{},"body":{"interfaces/CountryList.html":{}}}],["crumbs",{"_index":1694,"title":{},"body":{"classes/Container.html":{},"interfaces/WizardProgressItem.html":{}}}],["css",{"_index":4967,"title":{},"body":{"changelog.html":{}}}],["ctx",{"_index":3091,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["cub",{"_index":1872,"title":{},"body":{"interfaces/CountryList.html":{}}}],["cuba",{"_index":1873,"title":{},"body":{"interfaces/CountryList.html":{}}}],["cunha",{"_index":2149,"title":{},"body":{"interfaces/CountryList.html":{}}}],["cupiditate",{"_index":1436,"title":{},"body":{"components/CityComponent.html":{},"interfaces/CountryList.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"interfaces/FileUploaderMsg.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{}}}],["curaçao",{"_index":1875,"title":{},"body":{"interfaces/CountryList.html":{}}}],["curr",{"_index":3042,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["currently",{"_index":469,"title":{},"body":{"classes/AbstractTestPage.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"components/FormSubmitBarComponent.html":{},"interfaces/ISpaEnvResponse.html":{},"additional-documentation/getting-started.html":{}}}],["currentpage",{"_index":3088,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["custom",{"_index":573,"title":{},"body":{"classes/AbstractTestPage.html":{},"components/ButtonComponent.html":{},"injectables/CheckCompleteBaseService.html":{},"components/CheckboxComponent.html":{},"interfaces/ISpaEnvResponse.html":{},"interfaces/PageListInterface.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"changelog.html":{},"todo.html":{}}}],["customize",{"_index":5032,"title":{},"body":{"changelog.html":{}}}],["cutoffdate",{"_index":3588,"title":{},"body":{"interfaces/ISpaEnvResponse.html":{}}}],["cuw",{"_index":1874,"title":{},"body":{"interfaces/CountryList.html":{}}}],["cxr",{"_index":1849,"title":{},"body":{"interfaces/CountryList.html":{}}}],["cycles",{"_index":2420,"title":{},"body":{"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{}}}],["cym",{"_index":1837,"title":{},"body":{"interfaces/CountryList.html":{}}}],["cyp",{"_index":1876,"title":{},"body":{"interfaces/CountryList.html":{}}}],["cyprus",{"_index":1877,"title":{},"body":{"interfaces/CountryList.html":{}}}],["cze",{"_index":1878,"title":{},"body":{"interfaces/CountryList.html":{}}}],["czech",{"_index":1879,"title":{},"body":{"interfaces/CountryList.html":{}}}],["côte",{"_index":1868,"title":{},"body":{"interfaces/CountryList.html":{}}}],["d",{"_index":3017,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["d.ts",{"_index":5423,"title":{},"body":{"additional-documentation/local-development/schematics.html":{}}}],["d4f0e3b",{"_index":4901,"title":{},"body":{"changelog.html":{}}}],["d5bf00b",{"_index":5078,"title":{},"body":{"changelog.html":{}}}],["d5dd02f",{"_index":4781,"title":{},"body":{"changelog.html":{}}}],["d5f44c4",{"_index":5092,"title":{},"body":{"changelog.html":{}}}],["d[abceghj",{"_index":996,"title":{},"body":{"classes/Address.html":{},"directives/ValidateBcPostalDirective.html":{},"directives/ValidatePostalcodeDirective.html":{}}}],["d\\'ivoire",{"_index":1869,"title":{},"body":{"interfaces/CountryList.html":{}}}],["d]+/.test",{"_index":2457,"title":{},"body":{"directives/DateFieldFormatDirective.html":{}}}],["da",{"_index":2148,"title":{},"body":{"interfaces/CountryList.html":{}}}],["danger",{"_index":601,"title":{},"body":{"classes/AbstractTestPage.html":{},"components/ButtonComponent.html":{},"components/PasswordComponent.html":{}}}],["danging",{"_index":4637,"title":{},"body":{"changelog.html":{}}}],["darken",{"_index":4881,"title":{},"body":{"changelog.html":{}}}],["darussalam",{"_index":1822,"title":{},"body":{"interfaces/CountryList.html":{}}}],["dashboard",{"_index":1732,"title":{},"body":{"components/CoreBreadcrumbComponent.html":{}}}],["data",{"_index":325,"title":{},"body":{"classes/AbstractHttpService.html":{},"classes/AbstractTestPage.html":{},"interfaces/AddrLabelList.html":{},"classes/Address.html":{},"components/ButtonGroupComponent.html":{},"components/CheckboxComponent.html":{},"interfaces/CommonAttachmentJson.html":{},"classes/CommonImage.html":{},"classes/CommonImageProcessingError.html":{},"interfaces/CommonImageScaleFactors.html":{},"classes/CommonImageScaleFactorsImpl.html":{},"interfaces/CommonLogMessage.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"interfaces/FileUploaderMsg.html":{},"components/GeocoderInputComponent.html":{},"interfaces/ISpaEnvResponse.html":{},"interfaces/Maxlengths.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"classes/Person.html":{},"components/PhoneNumberComponent.html":{},"interfaces/ReadOnlyFields.html":{},"components/ToggleComponent.html":{},"changelog.html":{}}}],["data.city",{"_index":951,"title":{},"body":{"interfaces/AddrLabelList.html":{},"components/GeocoderInputComponent.html":{},"interfaces/Maxlengths.html":{},"interfaces/ReadOnlyFields.html":{}}}],["data.country",{"_index":953,"title":{},"body":{"interfaces/AddrLabelList.html":{},"interfaces/Maxlengths.html":{},"interfaces/ReadOnlyFields.html":{}}}],["data.province",{"_index":952,"title":{},"body":{"interfaces/AddrLabelList.html":{},"interfaces/Maxlengths.html":{},"interfaces/ReadOnlyFields.html":{}}}],["data.service",{"_index":1196,"title":{},"body":{"modules/CaptchaModule.html":{},"interfaces/FileUploaderMsg.html":{}}}],["data.service.ts",{"_index":1137,"title":{},"body":{"injectables/CaptchaDataService.html":{},"injectables/ServerPayload.html":{},"coverage.html":{}}}],["data.service.ts:10",{"_index":4256,"title":{},"body":{"injectables/ServerPayload.html":{}}}],["data.service.ts:11",{"_index":4259,"title":{},"body":{"injectables/ServerPayload.html":{}}}],["data.service.ts:12",{"_index":4257,"title":{},"body":{"injectables/ServerPayload.html":{}}}],["data.service.ts:16",{"_index":1142,"title":{},"body":{"injectables/CaptchaDataService.html":{}}}],["data.service.ts:21",{"_index":1149,"title":{},"body":{"injectables/CaptchaDataService.html":{}}}],["data.service.ts:29",{"_index":1153,"title":{},"body":{"injectables/CaptchaDataService.html":{}}}],["data.service.ts:40",{"_index":1145,"title":{},"body":{"injectables/CaptchaDataService.html":{}}}],["data.service.ts:9",{"_index":4258,"title":{},"body":{"injectables/ServerPayload.html":{}}}],["data.street",{"_index":950,"title":{},"body":{"interfaces/AddrLabelList.html":{},"components/GeocoderInputComponent.html":{},"interfaces/Maxlengths.html":{},"interfaces/ReadOnlyFields.html":{}}}],["datachange",{"_index":1112,"title":{},"body":{"components/ButtonGroupComponent.html":{},"components/CheckboxComponent.html":{},"components/ToggleComponent.html":{}}}],["dataservice",{"_index":2691,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["dataurl",{"_index":2762,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["date",{"_index":1597,"title":{},"body":{"interfaces/CommonLogMessage.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"classes/Person.html":{},"changelog.html":{},"dependencies.html":{}}}],["date'},{'name",{"_index":680,"title":{},"body":{"components/AccordionCommonComponent.html":{},"components/ButtonComponent.html":{},"components/ButtonGroupComponent.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"components/ConfirmTemplateComponent.html":{},"components/CoreBreadcrumbComponent.html":{},"components/DatepickerComponent.html":{},"components/DropdownComponent.html":{},"components/EmailComponent.html":{},"components/ErrorContainerComponent.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/FullNameComponent.html":{},"components/GeocoderInputComponent.html":{},"components/HeaderComponent.html":{},"components/NameComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"components/PhnComponent.html":{},"components/PhoneNumberComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"components/RadioComponent.html":{},"components/SampleModalComponent.html":{},"components/SinComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{},"components/XiconButtonComponent.html":{}}}],["date(date.year",{"_index":2381,"title":{},"body":{"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{}}}],["date.component.ts",{"_index":4354,"title":{},"body":{"interfaces/SimpleDate.html":{},"todo.html":{}}}],["date.day",{"_index":2383,"title":{},"body":{"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{}}}],["date.getdate",{"_index":2377,"title":{},"body":{"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{}}}],["date.getfullyear",{"_index":2373,"title":{},"body":{"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{}}}],["date.getmonth",{"_index":2375,"title":{},"body":{"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{}}}],["date.interface.ts",{"_index":4350,"title":{},"body":{"interfaces/SimpleDate.html":{},"coverage.html":{}}}],["date.month",{"_index":2382,"title":{},"body":{"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{}}}],["date.year",{"_index":2380,"title":{},"body":{"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{}}}],["datechange",{"_index":2340,"title":{},"body":{"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{}}}],["datecomponent",{"_index":679,"title":{},"body":{"components/AccordionCommonComponent.html":{},"components/ButtonComponent.html":{},"components/ButtonGroupComponent.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"components/ConfirmTemplateComponent.html":{},"components/CoreBreadcrumbComponent.html":{},"components/DatepickerComponent.html":{},"components/DropdownComponent.html":{},"components/EmailComponent.html":{},"components/ErrorContainerComponent.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/FullNameComponent.html":{},"components/GeocoderInputComponent.html":{},"components/HeaderComponent.html":{},"components/NameComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"components/PhnComponent.html":{},"components/PhoneNumberComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"components/RadioComponent.html":{},"components/SampleModalComponent.html":{},"modules/SharedCoreModule.html":{},"components/SinComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{},"components/XiconButtonComponent.html":{},"changelog.html":{},"coverage.html":{},"overview.html":{}}}],["dateerrormsg",{"_index":2307,"title":{"interfaces/DateErrorMsg.html":{}},"body":{"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"coverage.html":{}}}],["datefieldformatdirective",{"_index":735,"title":{"directives/DateFieldFormatDirective.html":{}},"body":{"components/AccordionCommonComponent.html":{},"components/ButtonComponent.html":{},"components/ButtonGroupComponent.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"components/ConfirmTemplateComponent.html":{},"components/CoreBreadcrumbComponent.html":{},"directives/DateFieldFormatDirective.html":{},"components/DatepickerComponent.html":{},"components/DropdownComponent.html":{},"components/EmailComponent.html":{},"components/ErrorContainerComponent.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/FullNameComponent.html":{},"components/GeocoderInputComponent.html":{},"components/HeaderComponent.html":{},"components/NameComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"components/PhnComponent.html":{},"components/PhoneNumberComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"components/RadioComponent.html":{},"components/SampleModalComponent.html":{},"modules/SharedCoreModule.html":{},"components/SinComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{},"components/XiconButtonComponent.html":{},"coverage.html":{},"overview.html":{}}}],["dateformat",{"_index":2362,"title":{},"body":{"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{}}}],["dateobj",{"_index":1596,"title":{},"body":{"interfaces/CommonLogMessage.html":{}}}],["dateofbirth",{"_index":3925,"title":{},"body":{"classes/Person.html":{}}}],["dateofbirthshort",{"_index":3928,"title":{},"body":{"classes/Person.html":{}}}],["datepicker",{"_index":2327,"title":{},"body":{"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"changelog.html":{}}}],["datepicker'},{'name",{"_index":682,"title":{},"body":{"components/AccordionCommonComponent.html":{},"components/ButtonComponent.html":{},"components/ButtonGroupComponent.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"components/ConfirmTemplateComponent.html":{},"components/CoreBreadcrumbComponent.html":{},"components/DatepickerComponent.html":{},"components/DropdownComponent.html":{},"components/EmailComponent.html":{},"components/ErrorContainerComponent.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/FullNameComponent.html":{},"components/GeocoderInputComponent.html":{},"components/HeaderComponent.html":{},"components/NameComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"components/PhnComponent.html":{},"components/PhoneNumberComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"components/RadioComponent.html":{},"components/SampleModalComponent.html":{},"components/SinComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{},"components/XiconButtonComponent.html":{}}}],["datepicker.component.html",{"_index":2335,"title":{},"body":{"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{}}}],["datepicker.component.scss",{"_index":2336,"title":{},"body":{"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{}}}],["datepickercomponent",{"_index":681,"title":{"components/DatepickerComponent.html":{}},"body":{"components/AccordionCommonComponent.html":{},"components/ButtonComponent.html":{},"components/ButtonGroupComponent.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"components/ConfirmTemplateComponent.html":{},"components/CoreBreadcrumbComponent.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"components/DropdownComponent.html":{},"components/EmailComponent.html":{},"components/ErrorContainerComponent.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/FullNameComponent.html":{},"components/GeocoderInputComponent.html":{},"components/HeaderComponent.html":{},"components/NameComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"components/PhnComponent.html":{},"components/PhoneNumberComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"components/RadioComponent.html":{},"components/SampleModalComponent.html":{},"modules/SharedCoreModule.html":{},"components/SinComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{},"components/XiconButtonComponent.html":{},"coverage.html":{},"overview.html":{}}}],["datepickeroptions",{"_index":2370,"title":{},"body":{"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{}}}],["datepickersizes",{"_index":2338,"title":{},"body":{"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"miscellaneous/enumerations.html":{}}}],["datepickersizes.default",{"_index":2339,"title":{},"body":{"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{}}}],["datepickersizes.mini",{"_index":2393,"title":{},"body":{"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{}}}],["dates",{"_index":2342,"title":{},"body":{"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"changelog.html":{}}}],["datetime",{"_index":2364,"title":{},"body":{"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{}}}],["day",{"_index":2376,"title":{},"body":{"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"interfaces/SimpleDate.html":{},"changelog.html":{}}}],["dayoutofrange",{"_index":2311,"title":{},"body":{"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{}}}],["dbb94e1",{"_index":5103,"title":{},"body":{"changelog.html":{}}}],["dc606f1",{"_index":4582,"title":{},"body":{"changelog.html":{}}}],["dd29a60",{"_index":5017,"title":{},"body":{"changelog.html":{}}}],["de",{"_index":5461,"title":{},"body":{"additional-documentation/local-development/schematics.html":{}}}],["debouncetime",{"_index":3236,"title":{},"body":{"components/FullNameComponent.html":{},"interfaces/FullNameErrorMsg.html":{},"components/GeocoderInputComponent.html":{}}}],["debouncetime(500",{"_index":3367,"title":{},"body":{"components/GeocoderInputComponent.html":{}}}],["debug",{"_index":4650,"title":{},"body":{"changelog.html":{}}}],["decision",{"_index":289,"title":{},"body":{"classes/AbstractHttpService.html":{},"injectables/GeocoderService.html":{}}}],["declarations",{"_index":1172,"title":{},"body":{"modules/CaptchaModule.html":{},"modules/SharedCoreModule.html":{},"index.html":{},"overview.html":{},"additional-documentation/getting-started.html":{}}}],["decorators",{"_index":89,"title":{},"body":{"classes/AbstractForm.html":{},"components/ButtonComponent.html":{},"components/ButtonGroupComponent.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"components/DatepickerComponent.html":{},"components/DropdownComponent.html":{},"components/EmailComponent.html":{},"components/GeocoderInputComponent.html":{},"components/NameComponent.html":{},"components/PhnComponent.html":{},"components/PhoneNumberComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"components/RadioComponent.html":{},"components/SampleModalComponent.html":{},"components/SinComponent.html":{},"components/ThumbnailComponent.html":{},"components/WizardProgressBarComponent.html":{}}}],["deeper",{"_index":5388,"title":{},"body":{"additional-documentation/getting-started.html":{}}}],["default",{"_index":35,"title":{},"body":{"classes/AbstractBaseForm.html":{},"classes/AbstractForm.html":{},"classes/AbstractFormControl.html":{},"classes/AbstractHttpService.html":{},"classes/AbstractReactForm.html":{},"classes/AbstractTestPage.html":{},"components/AccordionCommonComponent.html":{},"interfaces/AddrLabelList.html":{},"classes/Address.html":{},"classes/Base.html":{},"components/ButtonComponent.html":{},"components/ButtonGroupComponent.html":{},"injectables/CheckCompleteBaseService.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"classes/CommonImage.html":{},"components/ConfirmTemplateComponent.html":{},"interfaces/CountryList.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"injectables/DefaultPageGuardService.html":{},"components/DropdownComponent.html":{},"components/EmailComponent.html":{},"components/ErrorContainerComponent.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/FullNameComponent.html":{},"interfaces/FullNameErrorMsg.html":{},"components/GeocoderInputComponent.html":{},"injectables/GeocoderService.html":{},"components/HeaderComponent.html":{},"interfaces/IRadioItems.html":{},"interfaces/ISpaEnvResponse.html":{},"interfaces/Maxlengths.html":{},"components/NameComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"injectables/PageStateService.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"classes/Person.html":{},"components/PhnComponent.html":{},"components/PhoneNumberComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"components/RadioComponent.html":{},"interfaces/ReadOnlyFields.html":{},"components/SampleModalComponent.html":{},"components/SinComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"directives/ValidatePostalcodeDirective.html":{},"components/WizardProgressBarComponent.html":{},"changelog.html":{},"miscellaneous/enumerations.html":{},"todo.html":{}}}],["defaultcolor",{"_index":3141,"title":{},"body":{"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{}}}],["defaultcountry",{"_index":799,"title":{},"body":{"interfaces/AddrLabelList.html":{},"interfaces/Maxlengths.html":{},"interfaces/ReadOnlyFields.html":{}}}],["defaulted",{"_index":823,"title":{},"body":{"interfaces/AddrLabelList.html":{},"interfaces/Maxlengths.html":{},"interfaces/ReadOnlyFields.html":{}}}],["defaulterrmsg",{"_index":2303,"title":{},"body":{"interfaces/CountryList.html":{},"components/PostalCodeComponent.html":{}}}],["defaulterrmsg.invalidbcpostal",{"_index":4158,"title":{},"body":{"components/PostalCodeComponent.html":{}}}],["defaulterrmsg.invalidchar",{"_index":4159,"title":{},"body":{"components/PostalCodeComponent.html":{}}}],["defaulterrmsg.pattern",{"_index":4157,"title":{},"body":{"components/PostalCodeComponent.html":{}}}],["defaulterrmsg.required",{"_index":4156,"title":{},"body":{"components/PostalCodeComponent.html":{}}}],["defaulterrormessage",{"_index":1286,"title":{},"body":{"components/CheckboxComponent.html":{}}}],["defaultpageguardservice",{"_index":2501,"title":{"injectables/DefaultPageGuardService.html":{}},"body":{"injectables/DefaultPageGuardService.html":{},"guards/LoadPageGuardService.html":{},"coverage.html":{}}}],["defaultprovince",{"_index":800,"title":{},"body":{"interfaces/AddrLabelList.html":{},"interfaces/Maxlengths.html":{},"interfaces/ReadOnlyFields.html":{}}}],["defaults",{"_index":883,"title":{},"body":{"interfaces/AddrLabelList.html":{},"interfaces/GeoAddressResult.html":{},"injectables/GeocoderService.html":{},"interfaces/Maxlengths.html":{},"interfaces/ReadOnlyFields.html":{},"changelog.html":{}}}],["defined",{"_index":22,"title":{},"body":{"classes/AbstractBaseForm.html":{},"classes/AbstractForm.html":{},"classes/AbstractFormControl.html":{},"classes/AbstractHttpService.html":{},"injectables/AbstractPageGuardService.html":{},"injectables/AbstractPgCheckService.html":{},"classes/AbstractReactForm.html":{},"classes/AbstractTestPage.html":{},"components/AccordionCommonComponent.html":{},"classes/Address.html":{},"classes/Base.html":{},"components/ButtonComponent.html":{},"components/ButtonGroupComponent.html":{},"injectables/CaptchaDataService.html":{},"modules/CaptchaModule.html":{},"injectables/CheckCompleteBaseService.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"classes/CommonImage.html":{},"classes/CommonImageProcessingError.html":{},"interfaces/CommonImageScaleFactors.html":{},"classes/CommonImageScaleFactorsImpl.html":{},"interfaces/CommonLogMessage.html":{},"components/ConfirmTemplateComponent.html":{},"classes/Container.html":{},"components/CoreBreadcrumbComponent.html":{},"directives/DateFieldFormatDirective.html":{},"components/DatepickerComponent.html":{},"injectables/DefaultPageGuardService.html":{},"components/DropdownComponent.html":{},"directives/DuplicateCheckDirective.html":{},"components/EmailComponent.html":{},"components/ErrorContainerComponent.html":{},"interfaces/ErrorMessage.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/FullNameComponent.html":{},"components/GeocoderInputComponent.html":{},"injectables/GeocoderService.html":{},"components/HeaderComponent.html":{},"guards/LoadPageGuardService.html":{},"classes/MoHCommonLibraryError.html":{},"components/NameComponent.html":{},"components/PageFrameworkComponent.html":{},"interfaces/PageList.html":{},"interfaces/PageListInterface.html":{},"components/PageSectionComponent.html":{},"injectables/PageStateService.html":{},"components/PasswordComponent.html":{},"classes/Person.html":{},"components/PhnComponent.html":{},"components/PhoneNumberComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"components/RadioComponent.html":{},"guards/RouteGuardService.html":{},"components/SampleModalComponent.html":{},"injectables/ServerPayload.html":{},"components/SinComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"directives/ValidateBcPostalDirective.html":{},"directives/ValidateCityDirective.html":{},"directives/ValidateNameDirective.html":{},"directives/ValidatePostalcodeDirective.html":{},"directives/ValidateRegionDirective.html":{},"directives/ValidateStreetDirective.html":{},"components/WizardProgressBarComponent.html":{},"components/XiconButtonComponent.html":{},"changelog.html":{},"additional-documentation/local-development/components.html":{}}}],["defining",{"_index":2412,"title":{},"body":{"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{}}}],["delay",{"_index":2630,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["delete",{"_index":3113,"title":{},"body":{"interfaces/FileUploaderMsg.html":{},"interfaces/ISpaEnvResponse.html":{},"components/ThumbnailComponent.html":{},"todo.html":{}}}],["delete(evt",{"_index":4402,"title":{},"body":{"components/ThumbnailComponent.html":{}}}],["deleted",{"_index":4660,"title":{},"body":{"changelog.html":{}}}],["deleteimage",{"_index":4396,"title":{},"body":{"components/ThumbnailComponent.html":{}}}],["deleteimage(mspimage",{"_index":3122,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["delivery",{"_index":829,"title":{},"body":{"interfaces/AddrLabelList.html":{},"interfaces/Maxlengths.html":{},"interfaces/ReadOnlyFields.html":{}}}],["democratic",{"_index":1861,"title":{},"body":{"interfaces/CountryList.html":{}}}],["denmark",{"_index":1881,"title":{},"body":{"interfaces/CountryList.html":{}}}],["denominator",{"_index":4519,"title":{},"body":{"components/WizardProgressBarComponent.html":{}}}],["dependencies",{"_index":1052,"title":{"dependencies.html":{}},"body":{"classes/Base.html":{},"modules/CaptchaModule.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"classes/Person.html":{},"modules/SharedCoreModule.html":{},"components/WizardProgressBarComponent.html":{},"dependencies.html":{},"overview.html":{},"additional-documentation/local-development/schematics.html":{},"additional-documentation/local-development/components.html":{}}}],["dependency",{"_index":1659,"title":{},"body":{"interfaces/CommonLogMessage.html":{},"additional-documentation/local-development/schematics.html":{}}}],["depending",{"_index":895,"title":{},"body":{"interfaces/AddrLabelList.html":{},"interfaces/Maxlengths.html":{},"interfaces/ReadOnlyFields.html":{}}}],["deployed",{"_index":1188,"title":{},"body":{"modules/CaptchaModule.html":{}}}],["deployurl",{"_index":3474,"title":{},"body":{"components/HeaderComponent.html":{}}}],["deprecate",{"_index":4898,"title":{},"body":{"changelog.html":{}}}],["deprecated",{"_index":381,"title":{},"body":{"injectables/AbstractPgCheckService.html":{},"components/ButtonGroupComponent.html":{},"interfaces/FileUploaderMsg.html":{},"guards/RouteGuardService.html":{},"directives/ValidateBcPostalDirective.html":{},"components/XiconButtonComponent.html":{},"changelog.html":{}}}],["depreciated",{"_index":1252,"title":{},"body":{"injectables/CheckCompleteBaseService.html":{},"interfaces/PageListInterface.html":{}}}],["deprecriated",{"_index":4614,"title":{},"body":{"changelog.html":{}}}],["desc",{"_index":4244,"title":{},"body":{"interfaces/SampleImageInterface.html":{},"components/SampleModalComponent.html":{}}}],["description",{"_index":155,"title":{},"body":{"classes/AbstractFormControl.html":{},"classes/AbstractHttpService.html":{},"injectables/AbstractPageGuardService.html":{},"classes/AbstractTestPage.html":{},"components/AccordionCommonComponent.html":{},"classes/Address.html":{},"classes/Base.html":{},"components/ButtonComponent.html":{},"components/ButtonGroupComponent.html":{},"injectables/CheckCompleteBaseService.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"classes/CommonImage.html":{},"classes/Container.html":{},"components/CoreBreadcrumbComponent.html":{},"interfaces/CountryList.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"injectables/DefaultPageGuardService.html":{},"components/EmailComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/FullNameComponent.html":{},"components/GeocoderInputComponent.html":{},"injectables/GeocoderService.html":{},"components/HeaderComponent.html":{},"interfaces/IRadioItems.html":{},"interfaces/ISpaEnvResponse.html":{},"guards/LoadPageGuardService.html":{},"components/NameComponent.html":{},"components/PageFrameworkComponent.html":{},"interfaces/PageListInterface.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"classes/Person.html":{},"components/PhnComponent.html":{},"components/PhoneNumberComponent.html":{},"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{},"components/RadioComponent.html":{},"interfaces/SimpleDate.html":{},"components/SinComponent.html":{},"components/WizardProgressBarComponent.html":{}}}],["descriptions",{"_index":4829,"title":{},"body":{"changelog.html":{}}}],["deserunt",{"_index":1444,"title":{},"body":{"components/CityComponent.html":{},"interfaces/CountryList.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"interfaces/FileUploaderMsg.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{}}}],["design",{"_index":755,"title":{},"body":{"interfaces/AddrLabelList.html":{},"modules/CaptchaModule.html":{},"components/CityComponent.html":{},"components/CoreBreadcrumbComponent.html":{},"interfaces/CountryList.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"interfaces/FileUploaderMsg.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"interfaces/Maxlengths.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{},"interfaces/ReadOnlyFields.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{},"changelog.html":{}}}],["designed",{"_index":3525,"title":{},"body":{"interfaces/ISpaEnvResponse.html":{}}}],["designs",{"_index":4913,"title":{},"body":{"changelog.html":{}}}],["detailed",{"_index":5384,"title":{},"body":{"additional-documentation/getting-started.html":{}}}],["detect",{"_index":2727,"title":{},"body":{"interfaces/FileUploaderMsg.html":{},"changelog.html":{}}}],["detection",{"_index":2419,"title":{},"body":{"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"components/FormActionBarComponent.html":{}}}],["detector",{"_index":2726,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["determine",{"_index":1008,"title":{},"body":{"classes/Address.html":{},"interfaces/ISpaEnvResponse.html":{},"guards/LoadPageGuardService.html":{},"guards/RouteGuardService.html":{},"directives/ValidateBcPostalDirective.html":{}}}],["determines",{"_index":47,"title":{},"body":{"classes/AbstractBaseForm.html":{},"classes/AbstractForm.html":{},"classes/AbstractReactForm.html":{},"interfaces/ISpaEnvResponse.html":{}}}],["deu",{"_index":1928,"title":{},"body":{"interfaces/CountryList.html":{}}}],["dev",{"_index":1265,"title":{},"body":{"injectables/CheckCompleteBaseService.html":{},"components/FullNameComponent.html":{},"interfaces/FullNameErrorMsg.html":{},"interfaces/ISpaEnvResponse.html":{},"interfaces/PageListInterface.html":{}}}],["developers",{"_index":179,"title":{},"body":{"classes/AbstractFormControl.html":{}}}],["development",{"_index":3956,"title":{"additional-documentation/local-development.html":{}},"body":{"classes/Person.html":{},"changelog.html":{},"additional-documentation/getting-started.html":{},"additional-documentation/local-development.html":{},"additional-documentation/local-development/components.html":{}}}],["device",{"_index":3534,"title":{},"body":{"interfaces/ISpaEnvResponse.html":{}}}],["devkit/schematics",{"_index":5441,"title":{},"body":{"additional-documentation/local-development/schematics.html":{}}}],["df26aa1",{"_index":5085,"title":{},"body":{"changelog.html":{}}}],["df678e6",{"_index":5034,"title":{},"body":{"changelog.html":{}}}],["dialog",{"_index":2903,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["differ",{"_index":5501,"title":{},"body":{"additional-documentation/local-development/components.html":{}}}],["differenceinyears",{"_index":3964,"title":{},"body":{"classes/Person.html":{}}}],["different",{"_index":5482,"title":{},"body":{"additional-documentation/local-development/components.html":{}}}],["digitfinaldigit",{"_index":4048,"title":{},"body":{"components/PhnComponent.html":{}}}],["directive",{"_index":209,"title":{"directives/DateFieldFormatDirective.html":{},"directives/DuplicateCheckDirective.html":{},"directives/ValidateBcPostalDirective.html":{},"directives/ValidateCityDirective.html":{},"directives/ValidateNameDirective.html":{},"directives/ValidatePostalcodeDirective.html":{},"directives/ValidateRegionDirective.html":{},"directives/ValidateStreetDirective.html":{}},"body":{"classes/AbstractFormControl.html":{},"components/AccordionCommonComponent.html":{},"components/ButtonComponent.html":{},"components/ButtonGroupComponent.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"components/ConfirmTemplateComponent.html":{},"components/CoreBreadcrumbComponent.html":{},"directives/DateFieldFormatDirective.html":{},"components/DatepickerComponent.html":{},"components/DropdownComponent.html":{},"directives/DuplicateCheckDirective.html":{},"components/EmailComponent.html":{},"components/ErrorContainerComponent.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/FullNameComponent.html":{},"components/GeocoderInputComponent.html":{},"components/HeaderComponent.html":{},"components/NameComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"components/PhnComponent.html":{},"components/PhoneNumberComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"components/RadioComponent.html":{},"components/SampleModalComponent.html":{},"components/SinComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"directives/ValidateBcPostalDirective.html":{},"directives/ValidateCityDirective.html":{},"directives/ValidateNameDirective.html":{},"directives/ValidatePostalcodeDirective.html":{},"directives/ValidateRegionDirective.html":{},"directives/ValidateStreetDirective.html":{},"components/WizardProgressBarComponent.html":{},"components/XiconButtonComponent.html":{},"changelog.html":{},"coverage.html":{}}}],["directive's",{"_index":3607,"title":{},"body":{"interfaces/ISpaEnvResponse.html":{}}}],["directives",{"_index":734,"title":{},"body":{"components/AccordionCommonComponent.html":{},"components/ButtonComponent.html":{},"components/ButtonGroupComponent.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"components/ConfirmTemplateComponent.html":{},"components/CoreBreadcrumbComponent.html":{},"directives/DateFieldFormatDirective.html":{},"components/DatepickerComponent.html":{},"components/DropdownComponent.html":{},"directives/DuplicateCheckDirective.html":{},"components/EmailComponent.html":{},"components/ErrorContainerComponent.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/FullNameComponent.html":{},"components/GeocoderInputComponent.html":{},"components/HeaderComponent.html":{},"components/NameComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"components/PhnComponent.html":{},"components/PhoneNumberComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"components/RadioComponent.html":{},"components/SampleModalComponent.html":{},"modules/SharedCoreModule.html":{},"components/SinComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"directives/ValidateBcPostalDirective.html":{},"directives/ValidateCityDirective.html":{},"directives/ValidateNameDirective.html":{},"directives/ValidatePostalcodeDirective.html":{},"directives/ValidateRegionDirective.html":{},"directives/ValidateStreetDirective.html":{},"components/WizardProgressBarComponent.html":{},"components/XiconButtonComponent.html":{},"overview.html":{}}}],["directly",{"_index":1014,"title":{},"body":{"classes/Address.html":{},"additional-documentation/local-development/components.html":{}}}],["disable",{"_index":187,"title":{},"body":{"classes/AbstractFormControl.html":{},"interfaces/AddrLabelList.html":{},"interfaces/Maxlengths.html":{},"interfaces/ReadOnlyFields.html":{},"changelog.html":{}}}],["disablebefore",{"_index":2350,"title":{},"body":{"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{}}}],["disablecontinue",{"_index":3594,"title":{},"body":{"interfaces/ISpaEnvResponse.html":{},"changelog.html":{}}}],["disabled",{"_index":11,"title":{},"body":{"classes/AbstractBaseForm.html":{},"classes/AbstractForm.html":{},"classes/AbstractFormControl.html":{},"classes/AbstractReactForm.html":{},"interfaces/AddrLabelList.html":{},"components/ButtonComponent.html":{},"components/ButtonGroupComponent.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"interfaces/CountryList.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"components/EmailComponent.html":{},"components/FullNameComponent.html":{},"interfaces/FullNameErrorMsg.html":{},"interfaces/Maxlengths.html":{},"components/NameComponent.html":{},"components/PhnComponent.html":{},"components/PhoneNumberComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"components/RadioComponent.html":{},"interfaces/ReadOnlyFields.html":{},"components/SinComponent.html":{}}}],["disablegeocoder",{"_index":801,"title":{},"body":{"interfaces/AddrLabelList.html":{},"interfaces/Maxlengths.html":{},"interfaces/ReadOnlyFields.html":{},"changelog.html":{}}}],["disables",{"_index":31,"title":{},"body":{"classes/AbstractBaseForm.html":{},"classes/AbstractForm.html":{},"classes/AbstractReactForm.html":{}}}],["disablesince",{"_index":2347,"title":{},"body":{"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{}}}],["disableuntil",{"_index":2343,"title":{},"body":{"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{}}}],["disabling",{"_index":3522,"title":{},"body":{"interfaces/ISpaEnvResponse.html":{}}}],["disiplay",{"_index":3404,"title":{},"body":{"components/GeocoderInputComponent.html":{}}}],["dislayed",{"_index":4091,"title":{},"body":{"components/PhoneNumberComponent.html":{}}}],["display",{"_index":396,"title":{},"body":{"classes/AbstractReactForm.html":{},"interfaces/AddrLabelList.html":{},"classes/Container.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"interfaces/FileUploaderMsg.html":{},"components/FormActionBarComponent.html":{},"interfaces/IRadioItems.html":{},"interfaces/ISpaEnvResponse.html":{},"interfaces/Maxlengths.html":{},"components/PageSectionComponent.html":{},"classes/Person.html":{},"components/PhnComponent.html":{},"components/PostalCodeComponent.html":{},"components/RadioComponent.html":{},"interfaces/ReadOnlyFields.html":{},"components/SinComponent.html":{},"interfaces/WizardProgressItem.html":{},"changelog.html":{}}}],["display=\"table",{"_index":3487,"title":{},"body":{"interfaces/IRadioItems.html":{},"components/RadioComponent.html":{}}}],["display='inline",{"_index":3492,"title":{},"body":{"interfaces/IRadioItems.html":{},"components/RadioComponent.html":{}}}],["displayed",{"_index":470,"title":{},"body":{"classes/AbstractTestPage.html":{},"interfaces/FileUploaderMsg.html":{},"components/PhoneNumberComponent.html":{}}}],["displayerror",{"_index":2599,"title":{},"body":{"components/ErrorContainerComponent.html":{}}}],["displayicon",{"_index":1674,"title":{},"body":{"components/ConfirmTemplateComponent.html":{}}}],["displaying",{"_index":4823,"title":{},"body":{"changelog.html":{}}}],["displaymask",{"_index":4062,"title":{},"body":{"components/PhoneNumberComponent.html":{},"components/PostalCodeComponent.html":{}}}],["dist",{"_index":2623,"title":{},"body":{"interfaces/FileUploaderMsg.html":{},"changelog.html":{},"dependencies.html":{},"additional-documentation/local-development/components.html":{}}}],["dist/build/pdf",{"_index":2656,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["dist/build/pdf.worker.entry",{"_index":2658,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["dist/common",{"_index":5497,"title":{},"body":{"additional-documentation/local-development/components.html":{}}}],["distantfuture",{"_index":5185,"title":{},"body":{"coverage.html":{}}}],["distantpast",{"_index":5186,"title":{},"body":{"coverage.html":{}}}],["distinctio",{"_index":1407,"title":{},"body":{"components/CityComponent.html":{},"interfaces/CountryList.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"interfaces/FileUploaderMsg.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{}}}],["distinctuntilchanged",{"_index":3360,"title":{},"body":{"components/GeocoderInputComponent.html":{}}}],["distributed",{"_index":5344,"title":{},"body":{"license.html":{}}}],["divide",{"_index":4041,"title":{},"body":{"components/PhnComponent.html":{}}}],["divisible",{"_index":4387,"title":{},"body":{"components/SinComponent.html":{}}}],["divs",{"_index":3786,"title":{},"body":{"components/PageSectionComponent.html":{}}}],["dji",{"_index":1882,"title":{},"body":{"interfaces/CountryList.html":{}}}],["djibouti",{"_index":1883,"title":{},"body":{"interfaces/CountryList.html":{}}}],["dma",{"_index":1884,"title":{},"body":{"interfaces/CountryList.html":{}}}],["dnk",{"_index":1880,"title":{},"body":{"interfaces/CountryList.html":{}}}],["dob",{"_index":3946,"title":{},"body":{"classes/Person.html":{}}}],["dobformat",{"_index":3926,"title":{},"body":{"classes/Person.html":{}}}],["doc",{"_index":4756,"title":{},"body":{"changelog.html":{}}}],["docinitparams",{"_index":3093,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["docs",{"_index":3570,"title":{},"body":{"interfaces/ISpaEnvResponse.html":{},"changelog.html":{}}}],["document",{"_index":2556,"title":{},"body":{"components/EmailComponent.html":{},"components/NameComponent.html":{},"changelog.html":{},"additional-documentation/local-development/schematics.html":{}}}],["document.body.scrollheight",{"_index":592,"title":{},"body":{"classes/AbstractTestPage.html":{}}}],["document.createelement('canvas",{"_index":3089,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["document.createelement('img",{"_index":3064,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["document.getelementsbyclassname('horizontal",{"_index":4532,"title":{},"body":{"components/WizardProgressBarComponent.html":{}}}],["document:paste",{"_index":3835,"title":{},"body":{"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{}}}],["document:paste(event",{"_index":3852,"title":{},"body":{"components/PasswordComponent.html":{}}}],["documentation",{"_index":4713,"title":{},"body":{"changelog.html":{},"coverage.html":{},"index.html":{},"additional-documentation/getting-started.html":{},"additional-documentation/local-development/components.html":{}}}],["documents",{"_index":2687,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["documenttype",{"_index":1498,"title":{},"body":{"interfaces/CommonAttachmentJson.html":{},"classes/CommonImage.html":{},"classes/CommonImageProcessingError.html":{},"interfaces/CommonImageScaleFactors.html":{},"classes/CommonImageScaleFactorsImpl.html":{}}}],["doing",{"_index":1101,"title":{},"body":{"components/ButtonGroupComponent.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{}}}],["dolor",{"_index":1377,"title":{},"body":{"components/CityComponent.html":{},"interfaces/CountryList.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"interfaces/FileUploaderMsg.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{}}}],["dom",{"_index":629,"title":{},"body":{"components/AccordionCommonComponent.html":{},"components/ButtonComponent.html":{},"components/ButtonGroupComponent.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"components/ConfirmTemplateComponent.html":{},"components/CoreBreadcrumbComponent.html":{},"interfaces/CountryList.html":{},"components/DatepickerComponent.html":{},"components/DropdownComponent.html":{},"components/EmailComponent.html":{},"components/ErrorContainerComponent.html":{},"interfaces/FileUploaderMsg.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/FullNameComponent.html":{},"components/GeocoderInputComponent.html":{},"components/HeaderComponent.html":{},"components/NameComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"components/PhnComponent.html":{},"components/PhoneNumberComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"components/RadioComponent.html":{},"components/SampleModalComponent.html":{},"components/SinComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{},"components/XiconButtonComponent.html":{}}}],["dominica",{"_index":1885,"title":{},"body":{"interfaces/CountryList.html":{}}}],["dominican",{"_index":1886,"title":{},"body":{"interfaces/CountryList.html":{}}}],["don't",{"_index":1293,"title":{},"body":{"components/CheckboxComponent.html":{},"interfaces/CommonLogMessage.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"interfaces/FileUploaderMsg.html":{},"components/HeaderComponent.html":{}}}],["don'ts",{"_index":5386,"title":{},"body":{"additional-documentation/getting-started.html":{}}}],["done",{"_index":2814,"title":{},"body":{"interfaces/FileUploaderMsg.html":{},"additional-documentation/local-development/schematics.html":{}}}],["don’t",{"_index":3538,"title":{},"body":{"interfaces/ISpaEnvResponse.html":{}}}],["dos",{"_index":5385,"title":{},"body":{"additional-documentation/getting-started.html":{}}}],["double",{"_index":3737,"title":{},"body":{"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"additional-documentation/getting-started.html":{}}}],["down",{"_index":536,"title":{},"body":{"classes/AbstractTestPage.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"interfaces/FileUploaderMsg.html":{},"components/ThumbnailComponent.html":{},"changelog.html":{}}}],["drag",{"_index":2740,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["dragover",{"_index":2828,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["dragoverstream",{"_index":2826,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["dragoverstream.pipe(map(evt",{"_index":2830,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["drop",{"_index":2747,"title":{},"body":{"interfaces/FileUploaderMsg.html":{},"components/ThumbnailComponent.html":{}}}],["dropdown",{"_index":495,"title":{},"body":{"classes/AbstractTestPage.html":{},"components/DropdownComponent.html":{},"changelog.html":{}}}],["dropdown'},{'name",{"_index":683,"title":{},"body":{"components/AccordionCommonComponent.html":{},"components/ButtonComponent.html":{},"components/ButtonGroupComponent.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"components/ConfirmTemplateComponent.html":{},"components/CoreBreadcrumbComponent.html":{},"components/DatepickerComponent.html":{},"components/DropdownComponent.html":{},"components/EmailComponent.html":{},"components/ErrorContainerComponent.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/FullNameComponent.html":{},"components/GeocoderInputComponent.html":{},"components/HeaderComponent.html":{},"components/NameComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"components/PhnComponent.html":{},"components/PhoneNumberComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"components/RadioComponent.html":{},"components/SampleModalComponent.html":{},"components/SinComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{},"components/XiconButtonComponent.html":{}}}],["dropdown.component.html",{"_index":2515,"title":{},"body":{"components/DropdownComponent.html":{}}}],["dropdown.component.scss",{"_index":2514,"title":{},"body":{"components/DropdownComponent.html":{}}}],["dropdowncomponent",{"_index":546,"title":{"components/DropdownComponent.html":{}},"body":{"classes/AbstractTestPage.html":{},"components/AccordionCommonComponent.html":{},"components/ButtonComponent.html":{},"components/ButtonGroupComponent.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"components/ConfirmTemplateComponent.html":{},"components/CoreBreadcrumbComponent.html":{},"components/DatepickerComponent.html":{},"components/DropdownComponent.html":{},"components/EmailComponent.html":{},"components/ErrorContainerComponent.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/FullNameComponent.html":{},"components/GeocoderInputComponent.html":{},"components/HeaderComponent.html":{},"components/NameComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"components/PhnComponent.html":{},"components/PhoneNumberComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"components/RadioComponent.html":{},"components/SampleModalComponent.html":{},"modules/SharedCoreModule.html":{},"components/SinComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{},"components/XiconButtonComponent.html":{},"changelog.html":{},"coverage.html":{},"overview.html":{}}}],["drops",{"_index":2742,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["dropstream",{"_index":2834,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["dropstream.pipe",{"_index":2836,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["dropzone",{"_index":2672,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["ducimus",{"_index":1431,"title":{},"body":{"components/CityComponent.html":{},"interfaces/CountryList.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"interfaces/FileUploaderMsg.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{}}}],["due",{"_index":1657,"title":{},"body":{"interfaces/CommonLogMessage.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"interfaces/FileUploaderMsg.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{}}}],["dummy",{"_index":3957,"title":{},"body":{"classes/Person.html":{}}}],["duplicate",{"_index":501,"title":{},"body":{"classes/AbstractTestPage.html":{},"directives/DuplicateCheckDirective.html":{},"interfaces/FileUploaderMsg.html":{},"components/HeaderComponent.html":{},"components/PhnComponent.html":{},"components/SinComponent.html":{},"changelog.html":{}}}],["duplicatecheckdirective",{"_index":737,"title":{"directives/DuplicateCheckDirective.html":{}},"body":{"components/AccordionCommonComponent.html":{},"components/ButtonComponent.html":{},"components/ButtonGroupComponent.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"components/ConfirmTemplateComponent.html":{},"components/CoreBreadcrumbComponent.html":{},"components/DatepickerComponent.html":{},"components/DropdownComponent.html":{},"directives/DuplicateCheckDirective.html":{},"components/EmailComponent.html":{},"components/ErrorContainerComponent.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/FullNameComponent.html":{},"components/GeocoderInputComponent.html":{},"components/HeaderComponent.html":{},"components/NameComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"components/PhnComponent.html":{},"components/PhoneNumberComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"components/RadioComponent.html":{},"components/SampleModalComponent.html":{},"modules/SharedCoreModule.html":{},"components/SinComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{},"components/XiconButtonComponent.html":{},"coverage.html":{},"overview.html":{}}}],["duplist",{"_index":2541,"title":{},"body":{"directives/DuplicateCheckDirective.html":{}}}],["duplist.find",{"_index":2550,"title":{},"body":{"directives/DuplicateCheckDirective.html":{}}}],["duplist.length",{"_index":2549,"title":{},"body":{"directives/DuplicateCheckDirective.html":{}}}],["dutch",{"_index":2188,"title":{},"body":{"interfaces/CountryList.html":{}}}],["dynamic",{"_index":5284,"title":{},"body":{"dependencies.html":{}}}],["dynamically",{"_index":896,"title":{},"body":{"interfaces/AddrLabelList.html":{},"interfaces/Maxlengths.html":{},"interfaces/ReadOnlyFields.html":{}}}],["dza",{"_index":1751,"title":{},"body":{"interfaces/CountryList.html":{}}}],["d{3",{"_index":4085,"title":{},"body":{"components/PhoneNumberComponent.html":{}}}],["d{4",{"_index":4086,"title":{},"body":{"components/PhoneNumberComponent.html":{}}}],["e",{"_index":3554,"title":{},"body":{"interfaces/ISpaEnvResponse.html":{}}}],["e.g",{"_index":268,"title":{},"body":{"classes/AbstractHttpService.html":{},"classes/AbstractTestPage.html":{},"components/ButtonComponent.html":{},"interfaces/CommonLogMessage.html":{},"classes/Container.html":{},"components/EmailComponent.html":{},"interfaces/FileUploaderMsg.html":{},"components/GeocoderInputComponent.html":{},"injectables/GeocoderService.html":{},"interfaces/WizardProgressItem.html":{},"components/XiconButtonComponent.html":{},"additional-documentation/getting-started.html":{},"additional-documentation/local-development/schematics.html":{},"additional-documentation/local-development/components.html":{}}}],["e0bd207",{"_index":4619,"title":{},"body":{"changelog.html":{}}}],["e2271b7",{"_index":4984,"title":{},"body":{"changelog.html":{}}}],["e2e",{"_index":409,"title":{},"body":{"classes/AbstractTestPage.html":{},"changelog.html":{}}}],["e35f16b",{"_index":4908,"title":{},"body":{"changelog.html":{}}}],["e458627",{"_index":4927,"title":{},"body":{"changelog.html":{}}}],["e485f67",{"_index":4956,"title":{},"body":{"changelog.html":{}}}],["e6db87e",{"_index":4719,"title":{},"body":{"changelog.html":{}}}],["e762fc1",{"_index":5105,"title":{},"body":{"changelog.html":{}}}],["e81927b",{"_index":4991,"title":{},"body":{"changelog.html":{}}}],["e89e6f3",{"_index":4691,"title":{},"body":{"changelog.html":{}}}],["ea/pa",{"_index":2821,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["each",{"_index":174,"title":{},"body":{"classes/AbstractFormControl.html":{},"classes/AbstractReactForm.html":{},"classes/Address.html":{},"interfaces/CommonLogMessage.html":{},"interfaces/FileUploaderMsg.html":{},"guards/LoadPageGuardService.html":{},"classes/Person.html":{},"components/PhnComponent.html":{},"guards/RouteGuardService.html":{},"components/SinComponent.html":{},"changelog.html":{},"additional-documentation/getting-started.html":{},"additional-documentation/local-development/schematics.html":{},"additional-documentation/local-development/components.html":{}}}],["earlier",{"_index":2815,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["easier",{"_index":1070,"title":{},"body":{"components/ButtonComponent.html":{},"interfaces/CommonLogMessage.html":{}}}],["easily",{"_index":2802,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["easy",{"_index":3181,"title":{},"body":{"components/FormSubmitBarComponent.html":{}}}],["ebb6998",{"_index":4841,"title":{},"body":{"changelog.html":{}}}],["ecu",{"_index":1887,"title":{},"body":{"interfaces/CountryList.html":{}}}],["ecuador",{"_index":1888,"title":{},"body":{"interfaces/CountryList.html":{}}}],["ed615a6",{"_index":4627,"title":{},"body":{"changelog.html":{}}}],["edf0b2e",{"_index":4888,"title":{},"body":{"changelog.html":{}}}],["edge",{"_index":4698,"title":{},"body":{"changelog.html":{}}}],["edittable",{"_index":4092,"title":{},"body":{"components/PhoneNumberComponent.html":{}}}],["edward",{"_index":4197,"title":{},"body":{"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{}}}],["egy",{"_index":1889,"title":{},"body":{"interfaces/CountryList.html":{}}}],["egypt",{"_index":1890,"title":{},"body":{"interfaces/CountryList.html":{}}}],["eib",{"_index":2992,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["el",{"_index":1892,"title":{},"body":{"interfaces/CountryList.html":{}}}],["element",{"_index":585,"title":{},"body":{"classes/AbstractTestPage.html":{},"components/AccordionCommonComponent.html":{},"components/ButtonComponent.html":{},"components/ButtonGroupComponent.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"components/ConfirmTemplateComponent.html":{},"components/CoreBreadcrumbComponent.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"components/DropdownComponent.html":{},"components/EmailComponent.html":{},"components/ErrorContainerComponent.html":{},"interfaces/FileUploaderMsg.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/FullNameComponent.html":{},"components/GeocoderInputComponent.html":{},"components/HeaderComponent.html":{},"interfaces/ISpaEnvResponse.html":{},"components/NameComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"components/PhnComponent.html":{},"components/PhoneNumberComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"components/RadioComponent.html":{},"components/SampleModalComponent.html":{},"components/SinComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{},"components/XiconButtonComponent.html":{},"changelog.html":{}}}],["element's",{"_index":2768,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["element(by.css('.form",{"_index":440,"title":{},"body":{"classes/AbstractTestPage.html":{}}}],["element(by.css('.skip",{"_index":449,"title":{},"body":{"classes/AbstractTestPage.html":{}}}],["element(by.css('common",{"_index":618,"title":{},"body":{"classes/AbstractTestPage.html":{}}}],["element(by.css('div[class=\"modal",{"_index":616,"title":{},"body":{"classes/AbstractTestPage.html":{}}}],["element(by.css('label[for=\"agree\"]')).element(by.css('strong')).click",{"_index":615,"title":{},"body":{"classes/AbstractTestPage.html":{}}}],["element(by.css(`input[ng",{"_index":610,"title":{},"body":{"classes/AbstractTestPage.html":{}}}],["element(by.css(`input[role=\"combobox\"]`)).sendkeys(data",{"_index":607,"title":{},"body":{"classes/AbstractTestPage.html":{}}}],["element(by.css(`ng",{"_index":602,"title":{},"body":{"classes/AbstractTestPage.html":{}}}],["element(by.csscontainingtext('span.ng",{"_index":605,"title":{},"body":{"classes/AbstractTestPage.html":{}}}],["element(by.csscontainingtext(`button[class*=\"${classval",{"_index":612,"title":{},"body":{"classes/AbstractTestPage.html":{}}}],["element(by.csscontainingtext(label",{"_index":624,"title":{},"body":{"classes/AbstractTestPage.html":{}}}],["element(by.id(await",{"_index":596,"title":{},"body":{"classes/AbstractTestPage.html":{}}}],["element.all(by.css(`input[ng",{"_index":622,"title":{},"body":{"classes/AbstractTestPage.html":{}}}],["element.all(by.csscontainingtext('lib",{"_index":594,"title":{},"body":{"classes/AbstractTestPage.html":{}}}],["elementref",{"_index":1092,"title":{},"body":{"components/ButtonComponent.html":{},"components/ButtonGroupComponent.html":{},"components/CheckboxComponent.html":{},"interfaces/FileUploaderMsg.html":{},"components/WizardProgressBarComponent.html":{}}}],["elements",{"_index":92,"title":{},"body":{"classes/AbstractForm.html":{},"classes/AbstractReactForm.html":{},"components/CoreBreadcrumbComponent.html":{},"components/PageSectionComponent.html":{}}}],["elementsgit",{"_index":4805,"title":{},"body":{"changelog.html":{}}}],["eligibility",{"_index":3559,"title":{},"body":{"interfaces/ISpaEnvResponse.html":{}}}],["elit",{"_index":1382,"title":{},"body":{"components/CityComponent.html":{},"interfaces/CountryList.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"interfaces/FileUploaderMsg.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{}}}],["email",{"_index":2559,"title":{},"body":{"components/EmailComponent.html":{},"changelog.html":{}}}],["email'},{'name",{"_index":685,"title":{},"body":{"components/AccordionCommonComponent.html":{},"components/ButtonComponent.html":{},"components/ButtonGroupComponent.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"components/ConfirmTemplateComponent.html":{},"components/CoreBreadcrumbComponent.html":{},"components/DatepickerComponent.html":{},"components/DropdownComponent.html":{},"components/EmailComponent.html":{},"components/ErrorContainerComponent.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/FullNameComponent.html":{},"components/GeocoderInputComponent.html":{},"components/HeaderComponent.html":{},"components/NameComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"components/PhnComponent.html":{},"components/PhoneNumberComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"components/RadioComponent.html":{},"components/SampleModalComponent.html":{},"components/SinComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{},"components/XiconButtonComponent.html":{}}}],["email.component.html",{"_index":2561,"title":{},"body":{"components/EmailComponent.html":{}}}],["email.component.scss",{"_index":2560,"title":{},"body":{"components/EmailComponent.html":{}}}],["email_",{"_index":2565,"title":{},"body":{"components/EmailComponent.html":{}}}],["emailcomponent",{"_index":684,"title":{"components/EmailComponent.html":{}},"body":{"components/AccordionCommonComponent.html":{},"components/ButtonComponent.html":{},"components/ButtonGroupComponent.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"components/ConfirmTemplateComponent.html":{},"components/CoreBreadcrumbComponent.html":{},"components/DatepickerComponent.html":{},"components/DropdownComponent.html":{},"components/EmailComponent.html":{},"components/ErrorContainerComponent.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/FullNameComponent.html":{},"components/GeocoderInputComponent.html":{},"components/HeaderComponent.html":{},"components/NameComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"components/PhnComponent.html":{},"components/PhoneNumberComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"components/RadioComponent.html":{},"components/SampleModalComponent.html":{},"modules/SharedCoreModule.html":{},"components/SinComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{},"components/XiconButtonComponent.html":{},"changelog.html":{},"coverage.html":{},"overview.html":{}}}],["embedded",{"_index":4912,"title":{},"body":{"changelog.html":{}}}],["emirates",{"_index":2261,"title":{},"body":{"interfaces/CountryList.html":{}}}],["emit",{"_index":2427,"title":{},"body":{"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"components/GeocoderInputComponent.html":{},"changelog.html":{}}}],["emits",{"_index":4632,"title":{},"body":{"changelog.html":{}}}],["empty",{"_index":1031,"title":{},"body":{"classes/Address.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"components/GeocoderInputComponent.html":{},"changelog.html":{},"additional-documentation/local-development/components.html":{}}}],["enabled",{"_index":4872,"title":{},"body":{"changelog.html":{}}}],["enables",{"_index":812,"title":{},"body":{"interfaces/AddrLabelList.html":{},"interfaces/Maxlengths.html":{},"interfaces/ReadOnlyFields.html":{}}}],["encapsulation",{"_index":2667,"title":{},"body":{"interfaces/FileUploaderMsg.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/ThumbnailComponent.html":{}}}],["enclose",{"_index":3170,"title":{},"body":{"components/FormSubmitBarComponent.html":{}}}],["encoding",{"_index":5468,"title":{},"body":{"additional-documentation/local-development/schematics.html":{}}}],["encountered",{"_index":3054,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["encourage",{"_index":522,"title":{},"body":{"classes/AbstractTestPage.html":{}}}],["encryptedanswer",{"_index":1152,"title":{},"body":{"injectables/CaptchaDataService.html":{},"injectables/ServerPayload.html":{}}}],["end",{"_index":5487,"title":{},"body":{"additional-documentation/local-development/components.html":{}}}],["enrolservice",{"_index":361,"title":{},"body":{"injectables/AbstractPageGuardService.html":{}}}],["ensure",{"_index":1636,"title":{},"body":{"interfaces/CommonLogMessage.html":{},"interfaces/FileUploaderMsg.html":{},"components/PageFrameworkComponent.html":{}}}],["enter",{"_index":579,"title":{},"body":{"classes/AbstractTestPage.html":{},"interfaces/FileUploaderMsg.html":{},"components/GeocoderInputComponent.html":{},"interfaces/ISpaEnvResponse.html":{}}}],["entered",{"_index":3537,"title":{},"body":{"interfaces/ISpaEnvResponse.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{}}}],["entering",{"_index":3402,"title":{},"body":{"components/GeocoderInputComponent.html":{}}}],["entries",{"_index":2711,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["entry",{"_index":4995,"title":{},"body":{"changelog.html":{},"additional-documentation/getting-started.html":{}}}],["entry.model",{"_index":2640,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["enum",{"_index":1460,"title":{},"body":{"interfaces/CommonAttachmentJson.html":{},"classes/CommonImage.html":{},"classes/CommonImageProcessingError.html":{},"interfaces/CommonImageScaleFactors.html":{},"classes/CommonImageScaleFactorsImpl.html":{},"interfaces/CommonLogMessage.html":{},"components/ConfirmTemplateComponent.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{}}}],["enumerations",{"_index":5298,"title":{"miscellaneous/enumerations.html":{}},"body":{"miscellaneous/enumerations.html":{}}}],["enums",{"_index":5406,"title":{},"body":{"additional-documentation/getting-started.html":{}}}],["env",{"_index":3510,"title":{},"body":{"interfaces/ISpaEnvResponse.html":{}}}],["environment",{"_index":1266,"title":{},"body":{"injectables/CheckCompleteBaseService.html":{},"interfaces/PageListInterface.html":{}}}],["equation",{"_index":2907,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["equatorial",{"_index":1895,"title":{},"body":{"interfaces/CountryList.html":{}}}],["equivalent",{"_index":2348,"title":{},"body":{"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{}}}],["eri",{"_index":1897,"title":{},"body":{"interfaces/CountryList.html":{}}}],["eritrea",{"_index":1898,"title":{},"body":{"interfaces/CountryList.html":{}}}],["erorr",{"_index":3629,"title":{},"body":{"interfaces/ISpaEnvResponse.html":{}}}],["err",{"_index":3330,"title":{},"body":{"components/GeocoderInputComponent.html":{}}}],["errmsg",{"_index":3194,"title":{},"body":{"components/FullNameComponent.html":{},"interfaces/FullNameErrorMsg.html":{},"interfaces/ISpaEnvResponse.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{}}}],["errmsg.criteria",{"_index":3921,"title":{},"body":{"components/PasswordComponent.html":{}}}],["errmsg.minlength",{"_index":3920,"title":{},"body":{"components/PasswordComponent.html":{}}}],["errmsg.pattern",{"_index":3258,"title":{},"body":{"components/FullNameComponent.html":{}}}],["errmsg.required",{"_index":3257,"title":{},"body":{"components/FullNameComponent.html":{},"components/PasswordComponent.html":{}}}],["error",{"_index":167,"title":{},"body":{"classes/AbstractFormControl.html":{},"classes/AbstractHttpService.html":{},"components/AccordionCommonComponent.html":{},"components/ButtonComponent.html":{},"components/ButtonGroupComponent.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"interfaces/CommonAttachmentJson.html":{},"classes/CommonImage.html":{},"classes/CommonImageProcessingError.html":{},"interfaces/CommonImageScaleFactors.html":{},"classes/CommonImageScaleFactorsImpl.html":{},"interfaces/CommonLogMessage.html":{},"components/ConfirmTemplateComponent.html":{},"components/CoreBreadcrumbComponent.html":{},"interfaces/CountryList.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"components/DropdownComponent.html":{},"components/EmailComponent.html":{},"components/ErrorContainerComponent.html":{},"interfaces/FileUploaderMsg.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/FullNameComponent.html":{},"interfaces/GeoAddressResult.html":{},"components/GeocoderInputComponent.html":{},"injectables/GeocoderService.html":{},"components/HeaderComponent.html":{},"interfaces/ISpaEnvResponse.html":{},"classes/MoHCommonLibraryError.html":{},"components/NameComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"components/PhnComponent.html":{},"components/PhoneNumberComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{},"components/RadioComponent.html":{},"components/SampleModalComponent.html":{},"components/SinComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{},"components/XiconButtonComponent.html":{},"changelog.html":{},"miscellaneous/enumerations.html":{}}}],["error('common",{"_index":4556,"title":{},"body":{"components/XiconButtonComponent.html":{}}}],["error('this",{"_index":3076,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["error.error",{"_index":1642,"title":{},"body":{"interfaces/CommonLogMessage.html":{},"interfaces/ISpaEnvResponse.html":{}}}],["error.error.message",{"_index":1648,"title":{},"body":{"interfaces/CommonLogMessage.html":{},"interfaces/ISpaEnvResponse.html":{}}}],["error.errorcode",{"_index":2877,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["error.errordescription",{"_index":2888,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["error.image",{"_index":2880,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["error.image.name",{"_index":2883,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["error.message",{"_index":1612,"title":{},"body":{"interfaces/CommonLogMessage.html":{}}}],["error.name",{"_index":1614,"title":{},"body":{"interfaces/CommonLogMessage.html":{}}}],["error.rawimagefile",{"_index":2882,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["error.rawimagefile.name",{"_index":2884,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["error.status",{"_index":1652,"title":{},"body":{"interfaces/CommonLogMessage.html":{},"interfaces/ISpaEnvResponse.html":{}}}],["error.statustext",{"_index":1616,"title":{},"body":{"interfaces/CommonLogMessage.html":{}}}],["error.ts",{"_index":3684,"title":{},"body":{"classes/MoHCommonLibraryError.html":{},"coverage.html":{}}}],["error.ts:1",{"_index":3686,"title":{},"body":{"classes/MoHCommonLibraryError.html":{}}}],["error_fetch_img",{"_index":5309,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["error_verify",{"_index":5312,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["errorcode",{"_index":1486,"title":{},"body":{"interfaces/CommonAttachmentJson.html":{},"classes/CommonImage.html":{},"classes/CommonImageProcessingError.html":{},"interfaces/CommonImageScaleFactors.html":{},"classes/CommonImageScaleFactorsImpl.html":{},"components/ConfirmTemplateComponent.html":{}}}],["errorcontainercomponent",{"_index":686,"title":{"components/ErrorContainerComponent.html":{}},"body":{"components/AccordionCommonComponent.html":{},"components/ButtonComponent.html":{},"components/ButtonGroupComponent.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"components/ConfirmTemplateComponent.html":{},"components/CoreBreadcrumbComponent.html":{},"components/DatepickerComponent.html":{},"components/DropdownComponent.html":{},"components/EmailComponent.html":{},"components/ErrorContainerComponent.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/FullNameComponent.html":{},"components/GeocoderInputComponent.html":{},"components/HeaderComponent.html":{},"components/NameComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"components/PhnComponent.html":{},"components/PhoneNumberComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"components/RadioComponent.html":{},"components/SampleModalComponent.html":{},"modules/SharedCoreModule.html":{},"components/SinComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{},"components/XiconButtonComponent.html":{},"coverage.html":{},"overview.html":{}}}],["errordescription",{"_index":1487,"title":{},"body":{"interfaces/CommonAttachmentJson.html":{},"classes/CommonImage.html":{},"classes/CommonImageProcessingError.html":{},"interfaces/CommonImageScaleFactors.html":{},"classes/CommonImageScaleFactorsImpl.html":{},"interfaces/FileUploaderMsg.html":{}}}],["errordescription.pdf.js",{"_index":1476,"title":{},"body":{"interfaces/CommonAttachmentJson.html":{},"classes/CommonImage.html":{},"classes/CommonImageProcessingError.html":{},"interfaces/CommonImageScaleFactors.html":{},"classes/CommonImageScaleFactorsImpl.html":{}}}],["errordocument",{"_index":2690,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["errorevent",{"_index":1644,"title":{},"body":{"interfaces/CommonLogMessage.html":{},"interfaces/ISpaEnvResponse.html":{}}}],["errormessage",{"_index":129,"title":{"interfaces/ErrorMessage.html":{}},"body":{"classes/AbstractFormControl.html":{},"components/CityComponent.html":{},"interfaces/CommonLogMessage.html":{},"interfaces/CountryList.html":{},"components/EmailComponent.html":{},"interfaces/ErrorMessage.html":{},"interfaces/IRadioItems.html":{},"components/PhnComponent.html":{},"components/PhoneNumberComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{},"components/RadioComponent.html":{},"components/SinComponent.html":{},"coverage.html":{}}}],["errormessagerequired",{"_index":1110,"title":{},"body":{"components/ButtonGroupComponent.html":{},"components/CheckboxComponent.html":{}}}],["errormessages",{"_index":2318,"title":{},"body":{"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"interfaces/FileUploaderMsg.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"components/SinComponent.html":{}}}],["errormessages.dayoutofrange",{"_index":2495,"title":{},"body":{"components/DatepickerComponent.html":{}}}],["errormessages.invalidvalue",{"_index":2500,"title":{},"body":{"components/DatepickerComponent.html":{}}}],["errormessages.nofuturedatesallowed",{"_index":2499,"title":{},"body":{"components/DatepickerComponent.html":{}}}],["errormessages.nopastdatesallowed",{"_index":2498,"title":{},"body":{"components/DatepickerComponent.html":{}}}],["errormessages.required",{"_index":2494,"title":{},"body":{"components/DatepickerComponent.html":{}}}],["errormessages.yeardistantfuture",{"_index":2497,"title":{},"body":{"components/DatepickerComponent.html":{}}}],["errormessages.yeardistantpast",{"_index":2496,"title":{},"body":{"components/DatepickerComponent.html":{}}}],["errorname",{"_index":1613,"title":{},"body":{"interfaces/CommonLogMessage.html":{}}}],["errorreason",{"_index":3085,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["errors",{"_index":397,"title":{},"body":{"classes/AbstractReactForm.html":{},"interfaces/CommonLogMessage.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"interfaces/FileUploaderMsg.html":{},"components/FormActionBarComponent.html":{},"components/GeocoderInputComponent.html":{},"components/SinComponent.html":{},"changelog.html":{},"additional-documentation/local-development/schematics.html":{}}}],["errors.pipe",{"_index":3040,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["errors.pipe(scan",{"_index":3053,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["errors.pipe(scan((acc",{"_index":3052,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["esh",{"_index":2284,"title":{},"body":{"interfaces/CountryList.html":{}}}],["esp",{"_index":2204,"title":{},"body":{"interfaces/CountryList.html":{}}}],["especially",{"_index":3532,"title":{},"body":{"interfaces/ISpaEnvResponse.html":{}}}],["esse",{"_index":1400,"title":{},"body":{"components/CityComponent.html":{},"interfaces/CountryList.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"interfaces/FileUploaderMsg.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{}}}],["est",{"_index":1899,"title":{},"body":{"interfaces/CountryList.html":{}}}],["estonia",{"_index":1900,"title":{},"body":{"interfaces/CountryList.html":{}}}],["et",{"_index":1419,"title":{},"body":{"components/CityComponent.html":{},"interfaces/CountryList.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"interfaces/FileUploaderMsg.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{}}}],["etc",{"_index":550,"title":{},"body":{"classes/AbstractTestPage.html":{},"interfaces/FileUploaderMsg.html":{},"components/FormActionBarComponent.html":{},"interfaces/GeoAddressResult.html":{},"injectables/GeocoderService.html":{},"additional-documentation/getting-started.html":{},"additional-documentation/local-development/schematics.html":{}}}],["eth",{"_index":1901,"title":{},"body":{"interfaces/CountryList.html":{}}}],["ethiopia",{"_index":1902,"title":{},"body":{"interfaces/CountryList.html":{}}}],["eum",{"_index":1411,"title":{},"body":{"components/CityComponent.html":{},"interfaces/CountryList.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"interfaces/FileUploaderMsg.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{}}}],["eustatius",{"_index":1803,"title":{},"body":{"interfaces/CountryList.html":{}}}],["ev",{"_index":3466,"title":{},"body":{"components/HeaderComponent.html":{},"components/WizardProgressBarComponent.html":{}}}],["ev.url",{"_index":4508,"title":{},"body":{"components/WizardProgressBarComponent.html":{}}}],["even",{"_index":2409,"title":{},"body":{"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"interfaces/FileUploaderMsg.html":{},"additional-documentation/local-development/schematics.html":{}}}],["evenly",{"_index":4524,"title":{},"body":{"components/WizardProgressBarComponent.html":{}}}],["event",{"_index":1091,"title":{},"body":{"components/ButtonComponent.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"interfaces/CommonLogMessage.html":{},"interfaces/CountryList.html":{},"directives/DateFieldFormatDirective.html":{},"components/DatepickerComponent.html":{},"components/EmailComponent.html":{},"interfaces/FileUploaderMsg.html":{},"components/FormActionBarComponent.html":{},"components/GeocoderInputComponent.html":{},"interfaces/ISpaEnvResponse.html":{},"components/NameComponent.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"components/PhnComponent.html":{},"components/PhoneNumberComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{},"components/SinComponent.html":{},"changelog.html":{}}}],["event.datatransfer.files",{"_index":2838,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["event.item",{"_index":3390,"title":{},"body":{"components/GeocoderInputComponent.html":{}}}],["event.jsdate",{"_index":2426,"title":{},"body":{"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{}}}],["event.keycode",{"_index":3406,"title":{},"body":{"components/GeocoderInputComponent.html":{}}}],["event.preventdefault",{"_index":2837,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["event.stoppropagation",{"_index":3164,"title":{},"body":{"components/FormActionBarComponent.html":{}}}],["event.target",{"_index":2452,"title":{},"body":{"directives/DateFieldFormatDirective.html":{}}}],["event.target.value",{"_index":2591,"title":{},"body":{"components/EmailComponent.html":{},"components/NameComponent.html":{}}}],["event.target['files",{"_index":2844,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["eventemitter",{"_index":764,"title":{},"body":{"interfaces/AddrLabelList.html":{},"components/ButtonComponent.html":{},"components/ButtonGroupComponent.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"interfaces/CountryList.html":{},"interfaces/DateErrorMsg.html":{},"directives/DateFieldFormatDirective.html":{},"components/DatepickerComponent.html":{},"components/EmailComponent.html":{},"interfaces/FileUploaderMsg.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/FullNameComponent.html":{},"interfaces/FullNameErrorMsg.html":{},"components/GeocoderInputComponent.html":{},"interfaces/IRadioItems.html":{},"interfaces/ISpaEnvResponse.html":{},"interfaces/Maxlengths.html":{},"components/NameComponent.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"components/PhnComponent.html":{},"components/PhoneNumberComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{},"components/RadioComponent.html":{},"interfaces/ReadOnlyFields.html":{},"components/SinComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/XiconButtonComponent.html":{}}}],["eventemitter(false",{"_index":2449,"title":{},"body":{"directives/DateFieldFormatDirective.html":{}}}],["events",{"_index":3401,"title":{},"body":{"components/GeocoderInputComponent.html":{},"changelog.html":{}}}],["everything",{"_index":1594,"title":{},"body":{"interfaces/CommonLogMessage.html":{},"interfaces/GeoAddressResult.html":{},"injectables/GeocoderService.html":{}}}],["evt",{"_index":3007,"title":{},"body":{"interfaces/FileUploaderMsg.html":{},"components/ThumbnailComponent.html":{}}}],["evt.key",{"_index":2899,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["evt.preventdefault",{"_index":2833,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["evt.target.result",{"_index":3009,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["ex",{"_index":2319,"title":{},"body":{"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"components/PhoneNumberComponent.html":{},"components/SinComponent.html":{}}}],["exactly",{"_index":2860,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["example",{"_index":358,"title":{},"body":{"injectables/AbstractPageGuardService.html":{},"injectables/AbstractPgCheckService.html":{},"classes/AbstractTestPage.html":{},"components/AccordionCommonComponent.html":{},"components/ButtonComponent.html":{},"components/ButtonGroupComponent.html":{},"modules/CaptchaModule.html":{},"injectables/CheckCompleteBaseService.html":{},"components/CheckboxComponent.html":{},"interfaces/CommonLogMessage.html":{},"components/CoreBreadcrumbComponent.html":{},"injectables/DefaultPageGuardService.html":{},"components/FullNameComponent.html":{},"interfaces/FullNameErrorMsg.html":{},"components/GeocoderInputComponent.html":{},"interfaces/IRadioItems.html":{},"interfaces/ISpaEnvResponse.html":{},"guards/LoadPageGuardService.html":{},"components/PageFrameworkComponent.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"components/PhoneNumberComponent.html":{},"components/RadioComponent.html":{},"guards/RouteGuardService.html":{},"changelog.html":{},"additional-documentation/getting-started.html":{},"additional-documentation/local-development/schematics.html":{},"additional-documentation/local-development/components.html":{}}}],["example.component.ts",{"_index":3664,"title":{},"body":{"guards/LoadPageGuardService.html":{},"guards/RouteGuardService.html":{}}}],["example/path.../node/v8.9.4/lib/node_modules/moh",{"_index":5502,"title":{},"body":{"additional-documentation/local-development/components.html":{}}}],["examples",{"_index":4932,"title":{},"body":{"changelog.html":{}}}],["exampletodo",{"_index":5444,"title":{},"body":{"additional-documentation/local-development/schematics.html":{}}}],["exceeds",{"_index":2784,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["except",{"_index":1618,"title":{},"body":{"interfaces/CommonLogMessage.html":{},"components/NameComponent.html":{},"license.html":{}}}],["exception",{"_index":3728,"title":{},"body":{"components/PageFrameworkComponent.html":{}}}],["exclusive",{"_index":5306,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["execution",{"_index":4538,"title":{},"body":{"components/WizardProgressBarComponent.html":{}}}],["exendable",{"_index":4705,"title":{},"body":{"changelog.html":{}}}],["exercitationem",{"_index":1424,"title":{},"body":{"components/CityComponent.html":{},"interfaces/CountryList.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"interfaces/FileUploaderMsg.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{}}}],["exist",{"_index":1221,"title":{},"body":{"injectables/CheckCompleteBaseService.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"interfaces/PageListInterface.html":{},"changelog.html":{},"additional-documentation/local-development/components.html":{}}}],["exists",{"_index":2355,"title":{},"body":{"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"interfaces/FileUploaderMsg.html":{}}}],["expand",{"_index":648,"title":{},"body":{"components/AccordionCommonComponent.html":{}}}],["expandtext",{"_index":640,"title":{},"body":{"components/AccordionCommonComponent.html":{}}}],["expect",{"_index":5404,"title":{},"body":{"additional-documentation/getting-started.html":{}}}],["experimental",{"_index":5057,"title":{},"body":{"changelog.html":{}}}],["expiry",{"_index":1161,"title":{},"body":{"injectables/CaptchaDataService.html":{},"injectables/ServerPayload.html":{}}}],["export",{"_index":77,"title":{},"body":{"classes/AbstractBaseForm.html":{},"classes/AbstractForm.html":{},"classes/AbstractFormControl.html":{},"classes/AbstractHttpService.html":{},"injectables/AbstractPageGuardService.html":{},"injectables/AbstractPgCheckService.html":{},"classes/AbstractReactForm.html":{},"classes/AbstractTestPage.html":{},"components/AccordionCommonComponent.html":{},"interfaces/AddrLabelList.html":{},"classes/Address.html":{},"classes/Base.html":{},"components/ButtonComponent.html":{},"components/ButtonGroupComponent.html":{},"injectables/CaptchaDataService.html":{},"modules/CaptchaModule.html":{},"injectables/CheckCompleteBaseService.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"interfaces/CommonAttachmentJson.html":{},"classes/CommonImage.html":{},"classes/CommonImageProcessingError.html":{},"interfaces/CommonImageScaleFactors.html":{},"classes/CommonImageScaleFactorsImpl.html":{},"interfaces/CommonLogMessage.html":{},"components/ConfirmTemplateComponent.html":{},"classes/Container.html":{},"components/CoreBreadcrumbComponent.html":{},"interfaces/CountryList.html":{},"interfaces/DateErrorMsg.html":{},"directives/DateFieldFormatDirective.html":{},"components/DatepickerComponent.html":{},"injectables/DefaultPageGuardService.html":{},"components/DropdownComponent.html":{},"directives/DuplicateCheckDirective.html":{},"components/EmailComponent.html":{},"components/ErrorContainerComponent.html":{},"interfaces/ErrorMessage.html":{},"interfaces/FileUploaderMsg.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/FullNameComponent.html":{},"interfaces/FullNameErrorMsg.html":{},"interfaces/GeoAddressResult.html":{},"components/GeocoderInputComponent.html":{},"injectables/GeocoderService.html":{},"components/HeaderComponent.html":{},"interfaces/IRadioItems.html":{},"interfaces/ISpaEnvResponse.html":{},"guards/LoadPageGuardService.html":{},"interfaces/Maxlengths.html":{},"classes/MoHCommonLibraryError.html":{},"components/NameComponent.html":{},"components/PageFrameworkComponent.html":{},"interfaces/PageList.html":{},"interfaces/PageListInterface.html":{},"components/PageSectionComponent.html":{},"injectables/PageStateService.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"classes/Person.html":{},"components/PhnComponent.html":{},"components/PhoneNumberComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{},"components/RadioComponent.html":{},"interfaces/ReadOnlyFields.html":{},"guards/RouteGuardService.html":{},"interfaces/SampleImageInterface.html":{},"components/SampleModalComponent.html":{},"injectables/ServerPayload.html":{},"modules/SharedCoreModule.html":{},"interfaces/SimpleDate.html":{},"components/SinComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"directives/ValidateBcPostalDirective.html":{},"directives/ValidateCityDirective.html":{},"directives/ValidateNameDirective.html":{},"directives/ValidatePostalcodeDirective.html":{},"directives/ValidateRegionDirective.html":{},"directives/ValidateStreetDirective.html":{},"components/WizardProgressBarComponent.html":{},"interfaces/WizardProgressItem.html":{},"components/XiconButtonComponent.html":{},"changelog.html":{},"additional-documentation/getting-started.html":{}}}],["exported",{"_index":170,"title":{},"body":{"classes/AbstractFormControl.html":{},"changelog.html":{}}}],["exports",{"_index":1173,"title":{},"body":{"modules/CaptchaModule.html":{},"modules/SharedCoreModule.html":{},"overview.html":{}}}],["express",{"_index":5349,"title":{},"body":{"license.html":{}}}],["extend",{"_index":972,"title":{},"body":{"classes/Address.html":{},"classes/Base.html":{},"injectables/CheckCompleteBaseService.html":{},"components/CoreBreadcrumbComponent.html":{},"components/FormSubmitBarComponent.html":{},"interfaces/PageListInterface.html":{},"classes/Person.html":{}}}],["extends",{"_index":87,"title":{},"body":{"classes/AbstractForm.html":{},"classes/AbstractFormControl.html":{},"classes/AbstractReactForm.html":{},"interfaces/AddrLabelList.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"interfaces/CommonLogMessage.html":{},"components/ConfirmTemplateComponent.html":{},"interfaces/CountryList.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"components/DropdownComponent.html":{},"components/EmailComponent.html":{},"interfaces/FileUploaderMsg.html":{},"components/FullNameComponent.html":{},"interfaces/FullNameErrorMsg.html":{},"interfaces/GeoAddressResult.html":{},"components/GeocoderInputComponent.html":{},"injectables/GeocoderService.html":{},"interfaces/IRadioItems.html":{},"interfaces/ISpaEnvResponse.html":{},"interfaces/Maxlengths.html":{},"classes/MoHCommonLibraryError.html":{},"components/NameComponent.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"classes/Person.html":{},"components/PhnComponent.html":{},"components/PhoneNumberComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{},"components/RadioComponent.html":{},"interfaces/ReadOnlyFields.html":{},"interfaces/SampleImageInterface.html":{},"components/SampleModalComponent.html":{},"components/SinComponent.html":{},"components/ToggleComponent.html":{},"additional-documentation/getting-started.html":{}}}],["extra",{"_index":985,"title":{},"body":{"classes/Address.html":{},"changelog.html":{}}}],["extract",{"_index":2786,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["eye",{"_index":3890,"title":{},"body":{"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{}}}],["f0202f2",{"_index":4600,"title":{},"body":{"changelog.html":{}}}],["f103e7c",{"_index":4918,"title":{},"body":{"changelog.html":{}}}],["f18457b",{"_index":4702,"title":{},"body":{"changelog.html":{}}}],["f21d329",{"_index":4605,"title":{},"body":{"changelog.html":{}}}],["f27b941",{"_index":4594,"title":{},"body":{"changelog.html":{}}}],["f2ccfe6",{"_index":4792,"title":{},"body":{"changelog.html":{}}}],["f334faf",{"_index":4981,"title":{},"body":{"changelog.html":{}}}],["f541d81",{"_index":4739,"title":{},"body":{"changelog.html":{}}}],["f603e99",{"_index":5058,"title":{},"body":{"changelog.html":{}}}],["fa",{"_index":3889,"title":{},"body":{"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{}}}],["facere",{"_index":1395,"title":{},"body":{"components/CityComponent.html":{},"interfaces/CountryList.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"interfaces/FileUploaderMsg.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{}}}],["facets",{"_index":5483,"title":{},"body":{"additional-documentation/local-development/components.html":{}}}],["facing",{"_index":3628,"title":{},"body":{"interfaces/ISpaEnvResponse.html":{}}}],["failed",{"_index":262,"title":{},"body":{"classes/AbstractHttpService.html":{},"injectables/GeocoderService.html":{}}}],["fails",{"_index":2709,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["falkland",{"_index":1904,"title":{},"body":{"interfaces/CountryList.html":{}}}],["false",{"_index":37,"title":{},"body":{"classes/AbstractBaseForm.html":{},"classes/AbstractForm.html":{},"classes/AbstractFormControl.html":{},"classes/AbstractHttpService.html":{},"classes/AbstractReactForm.html":{},"components/AccordionCommonComponent.html":{},"interfaces/AddrLabelList.html":{},"classes/Address.html":{},"components/ButtonComponent.html":{},"components/ButtonGroupComponent.html":{},"injectables/CheckCompleteBaseService.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"interfaces/CountryList.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"injectables/DefaultPageGuardService.html":{},"components/DropdownComponent.html":{},"components/EmailComponent.html":{},"components/ErrorContainerComponent.html":{},"interfaces/FileUploaderMsg.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/FullNameComponent.html":{},"interfaces/FullNameErrorMsg.html":{},"interfaces/GeoAddressResult.html":{},"components/GeocoderInputComponent.html":{},"injectables/GeocoderService.html":{},"interfaces/IRadioItems.html":{},"interfaces/ISpaEnvResponse.html":{},"interfaces/Maxlengths.html":{},"components/NameComponent.html":{},"interfaces/PageList.html":{},"interfaces/PageListInterface.html":{},"injectables/PageStateService.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"components/PhnComponent.html":{},"components/PhoneNumberComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{},"components/RadioComponent.html":{},"interfaces/ReadOnlyFields.html":{},"guards/RouteGuardService.html":{},"components/SinComponent.html":{},"components/ThumbnailComponent.html":{},"directives/ValidatePostalcodeDirective.html":{},"todo.html":{}}}],["family",{"_index":4006,"title":{},"body":{"components/PhnComponent.html":{},"components/SinComponent.html":{}}}],["faroe",{"_index":1907,"title":{},"body":{"interfaces/CountryList.html":{}}}],["faso",{"_index":1827,"title":{},"body":{"interfaces/CountryList.html":{}}}],["faster",{"_index":5364,"title":{},"body":{"todo.html":{}}}],["favicon_base64",{"_index":5246,"title":{},"body":{"coverage.html":{}}}],["favour",{"_index":4504,"title":{},"body":{"components/WizardProgressBarComponent.html":{}}}],["fbc012d",{"_index":4962,"title":{},"body":{"changelog.html":{}}}],["fc7fe65",{"_index":4930,"title":{},"body":{"changelog.html":{}}}],["feature.properties",{"_index":3289,"title":{},"body":{"interfaces/GeoAddressResult.html":{},"injectables/GeocoderService.html":{}}}],["features",{"_index":4573,"title":{},"body":{"changelog.html":{}}}],["federated",{"_index":2059,"title":{},"body":{"interfaces/CountryList.html":{}}}],["federation",{"_index":2138,"title":{},"body":{"interfaces/CountryList.html":{}}}],["feedback",{"_index":3909,"title":{},"body":{"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"index.html":{}}}],["fetchaudio",{"_index":1138,"title":{},"body":{"injectables/CaptchaDataService.html":{}}}],["fetchaudio(apibaseurl",{"_index":1143,"title":{},"body":{"injectables/CaptchaDataService.html":{},"injectables/ServerPayload.html":{}}}],["fetchdata",{"_index":1139,"title":{},"body":{"injectables/CaptchaDataService.html":{}}}],["fetchdata(apibaseurl",{"_index":1147,"title":{},"body":{"injectables/CaptchaDataService.html":{},"injectables/ServerPayload.html":{}}}],["fetching_captcha_img",{"_index":5307,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["fg",{"_index":390,"title":{},"body":{"classes/AbstractReactForm.html":{}}}],["fg.foreach",{"_index":398,"title":{},"body":{"classes/AbstractReactForm.html":{}}}],["fg.markastouched",{"_index":400,"title":{},"body":{"classes/AbstractReactForm.html":{}}}],["field",{"_index":199,"title":{},"body":{"classes/AbstractFormControl.html":{},"classes/AbstractTestPage.html":{},"interfaces/AddrLabelList.html":{},"components/ButtonGroupComponent.html":{},"interfaces/DateErrorMsg.html":{},"directives/DateFieldFormatDirective.html":{},"components/DatepickerComponent.html":{},"components/FullNameComponent.html":{},"interfaces/FullNameErrorMsg.html":{},"interfaces/Maxlengths.html":{},"interfaces/ReadOnlyFields.html":{},"modules/SharedCoreModule.html":{},"components/SinComponent.html":{},"changelog.html":{},"coverage.html":{}}}],["fieldmaxlenghts",{"_index":836,"title":{},"body":{"interfaces/AddrLabelList.html":{},"interfaces/Maxlengths.html":{},"interfaces/ReadOnlyFields.html":{}}}],["fields",{"_index":795,"title":{},"body":{"interfaces/AddrLabelList.html":{},"classes/Address.html":{},"interfaces/CommonLogMessage.html":{},"interfaces/FileUploaderMsg.html":{},"interfaces/GeoAddressResult.html":{},"injectables/GeocoderService.html":{},"interfaces/Maxlengths.html":{},"interfaces/ReadOnlyFields.html":{},"changelog.html":{}}}],["fieldset",{"_index":4862,"title":{},"body":{"changelog.html":{}}}],["fiji",{"_index":1909,"title":{},"body":{"interfaces/CountryList.html":{}}}],["file",{"_index":5,"title":{},"body":{"classes/AbstractBaseForm.html":{},"classes/AbstractForm.html":{},"classes/AbstractFormControl.html":{},"classes/AbstractHttpService.html":{},"injectables/AbstractPageGuardService.html":{},"injectables/AbstractPgCheckService.html":{},"classes/AbstractReactForm.html":{},"classes/AbstractTestPage.html":{},"components/AccordionCommonComponent.html":{},"interfaces/AddrLabelList.html":{},"classes/Address.html":{},"classes/Base.html":{},"components/ButtonComponent.html":{},"components/ButtonGroupComponent.html":{},"injectables/CaptchaDataService.html":{},"modules/CaptchaModule.html":{},"injectables/CheckCompleteBaseService.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"interfaces/CommonAttachmentJson.html":{},"classes/CommonImage.html":{},"classes/CommonImageProcessingError.html":{},"interfaces/CommonImageScaleFactors.html":{},"classes/CommonImageScaleFactorsImpl.html":{},"interfaces/CommonLogMessage.html":{},"components/ConfirmTemplateComponent.html":{},"classes/Container.html":{},"components/CoreBreadcrumbComponent.html":{},"interfaces/CountryList.html":{},"interfaces/DateErrorMsg.html":{},"directives/DateFieldFormatDirective.html":{},"components/DatepickerComponent.html":{},"injectables/DefaultPageGuardService.html":{},"components/DropdownComponent.html":{},"directives/DuplicateCheckDirective.html":{},"components/EmailComponent.html":{},"components/ErrorContainerComponent.html":{},"interfaces/ErrorMessage.html":{},"interfaces/FileUploaderMsg.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/FullNameComponent.html":{},"interfaces/FullNameErrorMsg.html":{},"interfaces/GeoAddressResult.html":{},"components/GeocoderInputComponent.html":{},"injectables/GeocoderService.html":{},"components/HeaderComponent.html":{},"interfaces/IRadioItems.html":{},"interfaces/ISpaEnvResponse.html":{},"guards/LoadPageGuardService.html":{},"interfaces/Maxlengths.html":{},"classes/MoHCommonLibraryError.html":{},"components/NameComponent.html":{},"components/PageFrameworkComponent.html":{},"interfaces/PageList.html":{},"interfaces/PageListInterface.html":{},"components/PageSectionComponent.html":{},"injectables/PageStateService.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"classes/Person.html":{},"components/PhnComponent.html":{},"components/PhoneNumberComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{},"components/RadioComponent.html":{},"interfaces/ReadOnlyFields.html":{},"guards/RouteGuardService.html":{},"interfaces/SampleImageInterface.html":{},"components/SampleModalComponent.html":{},"injectables/ServerPayload.html":{},"modules/SharedCoreModule.html":{},"interfaces/SimpleDate.html":{},"components/SinComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"directives/ValidateBcPostalDirective.html":{},"directives/ValidateCityDirective.html":{},"directives/ValidateNameDirective.html":{},"directives/ValidatePostalcodeDirective.html":{},"directives/ValidateRegionDirective.html":{},"directives/ValidateStreetDirective.html":{},"components/WizardProgressBarComponent.html":{},"interfaces/WizardProgressItem.html":{},"components/XiconButtonComponent.html":{},"changelog.html":{},"coverage.html":{},"license.html":{},"additional-documentation/getting-started.html":{},"additional-documentation/local-development/schematics.html":{},"additional-documentation/local-development/components.html":{}}}],["file's",{"_index":2761,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["file.name",{"_index":2721,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["file.naturalheight",{"_index":3135,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["file_upload",{"_index":2920,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["filecontent",{"_index":1489,"title":{},"body":{"interfaces/CommonAttachmentJson.html":{},"classes/CommonImage.html":{},"classes/CommonImageProcessingError.html":{},"interfaces/CommonImageScaleFactors.html":{},"classes/CommonImageScaleFactorsImpl.html":{},"changelog.html":{}}}],["filecontrol",{"_index":2704,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["fileindex",{"_index":2914,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["filelist",{"_index":2850,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["filename",{"_index":2755,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["fileobservable",{"_index":2947,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["filereader",{"_index":2951,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["files",{"_index":2848,"title":{},"body":{"interfaces/FileUploaderMsg.html":{},"changelog.html":{},"additional-documentation/local-development/schematics.html":{},"additional-documentation/local-development/components.html":{}}}],["files.length",{"_index":2849,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["filesarrayfromdrop",{"_index":2835,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["filesarrayfromdrop).pipe",{"_index":2845,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["filesize",{"_index":2982,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["filesizeunit",{"_index":2983,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["fileupload",{"_index":4590,"title":{},"body":{"changelog.html":{}}}],["fileuploadbrowse",{"_index":2706,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["fileuploader",{"_index":4635,"title":{},"body":{"changelog.html":{},"additional-documentation/getting-started.html":{}}}],["fileuploadercomponent",{"_index":688,"title":{},"body":{"components/AccordionCommonComponent.html":{},"components/ButtonComponent.html":{},"components/ButtonGroupComponent.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"components/ConfirmTemplateComponent.html":{},"components/CoreBreadcrumbComponent.html":{},"components/DatepickerComponent.html":{},"components/DropdownComponent.html":{},"components/EmailComponent.html":{},"components/ErrorContainerComponent.html":{},"interfaces/FileUploaderMsg.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/FullNameComponent.html":{},"components/GeocoderInputComponent.html":{},"components/HeaderComponent.html":{},"components/NameComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"components/PhnComponent.html":{},"components/PhoneNumberComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"components/RadioComponent.html":{},"components/SampleModalComponent.html":{},"modules/SharedCoreModule.html":{},"components/SinComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{},"components/XiconButtonComponent.html":{},"changelog.html":{},"coverage.html":{},"overview.html":{}}}],["fileuploadercomponent.checkimageexists(mspimage",{"_index":2855,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["fileuploadermsg",{"_index":2611,"title":{"interfaces/FileUploaderMsg.html":{}},"body":{"interfaces/FileUploaderMsg.html":{},"coverage.html":{}}}],["filled",{"_index":1003,"title":{},"body":{"classes/Address.html":{}}}],["filter",{"_index":2627,"title":{},"body":{"interfaces/FileUploaderMsg.html":{},"components/GeocoderInputComponent.html":{},"components/HeaderComponent.html":{},"components/WizardProgressBarComponent.html":{},"changelog.html":{}}}],["filter((mspimage",{"_index":2863,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["filter(ev",{"_index":3465,"title":{},"body":{"components/HeaderComponent.html":{},"components/WizardProgressBarComponent.html":{}}}],["filter(files",{"_index":2846,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["filter(x",{"_index":919,"title":{},"body":{"interfaces/AddrLabelList.html":{},"classes/Container.html":{},"interfaces/Maxlengths.html":{},"interfaces/ReadOnlyFields.html":{},"interfaces/WizardProgressItem.html":{}}}],["fin",{"_index":1910,"title":{},"body":{"interfaces/CountryList.html":{}}}],["final",{"_index":2809,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["finaldigit",{"_index":4049,"title":{},"body":{"components/PhnComponent.html":{}}}],["finally",{"_index":2817,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["find",{"_index":846,"title":{},"body":{"interfaces/AddrLabelList.html":{},"interfaces/FileUploaderMsg.html":{},"interfaces/Maxlengths.html":{},"interfaces/PageList.html":{},"injectables/PageStateService.html":{},"interfaces/ReadOnlyFields.html":{},"index.html":{},"additional-documentation/getting-started.html":{}}}],["findcountrycode",{"_index":936,"title":{},"body":{"interfaces/AddrLabelList.html":{},"interfaces/Maxlengths.html":{},"interfaces/ReadOnlyFields.html":{}}}],["findindex",{"_index":3763,"title":{},"body":{"interfaces/PageList.html":{},"injectables/PageStateService.html":{}}}],["findindex(url",{"_index":3801,"title":{},"body":{"injectables/PageStateService.html":{}}}],["findprovincedescription(prov",{"_index":928,"title":{},"body":{"interfaces/AddrLabelList.html":{},"interfaces/Maxlengths.html":{},"interfaces/ReadOnlyFields.html":{}}}],["fine",{"_index":1599,"title":{},"body":{"interfaces/CommonLogMessage.html":{}}}],["finish",{"_index":3539,"title":{},"body":{"interfaces/ISpaEnvResponse.html":{}}}],["finishes",{"_index":2766,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["finland",{"_index":1911,"title":{},"body":{"interfaces/CountryList.html":{}}}],["fire",{"_index":3385,"title":{},"body":{"components/GeocoderInputComponent.html":{}}}],["firefox",{"_index":4854,"title":{},"body":{"changelog.html":{}}}],["first",{"_index":503,"title":{},"body":{"classes/AbstractTestPage.html":{},"interfaces/FileUploaderMsg.html":{},"components/FullNameComponent.html":{},"interfaces/FullNameErrorMsg.html":{},"components/PageSectionComponent.html":{},"classes/Person.html":{},"components/WizardProgressBarComponent.html":{},"changelog.html":{},"todo.html":{},"additional-documentation/local-development/schematics.html":{},"additional-documentation/local-development/components.html":{}}}],["first/middle/last",{"_index":4998,"title":{},"body":{"changelog.html":{}}}],["firstname",{"_index":3195,"title":{},"body":{"components/FullNameComponent.html":{},"interfaces/FullNameErrorMsg.html":{},"classes/Person.html":{}}}],["firstnamelabel",{"_index":3201,"title":{},"body":{"components/FullNameComponent.html":{},"interfaces/FullNameErrorMsg.html":{}}}],["fix",{"_index":2660,"title":{},"body":{"interfaces/FileUploaderMsg.html":{},"components/PhnComponent.html":{},"components/PostalCodeComponent.html":{},"components/SinComponent.html":{},"changelog.html":{},"todo.html":{},"additional-documentation/local-development/schematics.html":{}}}],["fixed",{"_index":4677,"title":{},"body":{"changelog.html":{}}}],["fixes",{"_index":4578,"title":{},"body":{"changelog.html":{}}}],["fixing",{"_index":3051,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["fji",{"_index":1908,"title":{},"body":{"interfaces/CountryList.html":{}}}],["flag",{"_index":3627,"title":{},"body":{"interfaces/ISpaEnvResponse.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"changelog.html":{}}}],["flags",{"_index":5112,"title":{},"body":{"changelog.html":{}}}],["flash",{"_index":5362,"title":{},"body":{"todo.html":{}}}],["flatmap",{"_index":2628,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["flex",{"_index":3783,"title":{},"body":{"components/PageSectionComponent.html":{}}}],["flk",{"_index":1903,"title":{},"body":{"interfaces/CountryList.html":{}}}],["flow",{"_index":3654,"title":{},"body":{"guards/LoadPageGuardService.html":{},"guards/RouteGuardService.html":{}}}],["fluid",{"_index":4949,"title":{},"body":{"changelog.html":{}}}],["fn",{"_index":144,"title":{},"body":{"classes/AbstractFormControl.html":{},"interfaces/AddrLabelList.html":{},"components/ButtonGroupComponent.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"interfaces/CountryList.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"components/DropdownComponent.html":{},"components/EmailComponent.html":{},"components/FullNameComponent.html":{},"interfaces/FullNameErrorMsg.html":{},"components/GeocoderInputComponent.html":{},"interfaces/IRadioItems.html":{},"interfaces/ISpaEnvResponse.html":{},"interfaces/Maxlengths.html":{},"components/NameComponent.html":{},"interfaces/PageList.html":{},"injectables/PageStateService.html":{},"components/PhnComponent.html":{},"components/PhoneNumberComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"components/RadioComponent.html":{},"interfaces/ReadOnlyFields.html":{},"components/SinComponent.html":{}}}],["fn.bind(this",{"_index":217,"title":{},"body":{"classes/AbstractFormControl.html":{}}}],["fns",{"_index":3965,"title":{},"body":{"classes/Person.html":{},"changelog.html":{},"dependencies.html":{}}}],["focus",{"_index":1018,"title":{},"body":{"classes/Address.html":{},"components/ButtonGroupComponent.html":{},"components/CheckboxComponent.html":{},"components/PhnComponent.html":{},"components/PostalCodeComponent.html":{},"components/SinComponent.html":{},"changelog.html":{}}}],["focusable",{"_index":4855,"title":{},"body":{"changelog.html":{}}}],["folder",{"_index":5400,"title":{},"body":{"additional-documentation/getting-started.html":{},"additional-documentation/local-development/schematics.html":{},"additional-documentation/local-development/components.html":{}}}],["folders",{"_index":5094,"title":{},"body":{"changelog.html":{},"additional-documentation/local-development/components.html":{}}}],["followed",{"_index":3228,"title":{},"body":{"components/FullNameComponent.html":{},"interfaces/FullNameErrorMsg.html":{}}}],["following",{"_index":2310,"title":{},"body":{"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"interfaces/SimpleDate.html":{},"components/SinComponent.html":{},"additional-documentation/local-development/components.html":{}}}],["follows",{"_index":5371,"title":{},"body":{"todo.html":{}}}],["fonts",{"_index":5028,"title":{},"body":{"changelog.html":{}}}],["footer\"]')).element(by.css('button[type=\"submit\"]')).click",{"_index":617,"title":{},"body":{"classes/AbstractTestPage.html":{}}}],["force",{"_index":2722,"title":{},"body":{"interfaces/FileUploaderMsg.html":{},"components/GeocoderInputComponent.html":{}}}],["forcerender",{"_index":2728,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["forget",{"_index":1638,"title":{},"body":{"interfaces/CommonLogMessage.html":{}}}],["form",{"_index":44,"title":{},"body":{"classes/AbstractBaseForm.html":{},"classes/AbstractForm.html":{},"classes/AbstractFormControl.html":{},"classes/AbstractReactForm.html":{},"classes/AbstractTestPage.html":{},"components/AccordionCommonComponent.html":{},"components/ButtonComponent.html":{},"components/ButtonGroupComponent.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"components/ConfirmTemplateComponent.html":{},"components/CoreBreadcrumbComponent.html":{},"components/DatepickerComponent.html":{},"components/DropdownComponent.html":{},"components/EmailComponent.html":{},"components/ErrorContainerComponent.html":{},"interfaces/FileUploaderMsg.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/FullNameComponent.html":{},"components/GeocoderInputComponent.html":{},"components/HeaderComponent.html":{},"interfaces/IRadioItems.html":{},"interfaces/ISpaEnvResponse.html":{},"guards/LoadPageGuardService.html":{},"components/NameComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"components/PhnComponent.html":{},"components/PhoneNumberComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{},"components/RadioComponent.html":{},"guards/RouteGuardService.html":{},"components/SampleModalComponent.html":{},"components/SinComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{},"components/XiconButtonComponent.html":{},"changelog.html":{},"coverage.html":{},"todo.html":{}}}],["form.ts",{"_index":8,"title":{},"body":{"classes/AbstractBaseForm.html":{},"classes/AbstractForm.html":{},"classes/AbstractReactForm.html":{},"coverage.html":{}}}],["form.ts:10",{"_index":38,"title":{},"body":{"classes/AbstractBaseForm.html":{}}}],["form.ts:12",{"_index":50,"title":{},"body":{"classes/AbstractBaseForm.html":{}}}],["form.ts:14",{"_index":23,"title":{},"body":{"classes/AbstractBaseForm.html":{}}}],["form.ts:20",{"_index":97,"title":{},"body":{"classes/AbstractForm.html":{}}}],["form.ts:22",{"_index":386,"title":{},"body":{"classes/AbstractReactForm.html":{}}}],["form.ts:24",{"_index":63,"title":{},"body":{"classes/AbstractBaseForm.html":{}}}],["form.ts:26",{"_index":98,"title":{},"body":{"classes/AbstractForm.html":{}}}],["form.ts:29",{"_index":389,"title":{},"body":{"classes/AbstractReactForm.html":{}}}],["form.ts:8",{"_index":30,"title":{},"body":{"classes/AbstractBaseForm.html":{},"classes/AbstractForm.html":{}}}],["form.ts:9",{"_index":385,"title":{},"body":{"classes/AbstractReactForm.html":{}}}],["formactionbar",{"_index":3167,"title":{},"body":{"components/FormSubmitBarComponent.html":{},"changelog.html":{},"todo.html":{}}}],["formactionbarcomponent",{"_index":690,"title":{"components/FormActionBarComponent.html":{}},"body":{"components/AccordionCommonComponent.html":{},"components/ButtonComponent.html":{},"components/ButtonGroupComponent.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"components/ConfirmTemplateComponent.html":{},"components/CoreBreadcrumbComponent.html":{},"components/DatepickerComponent.html":{},"components/DropdownComponent.html":{},"components/EmailComponent.html":{},"components/ErrorContainerComponent.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/FullNameComponent.html":{},"components/GeocoderInputComponent.html":{},"components/HeaderComponent.html":{},"components/NameComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"components/PhnComponent.html":{},"components/PhoneNumberComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"components/RadioComponent.html":{},"components/SampleModalComponent.html":{},"modules/SharedCoreModule.html":{},"components/SinComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{},"components/XiconButtonComponent.html":{},"coverage.html":{},"overview.html":{}}}],["format",{"_index":2361,"title":{},"body":{"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"classes/Person.html":{},"components/PostalCodeComponent.html":{},"changelog.html":{}}}],["format.directive",{"_index":4341,"title":{},"body":{"modules/SharedCoreModule.html":{}}}],["format.directive.ts",{"_index":2439,"title":{},"body":{"directives/DateFieldFormatDirective.html":{},"coverage.html":{}}}],["format.directive.ts:11",{"_index":2447,"title":{},"body":{"directives/DateFieldFormatDirective.html":{}}}],["format.directive.ts:8",{"_index":2443,"title":{},"body":{"directives/DateFieldFormatDirective.html":{}}}],["formatdateofbirth",{"_index":3929,"title":{},"body":{"classes/Person.html":{}}}],["formats",{"_index":3282,"title":{},"body":{"interfaces/GeoAddressResult.html":{},"injectables/GeocoderService.html":{}}}],["formatted",{"_index":2579,"title":{},"body":{"components/EmailComponent.html":{}}}],["formatting",{"_index":4574,"title":{},"body":{"changelog.html":{}}}],["formcontrol",{"_index":2326,"title":{},"body":{"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"components/GeocoderInputComponent.html":{},"todo.html":{}}}],["former",{"_index":2031,"title":{},"body":{"interfaces/CountryList.html":{}}}],["formerrors",{"_index":429,"title":{},"body":{"classes/AbstractTestPage.html":{}}}],["formgroup",{"_index":384,"title":{},"body":{"classes/AbstractReactForm.html":{}}}],["forms",{"_index":2553,"title":{},"body":{"directives/DuplicateCheckDirective.html":{},"components/EmailComponent.html":{},"components/NameComponent.html":{},"changelog.html":{}}}],["formsmodule",{"_index":1194,"title":{},"body":{"modules/CaptchaModule.html":{},"modules/SharedCoreModule.html":{}}}],["formsubmibar",{"_index":5360,"title":{},"body":{"todo.html":{}}}],["formsubmitbar",{"_index":3165,"title":{},"body":{"components/FormSubmitBarComponent.html":{}}}],["formsubmitbarcomponent",{"_index":692,"title":{"components/FormSubmitBarComponent.html":{}},"body":{"components/AccordionCommonComponent.html":{},"components/ButtonComponent.html":{},"components/ButtonGroupComponent.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"components/ConfirmTemplateComponent.html":{},"components/CoreBreadcrumbComponent.html":{},"components/DatepickerComponent.html":{},"components/DropdownComponent.html":{},"components/EmailComponent.html":{},"components/ErrorContainerComponent.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/FullNameComponent.html":{},"components/GeocoderInputComponent.html":{},"components/HeaderComponent.html":{},"components/NameComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"components/PhnComponent.html":{},"components/PhoneNumberComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"components/RadioComponent.html":{},"components/SampleModalComponent.html":{},"modules/SharedCoreModule.html":{},"components/SinComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{},"components/XiconButtonComponent.html":{},"coverage.html":{},"overview.html":{}}}],["forroot",{"_index":1181,"title":{},"body":{"modules/CaptchaModule.html":{}}}],["forwardref",{"_index":766,"title":{},"body":{"interfaces/AddrLabelList.html":{},"components/ButtonComponent.html":{},"components/ButtonGroupComponent.html":{},"components/CheckboxComponent.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"components/DropdownComponent.html":{},"interfaces/FileUploaderMsg.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/FullNameComponent.html":{},"interfaces/FullNameErrorMsg.html":{},"interfaces/ISpaEnvResponse.html":{},"interfaces/Maxlengths.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"components/PhoneNumberComponent.html":{},"interfaces/ReadOnlyFields.html":{}}}],["found",{"_index":355,"title":{},"body":{"injectables/AbstractPageGuardService.html":{},"injectables/AbstractPgCheckService.html":{},"additional-documentation/getting-started.html":{}}}],["foundation",{"_index":5396,"title":{},"body":{"additional-documentation/getting-started.html":{}}}],["fpc",{"_index":5001,"title":{},"body":{"changelog.html":{},"additional-documentation/local-development/schematics.html":{}}}],["fpcare",{"_index":3726,"title":{},"body":{"components/PageFrameworkComponent.html":{},"changelog.html":{}}}],["fra",{"_index":1912,"title":{},"body":{"interfaces/CountryList.html":{}}}],["framework",{"_index":3180,"title":{},"body":{"components/FormSubmitBarComponent.html":{},"components/PageFrameworkComponent.html":{},"changelog.html":{}}}],["framework'},{'name",{"_index":702,"title":{},"body":{"components/AccordionCommonComponent.html":{},"components/ButtonComponent.html":{},"components/ButtonGroupComponent.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"components/ConfirmTemplateComponent.html":{},"components/CoreBreadcrumbComponent.html":{},"components/DatepickerComponent.html":{},"components/DropdownComponent.html":{},"components/EmailComponent.html":{},"components/ErrorContainerComponent.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/FullNameComponent.html":{},"components/GeocoderInputComponent.html":{},"components/HeaderComponent.html":{},"components/NameComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"components/PhnComponent.html":{},"components/PhoneNumberComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"components/RadioComponent.html":{},"components/SampleModalComponent.html":{},"components/SinComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{},"components/XiconButtonComponent.html":{}}}],["framework.component",{"_index":4271,"title":{},"body":{"modules/SharedCoreModule.html":{}}}],["framework.component.html",{"_index":3736,"title":{},"body":{"components/PageFrameworkComponent.html":{}}}],["framework.component.scss",{"_index":3735,"title":{},"body":{"components/PageFrameworkComponent.html":{}}}],["framework.component.ts",{"_index":3725,"title":{},"body":{"components/PageFrameworkComponent.html":{},"coverage.html":{}}}],["framework.component.ts:29",{"_index":3738,"title":{},"body":{"components/PageFrameworkComponent.html":{}}}],["framework.component.ts:31",{"_index":3739,"title":{},"body":{"components/PageFrameworkComponent.html":{}}}],["framework/page",{"_index":3724,"title":{},"body":{"components/PageFrameworkComponent.html":{},"modules/SharedCoreModule.html":{},"coverage.html":{}}}],["france",{"_index":1913,"title":{},"body":{"interfaces/CountryList.html":{}}}],["free",{"_index":1058,"title":{},"body":{"components/ButtonComponent.html":{}}}],["freedom",{"_index":3555,"title":{},"body":{"interfaces/ISpaEnvResponse.html":{}}}],["french",{"_index":1915,"title":{},"body":{"interfaces/CountryList.html":{}}}],["friendly",{"_index":2800,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["fro",{"_index":1906,"title":{},"body":{"interfaces/CountryList.html":{}}}],["fromevent",{"_index":2624,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["fromevent(this.browsefileref.nativeelement",{"_index":2840,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["fromevent(this.capturefileref.nativeelement",{"_index":2842,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["fromevent(this.dropzone.nativeelement",{"_index":2827,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["fromevent(this.imageplaceholderref.nativeelement",{"_index":2894,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["fromevent(this.selectfilelabelref.nativeelement",{"_index":2896,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["fromevent(this.uploadinstructionref.nativeelement",{"_index":2897,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["fsm",{"_index":2057,"title":{},"body":{"interfaces/CountryList.html":{}}}],["fugiat",{"_index":1403,"title":{},"body":{"components/CityComponent.html":{},"interfaces/CountryList.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"interfaces/FileUploaderMsg.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{}}}],["full",{"_index":694,"title":{},"body":{"components/AccordionCommonComponent.html":{},"interfaces/AddrLabelList.html":{},"components/ButtonComponent.html":{},"components/ButtonGroupComponent.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"components/ConfirmTemplateComponent.html":{},"components/CoreBreadcrumbComponent.html":{},"components/DatepickerComponent.html":{},"components/DropdownComponent.html":{},"components/EmailComponent.html":{},"components/ErrorContainerComponent.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/FullNameComponent.html":{},"interfaces/FullNameErrorMsg.html":{},"components/GeocoderInputComponent.html":{},"components/HeaderComponent.html":{},"interfaces/Maxlengths.html":{},"components/NameComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"classes/Person.html":{},"components/PhnComponent.html":{},"components/PhoneNumberComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"components/RadioComponent.html":{},"interfaces/ReadOnlyFields.html":{},"components/SampleModalComponent.html":{},"components/SinComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{},"components/XiconButtonComponent.html":{},"changelog.html":{}}}],["fulladdress",{"_index":3260,"title":{},"body":{"interfaces/GeoAddressResult.html":{},"injectables/GeocoderService.html":{}}}],["fullname",{"_index":3930,"title":{},"body":{"classes/Person.html":{},"changelog.html":{}}}],["fullname.split",{"_index":3974,"title":{},"body":{"classes/Person.html":{}}}],["fullnamecomponent",{"_index":693,"title":{"components/FullNameComponent.html":{}},"body":{"components/AccordionCommonComponent.html":{},"components/ButtonComponent.html":{},"components/ButtonGroupComponent.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"components/ConfirmTemplateComponent.html":{},"components/CoreBreadcrumbComponent.html":{},"components/DatepickerComponent.html":{},"components/DropdownComponent.html":{},"components/EmailComponent.html":{},"components/ErrorContainerComponent.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/FullNameComponent.html":{},"interfaces/FullNameErrorMsg.html":{},"components/GeocoderInputComponent.html":{},"components/HeaderComponent.html":{},"components/NameComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"components/PhnComponent.html":{},"components/PhoneNumberComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"components/RadioComponent.html":{},"components/SampleModalComponent.html":{},"modules/SharedCoreModule.html":{},"components/SinComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{},"components/XiconButtonComponent.html":{},"changelog.html":{},"coverage.html":{},"overview.html":{}}}],["fullnameerrormsg",{"_index":3218,"title":{"interfaces/FullNameErrorMsg.html":{}},"body":{"components/FullNameComponent.html":{},"interfaces/FullNameErrorMsg.html":{},"coverage.html":{}}}],["fullsizeviewmodal",{"_index":3587,"title":{},"body":{"interfaces/ISpaEnvResponse.html":{},"components/ThumbnailComponent.html":{}}}],["function",{"_index":156,"title":{},"body":{"classes/AbstractFormControl.html":{},"classes/AbstractHttpService.html":{},"interfaces/AddrLabelList.html":{},"classes/Address.html":{},"components/CityComponent.html":{},"interfaces/CountryList.html":{},"directives/DuplicateCheckDirective.html":{},"components/EmailComponent.html":{},"interfaces/ErrorMessage.html":{},"interfaces/FileUploaderMsg.html":{},"components/GeocoderInputComponent.html":{},"interfaces/Maxlengths.html":{},"components/NameComponent.html":{},"injectables/PageStateService.html":{},"classes/Person.html":{},"components/PhnComponent.html":{},"components/PhoneNumberComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{},"components/RadioComponent.html":{},"interfaces/ReadOnlyFields.html":{},"components/SinComponent.html":{},"directives/ValidatePostalcodeDirective.html":{},"components/WizardProgressBarComponent.html":{},"changelog.html":{},"coverage.html":{}}}],["functionality",{"_index":408,"title":{},"body":{"classes/AbstractTestPage.html":{},"classes/Container.html":{},"interfaces/WizardProgressItem.html":{}}}],["functiong",{"_index":4154,"title":{},"body":{"components/PostalCodeComponent.html":{}}}],["functions",{"_index":4491,"title":{},"body":{"components/WizardProgressBarComponent.html":{},"changelog.html":{}}}],["futuna",{"_index":2283,"title":{},"body":{"interfaces/CountryList.html":{}}}],["future",{"_index":1068,"title":{},"body":{"components/ButtonComponent.html":{},"interfaces/PageList.html":{},"injectables/PageStateService.html":{},"changelog.html":{},"additional-documentation/local-development/schematics.html":{}}}],["g",{"_index":2608,"title":{},"body":{"interfaces/ErrorMessage.html":{},"components/PhoneNumberComponent.html":{},"additional-documentation/local-development/schematics.html":{}}}],["gab",{"_index":1922,"title":{},"body":{"interfaces/CountryList.html":{}}}],["gabon",{"_index":1923,"title":{},"body":{"interfaces/CountryList.html":{}}}],["gambia",{"_index":1925,"title":{},"body":{"interfaces/CountryList.html":{}}}],["gbr",{"_index":2262,"title":{},"body":{"interfaces/CountryList.html":{}}}],["general",{"_index":828,"title":{},"body":{"interfaces/AddrLabelList.html":{},"interfaces/Maxlengths.html":{},"interfaces/ReadOnlyFields.html":{}}}],["generally",{"_index":54,"title":{},"body":{"classes/AbstractBaseForm.html":{},"classes/AbstractForm.html":{},"classes/AbstractReactForm.html":{},"interfaces/CommonAttachmentJson.html":{},"classes/CommonImage.html":{},"classes/CommonImageProcessingError.html":{},"interfaces/CommonImageScaleFactors.html":{},"classes/CommonImageScaleFactorsImpl.html":{}}}],["generate",{"_index":5129,"title":{},"body":{"changelog.html":{},"additional-documentation/local-development/components.html":{}}}],["generateskiptocontentlink",{"_index":3446,"title":{},"body":{"components/HeaderComponent.html":{}}}],["generateuuid",{"_index":230,"title":{},"body":{"classes/AbstractHttpService.html":{},"injectables/GeocoderService.html":{},"changelog.html":{}}}],["generating",{"_index":330,"title":{},"body":{"classes/AbstractHttpService.html":{}}}],["generation",{"_index":5076,"title":{},"body":{"changelog.html":{},"additional-documentation/local-development/schematics.html":{}}}],["generic",{"_index":3497,"title":{},"body":{"interfaces/IRadioItems.html":{},"components/RadioComponent.html":{},"changelog.html":{}}}],["geo",{"_index":1926,"title":{},"body":{"interfaces/CountryList.html":{}}}],["geoaddressresult",{"_index":770,"title":{"interfaces/GeoAddressResult.html":{}},"body":{"interfaces/AddrLabelList.html":{},"interfaces/GeoAddressResult.html":{},"components/GeocoderInputComponent.html":{},"injectables/GeocoderService.html":{},"interfaces/Maxlengths.html":{},"interfaces/ReadOnlyFields.html":{},"coverage.html":{},"additional-documentation/getting-started.html":{}}}],["geocoder",{"_index":697,"title":{},"body":{"components/AccordionCommonComponent.html":{},"interfaces/AddrLabelList.html":{},"components/ButtonComponent.html":{},"components/ButtonGroupComponent.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"components/ConfirmTemplateComponent.html":{},"components/CoreBreadcrumbComponent.html":{},"components/DatepickerComponent.html":{},"components/DropdownComponent.html":{},"components/EmailComponent.html":{},"components/ErrorContainerComponent.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/FullNameComponent.html":{},"components/GeocoderInputComponent.html":{},"components/HeaderComponent.html":{},"interfaces/Maxlengths.html":{},"components/NameComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"components/PhnComponent.html":{},"components/PhoneNumberComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"components/RadioComponent.html":{},"interfaces/ReadOnlyFields.html":{},"components/SampleModalComponent.html":{},"components/SinComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{},"components/XiconButtonComponent.html":{}}}],["geocoderinput",{"_index":4631,"title":{},"body":{"changelog.html":{}}}],["geocoderinputcomponent",{"_index":696,"title":{"components/GeocoderInputComponent.html":{}},"body":{"components/AccordionCommonComponent.html":{},"components/ButtonComponent.html":{},"components/ButtonGroupComponent.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"components/ConfirmTemplateComponent.html":{},"components/CoreBreadcrumbComponent.html":{},"components/DatepickerComponent.html":{},"components/DropdownComponent.html":{},"components/EmailComponent.html":{},"components/ErrorContainerComponent.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/FullNameComponent.html":{},"components/GeocoderInputComponent.html":{},"components/HeaderComponent.html":{},"components/NameComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"components/PhnComponent.html":{},"components/PhoneNumberComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"components/RadioComponent.html":{},"components/SampleModalComponent.html":{},"modules/SharedCoreModule.html":{},"components/SinComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{},"components/XiconButtonComponent.html":{},"coverage.html":{},"overview.html":{}}}],["geocoderservice",{"_index":3262,"title":{"injectables/GeocoderService.html":{}},"body":{"interfaces/GeoAddressResult.html":{},"components/GeocoderInputComponent.html":{},"injectables/GeocoderService.html":{},"changelog.html":{},"coverage.html":{},"additional-documentation/getting-started.html":{}}}],["georgia",{"_index":1927,"title":{},"body":{"interfaces/CountryList.html":{}}}],["germany",{"_index":1929,"title":{},"body":{"interfaces/CountryList.html":{}}}],["get(url",{"_index":246,"title":{},"body":{"classes/AbstractHttpService.html":{},"injectables/GeocoderService.html":{}}}],["getactiveindex",{"_index":4476,"title":{},"body":{"components/WizardProgressBarComponent.html":{}}}],["getactiveindex(url",{"_index":4481,"title":{},"body":{"components/WizardProgressBarComponent.html":{}}}],["getage",{"_index":3927,"title":{},"body":{"classes/Person.html":{}}}],["getcontinuebutton",{"_index":430,"title":{},"body":{"classes/AbstractTestPage.html":{}}}],["getcountrydescription",{"_index":2293,"title":{},"body":{"interfaces/CountryList.html":{},"coverage.html":{}}}],["getdateofbirthshort",{"_index":3944,"title":{},"body":{"classes/Person.html":{}}}],["geterrorcode",{"_index":1682,"title":{},"body":{"components/ConfirmTemplateComponent.html":{}}}],["getformatdateofbirth",{"_index":3947,"title":{},"body":{"classes/Person.html":{}}}],["getfullname",{"_index":3959,"title":{},"body":{"classes/Person.html":{}}}],["gethttpoptions",{"_index":293,"title":{},"body":{"classes/AbstractHttpService.html":{}}}],["getinputelement",{"_index":5164,"title":{},"body":{"coverage.html":{}}}],["getisbconly",{"_index":1023,"title":{},"body":{"classes/Address.html":{}}}],["getlabel",{"_index":5165,"title":{},"body":{"coverage.html":{}}}],["getlegendcontext",{"_index":5166,"title":{},"body":{"coverage.html":{}}}],["getmaxlenasnumber",{"_index":3717,"title":{},"body":{"components/NameComponent.html":{}}}],["getname",{"_index":3950,"title":{},"body":{"classes/Person.html":{}}}],["getnamecomponent",{"_index":414,"title":{},"body":{"classes/AbstractTestPage.html":{}}}],["getnamecomponent(labelname",{"_index":498,"title":{},"body":{"classes/AbstractTestPage.html":{}}}],["getnamecomponentval",{"_index":415,"title":{},"body":{"classes/AbstractTestPage.html":{}}}],["getnamecomponentval(labelname",{"_index":511,"title":{},"body":{"classes/AbstractTestPage.html":{}}}],["getpackageversionfrompackagejson",{"_index":5265,"title":{},"body":{"coverage.html":{}}}],["getpageatindex",{"_index":3766,"title":{},"body":{"interfaces/PageList.html":{},"injectables/PageStateService.html":{}}}],["getpageatindex(idx",{"_index":3803,"title":{},"body":{"injectables/PageStateService.html":{}}}],["getpasswordstrength",{"_index":3829,"title":{},"body":{"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{}}}],["getpasswordstrength(password",{"_index":3854,"title":{},"body":{"components/PasswordComponent.html":{}}}],["getprovincedescription",{"_index":4208,"title":{},"body":{"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{},"coverage.html":{}}}],["gets",{"_index":3354,"title":{},"body":{"components/GeocoderInputComponent.html":{}}}],["getstarturl",{"_index":373,"title":{},"body":{"injectables/AbstractPgCheckService.html":{},"injectables/CheckCompleteBaseService.html":{},"interfaces/PageListInterface.html":{}}}],["getstreet",{"_index":1019,"title":{},"body":{"classes/Address.html":{}}}],["getsuccesscode",{"_index":1680,"title":{},"body":{"components/ConfirmTemplateComponent.html":{}}}],["getting",{"_index":4565,"title":{"changelog.html":{},"index.html":{},"license.html":{},"todo.html":{},"additional-documentation/getting-started.html":{}},"body":{"changelog.html":{},"index.html":{},"additional-documentation/getting-started.html":{}}}],["geturlindex",{"_index":1208,"title":{},"body":{"injectables/CheckCompleteBaseService.html":{},"interfaces/PageListInterface.html":{}}}],["geturlindex(url",{"_index":1217,"title":{},"body":{"injectables/CheckCompleteBaseService.html":{}}}],["getvalue",{"_index":1372,"title":{},"body":{"components/CityComponent.html":{},"components/EmailComponent.html":{},"components/NameComponent.html":{},"components/PhnComponent.html":{},"components/PhoneNumberComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"components/RadioComponent.html":{},"components/SinComponent.html":{}}}],["getwarningcode",{"_index":1684,"title":{},"body":{"components/ConfirmTemplateComponent.html":{}}}],["ggy",{"_index":1946,"title":{},"body":{"interfaces/CountryList.html":{}}}],["gha",{"_index":1930,"title":{},"body":{"interfaces/CountryList.html":{}}}],["ghana",{"_index":1931,"title":{},"body":{"interfaces/CountryList.html":{}}}],["gib",{"_index":1932,"title":{},"body":{"interfaces/CountryList.html":{},"interfaces/FileUploaderMsg.html":{}}}],["gibraltar",{"_index":1933,"title":{},"body":{"interfaces/CountryList.html":{}}}],["gif",{"_index":2746,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["gigantic",{"_index":2870,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["gin",{"_index":1948,"title":{},"body":{"interfaces/CountryList.html":{}}}],["git",{"_index":5083,"title":{},"body":{"changelog.html":{}}}],["gitcommit",{"_index":5269,"title":{},"body":{"coverage.html":{}}}],["githooks",{"_index":5096,"title":{},"body":{"changelog.html":{}}}],["github",{"_index":555,"title":{},"body":{"classes/AbstractTestPage.html":{},"changelog.html":{},"index.html":{},"todo.html":{}}}],["give",{"_index":2954,"title":{},"body":{"interfaces/FileUploaderMsg.html":{},"components/FormActionBarComponent.html":{}}}],["given",{"_index":514,"title":{},"body":{"classes/AbstractTestPage.html":{},"miscellaneous/enumerations.html":{}}}],["gives",{"_index":1477,"title":{},"body":{"interfaces/CommonAttachmentJson.html":{},"classes/CommonImage.html":{},"classes/CommonImageProcessingError.html":{},"interfaces/CommonImageScaleFactors.html":{},"classes/CommonImageScaleFactorsImpl.html":{}}}],["glp",{"_index":1940,"title":{},"body":{"interfaces/CountryList.html":{}}}],["gmb",{"_index":1924,"title":{},"body":{"interfaces/CountryList.html":{}}}],["gnb",{"_index":1949,"title":{},"body":{"interfaces/CountryList.html":{}}}],["gnq",{"_index":1894,"title":{},"body":{"interfaces/CountryList.html":{}}}],["go",{"_index":520,"title":{},"body":{"classes/AbstractTestPage.html":{},"interfaces/CommonLogMessage.html":{},"components/CoreBreadcrumbComponent.html":{},"interfaces/ISpaEnvResponse.html":{},"components/PageFrameworkComponent.html":{},"components/XiconButtonComponent.html":{},"additional-documentation/getting-started.html":{}}}],["goes",{"_index":5500,"title":{},"body":{"additional-documentation/local-development/components.html":{}}}],["going",{"_index":3058,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["good",{"_index":3727,"title":{},"body":{"components/PageFrameworkComponent.html":{},"additional-documentation/getting-started.html":{}}}],["gov",{"_index":5026,"title":{},"body":{"changelog.html":{}}}],["governing",{"_index":5352,"title":{},"body":{"license.html":{}}}],["grab",{"_index":502,"title":{},"body":{"classes/AbstractTestPage.html":{}}}],["grc",{"_index":1934,"title":{},"body":{"interfaces/CountryList.html":{}}}],["grd",{"_index":1938,"title":{},"body":{"interfaces/CountryList.html":{}}}],["greece",{"_index":1935,"title":{},"body":{"interfaces/CountryList.html":{}}}],["greenland",{"_index":1937,"title":{},"body":{"interfaces/CountryList.html":{}}}],["grenada",{"_index":1939,"title":{},"body":{"interfaces/CountryList.html":{}}}],["grenadines",{"_index":2163,"title":{},"body":{"interfaces/CountryList.html":{}}}],["grl",{"_index":1936,"title":{},"body":{"interfaces/CountryList.html":{}}}],["group",{"_index":1105,"title":{},"body":{"components/ButtonGroupComponent.html":{},"interfaces/IRadioItems.html":{},"components/RadioComponent.html":{}}}],["group'},{'name",{"_index":662,"title":{},"body":{"components/AccordionCommonComponent.html":{},"components/ButtonComponent.html":{},"components/ButtonGroupComponent.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"components/ConfirmTemplateComponent.html":{},"components/CoreBreadcrumbComponent.html":{},"components/DatepickerComponent.html":{},"components/DropdownComponent.html":{},"components/EmailComponent.html":{},"components/ErrorContainerComponent.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/FullNameComponent.html":{},"components/GeocoderInputComponent.html":{},"components/HeaderComponent.html":{},"components/NameComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"components/PhnComponent.html":{},"components/PhoneNumberComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"components/RadioComponent.html":{},"components/SampleModalComponent.html":{},"components/SinComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{},"components/XiconButtonComponent.html":{}}}],["group.component",{"_index":4298,"title":{},"body":{"modules/SharedCoreModule.html":{}}}],["group.component.html",{"_index":1107,"title":{},"body":{"components/ButtonGroupComponent.html":{}}}],["group.component.scss",{"_index":1106,"title":{},"body":{"components/ButtonGroupComponent.html":{}}}],["group.component.ts",{"_index":1098,"title":{},"body":{"components/ButtonGroupComponent.html":{},"coverage.html":{}}}],["group.component.ts:38",{"_index":1114,"title":{},"body":{"components/ButtonGroupComponent.html":{}}}],["group.component.ts:39",{"_index":1118,"title":{},"body":{"components/ButtonGroupComponent.html":{}}}],["group.component.ts:40",{"_index":1119,"title":{},"body":{"components/ButtonGroupComponent.html":{}}}],["group.component.ts:41",{"_index":1115,"title":{},"body":{"components/ButtonGroupComponent.html":{}}}],["group.component.ts:42",{"_index":1116,"title":{},"body":{"components/ButtonGroupComponent.html":{}}}],["group.component.ts:43",{"_index":1117,"title":{},"body":{"components/ButtonGroupComponent.html":{}}}],["group.component.ts:44",{"_index":1120,"title":{},"body":{"components/ButtonGroupComponent.html":{}}}],["group.component.ts:45",{"_index":1129,"title":{},"body":{"components/ButtonGroupComponent.html":{}}}],["group.component.ts:47",{"_index":1127,"title":{},"body":{"components/ButtonGroupComponent.html":{}}}],["group.component.ts:48",{"_index":1113,"title":{},"body":{"components/ButtonGroupComponent.html":{}}}],["group.component.ts:55",{"_index":1125,"title":{},"body":{"components/ButtonGroupComponent.html":{}}}],["group.component.ts:61",{"_index":1121,"title":{},"body":{"components/ButtonGroupComponent.html":{}}}],["group.component.ts:66",{"_index":1122,"title":{},"body":{"components/ButtonGroupComponent.html":{}}}],["group.component.ts:70",{"_index":1123,"title":{},"body":{"components/ButtonGroupComponent.html":{}}}],["group.component.ts:74",{"_index":1126,"title":{},"body":{"components/ButtonGroupComponent.html":{}}}],["group/button",{"_index":1097,"title":{},"body":{"components/ButtonGroupComponent.html":{},"modules/SharedCoreModule.html":{},"coverage.html":{}}}],["growing",{"_index":5325,"title":{},"body":{"index.html":{}}}],["gtm",{"_index":1944,"title":{},"body":{"interfaces/CountryList.html":{}}}],["guadeloupe",{"_index":1941,"title":{},"body":{"interfaces/CountryList.html":{}}}],["guam",{"_index":1943,"title":{},"body":{"interfaces/CountryList.html":{}}}],["guard",{"_index":343,"title":{"guards/LoadPageGuardService.html":{},"guards/RouteGuardService.html":{}},"body":{"injectables/AbstractPageGuardService.html":{},"injectables/AbstractPgCheckService.html":{},"injectables/CheckCompleteBaseService.html":{},"injectables/DefaultPageGuardService.html":{},"interfaces/PageListInterface.html":{},"changelog.html":{},"coverage.html":{}}}],["guard.service",{"_index":2511,"title":{},"body":{"injectables/DefaultPageGuardService.html":{},"guards/LoadPageGuardService.html":{}}}],["guard.service.ts",{"_index":342,"title":{},"body":{"injectables/AbstractPageGuardService.html":{},"injectables/DefaultPageGuardService.html":{},"guards/LoadPageGuardService.html":{},"guards/RouteGuardService.html":{},"coverage.html":{}}}],["guard.service.ts:22",{"_index":2506,"title":{},"body":{"injectables/DefaultPageGuardService.html":{}}}],["guard.service.ts:24",{"_index":364,"title":{},"body":{"injectables/AbstractPageGuardService.html":{}}}],["guard.service.ts:25",{"_index":366,"title":{},"body":{"injectables/AbstractPageGuardService.html":{}}}],["guard.service.ts:26",{"_index":2509,"title":{},"body":{"injectables/DefaultPageGuardService.html":{}}}],["guard.service.ts:30",{"_index":2507,"title":{},"body":{"injectables/DefaultPageGuardService.html":{}}}],["guard.service.ts:34",{"_index":2508,"title":{},"body":{"injectables/DefaultPageGuardService.html":{}}}],["guard.service.ts:53",{"_index":3668,"title":{},"body":{"guards/LoadPageGuardService.html":{},"guards/RouteGuardService.html":{}}}],["guard.service.ts:58",{"_index":3675,"title":{},"body":{"guards/LoadPageGuardService.html":{}}}],["guard.service.ts:59",{"_index":4231,"title":{},"body":{"guards/RouteGuardService.html":{}}}],["guard.service.ts:66",{"_index":3678,"title":{},"body":{"guards/LoadPageGuardService.html":{}}}],["guard.service.ts:67",{"_index":4232,"title":{},"body":{"guards/RouteGuardService.html":{}}}],["guard.service.ts:73",{"_index":3670,"title":{},"body":{"guards/LoadPageGuardService.html":{}}}],["guard.service.ts:74",{"_index":4230,"title":{},"body":{"guards/RouteGuardService.html":{}}}],["guards",{"_index":1263,"title":{},"body":{"injectables/CheckCompleteBaseService.html":{},"guards/LoadPageGuardService.html":{},"interfaces/PageListInterface.html":{},"guards/RouteGuardService.html":{},"overview.html":{}}}],["guatemala",{"_index":1945,"title":{},"body":{"interfaces/CountryList.html":{}}}],["guernsey",{"_index":1947,"title":{},"body":{"interfaces/CountryList.html":{}}}],["guessable",{"_index":3856,"title":{},"body":{"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{}}}],["guesses",{"_index":3858,"title":{},"body":{"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{}}}],["guf",{"_index":1914,"title":{},"body":{"interfaces/CountryList.html":{}}}],["guiana",{"_index":1916,"title":{},"body":{"interfaces/CountryList.html":{}}}],["guide",{"_index":5320,"title":{},"body":{"index.html":{}}}],["guidelines",{"_index":756,"title":{},"body":{"interfaces/AddrLabelList.html":{},"modules/CaptchaModule.html":{},"components/CityComponent.html":{},"components/CoreBreadcrumbComponent.html":{},"interfaces/CountryList.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"interfaces/FileUploaderMsg.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"interfaces/Maxlengths.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{},"interfaces/ReadOnlyFields.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{},"changelog.html":{}}}],["guinea",{"_index":1896,"title":{},"body":{"interfaces/CountryList.html":{}}}],["gum",{"_index":1942,"title":{},"body":{"interfaces/CountryList.html":{}}}],["guy",{"_index":1951,"title":{},"body":{"interfaces/CountryList.html":{}}}],["guyana",{"_index":1952,"title":{},"body":{"interfaces/CountryList.html":{}}}],["haiti",{"_index":1954,"title":{},"body":{"interfaces/CountryList.html":{}}}],["half",{"_index":4525,"title":{},"body":{"components/WizardProgressBarComponent.html":{}}}],["halfspace",{"_index":4527,"title":{},"body":{"components/WizardProgressBarComponent.html":{}}}],["halt",{"_index":4537,"title":{},"body":{"components/WizardProgressBarComponent.html":{}}}],["handle",{"_index":2752,"title":{},"body":{"interfaces/FileUploaderMsg.html":{},"components/FullNameComponent.html":{},"interfaces/FullNameErrorMsg.html":{},"components/WizardProgressBarComponent.html":{},"changelog.html":{}}}],["handleerror",{"_index":231,"title":{},"body":{"classes/AbstractHttpService.html":{},"interfaces/CommonLogMessage.html":{},"injectables/GeocoderService.html":{},"additional-documentation/getting-started.html":{}}}],["handleerror(error",{"_index":258,"title":{},"body":{"classes/AbstractHttpService.html":{},"interfaces/CommonLogMessage.html":{},"interfaces/FileUploaderMsg.html":{},"interfaces/GeoAddressResult.html":{},"injectables/GeocoderService.html":{},"interfaces/ISpaEnvResponse.html":{}}}],["handlers",{"_index":5054,"title":{},"body":{"changelog.html":{}}}],["handles",{"_index":261,"title":{},"body":{"classes/AbstractHttpService.html":{},"injectables/GeocoderService.html":{},"changelog.html":{}}}],["handling",{"_index":308,"title":{},"body":{"classes/AbstractHttpService.html":{}}}],["happens",{"_index":51,"title":{},"body":{"classes/AbstractBaseForm.html":{},"classes/AbstractForm.html":{},"classes/AbstractReactForm.html":{},"interfaces/FileUploaderMsg.html":{}}}],["hardcoding",{"_index":523,"title":{},"body":{"classes/AbstractTestPage.html":{}}}],["harum",{"_index":1442,"title":{},"body":{"components/CityComponent.html":{},"interfaces/CountryList.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"interfaces/FileUploaderMsg.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{}}}],["haserror",{"_index":3308,"title":{},"body":{"components/GeocoderInputComponent.html":{}}}],["hash",{"_index":2806,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["hasmask",{"_index":4445,"title":{},"body":{"directives/ValidatePostalcodeDirective.html":{}}}],["hasn't",{"_index":913,"title":{},"body":{"interfaces/AddrLabelList.html":{},"interfaces/Maxlengths.html":{},"interfaces/ReadOnlyFields.html":{}}}],["hasnoresults",{"_index":3309,"title":{},"body":{"components/GeocoderInputComponent.html":{}}}],["hasvalue",{"_index":975,"title":{},"body":{"classes/Address.html":{},"todo.html":{}}}],["having",{"_index":3788,"title":{},"body":{"components/PageSectionComponent.html":{},"changelog.html":{}}}],["header",{"_index":3433,"title":{},"body":{"components/HeaderComponent.html":{},"changelog.html":{}}}],["header'},{'name",{"_index":700,"title":{},"body":{"components/AccordionCommonComponent.html":{},"components/ButtonComponent.html":{},"components/ButtonGroupComponent.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"components/ConfirmTemplateComponent.html":{},"components/CoreBreadcrumbComponent.html":{},"components/DatepickerComponent.html":{},"components/DropdownComponent.html":{},"components/EmailComponent.html":{},"components/ErrorContainerComponent.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/FullNameComponent.html":{},"components/GeocoderInputComponent.html":{},"components/HeaderComponent.html":{},"components/NameComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"components/PhnComponent.html":{},"components/PhoneNumberComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"components/RadioComponent.html":{},"components/SampleModalComponent.html":{},"components/SinComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{},"components/XiconButtonComponent.html":{}}}],["header.component.html",{"_index":3443,"title":{},"body":{"components/HeaderComponent.html":{}}}],["header.component.scss",{"_index":3442,"title":{},"body":{"components/HeaderComponent.html":{}}}],["headercomponent",{"_index":699,"title":{"components/HeaderComponent.html":{}},"body":{"components/AccordionCommonComponent.html":{},"components/ButtonComponent.html":{},"components/ButtonGroupComponent.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"components/ConfirmTemplateComponent.html":{},"components/CoreBreadcrumbComponent.html":{},"components/DatepickerComponent.html":{},"components/DropdownComponent.html":{},"components/EmailComponent.html":{},"components/ErrorContainerComponent.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/FullNameComponent.html":{},"components/GeocoderInputComponent.html":{},"components/HeaderComponent.html":{},"components/NameComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"components/PhnComponent.html":{},"components/PhoneNumberComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"components/RadioComponent.html":{},"components/SampleModalComponent.html":{},"modules/SharedCoreModule.html":{},"components/SinComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{},"components/XiconButtonComponent.html":{},"changelog.html":{},"coverage.html":{},"overview.html":{}}}],["headername",{"_index":3633,"title":{},"body":{"interfaces/ISpaEnvResponse.html":{}}}],["headers",{"_index":242,"title":{},"body":{"classes/AbstractHttpService.html":{},"interfaces/CommonLogMessage.html":{},"interfaces/FileUploaderMsg.html":{},"injectables/GeocoderService.html":{}}}],["health",{"_index":3551,"title":{},"body":{"interfaces/ISpaEnvResponse.html":{},"components/PhnComponent.html":{}}}],["heard",{"_index":1956,"title":{},"body":{"interfaces/CountryList.html":{}}}],["height",{"_index":2771,"title":{},"body":{"interfaces/FileUploaderMsg.html":{},"changelog.html":{}}}],["heightfactor",{"_index":1521,"title":{},"body":{"interfaces/CommonAttachmentJson.html":{},"classes/CommonImage.html":{},"classes/CommonImageProcessingError.html":{},"interfaces/CommonImageScaleFactors.html":{},"classes/CommonImageScaleFactorsImpl.html":{}}}],["helena",{"_index":2145,"title":{},"body":{"interfaces/CountryList.html":{}}}],["help",{"_index":5408,"title":{},"body":{"additional-documentation/local-development/schematics.html":{},"additional-documentation/local-development/components.html":{}}}],["helper",{"_index":329,"title":{},"body":{"classes/AbstractHttpService.html":{},"changelog.html":{},"additional-documentation/local-development/schematics.html":{}}}],["helpers",{"_index":3155,"title":{},"body":{"components/FormActionBarComponent.html":{}}}],["helpers.ts",{"_index":5159,"title":{},"body":{"coverage.html":{}}}],["helpers/library",{"_index":4553,"title":{},"body":{"components/XiconButtonComponent.html":{}}}],["helpers/scroll",{"_index":3154,"title":{},"body":{"components/FormActionBarComponent.html":{}}}],["here",{"_index":1634,"title":{},"body":{"interfaces/CommonLogMessage.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"interfaces/FileUploaderMsg.html":{},"interfaces/ISpaEnvResponse.html":{},"classes/MoHCommonLibraryError.html":{},"components/WizardProgressBarComponent.html":{}}}],["herzegovina",{"_index":1807,"title":{},"body":{"interfaces/CountryList.html":{}}}],["hfactor",{"_index":1525,"title":{},"body":{"interfaces/CommonAttachmentJson.html":{},"classes/CommonImage.html":{},"classes/CommonImageProcessingError.html":{},"interfaces/CommonImageScaleFactors.html":{},"classes/CommonImageScaleFactorsImpl.html":{}}}],["hidden",{"_index":2758,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["hide",{"_index":40,"title":{},"body":{"classes/AbstractBaseForm.html":{},"classes/AbstractForm.html":{},"classes/AbstractReactForm.html":{},"components/GeocoderInputComponent.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"changelog.html":{}}}],["hidefullsizeview",{"_index":4393,"title":{},"body":{"components/ThumbnailComponent.html":{}}}],["hidevalue",{"_index":3824,"title":{},"body":{"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{}}}],["high",{"_index":5445,"title":{},"body":{"additional-documentation/local-development/schematics.html":{}}}],["hit",{"_index":291,"title":{},"body":{"classes/AbstractHttpService.html":{},"classes/AbstractTestPage.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"injectables/GeocoderService.html":{}}}],["hkg",{"_index":1963,"title":{},"body":{"interfaces/CountryList.html":{}}}],["hmd",{"_index":1955,"title":{},"body":{"interfaces/CountryList.html":{}}}],["hnd",{"_index":1961,"title":{},"body":{"interfaces/CountryList.html":{}}}],["holy",{"_index":1959,"title":{},"body":{"interfaces/CountryList.html":{}}}],["homepage",{"_index":4980,"title":{},"body":{"changelog.html":{}}}],["honduras",{"_index":1962,"title":{},"body":{"interfaces/CountryList.html":{}}}],["hong",{"_index":1964,"title":{},"body":{"interfaces/CountryList.html":{}}}],["hood",{"_index":4990,"title":{},"body":{"changelog.html":{}}}],["hooks",{"_index":5074,"title":{},"body":{"changelog.html":{}}}],["horizontal",{"_index":3490,"title":{},"body":{"interfaces/IRadioItems.html":{},"components/RadioComponent.html":{}}}],["horizontally",{"_index":4487,"title":{},"body":{"components/WizardProgressBarComponent.html":{}}}],["hostlistener",{"_index":2448,"title":{},"body":{"directives/DateFieldFormatDirective.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{}}}],["hostlistener('input",{"_index":2450,"title":{},"body":{"directives/DateFieldFormatDirective.html":{}}}],["hostlisteners",{"_index":2442,"title":{},"body":{"directives/DateFieldFormatDirective.html":{},"components/PasswordComponent.html":{}}}],["hrv",{"_index":1870,"title":{},"body":{"interfaces/CountryList.html":{}}}],["hti",{"_index":1953,"title":{},"body":{"interfaces/CountryList.html":{}}}],["html",{"_index":653,"title":{},"body":{"components/AccordionCommonComponent.html":{},"components/ButtonComponent.html":{},"components/ButtonGroupComponent.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"components/ConfirmTemplateComponent.html":{},"components/CoreBreadcrumbComponent.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"components/DropdownComponent.html":{},"components/EmailComponent.html":{},"components/ErrorContainerComponent.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/FullNameComponent.html":{},"components/GeocoderInputComponent.html":{},"components/HeaderComponent.html":{},"components/NameComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"components/PhnComponent.html":{},"components/PhoneNumberComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"components/RadioComponent.html":{},"components/SampleModalComponent.html":{},"components/SinComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{},"components/XiconButtonComponent.html":{},"changelog.html":{}}}],["html5",{"_index":2750,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["htmlcanvaselement",{"_index":2973,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["htmlimageelement",{"_index":2934,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["htmlinputelement",{"_index":2453,"title":{},"body":{"directives/DateFieldFormatDirective.html":{}}}],["http",{"_index":226,"title":{},"body":{"classes/AbstractHttpService.html":{},"injectables/CaptchaDataService.html":{},"interfaces/CommonLogMessage.html":{},"interfaces/GeoAddressResult.html":{},"components/GeocoderInputComponent.html":{},"injectables/GeocoderService.html":{},"interfaces/ISpaEnvResponse.html":{},"injectables/ServerPayload.html":{}}}],["http://full",{"_index":3475,"title":{},"body":{"components/HeaderComponent.html":{}}}],["http://www.apache.org/licenses/license",{"_index":5338,"title":{},"body":{"license.html":{}}}],["http_x_forwarded_host",{"_index":1578,"title":{},"body":{"interfaces/CommonLogMessage.html":{}}}],["httpclient",{"_index":238,"title":{},"body":{"classes/AbstractHttpService.html":{},"injectables/CaptchaDataService.html":{},"interfaces/CommonLogMessage.html":{},"interfaces/GeoAddressResult.html":{},"injectables/GeocoderService.html":{},"interfaces/ISpaEnvResponse.html":{},"injectables/ServerPayload.html":{}}}],["httpclientmodule",{"_index":786,"title":{},"body":{"interfaces/AddrLabelList.html":{},"modules/CaptchaModule.html":{},"interfaces/Maxlengths.html":{},"interfaces/ReadOnlyFields.html":{}}}],["httperrorresponse",{"_index":259,"title":{},"body":{"classes/AbstractHttpService.html":{},"interfaces/CommonLogMessage.html":{},"interfaces/GeoAddressResult.html":{},"injectables/GeocoderService.html":{},"interfaces/ISpaEnvResponse.html":{}}}],["httpheaders",{"_index":240,"title":{},"body":{"classes/AbstractHttpService.html":{},"interfaces/CommonLogMessage.html":{},"interfaces/GeoAddressResult.html":{},"injectables/GeocoderService.html":{},"interfaces/ISpaEnvResponse.html":{}}}],["httpoptions",{"_index":236,"title":{},"body":{"classes/AbstractHttpService.html":{},"interfaces/CommonLogMessage.html":{}}}],["httpopts",{"_index":309,"title":{},"body":{"classes/AbstractHttpService.html":{}}}],["httpopts.params",{"_index":311,"title":{},"body":{"classes/AbstractHttpService.html":{}}}],["httpparams",{"_index":247,"title":{},"body":{"classes/AbstractHttpService.html":{},"interfaces/GeoAddressResult.html":{},"injectables/GeocoderService.html":{}}}],["httpresponse",{"_index":1154,"title":{},"body":{"injectables/CaptchaDataService.html":{},"injectables/ServerPayload.html":{}}}],["https://bcgov.github.io/moh",{"_index":5313,"title":{},"body":{"index.html":{}}}],["https://developer.mozilla.org/en",{"_index":1503,"title":{},"body":{"interfaces/CommonAttachmentJson.html":{},"classes/CommonImage.html":{},"classes/CommonImageProcessingError.html":{},"interfaces/CommonImageScaleFactors.html":{},"classes/CommonImageScaleFactorsImpl.html":{}}}],["https://geocoder.api.gov.bc.ca",{"_index":3264,"title":{},"body":{"interfaces/GeoAddressResult.html":{},"injectables/GeocoderService.html":{}}}],["https://geocoder.api.gov.bc.ca/addresses.json?minscore=50&maxresults=5&echo=false&brief=true&autocomplete=true&addressstring=784+hock",{"_index":3267,"title":{},"body":{"interfaces/GeoAddressResult.html":{},"injectables/GeocoderService.html":{}}}],["https://github.com/angular/angular/issues/24818",{"_index":3248,"title":{},"body":{"components/FullNameComponent.html":{},"interfaces/FullNameErrorMsg.html":{}}}],["https://github.com/dropbox/zxcvbn",{"_index":3860,"title":{},"body":{"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{}}}],["https://github.com/jvandemo/generator",{"_index":3881,"title":{},"body":{"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{}}}],["https://github.com/kekeh/ngx",{"_index":2330,"title":{},"body":{"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{}}}],["human",{"_index":474,"title":{},"body":{"classes/AbstractTestPage.html":{},"interfaces/FileUploaderMsg.html":{}}}],["hun",{"_index":1966,"title":{},"body":{"interfaces/CountryList.html":{}}}],["hungary",{"_index":1967,"title":{},"body":{"interfaces/CountryList.html":{}}}],["hyphen",{"_index":3229,"title":{},"body":{"components/FullNameComponent.html":{},"interfaces/FullNameErrorMsg.html":{}}}],["hyphens",{"_index":1363,"title":{},"body":{"components/CityComponent.html":{},"interfaces/CountryList.html":{},"components/NameComponent.html":{},"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{}}}],["iceland",{"_index":1969,"title":{},"body":{"interfaces/CountryList.html":{}}}],["icon",{"_index":810,"title":{},"body":{"interfaces/AddrLabelList.html":{},"interfaces/Maxlengths.html":{},"interfaces/ReadOnlyFields.html":{},"changelog.html":{}}}],["id",{"_index":1438,"title":{},"body":{"components/CityComponent.html":{},"interfaces/CommonAttachmentJson.html":{},"classes/CommonImage.html":{},"classes/CommonImageProcessingError.html":{},"interfaces/CommonImageScaleFactors.html":{},"classes/CommonImageScaleFactorsImpl.html":{},"interfaces/CommonLogMessage.html":{},"interfaces/CountryList.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"interfaces/FileUploaderMsg.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{}}}],["id='content",{"_index":3439,"title":{},"body":{"components/HeaderComponent.html":{}}}],["idea",{"_index":558,"title":{},"body":{"classes/AbstractTestPage.html":{},"components/CoreBreadcrumbComponent.html":{}}}],["identical",{"_index":2861,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["identifier",{"_index":136,"title":{},"body":{"classes/AbstractFormControl.html":{},"classes/Base.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"components/ConfirmTemplateComponent.html":{},"components/DatepickerComponent.html":{},"components/DropdownComponent.html":{},"components/EmailComponent.html":{},"interfaces/FileUploaderMsg.html":{},"components/FullNameComponent.html":{},"components/GeocoderInputComponent.html":{},"components/NameComponent.html":{},"components/PasswordComponent.html":{},"classes/Person.html":{},"components/PhnComponent.html":{},"components/PhoneNumberComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"components/RadioComponent.html":{},"components/SampleModalComponent.html":{},"components/SinComponent.html":{},"components/ToggleComponent.html":{},"coverage.html":{}}}],["idn",{"_index":1972,"title":{},"body":{"interfaces/CountryList.html":{}}}],["ids",{"_index":1049,"title":{},"body":{"classes/Base.html":{}}}],["idx",{"_index":1260,"title":{},"body":{"injectables/CheckCompleteBaseService.html":{},"interfaces/PageList.html":{},"interfaces/PageListInterface.html":{},"injectables/PageStateService.html":{}}}],["ie",{"_index":4015,"title":{},"body":{"components/PhnComponent.html":{},"components/PostalCodeComponent.html":{},"components/SinComponent.html":{},"components/WizardProgressBarComponent.html":{},"changelog.html":{}}}],["ie10",{"_index":4555,"title":{},"body":{"components/XiconButtonComponent.html":{}}}],["ignored",{"_index":2940,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["image",{"_index":1461,"title":{},"body":{"interfaces/CommonAttachmentJson.html":{},"classes/CommonImage.html":{},"classes/CommonImageProcessingError.html":{},"interfaces/CommonImageScaleFactors.html":{},"classes/CommonImageScaleFactorsImpl.html":{},"interfaces/FileUploaderMsg.html":{},"changelog.html":{},"dependencies.html":{}}}],["image.id",{"_index":2937,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["image.name",{"_index":2922,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["image.naturalheight",{"_index":2963,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["image.naturalwidth",{"_index":2961,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["image.src",{"_index":2970,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["image.title",{"_index":4255,"title":{},"body":{"components/SampleModalComponent.html":{}}}],["image/jpeg",{"_index":2966,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["imageexists",{"_index":2854,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["imagefile",{"_index":2935,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["imagefile.name",{"_index":2938,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["imagelist",{"_index":2715,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["imagelist.length",{"_index":2716,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["imagelist[i].id",{"_index":2718,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["imageobject",{"_index":4394,"title":{},"body":{"components/ThumbnailComponent.html":{}}}],["imageobject.name",{"_index":4419,"title":{},"body":{"components/ThumbnailComponent.html":{}}}],["imageplaceholderenterkeystream",{"_index":2893,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["imageplaceholderref",{"_index":2678,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["imagereaderror",{"_index":2929,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["imagereaderror.rawimagefile",{"_index":3078,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["images",{"_index":2683,"title":{},"body":{"interfaces/FileUploaderMsg.html":{},"interfaces/SampleImageInterface.html":{},"components/SampleModalComponent.html":{},"changelog.html":{}}}],["images.length",{"_index":2918,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["images.map((image",{"_index":2921,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["imageschange",{"_index":2685,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["imagesizeok",{"_index":2864,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["imagetoobigerror",{"_index":3019,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["imagetoobigerror.commonimage",{"_index":3022,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["imagetoobigerror.maxsizeallowed",{"_index":3021,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["img",{"_index":2932,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["imgel",{"_index":3063,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["imgel.onerror",{"_index":3072,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["imgel.onload",{"_index":3069,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["imgel.src",{"_index":3065,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["imgelsarray",{"_index":3090,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["immediately",{"_index":3114,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["imn",{"_index":1981,"title":{},"body":{"interfaces/CountryList.html":{}}}],["implement",{"_index":3045,"title":{},"body":{"interfaces/FileUploaderMsg.html":{},"guards/LoadPageGuardService.html":{},"guards/RouteGuardService.html":{},"changelog.html":{}}}],["implementation",{"_index":2332,"title":{},"body":{"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{}}}],["implemented",{"_index":34,"title":{},"body":{"classes/AbstractBaseForm.html":{},"classes/AbstractForm.html":{},"classes/AbstractReactForm.html":{},"changelog.html":{}}}],["implementing",{"_index":181,"title":{},"body":{"classes/AbstractFormControl.html":{},"guards/LoadPageGuardService.html":{},"guards/RouteGuardService.html":{}}}],["implements",{"_index":114,"title":{},"body":{"classes/AbstractFormControl.html":{},"injectables/AbstractPageGuardService.html":{},"injectables/AbstractPgCheckService.html":{},"components/AccordionCommonComponent.html":{},"interfaces/AddrLabelList.html":{},"components/ButtonComponent.html":{},"components/ButtonGroupComponent.html":{},"injectables/CheckCompleteBaseService.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"interfaces/CommonAttachmentJson.html":{},"classes/CommonImage.html":{},"classes/CommonImageProcessingError.html":{},"interfaces/CommonImageScaleFactors.html":{},"classes/CommonImageScaleFactorsImpl.html":{},"components/CoreBreadcrumbComponent.html":{},"interfaces/CountryList.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"injectables/DefaultPageGuardService.html":{},"components/DropdownComponent.html":{},"directives/DuplicateCheckDirective.html":{},"components/EmailComponent.html":{},"interfaces/FileUploaderMsg.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/FullNameComponent.html":{},"interfaces/FullNameErrorMsg.html":{},"components/GeocoderInputComponent.html":{},"components/HeaderComponent.html":{},"interfaces/IRadioItems.html":{},"interfaces/ISpaEnvResponse.html":{},"guards/LoadPageGuardService.html":{},"interfaces/Maxlengths.html":{},"components/NameComponent.html":{},"components/PageFrameworkComponent.html":{},"interfaces/PageListInterface.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"components/PhnComponent.html":{},"components/PhoneNumberComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{},"components/RadioComponent.html":{},"interfaces/ReadOnlyFields.html":{},"guards/RouteGuardService.html":{},"components/SinComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"directives/ValidateBcPostalDirective.html":{},"directives/ValidateCityDirective.html":{},"directives/ValidateNameDirective.html":{},"directives/ValidatePostalcodeDirective.html":{},"directives/ValidateRegionDirective.html":{},"directives/ValidateStreetDirective.html":{},"components/WizardProgressBarComponent.html":{},"components/XiconButtonComponent.html":{}}}],["implied",{"_index":5350,"title":{},"body":{"license.html":{}}}],["import",{"_index":71,"title":{},"body":{"classes/AbstractBaseForm.html":{},"classes/AbstractForm.html":{},"classes/AbstractFormControl.html":{},"classes/AbstractHttpService.html":{},"injectables/AbstractPageGuardService.html":{},"injectables/AbstractPgCheckService.html":{},"classes/AbstractReactForm.html":{},"classes/AbstractTestPage.html":{},"components/AccordionCommonComponent.html":{},"interfaces/AddrLabelList.html":{},"classes/Base.html":{},"components/ButtonComponent.html":{},"components/ButtonGroupComponent.html":{},"injectables/CaptchaDataService.html":{},"modules/CaptchaModule.html":{},"injectables/CheckCompleteBaseService.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"interfaces/CommonAttachmentJson.html":{},"classes/CommonImage.html":{},"classes/CommonImageProcessingError.html":{},"interfaces/CommonImageScaleFactors.html":{},"classes/CommonImageScaleFactorsImpl.html":{},"interfaces/CommonLogMessage.html":{},"components/ConfirmTemplateComponent.html":{},"classes/Container.html":{},"components/CoreBreadcrumbComponent.html":{},"interfaces/CountryList.html":{},"interfaces/DateErrorMsg.html":{},"directives/DateFieldFormatDirective.html":{},"components/DatepickerComponent.html":{},"injectables/DefaultPageGuardService.html":{},"components/DropdownComponent.html":{},"directives/DuplicateCheckDirective.html":{},"components/EmailComponent.html":{},"components/ErrorContainerComponent.html":{},"interfaces/FileUploaderMsg.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/FullNameComponent.html":{},"interfaces/FullNameErrorMsg.html":{},"interfaces/GeoAddressResult.html":{},"components/GeocoderInputComponent.html":{},"injectables/GeocoderService.html":{},"components/HeaderComponent.html":{},"interfaces/IRadioItems.html":{},"interfaces/ISpaEnvResponse.html":{},"guards/LoadPageGuardService.html":{},"interfaces/Maxlengths.html":{},"components/NameComponent.html":{},"components/PageFrameworkComponent.html":{},"interfaces/PageList.html":{},"interfaces/PageListInterface.html":{},"components/PageSectionComponent.html":{},"injectables/PageStateService.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"classes/Person.html":{},"components/PhnComponent.html":{},"components/PhoneNumberComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{},"components/RadioComponent.html":{},"interfaces/ReadOnlyFields.html":{},"guards/RouteGuardService.html":{},"interfaces/SampleImageInterface.html":{},"components/SampleModalComponent.html":{},"injectables/ServerPayload.html":{},"modules/SharedCoreModule.html":{},"components/SinComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"directives/ValidateBcPostalDirective.html":{},"directives/ValidateCityDirective.html":{},"directives/ValidateNameDirective.html":{},"directives/ValidatePostalcodeDirective.html":{},"directives/ValidateRegionDirective.html":{},"directives/ValidateStreetDirective.html":{},"components/WizardProgressBarComponent.html":{},"interfaces/WizardProgressItem.html":{},"components/XiconButtonComponent.html":{},"changelog.html":{},"index.html":{},"additional-documentation/getting-started.html":{},"additional-documentation/local-development/components.html":{}}}],["import('pdfjs",{"_index":2655,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["importable",{"_index":5472,"title":{},"body":{"additional-documentation/local-development/components.html":{}}}],["important",{"_index":5425,"title":{},"body":{"additional-documentation/local-development/schematics.html":{}}}],["importantly",{"_index":3784,"title":{},"body":{"components/PageSectionComponent.html":{}}}],["imported",{"_index":506,"title":{},"body":{"classes/AbstractTestPage.html":{},"changelog.html":{},"additional-documentation/local-development/components.html":{}}}],["importing",{"_index":5381,"title":{},"body":{"additional-documentation/getting-started.html":{}}}],["imports",{"_index":1185,"title":{},"body":{"modules/CaptchaModule.html":{},"modules/SharedCoreModule.html":{},"changelog.html":{},"index.html":{},"additional-documentation/getting-started.html":{}}}],["impose",{"_index":2748,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["improve",{"_index":2957,"title":{},"body":{"interfaces/FileUploaderMsg.html":{},"changelog.html":{}}}],["improvement",{"_index":3782,"title":{},"body":{"components/PageSectionComponent.html":{}}}],["imydate",{"_index":2323,"title":{},"body":{"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{}}}],["incidunt",{"_index":1441,"title":{},"body":{"components/CityComponent.html":{},"interfaces/CountryList.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"interfaces/FileUploaderMsg.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{}}}],["include",{"_index":286,"title":{},"body":{"classes/AbstractHttpService.html":{},"components/CityComponent.html":{},"interfaces/CommonLogMessage.html":{},"interfaces/CountryList.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"injectables/GeocoderService.html":{},"components/HeaderComponent.html":{},"components/NameComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{},"changelog.html":{},"additional-documentation/getting-started.html":{},"additional-documentation/local-development/schematics.html":{},"additional-documentation/local-development/components.html":{}}}],["includes",{"_index":545,"title":{},"body":{"classes/AbstractTestPage.html":{},"interfaces/CommonLogMessage.html":{},"components/FullNameComponent.html":{},"interfaces/FullNameErrorMsg.html":{},"interfaces/GeoAddressResult.html":{},"injectables/GeocoderService.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"changelog.html":{},"additional-documentation/getting-started.html":{},"additional-documentation/local-development/components.html":{}}}],["including",{"_index":2822,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["incomplete",{"_index":1223,"title":{},"body":{"injectables/CheckCompleteBaseService.html":{},"interfaces/PageListInterface.html":{}}}],["incompletepages",{"_index":1274,"title":{},"body":{"injectables/CheckCompleteBaseService.html":{},"interfaces/PageListInterface.html":{}}}],["incompletepages.length",{"_index":1277,"title":{},"body":{"injectables/CheckCompleteBaseService.html":{},"interfaces/PageListInterface.html":{}}}],["incompletevalue",{"_index":4077,"title":{},"body":{"components/PhoneNumberComponent.html":{},"changelog.html":{}}}],["incorrect",{"_index":531,"title":{},"body":{"classes/AbstractTestPage.html":{},"additional-documentation/getting-started.html":{}}}],["increasewidth",{"_index":3172,"title":{},"body":{"components/FormSubmitBarComponent.html":{}}}],["increment",{"_index":5125,"title":{},"body":{"changelog.html":{}}}],["ind",{"_index":1970,"title":{},"body":{"interfaces/CountryList.html":{}}}],["index",{"_index":9,"title":{"index.html":{}},"body":{"classes/AbstractBaseForm.html":{},"classes/AbstractForm.html":{},"classes/AbstractFormControl.html":{},"classes/AbstractHttpService.html":{},"injectables/AbstractPageGuardService.html":{},"injectables/AbstractPgCheckService.html":{},"classes/AbstractReactForm.html":{},"classes/AbstractTestPage.html":{},"components/AccordionCommonComponent.html":{},"interfaces/AddrLabelList.html":{},"classes/Address.html":{},"classes/Base.html":{},"components/ButtonComponent.html":{},"components/ButtonGroupComponent.html":{},"injectables/CaptchaDataService.html":{},"injectables/CheckCompleteBaseService.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"interfaces/CommonAttachmentJson.html":{},"classes/CommonImage.html":{},"classes/CommonImageProcessingError.html":{},"interfaces/CommonImageScaleFactors.html":{},"classes/CommonImageScaleFactorsImpl.html":{},"interfaces/CommonLogMessage.html":{},"components/ConfirmTemplateComponent.html":{},"classes/Container.html":{},"components/CoreBreadcrumbComponent.html":{},"interfaces/CountryList.html":{},"interfaces/DateErrorMsg.html":{},"directives/DateFieldFormatDirective.html":{},"components/DatepickerComponent.html":{},"injectables/DefaultPageGuardService.html":{},"components/DropdownComponent.html":{},"directives/DuplicateCheckDirective.html":{},"components/EmailComponent.html":{},"components/ErrorContainerComponent.html":{},"interfaces/ErrorMessage.html":{},"interfaces/FileUploaderMsg.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/FullNameComponent.html":{},"interfaces/FullNameErrorMsg.html":{},"interfaces/GeoAddressResult.html":{},"components/GeocoderInputComponent.html":{},"injectables/GeocoderService.html":{},"components/HeaderComponent.html":{},"interfaces/IRadioItems.html":{},"interfaces/ISpaEnvResponse.html":{},"guards/LoadPageGuardService.html":{},"interfaces/Maxlengths.html":{},"components/NameComponent.html":{},"components/PageFrameworkComponent.html":{},"interfaces/PageList.html":{},"interfaces/PageListInterface.html":{},"components/PageSectionComponent.html":{},"injectables/PageStateService.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"classes/Person.html":{},"components/PhnComponent.html":{},"components/PhoneNumberComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{},"components/RadioComponent.html":{},"interfaces/ReadOnlyFields.html":{},"guards/RouteGuardService.html":{},"interfaces/SampleImageInterface.html":{},"components/SampleModalComponent.html":{},"injectables/ServerPayload.html":{},"interfaces/SimpleDate.html":{},"components/SinComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"directives/ValidateBcPostalDirective.html":{},"directives/ValidateCityDirective.html":{},"directives/ValidateNameDirective.html":{},"directives/ValidatePostalcodeDirective.html":{},"directives/ValidateRegionDirective.html":{},"directives/ValidateStreetDirective.html":{},"components/WizardProgressBarComponent.html":{},"interfaces/WizardProgressItem.html":{},"components/XiconButtonComponent.html":{},"miscellaneous/enumerations.html":{}}}],["index.ts",{"_index":5414,"title":{},"body":{"additional-documentation/local-development/schematics.html":{}}}],["indexable",{"_index":1556,"title":{},"body":{"interfaces/CommonLogMessage.html":{},"interfaces/ErrorMessage.html":{},"interfaces/PageList.html":{},"interfaces/PageListInterface.html":{}}}],["india",{"_index":1971,"title":{},"body":{"interfaces/CountryList.html":{}}}],["indian",{"_index":1817,"title":{},"body":{"interfaces/CountryList.html":{}}}],["indicate",{"_index":4607,"title":{},"body":{"changelog.html":{}}}],["indicates",{"_index":1226,"title":{},"body":{"injectables/CheckCompleteBaseService.html":{},"interfaces/PageListInterface.html":{}}}],["indices",{"_index":3760,"title":{},"body":{"interfaces/PageList.html":{},"injectables/PageStateService.html":{}}}],["individual",{"_index":281,"title":{},"body":{"classes/AbstractHttpService.html":{},"components/FullNameComponent.html":{},"interfaces/FullNameErrorMsg.html":{},"injectables/GeocoderService.html":{}}}],["indonesia",{"_index":1973,"title":{},"body":{"interfaces/CountryList.html":{}}}],["info",{"_index":3,"title":{},"body":{"classes/AbstractBaseForm.html":{},"classes/AbstractForm.html":{},"classes/AbstractFormControl.html":{},"classes/AbstractHttpService.html":{},"injectables/AbstractPageGuardService.html":{},"injectables/AbstractPgCheckService.html":{},"classes/AbstractReactForm.html":{},"classes/AbstractTestPage.html":{},"components/AccordionCommonComponent.html":{},"interfaces/AddrLabelList.html":{},"classes/Address.html":{},"classes/Base.html":{},"components/ButtonComponent.html":{},"components/ButtonGroupComponent.html":{},"injectables/CaptchaDataService.html":{},"modules/CaptchaModule.html":{},"injectables/CheckCompleteBaseService.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"interfaces/CommonAttachmentJson.html":{},"classes/CommonImage.html":{},"classes/CommonImageProcessingError.html":{},"interfaces/CommonImageScaleFactors.html":{},"classes/CommonImageScaleFactorsImpl.html":{},"interfaces/CommonLogMessage.html":{},"components/ConfirmTemplateComponent.html":{},"classes/Container.html":{},"components/CoreBreadcrumbComponent.html":{},"interfaces/CountryList.html":{},"interfaces/DateErrorMsg.html":{},"directives/DateFieldFormatDirective.html":{},"components/DatepickerComponent.html":{},"injectables/DefaultPageGuardService.html":{},"components/DropdownComponent.html":{},"directives/DuplicateCheckDirective.html":{},"components/EmailComponent.html":{},"components/ErrorContainerComponent.html":{},"interfaces/ErrorMessage.html":{},"interfaces/FileUploaderMsg.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/FullNameComponent.html":{},"interfaces/FullNameErrorMsg.html":{},"interfaces/GeoAddressResult.html":{},"components/GeocoderInputComponent.html":{},"injectables/GeocoderService.html":{},"components/HeaderComponent.html":{},"interfaces/IRadioItems.html":{},"interfaces/ISpaEnvResponse.html":{},"guards/LoadPageGuardService.html":{},"interfaces/Maxlengths.html":{},"classes/MoHCommonLibraryError.html":{},"components/NameComponent.html":{},"components/PageFrameworkComponent.html":{},"interfaces/PageList.html":{},"interfaces/PageListInterface.html":{},"components/PageSectionComponent.html":{},"injectables/PageStateService.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"classes/Person.html":{},"components/PhnComponent.html":{},"components/PhoneNumberComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{},"components/RadioComponent.html":{},"interfaces/ReadOnlyFields.html":{},"guards/RouteGuardService.html":{},"interfaces/SampleImageInterface.html":{},"components/SampleModalComponent.html":{},"injectables/ServerPayload.html":{},"modules/SharedCoreModule.html":{},"interfaces/SimpleDate.html":{},"components/SinComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"directives/ValidateBcPostalDirective.html":{},"directives/ValidateCityDirective.html":{},"directives/ValidateNameDirective.html":{},"directives/ValidatePostalcodeDirective.html":{},"directives/ValidateRegionDirective.html":{},"directives/ValidateStreetDirective.html":{},"components/WizardProgressBarComponent.html":{},"interfaces/WizardProgressItem.html":{},"components/XiconButtonComponent.html":{},"changelog.html":{},"miscellaneous/enumerations.html":{}}}],["infocolectionnoticecomponent",{"_index":464,"title":{},"body":{"classes/AbstractTestPage.html":{}}}],["information",{"_index":354,"title":{},"body":{"injectables/AbstractPageGuardService.html":{},"injectables/AbstractPgCheckService.html":{},"interfaces/ISpaEnvResponse.html":{},"additional-documentation/local-development/components.html":{}}}],["ingxmydpoptions",{"_index":2322,"title":{},"body":{"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{}}}],["inheiritance",{"_index":4706,"title":{},"body":{"changelog.html":{}}}],["inherited",{"_index":94,"title":{},"body":{"classes/AbstractForm.html":{},"classes/AbstractFormControl.html":{},"classes/AbstractReactForm.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"interfaces/CommonLogMessage.html":{},"components/ConfirmTemplateComponent.html":{},"components/DatepickerComponent.html":{},"components/DropdownComponent.html":{},"components/EmailComponent.html":{},"components/FullNameComponent.html":{},"components/GeocoderInputComponent.html":{},"injectables/GeocoderService.html":{},"components/NameComponent.html":{},"components/PasswordComponent.html":{},"classes/Person.html":{},"components/PhnComponent.html":{},"components/PhoneNumberComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"components/RadioComponent.html":{},"components/SampleModalComponent.html":{},"components/SinComponent.html":{},"components/ToggleComponent.html":{}}}],["init",{"_index":4019,"title":{},"body":{"components/PhnComponent.html":{},"components/SinComponent.html":{},"changelog.html":{}}}],["initialization",{"_index":213,"title":{},"body":{"classes/AbstractFormControl.html":{}}}],["initialize",{"_index":3967,"title":{},"body":{"classes/Person.html":{}}}],["initialized",{"_index":3608,"title":{},"body":{"interfaces/ISpaEnvResponse.html":{},"components/XiconButtonComponent.html":{},"changelog.html":{}}}],["initinvalid",{"_index":3722,"title":{},"body":{"components/NameComponent.html":{}}}],["injectable",{"_index":339,"title":{"injectables/AbstractPageGuardService.html":{},"injectables/AbstractPgCheckService.html":{},"injectables/CaptchaDataService.html":{},"injectables/CheckCompleteBaseService.html":{},"injectables/DefaultPageGuardService.html":{},"injectables/GeocoderService.html":{},"injectables/PageStateService.html":{},"injectables/ServerPayload.html":{}},"body":{"injectables/AbstractPageGuardService.html":{},"injectables/AbstractPgCheckService.html":{},"injectables/CaptchaDataService.html":{},"injectables/CheckCompleteBaseService.html":{},"interfaces/CommonLogMessage.html":{},"injectables/DefaultPageGuardService.html":{},"interfaces/GeoAddressResult.html":{},"injectables/GeocoderService.html":{},"guards/LoadPageGuardService.html":{},"interfaces/PageList.html":{},"interfaces/PageListInterface.html":{},"injectables/PageStateService.html":{},"guards/RouteGuardService.html":{},"injectables/ServerPayload.html":{},"coverage.html":{},"additional-documentation/getting-started.html":{}}}],["injectables",{"_index":341,"title":{},"body":{"injectables/AbstractPageGuardService.html":{},"injectables/AbstractPgCheckService.html":{},"injectables/CaptchaDataService.html":{},"injectables/CheckCompleteBaseService.html":{},"injectables/DefaultPageGuardService.html":{},"injectables/GeocoderService.html":{},"injectables/PageStateService.html":{},"injectables/ServerPayload.html":{},"overview.html":{},"additional-documentation/getting-started.html":{}}}],["injectiontoken",{"_index":4233,"title":{},"body":{"guards/RouteGuardService.html":{}}}],["injector",{"_index":4234,"title":{},"body":{"guards/RouteGuardService.html":{}}}],["inline",{"_index":3491,"title":{},"body":{"interfaces/IRadioItems.html":{},"components/RadioComponent.html":{}}}],["inmaintenance",{"_index":3632,"title":{},"body":{"interfaces/ISpaEnvResponse.html":{}}}],["input",{"_index":169,"title":{},"body":{"classes/AbstractFormControl.html":{},"classes/AbstractTestPage.html":{},"components/AccordionCommonComponent.html":{},"interfaces/AddrLabelList.html":{},"components/ButtonComponent.html":{},"components/ButtonGroupComponent.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"interfaces/CommonLogMessage.html":{},"components/ConfirmTemplateComponent.html":{},"interfaces/CountryList.html":{},"interfaces/DateErrorMsg.html":{},"directives/DateFieldFormatDirective.html":{},"components/DatepickerComponent.html":{},"components/DropdownComponent.html":{},"directives/DuplicateCheckDirective.html":{},"components/EmailComponent.html":{},"components/ErrorContainerComponent.html":{},"interfaces/FileUploaderMsg.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/FullNameComponent.html":{},"interfaces/FullNameErrorMsg.html":{},"components/GeocoderInputComponent.html":{},"components/HeaderComponent.html":{},"interfaces/IRadioItems.html":{},"interfaces/ISpaEnvResponse.html":{},"interfaces/Maxlengths.html":{},"components/NameComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"components/PhnComponent.html":{},"components/PhoneNumberComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{},"components/RadioComponent.html":{},"interfaces/ReadOnlyFields.html":{},"interfaces/SampleImageInterface.html":{},"components/SampleModalComponent.html":{},"components/SinComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"directives/ValidatePostalcodeDirective.html":{},"components/WizardProgressBarComponent.html":{},"components/XiconButtonComponent.html":{},"changelog.html":{},"todo.html":{},"additional-documentation/getting-started.html":{}}}],["input'},{'name",{"_index":698,"title":{},"body":{"components/AccordionCommonComponent.html":{},"components/ButtonComponent.html":{},"components/ButtonGroupComponent.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"components/ConfirmTemplateComponent.html":{},"components/CoreBreadcrumbComponent.html":{},"components/DatepickerComponent.html":{},"components/DropdownComponent.html":{},"components/EmailComponent.html":{},"components/ErrorContainerComponent.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/FullNameComponent.html":{},"components/GeocoderInputComponent.html":{},"components/HeaderComponent.html":{},"components/NameComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"components/PhnComponent.html":{},"components/PhoneNumberComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"components/RadioComponent.html":{},"components/SampleModalComponent.html":{},"components/SinComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{},"components/XiconButtonComponent.html":{}}}],["input(event",{"_index":2445,"title":{},"body":{"directives/DateFieldFormatDirective.html":{}}}],["input.component",{"_index":4339,"title":{},"body":{"modules/SharedCoreModule.html":{}}}],["input.component.html",{"_index":3307,"title":{},"body":{"components/GeocoderInputComponent.html":{}}}],["input.component.scss",{"_index":3306,"title":{},"body":{"components/GeocoderInputComponent.html":{}}}],["input.component.ts",{"_index":3303,"title":{},"body":{"components/GeocoderInputComponent.html":{},"coverage.html":{}}}],["input.component.ts:100",{"_index":3334,"title":{},"body":{"components/GeocoderInputComponent.html":{}}}],["input.component.ts:105",{"_index":3336,"title":{},"body":{"components/GeocoderInputComponent.html":{}}}],["input.component.ts:122",{"_index":3339,"title":{},"body":{"components/GeocoderInputComponent.html":{}}}],["input.component.ts:140",{"_index":3332,"title":{},"body":{"components/GeocoderInputComponent.html":{}}}],["input.component.ts:153",{"_index":3327,"title":{},"body":{"components/GeocoderInputComponent.html":{}}}],["input.component.ts:159",{"_index":3344,"title":{},"body":{"components/GeocoderInputComponent.html":{}}}],["input.component.ts:166",{"_index":3340,"title":{},"body":{"components/GeocoderInputComponent.html":{}}}],["input.component.ts:171",{"_index":3341,"title":{},"body":{"components/GeocoderInputComponent.html":{}}}],["input.component.ts:175",{"_index":3343,"title":{},"body":{"components/GeocoderInputComponent.html":{}}}],["input.component.ts:39",{"_index":3322,"title":{},"body":{"components/GeocoderInputComponent.html":{}}}],["input.component.ts:40",{"_index":3321,"title":{},"body":{"components/GeocoderInputComponent.html":{}}}],["input.component.ts:41",{"_index":3324,"title":{},"body":{"components/GeocoderInputComponent.html":{}}}],["input.component.ts:42",{"_index":3323,"title":{},"body":{"components/GeocoderInputComponent.html":{}}}],["input.component.ts:45",{"_index":3350,"title":{},"body":{"components/GeocoderInputComponent.html":{}}}],["input.component.ts:47",{"_index":3349,"title":{},"body":{"components/GeocoderInputComponent.html":{}}}],["input.component.ts:49",{"_index":3348,"title":{},"body":{"components/GeocoderInputComponent.html":{}}}],["input.component.ts:50",{"_index":3347,"title":{},"body":{"components/GeocoderInputComponent.html":{}}}],["input.component.ts:53",{"_index":3355,"title":{},"body":{"components/GeocoderInputComponent.html":{}}}],["input.component.ts:55",{"_index":3358,"title":{},"body":{"components/GeocoderInputComponent.html":{}}}],["input.component.ts:57",{"_index":3353,"title":{},"body":{"components/GeocoderInputComponent.html":{}}}],["input.component.ts:59",{"_index":3345,"title":{},"body":{"components/GeocoderInputComponent.html":{}}}],["input.component.ts:60",{"_index":3320,"title":{},"body":{"components/GeocoderInputComponent.html":{}}}],["input.component.ts:62",{"_index":3346,"title":{},"body":{"components/GeocoderInputComponent.html":{}}}],["input.component.ts:69",{"_index":3326,"title":{},"body":{"components/GeocoderInputComponent.html":{}}}],["input.component.ts:80",{"_index":3325,"title":{},"body":{"components/GeocoderInputComponent.html":{}}}],["input.component.ts:94",{"_index":3329,"title":{},"body":{"components/GeocoderInputComponent.html":{}}}],["input.getattribute",{"_index":2454,"title":{},"body":{"directives/DateFieldFormatDirective.html":{}}}],["input.value",{"_index":2458,"title":{},"body":{"directives/DateFieldFormatDirective.html":{}}}],["input.value.trim",{"_index":2456,"title":{},"body":{"directives/DateFieldFormatDirective.html":{}}}],["input/geocoder",{"_index":3302,"title":{},"body":{"components/GeocoderInputComponent.html":{},"modules/SharedCoreModule.html":{},"coverage.html":{}}}],["input[type='file",{"_index":2699,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["input_name",{"_index":2705,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["inputs",{"_index":32,"title":{},"body":{"classes/AbstractBaseForm.html":{},"classes/AbstractForm.html":{},"classes/AbstractFormControl.html":{},"classes/AbstractReactForm.html":{},"components/AccordionCommonComponent.html":{},"components/ButtonComponent.html":{},"components/ButtonGroupComponent.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"components/ConfirmTemplateComponent.html":{},"components/DatepickerComponent.html":{},"components/DropdownComponent.html":{},"directives/DuplicateCheckDirective.html":{},"components/EmailComponent.html":{},"components/ErrorContainerComponent.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/FullNameComponent.html":{},"components/GeocoderInputComponent.html":{},"components/HeaderComponent.html":{},"components/NameComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"components/PhnComponent.html":{},"components/PhoneNumberComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"components/RadioComponent.html":{},"components/SampleModalComponent.html":{},"components/SinComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"directives/ValidatePostalcodeDirective.html":{},"components/WizardProgressBarComponent.html":{},"components/XiconButtonComponent.html":{},"changelog.html":{}}}],["inside",{"_index":476,"title":{},"body":{"classes/AbstractTestPage.html":{},"components/CoreBreadcrumbComponent.html":{},"components/FormSubmitBarComponent.html":{},"interfaces/ISpaEnvResponse.html":{},"components/PageFrameworkComponent.html":{}}}],["install",{"_index":5098,"title":{},"body":{"changelog.html":{},"index.html":{},"additional-documentation/local-development/schematics.html":{},"additional-documentation/local-development/components.html":{}}}],["installation",{"_index":5318,"title":{},"body":{"index.html":{}}}],["installed",{"_index":5380,"title":{},"body":{"additional-documentation/getting-started.html":{},"additional-documentation/local-development/schematics.html":{}}}],["installpackagejsondependencies",{"_index":5257,"title":{},"body":{"coverage.html":{}}}],["instanceof",{"_index":1643,"title":{},"body":{"interfaces/CommonLogMessage.html":{},"interfaces/FileUploaderMsg.html":{},"components/HeaderComponent.html":{},"interfaces/ISpaEnvResponse.html":{},"components/WizardProgressBarComponent.html":{}}}],["instances",{"_index":5367,"title":{},"body":{"todo.html":{}}}],["instead",{"_index":574,"title":{},"body":{"classes/AbstractTestPage.html":{},"classes/Address.html":{},"interfaces/FileUploaderMsg.html":{},"components/GeocoderInputComponent.html":{},"changelog.html":{},"additional-documentation/local-development/schematics.html":{}}}],["instruct",{"_index":2782,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["instruction",{"_index":4931,"title":{},"body":{"changelog.html":{}}}],["instructions",{"_index":5082,"title":{},"body":{"changelog.html":{}}}],["instructiontext",{"_index":2686,"title":{},"body":{"interfaces/FileUploaderMsg.html":{},"interfaces/IRadioItems.html":{},"components/RadioComponent.html":{}}}],["insurance",{"_index":3567,"title":{},"body":{"interfaces/ISpaEnvResponse.html":{},"components/SinComponent.html":{}}}],["integration",{"_index":5403,"title":{},"body":{"additional-documentation/getting-started.html":{},"additional-documentation/local-development/schematics.html":{}}}],["intentional",{"_index":4558,"title":{},"body":{"components/XiconButtonComponent.html":{}}}],["interface",{"_index":752,"title":{"interfaces/AddrLabelList.html":{},"interfaces/CommonAttachmentJson.html":{},"interfaces/CommonImageScaleFactors.html":{},"interfaces/CommonLogMessage.html":{},"interfaces/CountryList.html":{},"interfaces/DateErrorMsg.html":{},"interfaces/ErrorMessage.html":{},"interfaces/FileUploaderMsg.html":{},"interfaces/FullNameErrorMsg.html":{},"interfaces/GeoAddressResult.html":{},"interfaces/IRadioItems.html":{},"interfaces/ISpaEnvResponse.html":{},"interfaces/Maxlengths.html":{},"interfaces/PageList.html":{},"interfaces/PageListInterface.html":{},"interfaces/PasswordErrorMsg.html":{},"interfaces/ProvinceList.html":{},"interfaces/ReadOnlyFields.html":{},"interfaces/SampleImageInterface.html":{},"interfaces/SimpleDate.html":{},"interfaces/WizardProgressItem.html":{}},"body":{"interfaces/AddrLabelList.html":{},"injectables/CheckCompleteBaseService.html":{},"interfaces/CommonAttachmentJson.html":{},"classes/CommonImage.html":{},"classes/CommonImageProcessingError.html":{},"interfaces/CommonImageScaleFactors.html":{},"classes/CommonImageScaleFactorsImpl.html":{},"interfaces/CommonLogMessage.html":{},"classes/Container.html":{},"interfaces/CountryList.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"interfaces/ErrorMessage.html":{},"interfaces/FileUploaderMsg.html":{},"components/FullNameComponent.html":{},"interfaces/FullNameErrorMsg.html":{},"interfaces/GeoAddressResult.html":{},"injectables/GeocoderService.html":{},"interfaces/IRadioItems.html":{},"interfaces/ISpaEnvResponse.html":{},"interfaces/Maxlengths.html":{},"interfaces/PageList.html":{},"interfaces/PageListInterface.html":{},"injectables/PageStateService.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{},"components/RadioComponent.html":{},"interfaces/ReadOnlyFields.html":{},"interfaces/SampleImageInterface.html":{},"components/SampleModalComponent.html":{},"interfaces/SimpleDate.html":{},"components/SinComponent.html":{},"interfaces/WizardProgressItem.html":{},"coverage.html":{}}}],["interfaces",{"_index":754,"title":{},"body":{"interfaces/AddrLabelList.html":{},"interfaces/CommonAttachmentJson.html":{},"interfaces/CommonImageScaleFactors.html":{},"interfaces/CommonLogMessage.html":{},"interfaces/CountryList.html":{},"interfaces/DateErrorMsg.html":{},"interfaces/ErrorMessage.html":{},"interfaces/FileUploaderMsg.html":{},"interfaces/FullNameErrorMsg.html":{},"interfaces/GeoAddressResult.html":{},"interfaces/IRadioItems.html":{},"interfaces/ISpaEnvResponse.html":{},"interfaces/Maxlengths.html":{},"interfaces/PageList.html":{},"interfaces/PageListInterface.html":{},"interfaces/PasswordErrorMsg.html":{},"interfaces/ProvinceList.html":{},"interfaces/ReadOnlyFields.html":{},"interfaces/SampleImageInterface.html":{},"interfaces/SimpleDate.html":{},"interfaces/WizardProgressItem.html":{},"changelog.html":{},"overview.html":{},"additional-documentation/getting-started.html":{}}}],["internal",{"_index":1617,"title":{},"body":{"interfaces/CommonLogMessage.html":{},"changelog.html":{}}}],["internally",{"_index":172,"title":{},"body":{"classes/AbstractFormControl.html":{}}}],["internationalprefix",{"_index":4095,"title":{},"body":{"components/PhoneNumberComponent.html":{}}}],["internationalprefix.split",{"_index":4101,"title":{},"body":{"components/PhoneNumberComponent.html":{}}}],["internet",{"_index":270,"title":{},"body":{"classes/AbstractHttpService.html":{},"injectables/GeocoderService.html":{}}}],["introduced",{"_index":4773,"title":{},"body":{"changelog.html":{}}}],["invalid",{"_index":1479,"title":{},"body":{"interfaces/CommonAttachmentJson.html":{},"classes/CommonImage.html":{},"classes/CommonImageProcessingError.html":{},"interfaces/CommonImageScaleFactors.html":{},"classes/CommonImageScaleFactorsImpl.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"interfaces/FileUploaderMsg.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"components/PhnComponent.html":{},"components/PostalCodeComponent.html":{},"components/SinComponent.html":{},"changelog.html":{}}}],["invalidbcpostal",{"_index":4146,"title":{},"body":{"components/PostalCodeComponent.html":{},"directives/ValidateBcPostalDirective.html":{},"directives/ValidatePostalcodeDirective.html":{}}}],["invalidchar",{"_index":1357,"title":{},"body":{"components/CityComponent.html":{},"interfaces/CountryList.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{},"directives/ValidateCityDirective.html":{},"directives/ValidateNameDirective.html":{},"directives/ValidatePostalcodeDirective.html":{},"directives/ValidateRegionDirective.html":{},"directives/ValidateStreetDirective.html":{}}}],["invalidemail",{"_index":2577,"title":{},"body":{"components/EmailComponent.html":{}}}],["invalidimagehanlder",{"_index":3059,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["invalidimagehanlder(imagereaderror",{"_index":3079,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["invalidvalue",{"_index":2315,"title":{},"body":{"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{}}}],["invisible",{"_index":2357,"title":{},"body":{"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{}}}],["invocation",{"_index":908,"title":{},"body":{"interfaces/AddrLabelList.html":{},"interfaces/Maxlengths.html":{},"interfaces/ReadOnlyFields.html":{}}}],["iot",{"_index":1815,"title":{},"body":{"interfaces/CountryList.html":{}}}],["ipsam",{"_index":1385,"title":{},"body":{"components/CityComponent.html":{},"interfaces/CountryList.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"interfaces/FileUploaderMsg.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{}}}],["ipsum",{"_index":1376,"title":{},"body":{"components/CityComponent.html":{},"interfaces/CountryList.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"interfaces/FileUploaderMsg.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{}}}],["iradioitems",{"_index":3482,"title":{"interfaces/IRadioItems.html":{}},"body":{"interfaces/IRadioItems.html":{},"components/RadioComponent.html":{},"coverage.html":{}}}],["iran",{"_index":1975,"title":{},"body":{"interfaces/CountryList.html":{}}}],["iraq",{"_index":1978,"title":{},"body":{"interfaces/CountryList.html":{}}}],["ireland",{"_index":1980,"title":{},"body":{"interfaces/CountryList.html":{}}}],["irl",{"_index":1979,"title":{},"body":{"interfaces/CountryList.html":{}}}],["irn",{"_index":1974,"title":{},"body":{"interfaces/CountryList.html":{}}}],["irq",{"_index":1977,"title":{},"body":{"interfaces/CountryList.html":{}}}],["irrelevant",{"_index":3284,"title":{},"body":{"interfaces/GeoAddressResult.html":{},"injectables/GeocoderService.html":{}}}],["is_showing_person",{"_index":1734,"title":{},"body":{"components/CoreBreadcrumbComponent.html":{}}}],["isbconly",{"_index":981,"title":{},"body":{"classes/Address.html":{}}}],["isbcphn",{"_index":3988,"title":{},"body":{"components/PhnComponent.html":{},"changelog.html":{}}}],["iscanada",{"_index":879,"title":{},"body":{"interfaces/AddrLabelList.html":{},"interfaces/Maxlengths.html":{},"interfaces/ReadOnlyFields.html":{}}}],["iscomplete",{"_index":979,"title":{},"body":{"classes/Address.html":{},"injectables/CheckCompleteBaseService.html":{},"interfaces/PageList.html":{},"interfaces/PageListInterface.html":{},"injectables/PageStateService.html":{}}}],["iscontinuedisabled",{"_index":3649,"title":{},"body":{"interfaces/ISpaEnvResponse.html":{}}}],["isdate",{"_index":2464,"title":{},"body":{"components/DatepickerComponent.html":{}}}],["isdate(x",{"_index":2384,"title":{},"body":{"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{}}}],["isdisabled",{"_index":159,"title":{},"body":{"classes/AbstractFormControl.html":{},"interfaces/AddrLabelList.html":{},"components/CityComponent.html":{},"interfaces/CountryList.html":{},"components/EmailComponent.html":{},"interfaces/Maxlengths.html":{},"components/NameComponent.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"components/PhnComponent.html":{},"components/PhoneNumberComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"components/RadioComponent.html":{},"interfaces/ReadOnlyFields.html":{},"components/SinComponent.html":{}}}],["isl",{"_index":1968,"title":{},"body":{"interfaces/CountryList.html":{}}}],["islamic",{"_index":1976,"title":{},"body":{"interfaces/CountryList.html":{}}}],["island",{"_index":1812,"title":{},"body":{"interfaces/CountryList.html":{},"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{}}}],["islands",{"_index":1748,"title":{},"body":{"interfaces/CountryList.html":{}}}],["isle",{"_index":1982,"title":{},"body":{"interfaces/CountryList.html":{}}}],["isloading",{"_index":3142,"title":{},"body":{"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{}}}],["isn't",{"_index":2702,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["isopen",{"_index":641,"title":{},"body":{"components/AccordionCommonComponent.html":{}}}],["ispaenvresponse",{"_index":3505,"title":{"interfaces/ISpaEnvResponse.html":{}},"body":{"interfaces/ISpaEnvResponse.html":{},"coverage.html":{}}}],["ispagecomplete",{"_index":374,"title":{},"body":{"injectables/AbstractPgCheckService.html":{},"injectables/CheckCompleteBaseService.html":{},"interfaces/PageListInterface.html":{}}}],["ispagecomplete(url",{"_index":378,"title":{},"body":{"injectables/AbstractPgCheckService.html":{},"injectables/CheckCompleteBaseService.html":{}}}],["ispagelistempty",{"_index":1209,"title":{},"body":{"injectables/CheckCompleteBaseService.html":{},"interfaces/PageListInterface.html":{}}}],["ispdf",{"_index":2949,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["isprerequisitecomplete",{"_index":375,"title":{},"body":{"injectables/AbstractPgCheckService.html":{},"injectables/CheckCompleteBaseService.html":{},"interfaces/PageListInterface.html":{}}}],["isr",{"_index":1984,"title":{},"body":{"interfaces/CountryList.html":{}}}],["israel",{"_index":1985,"title":{},"body":{"interfaces/CountryList.html":{}}}],["isrequired",{"_index":798,"title":{},"body":{"interfaces/AddrLabelList.html":{},"interfaces/Maxlengths.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"interfaces/ReadOnlyFields.html":{}}}],["issue",{"_index":2945,"title":{},"body":{"interfaces/FileUploaderMsg.html":{},"changelog.html":{},"index.html":{},"additional-documentation/local-development/schematics.html":{}}}],["issues",{"_index":1191,"title":{},"body":{"modules/CaptchaModule.html":{},"interfaces/FileUploaderMsg.html":{},"components/FullNameComponent.html":{},"interfaces/FullNameErrorMsg.html":{},"changelog.html":{}}}],["iste",{"_index":1396,"title":{},"body":{"components/CityComponent.html":{},"interfaces/CountryList.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"interfaces/FileUploaderMsg.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{}}}],["istypeaheadloading",{"_index":3310,"title":{},"body":{"components/GeocoderInputComponent.html":{}}}],["isundermaintenance",{"_index":3577,"title":{},"body":{"interfaces/ISpaEnvResponse.html":{}}}],["isvalid",{"_index":976,"title":{},"body":{"classes/Address.html":{},"todo.html":{}}}],["it'll",{"_index":2414,"title":{},"body":{"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{}}}],["it's",{"_index":505,"title":{},"body":{"classes/AbstractTestPage.html":{},"interfaces/AddrLabelList.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"interfaces/FileUploaderMsg.html":{},"interfaces/ISpaEnvResponse.html":{},"interfaces/Maxlengths.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"interfaces/ReadOnlyFields.html":{},"additional-documentation/local-development/schematics.html":{}}}],["ita",{"_index":1986,"title":{},"body":{"interfaces/CountryList.html":{}}}],["italy",{"_index":1987,"title":{},"body":{"interfaces/CountryList.html":{}}}],["item",{"_index":932,"title":{},"body":{"interfaces/AddrLabelList.html":{},"injectables/CheckCompleteBaseService.html":{},"interfaces/Maxlengths.html":{},"interfaces/PageList.html":{},"interfaces/PageListInterface.html":{},"injectables/PageStateService.html":{},"interfaces/ReadOnlyFields.html":{}}}],["item.iscomplete",{"_index":1269,"title":{},"body":{"injectables/CheckCompleteBaseService.html":{},"interfaces/PageListInterface.html":{}}}],["items",{"_index":1219,"title":{},"body":{"injectables/CheckCompleteBaseService.html":{},"classes/Container.html":{},"components/DropdownComponent.html":{},"interfaces/GeoAddressResult.html":{},"injectables/GeocoderService.html":{},"interfaces/PageListInterface.html":{},"interfaces/WizardProgressItem.html":{}}}],["iterate",{"_index":3384,"title":{},"body":{"components/GeocoderInputComponent.html":{}}}],["itm.path",{"_index":3758,"title":{},"body":{"interfaces/PageList.html":{},"injectables/PageStateService.html":{}}}],["itm.redirectto",{"_index":3754,"title":{},"body":{"interfaces/PageList.html":{},"injectables/PageStateService.html":{}}}],["itself",{"_index":4734,"title":{},"body":{"changelog.html":{}}}],["jam",{"_index":1988,"title":{},"body":{"interfaces/CountryList.html":{}}}],["jamaica",{"_index":1989,"title":{},"body":{"interfaces/CountryList.html":{}}}],["jan",{"_index":2214,"title":{},"body":{"interfaces/CountryList.html":{}}}],["japan",{"_index":1991,"title":{},"body":{"interfaces/CountryList.html":{}}}],["javascript",{"_index":1007,"title":{},"body":{"classes/Address.html":{},"interfaces/CommonLogMessage.html":{}}}],["jersey",{"_index":1993,"title":{},"body":{"interfaces/CountryList.html":{}}}],["jey",{"_index":1992,"title":{},"body":{"interfaces/CountryList.html":{}}}],["jor",{"_index":1994,"title":{},"body":{"interfaces/CountryList.html":{}}}],["jordan",{"_index":1995,"title":{},"body":{"interfaces/CountryList.html":{}}}],["jpeg",{"_index":2794,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["jpg",{"_index":2745,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["jpn",{"_index":1990,"title":{},"body":{"interfaces/CountryList.html":{}}}],["js",{"_index":5290,"title":{},"body":{"dependencies.html":{},"additional-documentation/local-development/schematics.html":{}}}],["js/files/version.generated.ts",{"_index":5267,"title":{},"body":{"coverage.html":{}}}],["js/index.ts",{"_index":5271,"title":{},"body":{"coverage.html":{}}}],["jsdate",{"_index":2410,"title":{},"body":{"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{}}}],["jsdocs",{"_index":5130,"title":{},"body":{"changelog.html":{}}}],["json",{"_index":1513,"title":{},"body":{"interfaces/CommonAttachmentJson.html":{},"classes/CommonImage.html":{},"classes/CommonImageProcessingError.html":{},"interfaces/CommonImageScaleFactors.html":{},"classes/CommonImageScaleFactorsImpl.html":{},"interfaces/CommonLogMessage.html":{}}}],["json.stringify(error",{"_index":2928,"title":{},"body":{"interfaces/FileUploaderMsg.html":{},"interfaces/ISpaEnvResponse.html":{}}}],["kaz",{"_index":1996,"title":{},"body":{"interfaces/CountryList.html":{}}}],["kazakhstan",{"_index":1997,"title":{},"body":{"interfaces/CountryList.html":{}}}],["keeling",{"_index":1853,"title":{},"body":{"interfaces/CountryList.html":{}}}],["keep",{"_index":138,"title":{},"body":{"classes/AbstractFormControl.html":{},"classes/Base.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"components/ConfirmTemplateComponent.html":{},"components/DatepickerComponent.html":{},"components/DropdownComponent.html":{},"components/EmailComponent.html":{},"interfaces/FileUploaderMsg.html":{},"components/FullNameComponent.html":{},"components/GeocoderInputComponent.html":{},"interfaces/ISpaEnvResponse.html":{},"components/NameComponent.html":{},"components/PasswordComponent.html":{},"classes/Person.html":{},"components/PhnComponent.html":{},"components/PhoneNumberComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"components/RadioComponent.html":{},"components/SampleModalComponent.html":{},"components/SinComponent.html":{},"components/ToggleComponent.html":{},"changelog.html":{}}}],["ken",{"_index":1998,"title":{},"body":{"interfaces/CountryList.html":{}}}],["kenya",{"_index":1999,"title":{},"body":{"interfaces/CountryList.html":{}}}],["key",{"_index":609,"title":{},"body":{"classes/AbstractTestPage.html":{},"injectables/CheckCompleteBaseService.html":{},"interfaces/CommonLogMessage.html":{},"directives/DuplicateCheckDirective.html":{},"interfaces/ErrorMessage.html":{},"interfaces/ISpaEnvResponse.html":{},"interfaces/PageList.html":{},"interfaces/PageListInterface.html":{},"injectables/PageStateService.html":{},"directives/ValidateBcPostalDirective.html":{},"directives/ValidateCityDirective.html":{},"directives/ValidateNameDirective.html":{},"directives/ValidatePostalcodeDirective.html":{},"directives/ValidateRegionDirective.html":{},"directives/ValidateStreetDirective.html":{}}}],["keyboard",{"_index":3400,"title":{},"body":{"components/GeocoderInputComponent.html":{}}}],["keyboardevent",{"_index":2446,"title":{},"body":{"directives/DateFieldFormatDirective.html":{},"interfaces/FileUploaderMsg.html":{},"components/GeocoderInputComponent.html":{}}}],["keyup",{"_index":2895,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["kgz",{"_index":2008,"title":{},"body":{"interfaces/CountryList.html":{}}}],["khm",{"_index":1830,"title":{},"body":{"interfaces/CountryList.html":{}}}],["kib",{"_index":2988,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["kind",{"_index":5348,"title":{},"body":{"license.html":{}}}],["kingdom",{"_index":2263,"title":{},"body":{"interfaces/CountryList.html":{}}}],["kir",{"_index":2000,"title":{},"body":{"interfaces/CountryList.html":{}}}],["kiribati",{"_index":2001,"title":{},"body":{"interfaces/CountryList.html":{}}}],["kitts",{"_index":2151,"title":{},"body":{"interfaces/CountryList.html":{}}}],["kna",{"_index":2150,"title":{},"body":{"interfaces/CountryList.html":{}}}],["know",{"_index":1100,"title":{},"body":{"components/ButtonGroupComponent.html":{},"additional-documentation/getting-started.html":{}}}],["known",{"_index":1190,"title":{},"body":{"modules/CaptchaModule.html":{}}}],["kong",{"_index":1965,"title":{},"body":{"interfaces/CountryList.html":{}}}],["kor",{"_index":2005,"title":{},"body":{"interfaces/CountryList.html":{}}}],["korea",{"_index":2003,"title":{},"body":{"interfaces/CountryList.html":{}}}],["kuwait",{"_index":2007,"title":{},"body":{"interfaces/CountryList.html":{}}}],["kwt",{"_index":2006,"title":{},"body":{"interfaces/CountryList.html":{}}}],["kyrgyzstan",{"_index":2009,"title":{},"body":{"interfaces/CountryList.html":{}}}],["label",{"_index":130,"title":{},"body":{"classes/AbstractFormControl.html":{},"classes/AbstractTestPage.html":{},"components/ButtonComponent.html":{},"components/ButtonGroupComponent.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"interfaces/CountryList.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"components/DropdownComponent.html":{},"components/EmailComponent.html":{},"interfaces/ErrorMessage.html":{},"components/GeocoderInputComponent.html":{},"interfaces/IRadioItems.html":{},"components/NameComponent.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"components/PhnComponent.html":{},"components/PhoneNumberComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{},"components/RadioComponent.html":{},"components/SinComponent.html":{},"components/ToggleComponent.html":{},"components/XiconButtonComponent.html":{},"changelog.html":{}}}],["label.getattribute('for",{"_index":597,"title":{},"body":{"classes/AbstractTestPage.html":{}}}],["labelforid",{"_index":565,"title":{},"body":{"classes/AbstractTestPage.html":{},"components/CityComponent.html":{},"interfaces/CountryList.html":{},"components/EmailComponent.html":{},"components/NameComponent.html":{},"components/PhnComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{},"components/SinComponent.html":{}}}],["labelid",{"_index":563,"title":{},"body":{"classes/AbstractTestPage.html":{}}}],["labelledby=\"mylargemodallabel\"]')).isdisplayed",{"_index":620,"title":{},"body":{"classes/AbstractTestPage.html":{}}}],["labelname",{"_index":508,"title":{},"body":{"classes/AbstractTestPage.html":{}}}],["labelname)).first",{"_index":595,"title":{},"body":{"classes/AbstractTestPage.html":{}}}],["labelreplacementtag",{"_index":1356,"title":{},"body":{"components/CityComponent.html":{},"components/EmailComponent.html":{},"interfaces/ErrorMessage.html":{},"interfaces/IRadioItems.html":{},"components/PhnComponent.html":{},"components/PhoneNumberComponent.html":{},"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{},"components/RadioComponent.html":{},"components/SinComponent.html":{},"coverage.html":{}}}],["labels",{"_index":176,"title":{},"body":{"classes/AbstractFormControl.html":{},"interfaces/AddrLabelList.html":{},"interfaces/Maxlengths.html":{},"interfaces/ReadOnlyFields.html":{},"changelog.html":{}}}],["labeltext",{"_index":2341,"title":{},"body":{"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{}}}],["labrador",{"_index":4190,"title":{},"body":{"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{}}}],["land",{"_index":1747,"title":{},"body":{"interfaces/CountryList.html":{}}}],["landing",{"_index":1251,"title":{},"body":{"injectables/CheckCompleteBaseService.html":{},"interfaces/PageListInterface.html":{}}}],["language",{"_index":5351,"title":{},"body":{"license.html":{}}}],["lanka",{"_index":2208,"title":{},"body":{"interfaces/CountryList.html":{}}}],["lao",{"_index":2010,"title":{},"body":{"interfaces/CountryList.html":{}}}],["largely",{"_index":2328,"title":{},"body":{"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{}}}],["last",{"_index":3190,"title":{},"body":{"components/FullNameComponent.html":{},"interfaces/FullNameErrorMsg.html":{},"classes/Person.html":{}}}],["lastname",{"_index":3196,"title":{},"body":{"components/FullNameComponent.html":{},"interfaces/FullNameErrorMsg.html":{},"classes/Person.html":{}}}],["lastnamelabel",{"_index":3202,"title":{},"body":{"components/FullNameComponent.html":{},"interfaces/FullNameErrorMsg.html":{}}}],["later",{"_index":2756,"title":{},"body":{"interfaces/FileUploaderMsg.html":{},"interfaces/ISpaEnvResponse.html":{}}}],["latvia",{"_index":2012,"title":{},"body":{"interfaces/CountryList.html":{}}}],["law",{"_index":5340,"title":{},"body":{"license.html":{}}}],["layout",{"_index":3176,"title":{},"body":{"components/FormSubmitBarComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{}}}],["lbn",{"_index":2013,"title":{},"body":{"interfaces/CountryList.html":{}}}],["lbr",{"_index":2017,"title":{},"body":{"interfaces/CountryList.html":{}}}],["lby",{"_index":2019,"title":{},"body":{"interfaces/CountryList.html":{}}}],["lca",{"_index":2153,"title":{},"body":{"interfaces/CountryList.html":{}}}],["leading",{"_index":4025,"title":{},"body":{"components/PhnComponent.html":{}}}],["leads",{"_index":527,"title":{},"body":{"classes/AbstractTestPage.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{}}}],["leave",{"_index":3580,"title":{},"body":{"interfaces/ISpaEnvResponse.html":{}}}],["lebanon",{"_index":2014,"title":{},"body":{"interfaces/CountryList.html":{}}}],["left",{"_index":1726,"title":{},"body":{"components/CoreBreadcrumbComponent.html":{}}}],["left/right",{"_index":4946,"title":{},"body":{"changelog.html":{}}}],["legend",{"_index":652,"title":{},"body":{"components/AccordionCommonComponent.html":{},"components/ButtonComponent.html":{},"components/ButtonGroupComponent.html":{},"modules/CaptchaModule.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"components/ConfirmTemplateComponent.html":{},"components/CoreBreadcrumbComponent.html":{},"components/DatepickerComponent.html":{},"components/DropdownComponent.html":{},"components/EmailComponent.html":{},"components/ErrorContainerComponent.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/FullNameComponent.html":{},"components/GeocoderInputComponent.html":{},"components/HeaderComponent.html":{},"components/NameComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"components/PhnComponent.html":{},"components/PhoneNumberComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"components/RadioComponent.html":{},"components/SampleModalComponent.html":{},"modules/SharedCoreModule.html":{},"components/SinComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{},"components/XiconButtonComponent.html":{},"overview.html":{}}}],["length",{"_index":2663,"title":{},"body":{"interfaces/FileUploaderMsg.html":{},"interfaces/ISpaEnvResponse.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"components/PhnComponent.html":{},"components/SinComponent.html":{},"changelog.html":{}}}],["lengths",{"_index":835,"title":{},"body":{"interfaces/AddrLabelList.html":{},"interfaces/Maxlengths.html":{},"interfaces/ReadOnlyFields.html":{}}}],["leone",{"_index":2183,"title":{},"body":{"interfaces/CountryList.html":{}}}],["lesotho",{"_index":2016,"title":{},"body":{"interfaces/CountryList.html":{}}}],["less",{"_index":1065,"title":{},"body":{"components/ButtonComponent.html":{}}}],["leste",{"_index":2236,"title":{},"body":{"interfaces/CountryList.html":{}}}],["letter",{"_index":3227,"title":{},"body":{"components/FullNameComponent.html":{},"interfaces/FullNameErrorMsg.html":{},"components/NameComponent.html":{},"components/PostalCodeComponent.html":{},"coverage.html":{}}}],["letters",{"_index":1359,"title":{},"body":{"components/CityComponent.html":{},"interfaces/CountryList.html":{},"components/FullNameComponent.html":{},"interfaces/FullNameErrorMsg.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{}}}],["level",{"_index":1622,"title":{},"body":{"interfaces/CommonLogMessage.html":{},"components/CoreBreadcrumbComponent.html":{},"additional-documentation/getting-started.html":{},"additional-documentation/local-development/components.html":{}}}],["levelthen",{"_index":5422,"title":{},"body":{"additional-documentation/local-development/schematics.html":{}}}],["lib",{"_index":413,"title":{},"body":{"classes/AbstractTestPage.html":{},"interfaces/FileUploaderMsg.html":{},"changelog.html":{},"index.html":{},"todo.html":{},"additional-documentation/getting-started.html":{},"additional-documentation/local-development/schematics.html":{},"additional-documentation/local-development/components.html":{}}}],["lib/captcha",{"_index":1184,"title":{},"body":{"modules/CaptchaModule.html":{},"additional-documentation/getting-started.html":{}}}],["lib/e2e",{"_index":5043,"title":{},"body":{"changelog.html":{}}}],["lib/images",{"_index":5405,"title":{},"body":{"additional-documentation/getting-started.html":{}}}],["lib/images';this",{"_index":5407,"title":{},"body":{"additional-documentation/getting-started.html":{}}}],["lib/models",{"_index":5088,"title":{},"body":{"changelog.html":{},"additional-documentation/getting-started.html":{}}}],["lib/services",{"_index":5068,"title":{},"body":{"changelog.html":{},"additional-documentation/getting-started.html":{}}}],["lib/services';setting",{"_index":5395,"title":{},"body":{"additional-documentation/getting-started.html":{}}}],["lib/services/geocoder.service';if",{"_index":5392,"title":{},"body":{"additional-documentation/getting-started.html":{}}}],["liberia",{"_index":2018,"title":{},"body":{"interfaces/CountryList.html":{}}}],["libif",{"_index":5486,"title":{},"body":{"additional-documentation/local-development/components.html":{}}}],["library",{"_index":2334,"title":{},"body":{"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"interfaces/ErrorMessage.html":{},"interfaces/FileUploaderMsg.html":{},"interfaces/ISpaEnvResponse.html":{},"index.html":{},"additional-documentation/getting-started.html":{},"additional-documentation/local-development/schematics.html":{},"additional-documentation/local-development/components.html":{}}}],["library/issues/221#issuecomment",{"_index":3882,"title":{},"body":{"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{}}}],["libsetup",{"_index":5319,"title":{},"body":{"index.html":{}}}],["libya",{"_index":2020,"title":{},"body":{"interfaces/CountryList.html":{}}}],["license",{"_index":5235,"title":{"license.html":{}},"body":{"coverage.html":{},"license.html":{}}}],["license/index.ts",{"_index":5233,"title":{},"body":{"coverage.html":{}}}],["licensed",{"_index":5333,"title":{},"body":{"license.html":{}}}],["lie",{"_index":2021,"title":{},"body":{"interfaces/CountryList.html":{}}}],["liechtenstein",{"_index":2022,"title":{},"body":{"interfaces/CountryList.html":{}}}],["likes",{"_index":5390,"title":{},"body":{"additional-documentation/getting-started.html":{}}}],["limitations",{"_index":5354,"title":{},"body":{"license.html":{}}}],["line",{"_index":815,"title":{},"body":{"interfaces/AddrLabelList.html":{},"interfaces/FileUploaderMsg.html":{},"interfaces/ISpaEnvResponse.html":{},"interfaces/Maxlengths.html":{},"interfaces/ReadOnlyFields.html":{},"components/XiconButtonComponent.html":{},"changelog.html":{},"additional-documentation/local-development/components.html":{}}}],["line:max",{"_index":3598,"title":{},"body":{"interfaces/ISpaEnvResponse.html":{}}}],["lines",{"_index":887,"title":{},"body":{"interfaces/AddrLabelList.html":{},"interfaces/Maxlengths.html":{},"interfaces/ReadOnlyFields.html":{},"changelog.html":{}}}],["link",{"_index":487,"title":{},"body":{"classes/AbstractTestPage.html":{},"changelog.html":{},"additional-documentation/local-development/schematics.html":{},"additional-documentation/local-development/components.html":{}}}],["linking",{"_index":5428,"title":{},"body":{"additional-documentation/local-development/schematics.html":{},"additional-documentation/local-development/components.html":{}}}],["linknote",{"_index":5496,"title":{},"body":{"additional-documentation/local-development/components.html":{}}}],["links",{"_index":524,"title":{},"body":{"classes/AbstractTestPage.html":{},"additional-documentation/local-development/components.html":{}}}],["list",{"_index":933,"title":{},"body":{"interfaces/AddrLabelList.html":{},"injectables/CheckCompleteBaseService.html":{},"interfaces/CountryList.html":{},"interfaces/FileUploaderMsg.html":{},"components/GeocoderInputComponent.html":{},"interfaces/Maxlengths.html":{},"interfaces/PageList.html":{},"interfaces/PageListInterface.html":{},"injectables/PageStateService.html":{},"interfaces/ReadOnlyFields.html":{},"changelog.html":{}}}],["listed",{"_index":5387,"title":{},"body":{"additional-documentation/getting-started.html":{}}}],["literal",{"_index":297,"title":{},"body":{"classes/AbstractHttpService.html":{},"directives/DuplicateCheckDirective.html":{},"directives/ValidateBcPostalDirective.html":{},"directives/ValidateCityDirective.html":{},"directives/ValidateNameDirective.html":{},"directives/ValidatePostalcodeDirective.html":{},"directives/ValidateRegionDirective.html":{},"directives/ValidateStreetDirective.html":{}}}],["literals",{"_index":1567,"title":{},"body":{"interfaces/CommonLogMessage.html":{}}}],["lithuania",{"_index":2024,"title":{},"body":{"interfaces/CountryList.html":{}}}],["live",{"_index":5479,"title":{},"body":{"additional-documentation/local-development/components.html":{}}}],["lka",{"_index":2206,"title":{},"body":{"interfaces/CountryList.html":{}}}],["load",{"_index":350,"title":{},"body":{"injectables/AbstractPageGuardService.html":{},"interfaces/FileUploaderMsg.html":{},"guards/LoadPageGuardService.html":{},"dependencies.html":{},"todo.html":{}}}],["loaded",{"_index":914,"title":{},"body":{"interfaces/AddrLabelList.html":{},"interfaces/Maxlengths.html":{},"interfaces/ReadOnlyFields.html":{}}}],["loadimage",{"_index":2646,"title":{},"body":{"interfaces/FileUploaderMsg.html":{},"coverage.html":{}}}],["loadimage_",{"_index":2650,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["loading",{"_index":12,"title":{},"body":{"classes/AbstractBaseForm.html":{},"classes/AbstractForm.html":{},"classes/AbstractReactForm.html":{},"interfaces/FileUploaderMsg.html":{},"components/GeocoderInputComponent.html":{}}}],["loadpageguardservice",{"_index":357,"title":{"guards/LoadPageGuardService.html":{}},"body":{"injectables/AbstractPageGuardService.html":{},"injectables/DefaultPageGuardService.html":{},"guards/LoadPageGuardService.html":{},"coverage.html":{}}}],["local",{"_index":2547,"title":{"additional-documentation/local-development.html":{}},"body":{"directives/DuplicateCheckDirective.html":{},"directives/ValidatePostalcodeDirective.html":{},"changelog.html":{},"additional-documentation/local-development.html":{},"additional-documentation/local-development/components.html":{}}}],["locality,street",{"_index":3278,"title":{},"body":{"interfaces/GeoAddressResult.html":{},"injectables/GeocoderService.html":{}}}],["locally",{"_index":3547,"title":{},"body":{"interfaces/ISpaEnvResponse.html":{},"additional-documentation/local-development/schematics.html":{}}}],["localstorage",{"_index":2823,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["location",{"_index":5090,"title":{},"body":{"changelog.html":{}}}],["lodaing",{"_index":5448,"title":{},"body":{"additional-documentation/local-development/schematics.html":{}}}],["log",{"_index":1586,"title":{},"body":{"interfaces/CommonLogMessage.html":{},"interfaces/FileUploaderMsg.html":{},"interfaces/ISpaEnvResponse.html":{},"changelog.html":{}}}],["logentry",{"_index":2638,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["logerror",{"_index":1589,"title":{},"body":{"interfaces/CommonLogMessage.html":{}}}],["logged",{"_index":1558,"title":{},"body":{"interfaces/CommonLogMessage.html":{}}}],["logger",{"_index":1570,"title":{},"body":{"interfaces/CommonLogMessage.html":{},"changelog.html":{}}}],["logging",{"_index":323,"title":{},"body":{"classes/AbstractHttpService.html":{},"interfaces/FileUploaderMsg.html":{},"changelog.html":{}}}],["logging/log",{"_index":2639,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["loghttperror(error",{"_index":1610,"title":{},"body":{"interfaces/CommonLogMessage.html":{}}}],["loghttprequeststoconsole",{"_index":229,"title":{},"body":{"classes/AbstractHttpService.html":{},"injectables/GeocoderService.html":{}}}],["logic",{"_index":190,"title":{},"body":{"classes/AbstractFormControl.html":{},"injectables/CheckCompleteBaseService.html":{},"guards/LoadPageGuardService.html":{},"interfaces/PageListInterface.html":{},"guards/RouteGuardService.html":{},"directives/ValidateBcPostalDirective.html":{},"changelog.html":{}}}],["logo",{"_index":4970,"title":{},"body":{"changelog.html":{}}}],["logosrc",{"_index":3449,"title":{},"body":{"components/HeaderComponent.html":{}}}],["logs",{"_index":1591,"title":{},"body":{"interfaces/CommonLogMessage.html":{},"changelog.html":{}}}],["logservice",{"_index":2692,"title":{},"body":{"interfaces/FileUploaderMsg.html":{},"interfaces/ISpaEnvResponse.html":{}}}],["logsource",{"_index":1576,"title":{},"body":{"interfaces/CommonLogMessage.html":{}}}],["long",{"_index":352,"title":{},"body":{"injectables/AbstractPageGuardService.html":{},"injectables/AbstractPgCheckService.html":{}}}],["longer",{"_index":4665,"title":{},"body":{"changelog.html":{}}}],["look",{"_index":4032,"title":{},"body":{"components/PhnComponent.html":{},"additional-documentation/local-development/components.html":{}}}],["looking",{"_index":3292,"title":{},"body":{"interfaces/GeoAddressResult.html":{},"injectables/GeocoderService.html":{}}}],["lookup",{"_index":560,"title":{},"body":{"classes/AbstractTestPage.html":{},"interfaces/AddrLabelList.html":{},"components/GeocoderInputComponent.html":{},"injectables/GeocoderService.html":{},"interfaces/Maxlengths.html":{},"interfaces/ReadOnlyFields.html":{}}}],["lookup(address",{"_index":3268,"title":{},"body":{"interfaces/GeoAddressResult.html":{},"injectables/GeocoderService.html":{}}}],["lorem",{"_index":1375,"title":{},"body":{"components/CityComponent.html":{},"interfaces/CountryList.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"interfaces/FileUploaderMsg.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{}}}],["losing",{"_index":1606,"title":{},"body":{"interfaces/CommonLogMessage.html":{}}}],["lost",{"_index":269,"title":{},"body":{"classes/AbstractHttpService.html":{},"injectables/GeocoderService.html":{}}}],["lower",{"_index":1704,"title":{},"body":{"classes/Container.html":{},"interfaces/WizardProgressItem.html":{}}}],["lso",{"_index":2015,"title":{},"body":{"interfaces/CountryList.html":{}}}],["ltu",{"_index":2023,"title":{},"body":{"interfaces/CountryList.html":{}}}],["lucia",{"_index":2154,"title":{},"body":{"interfaces/CountryList.html":{}}}],["lux",{"_index":2025,"title":{},"body":{"interfaces/CountryList.html":{}}}],["luxembourg",{"_index":2026,"title":{},"body":{"interfaces/CountryList.html":{}}}],["lva",{"_index":2011,"title":{},"body":{"interfaces/CountryList.html":{}}}],["maarten",{"_index":2187,"title":{},"body":{"interfaces/CountryList.html":{}}}],["mac",{"_index":2027,"title":{},"body":{"interfaces/CountryList.html":{}}}],["macao",{"_index":2028,"title":{},"body":{"interfaces/CountryList.html":{}}}],["macbooks",{"_index":5363,"title":{},"body":{"todo.html":{}}}],["macedonia",{"_index":2030,"title":{},"body":{"interfaces/CountryList.html":{}}}],["machine",{"_index":5440,"title":{},"body":{"additional-documentation/local-development/schematics.html":{}}}],["madagascar",{"_index":2034,"title":{},"body":{"interfaces/CountryList.html":{}}}],["made",{"_index":5071,"title":{},"body":{"changelog.html":{},"additional-documentation/local-development/components.html":{}}}],["maf",{"_index":2155,"title":{},"body":{"interfaces/CountryList.html":{}}}],["magnam",{"_index":1384,"title":{},"body":{"components/CityComponent.html":{},"interfaces/CountryList.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"interfaces/FileUploaderMsg.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{}}}],["main",{"_index":1061,"title":{},"body":{"components/ButtonComponent.html":{},"interfaces/CommonLogMessage.html":{},"components/HeaderComponent.html":{},"changelog.html":{},"additional-documentation/local-development/components.html":{}}}],["maintenance",{"_index":3512,"title":{},"body":{"interfaces/ISpaEnvResponse.html":{}}}],["maintenanceflag",{"_index":3584,"title":{},"body":{"interfaces/ISpaEnvResponse.html":{}}}],["maintenancemessage",{"_index":3596,"title":{},"body":{"interfaces/ISpaEnvResponse.html":{}}}],["majorly",{"_index":5002,"title":{},"body":{"changelog.html":{}}}],["make",{"_index":256,"title":{},"body":{"classes/AbstractHttpService.html":{},"classes/AbstractTestPage.html":{},"interfaces/AddrLabelList.html":{},"components/CheckboxComponent.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"interfaces/FileUploaderMsg.html":{},"components/FormSubmitBarComponent.html":{},"injectables/GeocoderService.html":{},"interfaces/IRadioItems.html":{},"interfaces/ISpaEnvResponse.html":{},"guards/LoadPageGuardService.html":{},"interfaces/Maxlengths.html":{},"components/RadioComponent.html":{},"interfaces/ReadOnlyFields.html":{},"guards/RouteGuardService.html":{},"changelog.html":{},"todo.html":{},"additional-documentation/getting-started.html":{},"additional-documentation/local-development/schematics.html":{},"additional-documentation/local-development/components.html":{}}}],["makes",{"_index":214,"title":{},"body":{"classes/AbstractFormControl.html":{},"classes/AbstractHttpService.html":{},"injectables/GeocoderService.html":{},"interfaces/ISpaEnvResponse.html":{}}}],["making",{"_index":1067,"title":{},"body":{"components/ButtonComponent.html":{},"additional-documentation/local-development/schematics.html":{}}}],["malawi",{"_index":2036,"title":{},"body":{"interfaces/CountryList.html":{}}}],["malaysia",{"_index":2038,"title":{},"body":{"interfaces/CountryList.html":{}}}],["maldives",{"_index":2040,"title":{},"body":{"interfaces/CountryList.html":{}}}],["malformed",{"_index":3039,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["mali",{"_index":2042,"title":{},"body":{"interfaces/CountryList.html":{}}}],["malta",{"_index":2044,"title":{},"body":{"interfaces/CountryList.html":{}}}],["malvinas",{"_index":1905,"title":{},"body":{"interfaces/CountryList.html":{}}}],["man",{"_index":1983,"title":{},"body":{"interfaces/CountryList.html":{}}}],["manage",{"_index":2803,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["manitoba",{"_index":4185,"title":{},"body":{"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{}}}],["manually",{"_index":2418,"title":{},"body":{"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"components/HeaderComponent.html":{},"interfaces/ISpaEnvResponse.html":{},"components/WizardProgressBarComponent.html":{},"additional-documentation/local-development/schematics.html":{}}}],["many",{"_index":3494,"title":{},"body":{"interfaces/IRadioItems.html":{},"components/RadioComponent.html":{}}}],["map",{"_index":2626,"title":{},"body":{"interfaces/FileUploaderMsg.html":{},"interfaces/GeoAddressResult.html":{},"injectables/GeocoderService.html":{},"interfaces/ISpaEnvResponse.html":{},"interfaces/PageList.html":{},"injectables/PageStateService.html":{},"components/WizardProgressBarComponent.html":{}}}],["map((ev",{"_index":4507,"title":{},"body":{"components/WizardProgressBarComponent.html":{}}}],["map((event",{"_index":2901,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["map((itm",{"_index":3755,"title":{},"body":{"interfaces/PageList.html":{},"injectables/PageStateService.html":{}}}],["map([['acl",{"_index":3600,"title":{},"body":{"interfaces/ISpaEnvResponse.html":{}}}],["map(prov",{"_index":916,"title":{},"body":{"interfaces/AddrLabelList.html":{},"interfaces/Maxlengths.html":{},"interfaces/ReadOnlyFields.html":{}}}],["map(x",{"_index":1711,"title":{},"body":{"classes/Container.html":{},"interfaces/WizardProgressItem.html":{}}}],["map.js",{"_index":5424,"title":{},"body":{"additional-documentation/local-development/schematics.html":{}}}],["maps",{"_index":2345,"title":{},"body":{"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{}}}],["mar",{"_index":2071,"title":{},"body":{"interfaces/CountryList.html":{}}}],["margins",{"_index":3178,"title":{},"body":{"components/FormSubmitBarComponent.html":{}}}],["mariana",{"_index":2101,"title":{},"body":{"interfaces/CountryList.html":{}}}],["marino",{"_index":2167,"title":{},"body":{"interfaces/CountryList.html":{}}}],["mark",{"_index":395,"title":{},"body":{"classes/AbstractReactForm.html":{}}}],["markallinputstouched",{"_index":88,"title":{},"body":{"classes/AbstractForm.html":{},"classes/AbstractReactForm.html":{}}}],["markallinputstouched(fg",{"_index":388,"title":{},"body":{"classes/AbstractReactForm.html":{}}}],["markastouched",{"_index":101,"title":{},"body":{"classes/AbstractForm.html":{},"classes/AbstractReactForm.html":{}}}],["markdown",{"_index":4767,"title":{},"body":{"changelog.html":{}}}],["markdownlint",{"_index":4779,"title":{},"body":{"changelog.html":{}}}],["markup",{"_index":1066,"title":{},"body":{"components/ButtonComponent.html":{}}}],["marshall",{"_index":2046,"title":{},"body":{"interfaces/CountryList.html":{}}}],["martin",{"_index":2156,"title":{},"body":{"interfaces/CountryList.html":{}}}],["martinique",{"_index":2048,"title":{},"body":{"interfaces/CountryList.html":{}}}],["mask",{"_index":865,"title":{},"body":{"interfaces/AddrLabelList.html":{},"interfaces/Maxlengths.html":{},"components/PhnComponent.html":{},"components/PhoneNumberComponent.html":{},"components/PostalCodeComponent.html":{},"interfaces/ReadOnlyFields.html":{},"modules/SharedCoreModule.html":{},"components/SinComponent.html":{},"changelog.html":{},"dependencies.html":{}}}],["match",{"_index":1500,"title":{},"body":{"interfaces/CommonAttachmentJson.html":{},"classes/CommonImage.html":{},"classes/CommonImageProcessingError.html":{},"interfaces/CommonImageScaleFactors.html":{},"classes/CommonImageScaleFactorsImpl.html":{},"changelog.html":{}}}],["matching",{"_index":84,"title":{},"body":{"classes/AbstractBaseForm.html":{},"classes/AbstractForm.html":{},"classes/AbstractFormControl.html":{},"classes/AbstractHttpService.html":{},"injectables/AbstractPageGuardService.html":{},"injectables/AbstractPgCheckService.html":{},"classes/AbstractReactForm.html":{},"classes/AbstractTestPage.html":{},"components/AccordionCommonComponent.html":{},"interfaces/AddrLabelList.html":{},"classes/Address.html":{},"classes/Base.html":{},"components/ButtonComponent.html":{},"components/ButtonGroupComponent.html":{},"injectables/CaptchaDataService.html":{},"modules/CaptchaModule.html":{},"injectables/CheckCompleteBaseService.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"interfaces/CommonAttachmentJson.html":{},"classes/CommonImage.html":{},"classes/CommonImageProcessingError.html":{},"interfaces/CommonImageScaleFactors.html":{},"classes/CommonImageScaleFactorsImpl.html":{},"interfaces/CommonLogMessage.html":{},"components/ConfirmTemplateComponent.html":{},"classes/Container.html":{},"components/CoreBreadcrumbComponent.html":{},"interfaces/CountryList.html":{},"interfaces/DateErrorMsg.html":{},"directives/DateFieldFormatDirective.html":{},"components/DatepickerComponent.html":{},"injectables/DefaultPageGuardService.html":{},"components/DropdownComponent.html":{},"directives/DuplicateCheckDirective.html":{},"components/EmailComponent.html":{},"components/ErrorContainerComponent.html":{},"interfaces/ErrorMessage.html":{},"interfaces/FileUploaderMsg.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/FullNameComponent.html":{},"interfaces/FullNameErrorMsg.html":{},"interfaces/GeoAddressResult.html":{},"components/GeocoderInputComponent.html":{},"injectables/GeocoderService.html":{},"components/HeaderComponent.html":{},"interfaces/IRadioItems.html":{},"interfaces/ISpaEnvResponse.html":{},"guards/LoadPageGuardService.html":{},"interfaces/Maxlengths.html":{},"classes/MoHCommonLibraryError.html":{},"components/NameComponent.html":{},"components/PageFrameworkComponent.html":{},"interfaces/PageList.html":{},"interfaces/PageListInterface.html":{},"components/PageSectionComponent.html":{},"injectables/PageStateService.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"classes/Person.html":{},"components/PhnComponent.html":{},"components/PhoneNumberComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{},"components/RadioComponent.html":{},"interfaces/ReadOnlyFields.html":{},"guards/RouteGuardService.html":{},"interfaces/SampleImageInterface.html":{},"components/SampleModalComponent.html":{},"injectables/ServerPayload.html":{},"modules/SharedCoreModule.html":{},"interfaces/SimpleDate.html":{},"components/SinComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"directives/ValidateBcPostalDirective.html":{},"directives/ValidateCityDirective.html":{},"directives/ValidateNameDirective.html":{},"directives/ValidatePostalcodeDirective.html":{},"directives/ValidateRegionDirective.html":{},"directives/ValidateStreetDirective.html":{},"components/WizardProgressBarComponent.html":{},"interfaces/WizardProgressItem.html":{},"components/XiconButtonComponent.html":{},"changelog.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"todo.html":{},"additional-documentation/getting-started.html":{},"additional-documentation/local-development.html":{},"additional-documentation/local-development/schematics.html":{},"additional-documentation/local-development/components.html":{}}}],["matchprecisionnot",{"_index":3285,"title":{},"body":{"interfaces/GeoAddressResult.html":{},"injectables/GeocoderService.html":{}}}],["math.abs(target.nativeelement.offsetleft",{"_index":4540,"title":{},"body":{"components/WizardProgressBarComponent.html":{}}}],["math.ceil(math.random()*100",{"_index":2958,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["math.round(((numerator",{"_index":4528,"title":{},"body":{"components/WizardProgressBarComponent.html":{}}}],["mauritania",{"_index":2050,"title":{},"body":{"interfaces/CountryList.html":{}}}],["mauritius",{"_index":2052,"title":{},"body":{"interfaces/CountryList.html":{}}}],["max",{"_index":3013,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["max_year_range",{"_index":5187,"title":{},"body":{"coverage.html":{}}}],["maxheight",{"_index":3032,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["maximum",{"_index":2785,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["maxlen",{"_index":2300,"title":{},"body":{"interfaces/CountryList.html":{},"directives/DateFieldFormatDirective.html":{},"components/NameComponent.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"components/PostalCodeComponent.html":{},"changelog.html":{},"todo.html":{}}}],["maxlenasnumber",{"_index":3696,"title":{},"body":{"components/NameComponent.html":{}}}],["maxlength",{"_index":1325,"title":{},"body":{"components/CityComponent.html":{},"directives/DateFieldFormatDirective.html":{},"components/EmailComponent.html":{},"components/GeocoderInputComponent.html":{},"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{},"components/SinComponent.html":{},"todo.html":{}}}],["maxlengths",{"_index":783,"title":{"interfaces/Maxlengths.html":{}},"body":{"interfaces/AddrLabelList.html":{},"interfaces/Maxlengths.html":{},"interfaces/ReadOnlyFields.html":{},"changelog.html":{},"coverage.html":{}}}],["maxretry",{"_index":3037,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["maxsizeallowed",{"_index":1475,"title":{},"body":{"interfaces/CommonAttachmentJson.html":{},"classes/CommonImage.html":{},"classes/CommonImageProcessingError.html":{},"interfaces/CommonImageScaleFactors.html":{},"classes/CommonImageScaleFactorsImpl.html":{}}}],["maxsizebytes",{"_index":3014,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["maxwidth",{"_index":3029,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["maybe",{"_index":4430,"title":{},"body":{"directives/ValidateBcPostalDirective.html":{}}}],["mayen",{"_index":2215,"title":{},"body":{"interfaces/CountryList.html":{}}}],["mayotte",{"_index":2054,"title":{},"body":{"interfaces/CountryList.html":{}}}],["mb",{"_index":2876,"title":{},"body":{"interfaces/FileUploaderMsg.html":{},"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{}}}],["mcdonald",{"_index":1957,"title":{},"body":{"interfaces/CountryList.html":{}}}],["mco",{"_index":2063,"title":{},"body":{"interfaces/CountryList.html":{}}}],["mda",{"_index":2061,"title":{},"body":{"interfaces/CountryList.html":{}}}],["mdash",{"_index":3413,"title":{},"body":{"components/GeocoderInputComponent.html":{}}}],["mdg",{"_index":2033,"title":{},"body":{"interfaces/CountryList.html":{}}}],["mdv",{"_index":2039,"title":{},"body":{"interfaces/CountryList.html":{}}}],["means",{"_index":460,"title":{},"body":{"classes/AbstractTestPage.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{}}}],["meant",{"_index":3168,"title":{},"body":{"components/FormSubmitBarComponent.html":{}}}],["meet",{"_index":3888,"title":{},"body":{"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{}}}],["member",{"_index":4007,"title":{},"body":{"components/PhnComponent.html":{},"components/SinComponent.html":{}}}],["menu",{"_index":5394,"title":{},"body":{"additional-documentation/getting-started.html":{}}}],["merge",{"_index":2625,"title":{},"body":{"interfaces/FileUploaderMsg.html":{},"changelog.html":{}}}],["merge(merge(browsefilestream).pipe",{"_index":2843,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["message",{"_index":1587,"title":{},"body":{"interfaces/CommonLogMessage.html":{},"interfaces/ErrorMessage.html":{},"interfaces/ISpaEnvResponse.html":{},"classes/MoHCommonLibraryError.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"changelog.html":{},"coverage.html":{}}}],["message.interface",{"_index":168,"title":{},"body":{"classes/AbstractFormControl.html":{},"components/CityComponent.html":{},"interfaces/CountryList.html":{},"components/EmailComponent.html":{},"interfaces/IRadioItems.html":{},"components/PhnComponent.html":{},"components/PhoneNumberComponent.html":{},"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{},"components/RadioComponent.html":{},"components/SinComponent.html":{}}}],["message.interface.ts",{"_index":2602,"title":{},"body":{"interfaces/ErrorMessage.html":{},"coverage.html":{}}}],["message.interface.ts:13",{"_index":2603,"title":{},"body":{"interfaces/ErrorMessage.html":{}}}],["messages",{"_index":173,"title":{},"body":{"classes/AbstractFormControl.html":{},"interfaces/CommonAttachmentJson.html":{},"classes/CommonImage.html":{},"classes/CommonImageProcessingError.html":{},"interfaces/CommonImageScaleFactors.html":{},"classes/CommonImageScaleFactorsImpl.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"components/FullNameComponent.html":{},"interfaces/FullNameErrorMsg.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"components/SinComponent.html":{},"changelog.html":{}}}],["meta",{"_index":1592,"title":{},"body":{"interfaces/CommonLogMessage.html":{},"interfaces/FileUploaderMsg.html":{}}}],["metadata",{"_index":633,"title":{},"body":{"components/AccordionCommonComponent.html":{},"components/ButtonComponent.html":{},"components/ButtonGroupComponent.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"components/ConfirmTemplateComponent.html":{},"components/CoreBreadcrumbComponent.html":{},"directives/DateFieldFormatDirective.html":{},"components/DatepickerComponent.html":{},"components/DropdownComponent.html":{},"directives/DuplicateCheckDirective.html":{},"components/EmailComponent.html":{},"components/ErrorContainerComponent.html":{},"interfaces/FileUploaderMsg.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/FullNameComponent.html":{},"components/GeocoderInputComponent.html":{},"components/HeaderComponent.html":{},"components/NameComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"components/PhnComponent.html":{},"components/PhoneNumberComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"components/RadioComponent.html":{},"components/SampleModalComponent.html":{},"components/SinComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"directives/ValidateBcPostalDirective.html":{},"directives/ValidateCityDirective.html":{},"directives/ValidateNameDirective.html":{},"directives/ValidatePostalcodeDirective.html":{},"directives/ValidateRegionDirective.html":{},"directives/ValidateStreetDirective.html":{},"components/WizardProgressBarComponent.html":{},"components/XiconButtonComponent.html":{}}}],["method",{"_index":154,"title":{},"body":{"classes/AbstractFormControl.html":{},"classes/AbstractHttpService.html":{},"classes/Address.html":{},"components/CityComponent.html":{},"interfaces/CommonLogMessage.html":{},"components/EmailComponent.html":{},"interfaces/FileUploaderMsg.html":{},"interfaces/ISpaEnvResponse.html":{},"guards/LoadPageGuardService.html":{},"components/PhnComponent.html":{},"components/PhoneNumberComponent.html":{},"components/ProvinceComponent.html":{},"components/RadioComponent.html":{},"components/SinComponent.html":{},"changelog.html":{}}}],["methods",{"_index":13,"title":{},"body":{"classes/AbstractBaseForm.html":{},"classes/AbstractForm.html":{},"classes/AbstractFormControl.html":{},"classes/AbstractHttpService.html":{},"injectables/AbstractPageGuardService.html":{},"injectables/AbstractPgCheckService.html":{},"classes/AbstractReactForm.html":{},"classes/AbstractTestPage.html":{},"components/AccordionCommonComponent.html":{},"classes/Address.html":{},"components/ButtonComponent.html":{},"components/ButtonGroupComponent.html":{},"injectables/CaptchaDataService.html":{},"modules/CaptchaModule.html":{},"injectables/CheckCompleteBaseService.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"classes/CommonImage.html":{},"interfaces/CommonImageScaleFactors.html":{},"classes/CommonImageScaleFactorsImpl.html":{},"classes/Container.html":{},"components/CoreBreadcrumbComponent.html":{},"components/DatepickerComponent.html":{},"injectables/DefaultPageGuardService.html":{},"components/DropdownComponent.html":{},"directives/DuplicateCheckDirective.html":{},"components/EmailComponent.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/FullNameComponent.html":{},"components/GeocoderInputComponent.html":{},"injectables/GeocoderService.html":{},"components/HeaderComponent.html":{},"guards/LoadPageGuardService.html":{},"components/NameComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"injectables/PageStateService.html":{},"components/PasswordComponent.html":{},"classes/Person.html":{},"components/PhnComponent.html":{},"components/PhoneNumberComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"components/RadioComponent.html":{},"guards/RouteGuardService.html":{},"components/SampleModalComponent.html":{},"components/SinComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"directives/ValidateBcPostalDirective.html":{},"directives/ValidateCityDirective.html":{},"directives/ValidateNameDirective.html":{},"directives/ValidatePostalcodeDirective.html":{},"directives/ValidateRegionDirective.html":{},"directives/ValidateStreetDirective.html":{},"components/WizardProgressBarComponent.html":{},"components/XiconButtonComponent.html":{},"changelog.html":{},"additional-documentation/getting-started.html":{}}}],["mex",{"_index":2055,"title":{},"body":{"interfaces/CountryList.html":{}}}],["mexico",{"_index":2056,"title":{},"body":{"interfaces/CountryList.html":{}}}],["mhl",{"_index":2045,"title":{},"body":{"interfaces/CountryList.html":{}}}],["mib",{"_index":2989,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["micronesia",{"_index":2058,"title":{},"body":{"interfaces/CountryList.html":{}}}],["middle",{"_index":3189,"title":{},"body":{"components/FullNameComponent.html":{},"interfaces/FullNameErrorMsg.html":{},"components/PageFrameworkComponent.html":{},"classes/Person.html":{}}}],["middlename",{"_index":3197,"title":{},"body":{"components/FullNameComponent.html":{},"interfaces/FullNameErrorMsg.html":{},"classes/Person.html":{}}}],["middlenamelabel",{"_index":3203,"title":{},"body":{"components/FullNameComponent.html":{},"interfaces/FullNameErrorMsg.html":{}}}],["mime",{"_index":1501,"title":{},"body":{"interfaces/CommonAttachmentJson.html":{},"classes/CommonImage.html":{},"classes/CommonImageProcessingError.html":{},"interfaces/CommonImageScaleFactors.html":{},"classes/CommonImageScaleFactorsImpl.html":{},"interfaces/FileUploaderMsg.html":{}}}],["mini",{"_index":2354,"title":{},"body":{"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"miscellaneous/enumerations.html":{}}}],["minimal",{"_index":2422,"title":{},"body":{"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{}}}],["minimum",{"_index":3813,"title":{},"body":{"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{}}}],["ministry",{"_index":3550,"title":{},"body":{"interfaces/ISpaEnvResponse.html":{}}}],["minlen",{"_index":3832,"title":{},"body":{"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{}}}],["minlength",{"_index":3886,"title":{},"body":{"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{}}}],["minlenmsgseg1",{"_index":3825,"title":{},"body":{"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{}}}],["minlenmsgseg2",{"_index":3826,"title":{},"body":{"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{}}}],["minor",{"_index":556,"title":{},"body":{"classes/AbstractTestPage.html":{},"interfaces/CountryList.html":{},"changelog.html":{}}}],["miquelon",{"_index":2160,"title":{},"body":{"interfaces/CountryList.html":{}}}],["mirror",{"_index":559,"title":{},"body":{"classes/AbstractTestPage.html":{}}}],["miscellaneous",{"_index":5297,"title":{"miscellaneous/enumerations.html":{}},"body":{"miscellaneous/enumerations.html":{}}}],["missing",{"_index":5061,"title":{},"body":{"changelog.html":{}}}],["mistakes",{"_index":5321,"title":{},"body":{"index.html":{}}}],["mkd",{"_index":2029,"title":{},"body":{"interfaces/CountryList.html":{}}}],["mli",{"_index":2041,"title":{},"body":{"interfaces/CountryList.html":{}}}],["mlt",{"_index":2043,"title":{},"body":{"interfaces/CountryList.html":{}}}],["mmr",{"_index":2075,"title":{},"body":{"interfaces/CountryList.html":{}}}],["mne",{"_index":2067,"title":{},"body":{"interfaces/CountryList.html":{}}}],["mng",{"_index":2065,"title":{},"body":{"interfaces/CountryList.html":{}}}],["mnp",{"_index":2099,"title":{},"body":{"interfaces/CountryList.html":{}}}],["mobile",{"_index":4066,"title":{},"body":{"components/PhoneNumberComponent.html":{},"components/WizardProgressBarComponent.html":{},"changelog.html":{}}}],["mockups",{"_index":4762,"title":{},"body":{"changelog.html":{}}}],["mod",{"_index":4044,"title":{},"body":{"components/PhnComponent.html":{}}}],["modal",{"_index":468,"title":{},"body":{"classes/AbstractTestPage.html":{},"interfaces/ISpaEnvResponse.html":{},"interfaces/SampleImageInterface.html":{},"components/SampleModalComponent.html":{},"changelog.html":{}}}],["modal')).element(by.css('div[aria",{"_index":619,"title":{},"body":{"classes/AbstractTestPage.html":{}}}],["modal'},{'name",{"_index":673,"title":{},"body":{"components/AccordionCommonComponent.html":{},"components/ButtonComponent.html":{},"components/ButtonGroupComponent.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"components/ConfirmTemplateComponent.html":{},"components/CoreBreadcrumbComponent.html":{},"components/DatepickerComponent.html":{},"components/DropdownComponent.html":{},"components/EmailComponent.html":{},"components/ErrorContainerComponent.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/FullNameComponent.html":{},"components/GeocoderInputComponent.html":{},"components/HeaderComponent.html":{},"components/NameComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"components/PhnComponent.html":{},"components/PhoneNumberComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"components/RadioComponent.html":{},"components/SampleModalComponent.html":{},"components/SinComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{},"components/XiconButtonComponent.html":{}}}],["modal.component",{"_index":4302,"title":{},"body":{"modules/SharedCoreModule.html":{}}}],["modal.component.html",{"_index":1462,"title":{},"body":{"interfaces/CommonAttachmentJson.html":{},"classes/CommonImage.html":{},"classes/CommonImageProcessingError.html":{},"interfaces/CommonImageScaleFactors.html":{},"classes/CommonImageScaleFactorsImpl.html":{},"interfaces/ISpaEnvResponse.html":{},"interfaces/SampleImageInterface.html":{},"components/SampleModalComponent.html":{}}}],["modal.component.scss",{"_index":3575,"title":{},"body":{"interfaces/ISpaEnvResponse.html":{},"interfaces/SampleImageInterface.html":{},"components/SampleModalComponent.html":{}}}],["modal.component.ts",{"_index":3508,"title":{},"body":{"interfaces/ISpaEnvResponse.html":{},"interfaces/SampleImageInterface.html":{},"components/SampleModalComponent.html":{},"coverage.html":{}}}],["modal.component.ts:18",{"_index":4252,"title":{},"body":{"components/SampleModalComponent.html":{}}}],["modal.component.ts:19",{"_index":4251,"title":{},"body":{"components/SampleModalComponent.html":{}}}],["modal.component.ts:21",{"_index":4250,"title":{},"body":{"components/SampleModalComponent.html":{}}}],["modal.component.ts:27",{"_index":4254,"title":{},"body":{"components/SampleModalComponent.html":{}}}],["modal.component.ts:31",{"_index":4253,"title":{},"body":{"components/SampleModalComponent.html":{}}}],["modal/consent",{"_index":3507,"title":{},"body":{"interfaces/ISpaEnvResponse.html":{},"modules/SharedCoreModule.html":{},"coverage.html":{}}}],["modal/sample",{"_index":4243,"title":{},"body":{"interfaces/SampleImageInterface.html":{},"components/SampleModalComponent.html":{},"modules/SharedCoreModule.html":{},"coverage.html":{}}}],["modaldirective",{"_index":2620,"title":{},"body":{"interfaces/FileUploaderMsg.html":{},"interfaces/ISpaEnvResponse.html":{},"interfaces/SampleImageInterface.html":{},"components/SampleModalComponent.html":{},"components/ThumbnailComponent.html":{}}}],["modalmodule",{"_index":4276,"title":{},"body":{"modules/SharedCoreModule.html":{}}}],["modalmodule.forroot",{"_index":4345,"title":{},"body":{"modules/SharedCoreModule.html":{}}}],["model",{"_index":2365,"title":{},"body":{"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"components/DropdownComponent.html":{},"additional-documentation/getting-started.html":{}}}],["model/application",{"_index":2644,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["model/application.model",{"_index":2642,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["models",{"_index":4994,"title":{},"body":{"changelog.html":{},"additional-documentation/getting-started.html":{}}}],["models/abstract",{"_index":1447,"title":{},"body":{"components/CityComponent.html":{},"components/EmailComponent.html":{},"interfaces/IRadioItems.html":{},"components/PhnComponent.html":{},"components/PhoneNumberComponent.html":{},"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{},"components/RadioComponent.html":{},"components/SinComponent.html":{}}}],["models/address.model",{"_index":773,"title":{},"body":{"interfaces/AddrLabelList.html":{},"components/GeocoderInputComponent.html":{},"interfaces/Maxlengths.html":{},"interfaces/ReadOnlyFields.html":{}}}],["models/base",{"_index":769,"title":{},"body":{"interfaces/AddrLabelList.html":{},"components/CheckboxComponent.html":{},"components/ConfirmTemplateComponent.html":{},"interfaces/CountryList.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"components/DropdownComponent.html":{},"interfaces/FileUploaderMsg.html":{},"components/FullNameComponent.html":{},"interfaces/FullNameErrorMsg.html":{},"components/GeocoderInputComponent.html":{},"interfaces/Maxlengths.html":{},"components/NameComponent.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{},"interfaces/ReadOnlyFields.html":{},"interfaces/SampleImageInterface.html":{},"components/SampleModalComponent.html":{},"components/ToggleComponent.html":{}}}],["models/container",{"_index":4501,"title":{},"body":{"components/WizardProgressBarComponent.html":{}}}],["models/error",{"_index":1448,"title":{},"body":{"components/CityComponent.html":{},"interfaces/CountryList.html":{},"components/EmailComponent.html":{},"interfaces/IRadioItems.html":{},"components/PhnComponent.html":{},"components/PhoneNumberComponent.html":{},"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{},"components/RadioComponent.html":{},"components/SinComponent.html":{}}}],["models/images.model",{"_index":305,"title":{},"body":{"classes/AbstractHttpService.html":{},"interfaces/FileUploaderMsg.html":{},"components/ThumbnailComponent.html":{}}}],["models/mask.constants",{"_index":4012,"title":{},"body":{"components/PhnComponent.html":{},"components/PhoneNumberComponent.html":{},"components/PostalCodeComponent.html":{},"components/SinComponent.html":{}}}],["models/person.model",{"_index":3235,"title":{},"body":{"components/FullNameComponent.html":{},"interfaces/FullNameErrorMsg.html":{}}}],["modified",{"_index":4615,"title":{},"body":{"changelog.html":{}}}],["modify",{"_index":4728,"title":{},"body":{"changelog.html":{}}}],["modifyjson",{"_index":5237,"title":{},"body":{"coverage.html":{}}}],["module",{"_index":1169,"title":{"modules/CaptchaModule.html":{},"modules/SharedCoreModule.html":{}},"body":{"modules/CaptchaModule.html":{},"modules/SharedCoreModule.html":{},"changelog.html":{},"overview.html":{},"additional-documentation/getting-started.html":{}}}],["modules",{"_index":1171,"title":{"modules.html":{}},"body":{"modules/CaptchaModule.html":{},"modules/SharedCoreModule.html":{},"modules.html":{},"overview.html":{},"additional-documentation/local-development/schematics.html":{},"additional-documentation/local-development/components.html":{}}}],["modulewithproviders",{"_index":1183,"title":{},"body":{"modules/CaptchaModule.html":{}}}],["moh",{"_index":412,"title":{},"body":{"classes/AbstractTestPage.html":{},"modules/CaptchaModule.html":{},"changelog.html":{},"index.html":{},"todo.html":{},"additional-documentation/getting-started.html":{},"additional-documentation/local-development/schematics.html":{},"additional-documentation/local-development/components.html":{}}}],["mohcommmonlibraryerror",{"_index":4554,"title":{},"body":{"components/XiconButtonComponent.html":{}}}],["mohcommonlibraryerror",{"_index":3682,"title":{"classes/MoHCommonLibraryError.html":{}},"body":{"classes/MoHCommonLibraryError.html":{},"components/XiconButtonComponent.html":{},"coverage.html":{}}}],["mohcommonlibraryerror(msg",{"_index":4562,"title":{},"body":{"components/XiconButtonComponent.html":{}}}],["mohstart",{"_index":5258,"title":{},"body":{"coverage.html":{}}}],["moldova",{"_index":2062,"title":{},"body":{"interfaces/CountryList.html":{}}}],["molestiae",{"_index":1440,"title":{},"body":{"components/CityComponent.html":{},"interfaces/CountryList.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"interfaces/FileUploaderMsg.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{}}}],["molestias",{"_index":1399,"title":{},"body":{"components/CityComponent.html":{},"interfaces/CountryList.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"interfaces/FileUploaderMsg.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{}}}],["mollitia",{"_index":1397,"title":{},"body":{"components/CityComponent.html":{},"interfaces/CountryList.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"interfaces/FileUploaderMsg.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{}}}],["moment",{"_index":1053,"title":{},"body":{"classes/Base.html":{},"interfaces/CommonLogMessage.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"interfaces/FileUploaderMsg.html":{},"classes/Person.html":{},"coverage.html":{},"dependencies.html":{}}}],["moment().toisostring",{"_index":1662,"title":{},"body":{"interfaces/CommonLogMessage.html":{}}}],["moment_",{"_index":1560,"title":{},"body":{"interfaces/CommonLogMessage.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{}}}],["momentjs",{"_index":5469,"title":{},"body":{"additional-documentation/local-development/schematics.html":{}}}],["monaco",{"_index":2064,"title":{},"body":{"interfaces/CountryList.html":{}}}],["mongolia",{"_index":2066,"title":{},"body":{"interfaces/CountryList.html":{}}}],["montenegro",{"_index":2068,"title":{},"body":{"interfaces/CountryList.html":{}}}],["month",{"_index":2374,"title":{},"body":{"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"interfaces/SimpleDate.html":{},"changelog.html":{}}}],["montserrat",{"_index":2070,"title":{},"body":{"interfaces/CountryList.html":{}}}],["more",{"_index":353,"title":{},"body":{"injectables/AbstractPageGuardService.html":{},"injectables/AbstractPgCheckService.html":{},"classes/AbstractTestPage.html":{},"interfaces/FileUploaderMsg.html":{},"components/FormSubmitBarComponent.html":{},"interfaces/GeoAddressResult.html":{},"injectables/GeocoderService.html":{},"changelog.html":{},"index.html":{},"todo.html":{},"additional-documentation/local-development/components.html":{}}}],["morocco",{"_index":2072,"title":{},"body":{"interfaces/CountryList.html":{}}}],["mouse",{"_index":4866,"title":{},"body":{"changelog.html":{}}}],["move",{"_index":5087,"title":{},"body":{"changelog.html":{},"additional-documentation/local-development/schematics.html":{}}}],["moz",{"_index":2073,"title":{},"body":{"interfaces/CountryList.html":{}}}],["mozambique",{"_index":2074,"title":{},"body":{"interfaces/CountryList.html":{}}}],["mrt",{"_index":2049,"title":{},"body":{"interfaces/CountryList.html":{}}}],["msg",{"_index":1627,"title":{},"body":{"interfaces/CommonLogMessage.html":{},"components/XiconButtonComponent.html":{}}}],["msp",{"_index":824,"title":{},"body":{"interfaces/AddrLabelList.html":{},"interfaces/FileUploaderMsg.html":{},"interfaces/ISpaEnvResponse.html":{},"interfaces/Maxlengths.html":{},"interfaces/ReadOnlyFields.html":{},"changelog.html":{}}}],["msp/api/env",{"_index":3585,"title":{},"body":{"interfaces/ISpaEnvResponse.html":{}}}],["mspdataservice",{"_index":2634,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["msperror",{"_index":3110,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["msperrornum",{"_index":3109,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["mspimage",{"_index":2853,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["mspimage.attachmentorder",{"_index":2959,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["mspimage.contenttype",{"_index":2965,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["mspimage.error",{"_index":3106,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["mspimage.filecontent",{"_index":3008,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["mspimage.id",{"_index":3010,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["mspimage.name",{"_index":2953,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["mspimage.naturalheight",{"_index":2962,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["mspimage.naturalwidth",{"_index":2960,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["mspimage.size",{"_index":2977,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["mspimage.sizetxt",{"_index":3004,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["mspimage.sizeunit",{"_index":3001,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["mspimage.uuid",{"_index":3125,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["mspimagefile",{"_index":3108,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["mspimages",{"_index":2911,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["msplogservice",{"_index":2632,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["msr",{"_index":2069,"title":{},"body":{"interfaces/CountryList.html":{}}}],["mtq",{"_index":2047,"title":{},"body":{"interfaces/CountryList.html":{}}}],["multi",{"_index":1104,"title":{},"body":{"components/ButtonGroupComponent.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"directives/DuplicateCheckDirective.html":{},"components/FullNameComponent.html":{},"interfaces/FullNameErrorMsg.html":{},"interfaces/ISpaEnvResponse.html":{},"directives/ValidateBcPostalDirective.html":{},"directives/ValidateCityDirective.html":{},"directives/ValidateNameDirective.html":{},"directives/ValidatePostalcodeDirective.html":{},"directives/ValidateRegionDirective.html":{},"directives/ValidateStreetDirective.html":{},"changelog.html":{}}}],["multiple",{"_index":1566,"title":{},"body":{"interfaces/CommonLogMessage.html":{},"interfaces/IRadioItems.html":{},"components/RadioComponent.html":{},"changelog.html":{},"additional-documentation/local-development/schematics.html":{}}}],["multiples",{"_index":2985,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["multiply",{"_index":4036,"title":{},"body":{"components/PhnComponent.html":{}}}],["mus",{"_index":2051,"title":{},"body":{"interfaces/CountryList.html":{}}}],["mutually",{"_index":5305,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["mwi",{"_index":2035,"title":{},"body":{"interfaces/CountryList.html":{}}}],["myanmar",{"_index":2076,"title":{},"body":{"interfaces/CountryList.html":{}}}],["mydatepicker",{"_index":2325,"title":{},"body":{"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"modules/SharedCoreModule.html":{}}}],["myriadwebprottf_base64",{"_index":5241,"title":{},"body":{"coverage.html":{}}}],["mys",{"_index":2037,"title":{},"body":{"interfaces/CountryList.html":{}}}],["myt",{"_index":2053,"title":{},"body":{"interfaces/CountryList.html":{}}}],["n",{"_index":2741,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["nam",{"_index":2077,"title":{},"body":{"interfaces/CountryList.html":{}}}],["name",{"_index":26,"title":{},"body":{"classes/AbstractBaseForm.html":{},"classes/AbstractForm.html":{},"classes/AbstractFormControl.html":{},"classes/AbstractHttpService.html":{},"injectables/AbstractPageGuardService.html":{},"injectables/AbstractPgCheckService.html":{},"classes/AbstractReactForm.html":{},"classes/AbstractTestPage.html":{},"components/AccordionCommonComponent.html":{},"interfaces/AddrLabelList.html":{},"classes/Address.html":{},"components/ButtonComponent.html":{},"components/ButtonGroupComponent.html":{},"injectables/CaptchaDataService.html":{},"injectables/CheckCompleteBaseService.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"interfaces/CommonAttachmentJson.html":{},"classes/CommonImage.html":{},"classes/CommonImageProcessingError.html":{},"interfaces/CommonImageScaleFactors.html":{},"classes/CommonImageScaleFactorsImpl.html":{},"interfaces/CommonLogMessage.html":{},"components/ConfirmTemplateComponent.html":{},"classes/Container.html":{},"components/CoreBreadcrumbComponent.html":{},"components/DatepickerComponent.html":{},"injectables/DefaultPageGuardService.html":{},"components/DropdownComponent.html":{},"directives/DuplicateCheckDirective.html":{},"components/EmailComponent.html":{},"components/ErrorContainerComponent.html":{},"interfaces/FileUploaderMsg.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/FullNameComponent.html":{},"interfaces/FullNameErrorMsg.html":{},"interfaces/GeoAddressResult.html":{},"components/GeocoderInputComponent.html":{},"injectables/GeocoderService.html":{},"components/HeaderComponent.html":{},"guards/LoadPageGuardService.html":{},"interfaces/Maxlengths.html":{},"classes/MoHCommonLibraryError.html":{},"components/NameComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"injectables/PageStateService.html":{},"components/PasswordComponent.html":{},"classes/Person.html":{},"components/PhnComponent.html":{},"components/PhoneNumberComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"components/RadioComponent.html":{},"interfaces/ReadOnlyFields.html":{},"guards/RouteGuardService.html":{},"components/SampleModalComponent.html":{},"components/SinComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"directives/ValidateBcPostalDirective.html":{},"directives/ValidateCityDirective.html":{},"directives/ValidateNameDirective.html":{},"directives/ValidatePostalcodeDirective.html":{},"directives/ValidateRegionDirective.html":{},"directives/ValidateStreetDirective.html":{},"components/WizardProgressBarComponent.html":{},"components/XiconButtonComponent.html":{},"changelog.html":{},"additional-documentation/local-development/schematics.html":{},"additional-documentation/local-development/components.html":{}}}],["name'},{'name",{"_index":695,"title":{},"body":{"components/AccordionCommonComponent.html":{},"components/ButtonComponent.html":{},"components/ButtonGroupComponent.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"components/ConfirmTemplateComponent.html":{},"components/CoreBreadcrumbComponent.html":{},"components/DatepickerComponent.html":{},"components/DropdownComponent.html":{},"components/EmailComponent.html":{},"components/ErrorContainerComponent.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/FullNameComponent.html":{},"components/GeocoderInputComponent.html":{},"components/HeaderComponent.html":{},"components/NameComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"components/PhnComponent.html":{},"components/PhoneNumberComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"components/RadioComponent.html":{},"components/SampleModalComponent.html":{},"components/SinComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{},"components/XiconButtonComponent.html":{}}}],["name.component",{"_index":4315,"title":{},"body":{"modules/SharedCoreModule.html":{}}}],["name.component.html",{"_index":3193,"title":{},"body":{"components/FullNameComponent.html":{},"interfaces/FullNameErrorMsg.html":{},"components/NameComponent.html":{}}}],["name.component.scss",{"_index":3192,"title":{},"body":{"components/FullNameComponent.html":{},"interfaces/FullNameErrorMsg.html":{},"components/NameComponent.html":{}}}],["name.component.ts",{"_index":3188,"title":{},"body":{"components/FullNameComponent.html":{},"interfaces/FullNameErrorMsg.html":{},"coverage.html":{}}}],["name.component.ts:113",{"_index":3214,"title":{},"body":{"components/FullNameComponent.html":{}}}],["name.component.ts:117",{"_index":3215,"title":{},"body":{"components/FullNameComponent.html":{}}}],["name.component.ts:121",{"_index":3216,"title":{},"body":{"components/FullNameComponent.html":{}}}],["name.component.ts:36",{"_index":3210,"title":{},"body":{"components/FullNameComponent.html":{}}}],["name.component.ts:37",{"_index":3212,"title":{},"body":{"components/FullNameComponent.html":{}}}],["name.component.ts:38",{"_index":3211,"title":{},"body":{"components/FullNameComponent.html":{}}}],["name.component.ts:39",{"_index":3207,"title":{},"body":{"components/FullNameComponent.html":{}}}],["name.component.ts:40",{"_index":3209,"title":{},"body":{"components/FullNameComponent.html":{}}}],["name.component.ts:41",{"_index":3208,"title":{},"body":{"components/FullNameComponent.html":{}}}],["name.component.ts:42",{"_index":3206,"title":{},"body":{"components/FullNameComponent.html":{}}}],["name.component.ts:45",{"_index":3220,"title":{},"body":{"components/FullNameComponent.html":{}}}],["name.component.ts:46",{"_index":3222,"title":{},"body":{"components/FullNameComponent.html":{}}}],["name.component.ts:47",{"_index":3221,"title":{},"body":{"components/FullNameComponent.html":{}}}],["name.component.ts:49",{"_index":3225,"title":{},"body":{"components/FullNameComponent.html":{}}}],["name.component.ts:51",{"_index":3219,"title":{},"body":{"components/FullNameComponent.html":{}}}],["name.component.ts:53",{"_index":3234,"title":{},"body":{"components/FullNameComponent.html":{}}}],["name.component.ts:54",{"_index":3233,"title":{},"body":{"components/FullNameComponent.html":{}}}],["name.component.ts:56",{"_index":3217,"title":{},"body":{"components/FullNameComponent.html":{}}}],["name.component.ts:57",{"_index":3205,"title":{},"body":{"components/FullNameComponent.html":{}}}],["name.component.ts:63",{"_index":3213,"title":{},"body":{"components/FullNameComponent.html":{}}}],["name.directive",{"_index":4311,"title":{},"body":{"modules/SharedCoreModule.html":{}}}],["name.directive.ts",{"_index":4440,"title":{},"body":{"directives/ValidateNameDirective.html":{},"coverage.html":{}}}],["name.directive.ts:26",{"_index":4442,"title":{},"body":{"directives/ValidateNameDirective.html":{}}}],["name/full",{"_index":3187,"title":{},"body":{"components/FullNameComponent.html":{},"interfaces/FullNameErrorMsg.html":{},"modules/SharedCoreModule.html":{},"coverage.html":{}}}],["name=\"${refnameval}\"]`)).click",{"_index":614,"title":{},"body":{"classes/AbstractTestPage.html":{}}}],["name=schematic",{"_index":5443,"title":{},"body":{"additional-documentation/local-development/schematics.html":{}}}],["name@domain.com",{"_index":2580,"title":{},"body":{"components/EmailComponent.html":{}}}],["name^=\"${refnameval",{"_index":626,"title":{},"body":{"classes/AbstractTestPage.html":{}}}],["name^=\"${refnameval}\"]`)).first().sendkeys(text",{"_index":623,"title":{},"body":{"classes/AbstractTestPage.html":{}}}],["name^=\"${refnameval}\"]`)).sendkeys(text",{"_index":611,"title":{},"body":{"classes/AbstractTestPage.html":{}}}],["name_",{"_index":3700,"title":{},"body":{"components/NameComponent.html":{}}}],["namecomponent",{"_index":418,"title":{"components/NameComponent.html":{}},"body":{"classes/AbstractTestPage.html":{},"components/AccordionCommonComponent.html":{},"components/ButtonComponent.html":{},"components/ButtonGroupComponent.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"components/ConfirmTemplateComponent.html":{},"components/CoreBreadcrumbComponent.html":{},"components/DatepickerComponent.html":{},"components/DropdownComponent.html":{},"components/EmailComponent.html":{},"components/ErrorContainerComponent.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/FullNameComponent.html":{},"interfaces/FullNameErrorMsg.html":{},"components/GeocoderInputComponent.html":{},"components/HeaderComponent.html":{},"components/NameComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"components/PhnComponent.html":{},"components/PhoneNumberComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"components/RadioComponent.html":{},"components/SampleModalComponent.html":{},"modules/SharedCoreModule.html":{},"components/SinComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{},"components/XiconButtonComponent.html":{},"coverage.html":{},"overview.html":{}}}],["nameregex",{"_index":3198,"title":{},"body":{"components/FullNameComponent.html":{},"interfaces/FullNameErrorMsg.html":{}}}],["names",{"_index":2956,"title":{},"body":{"interfaces/FileUploaderMsg.html":{},"classes/Person.html":{},"directives/ValidateCityDirective.html":{},"directives/ValidateRegionDirective.html":{}}}],["names.length",{"_index":3976,"title":{},"body":{"classes/Person.html":{}}}],["names[0",{"_index":3975,"title":{},"body":{"classes/Person.html":{}}}],["names[1",{"_index":3977,"title":{},"body":{"classes/Person.html":{}}}],["names[2",{"_index":3978,"title":{},"body":{"classes/Person.html":{}}}],["namestr",{"_index":3695,"title":{},"body":{"components/NameComponent.html":{}}}],["namibia",{"_index":2078,"title":{},"body":{"interfaces/CountryList.html":{}}}],["naming",{"_index":5373,"title":{},"body":{"todo.html":{}}}],["napprox",{"_index":2996,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["napprox.tofixed(0",{"_index":3000,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["napprox.tofixed(3",{"_index":2998,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["native",{"_index":1006,"title":{},"body":{"classes/Address.html":{},"components/WizardProgressBarComponent.html":{}}}],["natural",{"_index":2769,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["naturalheight",{"_index":1509,"title":{},"body":{"interfaces/CommonAttachmentJson.html":{},"classes/CommonImage.html":{},"classes/CommonImageProcessingError.html":{},"interfaces/CommonImageScaleFactors.html":{},"classes/CommonImageScaleFactorsImpl.html":{}}}],["naturalwidth",{"_index":1510,"title":{},"body":{"interfaces/CommonAttachmentJson.html":{},"classes/CommonImage.html":{},"classes/CommonImageProcessingError.html":{},"interfaces/CommonImageScaleFactors.html":{},"classes/CommonImageScaleFactorsImpl.html":{}}}],["natus",{"_index":1387,"title":{},"body":{"components/CityComponent.html":{},"interfaces/CountryList.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"interfaces/FileUploaderMsg.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{}}}],["nauru",{"_index":2080,"title":{},"body":{"interfaces/CountryList.html":{}}}],["navigate",{"_index":18,"title":{},"body":{"classes/AbstractBaseForm.html":{},"classes/AbstractForm.html":{},"classes/AbstractReactForm.html":{},"classes/AbstractTestPage.html":{},"changelog.html":{},"additional-documentation/local-development/components.html":{}}}],["navigate(url",{"_index":59,"title":{},"body":{"classes/AbstractBaseForm.html":{},"classes/AbstractForm.html":{},"classes/AbstractReactForm.html":{}}}],["navigates",{"_index":64,"title":{},"body":{"classes/AbstractBaseForm.html":{},"classes/AbstractForm.html":{},"classes/AbstractReactForm.html":{}}}],["navigateto",{"_index":432,"title":{},"body":{"classes/AbstractTestPage.html":{}}}],["navigating",{"_index":55,"title":{},"body":{"classes/AbstractBaseForm.html":{},"classes/AbstractForm.html":{},"classes/AbstractReactForm.html":{}}}],["navigation",{"_index":1563,"title":{},"body":{"interfaces/CommonLogMessage.html":{},"miscellaneous/enumerations.html":{}}}],["navigationend",{"_index":3463,"title":{},"body":{"components/HeaderComponent.html":{},"components/WizardProgressBarComponent.html":{}}}],["nb",{"_index":4186,"title":{},"body":{"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{}}}],["nbytes",{"_index":2981,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["ncl",{"_index":2085,"title":{},"body":{"interfaces/CountryList.html":{}}}],["nec",{"_index":2558,"title":{},"body":{"components/EmailComponent.html":{},"components/NameComponent.html":{}}}],["necessary",{"_index":448,"title":{},"body":{"classes/AbstractTestPage.html":{},"interfaces/FileUploaderMsg.html":{},"interfaces/ISpaEnvResponse.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"changelog.html":{},"additional-documentation/local-development/schematics.html":{},"additional-documentation/local-development/components.html":{}}}],["need",{"_index":282,"title":{},"body":{"classes/AbstractHttpService.html":{},"classes/AbstractTestPage.html":{},"interfaces/AddrLabelList.html":{},"classes/Address.html":{},"components/ButtonGroupComponent.html":{},"injectables/CheckCompleteBaseService.html":{},"interfaces/CommonLogMessage.html":{},"components/CoreBreadcrumbComponent.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"directives/DuplicateCheckDirective.html":{},"components/EmailComponent.html":{},"interfaces/FileUploaderMsg.html":{},"components/FormSubmitBarComponent.html":{},"components/FullNameComponent.html":{},"interfaces/FullNameErrorMsg.html":{},"components/GeocoderInputComponent.html":{},"injectables/GeocoderService.html":{},"interfaces/Maxlengths.html":{},"components/NameComponent.html":{},"interfaces/PageListInterface.html":{},"components/PageSectionComponent.html":{},"interfaces/ReadOnlyFields.html":{},"todo.html":{},"additional-documentation/getting-started.html":{},"additional-documentation/local-development/schematics.html":{}}}],["needed",{"_index":1502,"title":{},"body":{"interfaces/CommonAttachmentJson.html":{},"classes/CommonImage.html":{},"classes/CommonImageProcessingError.html":{},"interfaces/CommonImageScaleFactors.html":{},"classes/CommonImageScaleFactorsImpl.html":{}}}],["negative",{"_index":3177,"title":{},"body":{"components/FormSubmitBarComponent.html":{}}}],["nemo",{"_index":1409,"title":{},"body":{"components/CityComponent.html":{},"interfaces/CountryList.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"interfaces/FileUploaderMsg.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{}}}],["nepal",{"_index":2082,"title":{},"body":{"interfaces/CountryList.html":{}}}],["ner",{"_index":2091,"title":{},"body":{"interfaces/CountryList.html":{}}}],["nesciunt",{"_index":1446,"title":{},"body":{"components/CityComponent.html":{},"interfaces/CountryList.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"interfaces/FileUploaderMsg.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{}}}],["nested",{"_index":3175,"title":{},"body":{"components/FormSubmitBarComponent.html":{},"additional-documentation/local-development/schematics.html":{}}}],["nesting",{"_index":1598,"title":{},"body":{"interfaces/CommonLogMessage.html":{}}}],["netherlands",{"_index":2084,"title":{},"body":{"interfaces/CountryList.html":{}}}],["network",{"_index":1607,"title":{},"body":{"interfaces/CommonLogMessage.html":{},"interfaces/GeoAddressResult.html":{},"components/GeocoderInputComponent.html":{},"injectables/GeocoderService.html":{},"interfaces/ISpaEnvResponse.html":{}}}],["never",{"_index":1637,"title":{},"body":{"interfaces/CommonLogMessage.html":{},"interfaces/FileUploaderMsg.html":{},"todo.html":{},"additional-documentation/getting-started.html":{}}}],["nevis",{"_index":2152,"title":{},"body":{"interfaces/CountryList.html":{}}}],["new",{"_index":807,"title":{},"body":{"interfaces/AddrLabelList.html":{},"classes/Address.html":{},"components/ButtonComponent.html":{},"components/ButtonGroupComponent.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"interfaces/CommonAttachmentJson.html":{},"classes/CommonImage.html":{},"classes/CommonImageProcessingError.html":{},"interfaces/CommonImageScaleFactors.html":{},"classes/CommonImageScaleFactorsImpl.html":{},"interfaces/CommonLogMessage.html":{},"interfaces/CountryList.html":{},"interfaces/DateErrorMsg.html":{},"directives/DateFieldFormatDirective.html":{},"components/DatepickerComponent.html":{},"components/EmailComponent.html":{},"interfaces/ErrorMessage.html":{},"interfaces/FileUploaderMsg.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/FullNameComponent.html":{},"interfaces/FullNameErrorMsg.html":{},"interfaces/GeoAddressResult.html":{},"components/GeocoderInputComponent.html":{},"injectables/GeocoderService.html":{},"interfaces/IRadioItems.html":{},"interfaces/ISpaEnvResponse.html":{},"interfaces/Maxlengths.html":{},"components/NameComponent.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"components/PhnComponent.html":{},"components/PhoneNumberComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{},"components/RadioComponent.html":{},"interfaces/ReadOnlyFields.html":{},"components/SinComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/XiconButtonComponent.html":{},"changelog.html":{},"coverage.html":{},"additional-documentation/getting-started.html":{},"additional-documentation/local-development/schematics.html":{},"additional-documentation/local-development/components.html":{}}}],["new.target.prototype",{"_index":3692,"title":{},"body":{"classes/MoHCommonLibraryError.html":{}}}],["newfoundland",{"_index":4189,"title":{},"body":{"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{}}}],["newurl",{"_index":1585,"title":{},"body":{"interfaces/CommonLogMessage.html":{}}}],["next",{"_index":445,"title":{},"body":{"classes/AbstractTestPage.html":{},"interfaces/AddrLabelList.html":{},"injectables/CheckCompleteBaseService.html":{},"interfaces/FileUploaderMsg.html":{},"interfaces/ISpaEnvResponse.html":{},"guards/LoadPageGuardService.html":{},"interfaces/Maxlengths.html":{},"interfaces/PageListInterface.html":{},"interfaces/ReadOnlyFields.html":{},"guards/RouteGuardService.html":{}}}],["nextpagenumber",{"_index":2936,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["nfk",{"_index":2097,"title":{},"body":{"interfaces/CountryList.html":{}}}],["ng",{"_index":481,"title":{},"body":{"classes/AbstractTestPage.html":{},"components/PageSectionComponent.html":{},"modules/SharedCoreModule.html":{},"changelog.html":{},"dependencies.html":{},"additional-documentation/local-development/schematics.html":{},"additional-documentation/local-development/components.html":{}}}],["ng_validators",{"_index":2538,"title":{},"body":{"directives/DuplicateCheckDirective.html":{},"directives/ValidateBcPostalDirective.html":{},"directives/ValidateCityDirective.html":{},"directives/ValidateNameDirective.html":{},"directives/ValidatePostalcodeDirective.html":{},"directives/ValidateRegionDirective.html":{},"directives/ValidateStreetDirective.html":{}}}],["ng_value_accessor",{"_index":768,"title":{},"body":{"interfaces/AddrLabelList.html":{},"components/ButtonComponent.html":{},"components/ButtonGroupComponent.html":{},"components/CheckboxComponent.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"components/DropdownComponent.html":{},"components/FullNameComponent.html":{},"interfaces/FullNameErrorMsg.html":{},"interfaces/ISpaEnvResponse.html":{},"interfaces/Maxlengths.html":{},"interfaces/ReadOnlyFields.html":{},"changelog.html":{}}}],["nga",{"_index":2093,"title":{},"body":{"interfaces/CountryList.html":{}}}],["ngaftercontentinit",{"_index":2892,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["ngafterviewinit",{"_index":3247,"title":{},"body":{"components/FullNameComponent.html":{},"interfaces/FullNameErrorMsg.html":{}}}],["ngchanges",{"_index":4664,"title":{},"body":{"changelog.html":{}}}],["ngcontent",{"_index":3590,"title":{},"body":{"interfaces/ISpaEnvResponse.html":{}}}],["ngcontrol",{"_index":148,"title":{},"body":{"classes/AbstractFormControl.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"interfaces/CountryList.html":{},"components/DropdownComponent.html":{},"components/EmailComponent.html":{},"components/GeocoderInputComponent.html":{},"interfaces/IRadioItems.html":{},"components/NameComponent.html":{},"components/PhnComponent.html":{},"components/PhoneNumberComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{},"components/RadioComponent.html":{},"components/SinComponent.html":{},"changelog.html":{},"todo.html":{}}}],["ngcontrol.control.setvalidators(allvalidators",{"_index":220,"title":{},"body":{"classes/AbstractFormControl.html":{}}}],["ngcontrol.control.updatevalueandvalidity",{"_index":221,"title":{},"body":{"classes/AbstractFormControl.html":{}}}],["ngcontrol.control.validator",{"_index":218,"title":{},"body":{"classes/AbstractFormControl.html":{}}}],["ngform",{"_index":74,"title":{},"body":{"classes/AbstractBaseForm.html":{},"classes/AbstractForm.html":{},"interfaces/AddrLabelList.html":{},"components/ButtonComponent.html":{},"components/ButtonGroupComponent.html":{},"components/CheckboxComponent.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"interfaces/FileUploaderMsg.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/FullNameComponent.html":{},"interfaces/FullNameErrorMsg.html":{},"interfaces/ISpaEnvResponse.html":{},"interfaces/Maxlengths.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"components/PhoneNumberComponent.html":{},"interfaces/ReadOnlyFields.html":{},"modules/SharedCoreModule.html":{},"additional-documentation/local-development/schematics.html":{}}}],["ngforms",{"_index":5456,"title":{},"body":{"additional-documentation/local-development/schematics.html":{}}}],["ngmodel",{"_index":1292,"title":{},"body":{"components/CheckboxComponent.html":{},"components/EmailComponent.html":{},"components/NameComponent.html":{},"changelog.html":{}}}],["ngmodelchange",{"_index":2441,"title":{},"body":{"directives/DateFieldFormatDirective.html":{}}}],["ngmodule",{"_index":345,"title":{},"body":{"injectables/AbstractPageGuardService.html":{},"injectables/AbstractPgCheckService.html":{},"interfaces/AddrLabelList.html":{},"modules/CaptchaModule.html":{},"guards/LoadPageGuardService.html":{},"interfaces/Maxlengths.html":{},"interfaces/ReadOnlyFields.html":{},"guards/RouteGuardService.html":{},"modules/SharedCoreModule.html":{},"index.html":{},"additional-documentation/getting-started.html":{}}}],["ngmodules",{"_index":3659,"title":{},"body":{"guards/LoadPageGuardService.html":{},"guards/RouteGuardService.html":{}}}],["ngonchanges",{"_index":2465,"title":{},"body":{"components/DatepickerComponent.html":{},"components/GeocoderInputComponent.html":{},"components/PasswordComponent.html":{},"changelog.html":{}}}],["ngonchanges(changes",{"_index":880,"title":{},"body":{"interfaces/AddrLabelList.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"interfaces/FileUploaderMsg.html":{},"components/GeocoderInputComponent.html":{},"interfaces/Maxlengths.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"interfaces/ReadOnlyFields.html":{}}}],["ngondestroy",{"_index":4477,"title":{},"body":{"components/WizardProgressBarComponent.html":{}}}],["ngoninit",{"_index":122,"title":{},"body":{"classes/AbstractFormControl.html":{},"components/AccordionCommonComponent.html":{},"interfaces/AddrLabelList.html":{},"components/ButtonComponent.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"components/CoreBreadcrumbComponent.html":{},"interfaces/CountryList.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"components/EmailComponent.html":{},"interfaces/FileUploaderMsg.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/FullNameComponent.html":{},"interfaces/FullNameErrorMsg.html":{},"components/GeocoderInputComponent.html":{},"components/HeaderComponent.html":{},"interfaces/IRadioItems.html":{},"interfaces/ISpaEnvResponse.html":{},"guards/LoadPageGuardService.html":{},"interfaces/Maxlengths.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"components/PhnComponent.html":{},"components/PhoneNumberComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{},"components/RadioComponent.html":{},"interfaces/ReadOnlyFields.html":{},"guards/RouteGuardService.html":{},"components/SinComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{},"components/XiconButtonComponent.html":{}}}],["ngselect",{"_index":571,"title":{},"body":{"classes/AbstractTestPage.html":{}}}],["ngselectmodule",{"_index":4290,"title":{},"body":{"modules/SharedCoreModule.html":{}}}],["ngsubmit",{"_index":3169,"title":{},"body":{"components/FormSubmitBarComponent.html":{}}}],["ngx",{"_index":650,"title":{},"body":{"components/AccordionCommonComponent.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"interfaces/FileUploaderMsg.html":{},"components/GeocoderInputComponent.html":{},"interfaces/ISpaEnvResponse.html":{},"interfaces/SampleImageInterface.html":{},"components/SampleModalComponent.html":{},"modules/SharedCoreModule.html":{},"components/ThumbnailComponent.html":{},"components/WizardProgressBarComponent.html":{},"dependencies.html":{}}}],["ngxdp",{"_index":2368,"title":{},"body":{"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{}}}],["ngxmydatepickerdirective",{"_index":2324,"title":{},"body":{"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{}}}],["ngxmydatepickermodule",{"_index":4281,"title":{},"body":{"modules/SharedCoreModule.html":{}}}],["ngxmydatepickermodule.forroot",{"_index":4344,"title":{},"body":{"modules/SharedCoreModule.html":{}}}],["ngzone",{"_index":2617,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["nic",{"_index":2089,"title":{},"body":{"interfaces/CountryList.html":{}}}],["nicaragua",{"_index":2090,"title":{},"body":{"interfaces/CountryList.html":{}}}],["niger",{"_index":2092,"title":{},"body":{"interfaces/CountryList.html":{}}}],["nigeria",{"_index":2094,"title":{},"body":{"interfaces/CountryList.html":{}}}],["nisi",{"_index":1394,"title":{},"body":{"components/CityComponent.html":{},"interfaces/CountryList.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"interfaces/FileUploaderMsg.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{}}}],["niu",{"_index":2095,"title":{},"body":{"interfaces/CountryList.html":{}}}],["niue",{"_index":2096,"title":{},"body":{"interfaces/CountryList.html":{}}}],["nl",{"_index":4188,"title":{},"body":{"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{}}}],["nld",{"_index":2083,"title":{},"body":{"interfaces/CountryList.html":{}}}],["nmultiple",{"_index":2995,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["nobis",{"_index":1423,"title":{},"body":{"components/CityComponent.html":{},"interfaces/CountryList.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"interfaces/FileUploaderMsg.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{}}}],["node",{"_index":5314,"title":{},"body":{"index.html":{}}}],["node_modules",{"_index":5477,"title":{},"body":{"additional-documentation/local-development/components.html":{}}}],["node_modules/@types",{"_index":5451,"title":{},"body":{"additional-documentation/local-development/schematics.html":{}}}],["nofuturedatesallowed",{"_index":2314,"title":{},"body":{"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{}}}],["noidimage",{"_index":2669,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["non",{"_index":1391,"title":{},"body":{"components/CityComponent.html":{},"interfaces/CountryList.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"interfaces/FileUploaderMsg.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{},"additional-documentation/getting-started.html":{}}}],["nonce",{"_index":1148,"title":{},"body":{"injectables/CaptchaDataService.html":{},"modules/CaptchaModule.html":{},"injectables/ServerPayload.html":{}}}],["none",{"_index":2356,"title":{},"body":{"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"interfaces/ISpaEnvResponse.html":{}}}],["nonvdi",{"_index":5366,"title":{},"body":{"todo.html":{}}}],["nopastdatesallowed",{"_index":2320,"title":{},"body":{"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{}}}],["norfolk",{"_index":2098,"title":{},"body":{"interfaces/CountryList.html":{}}}],["northern",{"_index":2100,"title":{},"body":{"interfaces/CountryList.html":{}}}],["northwest",{"_index":4203,"title":{},"body":{"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{}}}],["norway",{"_index":2102,"title":{},"body":{"interfaces/CountryList.html":{}}}],["nostrum",{"_index":1433,"title":{},"body":{"components/CityComponent.html":{},"interfaces/CountryList.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"interfaces/FileUploaderMsg.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{}}}],["note",{"_index":284,"title":{},"body":{"classes/AbstractHttpService.html":{},"classes/AbstractTestPage.html":{},"interfaces/AddrLabelList.html":{},"interfaces/CommonAttachmentJson.html":{},"classes/CommonImage.html":{},"classes/CommonImageProcessingError.html":{},"interfaces/CommonImageScaleFactors.html":{},"classes/CommonImageScaleFactorsImpl.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"interfaces/FileUploaderMsg.html":{},"components/FullNameComponent.html":{},"interfaces/FullNameErrorMsg.html":{},"components/GeocoderInputComponent.html":{},"injectables/GeocoderService.html":{},"interfaces/Maxlengths.html":{},"components/PageFrameworkComponent.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"classes/Person.html":{},"interfaces/ReadOnlyFields.html":{},"components/WizardProgressBarComponent.html":{},"additional-documentation/getting-started.html":{}}}],["notes",{"_index":4609,"title":{},"body":{"changelog.html":{}}}],["nothing",{"_index":3383,"title":{},"body":{"components/GeocoderInputComponent.html":{}}}],["notice",{"_index":463,"title":{},"body":{"classes/AbstractTestPage.html":{},"interfaces/ISpaEnvResponse.html":{}}}],["notify",{"_index":2780,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["notips",{"_index":3780,"title":{},"body":{"components/PageSectionComponent.html":{}}}],["nova",{"_index":4192,"title":{},"body":{"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{}}}],["now",{"_index":553,"title":{},"body":{"classes/AbstractTestPage.html":{},"components/GeocoderInputComponent.html":{},"changelog.html":{},"additional-documentation/local-development/components.html":{}}}],["npl",{"_index":2081,"title":{},"body":{"interfaces/CountryList.html":{}}}],["npm",{"_index":1050,"title":{},"body":{"classes/Base.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"classes/Person.html":{},"components/WizardProgressBarComponent.html":{},"changelog.html":{},"index.html":{},"additional-documentation/local-development/schematics.html":{},"additional-documentation/local-development/components.html":{}}}],["nprstv",{"_index":993,"title":{},"body":{"classes/Address.html":{},"directives/ValidateBcPostalDirective.html":{},"directives/ValidatePostalcodeDirective.html":{}}}],["nru",{"_index":2079,"title":{},"body":{"interfaces/CountryList.html":{}}}],["ns",{"_index":4191,"title":{},"body":{"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{}}}],["nt",{"_index":4202,"title":{},"body":{"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{}}}],["nu",{"_index":4204,"title":{},"body":{"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{}}}],["null",{"_index":391,"title":{},"body":{"classes/AbstractReactForm.html":{},"interfaces/AddrLabelList.html":{},"interfaces/CommonLogMessage.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"directives/DuplicateCheckDirective.html":{},"components/EmailComponent.html":{},"components/GeocoderInputComponent.html":{},"interfaces/ISpaEnvResponse.html":{},"interfaces/Maxlengths.html":{},"interfaces/PageList.html":{},"injectables/PageStateService.html":{},"classes/Person.html":{},"components/PhnComponent.html":{},"components/PhoneNumberComponent.html":{},"interfaces/ReadOnlyFields.html":{},"components/SinComponent.html":{},"directives/ValidateBcPostalDirective.html":{},"directives/ValidateCityDirective.html":{},"directives/ValidateNameDirective.html":{},"directives/ValidatePostalcodeDirective.html":{},"directives/ValidateRegionDirective.html":{},"directives/ValidateStreetDirective.html":{},"changelog.html":{}}}],["null/undefined",{"_index":899,"title":{},"body":{"interfaces/AddrLabelList.html":{},"interfaces/Maxlengths.html":{},"interfaces/ReadOnlyFields.html":{}}}],["nulls",{"_index":3968,"title":{},"body":{"classes/Person.html":{}}}],["num",{"_index":4039,"title":{},"body":{"components/PhnComponent.html":{}}}],["number",{"_index":494,"title":{},"body":{"classes/AbstractTestPage.html":{},"interfaces/AddrLabelList.html":{},"injectables/CheckCompleteBaseService.html":{},"interfaces/CommonAttachmentJson.html":{},"classes/CommonImage.html":{},"classes/CommonImageProcessingError.html":{},"interfaces/CommonImageScaleFactors.html":{},"classes/CommonImageScaleFactorsImpl.html":{},"directives/DateFieldFormatDirective.html":{},"interfaces/FileUploaderMsg.html":{},"interfaces/IRadioItems.html":{},"interfaces/Maxlengths.html":{},"components/NameComponent.html":{},"interfaces/PageList.html":{},"interfaces/PageListInterface.html":{},"injectables/PageStateService.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"classes/Person.html":{},"components/PhnComponent.html":{},"components/PhoneNumberComponent.html":{},"components/PostalCodeComponent.html":{},"components/RadioComponent.html":{},"interfaces/ReadOnlyFields.html":{},"interfaces/SimpleDate.html":{},"components/SinComponent.html":{},"components/ThumbnailComponent.html":{},"components/WizardProgressBarComponent.html":{},"changelog.html":{},"coverage.html":{}}}],["number'},{'name",{"_index":711,"title":{},"body":{"components/AccordionCommonComponent.html":{},"components/ButtonComponent.html":{},"components/ButtonGroupComponent.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"components/ConfirmTemplateComponent.html":{},"components/CoreBreadcrumbComponent.html":{},"components/DatepickerComponent.html":{},"components/DropdownComponent.html":{},"components/EmailComponent.html":{},"components/ErrorContainerComponent.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/FullNameComponent.html":{},"components/GeocoderInputComponent.html":{},"components/HeaderComponent.html":{},"components/NameComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"components/PhnComponent.html":{},"components/PhoneNumberComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"components/RadioComponent.html":{},"components/SampleModalComponent.html":{},"components/SinComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{},"components/XiconButtonComponent.html":{}}}],["number(this.phn.substring(9",{"_index":4050,"title":{},"body":{"components/PhnComponent.html":{}}}],["number.component",{"_index":4305,"title":{},"body":{"modules/SharedCoreModule.html":{}}}],["number.component.html",{"_index":4057,"title":{},"body":{"components/PhoneNumberComponent.html":{}}}],["number.component.scss",{"_index":4056,"title":{},"body":{"components/PhoneNumberComponent.html":{}}}],["number.component.ts",{"_index":4055,"title":{},"body":{"components/PhoneNumberComponent.html":{},"coverage.html":{}}}],["number.component.ts:105",{"_index":4075,"title":{},"body":{"components/PhoneNumberComponent.html":{}}}],["number.component.ts:112",{"_index":4073,"title":{},"body":{"components/PhoneNumberComponent.html":{}}}],["number.component.ts:117",{"_index":4078,"title":{},"body":{"components/PhoneNumberComponent.html":{}}}],["number.component.ts:125",{"_index":4076,"title":{},"body":{"components/PhoneNumberComponent.html":{}}}],["number.component.ts:36",{"_index":4087,"title":{},"body":{"components/PhoneNumberComponent.html":{}}}],["number.component.ts:37",{"_index":4065,"title":{},"body":{"components/PhoneNumberComponent.html":{}}}],["number.component.ts:38",{"_index":4068,"title":{},"body":{"components/PhoneNumberComponent.html":{}}}],["number.component.ts:39",{"_index":4067,"title":{},"body":{"components/PhoneNumberComponent.html":{}}}],["number.component.ts:41",{"_index":4064,"title":{},"body":{"components/PhoneNumberComponent.html":{}}}],["number.component.ts:45",{"_index":4069,"title":{},"body":{"components/PhoneNumberComponent.html":{}}}],["number.component.ts:50",{"_index":4089,"title":{},"body":{"components/PhoneNumberComponent.html":{}}}],["number.component.ts:54",{"_index":4070,"title":{},"body":{"components/PhoneNumberComponent.html":{}}}],["number.component.ts:56",{"_index":4083,"title":{},"body":{"components/PhoneNumberComponent.html":{}}}],["number.component.ts:58",{"_index":4082,"title":{},"body":{"components/PhoneNumberComponent.html":{}}}],["number.component.ts:59",{"_index":4088,"title":{},"body":{"components/PhoneNumberComponent.html":{}}}],["number.component.ts:62",{"_index":4080,"title":{},"body":{"components/PhoneNumberComponent.html":{}}}],["number.component.ts:65",{"_index":4063,"title":{},"body":{"components/PhoneNumberComponent.html":{}}}],["number.component.ts:67",{"_index":4081,"title":{},"body":{"components/PhoneNumberComponent.html":{}}}],["number.component.ts:74",{"_index":4071,"title":{},"body":{"components/PhoneNumberComponent.html":{}}}],["number.parseint",{"_index":3720,"title":{},"body":{"components/NameComponent.html":{}}}],["number/phone",{"_index":4054,"title":{},"body":{"components/PhoneNumberComponent.html":{},"modules/SharedCoreModule.html":{},"coverage.html":{}}}],["numbers",{"_index":1360,"title":{},"body":{"components/CityComponent.html":{},"components/PostalCodeComponent.html":{},"changelog.html":{}}}],["numerator",{"_index":4521,"title":{},"body":{"components/WizardProgressBarComponent.html":{}}}],["numpages",{"_index":3097,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["numquam",{"_index":1434,"title":{},"body":{"components/CityComponent.html":{},"interfaces/CountryList.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"interfaces/FileUploaderMsg.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{}}}],["nunavut",{"_index":4205,"title":{},"body":{"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{}}}],["nzl",{"_index":2087,"title":{},"body":{"interfaces/CountryList.html":{}}}],["o",{"_index":2869,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["obcaecati",{"_index":1429,"title":{},"body":{"components/CityComponent.html":{},"interfaces/CountryList.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"interfaces/FileUploaderMsg.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{}}}],["obj",{"_index":2437,"title":{},"body":{"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"interfaces/GeoAddressResult.html":{},"injectables/GeocoderService.html":{},"interfaces/PageList.html":{},"injectables/PageStateService.html":{}}}],["obj.features.map(feature",{"_index":3287,"title":{},"body":{"interfaces/GeoAddressResult.html":{},"injectables/GeocoderService.html":{}}}],["obj.index",{"_index":3765,"title":{},"body":{"interfaces/PageList.html":{},"injectables/PageStateService.html":{}}}],["obj.iscomplete",{"_index":3768,"title":{},"body":{"interfaces/PageList.html":{},"injectables/PageStateService.html":{}}}],["object",{"_index":295,"title":{},"body":{"classes/AbstractHttpService.html":{},"classes/Address.html":{},"classes/Base.html":{},"interfaces/CommonLogMessage.html":{},"components/GeocoderInputComponent.html":{},"classes/Person.html":{}}}],["object.addressline1",{"_index":1039,"title":{},"body":{"classes/Address.html":{}}}],["object.addressline2",{"_index":1041,"title":{},"body":{"classes/Address.html":{}}}],["object.addressline3",{"_index":1043,"title":{},"body":{"classes/Address.html":{}}}],["object.assign",{"_index":3762,"title":{},"body":{"interfaces/PageList.html":{},"injectables/PageStateService.html":{}}}],["object.city",{"_index":1044,"title":{},"body":{"classes/Address.html":{}}}],["object.country",{"_index":1045,"title":{},"body":{"classes/Address.html":{}}}],["object.dateofbirth",{"_index":3982,"title":{},"body":{"classes/Person.html":{}}}],["object.firstname",{"_index":3979,"title":{},"body":{"classes/Person.html":{}}}],["object.keys",{"_index":3750,"title":{},"body":{"interfaces/PageList.html":{},"injectables/PageStateService.html":{}}}],["object.keys(this._defaulterrmsg).map",{"_index":207,"title":{},"body":{"classes/AbstractFormControl.html":{}}}],["object.keys(this.disabled).map",{"_index":968,"title":{},"body":{"interfaces/AddrLabelList.html":{},"interfaces/Maxlengths.html":{},"interfaces/ReadOnlyFields.html":{}}}],["object.keys(this.errormessage).map",{"_index":201,"title":{},"body":{"classes/AbstractFormControl.html":{},"interfaces/CountryList.html":{},"components/PostalCodeComponent.html":{}}}],["object.keys(this.fieldmaxlenghts).map",{"_index":961,"title":{},"body":{"interfaces/AddrLabelList.html":{},"interfaces/Maxlengths.html":{},"interfaces/ReadOnlyFields.html":{}}}],["object.keys(this.form.form.controls).foreach(x",{"_index":110,"title":{},"body":{"classes/AbstractForm.html":{}}}],["object.keys(this.labels).map",{"_index":956,"title":{},"body":{"interfaces/AddrLabelList.html":{},"interfaces/Maxlengths.html":{},"interfaces/ReadOnlyFields.html":{}}}],["object.keys(this.readonlyfields).map",{"_index":966,"title":{},"body":{"interfaces/AddrLabelList.html":{},"interfaces/Maxlengths.html":{},"interfaces/ReadOnlyFields.html":{}}}],["object.lastname",{"_index":3981,"title":{},"body":{"classes/Person.html":{}}}],["object.middlename",{"_index":3980,"title":{},"body":{"classes/Person.html":{}}}],["object.postal",{"_index":1046,"title":{},"body":{"classes/Address.html":{}}}],["object.province",{"_index":1047,"title":{},"body":{"classes/Address.html":{}}}],["object.setprototypeof(this",{"_index":3691,"title":{},"body":{"classes/MoHCommonLibraryError.html":{}}}],["objectid",{"_index":121,"title":{},"body":{"classes/AbstractFormControl.html":{},"classes/Base.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"components/ConfirmTemplateComponent.html":{},"components/DatepickerComponent.html":{},"components/DropdownComponent.html":{},"components/EmailComponent.html":{},"components/FullNameComponent.html":{},"components/GeocoderInputComponent.html":{},"components/NameComponent.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"classes/Person.html":{},"components/PhnComponent.html":{},"components/PhoneNumberComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"components/RadioComponent.html":{},"components/SampleModalComponent.html":{},"components/SinComponent.html":{},"components/ToggleComponent.html":{}}}],["objects",{"_index":5473,"title":{},"body":{"additional-documentation/local-development/components.html":{}}}],["observable",{"_index":257,"title":{},"body":{"classes/AbstractHttpService.html":{},"injectables/CaptchaDataService.html":{},"interfaces/FileUploaderMsg.html":{},"interfaces/GeoAddressResult.html":{},"components/GeocoderInputComponent.html":{},"injectables/GeocoderService.html":{},"interfaces/ISpaEnvResponse.html":{},"guards/LoadPageGuardService.html":{},"guards/RouteGuardService.html":{},"injectables/ServerPayload.html":{}}}],["observable.pipe(catcherror(this.handleerror.bind(this",{"_index":319,"title":{},"body":{"classes/AbstractHttpService.html":{}}}],["observable.pipe(tap",{"_index":324,"title":{},"body":{"classes/AbstractHttpService.html":{}}}],["observe",{"_index":1164,"title":{},"body":{"injectables/CaptchaDataService.html":{},"injectables/ServerPayload.html":{}}}],["observer",{"_index":306,"title":{},"body":{"classes/AbstractHttpService.html":{},"interfaces/FileUploaderMsg.html":{}}}],["observer.error(error",{"_index":2943,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["observer.error(imagereaderror",{"_index":2931,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["observer.error(imagetoobigerror",{"_index":3023,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["observer.next(mspimage",{"_index":3026,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["obtain",{"_index":5337,"title":{},"body":{"license.html":{}}}],["occupied",{"_index":2111,"title":{},"body":{"interfaces/CountryList.html":{}}}],["occurances",{"_index":2605,"title":{},"body":{"interfaces/ErrorMessage.html":{}}}],["occured",{"_index":1646,"title":{},"body":{"interfaces/CommonLogMessage.html":{},"interfaces/ISpaEnvResponse.html":{}}}],["ocean",{"_index":1818,"title":{},"body":{"interfaces/CountryList.html":{}}}],["ocurrence",{"_index":583,"title":{},"body":{"classes/AbstractTestPage.html":{}}}],["odit",{"_index":1437,"title":{},"body":{"components/CityComponent.html":{},"interfaces/CountryList.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"interfaces/FileUploaderMsg.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{}}}],["of(error",{"_index":3631,"title":{},"body":{"interfaces/ISpaEnvResponse.html":{}}}],["of30",{"_index":2910,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["oh",{"_index":5494,"title":{},"body":{"additional-documentation/local-development/components.html":{}}}],["older",{"_index":5316,"title":{},"body":{"index.html":{}}}],["oman",{"_index":2104,"title":{},"body":{"interfaces/CountryList.html":{}}}],["omit",{"_index":1015,"title":{},"body":{"classes/Address.html":{}}}],["omn",{"_index":2103,"title":{},"body":{"interfaces/CountryList.html":{}}}],["onblur",{"_index":1323,"title":{},"body":{"components/CityComponent.html":{},"components/EmailComponent.html":{},"components/GeocoderInputComponent.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"components/PhnComponent.html":{},"components/PhoneNumberComponent.html":{},"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{},"components/SinComponent.html":{}}}],["onblur($event",{"_index":4072,"title":{},"body":{"components/PhoneNumberComponent.html":{}}}],["onblur(event",{"_index":1344,"title":{},"body":{"components/CityComponent.html":{},"components/EmailComponent.html":{},"components/GeocoderInputComponent.html":{},"components/PhnComponent.html":{},"components/ProvinceComponent.html":{},"components/SinComponent.html":{}}}],["onblurevent",{"_index":2304,"title":{},"body":{"interfaces/CountryList.html":{},"components/NameComponent.html":{},"components/PostalCodeComponent.html":{}}}],["onblurevent(event",{"_index":3706,"title":{},"body":{"components/NameComponent.html":{},"components/PostalCodeComponent.html":{}}}],["onbtnclick",{"_index":4545,"title":{},"body":{"components/XiconButtonComponent.html":{}}}],["once",{"_index":2798,"title":{},"body":{"interfaces/FileUploaderMsg.html":{},"additional-documentation/local-development/schematics.html":{}}}],["onchange",{"_index":4597,"title":{},"body":{"changelog.html":{}}}],["onchanges",{"_index":765,"title":{},"body":{"interfaces/AddrLabelList.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"interfaces/FileUploaderMsg.html":{},"components/GeocoderInputComponent.html":{},"interfaces/Maxlengths.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"interfaces/ReadOnlyFields.html":{}}}],["onclick",{"_index":1077,"title":{},"body":{"components/ButtonComponent.html":{},"components/FormActionBarComponent.html":{}}}],["onclick($event",{"_index":1089,"title":{},"body":{"components/ButtonComponent.html":{},"components/FormActionBarComponent.html":{}}}],["ondatechanged",{"_index":2434,"title":{},"body":{"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{}}}],["ondatechanged(event",{"_index":2425,"title":{},"body":{"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{}}}],["ondestroy",{"_index":4469,"title":{},"body":{"components/WizardProgressBarComponent.html":{}}}],["one",{"_index":446,"title":{},"body":{"classes/AbstractTestPage.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"guards/LoadPageGuardService.html":{},"guards/RouteGuardService.html":{},"changelog.html":{},"miscellaneous/enumerations.html":{},"additional-documentation/getting-started.html":{},"additional-documentation/local-development/schematics.html":{},"additional-documentation/local-development/components.html":{}}}],["onerror",{"_index":3314,"title":{},"body":{"components/GeocoderInputComponent.html":{}}}],["onerror(err",{"_index":3328,"title":{},"body":{"components/GeocoderInputComponent.html":{}}}],["ongoing",{"_index":2820,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["oninit",{"_index":115,"title":{},"body":{"classes/AbstractFormControl.html":{},"components/AccordionCommonComponent.html":{},"interfaces/AddrLabelList.html":{},"components/ButtonComponent.html":{},"components/ButtonGroupComponent.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"components/CoreBreadcrumbComponent.html":{},"interfaces/CountryList.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"components/DropdownComponent.html":{},"components/EmailComponent.html":{},"interfaces/FileUploaderMsg.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/FullNameComponent.html":{},"interfaces/FullNameErrorMsg.html":{},"components/GeocoderInputComponent.html":{},"components/HeaderComponent.html":{},"interfaces/IRadioItems.html":{},"interfaces/ISpaEnvResponse.html":{},"interfaces/Maxlengths.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"components/PhnComponent.html":{},"components/PhoneNumberComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{},"components/RadioComponent.html":{},"interfaces/ReadOnlyFields.html":{},"components/SinComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{},"components/XiconButtonComponent.html":{}}}],["oninput",{"_index":2451,"title":{},"body":{"directives/DateFieldFormatDirective.html":{}}}],["oninputblur",{"_index":3830,"title":{},"body":{"components/PasswordComponent.html":{}}}],["oninputblur($event",{"_index":3863,"title":{},"body":{"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{}}}],["onkeyup",{"_index":3315,"title":{},"body":{"components/GeocoderInputComponent.html":{}}}],["onkeyup(event",{"_index":3331,"title":{},"body":{"components/GeocoderInputComponent.html":{}}}],["onload",{"_index":3067,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["onloading",{"_index":3316,"title":{},"body":{"components/GeocoderInputComponent.html":{}}}],["onloading(val",{"_index":3333,"title":{},"body":{"components/GeocoderInputComponent.html":{}}}],["onlyfuturedates",{"_index":2352,"title":{},"body":{"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{}}}],["onnoresults",{"_index":3317,"title":{},"body":{"components/GeocoderInputComponent.html":{}}}],["onnoresults(val",{"_index":3335,"title":{},"body":{"components/GeocoderInputComponent.html":{}}}],["onpaste",{"_index":3908,"title":{},"body":{"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{}}}],["onselect",{"_index":3318,"title":{},"body":{"components/GeocoderInputComponent.html":{}}}],["onselect(event",{"_index":3337,"title":{},"body":{"components/GeocoderInputComponent.html":{}}}],["onstatuschange",{"_index":5010,"title":{},"body":{"changelog.html":{}}}],["ontario",{"_index":4194,"title":{},"body":{"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{}}}],["onvaluechange",{"_index":1324,"title":{},"body":{"components/CityComponent.html":{},"interfaces/CountryList.html":{},"components/EmailComponent.html":{},"components/NameComponent.html":{},"components/PhnComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{},"components/SinComponent.html":{}}}],["onvaluechange(value",{"_index":1346,"title":{},"body":{"components/CityComponent.html":{},"components/EmailComponent.html":{},"components/NameComponent.html":{},"components/PhnComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"components/SinComponent.html":{}}}],["open",{"_index":2751,"title":{},"body":{"interfaces/FileUploaderMsg.html":{},"changelog.html":{}}}],["opened/read",{"_index":3074,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["openfiledialog",{"_index":2904,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["openmodal",{"_index":3573,"title":{},"body":{"interfaces/ISpaEnvResponse.html":{},"interfaces/SampleImageInterface.html":{},"components/SampleModalComponent.html":{}}}],["opens",{"_index":604,"title":{},"body":{"classes/AbstractTestPage.html":{},"interfaces/FileUploaderMsg.html":{}}}],["openshift",{"_index":1189,"title":{},"body":{"modules/CaptchaModule.html":{},"additional-documentation/local-development/schematics.html":{}}}],["operate",{"_index":5480,"title":{},"body":{"additional-documentation/local-development/components.html":{}}}],["operation",{"_index":2788,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["opt",{"_index":4875,"title":{},"body":{"changelog.html":{}}}],["optimizing",{"_index":4505,"title":{},"body":{"components/WizardProgressBarComponent.html":{}}}],["optio",{"_index":1401,"title":{},"body":{"components/CityComponent.html":{},"interfaces/CountryList.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"interfaces/FileUploaderMsg.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{}}}],["option",{"_index":566,"title":{},"body":{"classes/AbstractTestPage.html":{},"interfaces/AddrLabelList.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"components/GeocoderInputComponent.html":{},"interfaces/Maxlengths.html":{},"interfaces/ReadOnlyFields.html":{},"changelog.html":{}}}],["optional",{"_index":28,"title":{},"body":{"classes/AbstractBaseForm.html":{},"classes/AbstractForm.html":{},"classes/AbstractFormControl.html":{},"classes/AbstractHttpService.html":{},"injectables/AbstractPageGuardService.html":{},"injectables/AbstractPgCheckService.html":{},"classes/AbstractReactForm.html":{},"classes/AbstractTestPage.html":{},"interfaces/AddrLabelList.html":{},"classes/Address.html":{},"components/ButtonComponent.html":{},"components/ButtonGroupComponent.html":{},"injectables/CaptchaDataService.html":{},"injectables/CheckCompleteBaseService.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"interfaces/CommonAttachmentJson.html":{},"classes/CommonImage.html":{},"classes/CommonImageProcessingError.html":{},"interfaces/CommonImageScaleFactors.html":{},"classes/CommonImageScaleFactorsImpl.html":{},"interfaces/CommonLogMessage.html":{},"classes/Container.html":{},"components/CoreBreadcrumbComponent.html":{},"interfaces/CountryList.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"injectables/DefaultPageGuardService.html":{},"components/DropdownComponent.html":{},"directives/DuplicateCheckDirective.html":{},"components/EmailComponent.html":{},"interfaces/ErrorMessage.html":{},"interfaces/FileUploaderMsg.html":{},"components/FormActionBarComponent.html":{},"components/FullNameComponent.html":{},"interfaces/FullNameErrorMsg.html":{},"components/GeocoderInputComponent.html":{},"injectables/GeocoderService.html":{},"components/HeaderComponent.html":{},"interfaces/IRadioItems.html":{},"guards/LoadPageGuardService.html":{},"interfaces/Maxlengths.html":{},"classes/MoHCommonLibraryError.html":{},"components/NameComponent.html":{},"injectables/PageStateService.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"classes/Person.html":{},"components/PhnComponent.html":{},"components/PhoneNumberComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{},"components/RadioComponent.html":{},"interfaces/ReadOnlyFields.html":{},"guards/RouteGuardService.html":{},"interfaces/SampleImageInterface.html":{},"components/SinComponent.html":{},"components/ThumbnailComponent.html":{},"directives/ValidateBcPostalDirective.html":{},"directives/ValidateCityDirective.html":{},"directives/ValidateNameDirective.html":{},"directives/ValidatePostalcodeDirective.html":{},"directives/ValidateRegionDirective.html":{},"directives/ValidateStreetDirective.html":{},"components/WizardProgressBarComponent.html":{},"changelog.html":{}}}],["optional()@self",{"_index":1310,"title":{},"body":{"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"components/DropdownComponent.html":{},"components/EmailComponent.html":{},"components/GeocoderInputComponent.html":{},"components/NameComponent.html":{},"components/PhnComponent.html":{},"components/PhoneNumberComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"components/RadioComponent.html":{},"components/SinComponent.html":{}}}],["optionally",{"_index":320,"title":{},"body":{"classes/AbstractHttpService.html":{}}}],["options",{"_index":253,"title":{},"body":{"classes/AbstractHttpService.html":{},"classes/AbstractTestPage.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"injectables/GeocoderService.html":{},"changelog.html":{}}}],["optiontext",{"_index":541,"title":{},"body":{"classes/AbstractTestPage.html":{}}}],["optiontext)).click",{"_index":606,"title":{},"body":{"classes/AbstractTestPage.html":{}}}],["order",{"_index":888,"title":{},"body":{"interfaces/AddrLabelList.html":{},"interfaces/FileUploaderMsg.html":{},"interfaces/Maxlengths.html":{},"interfaces/ReadOnlyFields.html":{},"changelog.html":{},"additional-documentation/local-development/components.html":{}}}],["organize",{"_index":5015,"title":{},"body":{"changelog.html":{}}}],["orient",{"_index":2787,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["orientation",{"_index":3035,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["others",{"_index":547,"title":{},"body":{"classes/AbstractTestPage.html":{},"additional-documentation/getting-started.html":{}}}],["otherwise",{"_index":2713,"title":{},"body":{"interfaces/FileUploaderMsg.html":{},"components/WizardProgressBarComponent.html":{}}}],["out",{"_index":900,"title":{},"body":{"interfaces/AddrLabelList.html":{},"classes/Address.html":{},"modules/CaptchaModule.html":{},"injectables/CheckCompleteBaseService.html":{},"interfaces/CommonLogMessage.html":{},"components/FormSubmitBarComponent.html":{},"interfaces/GeoAddressResult.html":{},"components/GeocoderInputComponent.html":{},"injectables/GeocoderService.html":{},"interfaces/Maxlengths.html":{},"interfaces/PageListInterface.html":{},"interfaces/ReadOnlyFields.html":{},"modules/SharedCoreModule.html":{},"components/WizardProgressBarComponent.html":{},"changelog.html":{},"overview.html":{}}}],["outlying",{"_index":2265,"title":{},"body":{"interfaces/CountryList.html":{}}}],["output",{"_index":763,"title":{},"body":{"interfaces/AddrLabelList.html":{},"components/ButtonComponent.html":{},"components/ButtonGroupComponent.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"interfaces/CountryList.html":{},"interfaces/DateErrorMsg.html":{},"directives/DateFieldFormatDirective.html":{},"components/DatepickerComponent.html":{},"components/EmailComponent.html":{},"interfaces/FileUploaderMsg.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/FullNameComponent.html":{},"interfaces/FullNameErrorMsg.html":{},"components/GeocoderInputComponent.html":{},"interfaces/IRadioItems.html":{},"interfaces/ISpaEnvResponse.html":{},"interfaces/Maxlengths.html":{},"components/NameComponent.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"components/PhnComponent.html":{},"components/PhoneNumberComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{},"components/RadioComponent.html":{},"interfaces/ReadOnlyFields.html":{},"components/SinComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/XiconButtonComponent.html":{},"todo.html":{},"additional-documentation/local-development/components.html":{}}}],["outputs",{"_index":1079,"title":{},"body":{"components/ButtonComponent.html":{},"components/ButtonGroupComponent.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"directives/DateFieldFormatDirective.html":{},"components/DatepickerComponent.html":{},"components/EmailComponent.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/FullNameComponent.html":{},"components/GeocoderInputComponent.html":{},"components/NameComponent.html":{},"components/PasswordComponent.html":{},"components/PhnComponent.html":{},"components/PhoneNumberComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"components/RadioComponent.html":{},"components/SinComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/XiconButtonComponent.html":{}}}],["outside",{"_index":3162,"title":{},"body":{"components/FormActionBarComponent.html":{},"components/WizardProgressBarComponent.html":{}}}],["over",{"_index":2875,"title":{},"body":{"interfaces/FileUploaderMsg.html":{},"components/GeocoderInputComponent.html":{}}}],["override",{"_index":516,"title":{},"body":{"classes/AbstractTestPage.html":{},"interfaces/FileUploaderMsg.html":{},"changelog.html":{}}}],["overrided",{"_index":387,"title":{},"body":{"classes/AbstractReactForm.html":{}}}],["overridesscss",{"_index":5250,"title":{},"body":{"coverage.html":{}}}],["overview",{"_index":5356,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["overwrite",{"_index":447,"title":{},"body":{"classes/AbstractTestPage.html":{},"classes/Address.html":{},"interfaces/CommonLogMessage.html":{}}}],["overwritefile",{"_index":5259,"title":{},"body":{"coverage.html":{}}}],["overwritten",{"_index":457,"title":{},"body":{"classes/AbstractTestPage.html":{},"changelog.html":{}}}],["pa",{"_index":3603,"title":{},"body":{"interfaces/ISpaEnvResponse.html":{}}}],["package",{"_index":1051,"title":{"dependencies.html":{}},"body":{"classes/Base.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"classes/Person.html":{},"changelog.html":{},"additional-documentation/local-development/components.html":{}}}],["package.json",{"_index":5079,"title":{},"body":{"changelog.html":{},"additional-documentation/local-development/schematics.html":{},"additional-documentation/local-development/components.html":{}}}],["package.jsoncreating",{"_index":5433,"title":{},"body":{"additional-documentation/local-development/schematics.html":{}}}],["packaging",{"_index":5123,"title":{},"body":{"changelog.html":{}}}],["padding",{"_index":4903,"title":{},"body":{"changelog.html":{}}}],["page",{"_index":57,"title":{"additional-documentation/getting-started.html":{},"additional-documentation/local-development.html":{},"additional-documentation/local-development/schematics.html":{},"additional-documentation/local-development/components.html":{}},"body":{"classes/AbstractBaseForm.html":{},"classes/AbstractForm.html":{},"injectables/AbstractPageGuardService.html":{},"classes/AbstractReactForm.html":{},"classes/AbstractTestPage.html":{},"components/AccordionCommonComponent.html":{},"components/ButtonComponent.html":{},"components/ButtonGroupComponent.html":{},"injectables/CheckCompleteBaseService.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"components/ConfirmTemplateComponent.html":{},"components/CoreBreadcrumbComponent.html":{},"components/DatepickerComponent.html":{},"injectables/DefaultPageGuardService.html":{},"components/DropdownComponent.html":{},"components/EmailComponent.html":{},"components/ErrorContainerComponent.html":{},"interfaces/FileUploaderMsg.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/FullNameComponent.html":{},"components/GeocoderInputComponent.html":{},"components/HeaderComponent.html":{},"guards/LoadPageGuardService.html":{},"components/NameComponent.html":{},"components/PageFrameworkComponent.html":{},"interfaces/PageList.html":{},"interfaces/PageListInterface.html":{},"components/PageSectionComponent.html":{},"injectables/PageStateService.html":{},"components/PasswordComponent.html":{},"components/PhnComponent.html":{},"components/PhoneNumberComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"components/RadioComponent.html":{},"guards/RouteGuardService.html":{},"components/SampleModalComponent.html":{},"components/SinComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{},"components/XiconButtonComponent.html":{},"changelog.html":{},"coverage.html":{},"additional-documentation/local-development/schematics.html":{}}}],["page.path",{"_index":1716,"title":{},"body":{"classes/Container.html":{},"interfaces/WizardProgressItem.html":{}}}],["page.ts",{"_index":405,"title":{},"body":{"classes/AbstractTestPage.html":{},"coverage.html":{}}}],["page.ts:102",{"_index":569,"title":{},"body":{"classes/AbstractTestPage.html":{}}}],["page.ts:113",{"_index":578,"title":{},"body":{"classes/AbstractTestPage.html":{}}}],["page.ts:122",{"_index":472,"title":{},"body":{"classes/AbstractTestPage.html":{}}}],["page.ts:13",{"_index":442,"title":{},"body":{"classes/AbstractTestPage.html":{}}}],["page.ts:130",{"_index":478,"title":{},"body":{"classes/AbstractTestPage.html":{}}}],["page.ts:138",{"_index":458,"title":{},"body":{"classes/AbstractTestPage.html":{}}}],["page.ts:146",{"_index":484,"title":{},"body":{"classes/AbstractTestPage.html":{}}}],["page.ts:153",{"_index":465,"title":{},"body":{"classes/AbstractTestPage.html":{}}}],["page.ts:160",{"_index":538,"title":{},"body":{"classes/AbstractTestPage.html":{}}}],["page.ts:169",{"_index":581,"title":{},"body":{"classes/AbstractTestPage.html":{}}}],["page.ts:178",{"_index":486,"title":{},"body":{"classes/AbstractTestPage.html":{}}}],["page.ts:18",{"_index":451,"title":{},"body":{"classes/AbstractTestPage.html":{}}}],["page.ts:186",{"_index":492,"title":{},"body":{"classes/AbstractTestPage.html":{}}}],["page.ts:32",{"_index":515,"title":{},"body":{"classes/AbstractTestPage.html":{}}}],["page.ts:34",{"_index":490,"title":{},"body":{"classes/AbstractTestPage.html":{}}}],["page.ts:38",{"_index":497,"title":{},"body":{"classes/AbstractTestPage.html":{}}}],["page.ts:43",{"_index":535,"title":{},"body":{"classes/AbstractTestPage.html":{}}}],["page.ts:47",{"_index":489,"title":{},"body":{"classes/AbstractTestPage.html":{}}}],["page.ts:60",{"_index":499,"title":{},"body":{"classes/AbstractTestPage.html":{}}}],["page.ts:72",{"_index":512,"title":{},"body":{"classes/AbstractTestPage.html":{}}}],["page.ts:76",{"_index":496,"title":{},"body":{"classes/AbstractTestPage.html":{}}}],["page.ts:91",{"_index":542,"title":{},"body":{"classes/AbstractTestPage.html":{}}}],["pagechecklist",{"_index":1207,"title":{},"body":{"injectables/CheckCompleteBaseService.html":{},"interfaces/PageListInterface.html":{}}}],["pageframework",{"_index":4909,"title":{},"body":{"changelog.html":{}}}],["pageframeworkcomponent",{"_index":701,"title":{"components/PageFrameworkComponent.html":{}},"body":{"components/AccordionCommonComponent.html":{},"components/ButtonComponent.html":{},"components/ButtonGroupComponent.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"components/ConfirmTemplateComponent.html":{},"components/CoreBreadcrumbComponent.html":{},"components/DatepickerComponent.html":{},"components/DropdownComponent.html":{},"components/EmailComponent.html":{},"components/ErrorContainerComponent.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/FullNameComponent.html":{},"components/GeocoderInputComponent.html":{},"components/HeaderComponent.html":{},"components/NameComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"components/PhnComponent.html":{},"components/PhoneNumberComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"components/RadioComponent.html":{},"components/SampleModalComponent.html":{},"modules/SharedCoreModule.html":{},"components/SinComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{},"components/XiconButtonComponent.html":{},"coverage.html":{},"overview.html":{}}}],["pagelist",{"_index":3740,"title":{"interfaces/PageList.html":{}},"body":{"interfaces/PageList.html":{},"injectables/PageStateService.html":{},"coverage.html":{}}}],["pagelistinterface",{"_index":1240,"title":{"interfaces/PageListInterface.html":{}},"body":{"injectables/CheckCompleteBaseService.html":{},"interfaces/PageListInterface.html":{},"coverage.html":{}}}],["pagenumber",{"_index":2925,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["pageroutes",{"_index":1709,"title":{},"body":{"classes/Container.html":{},"interfaces/WizardProgressItem.html":{}}}],["pageroutes.map(page",{"_index":1715,"title":{},"body":{"classes/Container.html":{},"interfaces/WizardProgressItem.html":{}}}],["pages",{"_index":1224,"title":{},"body":{"injectables/CheckCompleteBaseService.html":{},"components/PageFrameworkComponent.html":{},"interfaces/PageList.html":{},"interfaces/PageListInterface.html":{},"injectables/PageStateService.html":{},"changelog.html":{}}}],["pagesection",{"_index":4737,"title":{},"body":{"changelog.html":{}}}],["pagesectioncomponent",{"_index":703,"title":{"components/PageSectionComponent.html":{}},"body":{"components/AccordionCommonComponent.html":{},"components/ButtonComponent.html":{},"components/ButtonGroupComponent.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"components/ConfirmTemplateComponent.html":{},"components/CoreBreadcrumbComponent.html":{},"components/DatepickerComponent.html":{},"components/DropdownComponent.html":{},"components/EmailComponent.html":{},"components/ErrorContainerComponent.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/FullNameComponent.html":{},"components/GeocoderInputComponent.html":{},"components/HeaderComponent.html":{},"components/NameComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"components/PhnComponent.html":{},"components/PhoneNumberComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"components/RadioComponent.html":{},"components/SampleModalComponent.html":{},"modules/SharedCoreModule.html":{},"components/SinComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{},"components/XiconButtonComponent.html":{},"coverage.html":{},"overview.html":{}}}],["pagestateservice",{"_index":2505,"title":{"injectables/PageStateService.html":{}},"body":{"injectables/DefaultPageGuardService.html":{},"guards/LoadPageGuardService.html":{},"interfaces/PageList.html":{},"injectables/PageStateService.html":{},"coverage.html":{}}}],["pageurl",{"_index":3671,"title":{},"body":{"guards/LoadPageGuardService.html":{},"guards/RouteGuardService.html":{}}}],["pains",{"_index":5326,"title":{},"body":{"index.html":{}}}],["pak",{"_index":2105,"title":{},"body":{"interfaces/CountryList.html":{}}}],["pakistan",{"_index":2106,"title":{},"body":{"interfaces/CountryList.html":{}}}],["palau",{"_index":2108,"title":{},"body":{"interfaces/CountryList.html":{}}}],["palestinian",{"_index":2110,"title":{},"body":{"interfaces/CountryList.html":{}}}],["pan",{"_index":2112,"title":{},"body":{"interfaces/CountryList.html":{}}}],["panama",{"_index":2113,"title":{},"body":{"interfaces/CountryList.html":{}}}],["papua",{"_index":2115,"title":{},"body":{"interfaces/CountryList.html":{}}}],["paraguay",{"_index":2117,"title":{},"body":{"interfaces/CountryList.html":{}}}],["param",{"_index":208,"title":{},"body":{"classes/AbstractFormControl.html":{},"classes/AbstractHttpService.html":{},"classes/AbstractTestPage.html":{},"interfaces/AddrLabelList.html":{},"interfaces/CommonAttachmentJson.html":{},"classes/CommonImage.html":{},"classes/CommonImageProcessingError.html":{},"interfaces/CommonImageScaleFactors.html":{},"classes/CommonImageScaleFactorsImpl.html":{},"interfaces/CommonLogMessage.html":{},"interfaces/FileUploaderMsg.html":{},"interfaces/GeoAddressResult.html":{},"injectables/GeocoderService.html":{},"interfaces/Maxlengths.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"interfaces/ReadOnlyFields.html":{},"changelog.html":{}}}],["parameter",{"_index":393,"title":{},"body":{"classes/AbstractReactForm.html":{},"interfaces/PageList.html":{},"injectables/PageStateService.html":{}}}],["parameters",{"_index":24,"title":{},"body":{"classes/AbstractBaseForm.html":{},"classes/AbstractForm.html":{},"classes/AbstractFormControl.html":{},"classes/AbstractHttpService.html":{},"injectables/AbstractPageGuardService.html":{},"injectables/AbstractPgCheckService.html":{},"classes/AbstractReactForm.html":{},"classes/AbstractTestPage.html":{},"classes/Address.html":{},"components/ButtonComponent.html":{},"components/ButtonGroupComponent.html":{},"injectables/CaptchaDataService.html":{},"injectables/CheckCompleteBaseService.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"classes/CommonImage.html":{},"classes/CommonImageProcessingError.html":{},"interfaces/CommonImageScaleFactors.html":{},"classes/CommonImageScaleFactorsImpl.html":{},"classes/Container.html":{},"components/DatepickerComponent.html":{},"injectables/DefaultPageGuardService.html":{},"components/DropdownComponent.html":{},"directives/DuplicateCheckDirective.html":{},"components/EmailComponent.html":{},"components/FormActionBarComponent.html":{},"components/FullNameComponent.html":{},"components/GeocoderInputComponent.html":{},"injectables/GeocoderService.html":{},"components/HeaderComponent.html":{},"guards/LoadPageGuardService.html":{},"classes/MoHCommonLibraryError.html":{},"components/NameComponent.html":{},"injectables/PageStateService.html":{},"components/PasswordComponent.html":{},"classes/Person.html":{},"components/PhnComponent.html":{},"components/PhoneNumberComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"components/RadioComponent.html":{},"guards/RouteGuardService.html":{},"components/SinComponent.html":{},"components/ThumbnailComponent.html":{},"directives/ValidateBcPostalDirective.html":{},"directives/ValidateCityDirective.html":{},"directives/ValidateNameDirective.html":{},"directives/ValidatePostalcodeDirective.html":{},"directives/ValidateRegionDirective.html":{},"directives/ValidateStreetDirective.html":{},"components/WizardProgressBarComponent.html":{},"changelog.html":{}}}],["params",{"_index":62,"title":{},"body":{"classes/AbstractBaseForm.html":{},"classes/AbstractForm.html":{},"classes/AbstractHttpService.html":{},"classes/AbstractReactForm.html":{},"interfaces/GeoAddressResult.html":{},"injectables/GeocoderService.html":{},"additional-documentation/local-development/schematics.html":{}}}],["params).pipe(map(this.processresponse",{"_index":3281,"title":{},"body":{"interfaces/GeoAddressResult.html":{},"injectables/GeocoderService.html":{}}}],["parent",{"_index":791,"title":{},"body":{"interfaces/AddrLabelList.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"interfaces/FileUploaderMsg.html":{},"interfaces/Maxlengths.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"interfaces/ReadOnlyFields.html":{}}}],["parents",{"_index":137,"title":{},"body":{"classes/AbstractFormControl.html":{},"interfaces/AddrLabelList.html":{},"classes/Base.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"components/ConfirmTemplateComponent.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"components/DropdownComponent.html":{},"components/EmailComponent.html":{},"components/FullNameComponent.html":{},"components/GeocoderInputComponent.html":{},"interfaces/Maxlengths.html":{},"components/NameComponent.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"classes/Person.html":{},"components/PhnComponent.html":{},"components/PhoneNumberComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"components/RadioComponent.html":{},"interfaces/ReadOnlyFields.html":{},"components/SampleModalComponent.html":{},"components/SinComponent.html":{},"components/ToggleComponent.html":{}}}],["pariatur",{"_index":1425,"title":{},"body":{"components/CityComponent.html":{},"interfaces/CountryList.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"interfaces/FileUploaderMsg.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{}}}],["parseint(scaledwidthstring",{"_index":4417,"title":{},"body":{"components/ThumbnailComponent.html":{}}}],["parseint(this.maxlength",{"_index":3411,"title":{},"body":{"components/GeocoderInputComponent.html":{}}}],["parsing",{"_index":1655,"title":{},"body":{"interfaces/CommonLogMessage.html":{},"changelog.html":{}}}],["part",{"_index":2157,"title":{},"body":{"interfaces/CountryList.html":{}}}],["parts",{"_index":3966,"title":{},"body":{"classes/Person.html":{},"additional-documentation/local-development/components.html":{}}}],["pass",{"_index":533,"title":{},"body":{"classes/AbstractTestPage.html":{},"components/ButtonComponent.html":{},"interfaces/FileUploaderMsg.html":{},"components/GeocoderInputComponent.html":{}}}],["passed",{"_index":43,"title":{},"body":{"classes/AbstractBaseForm.html":{},"classes/AbstractForm.html":{},"classes/AbstractReactForm.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"components/GeocoderInputComponent.html":{},"interfaces/ISpaEnvResponse.html":{},"changelog.html":{}}}],["passes",{"_index":3867,"title":{},"body":{"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"changelog.html":{}}}],["passing",{"_index":3884,"title":{},"body":{"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"changelog.html":{}}}],["password",{"_index":1481,"title":{},"body":{"interfaces/CommonAttachmentJson.html":{},"classes/CommonImage.html":{},"classes/CommonImageProcessingError.html":{},"interfaces/CommonImageScaleFactors.html":{},"classes/CommonImageScaleFactorsImpl.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{}}}],["password'},{'name",{"_index":706,"title":{},"body":{"components/AccordionCommonComponent.html":{},"components/ButtonComponent.html":{},"components/ButtonGroupComponent.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"components/ConfirmTemplateComponent.html":{},"components/CoreBreadcrumbComponent.html":{},"components/DatepickerComponent.html":{},"components/DropdownComponent.html":{},"components/EmailComponent.html":{},"components/ErrorContainerComponent.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/FullNameComponent.html":{},"components/GeocoderInputComponent.html":{},"components/HeaderComponent.html":{},"components/NameComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"components/PhnComponent.html":{},"components/PhoneNumberComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"components/RadioComponent.html":{},"components/SampleModalComponent.html":{},"components/SinComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{},"components/XiconButtonComponent.html":{}}}],["password.component.html",{"_index":3822,"title":{},"body":{"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{}}}],["password.component.scss",{"_index":3821,"title":{},"body":{"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{}}}],["password_",{"_index":3845,"title":{},"body":{"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{}}}],["passwordchange",{"_index":3820,"title":{},"body":{"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{}}}],["passwordcomponent",{"_index":705,"title":{"components/PasswordComponent.html":{}},"body":{"components/AccordionCommonComponent.html":{},"components/ButtonComponent.html":{},"components/ButtonGroupComponent.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"components/ConfirmTemplateComponent.html":{},"components/CoreBreadcrumbComponent.html":{},"components/DatepickerComponent.html":{},"components/DropdownComponent.html":{},"components/EmailComponent.html":{},"components/ErrorContainerComponent.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/FullNameComponent.html":{},"components/GeocoderInputComponent.html":{},"components/HeaderComponent.html":{},"components/NameComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"components/PhnComponent.html":{},"components/PhoneNumberComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"components/RadioComponent.html":{},"components/SampleModalComponent.html":{},"modules/SharedCoreModule.html":{},"components/SinComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{},"components/XiconButtonComponent.html":{},"changelog.html":{},"coverage.html":{},"overview.html":{}}}],["passworderrormsg",{"_index":3837,"title":{"interfaces/PasswordErrorMsg.html":{}},"body":{"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"coverage.html":{}}}],["past",{"_index":4608,"title":{},"body":{"changelog.html":{}}}],["pasting",{"_index":3907,"title":{},"body":{"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{}}}],["patch",{"_index":4715,"title":{},"body":{"changelog.html":{}}}],["path",{"_index":3663,"title":{},"body":{"guards/LoadPageGuardService.html":{},"interfaces/PageList.html":{},"injectables/PageStateService.html":{},"guards/RouteGuardService.html":{},"interfaces/SampleImageInterface.html":{},"components/SampleModalComponent.html":{},"changelog.html":{},"additional-documentation/local-development/schematics.html":{}}}],["path.endswith(x.path",{"_index":3773,"title":{},"body":{"interfaces/PageList.html":{},"injectables/PageStateService.html":{}}}],["path.includes(x.path",{"_index":3772,"title":{},"body":{"interfaces/PageList.html":{},"injectables/PageStateService.html":{}}}],["paths",{"_index":5008,"title":{},"body":{"changelog.html":{},"additional-documentation/getting-started.html":{},"additional-documentation/local-development/components.html":{}}}],["pattern",{"_index":3199,"title":{},"body":{"components/FullNameComponent.html":{},"interfaces/FullNameErrorMsg.html":{},"components/PostalCodeComponent.html":{},"directives/ValidatePostalcodeDirective.html":{}}}],["payload",{"_index":1157,"title":{},"body":{"injectables/CaptchaDataService.html":{},"injectables/ServerPayload.html":{}}}],["payload.translation",{"_index":1166,"title":{},"body":{"injectables/CaptchaDataService.html":{},"injectables/ServerPayload.html":{}}}],["pcn",{"_index":2121,"title":{},"body":{"interfaces/CountryList.html":{}}}],["pdf",{"_index":1480,"title":{},"body":{"interfaces/CommonAttachmentJson.html":{},"classes/CommonImage.html":{},"classes/CommonImageProcessingError.html":{},"interfaces/CommonImageScaleFactors.html":{},"classes/CommonImageScaleFactorsImpl.html":{},"interfaces/FileUploaderMsg.html":{},"changelog.html":{}}}],["pdf.good",{"_index":1482,"title":{},"body":{"interfaces/CommonAttachmentJson.html":{},"classes/CommonImage.html":{},"classes/CommonImageProcessingError.html":{},"interfaces/CommonImageScaleFactors.html":{},"classes/CommonImageScaleFactorsImpl.html":{}}}],["pdfdoc.numpages",{"_index":3098,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["pdffile",{"_index":3084,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["pdffile.name",{"_index":2923,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["pdfjs",{"_index":2622,"title":{},"body":{"interfaces/FileUploaderMsg.html":{},"coverage.html":{},"dependencies.html":{}}}],["pdfjs.disablestream",{"_index":3087,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["pdfjs.disableworker",{"_index":3086,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["pdfjs.getdocument((docinitparams",{"_index":3095,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["pdfjs.workersrc=pdfjsworker",{"_index":2659,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["pdfjs_",{"_index":2654,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["pdfjsstatic",{"_index":2621,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["pdfjsworker",{"_index":2657,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["pdfnotsupported",{"_index":1471,"title":{},"body":{"interfaces/CommonAttachmentJson.html":{},"classes/CommonImage.html":{},"classes/CommonImageProcessingError.html":{},"interfaces/CommonImageScaleFactors.html":{},"classes/CommonImageScaleFactorsImpl.html":{},"miscellaneous/enumerations.html":{}}}],["pdfscalefactor",{"_index":3082,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["pe",{"_index":4195,"title":{},"body":{"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{}}}],["people\\'s",{"_index":2004,"title":{},"body":{"interfaces/CountryList.html":{}}}],["per",{"_index":332,"title":{},"body":{"classes/AbstractHttpService.html":{},"interfaces/CountryList.html":{}}}],["performance",{"_index":909,"title":{},"body":{"interfaces/AddrLabelList.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"interfaces/Maxlengths.html":{},"interfaces/ReadOnlyFields.html":{}}}],["period",{"_index":3230,"title":{},"body":{"components/FullNameComponent.html":{},"interfaces/FullNameErrorMsg.html":{}}}],["periods",{"_index":1364,"title":{},"body":{"components/CityComponent.html":{},"interfaces/CountryList.html":{},"components/NameComponent.html":{},"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{}}}],["permissions",{"_index":5353,"title":{},"body":{"license.html":{}}}],["persisted",{"_index":853,"title":{},"body":{"interfaces/AddrLabelList.html":{},"interfaces/Maxlengths.html":{},"interfaces/ReadOnlyFields.html":{}}}],["person",{"_index":2641,"title":{"classes/Person.html":{}},"body":{"interfaces/FileUploaderMsg.html":{},"components/FullNameComponent.html":{},"interfaces/FullNameErrorMsg.html":{},"classes/Person.html":{},"coverage.html":{},"index.html":{}}}],["person's",{"_index":3961,"title":{},"body":{"classes/Person.html":{}}}],["person.model",{"_index":4670,"title":{},"body":{"changelog.html":{}}}],["person.model.ts",{"_index":4352,"title":{},"body":{"interfaces/SimpleDate.html":{}}}],["personal",{"_index":1705,"title":{},"body":{"classes/Container.html":{},"interfaces/ISpaEnvResponse.html":{},"components/PhnComponent.html":{},"interfaces/WizardProgressItem.html":{}}}],["personchange",{"_index":3204,"title":{},"body":{"components/FullNameComponent.html":{},"interfaces/FullNameErrorMsg.html":{}}}],["peru",{"_index":2118,"title":{},"body":{"interfaces/CountryList.html":{}}}],["pg",{"_index":368,"title":{},"body":{"injectables/AbstractPgCheckService.html":{},"injectables/CheckCompleteBaseService.html":{},"interfaces/PageListInterface.html":{},"guards/RouteGuardService.html":{},"coverage.html":{}}}],["pharmacare's",{"_index":1017,"title":{},"body":{"classes/Address.html":{}}}],["philippines",{"_index":2120,"title":{},"body":{"interfaces/CountryList.html":{}}}],["phl",{"_index":2119,"title":{},"body":{"interfaces/CountryList.html":{}}}],["phn",{"_index":3984,"title":{},"body":{"components/PhnComponent.html":{},"changelog.html":{}}}],["phn'},{'name",{"_index":708,"title":{},"body":{"components/AccordionCommonComponent.html":{},"components/ButtonComponent.html":{},"components/ButtonGroupComponent.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"components/ConfirmTemplateComponent.html":{},"components/CoreBreadcrumbComponent.html":{},"components/DatepickerComponent.html":{},"components/DropdownComponent.html":{},"components/EmailComponent.html":{},"components/ErrorContainerComponent.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/FullNameComponent.html":{},"components/GeocoderInputComponent.html":{},"components/HeaderComponent.html":{},"components/NameComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"components/PhnComponent.html":{},"components/PhoneNumberComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"components/RadioComponent.html":{},"components/SampleModalComponent.html":{},"components/SinComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{},"components/XiconButtonComponent.html":{}}}],["phn.component.html",{"_index":3986,"title":{},"body":{"components/PhnComponent.html":{}}}],["phn.component.scss",{"_index":3985,"title":{},"body":{"components/PhnComponent.html":{}}}],["phn_",{"_index":3992,"title":{},"body":{"components/PhnComponent.html":{}}}],["phncomponent",{"_index":707,"title":{"components/PhnComponent.html":{}},"body":{"components/AccordionCommonComponent.html":{},"components/ButtonComponent.html":{},"components/ButtonGroupComponent.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"components/ConfirmTemplateComponent.html":{},"components/CoreBreadcrumbComponent.html":{},"components/DatepickerComponent.html":{},"components/DropdownComponent.html":{},"components/EmailComponent.html":{},"components/ErrorContainerComponent.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/FullNameComponent.html":{},"components/GeocoderInputComponent.html":{},"components/HeaderComponent.html":{},"components/NameComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"components/PhnComponent.html":{},"components/PhoneNumberComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"components/RadioComponent.html":{},"components/SampleModalComponent.html":{},"modules/SharedCoreModule.html":{},"components/SinComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{},"components/XiconButtonComponent.html":{},"changelog.html":{},"coverage.html":{},"overview.html":{}}}],["phone",{"_index":710,"title":{},"body":{"components/AccordionCommonComponent.html":{},"components/ButtonComponent.html":{},"components/ButtonGroupComponent.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"components/ConfirmTemplateComponent.html":{},"components/CoreBreadcrumbComponent.html":{},"components/DatepickerComponent.html":{},"components/DropdownComponent.html":{},"components/EmailComponent.html":{},"components/ErrorContainerComponent.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/FullNameComponent.html":{},"components/GeocoderInputComponent.html":{},"components/HeaderComponent.html":{},"components/NameComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"components/PhnComponent.html":{},"components/PhoneNumberComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"components/RadioComponent.html":{},"components/SampleModalComponent.html":{},"components/SinComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{},"components/XiconButtonComponent.html":{},"changelog.html":{}}}],["phone/radio",{"_index":4644,"title":{},"body":{"changelog.html":{}}}],["phonelength",{"_index":4110,"title":{},"body":{"components/PhoneNumberComponent.html":{}}}],["phonenumber",{"_index":4058,"title":{},"body":{"components/PhoneNumberComponent.html":{},"changelog.html":{}}}],["phonenumbercomponent",{"_index":709,"title":{"components/PhoneNumberComponent.html":{}},"body":{"components/AccordionCommonComponent.html":{},"components/ButtonComponent.html":{},"components/ButtonGroupComponent.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"components/ConfirmTemplateComponent.html":{},"components/CoreBreadcrumbComponent.html":{},"components/DatepickerComponent.html":{},"components/DropdownComponent.html":{},"components/EmailComponent.html":{},"components/ErrorContainerComponent.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/FullNameComponent.html":{},"components/GeocoderInputComponent.html":{},"components/HeaderComponent.html":{},"components/NameComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"components/PhnComponent.html":{},"components/PhoneNumberComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"components/RadioComponent.html":{},"components/SampleModalComponent.html":{},"modules/SharedCoreModule.html":{},"components/SinComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{},"components/XiconButtonComponent.html":{},"coverage.html":{},"overview.html":{}}}],["phonenumberregex",{"_index":4059,"title":{},"body":{"components/PhoneNumberComponent.html":{}}}],["pib",{"_index":2991,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["pierre",{"_index":2159,"title":{},"body":{"interfaces/CountryList.html":{}}}],["pipe",{"_index":2900,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["pipe(filter((evt",{"_index":2898,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["pipe(retrywhen(this.retrystrategy(32",{"_index":2946,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["pitcairn",{"_index":2122,"title":{},"body":{"interfaces/CountryList.html":{}}}],["pixel",{"_index":2790,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["place",{"_index":348,"title":{},"body":{"injectables/AbstractPageGuardService.html":{},"injectables/AbstractPgCheckService.html":{}}}],["placeholder",{"_index":1326,"title":{},"body":{"components/CityComponent.html":{},"interfaces/CountryList.html":{},"components/DropdownComponent.html":{},"components/PhnComponent.html":{},"components/PhoneNumberComponent.html":{},"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{},"components/SinComponent.html":{},"changelog.html":{}}}],["placeholders",{"_index":4789,"title":{},"body":{"changelog.html":{}}}],["places",{"_index":5376,"title":{},"body":{"todo.html":{}}}],["please",{"_index":2301,"title":{},"body":{"interfaces/CountryList.html":{},"interfaces/FileUploaderMsg.html":{},"interfaces/ISpaEnvResponse.html":{},"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{},"index.html":{}}}],["plurinational",{"_index":1799,"title":{},"body":{"interfaces/CountryList.html":{}}}],["plus",{"_index":809,"title":{},"body":{"interfaces/AddrLabelList.html":{},"interfaces/Maxlengths.html":{},"interfaces/ReadOnlyFields.html":{},"changelog.html":{}}}],["plw",{"_index":2107,"title":{},"body":{"interfaces/CountryList.html":{}}}],["png",{"_index":2114,"title":{},"body":{"interfaces/CountryList.html":{},"interfaces/FileUploaderMsg.html":{}}}],["po",{"_index":827,"title":{},"body":{"interfaces/AddrLabelList.html":{},"interfaces/Maxlengths.html":{},"interfaces/ReadOnlyFields.html":{}}}],["point",{"_index":517,"title":{},"body":{"classes/AbstractTestPage.html":{},"modules/CaptchaModule.html":{},"miscellaneous/enumerations.html":{}}}],["points",{"_index":4996,"title":{},"body":{"changelog.html":{},"additional-documentation/getting-started.html":{}}}],["pol",{"_index":2123,"title":{},"body":{"interfaces/CountryList.html":{}}}],["poland",{"_index":2124,"title":{},"body":{"interfaces/CountryList.html":{}}}],["pollyfills.ts",{"_index":5458,"title":{},"body":{"additional-documentation/local-development/schematics.html":{}}}],["polynesia",{"_index":1918,"title":{},"body":{"interfaces/CountryList.html":{}}}],["poor",{"_index":2331,"title":{},"body":{"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{}}}],["populated",{"_index":3068,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["porting",{"_index":3094,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["portugal",{"_index":2126,"title":{},"body":{"interfaces/CountryList.html":{}}}],["possible",{"_index":1313,"title":{},"body":{"components/CheckboxComponent.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"todo.html":{}}}],["post",{"_index":232,"title":{},"body":{"classes/AbstractHttpService.html":{},"injectables/CaptchaDataService.html":{},"interfaces/CommonLogMessage.html":{},"injectables/GeocoderService.html":{},"injectables/ServerPayload.html":{}}}],["post(url",{"_index":271,"title":{},"body":{"classes/AbstractHttpService.html":{},"injectables/GeocoderService.html":{}}}],["postal",{"_index":713,"title":{},"body":{"components/AccordionCommonComponent.html":{},"interfaces/AddrLabelList.html":{},"classes/Address.html":{},"components/ButtonComponent.html":{},"components/ButtonGroupComponent.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"components/ConfirmTemplateComponent.html":{},"components/CoreBreadcrumbComponent.html":{},"components/DatepickerComponent.html":{},"components/DropdownComponent.html":{},"components/EmailComponent.html":{},"components/ErrorContainerComponent.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/FullNameComponent.html":{},"components/GeocoderInputComponent.html":{},"components/HeaderComponent.html":{},"interfaces/Maxlengths.html":{},"components/NameComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"components/PhnComponent.html":{},"components/PhoneNumberComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"components/RadioComponent.html":{},"interfaces/ReadOnlyFields.html":{},"components/SampleModalComponent.html":{},"components/SinComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"directives/ValidateBcPostalDirective.html":{},"directives/ValidatePostalcodeDirective.html":{},"components/WizardProgressBarComponent.html":{},"components/XiconButtonComponent.html":{},"changelog.html":{}}}],["postal.directive",{"_index":4318,"title":{},"body":{"modules/SharedCoreModule.html":{}}}],["postal.directive.ts",{"_index":4427,"title":{},"body":{"directives/ValidateBcPostalDirective.html":{},"coverage.html":{}}}],["postal.directive.ts:27",{"_index":4429,"title":{},"body":{"directives/ValidateBcPostalDirective.html":{}}}],["postalcode",{"_index":762,"title":{},"body":{"interfaces/AddrLabelList.html":{},"interfaces/Maxlengths.html":{},"components/PostalCodeComponent.html":{},"interfaces/ReadOnlyFields.html":{},"directives/ValidateBcPostalDirective.html":{},"changelog.html":{}}}],["postalcode.directive",{"_index":4333,"title":{},"body":{"modules/SharedCoreModule.html":{}}}],["postalcode.directive.ts",{"_index":4443,"title":{},"body":{"directives/ValidatePostalcodeDirective.html":{},"coverage.html":{}}}],["postalcode.directive.ts:48",{"_index":4447,"title":{},"body":{"directives/ValidatePostalcodeDirective.html":{}}}],["postalcode.directive.ts:49",{"_index":4446,"title":{},"body":{"directives/ValidatePostalcodeDirective.html":{}}}],["postalcode.directive.ts:51",{"_index":4448,"title":{},"body":{"directives/ValidatePostalcodeDirective.html":{}}}],["postalcode_",{"_index":4125,"title":{},"body":{"components/PostalCodeComponent.html":{}}}],["postalcodebcregex",{"_index":978,"title":{},"body":{"classes/Address.html":{}}}],["postalcodecomponent",{"_index":712,"title":{"components/PostalCodeComponent.html":{}},"body":{"components/AccordionCommonComponent.html":{},"components/ButtonComponent.html":{},"components/ButtonGroupComponent.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"components/ConfirmTemplateComponent.html":{},"components/CoreBreadcrumbComponent.html":{},"components/DatepickerComponent.html":{},"components/DropdownComponent.html":{},"components/EmailComponent.html":{},"components/ErrorContainerComponent.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/FullNameComponent.html":{},"components/GeocoderInputComponent.html":{},"components/HeaderComponent.html":{},"components/NameComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"components/PhnComponent.html":{},"components/PhoneNumberComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"components/RadioComponent.html":{},"components/SampleModalComponent.html":{},"modules/SharedCoreModule.html":{},"components/SinComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{},"components/XiconButtonComponent.html":{},"changelog.html":{},"coverage.html":{},"overview.html":{}}}],["potential",{"_index":2944,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["potentially",{"_index":5426,"title":{},"body":{"additional-documentation/local-development/schematics.html":{}}}],["power",{"_index":2909,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["pr",{"_index":5136,"title":{},"body":{"changelog.html":{}}}],["pr#13",{"_index":5019,"title":{},"body":{"changelog.html":{}}}],["practice",{"_index":3438,"title":{},"body":{"components/HeaderComponent.html":{}}}],["pre",{"_index":4236,"title":{},"body":{"guards/RouteGuardService.html":{}}}],["preceding",{"_index":2862,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["prefixarrayofchar",{"_index":4100,"title":{},"body":{"components/PhoneNumberComponent.html":{}}}],["premium",{"_index":3563,"title":{},"body":{"interfaces/ISpaEnvResponse.html":{}}}],["prerequisites",{"_index":1231,"title":{},"body":{"injectables/CheckCompleteBaseService.html":{},"interfaces/PageListInterface.html":{}}}],["present",{"_index":3818,"title":{},"body":{"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{}}}],["preservesymlinks",{"_index":4926,"title":{},"body":{"changelog.html":{},"additional-documentation/local-development/schematics.html":{},"additional-documentation/local-development/components.html":{}}}],["prevent",{"_index":3906,"title":{},"body":{"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{}}}],["preversion",{"_index":5459,"title":{},"body":{"additional-documentation/local-development/schematics.html":{}}}],["previous",{"_index":1271,"title":{},"body":{"injectables/CheckCompleteBaseService.html":{},"guards/LoadPageGuardService.html":{},"interfaces/PageListInterface.html":{},"guards/RouteGuardService.html":{},"changelog.html":{}}}],["previously",{"_index":2967,"title":{},"body":{"interfaces/FileUploaderMsg.html":{},"changelog.html":{}}}],["pri",{"_index":2127,"title":{},"body":{"interfaces/CountryList.html":{}}}],["primarily",{"_index":4486,"title":{},"body":{"components/WizardProgressBarComponent.html":{}}}],["primary",{"_index":1082,"title":{},"body":{"components/ButtonComponent.html":{}}}],["prime",{"_index":507,"title":{},"body":{"classes/AbstractTestPage.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"changelog.html":{},"additional-documentation/local-development/components.html":{}}}],["prince",{"_index":4196,"title":{},"body":{"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{}}}],["principe",{"_index":2171,"title":{},"body":{"interfaces/CountryList.html":{}}}],["print",{"_index":1012,"title":{},"body":{"classes/Address.html":{}}}],["printed",{"_index":1009,"title":{},"body":{"classes/Address.html":{}}}],["prior",{"_index":5427,"title":{},"body":{"additional-documentation/local-development/schematics.html":{},"additional-documentation/local-development/components.html":{}}}],["priority",{"_index":5446,"title":{},"body":{"additional-documentation/local-development/schematics.html":{}}}],["privacy",{"_index":3557,"title":{},"body":{"interfaces/ISpaEnvResponse.html":{}}}],["private",{"_index":910,"title":{},"body":{"interfaces/AddrLabelList.html":{},"injectables/CaptchaDataService.html":{},"injectables/CheckCompleteBaseService.html":{},"interfaces/CommonLogMessage.html":{},"interfaces/CountryList.html":{},"injectables/DefaultPageGuardService.html":{},"components/EmailComponent.html":{},"interfaces/FileUploaderMsg.html":{},"components/FullNameComponent.html":{},"interfaces/FullNameErrorMsg.html":{},"components/GeocoderInputComponent.html":{},"components/HeaderComponent.html":{},"interfaces/ISpaEnvResponse.html":{},"guards/LoadPageGuardService.html":{},"interfaces/Maxlengths.html":{},"interfaces/PageList.html":{},"interfaces/PageListInterface.html":{},"injectables/PageStateService.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"components/PhnComponent.html":{},"components/PhoneNumberComponent.html":{},"components/PostalCodeComponent.html":{},"interfaces/ReadOnlyFields.html":{},"guards/RouteGuardService.html":{},"injectables/ServerPayload.html":{},"components/SinComponent.html":{},"components/ThumbnailComponent.html":{},"components/WizardProgressBarComponent.html":{}}}],["prk",{"_index":2002,"title":{},"body":{"interfaces/CountryList.html":{}}}],["probably",{"_index":3075,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["problem",{"_index":3791,"title":{},"body":{"components/PageSectionComponent.html":{}}}],["proceed",{"_index":1235,"title":{},"body":{"injectables/CheckCompleteBaseService.html":{},"interfaces/ISpaEnvResponse.html":{},"guards/LoadPageGuardService.html":{},"interfaces/PageListInterface.html":{},"guards/RouteGuardService.html":{}}}],["processing",{"_index":2737,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["processname",{"_index":3576,"title":{},"body":{"interfaces/ISpaEnvResponse.html":{}}}],["processresponse",{"_index":3415,"title":{},"body":{"injectables/GeocoderService.html":{}}}],["processresponse(obj",{"_index":3286,"title":{},"body":{"interfaces/GeoAddressResult.html":{},"injectables/GeocoderService.html":{}}}],["program",{"_index":1571,"title":{},"body":{"interfaces/CommonLogMessage.html":{},"miscellaneous/enumerations.html":{}}}],["programname",{"_index":1582,"title":{},"body":{"interfaces/CommonLogMessage.html":{}}}],["progress",{"_index":731,"title":{},"body":{"components/AccordionCommonComponent.html":{},"components/ButtonComponent.html":{},"components/ButtonGroupComponent.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"components/ConfirmTemplateComponent.html":{},"classes/Container.html":{},"components/CoreBreadcrumbComponent.html":{},"components/DatepickerComponent.html":{},"components/DropdownComponent.html":{},"components/EmailComponent.html":{},"components/ErrorContainerComponent.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/FullNameComponent.html":{},"components/GeocoderInputComponent.html":{},"components/HeaderComponent.html":{},"components/NameComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"components/PhnComponent.html":{},"components/PhoneNumberComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"components/RadioComponent.html":{},"components/SampleModalComponent.html":{},"modules/SharedCoreModule.html":{},"components/SinComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{},"interfaces/WizardProgressItem.html":{},"components/XiconButtonComponent.html":{},"coverage.html":{}}}],["progressbarmodule",{"_index":4275,"title":{},"body":{"modules/SharedCoreModule.html":{}}}],["progressbarmodule.forroot",{"_index":4343,"title":{},"body":{"modules/SharedCoreModule.html":{}}}],["progressevent",{"_index":3061,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["progressevt",{"_index":3060,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["progresssteps",{"_index":1695,"title":{},"body":{"classes/Container.html":{},"components/WizardProgressBarComponent.html":{},"interfaces/WizardProgressItem.html":{}}}],["project",{"_index":971,"title":{},"body":{"classes/Address.html":{},"classes/Person.html":{},"additional-documentation/local-development/schematics.html":{},"additional-documentation/local-development/components.html":{}}}],["project>architect>build>options",{"_index":5503,"title":{},"body":{"additional-documentation/local-development/components.html":{}}}],["projects",{"_index":5471,"title":{},"body":{"additional-documentation/local-development/schematics.html":{},"additional-documentation/local-development/components.html":{}}}],["projects/.../captcha.component.ts",{"_index":5301,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["projects/.../confirm",{"_index":5299,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["projects/.../datepicker.component.ts",{"_index":5304,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["projects/.../images.model.ts",{"_index":5302,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["projects/.../logger.service.ts",{"_index":5303,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["projects/common/captcha/src/captcha",{"_index":1136,"title":{},"body":{"injectables/CaptchaDataService.html":{},"injectables/ServerPayload.html":{},"coverage.html":{}}}],["projects/common/captcha/src/captcha.component.ts",{"_index":5153,"title":{},"body":{"coverage.html":{},"miscellaneous/enumerations.html":{}}}],["projects/common/captcha/src/captcha.module.ts",{"_index":1180,"title":{},"body":{"modules/CaptchaModule.html":{}}}],["projects/common/captcha/src/captcha.module.ts:27",{"_index":1182,"title":{},"body":{"modules/CaptchaModule.html":{}}}],["projects/common/e2e/src/abstract",{"_index":403,"title":{},"body":{"classes/AbstractTestPage.html":{},"coverage.html":{}}}],["projects/common/helpers/library",{"_index":3683,"title":{},"body":{"classes/MoHCommonLibraryError.html":{},"coverage.html":{}}}],["projects/common/helpers/scroll",{"_index":5158,"title":{},"body":{"coverage.html":{}}}],["projects/common/helpers/test",{"_index":5162,"title":{},"body":{"coverage.html":{}}}],["projects/common/lib/components/accordion/accordion.component.ts",{"_index":631,"title":{},"body":{"components/AccordionCommonComponent.html":{},"coverage.html":{}}}],["projects/common/lib/components/accordion/accordion.component.ts:21",{"_index":645,"title":{},"body":{"components/AccordionCommonComponent.html":{}}}],["projects/common/lib/components/accordion/accordion.component.ts:22",{"_index":644,"title":{},"body":{"components/AccordionCommonComponent.html":{}}}],["projects/common/lib/components/accordion/accordion.component.ts:24",{"_index":649,"title":{},"body":{"components/AccordionCommonComponent.html":{}}}],["projects/common/lib/components/accordion/accordion.component.ts:25",{"_index":646,"title":{},"body":{"components/AccordionCommonComponent.html":{}}}],["projects/common/lib/components/accordion/accordion.component.ts:26",{"_index":643,"title":{},"body":{"components/AccordionCommonComponent.html":{}}}],["projects/common/lib/components/address/address.component.ts",{"_index":757,"title":{},"body":{"interfaces/AddrLabelList.html":{},"interfaces/Maxlengths.html":{},"interfaces/ReadOnlyFields.html":{},"coverage.html":{}}}],["projects/common/lib/components/button",{"_index":1096,"title":{},"body":{"components/ButtonGroupComponent.html":{},"coverage.html":{}}}],["projects/common/lib/components/button/button.component.ts",{"_index":1055,"title":{},"body":{"components/ButtonComponent.html":{},"coverage.html":{}}}],["projects/common/lib/components/button/button.component.ts:36",{"_index":1084,"title":{},"body":{"components/ButtonComponent.html":{}}}],["projects/common/lib/components/button/button.component.ts:37",{"_index":1085,"title":{},"body":{"components/ButtonComponent.html":{}}}],["projects/common/lib/components/button/button.component.ts:38",{"_index":1086,"title":{},"body":{"components/ButtonComponent.html":{}}}],["projects/common/lib/components/button/button.component.ts:39",{"_index":1087,"title":{},"body":{"components/ButtonComponent.html":{}}}],["projects/common/lib/components/button/button.component.ts:40",{"_index":1081,"title":{},"body":{"components/ButtonComponent.html":{}}}],["projects/common/lib/components/button/button.component.ts:44",{"_index":1088,"title":{},"body":{"components/ButtonComponent.html":{}}}],["projects/common/lib/components/button/button.component.ts:47",{"_index":1090,"title":{},"body":{"components/ButtonComponent.html":{}}}],["projects/common/lib/components/checkbox/checkbox.component.ts",{"_index":1282,"title":{},"body":{"components/CheckboxComponent.html":{},"coverage.html":{}}}],["projects/common/lib/components/checkbox/checkbox.component.ts:31",{"_index":1312,"title":{},"body":{"components/CheckboxComponent.html":{}}}],["projects/common/lib/components/checkbox/checkbox.component.ts:36",{"_index":1290,"title":{},"body":{"components/CheckboxComponent.html":{}}}],["projects/common/lib/components/checkbox/checkbox.component.ts:37",{"_index":1297,"title":{},"body":{"components/CheckboxComponent.html":{}}}],["projects/common/lib/components/checkbox/checkbox.component.ts:38",{"_index":1294,"title":{},"body":{"components/CheckboxComponent.html":{}}}],["projects/common/lib/components/checkbox/checkbox.component.ts:39",{"_index":1296,"title":{},"body":{"components/CheckboxComponent.html":{}}}],["projects/common/lib/components/checkbox/checkbox.component.ts:40",{"_index":1295,"title":{},"body":{"components/CheckboxComponent.html":{}}}],["projects/common/lib/components/checkbox/checkbox.component.ts:41",{"_index":1298,"title":{},"body":{"components/CheckboxComponent.html":{}}}],["projects/common/lib/components/checkbox/checkbox.component.ts:42",{"_index":1299,"title":{},"body":{"components/CheckboxComponent.html":{}}}],["projects/common/lib/components/checkbox/checkbox.component.ts:43",{"_index":1309,"title":{},"body":{"components/CheckboxComponent.html":{}}}],["projects/common/lib/components/checkbox/checkbox.component.ts:46",{"_index":1307,"title":{},"body":{"components/CheckboxComponent.html":{}}}],["projects/common/lib/components/checkbox/checkbox.component.ts:47",{"_index":1289,"title":{},"body":{"components/CheckboxComponent.html":{}}}],["projects/common/lib/components/checkbox/checkbox.component.ts:49",{"_index":1311,"title":{},"body":{"components/CheckboxComponent.html":{}}}],["projects/common/lib/components/checkbox/checkbox.component.ts:56",{"_index":1301,"title":{},"body":{"components/CheckboxComponent.html":{}}}],["projects/common/lib/components/checkbox/checkbox.component.ts:64",{"_index":1305,"title":{},"body":{"components/CheckboxComponent.html":{}}}],["projects/common/lib/components/checkbox/checkbox.component.ts:71",{"_index":1300,"title":{},"body":{"components/CheckboxComponent.html":{}}}],["projects/common/lib/components/checkbox/checkbox.component.ts:75",{"_index":1302,"title":{},"body":{"components/CheckboxComponent.html":{}}}],["projects/common/lib/components/checkbox/checkbox.component.ts:79",{"_index":1303,"title":{},"body":{"components/CheckboxComponent.html":{}}}],["projects/common/lib/components/checkbox/checkbox.component.ts:83",{"_index":1306,"title":{},"body":{"components/CheckboxComponent.html":{}}}],["projects/common/lib/components/city/city.component.ts",{"_index":1320,"title":{},"body":{"components/CityComponent.html":{},"coverage.html":{}}}],["projects/common/lib/components/city/city.component.ts:14",{"_index":1330,"title":{},"body":{"components/CityComponent.html":{}}}],["projects/common/lib/components/city/city.component.ts:15",{"_index":1335,"title":{},"body":{"components/CityComponent.html":{}}}],["projects/common/lib/components/city/city.component.ts:16",{"_index":1333,"title":{},"body":{"components/CityComponent.html":{}}}],["projects/common/lib/components/city/city.component.ts:17",{"_index":1336,"title":{},"body":{"components/CityComponent.html":{}}}],["projects/common/lib/components/city/city.component.ts:20",{"_index":1337,"title":{},"body":{"components/CityComponent.html":{}}}],["projects/common/lib/components/city/city.component.ts:25",{"_index":1373,"title":{},"body":{"components/CityComponent.html":{}}}],["projects/common/lib/components/city/city.component.ts:29",{"_index":1342,"title":{},"body":{"components/CityComponent.html":{}}}],["projects/common/lib/components/city/city.component.ts:30",{"_index":1341,"title":{},"body":{"components/CityComponent.html":{}}}],["projects/common/lib/components/city/city.component.ts:32",{"_index":1367,"title":{},"body":{"components/CityComponent.html":{}}}],["projects/common/lib/components/city/city.component.ts:34",{"_index":1366,"title":{},"body":{"components/CityComponent.html":{}}}],["projects/common/lib/components/city/city.component.ts:38",{"_index":1329,"title":{},"body":{"components/CityComponent.html":{}}}],["projects/common/lib/components/city/city.component.ts:40",{"_index":1368,"title":{},"body":{"components/CityComponent.html":{}}}],["projects/common/lib/components/city/city.component.ts:47",{"_index":1343,"title":{},"body":{"components/CityComponent.html":{}}}],["projects/common/lib/components/city/city.component.ts:51",{"_index":1347,"title":{},"body":{"components/CityComponent.html":{}}}],["projects/common/lib/components/city/city.component.ts:57",{"_index":1345,"title":{},"body":{"components/CityComponent.html":{}}}],["projects/common/lib/components/city/city.component.ts:62",{"_index":1348,"title":{},"body":{"components/CityComponent.html":{}}}],["projects/common/lib/components/city/validate",{"_index":4433,"title":{},"body":{"directives/ValidateCityDirective.html":{},"coverage.html":{}}}],["projects/common/lib/components/confirm",{"_index":1669,"title":{},"body":{"components/ConfirmTemplateComponent.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{}}}],["projects/common/lib/components/consent",{"_index":3506,"title":{},"body":{"interfaces/ISpaEnvResponse.html":{},"coverage.html":{}}}],["projects/common/lib/components/core",{"_index":1718,"title":{},"body":{"components/CoreBreadcrumbComponent.html":{},"coverage.html":{}}}],["projects/common/lib/components/country/country.component.ts",{"_index":1740,"title":{},"body":{"interfaces/CountryList.html":{},"coverage.html":{}}}],["projects/common/lib/components/date/date",{"_index":2438,"title":{},"body":{"directives/DateFieldFormatDirective.html":{},"coverage.html":{}}}],["projects/common/lib/components/date/date.component.ts",{"_index":5183,"title":{},"body":{"coverage.html":{}}}],["projects/common/lib/components/datepicker/datepicker.component.ts",{"_index":2308,"title":{},"body":{"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{}}}],["projects/common/lib/components/datepicker/datepicker.component.ts:103",{"_index":2492,"title":{},"body":{"components/DatepickerComponent.html":{}}}],["projects/common/lib/components/datepicker/datepicker.component.ts:106",{"_index":2491,"title":{},"body":{"components/DatepickerComponent.html":{}}}],["projects/common/lib/components/datepicker/datepicker.component.ts:108",{"_index":2493,"title":{},"body":{"components/DatepickerComponent.html":{}}}],["projects/common/lib/components/datepicker/datepicker.component.ts:111",{"_index":2490,"title":{},"body":{"components/DatepickerComponent.html":{}}}],["projects/common/lib/components/datepicker/datepicker.component.ts:113",{"_index":2489,"title":{},"body":{"components/DatepickerComponent.html":{}}}],["projects/common/lib/components/datepicker/datepicker.component.ts:114",{"_index":2466,"title":{},"body":{"components/DatepickerComponent.html":{}}}],["projects/common/lib/components/datepicker/datepicker.component.ts:120",{"_index":2480,"title":{},"body":{"components/DatepickerComponent.html":{}}}],["projects/common/lib/components/datepicker/datepicker.component.ts:128",{"_index":2481,"title":{},"body":{"components/DatepickerComponent.html":{}}}],["projects/common/lib/components/datepicker/datepicker.component.ts:136",{"_index":2482,"title":{},"body":{"components/DatepickerComponent.html":{}}}],["projects/common/lib/components/datepicker/datepicker.component.ts:141",{"_index":2484,"title":{},"body":{"components/DatepickerComponent.html":{}}}],["projects/common/lib/components/datepicker/datepicker.component.ts:192",{"_index":2483,"title":{},"body":{"components/DatepickerComponent.html":{}}}],["projects/common/lib/components/datepicker/datepicker.component.ts:202",{"_index":2485,"title":{},"body":{"components/DatepickerComponent.html":{}}}],["projects/common/lib/components/datepicker/datepicker.component.ts:211",{"_index":2479,"title":{},"body":{"components/DatepickerComponent.html":{}}}],["projects/common/lib/components/datepicker/datepicker.component.ts:219",{"_index":2486,"title":{},"body":{"components/DatepickerComponent.html":{}}}],["projects/common/lib/components/datepicker/datepicker.component.ts:223",{"_index":2487,"title":{},"body":{"components/DatepickerComponent.html":{}}}],["projects/common/lib/components/datepicker/datepicker.component.ts:227",{"_index":2488,"title":{},"body":{"components/DatepickerComponent.html":{}}}],["projects/common/lib/components/datepicker/datepicker.component.ts:61",{"_index":2477,"title":{},"body":{"components/DatepickerComponent.html":{}}}],["projects/common/lib/components/datepicker/datepicker.component.ts:62",{"_index":2468,"title":{},"body":{"components/DatepickerComponent.html":{}}}],["projects/common/lib/components/datepicker/datepicker.component.ts:63",{"_index":2478,"title":{},"body":{"components/DatepickerComponent.html":{}}}],["projects/common/lib/components/datepicker/datepicker.component.ts:64",{"_index":2470,"title":{},"body":{"components/DatepickerComponent.html":{}}}],["projects/common/lib/components/datepicker/datepicker.component.ts:65",{"_index":2474,"title":{},"body":{"components/DatepickerComponent.html":{}}}],["projects/common/lib/components/datepicker/datepicker.component.ts:67",{"_index":2476,"title":{},"body":{"components/DatepickerComponent.html":{}}}],["projects/common/lib/components/datepicker/datepicker.component.ts:71",{"_index":2472,"title":{},"body":{"components/DatepickerComponent.html":{}}}],["projects/common/lib/components/datepicker/datepicker.component.ts:74",{"_index":2471,"title":{},"body":{"components/DatepickerComponent.html":{}}}],["projects/common/lib/components/datepicker/datepicker.component.ts:77",{"_index":2475,"title":{},"body":{"components/DatepickerComponent.html":{}}}],["projects/common/lib/components/datepicker/datepicker.component.ts:92",{"_index":2467,"title":{},"body":{"components/DatepickerComponent.html":{}}}],["projects/common/lib/components/datepicker/datepicker.component.ts:97",{"_index":2469,"title":{},"body":{"components/DatepickerComponent.html":{}}}],["projects/common/lib/components/datepicker/datepicker.component.ts:99",{"_index":2473,"title":{},"body":{"components/DatepickerComponent.html":{}}}],["projects/common/lib/components/dropdown/dropdown.component.ts",{"_index":2513,"title":{},"body":{"components/DropdownComponent.html":{},"coverage.html":{}}}],["projects/common/lib/components/dropdown/dropdown.component.ts:11",{"_index":2534,"title":{},"body":{"components/DropdownComponent.html":{}}}],["projects/common/lib/components/dropdown/dropdown.component.ts:13",{"_index":2525,"title":{},"body":{"components/DropdownComponent.html":{}}}],["projects/common/lib/components/dropdown/dropdown.component.ts:14",{"_index":2526,"title":{},"body":{"components/DropdownComponent.html":{}}}],["projects/common/lib/components/dropdown/dropdown.component.ts:15",{"_index":2527,"title":{},"body":{"components/DropdownComponent.html":{}}}],["projects/common/lib/components/dropdown/dropdown.component.ts:16",{"_index":2523,"title":{},"body":{"components/DropdownComponent.html":{}}}],["projects/common/lib/components/dropdown/dropdown.component.ts:17",{"_index":2521,"title":{},"body":{"components/DropdownComponent.html":{}}}],["projects/common/lib/components/dropdown/dropdown.component.ts:18",{"_index":2522,"title":{},"body":{"components/DropdownComponent.html":{}}}],["projects/common/lib/components/dropdown/dropdown.component.ts:19",{"_index":2528,"title":{},"body":{"components/DropdownComponent.html":{}}}],["projects/common/lib/components/dropdown/dropdown.component.ts:20",{"_index":2524,"title":{},"body":{"components/DropdownComponent.html":{}}}],["projects/common/lib/components/dropdown/dropdown.component.ts:22",{"_index":2532,"title":{},"body":{"components/DropdownComponent.html":{}}}],["projects/common/lib/components/dropdown/dropdown.component.ts:23",{"_index":2520,"title":{},"body":{"components/DropdownComponent.html":{}}}],["projects/common/lib/components/dropdown/dropdown.component.ts:25",{"_index":2533,"title":{},"body":{"components/DropdownComponent.html":{}}}],["projects/common/lib/components/dropdown/dropdown.component.ts:32",{"_index":2531,"title":{},"body":{"components/DropdownComponent.html":{}}}],["projects/common/lib/components/dropdown/dropdown.component.ts:36",{"_index":2529,"title":{},"body":{"components/DropdownComponent.html":{}}}],["projects/common/lib/components/dropdown/dropdown.component.ts:40",{"_index":2530,"title":{},"body":{"components/DropdownComponent.html":{}}}],["projects/common/lib/components/duplicate",{"_index":2535,"title":{},"body":{"directives/DuplicateCheckDirective.html":{},"coverage.html":{}}}],["projects/common/lib/components/email/email.component.ts",{"_index":2555,"title":{},"body":{"components/EmailComponent.html":{},"coverage.html":{}}}],["projects/common/lib/components/email/email.component.ts:23",{"_index":2564,"title":{},"body":{"components/EmailComponent.html":{}}}],["projects/common/lib/components/email/email.component.ts:24",{"_index":2568,"title":{},"body":{"components/EmailComponent.html":{}}}],["projects/common/lib/components/email/email.component.ts:25",{"_index":2566,"title":{},"body":{"components/EmailComponent.html":{}}}],["projects/common/lib/components/email/email.component.ts:28",{"_index":2569,"title":{},"body":{"components/EmailComponent.html":{}}}],["projects/common/lib/components/email/email.component.ts:33",{"_index":2586,"title":{},"body":{"components/EmailComponent.html":{}}}],["projects/common/lib/components/email/email.component.ts:37",{"_index":2571,"title":{},"body":{"components/EmailComponent.html":{}}}],["projects/common/lib/components/email/email.component.ts:38",{"_index":2570,"title":{},"body":{"components/EmailComponent.html":{}}}],["projects/common/lib/components/email/email.component.ts:40",{"_index":2585,"title":{},"body":{"components/EmailComponent.html":{}}}],["projects/common/lib/components/email/email.component.ts:42",{"_index":2581,"title":{},"body":{"components/EmailComponent.html":{}}}],["projects/common/lib/components/email/email.component.ts:47",{"_index":2563,"title":{},"body":{"components/EmailComponent.html":{}}}],["projects/common/lib/components/email/email.component.ts:49",{"_index":2582,"title":{},"body":{"components/EmailComponent.html":{}}}],["projects/common/lib/components/email/email.component.ts:56",{"_index":2572,"title":{},"body":{"components/EmailComponent.html":{}}}],["projects/common/lib/components/email/email.component.ts:62",{"_index":2574,"title":{},"body":{"components/EmailComponent.html":{}}}],["projects/common/lib/components/email/email.component.ts:68",{"_index":2573,"title":{},"body":{"components/EmailComponent.html":{}}}],["projects/common/lib/components/email/email.component.ts:73",{"_index":2576,"title":{},"body":{"components/EmailComponent.html":{}}}],["projects/common/lib/components/email/email.component.ts:79",{"_index":2575,"title":{},"body":{"components/EmailComponent.html":{}}}],["projects/common/lib/components/error",{"_index":2594,"title":{},"body":{"components/ErrorContainerComponent.html":{},"coverage.html":{}}}],["projects/common/lib/components/file",{"_index":2612,"title":{},"body":{"interfaces/FileUploaderMsg.html":{},"coverage.html":{}}}],["projects/common/lib/components/form",{"_index":3136,"title":{},"body":{"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"coverage.html":{}}}],["projects/common/lib/components/full",{"_index":3186,"title":{},"body":{"components/FullNameComponent.html":{},"interfaces/FullNameErrorMsg.html":{},"coverage.html":{}}}],["projects/common/lib/components/geocoder",{"_index":3301,"title":{},"body":{"components/GeocoderInputComponent.html":{},"coverage.html":{}}}],["projects/common/lib/components/header/header.component.ts",{"_index":3430,"title":{},"body":{"components/HeaderComponent.html":{},"coverage.html":{}}}],["projects/common/lib/components/header/header.component.ts:20",{"_index":3455,"title":{},"body":{"components/HeaderComponent.html":{}}}],["projects/common/lib/components/header/header.component.ts:21",{"_index":3456,"title":{},"body":{"components/HeaderComponent.html":{}}}],["projects/common/lib/components/header/header.component.ts:22",{"_index":3454,"title":{},"body":{"components/HeaderComponent.html":{}}}],["projects/common/lib/components/header/header.component.ts:24",{"_index":3462,"title":{},"body":{"components/HeaderComponent.html":{}}}],["projects/common/lib/components/header/header.component.ts:25",{"_index":3452,"title":{},"body":{"components/HeaderComponent.html":{}}}],["projects/common/lib/components/header/header.component.ts:30",{"_index":3458,"title":{},"body":{"components/HeaderComponent.html":{}}}],["projects/common/lib/components/header/header.component.ts:39",{"_index":3460,"title":{},"body":{"components/HeaderComponent.html":{}}}],["projects/common/lib/components/header/header.component.ts:43",{"_index":3461,"title":{},"body":{"components/HeaderComponent.html":{}}}],["projects/common/lib/components/header/header.component.ts:51",{"_index":3457,"title":{},"body":{"components/HeaderComponent.html":{}}}],["projects/common/lib/components/name/name.component.ts",{"_index":3694,"title":{},"body":{"components/NameComponent.html":{},"coverage.html":{}}}],["projects/common/lib/components/name/name.component.ts:21",{"_index":3698,"title":{},"body":{"components/NameComponent.html":{}}}],["projects/common/lib/components/name/name.component.ts:22",{"_index":3699,"title":{},"body":{"components/NameComponent.html":{}}}],["projects/common/lib/components/name/name.component.ts:23",{"_index":3702,"title":{},"body":{"components/NameComponent.html":{}}}],["projects/common/lib/components/name/name.component.ts:24",{"_index":3701,"title":{},"body":{"components/NameComponent.html":{}}}],["projects/common/lib/components/name/name.component.ts:27",{"_index":3703,"title":{},"body":{"components/NameComponent.html":{}}}],["projects/common/lib/components/name/name.component.ts:32",{"_index":3716,"title":{},"body":{"components/NameComponent.html":{}}}],["projects/common/lib/components/name/name.component.ts:36",{"_index":3705,"title":{},"body":{"components/NameComponent.html":{}}}],["projects/common/lib/components/name/name.component.ts:37",{"_index":3704,"title":{},"body":{"components/NameComponent.html":{}}}],["projects/common/lib/components/name/name.component.ts:39",{"_index":3715,"title":{},"body":{"components/NameComponent.html":{}}}],["projects/common/lib/components/name/name.component.ts:41",{"_index":3713,"title":{},"body":{"components/NameComponent.html":{}}}],["projects/common/lib/components/name/name.component.ts:42",{"_index":3697,"title":{},"body":{"components/NameComponent.html":{}}}],["projects/common/lib/components/name/name.component.ts:44",{"_index":3714,"title":{},"body":{"components/NameComponent.html":{}}}],["projects/common/lib/components/name/name.component.ts:51",{"_index":3708,"title":{},"body":{"components/NameComponent.html":{}}}],["projects/common/lib/components/name/name.component.ts:56",{"_index":3707,"title":{},"body":{"components/NameComponent.html":{}}}],["projects/common/lib/components/name/name.component.ts:61",{"_index":3712,"title":{},"body":{"components/NameComponent.html":{}}}],["projects/common/lib/components/name/name.component.ts:68",{"_index":3709,"title":{},"body":{"components/NameComponent.html":{}}}],["projects/common/lib/components/name/name.component.ts:73",{"_index":3710,"title":{},"body":{"components/NameComponent.html":{}}}],["projects/common/lib/components/name/name.component.ts:77",{"_index":3711,"title":{},"body":{"components/NameComponent.html":{}}}],["projects/common/lib/components/name/name.component.ts:81",{"_index":3718,"title":{},"body":{"components/NameComponent.html":{}}}],["projects/common/lib/components/name/validate",{"_index":4439,"title":{},"body":{"directives/ValidateNameDirective.html":{},"coverage.html":{}}}],["projects/common/lib/components/page",{"_index":3723,"title":{},"body":{"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"coverage.html":{}}}],["projects/common/lib/components/password/password.component.ts",{"_index":3811,"title":{},"body":{"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"coverage.html":{}}}],["projects/common/lib/components/password/password.component.ts:118",{"_index":3861,"title":{},"body":{"components/PasswordComponent.html":{}}}],["projects/common/lib/components/password/password.component.ts:131",{"_index":3866,"title":{},"body":{"components/PasswordComponent.html":{}}}],["projects/common/lib/components/password/password.component.ts:135",{"_index":3864,"title":{},"body":{"components/PasswordComponent.html":{}}}],["projects/common/lib/components/password/password.component.ts:142",{"_index":3853,"title":{},"body":{"components/PasswordComponent.html":{}}}],["projects/common/lib/components/password/password.component.ts:157",{"_index":3855,"title":{},"body":{"components/PasswordComponent.html":{}}}],["projects/common/lib/components/password/password.component.ts:58",{"_index":3841,"title":{},"body":{"components/PasswordComponent.html":{}}}],["projects/common/lib/components/password/password.component.ts:59",{"_index":3840,"title":{},"body":{"components/PasswordComponent.html":{}}}],["projects/common/lib/components/password/password.component.ts:60",{"_index":3839,"title":{},"body":{"components/PasswordComponent.html":{}}}],["projects/common/lib/components/password/password.component.ts:61",{"_index":3847,"title":{},"body":{"components/PasswordComponent.html":{}}}],["projects/common/lib/components/password/password.component.ts:62",{"_index":3848,"title":{},"body":{"components/PasswordComponent.html":{}}}],["projects/common/lib/components/password/password.component.ts:63",{"_index":3844,"title":{},"body":{"components/PasswordComponent.html":{}}}],["projects/common/lib/components/password/password.component.ts:64",{"_index":3843,"title":{},"body":{"components/PasswordComponent.html":{}}}],["projects/common/lib/components/password/password.component.ts:65",{"_index":3838,"title":{},"body":{"components/PasswordComponent.html":{}}}],["projects/common/lib/components/password/password.component.ts:66",{"_index":3849,"title":{},"body":{"components/PasswordComponent.html":{}}}],["projects/common/lib/components/password/password.component.ts:67",{"_index":3846,"title":{},"body":{"components/PasswordComponent.html":{}}}],["projects/common/lib/components/password/password.component.ts:71",{"_index":3851,"title":{},"body":{"components/PasswordComponent.html":{}}}],["projects/common/lib/components/password/password.component.ts:72",{"_index":3850,"title":{},"body":{"components/PasswordComponent.html":{}}}],["projects/common/lib/components/password/password.component.ts:75",{"_index":3870,"title":{},"body":{"components/PasswordComponent.html":{}}}],["projects/common/lib/components/password/password.component.ts:76",{"_index":3873,"title":{},"body":{"components/PasswordComponent.html":{}}}],["projects/common/lib/components/password/password.component.ts:77",{"_index":3875,"title":{},"body":{"components/PasswordComponent.html":{}}}],["projects/common/lib/components/password/password.component.ts:79",{"_index":3869,"title":{},"body":{"components/PasswordComponent.html":{}}}],["projects/common/lib/components/password/password.component.ts:82",{"_index":3874,"title":{},"body":{"components/PasswordComponent.html":{}}}],["projects/common/lib/components/password/password.component.ts:83",{"_index":3871,"title":{},"body":{"components/PasswordComponent.html":{}}}],["projects/common/lib/components/password/password.component.ts:84",{"_index":3872,"title":{},"body":{"components/PasswordComponent.html":{}}}],["projects/common/lib/components/password/password.component.ts:85",{"_index":3836,"title":{},"body":{"components/PasswordComponent.html":{}}}],["projects/common/lib/components/password/password.component.ts:92",{"_index":3862,"title":{},"body":{"components/PasswordComponent.html":{}}}],["projects/common/lib/components/phn/phn.component.ts",{"_index":3983,"title":{},"body":{"components/PhnComponent.html":{},"coverage.html":{}}}],["projects/common/lib/components/phn/phn.component.ts:14",{"_index":3991,"title":{},"body":{"components/PhnComponent.html":{}}}],["projects/common/lib/components/phn/phn.component.ts:15",{"_index":3996,"title":{},"body":{"components/PhnComponent.html":{}}}],["projects/common/lib/components/phn/phn.component.ts:16",{"_index":3993,"title":{},"body":{"components/PhnComponent.html":{}}}],["projects/common/lib/components/phn/phn.component.ts:19",{"_index":3990,"title":{},"body":{"components/PhnComponent.html":{}}}],["projects/common/lib/components/phn/phn.component.ts:21",{"_index":4008,"title":{},"body":{"components/PhnComponent.html":{}}}],["projects/common/lib/components/phn/phn.component.ts:28",{"_index":3997,"title":{},"body":{"components/PhnComponent.html":{}}}],["projects/common/lib/components/phn/phn.component.ts:33",{"_index":4011,"title":{},"body":{"components/PhnComponent.html":{}}}],["projects/common/lib/components/phn/phn.component.ts:37",{"_index":3999,"title":{},"body":{"components/PhnComponent.html":{}}}],["projects/common/lib/components/phn/phn.component.ts:38",{"_index":3998,"title":{},"body":{"components/PhnComponent.html":{}}}],["projects/common/lib/components/phn/phn.component.ts:40",{"_index":4010,"title":{},"body":{"components/PhnComponent.html":{}}}],["projects/common/lib/components/phn/phn.component.ts:41",{"_index":3989,"title":{},"body":{"components/PhnComponent.html":{}}}],["projects/common/lib/components/phn/phn.component.ts:43",{"_index":4009,"title":{},"body":{"components/PhnComponent.html":{}}}],["projects/common/lib/components/phn/phn.component.ts:53",{"_index":4000,"title":{},"body":{"components/PhnComponent.html":{}}}],["projects/common/lib/components/phn/phn.component.ts:59",{"_index":4002,"title":{},"body":{"components/PhnComponent.html":{}}}],["projects/common/lib/components/phn/phn.component.ts:68",{"_index":4001,"title":{},"body":{"components/PhnComponent.html":{}}}],["projects/common/lib/components/phn/phn.component.ts:73",{"_index":4005,"title":{},"body":{"components/PhnComponent.html":{}}}],["projects/common/lib/components/phn/phn.component.ts:79",{"_index":4004,"title":{},"body":{"components/PhnComponent.html":{}}}],["projects/common/lib/components/phn/phn.component.ts:88",{"_index":4003,"title":{},"body":{"components/PhnComponent.html":{}}}],["projects/common/lib/components/phone",{"_index":4053,"title":{},"body":{"components/PhoneNumberComponent.html":{},"coverage.html":{}}}],["projects/common/lib/components/postal",{"_index":4114,"title":{},"body":{"components/PostalCodeComponent.html":{},"directives/ValidateBcPostalDirective.html":{},"directives/ValidatePostalcodeDirective.html":{},"coverage.html":{}}}],["projects/common/lib/components/province/province.component.ts",{"_index":4160,"title":{},"body":{"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{},"coverage.html":{}}}],["projects/common/lib/components/province/province.component.ts:43",{"_index":4164,"title":{},"body":{"components/ProvinceComponent.html":{}}}],["projects/common/lib/components/province/province.component.ts:44",{"_index":4169,"title":{},"body":{"components/ProvinceComponent.html":{}}}],["projects/common/lib/components/province/province.component.ts:45",{"_index":4166,"title":{},"body":{"components/ProvinceComponent.html":{}}}],["projects/common/lib/components/province/province.component.ts:46",{"_index":4170,"title":{},"body":{"components/ProvinceComponent.html":{}}}],["projects/common/lib/components/province/province.component.ts:47",{"_index":4168,"title":{},"body":{"components/ProvinceComponent.html":{}}}],["projects/common/lib/components/province/province.component.ts:48",{"_index":4167,"title":{},"body":{"components/ProvinceComponent.html":{}}}],["projects/common/lib/components/province/province.component.ts:49",{"_index":4171,"title":{},"body":{"components/ProvinceComponent.html":{}}}],["projects/common/lib/components/province/province.component.ts:52",{"_index":4172,"title":{},"body":{"components/ProvinceComponent.html":{}}}],["projects/common/lib/components/province/province.component.ts:57",{"_index":4182,"title":{},"body":{"components/ProvinceComponent.html":{}}}],["projects/common/lib/components/province/province.component.ts:61",{"_index":4174,"title":{},"body":{"components/ProvinceComponent.html":{}}}],["projects/common/lib/components/province/province.component.ts:62",{"_index":4173,"title":{},"body":{"components/ProvinceComponent.html":{}}}],["projects/common/lib/components/province/province.component.ts:64",{"_index":4181,"title":{},"body":{"components/ProvinceComponent.html":{}}}],["projects/common/lib/components/province/province.component.ts:66",{"_index":4179,"title":{},"body":{"components/ProvinceComponent.html":{}}}],["projects/common/lib/components/province/province.component.ts:70",{"_index":4163,"title":{},"body":{"components/ProvinceComponent.html":{}}}],["projects/common/lib/components/province/province.component.ts:73",{"_index":4180,"title":{},"body":{"components/ProvinceComponent.html":{}}}],["projects/common/lib/components/province/province.component.ts:80",{"_index":4175,"title":{},"body":{"components/ProvinceComponent.html":{}}}],["projects/common/lib/components/province/province.component.ts:84",{"_index":4177,"title":{},"body":{"components/ProvinceComponent.html":{}}}],["projects/common/lib/components/province/province.component.ts:92",{"_index":4176,"title":{},"body":{"components/ProvinceComponent.html":{}}}],["projects/common/lib/components/province/province.component.ts:97",{"_index":4178,"title":{},"body":{"components/ProvinceComponent.html":{}}}],["projects/common/lib/components/radio/radio.component.ts",{"_index":3483,"title":{},"body":{"interfaces/IRadioItems.html":{},"components/RadioComponent.html":{},"coverage.html":{}}}],["projects/common/lib/components/radio/radio.component.ts:101",{"_index":4219,"title":{},"body":{"components/RadioComponent.html":{}}}],["projects/common/lib/components/radio/radio.component.ts:105",{"_index":4221,"title":{},"body":{"components/RadioComponent.html":{}}}],["projects/common/lib/components/radio/radio.component.ts:54",{"_index":4223,"title":{},"body":{"components/RadioComponent.html":{}}}],["projects/common/lib/components/radio/radio.component.ts:55",{"_index":4222,"title":{},"body":{"components/RadioComponent.html":{}}}],["projects/common/lib/components/radio/radio.component.ts:59",{"_index":4215,"title":{},"body":{"components/RadioComponent.html":{}}}],["projects/common/lib/components/radio/radio.component.ts:64",{"_index":4214,"title":{},"body":{"components/RadioComponent.html":{}}}],["projects/common/lib/components/radio/radio.component.ts:66",{"_index":4216,"title":{},"body":{"components/RadioComponent.html":{}}}],["projects/common/lib/components/radio/radio.component.ts:69",{"_index":4225,"title":{},"body":{"components/RadioComponent.html":{}}}],["projects/common/lib/components/radio/radio.component.ts:73",{"_index":4212,"title":{},"body":{"components/RadioComponent.html":{}}}],["projects/common/lib/components/radio/radio.component.ts:74",{"_index":4213,"title":{},"body":{"components/RadioComponent.html":{}}}],["projects/common/lib/components/radio/radio.component.ts:76",{"_index":4211,"title":{},"body":{"components/RadioComponent.html":{}}}],["projects/common/lib/components/radio/radio.component.ts:78",{"_index":4224,"title":{},"body":{"components/RadioComponent.html":{}}}],["projects/common/lib/components/radio/radio.component.ts:85",{"_index":4217,"title":{},"body":{"components/RadioComponent.html":{}}}],["projects/common/lib/components/radio/radio.component.ts:89",{"_index":4220,"title":{},"body":{"components/RadioComponent.html":{}}}],["projects/common/lib/components/radio/radio.component.ts:97",{"_index":4218,"title":{},"body":{"components/RadioComponent.html":{}}}],["projects/common/lib/components/sample",{"_index":4242,"title":{},"body":{"interfaces/SampleImageInterface.html":{},"components/SampleModalComponent.html":{},"coverage.html":{}}}],["projects/common/lib/components/sin/sin.component.ts",{"_index":4355,"title":{},"body":{"components/SinComponent.html":{},"coverage.html":{}}}],["projects/common/lib/components/sin/sin.component.ts:24",{"_index":4375,"title":{},"body":{"components/SinComponent.html":{}}}],["projects/common/lib/components/sin/sin.component.ts:30",{"_index":4378,"title":{},"body":{"components/SinComponent.html":{}}}],["projects/common/lib/components/sin/sin.component.ts:31",{"_index":4377,"title":{},"body":{"components/SinComponent.html":{}}}],["projects/common/lib/components/sin/sin.component.ts:33",{"_index":4362,"title":{},"body":{"components/SinComponent.html":{}}}],["projects/common/lib/components/sin/sin.component.ts:34",{"_index":4365,"title":{},"body":{"components/SinComponent.html":{}}}],["projects/common/lib/components/sin/sin.component.ts:35",{"_index":4366,"title":{},"body":{"components/SinComponent.html":{}}}],["projects/common/lib/components/sin/sin.component.ts:36",{"_index":4364,"title":{},"body":{"components/SinComponent.html":{}}}],["projects/common/lib/components/sin/sin.component.ts:39",{"_index":4367,"title":{},"body":{"components/SinComponent.html":{}}}],["projects/common/lib/components/sin/sin.component.ts:45",{"_index":4379,"title":{},"body":{"components/SinComponent.html":{}}}],["projects/common/lib/components/sin/sin.component.ts:49",{"_index":4368,"title":{},"body":{"components/SinComponent.html":{}}}],["projects/common/lib/components/sin/sin.component.ts:50",{"_index":4360,"title":{},"body":{"components/SinComponent.html":{}}}],["projects/common/lib/components/sin/sin.component.ts:52",{"_index":4376,"title":{},"body":{"components/SinComponent.html":{}}}],["projects/common/lib/components/sin/sin.component.ts:62",{"_index":4369,"title":{},"body":{"components/SinComponent.html":{}}}],["projects/common/lib/components/sin/sin.component.ts:68",{"_index":4371,"title":{},"body":{"components/SinComponent.html":{}}}],["projects/common/lib/components/sin/sin.component.ts:77",{"_index":4370,"title":{},"body":{"components/SinComponent.html":{}}}],["projects/common/lib/components/sin/sin.component.ts:82",{"_index":4374,"title":{},"body":{"components/SinComponent.html":{}}}],["projects/common/lib/components/sin/sin.component.ts:88",{"_index":4372,"title":{},"body":{"components/SinComponent.html":{}}}],["projects/common/lib/components/sin/sin.component.ts:97",{"_index":4373,"title":{},"body":{"components/SinComponent.html":{}}}],["projects/common/lib/components/street/street.component.ts",{"_index":5203,"title":{},"body":{"coverage.html":{}}}],["projects/common/lib/components/street/validate",{"_index":4465,"title":{},"body":{"directives/ValidateStreetDirective.html":{},"coverage.html":{}}}],["projects/common/lib/components/thumbnail/thumbnail.component.ts",{"_index":4388,"title":{},"body":{"components/ThumbnailComponent.html":{},"coverage.html":{}}}],["projects/common/lib/components/thumbnail/thumbnail.component.ts:13",{"_index":4399,"title":{},"body":{"components/ThumbnailComponent.html":{}}}],["projects/common/lib/components/thumbnail/thumbnail.component.ts:14",{"_index":4400,"title":{},"body":{"components/ThumbnailComponent.html":{}}}],["projects/common/lib/components/thumbnail/thumbnail.component.ts:15",{"_index":4401,"title":{},"body":{"components/ThumbnailComponent.html":{}}}],["projects/common/lib/components/thumbnail/thumbnail.component.ts:16",{"_index":4407,"title":{},"body":{"components/ThumbnailComponent.html":{}}}],["projects/common/lib/components/thumbnail/thumbnail.component.ts:18",{"_index":4398,"title":{},"body":{"components/ThumbnailComponent.html":{}}}],["projects/common/lib/components/thumbnail/thumbnail.component.ts:23",{"_index":4409,"title":{},"body":{"components/ThumbnailComponent.html":{}}}],["projects/common/lib/components/thumbnail/thumbnail.component.ts:24",{"_index":4405,"title":{},"body":{"components/ThumbnailComponent.html":{}}}],["projects/common/lib/components/thumbnail/thumbnail.component.ts:42",{"_index":4403,"title":{},"body":{"components/ThumbnailComponent.html":{}}}],["projects/common/lib/components/thumbnail/thumbnail.component.ts:48",{"_index":4406,"title":{},"body":{"components/ThumbnailComponent.html":{}}}],["projects/common/lib/components/thumbnail/thumbnail.component.ts:53",{"_index":4404,"title":{},"body":{"components/ThumbnailComponent.html":{}}}],["projects/common/lib/components/toggle/toggle.component.ts",{"_index":4420,"title":{},"body":{"components/ToggleComponent.html":{},"coverage.html":{}}}],["projects/common/lib/components/toggle/toggle.component.ts:11",{"_index":4424,"title":{},"body":{"components/ToggleComponent.html":{}}}],["projects/common/lib/components/toggle/toggle.component.ts:12",{"_index":4425,"title":{},"body":{"components/ToggleComponent.html":{}}}],["projects/common/lib/components/toggle/toggle.component.ts:13",{"_index":4423,"title":{},"body":{"components/ToggleComponent.html":{}}}],["projects/common/lib/components/toggle/toggle.component.ts:19",{"_index":4426,"title":{},"body":{"components/ToggleComponent.html":{}}}],["projects/common/lib/components/validate",{"_index":4460,"title":{},"body":{"directives/ValidateRegionDirective.html":{},"coverage.html":{}}}],["projects/common/lib/components/wizard",{"_index":4468,"title":{},"body":{"components/WizardProgressBarComponent.html":{},"coverage.html":{}}}],["projects/common/lib/components/xicon",{"_index":4543,"title":{},"body":{"components/XiconButtonComponent.html":{},"coverage.html":{}}}],["projects/common/lib/models/abstract",{"_index":6,"title":{},"body":{"classes/AbstractBaseForm.html":{},"classes/AbstractForm.html":{},"classes/AbstractFormControl.html":{},"classes/AbstractReactForm.html":{},"coverage.html":{}}}],["projects/common/lib/models/address.model.ts",{"_index":970,"title":{},"body":{"classes/Address.html":{},"coverage.html":{}}}],["projects/common/lib/models/address.model.ts:11",{"_index":983,"title":{},"body":{"classes/Address.html":{}}}],["projects/common/lib/models/address.model.ts:13",{"_index":986,"title":{},"body":{"classes/Address.html":{}}}],["projects/common/lib/models/address.model.ts:14",{"_index":991,"title":{},"body":{"classes/Address.html":{}}}],["projects/common/lib/models/address.model.ts:15",{"_index":988,"title":{},"body":{"classes/Address.html":{}}}],["projects/common/lib/models/address.model.ts:16",{"_index":999,"title":{},"body":{"classes/Address.html":{}}}],["projects/common/lib/models/address.model.ts:17",{"_index":987,"title":{},"body":{"classes/Address.html":{}}}],["projects/common/lib/models/address.model.ts:18",{"_index":989,"title":{},"body":{"classes/Address.html":{}}}],["projects/common/lib/models/address.model.ts:19",{"_index":990,"title":{},"body":{"classes/Address.html":{}}}],["projects/common/lib/models/address.model.ts:23",{"_index":1020,"title":{},"body":{"classes/Address.html":{}}}],["projects/common/lib/models/address.model.ts:27",{"_index":1022,"title":{},"body":{"classes/Address.html":{}}}],["projects/common/lib/models/address.model.ts:36",{"_index":1005,"title":{},"body":{"classes/Address.html":{}}}],["projects/common/lib/models/address.model.ts:44",{"_index":1002,"title":{},"body":{"classes/Address.html":{}}}],["projects/common/lib/models/address.model.ts:50",{"_index":1024,"title":{},"body":{"classes/Address.html":{}}}],["projects/common/lib/models/address.model.ts:61",{"_index":1001,"title":{},"body":{"classes/Address.html":{}}}],["projects/common/lib/models/address.model.ts:7",{"_index":998,"title":{},"body":{"classes/Address.html":{}}}],["projects/common/lib/models/address.model.ts:9",{"_index":982,"title":{},"body":{"classes/Address.html":{}}}],["projects/common/lib/models/base.ts",{"_index":1048,"title":{},"body":{"classes/Base.html":{},"coverage.html":{}}}],["projects/common/lib/models/base.ts:11",{"_index":1054,"title":{},"body":{"classes/Base.html":{}}}],["projects/common/lib/models/container.ts",{"_index":1692,"title":{},"body":{"classes/Container.html":{},"interfaces/WizardProgressItem.html":{},"coverage.html":{}}}],["projects/common/lib/models/container.ts:12",{"_index":1699,"title":{},"body":{"classes/Container.html":{}}}],["projects/common/lib/models/container.ts:18",{"_index":1702,"title":{},"body":{"classes/Container.html":{}}}],["projects/common/lib/models/container.ts:22",{"_index":1708,"title":{},"body":{"classes/Container.html":{}}}],["projects/common/lib/models/error",{"_index":2601,"title":{},"body":{"interfaces/ErrorMessage.html":{},"coverage.html":{}}}],["projects/common/lib/models/images.model.ts",{"_index":1455,"title":{},"body":{"interfaces/CommonAttachmentJson.html":{},"classes/CommonImage.html":{},"classes/CommonImageProcessingError.html":{},"interfaces/CommonImageScaleFactors.html":{},"classes/CommonImageScaleFactorsImpl.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{}}}],["projects/common/lib/models/images.model.ts:105",{"_index":1553,"title":{},"body":{"classes/CommonImageScaleFactorsImpl.html":{}}}],["projects/common/lib/models/images.model.ts:16",{"_index":1546,"title":{},"body":{"classes/CommonImageProcessingError.html":{}}}],["projects/common/lib/models/images.model.ts:17",{"_index":1548,"title":{},"body":{"classes/CommonImageProcessingError.html":{}}}],["projects/common/lib/models/images.model.ts:18",{"_index":1545,"title":{},"body":{"classes/CommonImageProcessingError.html":{}}}],["projects/common/lib/models/images.model.ts:20",{"_index":1547,"title":{},"body":{"classes/CommonImageProcessingError.html":{}}}],["projects/common/lib/models/images.model.ts:30",{"_index":1530,"title":{},"body":{"classes/CommonImage.html":{}}}],["projects/common/lib/models/images.model.ts:47",{"_index":1535,"title":{},"body":{"classes/CommonImage.html":{}}}],["projects/common/lib/models/images.model.ts:48",{"_index":1533,"title":{},"body":{"classes/CommonImage.html":{}}}],["projects/common/lib/models/images.model.ts:54",{"_index":1532,"title":{},"body":{"classes/CommonImage.html":{}}}],["projects/common/lib/models/images.model.ts:56",{"_index":1540,"title":{},"body":{"classes/CommonImage.html":{}}}],["projects/common/lib/models/images.model.ts:57",{"_index":1542,"title":{},"body":{"classes/CommonImage.html":{}}}],["projects/common/lib/models/images.model.ts:58",{"_index":1541,"title":{},"body":{"classes/CommonImage.html":{}}}],["projects/common/lib/models/images.model.ts:59",{"_index":1538,"title":{},"body":{"classes/CommonImage.html":{}}}],["projects/common/lib/models/images.model.ts:60",{"_index":1539,"title":{},"body":{"classes/CommonImage.html":{}}}],["projects/common/lib/models/images.model.ts:61",{"_index":1537,"title":{},"body":{"classes/CommonImage.html":{}}}],["projects/common/lib/models/images.model.ts:64",{"_index":1536,"title":{},"body":{"classes/CommonImage.html":{}}}],["projects/common/lib/models/images.model.ts:66",{"_index":1534,"title":{},"body":{"classes/CommonImage.html":{}}}],["projects/common/lib/models/images.model.ts:67",{"_index":1531,"title":{},"body":{"classes/CommonImage.html":{}}}],["projects/common/lib/models/images.model.ts:73",{"_index":1543,"title":{},"body":{"classes/CommonImage.html":{}}}],["projects/common/lib/models/images.model.ts:93",{"_index":1550,"title":{},"body":{"interfaces/CommonImageScaleFactors.html":{}}}],["projects/common/lib/models/images.model.ts:97",{"_index":1552,"title":{},"body":{"classes/CommonImageScaleFactorsImpl.html":{}}}],["projects/common/lib/models/images.model.ts:98",{"_index":1551,"title":{},"body":{"classes/CommonImageScaleFactorsImpl.html":{}}}],["projects/common/lib/models/mask.constants.ts",{"_index":5220,"title":{},"body":{"coverage.html":{}}}],["projects/common/lib/models/person.model.ts",{"_index":3923,"title":{},"body":{"classes/Person.html":{},"coverage.html":{}}}],["projects/common/lib/models/person.model.ts:13",{"_index":3936,"title":{},"body":{"classes/Person.html":{}}}],["projects/common/lib/models/person.model.ts:14",{"_index":3938,"title":{},"body":{"classes/Person.html":{}}}],["projects/common/lib/models/person.model.ts:15",{"_index":3937,"title":{},"body":{"classes/Person.html":{}}}],["projects/common/lib/models/person.model.ts:18",{"_index":3934,"title":{},"body":{"classes/Person.html":{}}}],["projects/common/lib/models/person.model.ts:19",{"_index":3932,"title":{},"body":{"classes/Person.html":{}}}],["projects/common/lib/models/person.model.ts:22",{"_index":3933,"title":{},"body":{"classes/Person.html":{}}}],["projects/common/lib/models/person.model.ts:25",{"_index":3945,"title":{},"body":{"classes/Person.html":{}}}],["projects/common/lib/models/person.model.ts:30",{"_index":3948,"title":{},"body":{"classes/Person.html":{}}}],["projects/common/lib/models/person.model.ts:35",{"_index":3951,"title":{},"body":{"classes/Person.html":{}}}],["projects/common/lib/models/person.model.ts:53",{"_index":3955,"title":{},"body":{"classes/Person.html":{}}}],["projects/common/lib/models/person.model.ts:67",{"_index":3960,"title":{},"body":{"classes/Person.html":{}}}],["projects/common/lib/models/person.model.ts:86",{"_index":3940,"title":{},"body":{"classes/Person.html":{}}}],["projects/common/lib/models/person.model.ts:91",{"_index":3939,"title":{},"body":{"classes/Person.html":{}}}],["projects/common/lib/models/simple",{"_index":4349,"title":{},"body":{"interfaces/SimpleDate.html":{},"coverage.html":{}}}],["projects/common/lib/services/abstract",{"_index":223,"title":{},"body":{"classes/AbstractHttpService.html":{},"injectables/AbstractPageGuardService.html":{},"injectables/AbstractPgCheckService.html":{},"coverage.html":{}}}],["projects/common/lib/services/check",{"_index":1200,"title":{},"body":{"injectables/CheckCompleteBaseService.html":{},"interfaces/PageListInterface.html":{},"coverage.html":{}}}],["projects/common/lib/services/default",{"_index":2502,"title":{},"body":{"injectables/DefaultPageGuardService.html":{},"coverage.html":{}}}],["projects/common/lib/services/geocoder.service.ts",{"_index":3259,"title":{},"body":{"interfaces/GeoAddressResult.html":{},"injectables/GeocoderService.html":{},"coverage.html":{}}}],["projects/common/lib/services/geocoder.service.ts:23",{"_index":3426,"title":{},"body":{"injectables/GeocoderService.html":{}}}],["projects/common/lib/services/geocoder.service.ts:24",{"_index":3427,"title":{},"body":{"injectables/GeocoderService.html":{}}}],["projects/common/lib/services/geocoder.service.ts:25",{"_index":3416,"title":{},"body":{"injectables/GeocoderService.html":{}}}],["projects/common/lib/services/geocoder.service.ts:32",{"_index":3418,"title":{},"body":{"injectables/GeocoderService.html":{}}}],["projects/common/lib/services/geocoder.service.ts:53",{"_index":3419,"title":{},"body":{"injectables/GeocoderService.html":{}}}],["projects/common/lib/services/geocoder.service.ts:74",{"_index":3417,"title":{},"body":{"injectables/GeocoderService.html":{}}}],["projects/common/lib/services/load",{"_index":3652,"title":{},"body":{"guards/LoadPageGuardService.html":{},"coverage.html":{}}}],["projects/common/lib/services/logger.service.ts",{"_index":1555,"title":{},"body":{"interfaces/CommonLogMessage.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{}}}],["projects/common/lib/services/logger.service.ts:21",{"_index":1557,"title":{},"body":{"interfaces/CommonLogMessage.html":{}}}],["projects/common/lib/services/page",{"_index":3741,"title":{},"body":{"interfaces/PageList.html":{},"injectables/PageStateService.html":{},"coverage.html":{}}}],["projects/common/lib/services/route",{"_index":4227,"title":{},"body":{"guards/RouteGuardService.html":{},"coverage.html":{}}}],["projects/common/lib/shared",{"_index":4264,"title":{},"body":{"modules/SharedCoreModule.html":{},"coverage.html":{}}}],["projects/common/package.json",{"_index":5484,"title":{},"body":{"additional-documentation/local-development/components.html":{}}}],["projects/common/schematics",{"_index":5416,"title":{},"body":{"additional-documentation/local-development/schematics.html":{}}}],["projects/common/schematics/package.json",{"_index":5485,"title":{},"body":{"additional-documentation/local-development/components.html":{}}}],["projects/common/schematics/src/copy",{"_index":5232,"title":{},"body":{"coverage.html":{}}}],["projects/common/schematics/src/helpers/json.ts",{"_index":5236,"title":{},"body":{"coverage.html":{}}}],["projects/common/schematics/src/moh",{"_index":5239,"title":{},"body":{"coverage.html":{}}}],["projects/common/schematics/src/version",{"_index":5266,"title":{},"body":{"coverage.html":{}}}],["projects/common/src/public_api.ts",{"_index":5507,"title":{},"body":{"additional-documentation/local-development/components.html":{}}}],["projects/common/test.ts",{"_index":5277,"title":{},"body":{"coverage.html":{}}}],["projectversion",{"_index":5270,"title":{},"body":{"coverage.html":{}}}],["promise",{"_index":510,"title":{},"body":{"classes/AbstractTestPage.html":{},"guards/LoadPageGuardService.html":{},"guards/RouteGuardService.html":{}}}],["promise.resolve().then",{"_index":215,"title":{},"body":{"classes/AbstractFormControl.html":{},"components/PhoneNumberComponent.html":{}}}],["proper",{"_index":1478,"title":{},"body":{"interfaces/CommonAttachmentJson.html":{},"classes/CommonImage.html":{},"classes/CommonImageProcessingError.html":{},"interfaces/CommonImageScaleFactors.html":{},"classes/CommonImageScaleFactorsImpl.html":{}}}],["properly",{"_index":2578,"title":{},"body":{"components/EmailComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/FullNameComponent.html":{},"interfaces/FullNameErrorMsg.html":{},"changelog.html":{},"additional-documentation/getting-started.html":{}}}],["properties",{"_index":10,"title":{},"body":{"classes/AbstractBaseForm.html":{},"classes/AbstractForm.html":{},"classes/AbstractFormControl.html":{},"classes/AbstractHttpService.html":{},"classes/AbstractReactForm.html":{},"classes/AbstractTestPage.html":{},"components/AccordionCommonComponent.html":{},"interfaces/AddrLabelList.html":{},"classes/Address.html":{},"classes/Base.html":{},"components/ButtonComponent.html":{},"components/ButtonGroupComponent.html":{},"injectables/CheckCompleteBaseService.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"interfaces/CommonAttachmentJson.html":{},"classes/CommonImage.html":{},"classes/CommonImageProcessingError.html":{},"interfaces/CommonImageScaleFactors.html":{},"classes/CommonImageScaleFactorsImpl.html":{},"interfaces/CommonLogMessage.html":{},"components/ConfirmTemplateComponent.html":{},"classes/Container.html":{},"interfaces/CountryList.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"injectables/DefaultPageGuardService.html":{},"components/DropdownComponent.html":{},"components/EmailComponent.html":{},"interfaces/ErrorMessage.html":{},"interfaces/FileUploaderMsg.html":{},"components/FullNameComponent.html":{},"interfaces/FullNameErrorMsg.html":{},"interfaces/GeoAddressResult.html":{},"components/GeocoderInputComponent.html":{},"injectables/GeocoderService.html":{},"components/HeaderComponent.html":{},"interfaces/IRadioItems.html":{},"interfaces/ISpaEnvResponse.html":{},"interfaces/Maxlengths.html":{},"components/NameComponent.html":{},"interfaces/PageList.html":{},"interfaces/PageListInterface.html":{},"injectables/PageStateService.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"classes/Person.html":{},"components/PhnComponent.html":{},"components/PhoneNumberComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{},"components/RadioComponent.html":{},"interfaces/ReadOnlyFields.html":{},"interfaces/SampleImageInterface.html":{},"components/SampleModalComponent.html":{},"injectables/ServerPayload.html":{},"interfaces/SimpleDate.html":{},"components/SinComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{},"interfaces/WizardProgressItem.html":{}}}],["properties/values",{"_index":1568,"title":{},"body":{"interfaces/CommonLogMessage.html":{}}}],["property",{"_index":1491,"title":{},"body":{"interfaces/CommonAttachmentJson.html":{},"classes/CommonImage.html":{},"classes/CommonImageProcessingError.html":{},"interfaces/CommonImageScaleFactors.html":{},"classes/CommonImageScaleFactorsImpl.html":{},"interfaces/CommonLogMessage.html":{},"changelog.html":{}}}],["props",{"_index":3288,"title":{},"body":{"interfaces/GeoAddressResult.html":{},"injectables/GeocoderService.html":{}}}],["props.fulladdress",{"_index":3298,"title":{},"body":{"interfaces/GeoAddressResult.html":{},"injectables/GeocoderService.html":{}}}],["props.fulladdress.indexof",{"_index":3295,"title":{},"body":{"interfaces/GeoAddressResult.html":{},"injectables/GeocoderService.html":{}}}],["props.fulladdress.slice(0",{"_index":3296,"title":{},"body":{"interfaces/GeoAddressResult.html":{},"injectables/GeocoderService.html":{}}}],["props.localityname",{"_index":3290,"title":{},"body":{"interfaces/GeoAddressResult.html":{},"injectables/GeocoderService.html":{}}}],["props.provincecode",{"_index":3297,"title":{},"body":{"interfaces/GeoAddressResult.html":{},"injectables/GeocoderService.html":{}}}],["protected",{"_index":17,"title":{},"body":{"classes/AbstractBaseForm.html":{},"classes/AbstractForm.html":{},"classes/AbstractFormControl.html":{},"classes/AbstractHttpService.html":{},"classes/AbstractReactForm.html":{},"injectables/CheckCompleteBaseService.html":{},"components/CityComponent.html":{},"interfaces/CommonAttachmentJson.html":{},"classes/CommonImage.html":{},"classes/CommonImageProcessingError.html":{},"interfaces/CommonImageScaleFactors.html":{},"classes/CommonImageScaleFactorsImpl.html":{},"interfaces/CommonLogMessage.html":{},"classes/Container.html":{},"components/EmailComponent.html":{},"interfaces/GeoAddressResult.html":{},"injectables/GeocoderService.html":{},"interfaces/ISpaEnvResponse.html":{},"interfaces/PageList.html":{},"interfaces/PageListInterface.html":{},"injectables/PageStateService.html":{},"components/PhnComponent.html":{},"components/PhoneNumberComponent.html":{},"components/ProvinceComponent.html":{},"components/RadioComponent.html":{},"components/SinComponent.html":{},"interfaces/WizardProgressItem.html":{}}}],["protection",{"_index":3556,"title":{},"body":{"interfaces/ISpaEnvResponse.html":{}}}],["prototype",{"_index":3689,"title":{},"body":{"classes/MoHCommonLibraryError.html":{}}}],["protractor",{"_index":586,"title":{},"body":{"classes/AbstractTestPage.html":{}}}],["prov",{"_index":918,"title":{},"body":{"interfaces/AddrLabelList.html":{},"interfaces/Maxlengths.html":{},"interfaces/ReadOnlyFields.html":{},"changelog.html":{}}}],["prov.country",{"_index":917,"title":{},"body":{"interfaces/AddrLabelList.html":{},"interfaces/Maxlengths.html":{},"interfaces/ReadOnlyFields.html":{}}}],["provide",{"_index":346,"title":{},"body":{"injectables/AbstractPageGuardService.html":{},"injectables/AbstractPgCheckService.html":{},"interfaces/AddrLabelList.html":{},"components/ButtonComponent.html":{},"components/ButtonGroupComponent.html":{},"components/CheckboxComponent.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"injectables/DefaultPageGuardService.html":{},"directives/DuplicateCheckDirective.html":{},"interfaces/FileUploaderMsg.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/FullNameComponent.html":{},"interfaces/FullNameErrorMsg.html":{},"interfaces/ISpaEnvResponse.html":{},"guards/LoadPageGuardService.html":{},"interfaces/Maxlengths.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"interfaces/ReadOnlyFields.html":{},"guards/RouteGuardService.html":{},"directives/ValidateBcPostalDirective.html":{},"directives/ValidateCityDirective.html":{},"directives/ValidateNameDirective.html":{},"directives/ValidatePostalcodeDirective.html":{},"directives/ValidateRegionDirective.html":{},"directives/ValidateStreetDirective.html":{},"additional-documentation/getting-started.html":{}}}],["provided",{"_index":488,"title":{},"body":{"classes/AbstractTestPage.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"changelog.html":{}}}],["providedin",{"_index":1255,"title":{},"body":{"injectables/CheckCompleteBaseService.html":{},"interfaces/CommonLogMessage.html":{},"injectables/DefaultPageGuardService.html":{},"interfaces/GeoAddressResult.html":{},"injectables/GeocoderService.html":{},"guards/LoadPageGuardService.html":{},"interfaces/PageList.html":{},"interfaces/PageListInterface.html":{},"injectables/PageStateService.html":{},"guards/RouteGuardService.html":{}}}],["provident",{"_index":1392,"title":{},"body":{"components/CityComponent.html":{},"interfaces/CountryList.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"interfaces/FileUploaderMsg.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{}}}],["providers",{"_index":359,"title":{},"body":{"injectables/AbstractPageGuardService.html":{},"injectables/AbstractPgCheckService.html":{},"interfaces/AddrLabelList.html":{},"components/ButtonGroupComponent.html":{},"modules/CaptchaModule.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"injectables/DefaultPageGuardService.html":{},"directives/DuplicateCheckDirective.html":{},"components/FullNameComponent.html":{},"interfaces/FullNameErrorMsg.html":{},"interfaces/ISpaEnvResponse.html":{},"guards/LoadPageGuardService.html":{},"interfaces/Maxlengths.html":{},"interfaces/ReadOnlyFields.html":{},"guards/RouteGuardService.html":{},"modules/SharedCoreModule.html":{},"directives/ValidateBcPostalDirective.html":{},"directives/ValidateCityDirective.html":{},"directives/ValidateNameDirective.html":{},"directives/ValidatePostalcodeDirective.html":{},"directives/ValidateRegionDirective.html":{},"directives/ValidateStreetDirective.html":{},"index.html":{},"overview.html":{},"additional-documentation/getting-started.html":{}}}],["provides",{"_index":406,"title":{},"body":{"classes/AbstractTestPage.html":{},"classes/Address.html":{}}}],["province",{"_index":549,"title":{},"body":{"classes/AbstractTestPage.html":{},"interfaces/AddrLabelList.html":{},"classes/Address.html":{},"interfaces/CountryList.html":{},"interfaces/GeoAddressResult.html":{},"components/GeocoderInputComponent.html":{},"injectables/GeocoderService.html":{},"interfaces/Maxlengths.html":{},"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{},"interfaces/ReadOnlyFields.html":{},"changelog.html":{},"license.html":{}}}],["province'},{'name",{"_index":716,"title":{},"body":{"components/AccordionCommonComponent.html":{},"components/ButtonComponent.html":{},"components/ButtonGroupComponent.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"components/ConfirmTemplateComponent.html":{},"components/CoreBreadcrumbComponent.html":{},"components/DatepickerComponent.html":{},"components/DropdownComponent.html":{},"components/EmailComponent.html":{},"components/ErrorContainerComponent.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/FullNameComponent.html":{},"components/GeocoderInputComponent.html":{},"components/HeaderComponent.html":{},"components/NameComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"components/PhnComponent.html":{},"components/PhoneNumberComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"components/RadioComponent.html":{},"components/SampleModalComponent.html":{},"components/SinComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{},"components/XiconButtonComponent.html":{}}}],["province.component.html",{"_index":4162,"title":{},"body":{"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{}}}],["province.component.scss",{"_index":4161,"title":{},"body":{"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{}}}],["province/country",{"_index":1016,"title":{},"body":{"classes/Address.html":{}}}],["province/province.component",{"_index":782,"title":{},"body":{"interfaces/AddrLabelList.html":{},"components/GeocoderInputComponent.html":{},"interfaces/Maxlengths.html":{},"interfaces/ReadOnlyFields.html":{}}}],["province_",{"_index":4165,"title":{},"body":{"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{}}}],["province_list",{"_index":781,"title":{},"body":{"interfaces/AddrLabelList.html":{},"interfaces/Maxlengths.html":{},"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{},"interfaces/ReadOnlyFields.html":{},"coverage.html":{}}}],["province_list.find",{"_index":4209,"title":{},"body":{"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{}}}],["provincecode",{"_index":4183,"title":{},"body":{"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{}}}],["provincecomponent",{"_index":715,"title":{"components/ProvinceComponent.html":{}},"body":{"components/AccordionCommonComponent.html":{},"components/ButtonComponent.html":{},"components/ButtonGroupComponent.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"components/ConfirmTemplateComponent.html":{},"components/CoreBreadcrumbComponent.html":{},"components/DatepickerComponent.html":{},"components/DropdownComponent.html":{},"components/EmailComponent.html":{},"components/ErrorContainerComponent.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/FullNameComponent.html":{},"components/GeocoderInputComponent.html":{},"components/HeaderComponent.html":{},"components/NameComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"components/PhnComponent.html":{},"components/PhoneNumberComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{},"components/RadioComponent.html":{},"components/SampleModalComponent.html":{},"modules/SharedCoreModule.html":{},"components/SinComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{},"components/XiconButtonComponent.html":{},"coverage.html":{},"overview.html":{}}}],["provincelist",{"_index":779,"title":{"interfaces/ProvinceList.html":{}},"body":{"interfaces/AddrLabelList.html":{},"interfaces/Maxlengths.html":{},"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{},"interfaces/ReadOnlyFields.html":{},"coverage.html":{}}}],["provincial",{"_index":3560,"title":{},"body":{"interfaces/ISpaEnvResponse.html":{}}}],["provision",{"_index":1733,"title":{},"body":{"components/CoreBreadcrumbComponent.html":{}}}],["provlist",{"_index":820,"title":{},"body":{"interfaces/AddrLabelList.html":{},"interfaces/Maxlengths.html":{},"interfaces/ReadOnlyFields.html":{}}}],["provobj",{"_index":921,"title":{},"body":{"interfaces/AddrLabelList.html":{},"interfaces/Maxlengths.html":{},"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{},"interfaces/ReadOnlyFields.html":{}}}],["provobj.description",{"_index":929,"title":{},"body":{"interfaces/AddrLabelList.html":{},"interfaces/Maxlengths.html":{},"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{},"interfaces/ReadOnlyFields.html":{}}}],["provobj.provincecode",{"_index":927,"title":{},"body":{"interfaces/AddrLabelList.html":{},"interfaces/Maxlengths.html":{},"interfaces/ReadOnlyFields.html":{}}}],["prt",{"_index":2125,"title":{},"body":{"interfaces/CountryList.html":{}}}],["pry",{"_index":2116,"title":{},"body":{"interfaces/CountryList.html":{}}}],["pse",{"_index":2109,"title":{},"body":{"interfaces/CountryList.html":{}}}],["pswdfeedback",{"_index":3910,"title":{},"body":{"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{}}}],["pswdfeedback.score",{"_index":3911,"title":{},"body":{"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{}}}],["pswdstrength",{"_index":3827,"title":{},"body":{"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{}}}],["public",{"_index":120,"title":{},"body":{"classes/AbstractFormControl.html":{},"injectables/AbstractPageGuardService.html":{},"injectables/AbstractPgCheckService.html":{},"classes/AbstractTestPage.html":{},"components/AccordionCommonComponent.html":{},"classes/Address.html":{},"classes/Base.html":{},"components/ButtonGroupComponent.html":{},"injectables/CaptchaDataService.html":{},"injectables/CheckCompleteBaseService.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"interfaces/CommonAttachmentJson.html":{},"classes/CommonImage.html":{},"classes/CommonImageProcessingError.html":{},"interfaces/CommonImageScaleFactors.html":{},"classes/CommonImageScaleFactorsImpl.html":{},"interfaces/CommonLogMessage.html":{},"components/ConfirmTemplateComponent.html":{},"interfaces/CountryList.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"injectables/DefaultPageGuardService.html":{},"components/DropdownComponent.html":{},"components/EmailComponent.html":{},"components/FullNameComponent.html":{},"interfaces/FullNameErrorMsg.html":{},"components/GeocoderInputComponent.html":{},"components/HeaderComponent.html":{},"interfaces/IRadioItems.html":{},"interfaces/ISpaEnvResponse.html":{},"components/NameComponent.html":{},"interfaces/PageListInterface.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"classes/Person.html":{},"components/PhnComponent.html":{},"components/PhoneNumberComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{},"components/RadioComponent.html":{},"interfaces/SampleImageInterface.html":{},"components/SampleModalComponent.html":{},"injectables/ServerPayload.html":{},"components/SinComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{},"changelog.html":{},"todo.html":{}}}],["public_api",{"_index":4152,"title":{},"body":{"components/PostalCodeComponent.html":{}}}],["publish",{"_index":5492,"title":{},"body":{"additional-documentation/local-development/components.html":{}}}],["publishing",{"_index":4714,"title":{},"body":{"changelog.html":{},"additional-documentation/local-development/schematics.html":{},"additional-documentation/local-development/components.html":{}}}],["puerto",{"_index":2128,"title":{},"body":{"interfaces/CountryList.html":{}}}],["pull",{"_index":5322,"title":{},"body":{"index.html":{}}}],["pure",{"_index":5402,"title":{},"body":{"additional-documentation/getting-started.html":{}}}],["purposes",{"_index":3949,"title":{},"body":{"classes/Person.html":{}}}],["pushes",{"_index":4910,"title":{},"body":{"changelog.html":{}}}],["put",{"_index":3440,"title":{},"body":{"components/HeaderComponent.html":{}}}],["pwdcriteria",{"_index":3833,"title":{},"body":{"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{}}}],["pyf",{"_index":1917,"title":{},"body":{"interfaces/CountryList.html":{}}}],["qat",{"_index":2130,"title":{},"body":{"interfaces/CountryList.html":{}}}],["qatar",{"_index":2131,"title":{},"body":{"interfaces/CountryList.html":{}}}],["qc",{"_index":4198,"title":{},"body":{"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{}}}],["quality",{"_index":2795,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["quam",{"_index":1418,"title":{},"body":{"components/CityComponent.html":{},"interfaces/CountryList.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"interfaces/FileUploaderMsg.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{}}}],["quasi",{"_index":1386,"title":{},"body":{"components/CityComponent.html":{},"interfaces/CountryList.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"interfaces/FileUploaderMsg.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{}}}],["quebec",{"_index":4199,"title":{},"body":{"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{}}}],["query",{"_index":4746,"title":{},"body":{"changelog.html":{}}}],["querylist",{"_index":4496,"title":{},"body":{"components/WizardProgressBarComponent.html":{}}}],["queryparams",{"_index":61,"title":{},"body":{"classes/AbstractBaseForm.html":{},"classes/AbstractForm.html":{},"classes/AbstractHttpService.html":{},"classes/AbstractReactForm.html":{},"injectables/GeocoderService.html":{}}}],["question",{"_index":3171,"title":{},"body":{"components/FormSubmitBarComponent.html":{},"changelog.html":{}}}],["questions",{"_index":3565,"title":{},"body":{"interfaces/ISpaEnvResponse.html":{}}}],["quia",{"_index":1393,"title":{},"body":{"components/CityComponent.html":{},"interfaces/CountryList.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"interfaces/FileUploaderMsg.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{}}}],["quidem",{"_index":1435,"title":{},"body":{"components/CityComponent.html":{},"interfaces/CountryList.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"interfaces/FileUploaderMsg.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{}}}],["quis",{"_index":1415,"title":{},"body":{"components/CityComponent.html":{},"interfaces/CountryList.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"interfaces/FileUploaderMsg.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{}}}],["quisquam",{"_index":1406,"title":{},"body":{"components/CityComponent.html":{},"interfaces/CountryList.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"interfaces/FileUploaderMsg.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{}}}],["quite",{"_index":1249,"title":{},"body":{"injectables/CheckCompleteBaseService.html":{},"interfaces/PageListInterface.html":{}}}],["radio",{"_index":3484,"title":{},"body":{"interfaces/IRadioItems.html":{},"components/RadioComponent.html":{},"changelog.html":{}}}],["radio's",{"_index":3495,"title":{},"body":{"interfaces/IRadioItems.html":{},"components/RadioComponent.html":{}}}],["radio'},{'name",{"_index":718,"title":{},"body":{"components/AccordionCommonComponent.html":{},"components/ButtonComponent.html":{},"components/ButtonGroupComponent.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"components/ConfirmTemplateComponent.html":{},"components/CoreBreadcrumbComponent.html":{},"components/DatepickerComponent.html":{},"components/DropdownComponent.html":{},"components/EmailComponent.html":{},"components/ErrorContainerComponent.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/FullNameComponent.html":{},"components/GeocoderInputComponent.html":{},"components/HeaderComponent.html":{},"components/NameComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"components/PhnComponent.html":{},"components/PhoneNumberComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"components/RadioComponent.html":{},"components/SampleModalComponent.html":{},"components/SinComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{},"components/XiconButtonComponent.html":{}}}],["radio.component.html",{"_index":3498,"title":{},"body":{"interfaces/IRadioItems.html":{},"components/RadioComponent.html":{}}}],["radio.component.scss",{"_index":3499,"title":{},"body":{"interfaces/IRadioItems.html":{},"components/RadioComponent.html":{}}}],["radio.component.ts",{"_index":5369,"title":{},"body":{"todo.html":{}}}],["radio/checkbox",{"_index":4774,"title":{},"body":{"changelog.html":{}}}],["radiocomponent",{"_index":717,"title":{"components/RadioComponent.html":{}},"body":{"components/AccordionCommonComponent.html":{},"components/ButtonComponent.html":{},"components/ButtonGroupComponent.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"components/ConfirmTemplateComponent.html":{},"components/CoreBreadcrumbComponent.html":{},"components/DatepickerComponent.html":{},"components/DropdownComponent.html":{},"components/EmailComponent.html":{},"components/ErrorContainerComponent.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/FullNameComponent.html":{},"components/GeocoderInputComponent.html":{},"components/HeaderComponent.html":{},"interfaces/IRadioItems.html":{},"components/NameComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"components/PhnComponent.html":{},"components/PhoneNumberComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"components/RadioComponent.html":{},"components/SampleModalComponent.html":{},"modules/SharedCoreModule.html":{},"components/SinComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{},"components/XiconButtonComponent.html":{},"changelog.html":{},"coverage.html":{},"overview.html":{}}}],["radiolabels",{"_index":3496,"title":{},"body":{"interfaces/IRadioItems.html":{},"components/RadioComponent.html":{}}}],["radios",{"_index":3485,"title":{},"body":{"interfaces/IRadioItems.html":{},"components/RadioComponent.html":{}}}],["ran",{"_index":5474,"title":{},"body":{"additional-documentation/local-development/components.html":{}}}],["range",{"_index":3133,"title":{},"body":{"interfaces/FileUploaderMsg.html":{},"changelog.html":{}}}],["rapid",{"_index":3619,"title":{},"body":{"interfaces/ISpaEnvResponse.html":{}}}],["rapidresponsecode",{"_index":3622,"title":{},"body":{"interfaces/ISpaEnvResponse.html":{}}}],["ratio",{"_index":2791,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["ratione",{"_index":1430,"title":{},"body":{"components/CityComponent.html":{},"interfaces/CountryList.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"interfaces/FileUploaderMsg.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{}}}],["rawimagefile",{"_index":1474,"title":{},"body":{"interfaces/CommonAttachmentJson.html":{},"classes/CommonImage.html":{},"classes/CommonImageProcessingError.html":{},"interfaces/CommonImageScaleFactors.html":{},"classes/CommonImageScaleFactorsImpl.html":{}}}],["rc.0",{"_index":4693,"title":{},"body":{"changelog.html":{}}}],["rc.1",{"_index":4686,"title":{},"body":{"changelog.html":{}}}],["rc.10",{"_index":4646,"title":{},"body":{"changelog.html":{}}}],["rc.11",{"_index":4634,"title":{},"body":{"changelog.html":{}}}],["rc.12",{"_index":4629,"title":{},"body":{"changelog.html":{}}}],["rc.13",{"_index":4625,"title":{},"body":{"changelog.html":{}}}],["rc.14",{"_index":4606,"title":{},"body":{"changelog.html":{}}}],["rc.15",{"_index":4601,"title":{},"body":{"changelog.html":{}}}],["rc.16",{"_index":4595,"title":{},"body":{"changelog.html":{}}}],["rc.17",{"_index":4586,"title":{},"body":{"changelog.html":{}}}],["rc.18",{"_index":4583,"title":{},"body":{"changelog.html":{}}}],["rc.19",{"_index":4576,"title":{},"body":{"changelog.html":{}}}],["rc.2",{"_index":4682,"title":{},"body":{"changelog.html":{}}}],["rc.20",{"_index":4572,"title":{},"body":{"changelog.html":{}}}],["rc.3",{"_index":4680,"title":{},"body":{"changelog.html":{}}}],["rc.4",{"_index":4674,"title":{},"body":{"changelog.html":{}}}],["rc.5",{"_index":4668,"title":{},"body":{"changelog.html":{}}}],["rc.6",{"_index":4662,"title":{},"body":{"changelog.html":{}}}],["rc.7",{"_index":4655,"title":{},"body":{"changelog.html":{}}}],["rc.8",{"_index":4652,"title":{},"body":{"changelog.html":{}}}],["rc.9",{"_index":4649,"title":{},"body":{"changelog.html":{}}}],["re",{"_index":790,"title":{},"body":{"interfaces/AddrLabelList.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"interfaces/FileUploaderMsg.html":{},"components/GeocoderInputComponent.html":{},"interfaces/Maxlengths.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"interfaces/ReadOnlyFields.html":{},"changelog.html":{},"additional-documentation/local-development/schematics.html":{},"additional-documentation/local-development/components.html":{}}}],["reach",{"_index":3056,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["react",{"_index":383,"title":{},"body":{"classes/AbstractReactForm.html":{},"coverage.html":{}}}],["reactive",{"_index":2552,"title":{},"body":{"directives/DuplicateCheckDirective.html":{},"components/EmailComponent.html":{},"interfaces/IRadioItems.html":{},"components/NameComponent.html":{},"components/RadioComponent.html":{},"changelog.html":{}}}],["reactiveforms",{"_index":3362,"title":{},"body":{"components/GeocoderInputComponent.html":{}}}],["read",{"_index":2754,"title":{},"body":{"interfaces/FileUploaderMsg.html":{},"interfaces/ISpaEnvResponse.html":{},"index.html":{}}}],["readable",{"_index":475,"title":{},"body":{"classes/AbstractTestPage.html":{},"classes/Container.html":{},"interfaces/WizardProgressItem.html":{}}}],["reader",{"_index":2950,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["reader.onload",{"_index":3006,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["reader.readasdataurl(blob",{"_index":3027,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["reader.readasdataurl(imagefile",{"_index":3080,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["reader.result",{"_index":3066,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["readers",{"_index":454,"title":{},"body":{"classes/AbstractTestPage.html":{},"components/HeaderComponent.html":{}}}],["readme",{"_index":4979,"title":{},"body":{"changelog.html":{},"additional-documentation/local-development/components.html":{}}}],["readonlyfields",{"_index":784,"title":{"interfaces/ReadOnlyFields.html":{}},"body":{"interfaces/AddrLabelList.html":{},"interfaces/Maxlengths.html":{},"interfaces/ReadOnlyFields.html":{},"coverage.html":{}}}],["readpdf(pdffile",{"_index":3081,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["ready",{"_index":1514,"title":{},"body":{"interfaces/CommonAttachmentJson.html":{},"classes/CommonImage.html":{},"classes/CommonImageProcessingError.html":{},"interfaces/CommonImageScaleFactors.html":{},"classes/CommonImageScaleFactorsImpl.html":{}}}],["reason",{"_index":2724,"title":{},"body":{"interfaces/FileUploaderMsg.html":{},"components/GeocoderInputComponent.html":{}}}],["receiving",{"_index":1609,"title":{},"body":{"interfaces/CommonLogMessage.html":{}}}],["recieve",{"_index":3305,"title":{},"body":{"components/GeocoderInputComponent.html":{}}}],["recommend",{"_index":3819,"title":{},"body":{"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{}}}],["redable",{"_index":509,"title":{},"body":{"classes/AbstractTestPage.html":{}}}],["reduce",{"_index":4591,"title":{},"body":{"changelog.html":{}}}],["reduced",{"_index":2337,"title":{},"body":{"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{}}}],["ref",{"_index":2971,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["refactor",{"_index":2421,"title":{},"body":{"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"changelog.html":{}}}],["refactored",{"_index":4623,"title":{},"body":{"changelog.html":{}}}],["refactoring",{"_index":4602,"title":{},"body":{"changelog.html":{}}}],["reference",{"_index":5062,"title":{},"body":{"changelog.html":{},"additional-documentation/local-development/components.html":{}}}],["reflect",{"_index":482,"title":{},"body":{"classes/AbstractTestPage.html":{},"additional-documentation/local-development/components.html":{}}}],["refnameval",{"_index":483,"title":{},"body":{"classes/AbstractTestPage.html":{}}}],["regex",{"_index":1036,"title":{},"body":{"classes/Address.html":{}}}],["regex.test(this.postal",{"_index":1038,"title":{},"body":{"classes/Address.html":{}}}],["regexp",{"_index":2583,"title":{},"body":{"components/EmailComponent.html":{},"interfaces/ErrorMessage.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"directives/ValidateBcPostalDirective.html":{},"directives/ValidateCityDirective.html":{},"directives/ValidateNameDirective.html":{},"directives/ValidatePostalcodeDirective.html":{},"directives/ValidateRegionDirective.html":{},"directives/ValidateStreetDirective.html":{},"changelog.html":{}}}],["regexp('^[vv]\\\\d[abceghj",{"_index":4431,"title":{},"body":{"directives/ValidateBcPostalDirective.html":{},"directives/ValidatePostalcodeDirective.html":{}}}],["regexp(address.postalcodebcregex",{"_index":1037,"title":{},"body":{"classes/Address.html":{}}}],["regexplabel",{"_index":2607,"title":{},"body":{"interfaces/ErrorMessage.html":{},"coverage.html":{}}}],["region.directive",{"_index":4332,"title":{},"body":{"modules/SharedCoreModule.html":{}}}],["region.directive.ts",{"_index":4461,"title":{},"body":{"directives/ValidateRegionDirective.html":{},"coverage.html":{}}}],["region.directive.ts:26",{"_index":4463,"title":{},"body":{"directives/ValidateRegionDirective.html":{}}}],["region/validate",{"_index":4331,"title":{},"body":{"modules/SharedCoreModule.html":{},"directives/ValidateRegionDirective.html":{},"coverage.html":{}}}],["register",{"_index":151,"title":{},"body":{"classes/AbstractFormControl.html":{},"modules/CaptchaModule.html":{},"components/CityComponent.html":{},"interfaces/CountryList.html":{},"components/EmailComponent.html":{},"components/GeocoderInputComponent.html":{},"components/NameComponent.html":{},"components/PhnComponent.html":{},"components/PhoneNumberComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"components/RadioComponent.html":{},"components/SinComponent.html":{},"additional-documentation/getting-started.html":{}}}],["registered",{"_index":787,"title":{},"body":{"interfaces/AddrLabelList.html":{},"interfaces/Maxlengths.html":{},"interfaces/ReadOnlyFields.html":{}}}],["registeronchange",{"_index":123,"title":{},"body":{"classes/AbstractFormControl.html":{},"components/ButtonGroupComponent.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"interfaces/CountryList.html":{},"components/DatepickerComponent.html":{},"components/DropdownComponent.html":{},"components/EmailComponent.html":{},"components/FullNameComponent.html":{},"components/GeocoderInputComponent.html":{},"components/NameComponent.html":{},"components/PhnComponent.html":{},"components/PhoneNumberComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"components/RadioComponent.html":{},"components/SinComponent.html":{}}}],["registeronchange(fn",{"_index":142,"title":{},"body":{"classes/AbstractFormControl.html":{},"interfaces/AddrLabelList.html":{},"components/ButtonGroupComponent.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"components/DropdownComponent.html":{},"components/EmailComponent.html":{},"components/FullNameComponent.html":{},"interfaces/FullNameErrorMsg.html":{},"components/GeocoderInputComponent.html":{},"interfaces/IRadioItems.html":{},"interfaces/ISpaEnvResponse.html":{},"interfaces/Maxlengths.html":{},"components/NameComponent.html":{},"components/PhnComponent.html":{},"components/PhoneNumberComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"components/RadioComponent.html":{},"interfaces/ReadOnlyFields.html":{},"components/SinComponent.html":{}}}],["registerontouched",{"_index":124,"title":{},"body":{"classes/AbstractFormControl.html":{},"components/ButtonGroupComponent.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"interfaces/CountryList.html":{},"components/DatepickerComponent.html":{},"components/DropdownComponent.html":{},"components/EmailComponent.html":{},"components/FullNameComponent.html":{},"components/GeocoderInputComponent.html":{},"components/NameComponent.html":{},"components/PhnComponent.html":{},"components/PhoneNumberComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"components/RadioComponent.html":{},"components/SinComponent.html":{}}}],["registerontouched(fn",{"_index":145,"title":{},"body":{"classes/AbstractFormControl.html":{},"interfaces/AddrLabelList.html":{},"components/ButtonGroupComponent.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"components/DropdownComponent.html":{},"components/EmailComponent.html":{},"components/FullNameComponent.html":{},"interfaces/FullNameErrorMsg.html":{},"components/GeocoderInputComponent.html":{},"interfaces/IRadioItems.html":{},"interfaces/ISpaEnvResponse.html":{},"interfaces/Maxlengths.html":{},"components/NameComponent.html":{},"components/PhnComponent.html":{},"components/PhoneNumberComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"components/RadioComponent.html":{},"interfaces/ReadOnlyFields.html":{},"components/SinComponent.html":{}}}],["registervalidation",{"_index":125,"title":{},"body":{"classes/AbstractFormControl.html":{},"components/CityComponent.html":{},"components/EmailComponent.html":{},"components/PhnComponent.html":{},"components/PhoneNumberComponent.html":{},"components/ProvinceComponent.html":{},"components/RadioComponent.html":{},"components/SinComponent.html":{}}}],["registervalidation(ngcontrol",{"_index":147,"title":{},"body":{"classes/AbstractFormControl.html":{},"components/CityComponent.html":{},"components/EmailComponent.html":{},"components/PhnComponent.html":{},"components/PhoneNumberComponent.html":{},"components/ProvinceComponent.html":{},"components/RadioComponent.html":{},"components/SinComponent.html":{}}}],["registration",{"_index":3661,"title":{},"body":{"guards/LoadPageGuardService.html":{},"guards/RouteGuardService.html":{}}}],["registration.module.ts",{"_index":370,"title":{},"body":{"injectables/AbstractPgCheckService.html":{},"guards/LoadPageGuardService.html":{},"guards/RouteGuardService.html":{}}}],["registrationservice",{"_index":371,"title":{},"body":{"injectables/AbstractPgCheckService.html":{},"guards/RouteGuardService.html":{}}}],["related",{"_index":4929,"title":{},"body":{"changelog.html":{},"additional-documentation/getting-started.html":{}}}],["relates",{"_index":5476,"title":{},"body":{"additional-documentation/local-development/components.html":{}}}],["relativeurl",{"_index":290,"title":{},"body":{"classes/AbstractHttpService.html":{},"injectables/GeocoderService.html":{}}}],["release",{"_index":4688,"title":{},"body":{"changelog.html":{}}}],["relevant",{"_index":5410,"title":{},"body":{"additional-documentation/local-development/schematics.html":{}}}],["remainder",{"_index":4042,"title":{},"body":{"components/PhnComponent.html":{}}}],["remove",{"_index":894,"title":{},"body":{"interfaces/AddrLabelList.html":{},"classes/Address.html":{},"components/CheckboxComponent.html":{},"interfaces/CommonLogMessage.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"interfaces/FileUploaderMsg.html":{},"interfaces/ISpaEnvResponse.html":{},"interfaces/Maxlengths.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"components/PhnComponent.html":{},"components/PhoneNumberComponent.html":{},"interfaces/ReadOnlyFields.html":{},"components/SinComponent.html":{},"components/ThumbnailComponent.html":{},"components/XiconButtonComponent.html":{},"changelog.html":{},"todo.html":{}}}],["removed",{"_index":2859,"title":{},"body":{"interfaces/FileUploaderMsg.html":{},"classes/Person.html":{},"directives/ValidateBcPostalDirective.html":{},"changelog.html":{}}}],["removeline(line",{"_index":893,"title":{},"body":{"interfaces/AddrLabelList.html":{},"interfaces/Maxlengths.html":{},"interfaces/ReadOnlyFields.html":{}}}],["removing",{"_index":3048,"title":{},"body":{"interfaces/FileUploaderMsg.html":{},"changelog.html":{}}}],["rename",{"_index":4766,"title":{},"body":{"changelog.html":{}}}],["render",{"_index":1497,"title":{},"body":{"interfaces/CommonAttachmentJson.html":{},"classes/CommonImage.html":{},"classes/CommonImageProcessingError.html":{},"interfaces/CommonImageScaleFactors.html":{},"classes/CommonImageScaleFactorsImpl.html":{},"interfaces/ISpaEnvResponse.html":{}}}],["rendering",{"_index":2723,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["reorder",{"_index":4811,"title":{},"body":{"changelog.html":{}}}],["reorganize",{"_index":4889,"title":{},"body":{"changelog.html":{}}}],["repellat",{"_index":1405,"title":{},"body":{"components/CityComponent.html":{},"interfaces/CountryList.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"interfaces/FileUploaderMsg.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{}}}],["replace",{"_index":205,"title":{},"body":{"classes/AbstractFormControl.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"components/PhnComponent.html":{},"components/PhoneNumberComponent.html":{},"changelog.html":{},"todo.html":{}}}],["replace(/\\s/g",{"_index":4029,"title":{},"body":{"components/PhnComponent.html":{},"components/PhoneNumberComponent.html":{},"components/SinComponent.html":{}}}],["replace(/_/g",{"_index":4027,"title":{},"body":{"components/PhnComponent.html":{},"components/PhoneNumberComponent.html":{},"components/SinComponent.html":{}}}],["replacelabeltag",{"_index":166,"title":{},"body":{"classes/AbstractFormControl.html":{},"interfaces/ErrorMessage.html":{},"coverage.html":{}}}],["reports",{"_index":2309,"title":{},"body":{"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"components/SinComponent.html":{}}}],["reprehenderit",{"_index":1421,"title":{},"body":{"components/CityComponent.html":{},"interfaces/CountryList.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"interfaces/FileUploaderMsg.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{}}}],["republic",{"_index":1842,"title":{},"body":{"interfaces/CountryList.html":{}}}],["repudiandae",{"_index":1427,"title":{},"body":{"components/CityComponent.html":{},"interfaces/CountryList.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"interfaces/FileUploaderMsg.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{}}}],["repurpose",{"_index":1666,"title":{},"body":{"interfaces/CommonLogMessage.html":{}}}],["request",{"_index":250,"title":{},"body":{"classes/AbstractHttpService.html":{},"interfaces/CommonLogMessage.html":{},"components/GeocoderInputComponent.html":{},"injectables/GeocoderService.html":{},"interfaces/ISpaEnvResponse.html":{},"additional-documentation/getting-started.html":{}}}],["request_method",{"_index":1575,"title":{},"body":{"interfaces/CommonLogMessage.html":{}}}],["requests",{"_index":263,"title":{},"body":{"classes/AbstractHttpService.html":{},"interfaces/CommonLogMessage.html":{},"interfaces/GeoAddressResult.html":{},"injectables/GeocoderService.html":{},"index.html":{}}}],["require",{"_index":5279,"title":{},"body":{"coverage.html":{}}}],["require('blueimp",{"_index":2647,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["require('pdfjs",{"_index":2653,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["require('sha1",{"_index":2649,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["required",{"_index":42,"title":{},"body":{"classes/AbstractBaseForm.html":{},"classes/AbstractForm.html":{},"classes/AbstractFormControl.html":{},"classes/AbstractReactForm.html":{},"components/ButtonGroupComponent.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"interfaces/CommonLogMessage.html":{},"interfaces/CountryList.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"components/DropdownComponent.html":{},"components/EmailComponent.html":{},"interfaces/ErrorMessage.html":{},"interfaces/FileUploaderMsg.html":{},"components/FullNameComponent.html":{},"interfaces/FullNameErrorMsg.html":{},"interfaces/IRadioItems.html":{},"components/NameComponent.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"components/PhnComponent.html":{},"components/PhoneNumberComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{},"components/RadioComponent.html":{},"components/SinComponent.html":{},"components/XiconButtonComponent.html":{},"changelog.html":{},"license.html":{},"todo.html":{},"additional-documentation/local-development/schematics.html":{},"additional-documentation/local-development/components.html":{}}}],["requiredmsgseg",{"_index":3200,"title":{},"body":{"components/FullNameComponent.html":{},"interfaces/FullNameErrorMsg.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{}}}],["requirements",{"_index":3815,"title":{},"body":{"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"index.html":{}}}],["requires",{"_index":785,"title":{},"body":{"interfaces/AddrLabelList.html":{},"components/ButtonComponent.html":{},"interfaces/ISpaEnvResponse.html":{},"interfaces/Maxlengths.html":{},"interfaces/ReadOnlyFields.html":{}}}],["requisite",{"_index":4237,"title":{},"body":{"guards/RouteGuardService.html":{}}}],["rerum",{"_index":1389,"title":{},"body":{"components/CityComponent.html":{},"interfaces/CountryList.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"interfaces/FileUploaderMsg.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{}}}],["reset",{"_index":1179,"title":{},"body":{"modules/CaptchaModule.html":{},"interfaces/FileUploaderMsg.html":{},"modules/SharedCoreModule.html":{},"overview.html":{}}}],["resetinputfields",{"_index":3115,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["resizeimage",{"_index":2948,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["resizing",{"_index":2783,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["resolution",{"_index":2811,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["resolve",{"_index":5455,"title":{},"body":{"additional-documentation/local-development/schematics.html":{}}}],["resolved",{"_index":3387,"title":{},"body":{"components/GeocoderInputComponent.html":{}}}],["respective",{"_index":254,"title":{},"body":{"classes/AbstractHttpService.html":{},"injectables/GeocoderService.html":{}}}],["responding",{"_index":1658,"title":{},"body":{"interfaces/CommonLogMessage.html":{}}}],["response",{"_index":1155,"title":{},"body":{"injectables/CaptchaDataService.html":{},"interfaces/CommonLogMessage.html":{},"interfaces/FileUploaderMsg.html":{},"interfaces/GeoAddressResult.html":{},"components/GeocoderInputComponent.html":{},"injectables/GeocoderService.html":{},"interfaces/ISpaEnvResponse.html":{},"injectables/ServerPayload.html":{},"changelog.html":{}}}],["responsetype",{"_index":333,"title":{},"body":{"classes/AbstractHttpService.html":{},"interfaces/CommonLogMessage.html":{}}}],["rest",{"_index":3130,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["restore",{"_index":3693,"title":{},"body":{"classes/MoHCommonLibraryError.html":{}}}],["restrictdate",{"_index":4683,"title":{},"body":{"changelog.html":{}}}],["result",{"_index":83,"title":{},"body":{"classes/AbstractBaseForm.html":{},"classes/AbstractForm.html":{},"classes/AbstractFormControl.html":{},"classes/AbstractHttpService.html":{},"injectables/AbstractPageGuardService.html":{},"injectables/AbstractPgCheckService.html":{},"classes/AbstractReactForm.html":{},"classes/AbstractTestPage.html":{},"components/AccordionCommonComponent.html":{},"interfaces/AddrLabelList.html":{},"classes/Address.html":{},"classes/Base.html":{},"components/ButtonComponent.html":{},"components/ButtonGroupComponent.html":{},"injectables/CaptchaDataService.html":{},"modules/CaptchaModule.html":{},"injectables/CheckCompleteBaseService.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"interfaces/CommonAttachmentJson.html":{},"classes/CommonImage.html":{},"classes/CommonImageProcessingError.html":{},"interfaces/CommonImageScaleFactors.html":{},"classes/CommonImageScaleFactorsImpl.html":{},"interfaces/CommonLogMessage.html":{},"components/ConfirmTemplateComponent.html":{},"classes/Container.html":{},"components/CoreBreadcrumbComponent.html":{},"interfaces/CountryList.html":{},"interfaces/DateErrorMsg.html":{},"directives/DateFieldFormatDirective.html":{},"components/DatepickerComponent.html":{},"injectables/DefaultPageGuardService.html":{},"components/DropdownComponent.html":{},"directives/DuplicateCheckDirective.html":{},"components/EmailComponent.html":{},"components/ErrorContainerComponent.html":{},"interfaces/ErrorMessage.html":{},"interfaces/FileUploaderMsg.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/FullNameComponent.html":{},"interfaces/FullNameErrorMsg.html":{},"interfaces/GeoAddressResult.html":{},"components/GeocoderInputComponent.html":{},"injectables/GeocoderService.html":{},"components/HeaderComponent.html":{},"interfaces/IRadioItems.html":{},"interfaces/ISpaEnvResponse.html":{},"guards/LoadPageGuardService.html":{},"interfaces/Maxlengths.html":{},"classes/MoHCommonLibraryError.html":{},"components/NameComponent.html":{},"components/PageFrameworkComponent.html":{},"interfaces/PageList.html":{},"interfaces/PageListInterface.html":{},"components/PageSectionComponent.html":{},"injectables/PageStateService.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"classes/Person.html":{},"components/PhnComponent.html":{},"components/PhoneNumberComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{},"components/RadioComponent.html":{},"interfaces/ReadOnlyFields.html":{},"guards/RouteGuardService.html":{},"interfaces/SampleImageInterface.html":{},"components/SampleModalComponent.html":{},"injectables/ServerPayload.html":{},"modules/SharedCoreModule.html":{},"interfaces/SimpleDate.html":{},"components/SinComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"directives/ValidateBcPostalDirective.html":{},"directives/ValidateCityDirective.html":{},"directives/ValidateNameDirective.html":{},"directives/ValidatePostalcodeDirective.html":{},"directives/ValidateRegionDirective.html":{},"directives/ValidateStreetDirective.html":{},"components/WizardProgressBarComponent.html":{},"interfaces/WizardProgressItem.html":{},"components/XiconButtonComponent.html":{},"changelog.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"todo.html":{},"additional-documentation/getting-started.html":{},"additional-documentation/local-development.html":{},"additional-documentation/local-development/schematics.html":{},"additional-documentation/local-development/components.html":{}}}],["results",{"_index":85,"title":{},"body":{"classes/AbstractBaseForm.html":{},"classes/AbstractForm.html":{},"classes/AbstractFormControl.html":{},"classes/AbstractHttpService.html":{},"injectables/AbstractPageGuardService.html":{},"injectables/AbstractPgCheckService.html":{},"classes/AbstractReactForm.html":{},"classes/AbstractTestPage.html":{},"components/AccordionCommonComponent.html":{},"interfaces/AddrLabelList.html":{},"classes/Address.html":{},"classes/Base.html":{},"components/ButtonComponent.html":{},"components/ButtonGroupComponent.html":{},"injectables/CaptchaDataService.html":{},"modules/CaptchaModule.html":{},"injectables/CheckCompleteBaseService.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"interfaces/CommonAttachmentJson.html":{},"classes/CommonImage.html":{},"classes/CommonImageProcessingError.html":{},"interfaces/CommonImageScaleFactors.html":{},"classes/CommonImageScaleFactorsImpl.html":{},"interfaces/CommonLogMessage.html":{},"components/ConfirmTemplateComponent.html":{},"classes/Container.html":{},"components/CoreBreadcrumbComponent.html":{},"interfaces/CountryList.html":{},"interfaces/DateErrorMsg.html":{},"directives/DateFieldFormatDirective.html":{},"components/DatepickerComponent.html":{},"injectables/DefaultPageGuardService.html":{},"components/DropdownComponent.html":{},"directives/DuplicateCheckDirective.html":{},"components/EmailComponent.html":{},"components/ErrorContainerComponent.html":{},"interfaces/ErrorMessage.html":{},"interfaces/FileUploaderMsg.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/FullNameComponent.html":{},"interfaces/FullNameErrorMsg.html":{},"interfaces/GeoAddressResult.html":{},"components/GeocoderInputComponent.html":{},"injectables/GeocoderService.html":{},"components/HeaderComponent.html":{},"interfaces/IRadioItems.html":{},"interfaces/ISpaEnvResponse.html":{},"guards/LoadPageGuardService.html":{},"interfaces/Maxlengths.html":{},"classes/MoHCommonLibraryError.html":{},"components/NameComponent.html":{},"components/PageFrameworkComponent.html":{},"interfaces/PageList.html":{},"interfaces/PageListInterface.html":{},"components/PageSectionComponent.html":{},"injectables/PageStateService.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"classes/Person.html":{},"components/PhnComponent.html":{},"components/PhoneNumberComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{},"components/RadioComponent.html":{},"interfaces/ReadOnlyFields.html":{},"guards/RouteGuardService.html":{},"interfaces/SampleImageInterface.html":{},"components/SampleModalComponent.html":{},"injectables/ServerPayload.html":{},"modules/SharedCoreModule.html":{},"interfaces/SimpleDate.html":{},"components/SinComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"directives/ValidateBcPostalDirective.html":{},"directives/ValidateCityDirective.html":{},"directives/ValidateNameDirective.html":{},"directives/ValidatePostalcodeDirective.html":{},"directives/ValidateRegionDirective.html":{},"directives/ValidateStreetDirective.html":{},"components/WizardProgressBarComponent.html":{},"interfaces/WizardProgressItem.html":{},"components/XiconButtonComponent.html":{},"changelog.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"todo.html":{},"additional-documentation/getting-started.html":{},"additional-documentation/local-development.html":{},"additional-documentation/local-development/schematics.html":{},"additional-documentation/local-development/components.html":{}}}],["retains",{"_index":2789,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["retrieve",{"_index":4828,"title":{},"body":{"changelog.html":{}}}],["retry",{"_index":3036,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["retrystrategy(maxretry",{"_index":3038,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["retrywhen",{"_index":2631,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["return",{"_index":108,"title":{},"body":{"classes/AbstractForm.html":{},"classes/AbstractHttpService.html":{},"classes/AbstractReactForm.html":{},"classes/AbstractTestPage.html":{},"interfaces/AddrLabelList.html":{},"classes/Address.html":{},"injectables/CaptchaDataService.html":{},"modules/CaptchaModule.html":{},"injectables/CheckCompleteBaseService.html":{},"components/CityComponent.html":{},"interfaces/CommonAttachmentJson.html":{},"classes/CommonImage.html":{},"classes/CommonImageProcessingError.html":{},"interfaces/CommonImageScaleFactors.html":{},"classes/CommonImageScaleFactorsImpl.html":{},"interfaces/CommonLogMessage.html":{},"components/ConfirmTemplateComponent.html":{},"classes/Container.html":{},"interfaces/CountryList.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"injectables/DefaultPageGuardService.html":{},"directives/DuplicateCheckDirective.html":{},"components/EmailComponent.html":{},"interfaces/ErrorMessage.html":{},"interfaces/FileUploaderMsg.html":{},"components/FormActionBarComponent.html":{},"interfaces/GeoAddressResult.html":{},"components/GeocoderInputComponent.html":{},"injectables/GeocoderService.html":{},"components/HeaderComponent.html":{},"interfaces/IRadioItems.html":{},"interfaces/ISpaEnvResponse.html":{},"guards/LoadPageGuardService.html":{},"interfaces/Maxlengths.html":{},"components/NameComponent.html":{},"interfaces/PageList.html":{},"interfaces/PageListInterface.html":{},"injectables/PageStateService.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"classes/Person.html":{},"components/PhnComponent.html":{},"components/PhoneNumberComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{},"components/RadioComponent.html":{},"interfaces/ReadOnlyFields.html":{},"guards/RouteGuardService.html":{},"injectables/ServerPayload.html":{},"components/SinComponent.html":{},"directives/ValidateBcPostalDirective.html":{},"directives/ValidateCityDirective.html":{},"directives/ValidateNameDirective.html":{},"directives/ValidatePostalcodeDirective.html":{},"directives/ValidateRegionDirective.html":{},"directives/ValidateStreetDirective.html":{},"components/WizardProgressBarComponent.html":{},"interfaces/WizardProgressItem.html":{},"changelog.html":{}}}],["returned",{"_index":1158,"title":{},"body":{"injectables/CaptchaDataService.html":{},"interfaces/CommonLogMessage.html":{},"components/GeocoderInputComponent.html":{},"interfaces/ISpaEnvResponse.html":{},"interfaces/PageList.html":{},"injectables/PageStateService.html":{},"injectables/ServerPayload.html":{}}}],["returns",{"_index":49,"title":{},"body":{"classes/AbstractBaseForm.html":{},"classes/AbstractForm.html":{},"classes/AbstractFormControl.html":{},"classes/AbstractHttpService.html":{},"injectables/AbstractPageGuardService.html":{},"injectables/AbstractPgCheckService.html":{},"classes/AbstractReactForm.html":{},"classes/AbstractTestPage.html":{},"components/AccordionCommonComponent.html":{},"classes/Address.html":{},"components/ButtonComponent.html":{},"components/ButtonGroupComponent.html":{},"injectables/CaptchaDataService.html":{},"modules/CaptchaModule.html":{},"injectables/CheckCompleteBaseService.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"interfaces/CommonAttachmentJson.html":{},"classes/CommonImage.html":{},"classes/CommonImageProcessingError.html":{},"interfaces/CommonImageScaleFactors.html":{},"classes/CommonImageScaleFactorsImpl.html":{},"classes/Container.html":{},"components/CoreBreadcrumbComponent.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"injectables/DefaultPageGuardService.html":{},"components/DropdownComponent.html":{},"directives/DuplicateCheckDirective.html":{},"components/EmailComponent.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/FullNameComponent.html":{},"components/GeocoderInputComponent.html":{},"injectables/GeocoderService.html":{},"components/HeaderComponent.html":{},"guards/LoadPageGuardService.html":{},"components/NameComponent.html":{},"components/PageFrameworkComponent.html":{},"interfaces/PageList.html":{},"interfaces/PageListInterface.html":{},"components/PageSectionComponent.html":{},"injectables/PageStateService.html":{},"components/PasswordComponent.html":{},"classes/Person.html":{},"components/PhnComponent.html":{},"components/PhoneNumberComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"components/RadioComponent.html":{},"guards/RouteGuardService.html":{},"components/SampleModalComponent.html":{},"components/SinComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"directives/ValidateBcPostalDirective.html":{},"directives/ValidateCityDirective.html":{},"directives/ValidateNameDirective.html":{},"directives/ValidatePostalcodeDirective.html":{},"directives/ValidateRegionDirective.html":{},"directives/ValidateStreetDirective.html":{},"components/WizardProgressBarComponent.html":{},"components/XiconButtonComponent.html":{}}}],["reu",{"_index":2132,"title":{},"body":{"interfaces/CountryList.html":{}}}],["reverts",{"_index":4877,"title":{},"body":{"changelog.html":{}}}],["reviewmode",{"_index":4395,"title":{},"body":{"components/ThumbnailComponent.html":{}}}],["revise",{"_index":1248,"title":{},"body":{"injectables/CheckCompleteBaseService.html":{},"interfaces/PageListInterface.html":{}}}],["rica",{"_index":1866,"title":{},"body":{"interfaces/CountryList.html":{}}}],["rico",{"_index":2129,"title":{},"body":{"interfaces/CountryList.html":{}}}],["right",{"_index":552,"title":{},"body":{"classes/AbstractTestPage.html":{},"components/CoreBreadcrumbComponent.html":{},"additional-documentation/local-development/schematics.html":{}}}],["rimraf",{"_index":5093,"title":{},"body":{"changelog.html":{}}}],["risky",{"_index":3857,"title":{},"body":{"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{}}}],["role=\"progressbar",{"_index":3913,"title":{},"body":{"components/PasswordComponent.html":{}}}],["role=alert",{"_index":600,"title":{},"body":{"classes/AbstractTestPage.html":{}}}],["romania",{"_index":2135,"title":{},"body":{"interfaces/CountryList.html":{}}}],["root",{"_index":1256,"title":{},"body":{"injectables/CheckCompleteBaseService.html":{},"interfaces/CommonLogMessage.html":{},"injectables/DefaultPageGuardService.html":{},"interfaces/GeoAddressResult.html":{},"injectables/GeocoderService.html":{},"guards/LoadPageGuardService.html":{},"interfaces/PageList.html":{},"interfaces/PageListInterface.html":{},"injectables/PageStateService.html":{},"guards/RouteGuardService.html":{}}}],["rotate",{"_index":2774,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["rou",{"_index":2134,"title":{},"body":{"interfaces/CountryList.html":{}}}],["route",{"_index":65,"title":{},"body":{"classes/AbstractBaseForm.html":{},"classes/AbstractForm.html":{},"injectables/AbstractPageGuardService.html":{},"injectables/AbstractPgCheckService.html":{},"classes/AbstractReactForm.html":{},"interfaces/AddrLabelList.html":{},"injectables/CheckCompleteBaseService.html":{},"classes/Container.html":{},"guards/LoadPageGuardService.html":{},"interfaces/Maxlengths.html":{},"interfaces/PageList.html":{},"interfaces/PageListInterface.html":{},"injectables/PageStateService.html":{},"interfaces/ReadOnlyFields.html":{},"guards/RouteGuardService.html":{},"components/WizardProgressBarComponent.html":{},"interfaces/WizardProgressItem.html":{},"changelog.html":{}}}],["routeconst",{"_index":3749,"title":{},"body":{"interfaces/PageList.html":{},"injectables/PageStateService.html":{}}}],["routeconst.find",{"_index":3756,"title":{},"body":{"interfaces/PageList.html":{},"injectables/PageStateService.html":{}}}],["routeguard",{"_index":4928,"title":{},"body":{"changelog.html":{}}}],["routeguardservice",{"_index":372,"title":{"guards/RouteGuardService.html":{}},"body":{"injectables/AbstractPgCheckService.html":{},"injectables/CheckCompleteBaseService.html":{},"interfaces/PageListInterface.html":{},"guards/RouteGuardService.html":{},"changelog.html":{},"coverage.html":{}}}],["routeisactive",{"_index":3447,"title":{},"body":{"components/HeaderComponent.html":{}}}],["routeisactive(url",{"_index":3459,"title":{},"body":{"components/HeaderComponent.html":{}}}],["routelistconst",{"_index":3746,"title":{},"body":{"interfaces/PageList.html":{},"injectables/PageStateService.html":{}}}],["routelistconst[x",{"_index":3751,"title":{},"body":{"interfaces/PageList.html":{},"injectables/PageStateService.html":{}}}],["routepath",{"_index":1706,"title":{},"body":{"classes/Container.html":{}}}],["routepath.split",{"_index":1710,"title":{},"body":{"classes/Container.html":{},"interfaces/WizardProgressItem.html":{}}}],["router",{"_index":21,"title":{},"body":{"classes/AbstractBaseForm.html":{},"classes/AbstractForm.html":{},"classes/AbstractReactForm.html":{},"injectables/CheckCompleteBaseService.html":{},"interfaces/FileUploaderMsg.html":{},"components/HeaderComponent.html":{},"guards/LoadPageGuardService.html":{},"interfaces/PageList.html":{},"interfaces/PageListInterface.html":{},"injectables/PageStateService.html":{},"guards/RouteGuardService.html":{},"components/WizardProgressBarComponent.html":{}}}],["routerevents",{"_index":4473,"title":{},"body":{"components/WizardProgressBarComponent.html":{}}}],["routermodule",{"_index":4278,"title":{},"body":{"modules/SharedCoreModule.html":{}}}],["routerstatesnapshot",{"_index":3674,"title":{},"body":{"guards/LoadPageGuardService.html":{},"guards/RouteGuardService.html":{}}}],["routes",{"_index":3656,"title":{},"body":{"guards/LoadPageGuardService.html":{},"guards/RouteGuardService.html":{}}}],["routing.modle.ts",{"_index":3662,"title":{},"body":{"guards/LoadPageGuardService.html":{},"guards/RouteGuardService.html":{}}}],["routing=true",{"_index":5435,"title":{},"body":{"additional-documentation/local-development/schematics.html":{}}}],["row",{"_index":3488,"title":{},"body":{"interfaces/IRadioItems.html":{},"components/RadioComponent.html":{}}}],["rules",{"_index":5005,"title":{},"body":{"changelog.html":{}}}],["run",{"_index":4515,"title":{},"body":{"components/WizardProgressBarComponent.html":{},"changelog.html":{},"additional-documentation/local-development/schematics.html":{},"additional-documentation/local-development/components.html":{}}}],["running",{"_index":5097,"title":{},"body":{"changelog.html":{},"additional-documentation/local-development/schematics.html":{}}}],["runs",{"_index":99,"title":{},"body":{"classes/AbstractForm.html":{},"classes/AbstractReactForm.html":{},"additional-documentation/local-development/schematics.html":{},"additional-documentation/local-development/components.html":{}}}],["runtime",{"_index":5060,"title":{},"body":{"changelog.html":{}}}],["rural",{"_index":826,"title":{},"body":{"interfaces/AddrLabelList.html":{},"interfaces/Maxlengths.html":{},"interfaces/ReadOnlyFields.html":{}}}],["rus",{"_index":2136,"title":{},"body":{"interfaces/CountryList.html":{}}}],["russian",{"_index":2137,"title":{},"body":{"interfaces/CountryList.html":{}}}],["rwa",{"_index":2139,"title":{},"body":{"interfaces/CountryList.html":{}}}],["rwanda",{"_index":2140,"title":{},"body":{"interfaces/CountryList.html":{}}}],["rxjs",{"_index":299,"title":{},"body":{"classes/AbstractHttpService.html":{},"injectables/CaptchaDataService.html":{},"interfaces/CommonLogMessage.html":{},"interfaces/FileUploaderMsg.html":{},"interfaces/GeoAddressResult.html":{},"components/GeocoderInputComponent.html":{},"injectables/GeocoderService.html":{},"interfaces/ISpaEnvResponse.html":{},"guards/LoadPageGuardService.html":{},"guards/RouteGuardService.html":{},"injectables/ServerPayload.html":{},"components/WizardProgressBarComponent.html":{},"dependencies.html":{}}}],["rxjs/operators",{"_index":302,"title":{},"body":{"classes/AbstractHttpService.html":{},"interfaces/FileUploaderMsg.html":{},"components/FullNameComponent.html":{},"interfaces/FullNameErrorMsg.html":{},"interfaces/GeoAddressResult.html":{},"components/GeocoderInputComponent.html":{},"injectables/GeocoderService.html":{},"components/HeaderComponent.html":{},"components/WizardProgressBarComponent.html":{}}}],["réunion",{"_index":2133,"title":{},"body":{"interfaces/CountryList.html":{}}}],["s",{"_index":2980,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["s+)@(\\s+)\\.(\\s",{"_index":2584,"title":{},"body":{"components/EmailComponent.html":{}}}],["saba",{"_index":1804,"title":{},"body":{"interfaces/CountryList.html":{}}}],["safe",{"_index":4535,"title":{},"body":{"components/WizardProgressBarComponent.html":{}}}],["sahara",{"_index":2286,"title":{},"body":{"interfaces/CountryList.html":{}}}],["saint",{"_index":2142,"title":{},"body":{"interfaces/CountryList.html":{}}}],["salvador",{"_index":1893,"title":{},"body":{"interfaces/CountryList.html":{}}}],["same",{"_index":570,"title":{},"body":{"classes/AbstractTestPage.html":{},"interfaces/AddrLabelList.html":{},"components/ButtonComponent.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"interfaces/GeoAddressResult.html":{},"injectables/GeocoderService.html":{},"guards/LoadPageGuardService.html":{},"interfaces/Maxlengths.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"interfaces/ReadOnlyFields.html":{},"guards/RouteGuardService.html":{},"changelog.html":{},"additional-documentation/local-development/schematics.html":{},"additional-documentation/local-development/components.html":{}}}],["samoa",{"_index":1755,"title":{},"body":{"interfaces/CountryList.html":{}}}],["sample",{"_index":720,"title":{},"body":{"components/AccordionCommonComponent.html":{},"components/ButtonComponent.html":{},"components/ButtonGroupComponent.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"components/ConfirmTemplateComponent.html":{},"components/CoreBreadcrumbComponent.html":{},"components/DatepickerComponent.html":{},"components/DropdownComponent.html":{},"components/EmailComponent.html":{},"components/ErrorContainerComponent.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/FullNameComponent.html":{},"components/GeocoderInputComponent.html":{},"components/HeaderComponent.html":{},"components/NameComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"components/PhnComponent.html":{},"components/PhoneNumberComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"components/RadioComponent.html":{},"interfaces/SampleImageInterface.html":{},"components/SampleModalComponent.html":{},"components/SinComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{},"components/XiconButtonComponent.html":{},"changelog.html":{}}}],["sampleimageinterface",{"_index":4241,"title":{"interfaces/SampleImageInterface.html":{}},"body":{"interfaces/SampleImageInterface.html":{},"components/SampleModalComponent.html":{},"coverage.html":{}}}],["samplemodal",{"_index":4246,"title":{},"body":{"interfaces/SampleImageInterface.html":{},"components/SampleModalComponent.html":{}}}],["samplemodalcomponent",{"_index":719,"title":{"components/SampleModalComponent.html":{}},"body":{"components/AccordionCommonComponent.html":{},"components/ButtonComponent.html":{},"components/ButtonGroupComponent.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"components/ConfirmTemplateComponent.html":{},"components/CoreBreadcrumbComponent.html":{},"components/DatepickerComponent.html":{},"components/DropdownComponent.html":{},"components/EmailComponent.html":{},"components/ErrorContainerComponent.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/FullNameComponent.html":{},"components/GeocoderInputComponent.html":{},"components/HeaderComponent.html":{},"components/NameComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"components/PhnComponent.html":{},"components/PhoneNumberComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"components/RadioComponent.html":{},"interfaces/SampleImageInterface.html":{},"components/SampleModalComponent.html":{},"modules/SharedCoreModule.html":{},"components/SinComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{},"components/XiconButtonComponent.html":{},"coverage.html":{},"overview.html":{}}}],["san",{"_index":2166,"title":{},"body":{"interfaces/CountryList.html":{}}}],["sandwich",{"_index":2201,"title":{},"body":{"interfaces/CountryList.html":{}}}],["sao",{"_index":2169,"title":{},"body":{"interfaces/CountryList.html":{}}}],["sapiente",{"_index":1383,"title":{},"body":{"components/CityComponent.html":{},"interfaces/CountryList.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"interfaces/FileUploaderMsg.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{}}}],["saskatchewan",{"_index":4201,"title":{},"body":{"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{}}}],["satisfy",{"_index":2415,"title":{},"body":{"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{}}}],["satisifed",{"_index":3592,"title":{},"body":{"interfaces/ISpaEnvResponse.html":{}}}],["sau",{"_index":2172,"title":{},"body":{"interfaces/CountryList.html":{}}}],["saudi",{"_index":2173,"title":{},"body":{"interfaces/CountryList.html":{}}}],["save",{"_index":3396,"title":{},"body":{"components/GeocoderInputComponent.html":{},"components/PhnComponent.html":{},"index.html":{}}}],["saved",{"_index":2818,"title":{},"body":{"interfaces/FileUploaderMsg.html":{},"interfaces/ISpaEnvResponse.html":{}}}],["saving",{"_index":3050,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["scale",{"_index":1529,"title":{},"body":{"interfaces/CommonAttachmentJson.html":{},"classes/CommonImage.html":{},"classes/CommonImageProcessingError.html":{},"interfaces/CommonImageScaleFactors.html":{},"classes/CommonImageScaleFactorsImpl.html":{},"interfaces/FileUploaderMsg.html":{}}}],["scaled",{"_index":3003,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["scaledimage",{"_index":2969,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["scaledown",{"_index":1549,"title":{},"body":{"interfaces/CommonImageScaleFactors.html":{},"classes/CommonImageScaleFactorsImpl.html":{}}}],["scaledown(scale",{"_index":1522,"title":{},"body":{"interfaces/CommonAttachmentJson.html":{},"classes/CommonImage.html":{},"classes/CommonImageProcessingError.html":{},"interfaces/CommonImageScaleFactors.html":{},"classes/CommonImageScaleFactorsImpl.html":{}}}],["scaledwidth",{"_index":4391,"title":{},"body":{"components/ThumbnailComponent.html":{}}}],["scaledwidthstring",{"_index":4411,"title":{},"body":{"components/ThumbnailComponent.html":{}}}],["scalefactors",{"_index":2912,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["scalefactors.heightfactor",{"_index":3034,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["scalefactors.scaledown(reductionscalefactor",{"_index":2913,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["scalefactors.widthfactor",{"_index":3031,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["scaling",{"_index":2872,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["scan",{"_index":2629,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["scan((acc",{"_index":3041,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["schedule",{"_index":4514,"title":{},"body":{"components/WizardProgressBarComponent.html":{}}}],["schematic",{"_index":5117,"title":{},"body":{"changelog.html":{},"additional-documentation/local-development/schematics.html":{}}}],["schematiccreating",{"_index":5438,"title":{},"body":{"additional-documentation/local-development/schematics.html":{}}}],["schematics",{"_index":5115,"title":{"additional-documentation/local-development/schematics.html":{}},"body":{"changelog.html":{},"additional-documentation/local-development.html":{},"additional-documentation/local-development/schematics.html":{},"additional-documentation/local-development/components.html":{}}}],["schematics:moh",{"_index":5437,"title":{},"body":{"additional-documentation/local-development/schematics.html":{}}}],["schemtaics",{"_index":5415,"title":{},"body":{"additional-documentation/local-development/schematics.html":{}}}],["school",{"_index":3536,"title":{},"body":{"interfaces/ISpaEnvResponse.html":{}}}],["scotia",{"_index":4193,"title":{},"body":{"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{}}}],["screen",{"_index":453,"title":{},"body":{"classes/AbstractTestPage.html":{},"components/HeaderComponent.html":{}}}],["screenreader",{"_index":4869,"title":{},"body":{"changelog.html":{}}}],["script",{"_index":5141,"title":{},"body":{"changelog.html":{}}}],["scripts",{"_index":4975,"title":{},"body":{"changelog.html":{},"additional-documentation/local-development/schematics.html":{},"additional-documentation/local-development/components.html":{}}}],["scroll",{"_index":3159,"title":{},"body":{"components/FormActionBarComponent.html":{},"components/WizardProgressBarComponent.html":{}}}],["scrolldown",{"_index":433,"title":{},"body":{"classes/AbstractTestPage.html":{}}}],["scrolls",{"_index":67,"title":{},"body":{"classes/AbstractBaseForm.html":{},"classes/AbstractForm.html":{},"classes/AbstractReactForm.html":{},"classes/AbstractTestPage.html":{},"components/WizardProgressBarComponent.html":{}}}],["scrollstepintoview",{"_index":4478,"title":{},"body":{"components/WizardProgressBarComponent.html":{}}}],["scrollto",{"_index":82,"title":{},"body":{"classes/AbstractBaseForm.html":{},"coverage.html":{}}}],["scrolltoerror",{"_index":3153,"title":{},"body":{"components/FormActionBarComponent.html":{},"changelog.html":{},"coverage.html":{}}}],["scrolltoerrorsonsubmit",{"_index":3143,"title":{},"body":{"components/FormActionBarComponent.html":{}}}],["scrollup",{"_index":434,"title":{},"body":{"classes/AbstractTestPage.html":{}}}],["scss",{"_index":5465,"title":{},"body":{"additional-documentation/local-development/schematics.html":{}}}],["sdn",{"_index":2209,"title":{},"body":{"interfaces/CountryList.html":{}}}],["search",{"_index":930,"title":{},"body":{"interfaces/AddrLabelList.html":{},"interfaces/CommonLogMessage.html":{},"components/GeocoderInputComponent.html":{},"interfaces/Maxlengths.html":{},"interfaces/ReadOnlyFields.html":{},"todo.html":{}}}],["searching",{"_index":3357,"title":{},"body":{"components/GeocoderInputComponent.html":{}}}],["searchtext",{"_index":3311,"title":{},"body":{"components/GeocoderInputComponent.html":{}}}],["second",{"_index":814,"title":{},"body":{"interfaces/AddrLabelList.html":{},"interfaces/Maxlengths.html":{},"interfaces/ReadOnlyFields.html":{}}}],["secondary",{"_index":1083,"title":{},"body":{"components/ButtonComponent.html":{},"interfaces/FileUploaderMsg.html":{},"additional-documentation/getting-started.html":{}}}],["section",{"_index":3436,"title":{},"body":{"components/HeaderComponent.html":{},"interfaces/ISpaEnvResponse.html":{},"components/PageSectionComponent.html":{},"changelog.html":{},"additional-documentation/getting-started.html":{}}}],["section'},{'name",{"_index":704,"title":{},"body":{"components/AccordionCommonComponent.html":{},"components/ButtonComponent.html":{},"components/ButtonGroupComponent.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"components/ConfirmTemplateComponent.html":{},"components/CoreBreadcrumbComponent.html":{},"components/DatepickerComponent.html":{},"components/DropdownComponent.html":{},"components/EmailComponent.html":{},"components/ErrorContainerComponent.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/FullNameComponent.html":{},"components/GeocoderInputComponent.html":{},"components/HeaderComponent.html":{},"components/NameComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"components/PhnComponent.html":{},"components/PhoneNumberComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"components/RadioComponent.html":{},"components/SampleModalComponent.html":{},"components/SinComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{},"components/XiconButtonComponent.html":{}}}],["section.component",{"_index":4288,"title":{},"body":{"modules/SharedCoreModule.html":{}}}],["section.component.html",{"_index":3778,"title":{},"body":{"components/PageSectionComponent.html":{}}}],["section.component.scss",{"_index":3777,"title":{},"body":{"components/PageSectionComponent.html":{}}}],["section.component.ts",{"_index":3776,"title":{},"body":{"components/PageSectionComponent.html":{},"coverage.html":{}}}],["section.component.ts:17",{"_index":3779,"title":{},"body":{"components/PageSectionComponent.html":{}}}],["section.component.ts:21",{"_index":3781,"title":{},"body":{"components/PageSectionComponent.html":{}}}],["section/page",{"_index":3775,"title":{},"body":{"components/PageSectionComponent.html":{},"modules/SharedCoreModule.html":{},"coverage.html":{}}}],["sections",{"_index":5109,"title":{},"body":{"changelog.html":{}}}],["secure",{"_index":3531,"title":{},"body":{"interfaces/ISpaEnvResponse.html":{}}}],["security",{"_index":4987,"title":{},"body":{"changelog.html":{},"todo.html":{}}}],["see",{"_index":356,"title":{},"body":{"injectables/AbstractPageGuardService.html":{},"injectables/AbstractPgCheckService.html":{},"components/ButtonGroupComponent.html":{},"injectables/CheckCompleteBaseService.html":{},"interfaces/CommonAttachmentJson.html":{},"classes/CommonImage.html":{},"classes/CommonImageProcessingError.html":{},"interfaces/CommonImageScaleFactors.html":{},"classes/CommonImageScaleFactorsImpl.html":{},"interfaces/CountryList.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"components/EmailComponent.html":{},"interfaces/FileUploaderMsg.html":{},"components/FullNameComponent.html":{},"interfaces/FullNameErrorMsg.html":{},"interfaces/ISpaEnvResponse.html":{},"components/NameComponent.html":{},"interfaces/PageListInterface.html":{},"changelog.html":{},"license.html":{},"additional-documentation/local-development/components.html":{}}}],["select",{"_index":544,"title":{},"body":{"classes/AbstractTestPage.html":{},"interfaces/AddrLabelList.html":{},"components/CoreBreadcrumbComponent.html":{},"interfaces/CountryList.html":{},"interfaces/Maxlengths.html":{},"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{},"interfaces/ReadOnlyFields.html":{},"modules/SharedCoreModule.html":{},"changelog.html":{},"dependencies.html":{}}}],["select/ng",{"_index":4291,"title":{},"body":{"modules/SharedCoreModule.html":{},"dependencies.html":{}}}],["select[id=\"${labelid}\"]`)).click",{"_index":603,"title":{},"body":{"classes/AbstractTestPage.html":{}}}],["select[ng",{"_index":625,"title":{},"body":{"classes/AbstractTestPage.html":{}}}],["selected",{"_index":3414,"title":{},"body":{"components/GeocoderInputComponent.html":{}}}],["selectedaddress",{"_index":3312,"title":{},"body":{"components/GeocoderInputComponent.html":{}}}],["selectfilelabelref",{"_index":2680,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["selecting",{"_index":575,"title":{},"body":{"classes/AbstractTestPage.html":{},"components/GeocoderInputComponent.html":{}}}],["selection",{"_index":3408,"title":{},"body":{"components/GeocoderInputComponent.html":{}}}],["selections",{"_index":2344,"title":{},"body":{"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{}}}],["selectoption",{"_index":435,"title":{},"body":{"classes/AbstractTestPage.html":{}}}],["selectoption(labelid",{"_index":540,"title":{},"body":{"classes/AbstractTestPage.html":{}}}],["selector",{"_index":634,"title":{},"body":{"components/AccordionCommonComponent.html":{},"interfaces/AddrLabelList.html":{},"components/ButtonComponent.html":{},"components/ButtonGroupComponent.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"components/ConfirmTemplateComponent.html":{},"components/CoreBreadcrumbComponent.html":{},"interfaces/CountryList.html":{},"interfaces/DateErrorMsg.html":{},"directives/DateFieldFormatDirective.html":{},"components/DatepickerComponent.html":{},"components/DropdownComponent.html":{},"directives/DuplicateCheckDirective.html":{},"components/EmailComponent.html":{},"components/ErrorContainerComponent.html":{},"interfaces/FileUploaderMsg.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/FullNameComponent.html":{},"interfaces/FullNameErrorMsg.html":{},"components/GeocoderInputComponent.html":{},"components/HeaderComponent.html":{},"interfaces/IRadioItems.html":{},"interfaces/ISpaEnvResponse.html":{},"interfaces/Maxlengths.html":{},"components/NameComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"components/PhnComponent.html":{},"components/PhoneNumberComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{},"components/RadioComponent.html":{},"interfaces/ReadOnlyFields.html":{},"interfaces/SampleImageInterface.html":{},"components/SampleModalComponent.html":{},"components/SinComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"directives/ValidateBcPostalDirective.html":{},"directives/ValidateCityDirective.html":{},"directives/ValidateNameDirective.html":{},"directives/ValidatePostalcodeDirective.html":{},"directives/ValidateRegionDirective.html":{},"directives/ValidateStreetDirective.html":{},"components/WizardProgressBarComponent.html":{},"components/XiconButtonComponent.html":{}}}],["selects",{"_index":543,"title":{},"body":{"classes/AbstractTestPage.html":{}}}],["self",{"_index":152,"title":{},"body":{"classes/AbstractFormControl.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"interfaces/CountryList.html":{},"components/DropdownComponent.html":{},"components/EmailComponent.html":{},"interfaces/FileUploaderMsg.html":{},"components/GeocoderInputComponent.html":{},"interfaces/IRadioItems.html":{},"components/NameComponent.html":{},"components/PhnComponent.html":{},"components/PhoneNumberComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{},"components/RadioComponent.html":{},"components/SinComponent.html":{},"changelog.html":{}}}],["self.dataservice.getmspuuid",{"_index":2919,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["self.handleerror(commonimageerror.wrongtype",{"_index":2974,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["self.logimageinfo(\"msp_file",{"_index":3024,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["self.resetinputfields",{"_index":2975,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["semantic",{"_index":5375,"title":{},"body":{"todo.html":{}}}],["sen",{"_index":2175,"title":{},"body":{"interfaces/CountryList.html":{}}}],["send",{"_index":243,"title":{},"body":{"classes/AbstractHttpService.html":{},"interfaces/CommonLogMessage.html":{},"injectables/GeocoderService.html":{}}}],["sending",{"_index":796,"title":{},"body":{"interfaces/AddrLabelList.html":{},"interfaces/Maxlengths.html":{},"interfaces/ReadOnlyFields.html":{}}}],["sends",{"_index":572,"title":{},"body":{"classes/AbstractTestPage.html":{}}}],["sendspaenvserver(rapidresponsecode",{"_index":3620,"title":{},"body":{"interfaces/ISpaEnvResponse.html":{}}}],["senegal",{"_index":2176,"title":{},"body":{"interfaces/CountryList.html":{}}}],["separately",{"_index":4579,"title":{},"body":{"changelog.html":{}}}],["sequence",{"_index":1238,"title":{},"body":{"injectables/CheckCompleteBaseService.html":{},"interfaces/PageListInterface.html":{}}}],["sequentially",{"_index":3655,"title":{},"body":{"guards/LoadPageGuardService.html":{},"guards/RouteGuardService.html":{}}}],["sequi",{"_index":1445,"title":{},"body":{"components/CityComponent.html":{},"interfaces/CountryList.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"interfaces/FileUploaderMsg.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{}}}],["serbia",{"_index":2178,"title":{},"body":{"interfaces/CountryList.html":{}}}],["server",{"_index":265,"title":{},"body":{"classes/AbstractHttpService.html":{},"injectables/CaptchaDataService.html":{},"interfaces/CommonLogMessage.html":{},"injectables/GeocoderService.html":{},"interfaces/ISpaEnvResponse.html":{},"injectables/ServerPayload.html":{}}}],["serverpayload",{"_index":1159,"title":{"injectables/ServerPayload.html":{}},"body":{"injectables/CaptchaDataService.html":{},"injectables/ServerPayload.html":{},"coverage.html":{}}}],["servicd",{"_index":2503,"title":{},"body":{"injectables/DefaultPageGuardService.html":{}}}],["service",{"_index":227,"title":{},"body":{"classes/AbstractHttpService.html":{},"injectables/AbstractPageGuardService.html":{},"injectables/AbstractPgCheckService.html":{},"modules/CaptchaModule.html":{},"injectables/CheckCompleteBaseService.html":{},"interfaces/CommonLogMessage.html":{},"interfaces/FileUploaderMsg.html":{},"interfaces/GeoAddressResult.html":{},"injectables/GeocoderService.html":{},"interfaces/ISpaEnvResponse.html":{},"guards/LoadPageGuardService.html":{},"interfaces/PageListInterface.html":{},"guards/RouteGuardService.html":{},"changelog.html":{},"additional-documentation/getting-started.html":{}}}],["service.ts",{"_index":225,"title":{},"body":{"classes/AbstractHttpService.html":{},"coverage.html":{}}}],["service.ts:13",{"_index":239,"title":{},"body":{"classes/AbstractHttpService.html":{}}}],["service.ts:18",{"_index":241,"title":{},"body":{"classes/AbstractHttpService.html":{}}}],["service.ts:24",{"_index":248,"title":{},"body":{"classes/AbstractHttpService.html":{}}}],["service.ts:32",{"_index":273,"title":{},"body":{"classes/AbstractHttpService.html":{}}}],["service.ts:40",{"_index":275,"title":{},"body":{"classes/AbstractHttpService.html":{}}}],["service.ts:54",{"_index":294,"title":{},"body":{"classes/AbstractHttpService.html":{}}}],["service.ts:61",{"_index":260,"title":{},"body":{"classes/AbstractHttpService.html":{}}}],["service.ts:64",{"_index":245,"title":{},"body":{"classes/AbstractHttpService.html":{}}}],["service.ts:75",{"_index":279,"title":{},"body":{"classes/AbstractHttpService.html":{}}}],["service/log.service",{"_index":2633,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["service/msp",{"_index":2635,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["servicename",{"_index":3450,"title":{},"body":{"components/HeaderComponent.html":{}}}],["services",{"_index":4993,"title":{},"body":{"changelog.html":{},"additional-documentation/getting-started.html":{}}}],["services/abstract",{"_index":3521,"title":{},"body":{"interfaces/ISpaEnvResponse.html":{}}}],["services/geocoder.service",{"_index":771,"title":{},"body":{"interfaces/AddrLabelList.html":{},"components/GeocoderInputComponent.html":{},"interfaces/Maxlengths.html":{},"interfaces/ReadOnlyFields.html":{}}}],["services/logger.service",{"_index":3520,"title":{},"body":{"interfaces/ISpaEnvResponse.html":{}}}],["sessionid",{"_index":1574,"title":{},"body":{"interfaces/CommonLogMessage.html":{}}}],["set",{"_index":283,"title":{},"body":{"classes/AbstractHttpService.html":{},"classes/AbstractReactForm.html":{},"interfaces/AddrLabelList.html":{},"classes/Address.html":{},"modules/CaptchaModule.html":{},"injectables/CheckCompleteBaseService.html":{},"components/CityComponent.html":{},"interfaces/CommonAttachmentJson.html":{},"classes/CommonImage.html":{},"classes/CommonImageProcessingError.html":{},"interfaces/CommonImageScaleFactors.html":{},"classes/CommonImageScaleFactorsImpl.html":{},"interfaces/CommonLogMessage.html":{},"interfaces/CountryList.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"injectables/DefaultPageGuardService.html":{},"components/EmailComponent.html":{},"interfaces/GeoAddressResult.html":{},"components/GeocoderInputComponent.html":{},"injectables/GeocoderService.html":{},"interfaces/IRadioItems.html":{},"interfaces/ISpaEnvResponse.html":{},"interfaces/Maxlengths.html":{},"components/NameComponent.html":{},"interfaces/PageList.html":{},"interfaces/PageListInterface.html":{},"components/PageSectionComponent.html":{},"injectables/PageStateService.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"classes/Person.html":{},"components/PhnComponent.html":{},"components/PhoneNumberComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{},"components/RadioComponent.html":{},"interfaces/ReadOnlyFields.html":{},"components/SinComponent.html":{},"components/WizardProgressBarComponent.html":{},"changelog.html":{},"additional-documentation/local-development/components.html":{}}}],["set('addressstring",{"_index":3279,"title":{},"body":{"interfaces/GeoAddressResult.html":{},"injectables/GeocoderService.html":{}}}],["set('autocomplete",{"_index":3276,"title":{},"body":{"interfaces/GeoAddressResult.html":{},"injectables/GeocoderService.html":{}}}],["set('brief",{"_index":3272,"title":{},"body":{"interfaces/GeoAddressResult.html":{},"injectables/GeocoderService.html":{}}}],["set('echo",{"_index":3271,"title":{},"body":{"interfaces/GeoAddressResult.html":{},"injectables/GeocoderService.html":{}}}],["set('matchprecisionnot",{"_index":3277,"title":{},"body":{"interfaces/GeoAddressResult.html":{},"injectables/GeocoderService.html":{}}}],["set('maxresults",{"_index":3270,"title":{},"body":{"interfaces/GeoAddressResult.html":{},"injectables/GeocoderService.html":{}}}],["set('minscore",{"_index":3269,"title":{},"body":{"interfaces/GeoAddressResult.html":{},"injectables/GeocoderService.html":{}}}],["setaddress(data",{"_index":949,"title":{},"body":{"interfaces/AddrLabelList.html":{},"interfaces/Maxlengths.html":{},"interfaces/ReadOnlyFields.html":{}}}],["setbuttongrpval",{"_index":1109,"title":{},"body":{"components/ButtonGroupComponent.html":{}}}],["setbuttongrpval(val",{"_index":1124,"title":{},"body":{"components/ButtonGroupComponent.html":{}}}],["setbypassguards(bypass",{"_index":1244,"title":{},"body":{"injectables/CheckCompleteBaseService.html":{},"injectables/DefaultPageGuardService.html":{}}}],["setcheckboxval",{"_index":1287,"title":{},"body":{"components/CheckboxComponent.html":{}}}],["setcheckboxval(event",{"_index":1304,"title":{},"body":{"components/CheckboxComponent.html":{}}}],["setcity(value",{"_index":873,"title":{},"body":{"interfaces/AddrLabelList.html":{},"interfaces/Maxlengths.html":{},"interfaces/ReadOnlyFields.html":{}}}],["setcountry(value",{"_index":861,"title":{},"body":{"interfaces/AddrLabelList.html":{},"interfaces/Maxlengths.html":{},"interfaces/ReadOnlyFields.html":{}}}],["setdefaultcountryasoption",{"_index":934,"title":{},"body":{"interfaces/AddrLabelList.html":{},"interfaces/Maxlengths.html":{},"interfaces/ReadOnlyFields.html":{}}}],["setdefaultprovinceasoption(country",{"_index":920,"title":{},"body":{"interfaces/AddrLabelList.html":{},"interfaces/Maxlengths.html":{},"interfaces/ReadOnlyFields.html":{}}}],["setdisabledstate",{"_index":126,"title":{},"body":{"classes/AbstractFormControl.html":{},"components/CityComponent.html":{},"components/EmailComponent.html":{},"components/NameComponent.html":{},"components/PhnComponent.html":{},"components/PhoneNumberComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"components/RadioComponent.html":{},"components/SinComponent.html":{}}}],["setdisabledstate(isdisabled",{"_index":157,"title":{},"body":{"classes/AbstractFormControl.html":{},"interfaces/AddrLabelList.html":{},"components/CityComponent.html":{},"interfaces/CountryList.html":{},"components/EmailComponent.html":{},"interfaces/Maxlengths.html":{},"components/NameComponent.html":{},"components/PhnComponent.html":{},"components/PhoneNumberComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"components/RadioComponent.html":{},"interfaces/ReadOnlyFields.html":{},"components/SinComponent.html":{}}}],["seterrormsg",{"_index":127,"title":{},"body":{"classes/AbstractFormControl.html":{},"components/CityComponent.html":{},"interfaces/CountryList.html":{},"components/EmailComponent.html":{},"components/PhnComponent.html":{},"components/PhoneNumberComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"components/RadioComponent.html":{},"components/SinComponent.html":{}}}],["setfirstname(value",{"_index":3252,"title":{},"body":{"components/FullNameComponent.html":{},"interfaces/FullNameErrorMsg.html":{}}}],["setlabels",{"_index":954,"title":{},"body":{"interfaces/AddrLabelList.html":{},"interfaces/Maxlengths.html":{},"interfaces/ReadOnlyFields.html":{}}}],["setlastname(value",{"_index":3256,"title":{},"body":{"components/FullNameComponent.html":{},"interfaces/FullNameErrorMsg.html":{}}}],["setmaxlengths",{"_index":959,"title":{},"body":{"interfaces/AddrLabelList.html":{},"interfaces/Maxlengths.html":{},"interfaces/ReadOnlyFields.html":{}}}],["setmiddlename(value",{"_index":3255,"title":{},"body":{"components/FullNameComponent.html":{},"interfaces/FullNameErrorMsg.html":{}}}],["setname(fullname",{"_index":3954,"title":{},"body":{"classes/Person.html":{}}}],["setpagecomplete",{"_index":1210,"title":{},"body":{"injectables/CheckCompleteBaseService.html":{},"guards/LoadPageGuardService.html":{},"interfaces/PageListInterface.html":{},"injectables/PageStateService.html":{},"guards/RouteGuardService.html":{}}}],["setpagecomplete(path",{"_index":3805,"title":{},"body":{"injectables/PageStateService.html":{}}}],["setpageincomplete",{"_index":1211,"title":{},"body":{"injectables/CheckCompleteBaseService.html":{},"guards/LoadPageGuardService.html":{},"interfaces/PageList.html":{},"interfaces/PageListInterface.html":{},"injectables/PageStateService.html":{},"guards/RouteGuardService.html":{}}}],["setpageincomplete(url",{"_index":3807,"title":{},"body":{"injectables/PageStateService.html":{}}}],["setpages",{"_index":3744,"title":{},"body":{"interfaces/PageList.html":{},"injectables/PageStateService.html":{}}}],["setpages(arr",{"_index":3809,"title":{},"body":{"injectables/PageStateService.html":{}}}],["setpassword",{"_index":3831,"title":{},"body":{"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{}}}],["setpassword(password",{"_index":3865,"title":{},"body":{"components/PasswordComponent.html":{}}}],["setphonenumber",{"_index":4060,"title":{},"body":{"components/PhoneNumberComponent.html":{}}}],["setphonenumber(value",{"_index":4074,"title":{},"body":{"components/PhoneNumberComponent.html":{}}}],["setpostalcode(value",{"_index":878,"title":{},"body":{"interfaces/AddrLabelList.html":{},"interfaces/Maxlengths.html":{},"interfaces/ReadOnlyFields.html":{}}}],["setprogresssteps",{"_index":1697,"title":{},"body":{"classes/Container.html":{},"interfaces/WizardProgressItem.html":{}}}],["setprogresssteps(pageroutes",{"_index":1707,"title":{},"body":{"classes/Container.html":{}}}],["setprovince(value",{"_index":870,"title":{},"body":{"interfaces/AddrLabelList.html":{},"interfaces/Maxlengths.html":{},"interfaces/ReadOnlyFields.html":{}}}],["setreadonlyfields",{"_index":964,"title":{},"body":{"interfaces/AddrLabelList.html":{},"interfaces/Maxlengths.html":{},"interfaces/ReadOnlyFields.html":{}}}],["sets",{"_index":875,"title":{},"body":{"interfaces/AddrLabelList.html":{},"injectables/CheckCompleteBaseService.html":{},"interfaces/Maxlengths.html":{},"interfaces/PageListInterface.html":{},"classes/Person.html":{},"interfaces/ReadOnlyFields.html":{},"changelog.html":{}}}],["setseverity(severity",{"_index":1663,"title":{},"body":{"interfaces/CommonLogMessage.html":{}}}],["setstarturl(url",{"_index":1242,"title":{},"body":{"injectables/CheckCompleteBaseService.html":{}}}],["setstatus",{"_index":4210,"title":{},"body":{"components/RadioComponent.html":{}}}],["setstatus(val",{"_index":3503,"title":{},"body":{"interfaces/IRadioItems.html":{},"components/RadioComponent.html":{}}}],["setstreet(val",{"_index":1021,"title":{},"body":{"classes/Address.html":{}}}],["setstreetaddress(value",{"_index":871,"title":{},"body":{"interfaces/AddrLabelList.html":{},"interfaces/Maxlengths.html":{},"interfaces/ReadOnlyFields.html":{}}}],["settags(message",{"_index":1667,"title":{},"body":{"interfaces/CommonLogMessage.html":{}}}],["setter/getter",{"_index":4090,"title":{},"body":{"components/PhoneNumberComponent.html":{}}}],["settimeout(scrolltoerror",{"_index":3163,"title":{},"body":{"components/FormActionBarComponent.html":{}}}],["settimestamp",{"_index":1660,"title":{},"body":{"interfaces/CommonLogMessage.html":{}}}],["setting",{"_index":2349,"title":{},"body":{"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"changelog.html":{},"additional-documentation/local-development/components.html":{}}}],["setup",{"_index":344,"title":{},"body":{"injectables/AbstractPageGuardService.html":{},"injectables/AbstractPgCheckService.html":{},"injectables/CheckCompleteBaseService.html":{},"guards/LoadPageGuardService.html":{},"interfaces/PageListInterface.html":{},"guards/RouteGuardService.html":{},"index.html":{},"additional-documentation/getting-started.html":{},"additional-documentation/local-development/schematics.html":{},"additional-documentation/local-development/components.html":{}}}],["setup:git",{"_index":5140,"title":{},"body":{"changelog.html":{}}}],["setuprequest",{"_index":233,"title":{},"body":{"classes/AbstractHttpService.html":{},"injectables/GeocoderService.html":{}}}],["setuprequest(observable",{"_index":274,"title":{},"body":{"classes/AbstractHttpService.html":{},"injectables/GeocoderService.html":{}}}],["seturl",{"_index":1629,"title":{},"body":{"interfaces/CommonLogMessage.html":{}}}],["seturl(newurl",{"_index":1583,"title":{},"body":{"interfaces/CommonLogMessage.html":{}}}],["setvalue(val",{"_index":1374,"title":{},"body":{"components/CityComponent.html":{},"components/EmailComponent.html":{},"components/NameComponent.html":{},"components/PhnComponent.html":{},"components/PhoneNumberComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"components/RadioComponent.html":{},"components/SinComponent.html":{}}}],["severity",{"_index":1621,"title":{},"body":{"interfaces/CommonLogMessage.html":{}}}],["severitylevels",{"_index":1561,"title":{},"body":{"interfaces/CommonLogMessage.html":{},"miscellaneous/enumerations.html":{}}}],["seychelles",{"_index":2180,"title":{},"body":{"interfaces/CountryList.html":{}}}],["sgp",{"_index":2184,"title":{},"body":{"interfaces/CountryList.html":{}}}],["sgs",{"_index":2200,"title":{},"body":{"interfaces/CountryList.html":{}}}],["sha1",{"_index":2648,"title":{},"body":{"interfaces/FileUploaderMsg.html":{},"coverage.html":{},"dependencies.html":{}}}],["sha1(mspimage.filecontent",{"_index":3011,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["sha1_",{"_index":2652,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["sha1sum",{"_index":2719,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["shared",{"_index":3533,"title":{},"body":{"interfaces/ISpaEnvResponse.html":{},"index.html":{}}}],["sharedcoremodule",{"_index":4260,"title":{"modules/SharedCoreModule.html":{}},"body":{"modules/SharedCoreModule.html":{},"index.html":{},"modules.html":{},"overview.html":{},"additional-documentation/getting-started.html":{}}}],["sharing",{"_index":525,"title":{},"body":{"classes/AbstractTestPage.html":{}}}],["shn",{"_index":2144,"title":{},"body":{"interfaces/CountryList.html":{}}}],["shouldn't",{"_index":3630,"title":{},"body":{"interfaces/ISpaEnvResponse.html":{}}}],["show",{"_index":39,"title":{},"body":{"classes/AbstractBaseForm.html":{},"classes/AbstractForm.html":{},"classes/AbstractReactForm.html":{},"interfaces/AddrLabelList.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"interfaces/Maxlengths.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"components/PhoneNumberComponent.html":{},"interfaces/ReadOnlyFields.html":{},"changelog.html":{},"additional-documentation/local-development/components.html":{}}}],["showerror",{"_index":1111,"title":{},"body":{"components/ButtonGroupComponent.html":{},"components/CheckboxComponent.html":{},"interfaces/FileUploaderMsg.html":{},"components/FullNameComponent.html":{},"interfaces/FullNameErrorMsg.html":{},"todo.html":{}}}],["showfullsizeview",{"_index":3611,"title":{},"body":{"interfaces/ISpaEnvResponse.html":{},"components/ThumbnailComponent.html":{}}}],["showline${line",{"_index":891,"title":{},"body":{"interfaces/AddrLabelList.html":{},"interfaces/Maxlengths.html":{},"interfaces/ReadOnlyFields.html":{}}}],["showline2",{"_index":821,"title":{},"body":{"interfaces/AddrLabelList.html":{},"interfaces/Maxlengths.html":{},"interfaces/ReadOnlyFields.html":{}}}],["showline3",{"_index":822,"title":{},"body":{"interfaces/AddrLabelList.html":{},"interfaces/Maxlengths.html":{},"interfaces/ReadOnlyFields.html":{}}}],["shown",{"_index":3526,"title":{},"body":{"interfaces/ISpaEnvResponse.html":{}}}],["showpasswordstrength",{"_index":3834,"title":{},"body":{"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{}}}],["shows",{"_index":3489,"title":{},"body":{"interfaces/IRadioItems.html":{},"components/RadioComponent.html":{},"changelog.html":{}}}],["side",{"_index":1645,"title":{},"body":{"interfaces/CommonLogMessage.html":{},"interfaces/ISpaEnvResponse.html":{},"components/PageFrameworkComponent.html":{}}}],["sierra",{"_index":2182,"title":{},"body":{"interfaces/CountryList.html":{}}}],["sign",{"_index":4836,"title":{},"body":{"changelog.html":{}}}],["similar",{"_index":3166,"title":{},"body":{"components/FormSubmitBarComponent.html":{},"components/GeocoderInputComponent.html":{}}}],["simple",{"_index":1203,"title":{},"body":{"injectables/CheckCompleteBaseService.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"interfaces/PageListInterface.html":{}}}],["simplechanges",{"_index":2321,"title":{},"body":{"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"interfaces/FileUploaderMsg.html":{},"components/GeocoderInputComponent.html":{}}}],["simpledate",{"_index":4348,"title":{"interfaces/SimpleDate.html":{}},"body":{"interfaces/SimpleDate.html":{},"changelog.html":{},"coverage.html":{}}}],["simpler",{"_index":5464,"title":{},"body":{"additional-documentation/local-development/schematics.html":{}}}],["simplicity",{"_index":1064,"title":{},"body":{"components/ButtonComponent.html":{}}}],["simply",{"_index":3047,"title":{},"body":{"interfaces/FileUploaderMsg.html":{},"components/PageSectionComponent.html":{}}}],["simulates",{"_index":3382,"title":{},"body":{"components/GeocoderInputComponent.html":{}}}],["sin",{"_index":4356,"title":{},"body":{"components/SinComponent.html":{},"changelog.html":{}}}],["sin'},{'name",{"_index":722,"title":{},"body":{"components/AccordionCommonComponent.html":{},"components/ButtonComponent.html":{},"components/ButtonGroupComponent.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"components/ConfirmTemplateComponent.html":{},"components/CoreBreadcrumbComponent.html":{},"components/DatepickerComponent.html":{},"components/DropdownComponent.html":{},"components/EmailComponent.html":{},"components/ErrorContainerComponent.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/FullNameComponent.html":{},"components/GeocoderInputComponent.html":{},"components/HeaderComponent.html":{},"components/NameComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"components/PhnComponent.html":{},"components/PhoneNumberComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"components/RadioComponent.html":{},"components/SampleModalComponent.html":{},"components/SinComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{},"components/XiconButtonComponent.html":{}}}],["sin.component.html",{"_index":4358,"title":{},"body":{"components/SinComponent.html":{}}}],["sin.component.scss",{"_index":4357,"title":{},"body":{"components/SinComponent.html":{}}}],["sin_",{"_index":4363,"title":{},"body":{"components/SinComponent.html":{}}}],["sincomponent",{"_index":721,"title":{"components/SinComponent.html":{}},"body":{"components/AccordionCommonComponent.html":{},"components/ButtonComponent.html":{},"components/ButtonGroupComponent.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"components/ConfirmTemplateComponent.html":{},"components/CoreBreadcrumbComponent.html":{},"components/DatepickerComponent.html":{},"components/DropdownComponent.html":{},"components/EmailComponent.html":{},"components/ErrorContainerComponent.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/FullNameComponent.html":{},"components/GeocoderInputComponent.html":{},"components/HeaderComponent.html":{},"components/NameComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"components/PhnComponent.html":{},"components/PhoneNumberComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"components/RadioComponent.html":{},"components/SampleModalComponent.html":{},"modules/SharedCoreModule.html":{},"components/SinComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{},"components/XiconButtonComponent.html":{},"coverage.html":{},"overview.html":{}}}],["singapore",{"_index":2185,"title":{},"body":{"interfaces/CountryList.html":{}}}],["single",{"_index":3434,"title":{},"body":{"components/HeaderComponent.html":{},"interfaces/IRadioItems.html":{},"components/PageFrameworkComponent.html":{},"components/RadioComponent.html":{}}}],["sint",{"_index":1802,"title":{},"body":{"interfaces/CountryList.html":{}}}],["sit",{"_index":1378,"title":{},"body":{"components/CityComponent.html":{},"interfaces/CountryList.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"interfaces/FileUploaderMsg.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{}}}],["site",{"_index":1735,"title":{},"body":{"components/CoreBreadcrumbComponent.html":{}}}],["sitereg",{"_index":3787,"title":{},"body":{"components/PageSectionComponent.html":{}}}],["size",{"_index":1506,"title":{},"body":{"interfaces/CommonAttachmentJson.html":{},"classes/CommonImage.html":{},"classes/CommonImageProcessingError.html":{},"interfaces/CommonImageScaleFactors.html":{},"classes/CommonImageScaleFactorsImpl.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"interfaces/FileUploaderMsg.html":{},"changelog.html":{}}}],["sizetxt",{"_index":1508,"title":{},"body":{"interfaces/CommonAttachmentJson.html":{},"classes/CommonImage.html":{},"classes/CommonImageProcessingError.html":{},"interfaces/CommonImageScaleFactors.html":{},"classes/CommonImageScaleFactorsImpl.html":{}}}],["sizeunit",{"_index":1507,"title":{},"body":{"interfaces/CommonAttachmentJson.html":{},"classes/CommonImage.html":{},"classes/CommonImageProcessingError.html":{},"interfaces/CommonImageScaleFactors.html":{},"classes/CommonImageScaleFactorsImpl.html":{}}}],["sjm",{"_index":2212,"title":{},"body":{"interfaces/CountryList.html":{}}}],["sk",{"_index":4200,"title":{},"body":{"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{}}}],["skip",{"_index":452,"title":{},"body":{"classes/AbstractTestPage.html":{},"components/HeaderComponent.html":{},"components/WizardProgressBarComponent.html":{},"changelog.html":{}}}],["skip_content_hash",{"_index":3444,"title":{},"body":{"components/HeaderComponent.html":{}}}],["skiplibcheck",{"_index":5452,"title":{},"body":{"additional-documentation/local-development/schematics.html":{}}}],["skiplibcheck=false",{"_index":5118,"title":{},"body":{"changelog.html":{}}}],["skiplinkpath",{"_index":3445,"title":{},"body":{"components/HeaderComponent.html":{}}}],["skiptocontentbutton",{"_index":420,"title":{},"body":{"classes/AbstractTestPage.html":{}}}],["slb",{"_index":2193,"title":{},"body":{"interfaces/CountryList.html":{}}}],["sle",{"_index":2181,"title":{},"body":{"interfaces/CountryList.html":{}}}],["slightly",{"_index":3472,"title":{},"body":{"components/HeaderComponent.html":{}}}],["slot",{"_index":1729,"title":{},"body":{"components/CoreBreadcrumbComponent.html":{}}}],["slots",{"_index":1723,"title":{},"body":{"components/CoreBreadcrumbComponent.html":{}}}],["slovakia",{"_index":2190,"title":{},"body":{"interfaces/CountryList.html":{}}}],["slovenia",{"_index":2192,"title":{},"body":{"interfaces/CountryList.html":{}}}],["slv",{"_index":1891,"title":{},"body":{"interfaces/CountryList.html":{}}}],["small",{"_index":2810,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["smr",{"_index":2165,"title":{},"body":{"interfaces/CountryList.html":{}}}],["social",{"_index":4361,"title":{},"body":{"components/SinComponent.html":{}}}],["software",{"_index":5343,"title":{},"body":{"license.html":{}}}],["solomon",{"_index":2194,"title":{},"body":{"interfaces/CountryList.html":{}}}],["solve",{"_index":2906,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["som",{"_index":2195,"title":{},"body":{"interfaces/CountryList.html":{}}}],["somalia",{"_index":2196,"title":{},"body":{"interfaces/CountryList.html":{}}}],["something",{"_index":1013,"title":{},"body":{"classes/Address.html":{}}}],["sortobjectbykeys",{"_index":5238,"title":{},"body":{"coverage.html":{}}}],["source",{"_index":4,"title":{},"body":{"classes/AbstractBaseForm.html":{},"classes/AbstractForm.html":{},"classes/AbstractFormControl.html":{},"classes/AbstractHttpService.html":{},"injectables/AbstractPageGuardService.html":{},"injectables/AbstractPgCheckService.html":{},"classes/AbstractReactForm.html":{},"classes/AbstractTestPage.html":{},"components/AccordionCommonComponent.html":{},"interfaces/AddrLabelList.html":{},"classes/Address.html":{},"classes/Base.html":{},"components/ButtonComponent.html":{},"components/ButtonGroupComponent.html":{},"injectables/CaptchaDataService.html":{},"modules/CaptchaModule.html":{},"injectables/CheckCompleteBaseService.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"interfaces/CommonAttachmentJson.html":{},"classes/CommonImage.html":{},"classes/CommonImageProcessingError.html":{},"interfaces/CommonImageScaleFactors.html":{},"classes/CommonImageScaleFactorsImpl.html":{},"interfaces/CommonLogMessage.html":{},"components/ConfirmTemplateComponent.html":{},"classes/Container.html":{},"components/CoreBreadcrumbComponent.html":{},"interfaces/CountryList.html":{},"interfaces/DateErrorMsg.html":{},"directives/DateFieldFormatDirective.html":{},"components/DatepickerComponent.html":{},"injectables/DefaultPageGuardService.html":{},"components/DropdownComponent.html":{},"directives/DuplicateCheckDirective.html":{},"components/EmailComponent.html":{},"components/ErrorContainerComponent.html":{},"interfaces/ErrorMessage.html":{},"interfaces/FileUploaderMsg.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/FullNameComponent.html":{},"interfaces/FullNameErrorMsg.html":{},"interfaces/GeoAddressResult.html":{},"components/GeocoderInputComponent.html":{},"injectables/GeocoderService.html":{},"components/HeaderComponent.html":{},"interfaces/IRadioItems.html":{},"interfaces/ISpaEnvResponse.html":{},"guards/LoadPageGuardService.html":{},"interfaces/Maxlengths.html":{},"classes/MoHCommonLibraryError.html":{},"components/NameComponent.html":{},"components/PageFrameworkComponent.html":{},"interfaces/PageList.html":{},"interfaces/PageListInterface.html":{},"components/PageSectionComponent.html":{},"injectables/PageStateService.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"classes/Person.html":{},"components/PhnComponent.html":{},"components/PhoneNumberComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{},"components/RadioComponent.html":{},"interfaces/ReadOnlyFields.html":{},"guards/RouteGuardService.html":{},"interfaces/SampleImageInterface.html":{},"components/SampleModalComponent.html":{},"injectables/ServerPayload.html":{},"modules/SharedCoreModule.html":{},"interfaces/SimpleDate.html":{},"components/SinComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"directives/ValidateBcPostalDirective.html":{},"directives/ValidateCityDirective.html":{},"directives/ValidateNameDirective.html":{},"directives/ValidatePostalcodeDirective.html":{},"directives/ValidateRegionDirective.html":{},"directives/ValidateStreetDirective.html":{},"components/WizardProgressBarComponent.html":{},"interfaces/WizardProgressItem.html":{},"components/XiconButtonComponent.html":{}}}],["south",{"_index":2198,"title":{},"body":{"interfaces/CountryList.html":{}}}],["southern",{"_index":1920,"title":{},"body":{"interfaces/CountryList.html":{}}}],["soutput",{"_index":2984,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["spa",{"_index":3509,"title":{},"body":{"interfaces/ISpaEnvResponse.html":{}}}],["spa_env_acl_maintenance_flag",{"_index":3513,"title":{},"body":{"interfaces/ISpaEnvResponse.html":{}}}],["spa_env_acl_maintenance_message",{"_index":3514,"title":{},"body":{"interfaces/ISpaEnvResponse.html":{}}}],["spa_env_msp_acl_maintenance_flag\":\"\",\"spa_env_msp_acl_maintenance_message",{"_index":3601,"title":{},"body":{"interfaces/ISpaEnvResponse.html":{}}}],["spa_env_msp_maintenance_flag",{"_index":3515,"title":{},"body":{"interfaces/ISpaEnvResponse.html":{}}}],["spa_env_msp_maintenance_flag\":\"\",\"spa_env_msp_maintenance_message",{"_index":3602,"title":{},"body":{"interfaces/ISpaEnvResponse.html":{}}}],["spa_env_msp_maintenance_message",{"_index":3516,"title":{},"body":{"interfaces/ISpaEnvResponse.html":{}}}],["spa_env_name",{"_index":3621,"title":{},"body":{"interfaces/ISpaEnvResponse.html":{}}}],["spa_env_now",{"_index":3517,"title":{},"body":{"interfaces/ISpaEnvResponse.html":{}}}],["spa_env_pacutoff_maintenance_end",{"_index":3518,"title":{},"body":{"interfaces/ISpaEnvResponse.html":{}}}],["spa_env_pacutoff_maintenance_start",{"_index":3519,"title":{},"body":{"interfaces/ISpaEnvResponse.html":{}}}],["spa_env_pacutoff_maintenance_start\":\"\",\"spa_env_pacutoff_maintenance_end\":\"\",\"spa_env_now",{"_index":3604,"title":{},"body":{"interfaces/ISpaEnvResponse.html":{}}}],["space",{"_index":2358,"title":{},"body":{"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/PhnComponent.html":{},"components/PhoneNumberComponent.html":{},"components/PostalCodeComponent.html":{},"components/SinComponent.html":{},"components/WizardProgressBarComponent.html":{},"changelog.html":{},"coverage.html":{}}}],["space/workspace/moh",{"_index":5488,"title":{},"body":{"additional-documentation/local-development/components.html":{}}}],["spaces",{"_index":4030,"title":{},"body":{"components/PhnComponent.html":{},"components/PhoneNumberComponent.html":{},"components/SinComponent.html":{}}}],["spacing",{"_index":4592,"title":{},"body":{"changelog.html":{}}}],["spaenvres",{"_index":3595,"title":{},"body":{"interfaces/ISpaEnvResponse.html":{}}}],["spain",{"_index":2205,"title":{},"body":{"interfaces/CountryList.html":{}}}],["specfic",{"_index":4794,"title":{},"body":{"changelog.html":{}}}],["special",{"_index":1361,"title":{},"body":{"components/CityComponent.html":{},"interfaces/CountryList.html":{},"interfaces/FileUploaderMsg.html":{},"components/NameComponent.html":{},"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{}}}],["specific",{"_index":177,"title":{},"body":{"classes/AbstractFormControl.html":{},"interfaces/AddrLabelList.html":{},"classes/Address.html":{},"interfaces/CommonLogMessage.html":{},"guards/LoadPageGuardService.html":{},"interfaces/Maxlengths.html":{},"interfaces/ReadOnlyFields.html":{},"license.html":{},"additional-documentation/getting-started.html":{}}}],["specifically",{"_index":5506,"title":{},"body":{"additional-documentation/local-development/components.html":{}}}],["specified",{"_index":251,"title":{},"body":{"classes/AbstractHttpService.html":{},"classes/AbstractTestPage.html":{},"injectables/GeocoderService.html":{}}}],["spinner",{"_index":41,"title":{},"body":{"classes/AbstractBaseForm.html":{},"classes/AbstractForm.html":{},"classes/AbstractReactForm.html":{}}}],["split",{"_index":2917,"title":{},"body":{"interfaces/FileUploaderMsg.html":{},"changelog.html":{},"additional-documentation/local-development/schematics.html":{}}}],["splits",{"_index":3273,"title":{},"body":{"interfaces/GeoAddressResult.html":{},"injectables/GeocoderService.html":{}}}],["splunk",{"_index":1483,"title":{},"body":{"interfaces/CommonAttachmentJson.html":{},"classes/CommonImage.html":{},"classes/CommonImageProcessingError.html":{},"interfaces/CommonImageScaleFactors.html":{},"classes/CommonImageScaleFactorsImpl.html":{},"interfaces/CommonLogMessage.html":{}}}],["spm",{"_index":2158,"title":{},"body":{"interfaces/CountryList.html":{}}}],["srb",{"_index":2177,"title":{},"body":{"interfaces/CountryList.html":{}}}],["sri",{"_index":2207,"title":{},"body":{"interfaces/CountryList.html":{}}}],["ssd",{"_index":2202,"title":{},"body":{"interfaces/CountryList.html":{}}}],["stable",{"_index":3291,"title":{},"body":{"interfaces/GeoAddressResult.html":{},"injectables/GeocoderService.html":{}}}],["stack",{"_index":4560,"title":{},"body":{"components/XiconButtonComponent.html":{}}}],["standard",{"_index":1010,"title":{},"body":{"classes/Address.html":{}}}],["start",{"_index":5116,"title":{},"body":{"changelog.html":{},"additional-documentation/local-development/schematics.html":{}}}],["start/end",{"_index":4526,"title":{},"body":{"components/WizardProgressBarComponent.html":{}}}],["start/files/app_component_html.ts",{"_index":5242,"title":{},"body":{"coverage.html":{}}}],["start/files/favicon_ico.ts",{"_index":5245,"title":{},"body":{"coverage.html":{}}}],["start/files/gov3_bc_logo_png_base64.ts",{"_index":5247,"title":{},"body":{"coverage.html":{}}}],["start/files/myriadwebpro_ttf_base64.ts",{"_index":5240,"title":{},"body":{"coverage.html":{}}}],["start/files/overrides_scss.ts",{"_index":5249,"title":{},"body":{"coverage.html":{}}}],["start/files/styles.ts",{"_index":5251,"title":{},"body":{"coverage.html":{}}}],["start/files/variables_scss.ts",{"_index":5253,"title":{},"body":{"coverage.html":{}}}],["start/index.ts",{"_index":5255,"title":{},"body":{"coverage.html":{}}}],["start/package",{"_index":5262,"title":{},"body":{"coverage.html":{}}}],["started",{"_index":4566,"title":{"changelog.html":{},"index.html":{},"license.html":{},"todo.html":{},"additional-documentation/getting-started.html":{}},"body":{"changelog.html":{},"index.html":{},"additional-documentation/getting-started.html":{}}}],["starting",{"_index":5382,"title":{},"body":{"additional-documentation/getting-started.html":{}}}],["startoftoday",{"_index":3963,"title":{},"body":{"classes/Person.html":{}}}],["starts",{"_index":2926,"title":{},"body":{"interfaces/FileUploaderMsg.html":{},"components/PhnComponent.html":{}}}],["starturl",{"_index":1212,"title":{},"body":{"injectables/CheckCompleteBaseService.html":{},"interfaces/PageListInterface.html":{}}}],["state",{"_index":832,"title":{},"body":{"interfaces/AddrLabelList.html":{},"interfaces/CountryList.html":{},"guards/LoadPageGuardService.html":{},"interfaces/Maxlengths.html":{},"interfaces/ReadOnlyFields.html":{},"guards/RouteGuardService.html":{},"miscellaneous/enumerations.html":{}}}],["state.service",{"_index":2510,"title":{},"body":{"injectables/DefaultPageGuardService.html":{}}}],["state.service.ts",{"_index":3742,"title":{},"body":{"interfaces/PageList.html":{},"injectables/PageStateService.html":{},"coverage.html":{}}}],["state.service.ts:103",{"_index":3800,"title":{},"body":{"injectables/PageStateService.html":{}}}],["state.service.ts:110",{"_index":3797,"title":{},"body":{"injectables/PageStateService.html":{}}}],["state.service.ts:16",{"_index":3795,"title":{},"body":{"injectables/PageStateService.html":{}}}],["state.service.ts:20",{"_index":3810,"title":{},"body":{"injectables/PageStateService.html":{}}}],["state.service.ts:52",{"_index":3802,"title":{},"body":{"injectables/PageStateService.html":{}}}],["state.service.ts:63",{"_index":3804,"title":{},"body":{"injectables/PageStateService.html":{}}}],["state.service.ts:7",{"_index":3743,"title":{},"body":{"interfaces/PageList.html":{}}}],["state.service.ts:71",{"_index":3808,"title":{},"body":{"injectables/PageStateService.html":{}}}],["state.service.ts:84",{"_index":3806,"title":{},"body":{"injectables/PageStateService.html":{}}}],["state.service.ts:92",{"_index":3799,"title":{},"body":{"injectables/PageStateService.html":{}}}],["statements",{"_index":5151,"title":{},"body":{"coverage.html":{}}}],["states",{"_index":2060,"title":{},"body":{"interfaces/CountryList.html":{},"miscellaneous/enumerations.html":{}}}],["static",{"_index":977,"title":{},"body":{"classes/Address.html":{},"modules/CaptchaModule.html":{},"interfaces/FileUploaderMsg.html":{},"components/PhoneNumberComponent.html":{}}}],["status",{"_index":1687,"title":{},"body":{"components/ConfirmTemplateComponent.html":{},"changelog.html":{},"todo.html":{}}}],["statuschange",{"_index":5011,"title":{},"body":{"changelog.html":{}}}],["statustext",{"_index":1615,"title":{},"body":{"interfaces/CommonLogMessage.html":{}}}],["step",{"_index":2874,"title":{},"body":{"interfaces/FileUploaderMsg.html":{},"guards/LoadPageGuardService.html":{},"guards/RouteGuardService.html":{},"components/WizardProgressBarComponent.html":{},"additional-documentation/local-development/components.html":{}}}],["step.title",{"_index":4542,"title":{},"body":{"components/WizardProgressBarComponent.html":{}}}],["stepcontainer",{"_index":4474,"title":{},"body":{"components/WizardProgressBarComponent.html":{}}}],["stepper",{"_index":1700,"title":{},"body":{"classes/Container.html":{},"interfaces/WizardProgressItem.html":{}}}],["stepper/wizard",{"_index":4880,"title":{},"body":{"changelog.html":{}}}],["stepper/wizardprogress",{"_index":4902,"title":{},"body":{"changelog.html":{}}}],["steps",{"_index":2738,"title":{},"body":{"interfaces/FileUploaderMsg.html":{},"components/WizardProgressBarComponent.html":{}}}],["still",{"_index":2557,"title":{},"body":{"components/EmailComponent.html":{},"interfaces/FileUploaderMsg.html":{},"components/GeocoderInputComponent.html":{},"components/NameComponent.html":{},"components/PageSectionComponent.html":{},"index.html":{},"additional-documentation/getting-started.html":{},"additional-documentation/local-development/schematics.html":{}}}],["store",{"_index":984,"title":{},"body":{"classes/Address.html":{}}}],["stored",{"_index":906,"title":{},"body":{"interfaces/AddrLabelList.html":{},"interfaces/Maxlengths.html":{},"interfaces/ReadOnlyFields.html":{}}}],["stp",{"_index":2168,"title":{},"body":{"interfaces/CountryList.html":{}}}],["str",{"_index":2609,"title":{},"body":{"interfaces/ErrorMessage.html":{},"components/GeocoderInputComponent.html":{}}}],["str.replace",{"_index":2610,"title":{},"body":{"interfaces/ErrorMessage.html":{}}}],["str.slice(0",{"_index":3412,"title":{},"body":{"components/GeocoderInputComponent.html":{}}}],["street",{"_index":811,"title":{},"body":{"interfaces/AddrLabelList.html":{},"classes/Address.html":{},"interfaces/GeoAddressResult.html":{},"injectables/GeocoderService.html":{},"interfaces/Maxlengths.html":{},"interfaces/ReadOnlyFields.html":{},"directives/ValidateStreetDirective.html":{},"changelog.html":{}}}],["street'},{'name",{"_index":724,"title":{},"body":{"components/AccordionCommonComponent.html":{},"components/ButtonComponent.html":{},"components/ButtonGroupComponent.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"components/ConfirmTemplateComponent.html":{},"components/CoreBreadcrumbComponent.html":{},"components/DatepickerComponent.html":{},"components/DropdownComponent.html":{},"components/EmailComponent.html":{},"components/ErrorContainerComponent.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/FullNameComponent.html":{},"components/GeocoderInputComponent.html":{},"components/HeaderComponent.html":{},"components/NameComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"components/PhnComponent.html":{},"components/PhoneNumberComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"components/RadioComponent.html":{},"components/SampleModalComponent.html":{},"components/SinComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{},"components/XiconButtonComponent.html":{}}}],["street.component.ts",{"_index":5374,"title":{},"body":{"todo.html":{}}}],["street.directive",{"_index":4327,"title":{},"body":{"modules/SharedCoreModule.html":{}}}],["street.directive.ts",{"_index":4466,"title":{},"body":{"directives/ValidateStreetDirective.html":{},"coverage.html":{}}}],["street.directive.ts:25",{"_index":4467,"title":{},"body":{"directives/ValidateStreetDirective.html":{}}}],["streetcomponent",{"_index":723,"title":{},"body":{"components/AccordionCommonComponent.html":{},"components/ButtonComponent.html":{},"components/ButtonGroupComponent.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"components/ConfirmTemplateComponent.html":{},"components/CoreBreadcrumbComponent.html":{},"components/DatepickerComponent.html":{},"components/DropdownComponent.html":{},"components/EmailComponent.html":{},"components/ErrorContainerComponent.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/FullNameComponent.html":{},"components/GeocoderInputComponent.html":{},"components/HeaderComponent.html":{},"components/NameComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"components/PhnComponent.html":{},"components/PhoneNumberComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"components/RadioComponent.html":{},"components/SampleModalComponent.html":{},"modules/SharedCoreModule.html":{},"components/SinComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{},"components/XiconButtonComponent.html":{},"coverage.html":{},"overview.html":{}}}],["strength",{"_index":3812,"title":{},"body":{"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{}}}],["strengthpercentage",{"_index":3828,"title":{},"body":{"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{}}}],["string",{"_index":60,"title":{},"body":{"classes/AbstractBaseForm.html":{},"classes/AbstractForm.html":{},"classes/AbstractFormControl.html":{},"classes/AbstractHttpService.html":{},"injectables/AbstractPageGuardService.html":{},"injectables/AbstractPgCheckService.html":{},"classes/AbstractReactForm.html":{},"classes/AbstractTestPage.html":{},"components/AccordionCommonComponent.html":{},"interfaces/AddrLabelList.html":{},"classes/Address.html":{},"classes/Base.html":{},"components/ButtonComponent.html":{},"components/ButtonGroupComponent.html":{},"injectables/CaptchaDataService.html":{},"injectables/CheckCompleteBaseService.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"interfaces/CommonAttachmentJson.html":{},"classes/CommonImage.html":{},"classes/CommonImageProcessingError.html":{},"interfaces/CommonImageScaleFactors.html":{},"classes/CommonImageScaleFactorsImpl.html":{},"interfaces/CommonLogMessage.html":{},"components/ConfirmTemplateComponent.html":{},"classes/Container.html":{},"interfaces/CountryList.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"injectables/DefaultPageGuardService.html":{},"components/DropdownComponent.html":{},"directives/DuplicateCheckDirective.html":{},"components/EmailComponent.html":{},"interfaces/ErrorMessage.html":{},"interfaces/FileUploaderMsg.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/FullNameComponent.html":{},"interfaces/FullNameErrorMsg.html":{},"interfaces/GeoAddressResult.html":{},"components/GeocoderInputComponent.html":{},"injectables/GeocoderService.html":{},"components/HeaderComponent.html":{},"interfaces/IRadioItems.html":{},"interfaces/ISpaEnvResponse.html":{},"guards/LoadPageGuardService.html":{},"interfaces/Maxlengths.html":{},"classes/MoHCommonLibraryError.html":{},"components/NameComponent.html":{},"interfaces/PageList.html":{},"interfaces/PageListInterface.html":{},"injectables/PageStateService.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"classes/Person.html":{},"components/PhnComponent.html":{},"components/PhoneNumberComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{},"components/RadioComponent.html":{},"interfaces/ReadOnlyFields.html":{},"guards/RouteGuardService.html":{},"interfaces/SampleImageInterface.html":{},"components/SampleModalComponent.html":{},"injectables/ServerPayload.html":{},"components/SinComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"directives/ValidateBcPostalDirective.html":{},"directives/ValidateCityDirective.html":{},"directives/ValidateNameDirective.html":{},"directives/ValidatePostalcodeDirective.html":{},"directives/ValidateRegionDirective.html":{},"directives/ValidateStreetDirective.html":{},"interfaces/WizardProgressItem.html":{},"components/XiconButtonComponent.html":{},"changelog.html":{}}}],["stringable",{"_index":1496,"title":{},"body":{"interfaces/CommonAttachmentJson.html":{},"classes/CommonImage.html":{},"classes/CommonImageProcessingError.html":{},"interfaces/CommonImageScaleFactors.html":{},"classes/CommonImageScaleFactorsImpl.html":{}}}],["strip",{"_index":194,"title":{},"body":{"classes/AbstractFormControl.html":{},"changelog.html":{}}}],["stripped",{"_index":3374,"title":{},"body":{"components/GeocoderInputComponent.html":{},"components/PhoneNumberComponent.html":{}}}],["stripped.length",{"_index":4112,"title":{},"body":{"components/PhoneNumberComponent.html":{}}}],["stripstringtomaxlength",{"_index":3319,"title":{},"body":{"components/GeocoderInputComponent.html":{}}}],["stripstringtomaxlength(str",{"_index":3342,"title":{},"body":{"components/GeocoderInputComponent.html":{}}}],["structure",{"_index":797,"title":{},"body":{"interfaces/AddrLabelList.html":{},"interfaces/CommonAttachmentJson.html":{},"classes/CommonImage.html":{},"classes/CommonImageProcessingError.html":{},"interfaces/CommonImageScaleFactors.html":{},"classes/CommonImageScaleFactorsImpl.html":{},"interfaces/Maxlengths.html":{},"interfaces/ReadOnlyFields.html":{}}}],["stuff",{"_index":4021,"title":{},"body":{"components/PhnComponent.html":{},"components/SinComponent.html":{}}}],["style",{"_index":1056,"title":{},"body":{"components/ButtonComponent.html":{},"interfaces/IRadioItems.html":{},"components/PageSectionComponent.html":{},"components/RadioComponent.html":{},"changelog.html":{}}}],["style.width]='strengthpercentage",{"_index":3914,"title":{},"body":{"components/PasswordComponent.html":{}}}],["style.width]=\\'strengthpercentage",{"_index":3922,"title":{},"body":{"components/PasswordComponent.html":{}}}],["style=scss",{"_index":5434,"title":{},"body":{"additional-documentation/local-development/schematics.html":{}}}],["styled",{"_index":4864,"title":{},"body":{"changelog.html":{}}}],["styles",{"_index":1721,"title":{},"body":{"components/CoreBreadcrumbComponent.html":{},"changelog.html":{},"index.html":{},"additional-documentation/local-development/schematics.html":{}}}],["styles/dist/common",{"_index":5495,"title":{},"body":{"additional-documentation/local-development/components.html":{}}}],["styles/dist/commonwe",{"_index":5490,"title":{},"body":{"additional-documentation/local-development/components.html":{}}}],["styles/projects/common",{"_index":5489,"title":{},"body":{"additional-documentation/local-development/components.html":{}}}],["styles/projects/common/schematics",{"_index":5431,"title":{},"body":{"additional-documentation/local-development/schematics.html":{}}}],["stylesscss",{"_index":5252,"title":{},"body":{"coverage.html":{}}}],["styleurls",{"_index":636,"title":{},"body":{"components/AccordionCommonComponent.html":{},"interfaces/AddrLabelList.html":{},"components/ButtonComponent.html":{},"components/ButtonGroupComponent.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"components/ConfirmTemplateComponent.html":{},"components/CoreBreadcrumbComponent.html":{},"interfaces/CountryList.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"components/DropdownComponent.html":{},"components/EmailComponent.html":{},"components/ErrorContainerComponent.html":{},"interfaces/FileUploaderMsg.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/FullNameComponent.html":{},"interfaces/FullNameErrorMsg.html":{},"components/GeocoderInputComponent.html":{},"components/HeaderComponent.html":{},"interfaces/IRadioItems.html":{},"interfaces/ISpaEnvResponse.html":{},"interfaces/Maxlengths.html":{},"components/NameComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"components/PhnComponent.html":{},"components/PhoneNumberComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{},"components/RadioComponent.html":{},"interfaces/ReadOnlyFields.html":{},"interfaces/SampleImageInterface.html":{},"components/SampleModalComponent.html":{},"components/SinComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{},"components/XiconButtonComponent.html":{}}}],["styling",{"_index":5025,"title":{},"body":{"changelog.html":{}}}],["stylings",{"_index":1074,"title":{},"body":{"components/ButtonComponent.html":{}}}],["stylized",{"_index":3431,"title":{},"body":{"components/HeaderComponent.html":{}}}],["sub",{"_index":3274,"title":{},"body":{"interfaces/GeoAddressResult.html":{},"injectables/GeocoderService.html":{}}}],["subclasses",{"_index":1565,"title":{},"body":{"interfaces/CommonLogMessage.html":{}}}],["subfolder",{"_index":5133,"title":{},"body":{"changelog.html":{}}}],["subject",{"_index":3352,"title":{},"body":{"components/GeocoderInputComponent.html":{}}}],["submission",{"_index":1564,"title":{},"body":{"interfaces/CommonLogMessage.html":{},"miscellaneous/enumerations.html":{}}}],["submit",{"_index":441,"title":{},"body":{"classes/AbstractTestPage.html":{},"components/AccordionCommonComponent.html":{},"components/ButtonComponent.html":{},"components/ButtonGroupComponent.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"components/ConfirmTemplateComponent.html":{},"components/CoreBreadcrumbComponent.html":{},"components/DatepickerComponent.html":{},"components/DropdownComponent.html":{},"components/EmailComponent.html":{},"components/ErrorContainerComponent.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/FullNameComponent.html":{},"components/GeocoderInputComponent.html":{},"components/HeaderComponent.html":{},"interfaces/ISpaEnvResponse.html":{},"components/NameComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"components/PhnComponent.html":{},"components/PhoneNumberComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"components/RadioComponent.html":{},"components/SampleModalComponent.html":{},"modules/SharedCoreModule.html":{},"components/SinComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{},"components/XiconButtonComponent.html":{},"coverage.html":{},"index.html":{}}}],["submitbar",{"_index":3730,"title":{},"body":{"components/PageFrameworkComponent.html":{}}}],["submitlabel",{"_index":3144,"title":{},"body":{"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{}}}],["submitted",{"_index":193,"title":{},"body":{"classes/AbstractFormControl.html":{},"interfaces/AddrLabelList.html":{},"interfaces/CommonAttachmentJson.html":{},"classes/CommonImage.html":{},"classes/CommonImageProcessingError.html":{},"interfaces/CommonImageScaleFactors.html":{},"classes/CommonImageScaleFactorsImpl.html":{},"interfaces/Maxlengths.html":{},"interfaces/ReadOnlyFields.html":{},"changelog.html":{}}}],["subscribe",{"_index":1593,"title":{},"body":{"interfaces/CommonLogMessage.html":{},"interfaces/FileUploaderMsg.html":{}}}],["subscribe(evt",{"_index":2831,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["subscribe(response",{"_index":3636,"title":{},"body":{"interfaces/ISpaEnvResponse.html":{}}}],["subscribe(this.updateskipcontentlink.bind(this",{"_index":3467,"title":{},"body":{"components/HeaderComponent.html":{}}}],["subscribe(url",{"_index":4509,"title":{},"body":{"components/WizardProgressBarComponent.html":{}}}],["subscription",{"_index":4493,"title":{},"body":{"components/WizardProgressBarComponent.html":{}}}],["success",{"_index":327,"title":{},"body":{"classes/AbstractHttpService.html":{},"components/ConfirmTemplateComponent.html":{},"interfaces/ISpaEnvResponse.html":{},"components/PasswordComponent.html":{},"changelog.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{}}}],["success_fetch_img",{"_index":5308,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["success_verify_answer_correct",{"_index":5311,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["successcode",{"_index":1675,"title":{},"body":{"components/ConfirmTemplateComponent.html":{}}}],["successfully",{"_index":2916,"title":{},"body":{"interfaces/FileUploaderMsg.html":{},"changelog.html":{}}}],["such",{"_index":1071,"title":{},"body":{"components/ButtonComponent.html":{},"components/CityComponent.html":{},"interfaces/CountryList.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{},"additional-documentation/getting-started.html":{}}}],["sudan",{"_index":2203,"title":{},"body":{"interfaces/CountryList.html":{}}}],["suggestion",{"_index":3790,"title":{},"body":{"components/PageSectionComponent.html":{}}}],["sum",{"_index":4043,"title":{},"body":{"components/PhnComponent.html":{},"components/SinComponent.html":{}}}],["sumofremainders",{"_index":4022,"title":{},"body":{"components/PhnComponent.html":{}}}],["sunhighlight",{"_index":2390,"title":{},"body":{"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{}}}],["super",{"_index":839,"title":{},"body":{"interfaces/AddrLabelList.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"components/ConfirmTemplateComponent.html":{},"interfaces/CountryList.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"components/DropdownComponent.html":{},"components/EmailComponent.html":{},"interfaces/FileUploaderMsg.html":{},"components/FullNameComponent.html":{},"interfaces/FullNameErrorMsg.html":{},"components/GeocoderInputComponent.html":{},"interfaces/IRadioItems.html":{},"interfaces/Maxlengths.html":{},"components/NameComponent.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"components/PhnComponent.html":{},"components/PhoneNumberComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{},"components/RadioComponent.html":{},"interfaces/ReadOnlyFields.html":{},"interfaces/SampleImageInterface.html":{},"components/SampleModalComponent.html":{},"components/SinComponent.html":{},"components/ToggleComponent.html":{}}}],["super(http",{"_index":1579,"title":{},"body":{"interfaces/CommonLogMessage.html":{},"interfaces/GeoAddressResult.html":{},"injectables/GeocoderService.html":{},"interfaces/ISpaEnvResponse.html":{}}}],["super(message",{"_index":3687,"title":{},"body":{"classes/MoHCommonLibraryError.html":{}}}],["super(router",{"_index":105,"title":{},"body":{"classes/AbstractForm.html":{},"classes/AbstractReactForm.html":{}}}],["super.ngoninit",{"_index":1449,"title":{},"body":{"components/CityComponent.html":{},"components/EmailComponent.html":{},"interfaces/IRadioItems.html":{},"components/PhnComponent.html":{},"components/PhoneNumberComponent.html":{},"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{},"components/RadioComponent.html":{},"components/SinComponent.html":{}}}],["supply",{"_index":4557,"title":{},"body":{"components/XiconButtonComponent.html":{}}}],["support",{"_index":4768,"title":{},"body":{"changelog.html":{},"modules.html":{}}}],["sur",{"_index":2210,"title":{},"body":{"interfaces/CountryList.html":{}}}],["sure",{"_index":850,"title":{},"body":{"interfaces/AddrLabelList.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"components/FormSubmitBarComponent.html":{},"guards/LoadPageGuardService.html":{},"interfaces/Maxlengths.html":{},"interfaces/ReadOnlyFields.html":{},"guards/RouteGuardService.html":{},"additional-documentation/getting-started.html":{},"additional-documentation/local-development/schematics.html":{},"additional-documentation/local-development/components.html":{}}}],["suriname",{"_index":2211,"title":{},"body":{"interfaces/CountryList.html":{}}}],["svalbard",{"_index":2213,"title":{},"body":{"interfaces/CountryList.html":{}}}],["svg",{"_index":5355,"title":{},"body":{"modules.html":{}}}],["svk",{"_index":2189,"title":{},"body":{"interfaces/CountryList.html":{}}}],["svn",{"_index":2191,"title":{},"body":{"interfaces/CountryList.html":{}}}],["swaziland",{"_index":2217,"title":{},"body":{"interfaces/CountryList.html":{}}}],["swe",{"_index":2218,"title":{},"body":{"interfaces/CountryList.html":{}}}],["sweden",{"_index":2219,"title":{},"body":{"interfaces/CountryList.html":{}}}],["switch",{"_index":4954,"title":{},"body":{"changelog.html":{}}}],["switched",{"_index":4523,"title":{},"body":{"components/WizardProgressBarComponent.html":{}}}],["switchmap",{"_index":3361,"title":{},"body":{"components/GeocoderInputComponent.html":{}}}],["switchmap(searchphrase",{"_index":3368,"title":{},"body":{"components/GeocoderInputComponent.html":{}}}],["switzerland",{"_index":2221,"title":{},"body":{"interfaces/CountryList.html":{}}}],["swz",{"_index":2216,"title":{},"body":{"interfaces/CountryList.html":{}}}],["sxm",{"_index":2186,"title":{},"body":{"interfaces/CountryList.html":{}}}],["syc",{"_index":2179,"title":{},"body":{"interfaces/CountryList.html":{}}}],["symbol",{"_index":4111,"title":{},"body":{"components/PhoneNumberComponent.html":{}}}],["symlink",{"_index":5436,"title":{},"body":{"additional-documentation/local-development/schematics.html":{}}}],["syr",{"_index":2222,"title":{},"body":{"interfaces/CountryList.html":{}}}],["syrian",{"_index":2223,"title":{},"body":{"interfaces/CountryList.html":{}}}],["system",{"_index":2736,"title":{},"body":{"interfaces/FileUploaderMsg.html":{},"interfaces/ISpaEnvResponse.html":{}}}],["t",{"_index":249,"title":{},"body":{"classes/AbstractHttpService.html":{},"interfaces/CommonAttachmentJson.html":{},"classes/CommonImage.html":{},"classes/CommonImageProcessingError.html":{},"interfaces/CommonImageScaleFactors.html":{},"classes/CommonImageScaleFactorsImpl.html":{},"injectables/GeocoderService.html":{}}}],["tab",{"_index":3407,"title":{},"body":{"components/GeocoderInputComponent.html":{},"components/HeaderComponent.html":{},"changelog.html":{}}}],["tabbed",{"_index":456,"title":{},"body":{"classes/AbstractTestPage.html":{}}}],["table",{"_index":3502,"title":{},"body":{"interfaces/IRadioItems.html":{},"components/RadioComponent.html":{},"coverage.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":5280,"title":{},"body":{"coverage.html":{}}}],["tabs",{"_index":5033,"title":{},"body":{"changelog.html":{}}}],["tag",{"_index":2606,"title":{},"body":{"interfaces/ErrorMessage.html":{},"interfaces/FileUploaderMsg.html":{}}}],["tagging",{"_index":5124,"title":{},"body":{"changelog.html":{}}}],["tags",{"_index":206,"title":{},"body":{"classes/AbstractFormControl.html":{},"interfaces/CommonLogMessage.html":{}}}],["taiwan",{"_index":2226,"title":{},"body":{"interfaces/CountryList.html":{}}}],["tajikistan",{"_index":2228,"title":{},"body":{"interfaces/CountryList.html":{}}}],["take",{"_index":3543,"title":{},"body":{"interfaces/ISpaEnvResponse.html":{}}}],["takes",{"_index":296,"title":{},"body":{"classes/AbstractHttpService.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{}}}],["taking",{"_index":4948,"title":{},"body":{"changelog.html":{}}}],["tanzania",{"_index":2230,"title":{},"body":{"interfaces/CountryList.html":{}}}],["tap",{"_index":301,"title":{},"body":{"classes/AbstractHttpService.html":{},"components/GeocoderInputComponent.html":{}}}],["target",{"_index":255,"title":{},"body":{"classes/AbstractHttpService.html":{},"injectables/GeocoderService.html":{},"components/WizardProgressBarComponent.html":{}}}],["tca",{"_index":2252,"title":{},"body":{"interfaces/CountryList.html":{}}}],["tcd",{"_index":1843,"title":{},"body":{"interfaces/CountryList.html":{}}}],["tell",{"_index":5430,"title":{},"body":{"additional-documentation/local-development/schematics.html":{}}}],["template",{"_index":628,"title":{},"body":{"components/AccordionCommonComponent.html":{},"components/ButtonComponent.html":{},"components/ButtonGroupComponent.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"components/ConfirmTemplateComponent.html":{},"components/CoreBreadcrumbComponent.html":{},"components/DatepickerComponent.html":{},"components/DropdownComponent.html":{},"components/EmailComponent.html":{},"components/ErrorContainerComponent.html":{},"interfaces/FileUploaderMsg.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/FullNameComponent.html":{},"components/GeocoderInputComponent.html":{},"components/HeaderComponent.html":{},"interfaces/IRadioItems.html":{},"components/NameComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"components/PhnComponent.html":{},"components/PhoneNumberComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"components/RadioComponent.html":{},"components/SampleModalComponent.html":{},"components/SinComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{},"components/XiconButtonComponent.html":{},"changelog.html":{}}}],["template'},{'name",{"_index":671,"title":{},"body":{"components/AccordionCommonComponent.html":{},"components/ButtonComponent.html":{},"components/ButtonGroupComponent.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"components/ConfirmTemplateComponent.html":{},"components/CoreBreadcrumbComponent.html":{},"components/DatepickerComponent.html":{},"components/DropdownComponent.html":{},"components/EmailComponent.html":{},"components/ErrorContainerComponent.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/FullNameComponent.html":{},"components/GeocoderInputComponent.html":{},"components/HeaderComponent.html":{},"components/NameComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"components/PhnComponent.html":{},"components/PhoneNumberComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"components/RadioComponent.html":{},"components/SampleModalComponent.html":{},"components/SinComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{},"components/XiconButtonComponent.html":{}}}],["template.component",{"_index":4337,"title":{},"body":{"modules/SharedCoreModule.html":{}}}],["template.component.html",{"_index":1673,"title":{},"body":{"components/ConfirmTemplateComponent.html":{}}}],["template.component.scss",{"_index":1672,"title":{},"body":{"components/ConfirmTemplateComponent.html":{}}}],["template.component.ts",{"_index":1671,"title":{},"body":{"components/ConfirmTemplateComponent.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{}}}],["template.component.ts:18",{"_index":1677,"title":{},"body":{"components/ConfirmTemplateComponent.html":{}}}],["template.component.ts:25",{"_index":1681,"title":{},"body":{"components/ConfirmTemplateComponent.html":{}}}],["template.component.ts:29",{"_index":1683,"title":{},"body":{"components/ConfirmTemplateComponent.html":{}}}],["template.component.ts:33",{"_index":1685,"title":{},"body":{"components/ConfirmTemplateComponent.html":{}}}],["template/confirm",{"_index":1670,"title":{},"body":{"components/ConfirmTemplateComponent.html":{},"modules/SharedCoreModule.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{}}}],["templateforms",{"_index":3304,"title":{},"body":{"components/GeocoderInputComponent.html":{}}}],["templates",{"_index":5467,"title":{},"body":{"additional-documentation/local-development/schematics.html":{}}}],["templateurl",{"_index":638,"title":{},"body":{"components/AccordionCommonComponent.html":{},"interfaces/AddrLabelList.html":{},"components/ButtonComponent.html":{},"components/ButtonGroupComponent.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"components/ConfirmTemplateComponent.html":{},"components/CoreBreadcrumbComponent.html":{},"interfaces/CountryList.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"components/DropdownComponent.html":{},"components/EmailComponent.html":{},"components/ErrorContainerComponent.html":{},"interfaces/FileUploaderMsg.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/FullNameComponent.html":{},"interfaces/FullNameErrorMsg.html":{},"components/GeocoderInputComponent.html":{},"components/HeaderComponent.html":{},"interfaces/IRadioItems.html":{},"interfaces/ISpaEnvResponse.html":{},"interfaces/Maxlengths.html":{},"components/NameComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"components/PhnComponent.html":{},"components/PhoneNumberComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{},"components/RadioComponent.html":{},"interfaces/ReadOnlyFields.html":{},"interfaces/SampleImageInterface.html":{},"components/SampleModalComponent.html":{},"components/SinComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{},"components/XiconButtonComponent.html":{}}}],["temporary",{"_index":2955,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["temporibus",{"_index":1404,"title":{},"body":{"components/CityComponent.html":{},"interfaces/CountryList.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"interfaces/FileUploaderMsg.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{}}}],["tenetur",{"_index":1410,"title":{},"body":{"components/CityComponent.html":{},"interfaces/CountryList.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"interfaces/FileUploaderMsg.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{}}}],["territories",{"_index":1921,"title":{},"body":{"interfaces/CountryList.html":{},"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{}}}],["territory",{"_index":1819,"title":{},"body":{"interfaces/CountryList.html":{}}}],["test",{"_index":404,"title":{},"body":{"classes/AbstractTestPage.html":{},"components/EmailComponent.html":{},"components/NameComponent.html":{},"components/PhnComponent.html":{},"components/SinComponent.html":{},"components/XiconButtonComponent.html":{},"changelog.html":{},"coverage.html":{}}}],["test(var1",{"_index":2890,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["testing",{"_index":518,"title":{},"body":{"classes/AbstractTestPage.html":{},"changelog.html":{}}}],["tests",{"_index":410,"title":{},"body":{"classes/AbstractTestPage.html":{},"interfaces/CommonAttachmentJson.html":{},"classes/CommonImage.html":{},"classes/CommonImageProcessingError.html":{},"interfaces/CommonImageScaleFactors.html":{},"classes/CommonImageScaleFactorsImpl.html":{},"classes/Person.html":{},"changelog.html":{}}}],["text",{"_index":334,"title":{},"body":{"classes/AbstractHttpService.html":{},"classes/AbstractTestPage.html":{},"interfaces/AddrLabelList.html":{},"interfaces/CommonLogMessage.html":{},"components/GeocoderInputComponent.html":{},"interfaces/Maxlengths.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"components/PostalCodeComponent.html":{},"interfaces/ReadOnlyFields.html":{},"modules/SharedCoreModule.html":{},"changelog.html":{},"dependencies.html":{}}}],["text)).click",{"_index":613,"title":{},"body":{"classes/AbstractTestPage.html":{}}}],["text.touppercase",{"_index":4155,"title":{},"body":{"components/PostalCodeComponent.html":{}}}],["textmaskmodule",{"_index":4285,"title":{},"body":{"modules/SharedCoreModule.html":{}}}],["tgo",{"_index":2237,"title":{},"body":{"interfaces/CountryList.html":{}}}],["tha",{"_index":2232,"title":{},"body":{"interfaces/CountryList.html":{}}}],["thailand",{"_index":2233,"title":{},"body":{"interfaces/CountryList.html":{}}}],["thanks",{"_index":5047,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["that's",{"_index":1619,"title":{},"body":{"interfaces/CommonLogMessage.html":{},"components/HeaderComponent.html":{},"additional-documentation/local-development/components.html":{}}}],["then((data",{"_index":81,"title":{},"body":{"classes/AbstractBaseForm.html":{}}}],["there's",{"_index":2416,"title":{},"body":{"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{}}}],["therefore",{"_index":947,"title":{},"body":{"interfaces/AddrLabelList.html":{},"interfaces/Maxlengths.html":{},"interfaces/ReadOnlyFields.html":{}}}],["theyt",{"_index":3057,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["things",{"_index":3816,"title":{},"body":{"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{}}}],["this._applicationheadermap.get(this.processname",{"_index":3634,"title":{},"body":{"interfaces/ISpaEnvResponse.html":{}}}],["this._bypassguards",{"_index":1258,"title":{},"body":{"injectables/CheckCompleteBaseService.html":{},"injectables/DefaultPageGuardService.html":{},"interfaces/PageListInterface.html":{}}}],["this._continue(state.url",{"_index":3679,"title":{},"body":{"guards/LoadPageGuardService.html":{},"guards/RouteGuardService.html":{}}}],["this._defaulterrmsg[x",{"_index":203,"title":{},"body":{"classes/AbstractFormControl.html":{}}}],["this._find(url",{"_index":3764,"title":{},"body":{"interfaces/PageList.html":{},"injectables/PageStateService.html":{}}}],["this._headers",{"_index":328,"title":{},"body":{"classes/AbstractHttpService.html":{},"interfaces/CommonLogMessage.html":{},"interfaces/ISpaEnvResponse.html":{}}}],["this._headers.get",{"_index":1581,"title":{},"body":{"interfaces/CommonLogMessage.html":{}}}],["this._headers.set",{"_index":1580,"title":{},"body":{"interfaces/CommonLogMessage.html":{}}}],["this._headers.set('severity",{"_index":1664,"title":{},"body":{"interfaces/CommonLogMessage.html":{}}}],["this._headers.set('tags",{"_index":1668,"title":{},"body":{"interfaces/CommonLogMessage.html":{}}}],["this._headers.set('timestamp",{"_index":1661,"title":{},"body":{"interfaces/CommonLogMessage.html":{}}}],["this._log",{"_index":1588,"title":{},"body":{"interfaces/CommonLogMessage.html":{}}}],["this._logerror",{"_index":1590,"title":{},"body":{"interfaces/CommonLogMessage.html":{}}}],["this._onchange",{"_index":184,"title":{},"body":{"classes/AbstractFormControl.html":{},"interfaces/AddrLabelList.html":{},"components/ButtonGroupComponent.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"interfaces/CountryList.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"components/DropdownComponent.html":{},"components/EmailComponent.html":{},"components/FullNameComponent.html":{},"interfaces/FullNameErrorMsg.html":{},"components/GeocoderInputComponent.html":{},"interfaces/IRadioItems.html":{},"interfaces/ISpaEnvResponse.html":{},"interfaces/Maxlengths.html":{},"components/NameComponent.html":{},"components/PhnComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{},"components/RadioComponent.html":{},"interfaces/ReadOnlyFields.html":{},"components/SinComponent.html":{}}}],["this._onchange(event",{"_index":1318,"title":{},"body":{"components/CheckboxComponent.html":{}}}],["this._onchange(event.jsdate",{"_index":2429,"title":{},"body":{"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{}}}],["this._onchange(null",{"_index":2424,"title":{},"body":{"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"components/GeocoderInputComponent.html":{}}}],["this._onchange(stripped",{"_index":3399,"title":{},"body":{"components/GeocoderInputComponent.html":{}}}],["this._onchange(this.addr",{"_index":867,"title":{},"body":{"interfaces/AddrLabelList.html":{},"interfaces/Maxlengths.html":{},"interfaces/ReadOnlyFields.html":{}}}],["this._onchange(this.person",{"_index":3254,"title":{},"body":{"components/FullNameComponent.html":{},"interfaces/FullNameErrorMsg.html":{}}}],["this._onchange(this.search",{"_index":3410,"title":{},"body":{"components/GeocoderInputComponent.html":{}}}],["this._onchange(true",{"_index":3617,"title":{},"body":{"interfaces/ISpaEnvResponse.html":{}}}],["this._onchange(val",{"_index":1131,"title":{},"body":{"components/ButtonGroupComponent.html":{},"interfaces/IRadioItems.html":{},"components/RadioComponent.html":{}}}],["this._onchange(value",{"_index":4108,"title":{},"body":{"components/PhoneNumberComponent.html":{}}}],["this._onchange(values",{"_index":3251,"title":{},"body":{"components/FullNameComponent.html":{},"interfaces/FullNameErrorMsg.html":{}}}],["this._ontouched",{"_index":186,"title":{},"body":{"classes/AbstractFormControl.html":{},"interfaces/AddrLabelList.html":{},"components/ButtonGroupComponent.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"interfaces/CountryList.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"components/DropdownComponent.html":{},"components/EmailComponent.html":{},"components/FullNameComponent.html":{},"interfaces/FullNameErrorMsg.html":{},"components/GeocoderInputComponent.html":{},"interfaces/IRadioItems.html":{},"interfaces/ISpaEnvResponse.html":{},"interfaces/Maxlengths.html":{},"components/NameComponent.html":{},"components/PhnComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{},"components/RadioComponent.html":{},"interfaces/ReadOnlyFields.html":{},"components/SinComponent.html":{}}}],["this._ontouched($event",{"_index":4109,"title":{},"body":{"components/PhoneNumberComponent.html":{}}}],["this._ontouched(this.addr",{"_index":869,"title":{},"body":{"interfaces/AddrLabelList.html":{},"interfaces/Maxlengths.html":{},"interfaces/ReadOnlyFields.html":{}}}],["this._sendlog(errormessage",{"_index":1605,"title":{},"body":{"interfaces/CommonLogMessage.html":{}}}],["this._sendlog(message",{"_index":1602,"title":{},"body":{"interfaces/CommonLogMessage.html":{}}}],["this._starturl",{"_index":1257,"title":{},"body":{"injectables/CheckCompleteBaseService.html":{},"interfaces/PageListInterface.html":{}}}],["this._value",{"_index":3501,"title":{},"body":{"interfaces/IRadioItems.html":{},"components/RadioComponent.html":{}}}],["this.accept.emit(fn",{"_index":3648,"title":{},"body":{"interfaces/ISpaEnvResponse.html":{}}}],["this.accept.emit(true",{"_index":3614,"title":{},"body":{"interfaces/ISpaEnvResponse.html":{}}}],["this.activeindex",{"_index":4510,"title":{},"body":{"components/WizardProgressBarComponent.html":{}}}],["this.addline(2",{"_index":856,"title":{},"body":{"interfaces/AddrLabelList.html":{},"interfaces/Maxlengths.html":{},"interfaces/ReadOnlyFields.html":{}}}],["this.addline(3",{"_index":858,"title":{},"body":{"interfaces/AddrLabelList.html":{},"interfaces/Maxlengths.html":{},"interfaces/ReadOnlyFields.html":{}}}],["this.addr",{"_index":805,"title":{},"body":{"interfaces/AddrLabelList.html":{},"interfaces/Maxlengths.html":{},"interfaces/ReadOnlyFields.html":{}}}],["this.addr.addressline1",{"_index":872,"title":{},"body":{"interfaces/AddrLabelList.html":{},"interfaces/Maxlengths.html":{},"interfaces/ReadOnlyFields.html":{}}}],["this.addr.addressline2",{"_index":855,"title":{},"body":{"interfaces/AddrLabelList.html":{},"interfaces/Maxlengths.html":{},"interfaces/ReadOnlyFields.html":{}}}],["this.addr.addressline3",{"_index":857,"title":{},"body":{"interfaces/AddrLabelList.html":{},"interfaces/Maxlengths.html":{},"interfaces/ReadOnlyFields.html":{}}}],["this.addr.city",{"_index":874,"title":{},"body":{"interfaces/AddrLabelList.html":{},"interfaces/Maxlengths.html":{},"interfaces/ReadOnlyFields.html":{}}}],["this.addr.country",{"_index":844,"title":{},"body":{"interfaces/AddrLabelList.html":{},"interfaces/Maxlengths.html":{},"interfaces/ReadOnlyFields.html":{}}}],["this.addr.postal",{"_index":866,"title":{},"body":{"interfaces/AddrLabelList.html":{},"interfaces/Maxlengths.html":{},"interfaces/ReadOnlyFields.html":{}}}],["this.addr.province",{"_index":848,"title":{},"body":{"interfaces/AddrLabelList.html":{},"interfaces/Maxlengths.html":{},"interfaces/ReadOnlyFields.html":{}}}],["this.address",{"_index":3356,"title":{},"body":{"components/GeocoderInputComponent.html":{}}}],["this.address[addrlookup",{"_index":903,"title":{},"body":{"interfaces/AddrLabelList.html":{},"interfaces/Maxlengths.html":{},"interfaces/ReadOnlyFields.html":{}}}],["this.addresschange.emit(this.addr",{"_index":868,"title":{},"body":{"interfaces/AddrLabelList.html":{},"interfaces/Maxlengths.html":{},"interfaces/ReadOnlyFields.html":{}}}],["this.addresschange.emit(this.selectedaddress",{"_index":3397,"title":{},"body":{"components/GeocoderInputComponent.html":{}}}],["this.addressline1",{"_index":1029,"title":{},"body":{"classes/Address.html":{}}}],["this.addressline2",{"_index":1040,"title":{},"body":{"classes/Address.html":{}}}],["this.addressline3",{"_index":1042,"title":{},"body":{"classes/Address.html":{}}}],["this.addrlabels[x",{"_index":957,"title":{},"body":{"interfaces/AddrLabelList.html":{},"interfaces/Maxlengths.html":{},"interfaces/ReadOnlyFields.html":{}}}],["this.agreecheck",{"_index":3650,"title":{},"body":{"interfaces/ISpaEnvResponse.html":{}}}],["this.allowextralines",{"_index":854,"title":{},"body":{"interfaces/AddrLabelList.html":{},"interfaces/Maxlengths.html":{},"interfaces/ReadOnlyFields.html":{}}}],["this.allowinternational",{"_index":4099,"title":{},"body":{"components/PhoneNumberComponent.html":{}}}],["this.apidobformat",{"_index":3970,"title":{},"body":{"classes/Person.html":{}}}],["this.application",{"_index":2695,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["this.attachmentorder",{"_index":1517,"title":{},"body":{"interfaces/CommonAttachmentJson.html":{},"classes/CommonImage.html":{},"classes/CommonImageProcessingError.html":{},"interfaces/CommonImageScaleFactors.html":{},"classes/CommonImageScaleFactorsImpl.html":{}}}],["this.base_url}/addresses.json",{"_index":3266,"title":{},"body":{"interfaces/GeoAddressResult.html":{},"injectables/GeocoderService.html":{}}}],["this.bconly",{"_index":840,"title":{},"body":{"interfaces/AddrLabelList.html":{},"interfaces/Maxlengths.html":{},"interfaces/ReadOnlyFields.html":{},"directives/ValidatePostalcodeDirective.html":{}}}],["this.blur.emit",{"_index":1451,"title":{},"body":{"components/CityComponent.html":{},"components/EmailComponent.html":{},"components/PhnComponent.html":{},"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{},"components/SinComponent.html":{}}}],["this.blurevent.emit",{"_index":2305,"title":{},"body":{"interfaces/CountryList.html":{},"components/NameComponent.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"components/PostalCodeComponent.html":{}}}],["this.browsefileref.nativeelement",{"_index":3117,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["this.browsefileref.nativeelement.click",{"_index":2902,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["this.browsefileref.nativeelement.value",{"_index":3120,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["this.btnclick.emit($event",{"_index":1095,"title":{},"body":{"components/ButtonComponent.html":{},"components/FormActionBarComponent.html":{}}}],["this.buttongroup.nativeelement.focus",{"_index":1132,"title":{},"body":{"components/ButtonGroupComponent.html":{}}}],["this.cancontinue",{"_index":3157,"title":{},"body":{"components/FormActionBarComponent.html":{}}}],["this.capturefileref.nativeelement",{"_index":3119,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["this.capturefileref.nativeelement.value",{"_index":3121,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["this.cd.detach",{"_index":4517,"title":{},"body":{"components/WizardProgressBarComponent.html":{}}}],["this.cd.detectchanges",{"_index":4512,"title":{},"body":{"components/WizardProgressBarComponent.html":{}}}],["this.checkbox.nativeelement.focus",{"_index":1319,"title":{},"body":{"components/CheckboxComponent.html":{}}}],["this.checkimagedimensions(mspimage",{"_index":2865,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["this.city",{"_index":1030,"title":{},"body":{"classes/Address.html":{},"components/CityComponent.html":{}}}],["this.cleardate",{"_index":2423,"title":{},"body":{"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{}}}],["this.click.emit",{"_index":4564,"title":{},"body":{"components/XiconButtonComponent.html":{}}}],["this.clickevent.emit",{"_index":4563,"title":{},"body":{"components/XiconButtonComponent.html":{}}}],["this.close.emit",{"_index":3616,"title":{},"body":{"interfaces/ISpaEnvResponse.html":{}}}],["this.componentlabel",{"_index":3885,"title":{},"body":{"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{}}}],["this.consentmodal.showfullsizeview",{"_index":3574,"title":{},"body":{"interfaces/ISpaEnvResponse.html":{}}}],["this.continuebutton",{"_index":590,"title":{},"body":{"classes/AbstractTestPage.html":{}}}],["this.continuebutton.click",{"_index":589,"title":{},"body":{"classes/AbstractTestPage.html":{}}}],["this.controlcontainer",{"_index":2708,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["this.controldir",{"_index":2589,"title":{},"body":{"components/EmailComponent.html":{},"components/PhnComponent.html":{},"components/PhoneNumberComponent.html":{},"components/SinComponent.html":{}}}],["this.controldir.control.setvalidators(allvalidators",{"_index":4105,"title":{},"body":{"components/PhoneNumberComponent.html":{}}}],["this.controldir.control.updatevalueandvalidity",{"_index":4106,"title":{},"body":{"components/PhoneNumberComponent.html":{}}}],["this.controldir.control.validator",{"_index":4103,"title":{},"body":{"components/PhoneNumberComponent.html":{}}}],["this.convertdatetosimpledate(this.disablesince",{"_index":2402,"title":{},"body":{"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{}}}],["this.convertdatetosimpledate(today",{"_index":2407,"title":{},"body":{"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{}}}],["this.convertroutetotitle(page.path",{"_index":1717,"title":{},"body":{"classes/Container.html":{},"interfaces/WizardProgressItem.html":{}}}],["this.country",{"_index":1032,"title":{},"body":{"classes/Address.html":{},"interfaces/CountryList.html":{}}}],["this.countrylist",{"_index":938,"title":{},"body":{"interfaces/AddrLabelList.html":{},"interfaces/Maxlengths.html":{},"interfaces/ReadOnlyFields.html":{}}}],["this.countrylist.find",{"_index":939,"title":{},"body":{"interfaces/AddrLabelList.html":{},"interfaces/Maxlengths.html":{},"interfaces/ReadOnlyFields.html":{}}}],["this.criteria.test",{"_index":2592,"title":{},"body":{"components/EmailComponent.html":{}}}],["this.criteriamsg",{"_index":3893,"title":{},"body":{"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{}}}],["this.cutoffdate.emit(this.spaenvres",{"_index":3646,"title":{},"body":{"interfaces/ISpaEnvResponse.html":{}}}],["this.data",{"_index":1133,"title":{},"body":{"components/ButtonGroupComponent.html":{},"components/CheckboxComponent.html":{}}}],["this.datachange.emit(this.data",{"_index":1317,"title":{},"body":{"components/CheckboxComponent.html":{}}}],["this.datachange.emit(val",{"_index":1130,"title":{},"body":{"components/ButtonGroupComponent.html":{}}}],["this.dataservice.getmspuuid",{"_index":3101,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["this.date",{"_index":2408,"title":{},"body":{"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{}}}],["this.datechange.emit(event.jsdate",{"_index":2428,"title":{},"body":{"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{}}}],["this.dateformat",{"_index":2389,"title":{},"body":{"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{}}}],["this.dateofbirth",{"_index":3969,"title":{},"body":{"classes/Person.html":{}}}],["this.datepickeroptions",{"_index":2388,"title":{},"body":{"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{}}}],["this.datepickeroptions.disablesince",{"_index":2401,"title":{},"body":{"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{}}}],["this.datepickeroptions.disableuntil",{"_index":2404,"title":{},"body":{"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{}}}],["this.datepickeroptions.selectorheight",{"_index":2396,"title":{},"body":{"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{}}}],["this.datepickeroptions.selectorwidth",{"_index":2398,"title":{},"body":{"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{}}}],["this.defaultcountry",{"_index":935,"title":{},"body":{"interfaces/AddrLabelList.html":{},"interfaces/Maxlengths.html":{},"interfaces/ReadOnlyFields.html":{}}}],["this.defaulterrmsg[x",{"_index":2306,"title":{},"body":{"interfaces/CountryList.html":{},"components/PostalCodeComponent.html":{}}}],["this.defaulterrormessage",{"_index":1316,"title":{},"body":{"components/CheckboxComponent.html":{}}}],["this.defaultprovince",{"_index":924,"title":{},"body":{"interfaces/AddrLabelList.html":{},"interfaces/Maxlengths.html":{},"interfaces/ReadOnlyFields.html":{}}}],["this.disablecontinue",{"_index":3651,"title":{},"body":{"interfaces/ISpaEnvResponse.html":{}}}],["this.disabled",{"_index":189,"title":{},"body":{"classes/AbstractFormControl.html":{},"interfaces/AddrLabelList.html":{},"interfaces/CountryList.html":{},"interfaces/Maxlengths.html":{},"components/NameComponent.html":{},"components/PostalCodeComponent.html":{},"interfaces/ReadOnlyFields.html":{}}}],["this.disabled[x",{"_index":969,"title":{},"body":{"interfaces/AddrLabelList.html":{},"interfaces/Maxlengths.html":{},"interfaces/ReadOnlyFields.html":{}}}],["this.disablegeocoder",{"_index":945,"title":{},"body":{"interfaces/AddrLabelList.html":{},"interfaces/Maxlengths.html":{},"interfaces/ReadOnlyFields.html":{}}}],["this.dobformat",{"_index":3971,"title":{},"body":{"classes/Person.html":{}}}],["this.documenttype",{"_index":1518,"title":{},"body":{"interfaces/CommonAttachmentJson.html":{},"classes/CommonImage.html":{},"classes/CommonImageProcessingError.html":{},"interfaces/CommonImageScaleFactors.html":{},"classes/CommonImageScaleFactorsImpl.html":{}}}],["this.duplist",{"_index":2554,"title":{},"body":{"directives/DuplicateCheckDirective.html":{}}}],["this.email",{"_index":2587,"title":{},"body":{"components/EmailComponent.html":{}}}],["this.errmsg",{"_index":3244,"title":{},"body":{"components/FullNameComponent.html":{},"interfaces/FullNameErrorMsg.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{}}}],["this.errmsg.criteria",{"_index":3899,"title":{},"body":{"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{}}}],["this.errmsg.minlength",{"_index":3897,"title":{},"body":{"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{}}}],["this.errmsg.required",{"_index":3895,"title":{},"body":{"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{}}}],["this.errordocument.emit(mspimage",{"_index":3112,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["this.errormessage",{"_index":200,"title":{},"body":{"classes/AbstractFormControl.html":{},"interfaces/CountryList.html":{},"components/PostalCodeComponent.html":{}}}],["this.errormessage[x",{"_index":204,"title":{},"body":{"classes/AbstractFormControl.html":{},"interfaces/CountryList.html":{},"components/PostalCodeComponent.html":{}}}],["this.errormessagerequired",{"_index":1315,"title":{},"body":{"components/CheckboxComponent.html":{}}}],["this.errormessages",{"_index":2386,"title":{},"body":{"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{}}}],["this.errormessages.criteria",{"_index":3898,"title":{},"body":{"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{}}}],["this.errormessages.minlength",{"_index":3896,"title":{},"body":{"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{}}}],["this.errormessages.required",{"_index":3894,"title":{},"body":{"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{}}}],["this.fieldmaxlenghts[x",{"_index":963,"title":{},"body":{"interfaces/AddrLabelList.html":{},"interfaces/Maxlengths.html":{},"interfaces/ReadOnlyFields.html":{}}}],["this.filecontent",{"_index":1494,"title":{},"body":{"interfaces/CommonAttachmentJson.html":{},"classes/CommonImage.html":{},"classes/CommonImageProcessingError.html":{},"interfaces/CommonImageScaleFactors.html":{},"classes/CommonImageScaleFactorsImpl.html":{}}}],["this.findcountrycode",{"_index":847,"title":{},"body":{"interfaces/AddrLabelList.html":{},"interfaces/Maxlengths.html":{},"interfaces/ReadOnlyFields.html":{}}}],["this.firstname",{"_index":3238,"title":{},"body":{"components/FullNameComponent.html":{},"interfaces/FullNameErrorMsg.html":{},"classes/Person.html":{}}}],["this.form",{"_index":792,"title":{},"body":{"interfaces/AddrLabelList.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"interfaces/Maxlengths.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"interfaces/ReadOnlyFields.html":{}}}],["this.form.form.get(x).markastouched",{"_index":111,"title":{},"body":{"classes/AbstractForm.html":{}}}],["this.form.valid",{"_index":109,"title":{},"body":{"classes/AbstractForm.html":{},"interfaces/AddrLabelList.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"interfaces/Maxlengths.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"interfaces/ReadOnlyFields.html":{}}}],["this.form.valuechanges.pipe(debouncetime(0)).subscribe((values",{"_index":3249,"title":{},"body":{"components/FullNameComponent.html":{},"interfaces/FullNameErrorMsg.html":{}}}],["this.formgroup.markastouched",{"_index":401,"title":{},"body":{"classes/AbstractReactForm.html":{}}}],["this.formgroup.valid",{"_index":392,"title":{},"body":{"classes/AbstractReactForm.html":{}}}],["this.fullsizeviewmodal.config.keyboard",{"_index":3612,"title":{},"body":{"interfaces/ISpaEnvResponse.html":{}}}],["this.fullsizeviewmodal.hide",{"_index":3615,"title":{},"body":{"interfaces/ISpaEnvResponse.html":{}}}],["this.fullsizeviewmodal.show",{"_index":3613,"title":{},"body":{"interfaces/ISpaEnvResponse.html":{}}}],["this.generateskiptocontentlink",{"_index":3471,"title":{},"body":{"components/HeaderComponent.html":{}}}],["this.geocoderservice.lookup(searchphrase",{"_index":3369,"title":{},"body":{"components/GeocoderInputComponent.html":{}}}],["this.get",{"_index":5398,"title":{},"body":{"additional-documentation/getting-started.html":{}}}],["this.get(this.address_url",{"_index":3280,"title":{},"body":{"interfaces/GeoAddressResult.html":{},"injectables/GeocoderService.html":{}}}],["this.getactiveindex(this.router.url",{"_index":4516,"title":{},"body":{"components/WizardProgressBarComponent.html":{}}}],["this.getactiveindex(url",{"_index":4511,"title":{},"body":{"components/WizardProgressBarComponent.html":{}}}],["this.getapplicationtype",{"_index":2696,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["this.getnamecomponent(labelname)).getattribute('value",{"_index":599,"title":{},"body":{"classes/AbstractTestPage.html":{}}}],["this.getpasswordstrength",{"_index":3903,"title":{},"body":{"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{}}}],["this.geturlindex",{"_index":1261,"title":{},"body":{"injectables/CheckCompleteBaseService.html":{},"interfaces/PageListInterface.html":{}}}],["this.handleerror(commonimageerror.alreadyexists",{"_index":2857,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["this.handleerror(commonimageerror.cannotopen",{"_index":2885,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["this.handleerror(commonimageerror.cannotopenpdf",{"_index":2887,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["this.handleerror(commonimageerror.toobig",{"_index":2879,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["this.handleerror(commonimageerror.toosmall",{"_index":2866,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["this.handleimagefile(file",{"_index":2867,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["this.haserror",{"_index":3381,"title":{},"body":{"components/GeocoderInputComponent.html":{}}}],["this.hasmask",{"_index":4459,"title":{},"body":{"directives/ValidatePostalcodeDirective.html":{}}}],["this.hasnoresults",{"_index":3378,"title":{},"body":{"components/GeocoderInputComponent.html":{}}}],["this.heightfactor",{"_index":1528,"title":{},"body":{"interfaces/CommonAttachmentJson.html":{},"classes/CommonImage.html":{},"classes/CommonImageProcessingError.html":{},"interfaces/CommonImageScaleFactors.html":{},"classes/CommonImageScaleFactorsImpl.html":{}}}],["this.http.get(url",{"_index":313,"title":{},"body":{"classes/AbstractHttpService.html":{}}}],["this.http.post(apibaseurl",{"_index":1168,"title":{},"body":{"injectables/CaptchaDataService.html":{},"injectables/ServerPayload.html":{}}}],["this.http.post(url",{"_index":317,"title":{},"body":{"classes/AbstractHttpService.html":{}}}],["this.httpclient",{"_index":1163,"title":{},"body":{"injectables/CaptchaDataService.html":{},"injectables/ServerPayload.html":{}}}],["this.httpoptions",{"_index":310,"title":{},"body":{"classes/AbstractHttpService.html":{}}}],["this.id",{"_index":2707,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["this.imageobject.naturalheight).tofixed(0",{"_index":4414,"title":{},"body":{"components/ThumbnailComponent.html":{}}}],["this.imageobject.naturalwidth",{"_index":4413,"title":{},"body":{"components/ThumbnailComponent.html":{}}}],["this.images",{"_index":2856,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["this.images.filter(x",{"_index":3123,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["this.images.length",{"_index":3128,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["this.images.push(mspimage",{"_index":3103,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["this.imageschange.emit(this.images",{"_index":3104,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["this.inmaintenance",{"_index":3610,"title":{},"body":{"interfaces/ISpaEnvResponse.html":{}}}],["this.isbcphn",{"_index":4033,"title":{},"body":{"components/PhnComponent.html":{}}}],["this.iscanada",{"_index":863,"title":{},"body":{"interfaces/AddrLabelList.html":{},"interfaces/Maxlengths.html":{},"interfaces/ReadOnlyFields.html":{}}}],["this.isdate(this.disablesince",{"_index":2400,"title":{},"body":{"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{}}}],["this.isdate(this.disableuntil",{"_index":2403,"title":{},"body":{"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{}}}],["this.isloading",{"_index":3156,"title":{},"body":{"components/FormActionBarComponent.html":{}}}],["this.ispagelistempty",{"_index":1259,"title":{},"body":{"injectables/CheckCompleteBaseService.html":{},"interfaces/PageListInterface.html":{}}}],["this.istypeaheadloading",{"_index":3377,"title":{},"body":{"components/GeocoderInputComponent.html":{}}}],["this.isundermaintenance",{"_index":3609,"title":{},"body":{"interfaces/ISpaEnvResponse.html":{}}}],["this.label",{"_index":197,"title":{},"body":{"classes/AbstractFormControl.html":{},"components/CheckboxComponent.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"components/XiconButtonComponent.html":{}}}],["this.label.replace",{"_index":198,"title":{},"body":{"classes/AbstractFormControl.html":{}}}],["this.labels",{"_index":955,"title":{},"body":{"interfaces/AddrLabelList.html":{},"interfaces/Maxlengths.html":{},"interfaces/ReadOnlyFields.html":{}}}],["this.labels[x",{"_index":958,"title":{},"body":{"interfaces/AddrLabelList.html":{},"interfaces/Maxlengths.html":{},"interfaces/ReadOnlyFields.html":{}}}],["this.labeltext",{"_index":2387,"title":{},"body":{"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{}}}],["this.lastname",{"_index":3240,"title":{},"body":{"components/FullNameComponent.html":{},"interfaces/FullNameErrorMsg.html":{},"classes/Person.html":{}}}],["this.loghttprequeststoconsole",{"_index":315,"title":{},"body":{"classes/AbstractHttpService.html":{}}}],["this.logimageinfo('msp_file",{"_index":3099,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["this.logservice.log",{"_index":1595,"title":{},"body":{"interfaces/CommonLogMessage.html":{},"interfaces/ISpaEnvResponse.html":{}}}],["this.logservice.log({event",{"_index":3626,"title":{},"body":{"interfaces/ISpaEnvResponse.html":{}}}],["this.logservice.log({name",{"_index":2915,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["this.maintenanceflag",{"_index":3640,"title":{},"body":{"interfaces/ISpaEnvResponse.html":{}}}],["this.maintenancemessage",{"_index":3641,"title":{},"body":{"interfaces/ISpaEnvResponse.html":{}}}],["this.mask",{"_index":4014,"title":{},"body":{"components/PhnComponent.html":{},"components/PhoneNumberComponent.html":{},"components/PostalCodeComponent.html":{},"components/SinComponent.html":{}}}],["this.maxlen",{"_index":3721,"title":{},"body":{"components/NameComponent.html":{}}}],["this.maxlengths",{"_index":960,"title":{},"body":{"interfaces/AddrLabelList.html":{},"interfaces/Maxlengths.html":{},"interfaces/ReadOnlyFields.html":{}}}],["this.maxlengths[x",{"_index":962,"title":{},"body":{"interfaces/AddrLabelList.html":{},"interfaces/Maxlengths.html":{},"interfaces/ReadOnlyFields.html":{}}}],["this.middlename",{"_index":3242,"title":{},"body":{"components/FullNameComponent.html":{},"interfaces/FullNameErrorMsg.html":{},"classes/Person.html":{}}}],["this.minlen",{"_index":3887,"title":{},"body":{"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{}}}],["this.minlenmsgseg1",{"_index":3891,"title":{},"body":{"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{}}}],["this.minlenmsgseg2",{"_index":3892,"title":{},"body":{"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{}}}],["this.model",{"_index":2413,"title":{},"body":{"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"components/DropdownComponent.html":{}}}],["this.namestr",{"_index":3719,"title":{},"body":{"components/NameComponent.html":{}}}],["this.ngmodelchange.emit",{"_index":2461,"title":{},"body":{"directives/DateFieldFormatDirective.html":{}}}],["this.ngxdp",{"_index":2431,"title":{},"body":{"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{}}}],["this.ngxdp.cleardate",{"_index":2435,"title":{},"body":{"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{}}}],["this.noidimage",{"_index":2735,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["this.objectid",{"_index":1332,"title":{},"body":{"components/CityComponent.html":{},"interfaces/CountryList.html":{},"components/EmailComponent.html":{},"components/NameComponent.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"components/PhnComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{},"components/SinComponent.html":{}}}],["this.observablefromfiles(filelist",{"_index":2851,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["this.onchange.emit(this.person",{"_index":3253,"title":{},"body":{"components/FullNameComponent.html":{},"interfaces/FullNameErrorMsg.html":{}}}],["this.onchange.emit(values",{"_index":3250,"title":{},"body":{"components/FullNameComponent.html":{},"interfaces/FullNameErrorMsg.html":{}}}],["this.onerror(err",{"_index":3371,"title":{},"body":{"components/GeocoderInputComponent.html":{}}}],["this.onlyfuturedates",{"_index":2405,"title":{},"body":{"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{}}}],["this.pagechecklist",{"_index":1267,"title":{},"body":{"injectables/CheckCompleteBaseService.html":{},"interfaces/PageListInterface.html":{}}}],["this.pagechecklist.filter",{"_index":1275,"title":{},"body":{"injectables/CheckCompleteBaseService.html":{},"interfaces/PageListInterface.html":{}}}],["this.pagechecklist.findindex",{"_index":1278,"title":{},"body":{"injectables/CheckCompleteBaseService.html":{},"interfaces/PageListInterface.html":{}}}],["this.pagechecklist.length",{"_index":1281,"title":{},"body":{"injectables/CheckCompleteBaseService.html":{},"interfaces/PageListInterface.html":{}}}],["this.pagechecklist.map((item",{"_index":1268,"title":{},"body":{"injectables/CheckCompleteBaseService.html":{},"interfaces/PageListInterface.html":{}}}],["this.pagechecklist[idx",{"_index":1272,"title":{},"body":{"injectables/CheckCompleteBaseService.html":{},"interfaces/PageListInterface.html":{}}}],["this.pagechecklist[idx].iscomplete",{"_index":1270,"title":{},"body":{"injectables/CheckCompleteBaseService.html":{},"interfaces/PageListInterface.html":{}}}],["this.pagelist",{"_index":3747,"title":{},"body":{"interfaces/PageList.html":{},"injectables/PageStateService.html":{}}}],["this.pagelist.find",{"_index":3771,"title":{},"body":{"interfaces/PageList.html":{},"injectables/PageStateService.html":{}}}],["this.pagelist.length",{"_index":3748,"title":{},"body":{"interfaces/PageList.html":{},"injectables/PageStateService.html":{}}}],["this.pagelist.map",{"_index":3769,"title":{},"body":{"interfaces/PageList.html":{},"injectables/PageStateService.html":{}}}],["this.pagelist[index",{"_index":3767,"title":{},"body":{"interfaces/PageList.html":{},"injectables/PageStateService.html":{}}}],["this.pageservice.setpagecomplete",{"_index":3666,"title":{},"body":{"guards/LoadPageGuardService.html":{}}}],["this.pageservice.setpageincomplete",{"_index":3665,"title":{},"body":{"guards/LoadPageGuardService.html":{}}}],["this.pagestateservice.cannavigatetopage",{"_index":2512,"title":{},"body":{"injectables/DefaultPageGuardService.html":{}}}],["this.password",{"_index":3901,"title":{},"body":{"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{}}}],["this.passwordchange.emit",{"_index":3905,"title":{},"body":{"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{}}}],["this.pattern",{"_index":3246,"title":{},"body":{"components/FullNameComponent.html":{},"interfaces/FullNameErrorMsg.html":{}}}],["this.person",{"_index":3237,"title":{},"body":{"components/FullNameComponent.html":{},"interfaces/FullNameErrorMsg.html":{}}}],["this.person.firstname",{"_index":3239,"title":{},"body":{"components/FullNameComponent.html":{},"interfaces/FullNameErrorMsg.html":{}}}],["this.person.lastname",{"_index":3241,"title":{},"body":{"components/FullNameComponent.html":{},"interfaces/FullNameErrorMsg.html":{}}}],["this.person.middlename",{"_index":3243,"title":{},"body":{"components/FullNameComponent.html":{},"interfaces/FullNameErrorMsg.html":{}}}],["this.phn",{"_index":4013,"title":{},"body":{"components/PhnComponent.html":{}}}],["this.phn.length",{"_index":4031,"title":{},"body":{"components/PhnComponent.html":{}}}],["this.phn.trim",{"_index":4024,"title":{},"body":{"components/PhnComponent.html":{}}}],["this.phn.trim().length",{"_index":4018,"title":{},"body":{"components/PhnComponent.html":{}}}],["this.phn[0",{"_index":4034,"title":{},"body":{"components/PhnComponent.html":{}}}],["this.phonenumber",{"_index":4093,"title":{},"body":{"components/PhoneNumberComponent.html":{}}}],["this.placeholder",{"_index":4096,"title":{},"body":{"components/PhoneNumberComponent.html":{}}}],["this.post()these",{"_index":5399,"title":{},"body":{"additional-documentation/getting-started.html":{}}}],["this.post(this.url",{"_index":1639,"title":{},"body":{"interfaces/CommonLogMessage.html":{},"interfaces/ISpaEnvResponse.html":{}}}],["this.postal",{"_index":1034,"title":{},"body":{"classes/Address.html":{}}}],["this.postal.length",{"_index":1035,"title":{},"body":{"classes/Address.html":{}}}],["this.postalcode",{"_index":4153,"title":{},"body":{"components/PostalCodeComponent.html":{}}}],["this.progresssteps",{"_index":1714,"title":{},"body":{"classes/Container.html":{},"interfaces/WizardProgressItem.html":{}}}],["this.progresssteps.findindex(x",{"_index":4529,"title":{},"body":{"components/WizardProgressBarComponent.html":{}}}],["this.progresssteps.length",{"_index":4520,"title":{},"body":{"components/WizardProgressBarComponent.html":{}}}],["this.province",{"_index":1033,"title":{},"body":{"classes/Address.html":{},"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{}}}],["this.provincelist",{"_index":912,"title":{},"body":{"interfaces/AddrLabelList.html":{},"interfaces/Maxlengths.html":{},"interfaces/ReadOnlyFields.html":{}}}],["this.provincelist.find",{"_index":922,"title":{},"body":{"interfaces/AddrLabelList.html":{},"interfaces/Maxlengths.html":{},"interfaces/ReadOnlyFields.html":{}}}],["this.provlist",{"_index":915,"title":{},"body":{"interfaces/AddrLabelList.html":{},"interfaces/Maxlengths.html":{},"interfaces/ReadOnlyFields.html":{}}}],["this.pswdstrength",{"_index":3902,"title":{},"body":{"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{}}}],["this.readimage(file",{"_index":2933,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["this.readonlyfields[x",{"_index":967,"title":{},"body":{"interfaces/AddrLabelList.html":{},"interfaces/Maxlengths.html":{},"interfaces/ReadOnlyFields.html":{}}}],["this.registervalidation",{"_index":2588,"title":{},"body":{"components/EmailComponent.html":{},"components/PhnComponent.html":{},"components/SinComponent.html":{}}}],["this.required",{"_index":3127,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["this.requiredmsgseg",{"_index":3245,"title":{},"body":{"components/FullNameComponent.html":{},"interfaces/FullNameErrorMsg.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{}}}],["this.resetinputfields",{"_index":2858,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["this.resizeimage",{"_index":2924,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["this.resizeimage(image",{"_index":2939,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["this.router",{"_index":79,"title":{},"body":{"classes/AbstractBaseForm.html":{}}}],["this.router.events.pipe",{"_index":3464,"title":{},"body":{"components/HeaderComponent.html":{},"components/WizardProgressBarComponent.html":{}}}],["this.router.navigate([this.service.getstarturl",{"_index":4239,"title":{},"body":{"guards/RouteGuardService.html":{}}}],["this.router.navigate([url",{"_index":80,"title":{},"body":{"classes/AbstractBaseForm.html":{}}}],["this.router.url",{"_index":1262,"title":{},"body":{"injectables/CheckCompleteBaseService.html":{},"interfaces/PageList.html":{},"interfaces/PageListInterface.html":{},"injectables/PageStateService.html":{}}}],["this.router.url.includes(url",{"_index":3469,"title":{},"body":{"components/HeaderComponent.html":{}}}],["this.router.url}#content",{"_index":3481,"title":{},"body":{"components/HeaderComponent.html":{}}}],["this.routerevents",{"_index":4506,"title":{},"body":{"components/WizardProgressBarComponent.html":{}}}],["this.routerevents$.unsubscribe",{"_index":4518,"title":{},"body":{"components/WizardProgressBarComponent.html":{}}}],["this.samplemodal.hide",{"_index":4249,"title":{},"body":{"interfaces/SampleImageInterface.html":{},"components/SampleModalComponent.html":{}}}],["this.samplemodal.show",{"_index":4247,"title":{},"body":{"interfaces/SampleImageInterface.html":{},"components/SampleModalComponent.html":{}}}],["this.scaledwidth",{"_index":4416,"title":{},"body":{"components/ThumbnailComponent.html":{}}}],["this.scrollstepintoview",{"_index":4513,"title":{},"body":{"components/WizardProgressBarComponent.html":{}}}],["this.scrolltoerrorsonsubmit",{"_index":3158,"title":{},"body":{"components/FormActionBarComponent.html":{}}}],["this.search",{"_index":3376,"title":{},"body":{"components/GeocoderInputComponent.html":{}}}],["this.search.length",{"_index":3389,"title":{},"body":{"components/GeocoderInputComponent.html":{}}}],["this.searchtext$.next(this.search",{"_index":3409,"title":{},"body":{"components/GeocoderInputComponent.html":{}}}],["this.searchtext$.pipe",{"_index":3366,"title":{},"body":{"components/GeocoderInputComponent.html":{}}}],["this.selectedaddress",{"_index":3379,"title":{},"body":{"components/GeocoderInputComponent.html":{}}}],["this.sendspaenvserver(headername",{"_index":3635,"title":{},"body":{"interfaces/ISpaEnvResponse.html":{}}}],["this.service.canbypassguards",{"_index":3680,"title":{},"body":{"guards/LoadPageGuardService.html":{},"guards/RouteGuardService.html":{}}}],["this.service.cannavigatetourl(pageurl",{"_index":3681,"title":{},"body":{"guards/LoadPageGuardService.html":{}}}],["this.service.ispagecomplete(pageurl",{"_index":4240,"title":{},"body":{"guards/RouteGuardService.html":{}}}],["this.service.isprerequisitecomplete",{"_index":4238,"title":{},"body":{"guards/RouteGuardService.html":{}}}],["this.setdefaultcountryasoption",{"_index":845,"title":{},"body":{"interfaces/AddrLabelList.html":{},"interfaces/Maxlengths.html":{},"interfaces/ReadOnlyFields.html":{}}}],["this.setdefaultprovinceasoption",{"_index":862,"title":{},"body":{"interfaces/AddrLabelList.html":{},"interfaces/Maxlengths.html":{},"interfaces/ReadOnlyFields.html":{}}}],["this.setdefaultprovinceasoption(this.addr.country",{"_index":849,"title":{},"body":{"interfaces/AddrLabelList.html":{},"interfaces/Maxlengths.html":{},"interfaces/ReadOnlyFields.html":{}}}],["this.seterrormsg",{"_index":183,"title":{},"body":{"classes/AbstractFormControl.html":{},"interfaces/CountryList.html":{},"components/PostalCodeComponent.html":{}}}],["this.setlabels",{"_index":841,"title":{},"body":{"interfaces/AddrLabelList.html":{},"interfaces/Maxlengths.html":{},"interfaces/ReadOnlyFields.html":{}}}],["this.setmaxlengths",{"_index":842,"title":{},"body":{"interfaces/AddrLabelList.html":{},"interfaces/Maxlengths.html":{},"interfaces/ReadOnlyFields.html":{}}}],["this.setpagecomplete",{"_index":4229,"title":{},"body":{"guards/RouteGuardService.html":{}}}],["this.setpageincomplete",{"_index":4228,"title":{},"body":{"guards/RouteGuardService.html":{}}}],["this.setreadonlyfields",{"_index":843,"title":{},"body":{"interfaces/AddrLabelList.html":{},"interfaces/Maxlengths.html":{},"interfaces/ReadOnlyFields.html":{}}}],["this.setseverity(severitylevels.error",{"_index":1604,"title":{},"body":{"interfaces/CommonLogMessage.html":{}}}],["this.setseverity(severitylevels.info",{"_index":1601,"title":{},"body":{"interfaces/CommonLogMessage.html":{}}}],["this.settags(message.event",{"_index":1626,"title":{},"body":{"interfaces/CommonLogMessage.html":{}}}],["this.settimestamp",{"_index":1625,"title":{},"body":{"interfaces/CommonLogMessage.html":{}}}],["this.setuprequest(observable",{"_index":314,"title":{},"body":{"classes/AbstractHttpService.html":{}}}],["this.showerror",{"_index":3105,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["this.showline2",{"_index":889,"title":{},"body":{"interfaces/AddrLabelList.html":{},"interfaces/Maxlengths.html":{},"interfaces/ReadOnlyFields.html":{}}}],["this.showline3",{"_index":890,"title":{},"body":{"interfaces/AddrLabelList.html":{},"interfaces/Maxlengths.html":{},"interfaces/ReadOnlyFields.html":{}}}],["this.sin",{"_index":4380,"title":{},"body":{"components/SinComponent.html":{}}}],["this.sin.length",{"_index":4385,"title":{},"body":{"components/SinComponent.html":{}}}],["this.sin.trim",{"_index":4384,"title":{},"body":{"components/SinComponent.html":{}}}],["this.sin.trim().length",{"_index":4383,"title":{},"body":{"components/SinComponent.html":{}}}],["this.size",{"_index":2392,"title":{},"body":{"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{}}}],["this.skiplinkpath",{"_index":3470,"title":{},"body":{"components/HeaderComponent.html":{}}}],["this.skiptocontentbutton.click",{"_index":593,"title":{},"body":{"classes/AbstractTestPage.html":{}}}],["this.spaenvres",{"_index":3637,"title":{},"body":{"interfaces/ISpaEnvResponse.html":{}}}],["this.spaenvres.spa_env_acl_maintenance_flag",{"_index":3639,"title":{},"body":{"interfaces/ISpaEnvResponse.html":{}}}],["this.spaenvres.spa_env_acl_maintenance_message",{"_index":3642,"title":{},"body":{"interfaces/ISpaEnvResponse.html":{}}}],["this.spaenvres.spa_env_msp_maintenance_flag",{"_index":3643,"title":{},"body":{"interfaces/ISpaEnvResponse.html":{}}}],["this.spaenvres.spa_env_msp_maintenance_message",{"_index":3644,"title":{},"body":{"interfaces/ISpaEnvResponse.html":{}}}],["this.spaenvres.spa_env_pacutoff_maintenance_start",{"_index":3645,"title":{},"body":{"interfaces/ISpaEnvResponse.html":{}}}],["this.steps.toarray()[this.activeindex",{"_index":4531,"title":{},"body":{"components/WizardProgressBarComponent.html":{}}}],["this.strengthpercentage",{"_index":3904,"title":{},"body":{"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{}}}],["this.stripstringtomaxlength(changes.address.currentvalue._geocoderfulladdress",{"_index":3375,"title":{},"body":{"components/GeocoderInputComponent.html":{}}}],["this.stripstringtomaxlength(data.fulladdress",{"_index":3398,"title":{},"body":{"components/GeocoderInputComponent.html":{}}}],["this.typeaheadlist",{"_index":3365,"title":{},"body":{"components/GeocoderInputComponent.html":{}}}],["this.updateprovlist",{"_index":859,"title":{},"body":{"interfaces/AddrLabelList.html":{},"interfaces/Maxlengths.html":{},"interfaces/ReadOnlyFields.html":{}}}],["this.updateskipcontentlink",{"_index":3468,"title":{},"body":{"components/HeaderComponent.html":{}}}],["this.url",{"_index":1584,"title":{},"body":{"interfaces/CommonLogMessage.html":{}}}],["this.uuid",{"_index":1493,"title":{},"body":{"interfaces/CommonAttachmentJson.html":{},"classes/CommonImage.html":{},"classes/CommonImageProcessingError.html":{},"interfaces/CommonImageScaleFactors.html":{},"classes/CommonImageScaleFactorsImpl.html":{}}}],["this.validatephn",{"_index":4017,"title":{},"body":{"components/PhnComponent.html":{}}}],["this.validateself",{"_index":2590,"title":{},"body":{"components/EmailComponent.html":{},"components/PhnComponent.html":{},"components/SinComponent.html":{}}}],["this.validateself.bind(this",{"_index":4102,"title":{},"body":{"components/PhoneNumberComponent.html":{}}}],["this.validatesin",{"_index":4382,"title":{},"body":{"components/SinComponent.html":{}}}],["this.valuechange.emit",{"_index":1450,"title":{},"body":{"components/CityComponent.html":{},"interfaces/CountryList.html":{},"components/EmailComponent.html":{},"components/NameComponent.html":{},"components/PhnComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{},"components/SinComponent.html":{}}}],["this.valuechange.emit(this.phonenumber",{"_index":4107,"title":{},"body":{"components/PhoneNumberComponent.html":{}}}],["this.valuechange.emit(val",{"_index":3504,"title":{},"body":{"interfaces/IRadioItems.html":{},"components/RadioComponent.html":{}}}],["this.viewcontainerref",{"_index":4410,"title":{},"body":{"components/ThumbnailComponent.html":{}}}],["this.widthfactor",{"_index":1526,"title":{},"body":{"interfaces/CommonAttachmentJson.html":{},"classes/CommonImage.html":{},"classes/CommonImageProcessingError.html":{},"interfaces/CommonImageScaleFactors.html":{},"classes/CommonImageScaleFactorsImpl.html":{}}}],["this.zone.run",{"_index":2729,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["this[lookup",{"_index":892,"title":{},"body":{"interfaces/AddrLabelList.html":{},"interfaces/Maxlengths.html":{},"interfaces/ReadOnlyFields.html":{}}}],["those",{"_index":5383,"title":{},"body":{"additional-documentation/getting-started.html":{}}}],["though",{"_index":2972,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["through",{"_index":3593,"title":{},"body":{"interfaces/ISpaEnvResponse.html":{},"components/PhnComponent.html":{},"components/SinComponent.html":{}}}],["throw",{"_index":264,"title":{},"body":{"classes/AbstractHttpService.html":{},"interfaces/FileUploaderMsg.html":{},"injectables/GeocoderService.html":{},"components/XiconButtonComponent.html":{}}}],["throwerror",{"_index":1559,"title":{},"body":{"interfaces/CommonLogMessage.html":{},"interfaces/GeoAddressResult.html":{},"injectables/GeocoderService.html":{},"interfaces/ISpaEnvResponse.html":{}}}],["throwerror('geocoder",{"_index":3300,"title":{},"body":{"interfaces/GeoAddressResult.html":{},"injectables/GeocoderService.html":{}}}],["throwerror(error",{"_index":1653,"title":{},"body":{"interfaces/CommonLogMessage.html":{}}}],["throwerror(msg",{"_index":1631,"title":{},"body":{"interfaces/CommonLogMessage.html":{}}}],["thumbnail",{"_index":2825,"title":{},"body":{"interfaces/FileUploaderMsg.html":{},"components/ThumbnailComponent.html":{},"changelog.html":{}}}],["thumbnail'},{'name",{"_index":726,"title":{},"body":{"components/AccordionCommonComponent.html":{},"components/ButtonComponent.html":{},"components/ButtonGroupComponent.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"components/ConfirmTemplateComponent.html":{},"components/CoreBreadcrumbComponent.html":{},"components/DatepickerComponent.html":{},"components/DropdownComponent.html":{},"components/EmailComponent.html":{},"components/ErrorContainerComponent.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/FullNameComponent.html":{},"components/GeocoderInputComponent.html":{},"components/HeaderComponent.html":{},"components/NameComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"components/PhnComponent.html":{},"components/PhoneNumberComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"components/RadioComponent.html":{},"components/SampleModalComponent.html":{},"components/SinComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{},"components/XiconButtonComponent.html":{}}}],["thumbnail.html",{"_index":4390,"title":{},"body":{"components/ThumbnailComponent.html":{}}}],["thumbnail.scss",{"_index":4389,"title":{},"body":{"components/ThumbnailComponent.html":{}}}],["thumbnailcomponent",{"_index":725,"title":{"components/ThumbnailComponent.html":{}},"body":{"components/AccordionCommonComponent.html":{},"components/ButtonComponent.html":{},"components/ButtonGroupComponent.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"components/ConfirmTemplateComponent.html":{},"components/CoreBreadcrumbComponent.html":{},"components/DatepickerComponent.html":{},"components/DropdownComponent.html":{},"components/EmailComponent.html":{},"components/ErrorContainerComponent.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/FullNameComponent.html":{},"components/GeocoderInputComponent.html":{},"components/HeaderComponent.html":{},"components/NameComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"components/PhnComponent.html":{},"components/PhoneNumberComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"components/RadioComponent.html":{},"components/SampleModalComponent.html":{},"modules/SharedCoreModule.html":{},"components/SinComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{},"components/XiconButtonComponent.html":{},"coverage.html":{},"overview.html":{}}}],["tib",{"_index":2990,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["tick",{"_index":4642,"title":{},"body":{"changelog.html":{}}}],["tickanddetectchanges",{"_index":5167,"title":{},"body":{"coverage.html":{}}}],["tiff",{"_index":2778,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["tihs",{"_index":3179,"title":{},"body":{"components/FormSubmitBarComponent.html":{}}}],["time",{"_index":2979,"title":{},"body":{"interfaces/FileUploaderMsg.html":{},"components/FormActionBarComponent.html":{},"changelog.html":{},"additional-documentation/local-development/schematics.html":{}}}],["timeout",{"_index":3161,"title":{},"body":{"components/FormActionBarComponent.html":{}}}],["times",{"_index":2871,"title":{},"body":{"interfaces/FileUploaderMsg.html":{},"components/ThumbnailComponent.html":{},"changelog.html":{}}}],["timor",{"_index":2235,"title":{},"body":{"interfaces/CountryList.html":{}}}],["tip",{"_index":1186,"title":{},"body":{"modules/CaptchaModule.html":{}}}],["tips",{"_index":3734,"title":{},"body":{"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{}}}],["title",{"_index":642,"title":{},"body":{"components/AccordionCommonComponent.html":{},"classes/Container.html":{},"interfaces/ISpaEnvResponse.html":{},"interfaces/SampleImageInterface.html":{},"components/SampleModalComponent.html":{},"interfaces/WizardProgressItem.html":{},"additional-documentation/local-development/schematics.html":{}}}],["tjk",{"_index":2227,"title":{},"body":{"interfaces/CountryList.html":{}}}],["tkl",{"_index":2239,"title":{},"body":{"interfaces/CountryList.html":{}}}],["tkm",{"_index":2250,"title":{},"body":{"interfaces/CountryList.html":{}}}],["tls",{"_index":2234,"title":{},"body":{"interfaces/CountryList.html":{}}}],["tobago",{"_index":2245,"title":{},"body":{"interfaces/CountryList.html":{}}}],["today",{"_index":2406,"title":{},"body":{"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"changelog.html":{}}}],["todo",{"_index":33,"title":{"todo.html":{}},"body":{"classes/AbstractBaseForm.html":{},"classes/AbstractForm.html":{},"classes/AbstractReactForm.html":{},"classes/AbstractTestPage.html":{},"interfaces/AddrLabelList.html":{},"classes/Address.html":{},"injectables/CheckCompleteBaseService.html":{},"components/CheckboxComponent.html":{},"interfaces/CommonLogMessage.html":{},"components/CoreBreadcrumbComponent.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"directives/DuplicateCheckDirective.html":{},"components/EmailComponent.html":{},"interfaces/FileUploaderMsg.html":{},"components/FullNameComponent.html":{},"interfaces/FullNameErrorMsg.html":{},"interfaces/IRadioItems.html":{},"interfaces/ISpaEnvResponse.html":{},"interfaces/Maxlengths.html":{},"components/NameComponent.html":{},"interfaces/PageListInterface.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"components/RadioComponent.html":{},"interfaces/ReadOnlyFields.html":{},"directives/ValidateBcPostalDirective.html":{},"components/XiconButtonComponent.html":{},"changelog.html":{},"todo.html":{}}}],["together",{"_index":3953,"title":{},"body":{"classes/Person.html":{}}}],["toggle",{"_index":1103,"title":{},"body":{"components/ButtonGroupComponent.html":{},"components/ToggleComponent.html":{},"changelog.html":{}}}],["toggle'},{'name",{"_index":728,"title":{},"body":{"components/AccordionCommonComponent.html":{},"components/ButtonComponent.html":{},"components/ButtonGroupComponent.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"components/ConfirmTemplateComponent.html":{},"components/CoreBreadcrumbComponent.html":{},"components/DatepickerComponent.html":{},"components/DropdownComponent.html":{},"components/EmailComponent.html":{},"components/ErrorContainerComponent.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/FullNameComponent.html":{},"components/GeocoderInputComponent.html":{},"components/HeaderComponent.html":{},"components/NameComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"components/PhnComponent.html":{},"components/PhoneNumberComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"components/RadioComponent.html":{},"components/SampleModalComponent.html":{},"components/SinComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{},"components/XiconButtonComponent.html":{}}}],["toggle.component.html",{"_index":4422,"title":{},"body":{"components/ToggleComponent.html":{}}}],["toggle.component.scss",{"_index":4421,"title":{},"body":{"components/ToggleComponent.html":{}}}],["togglecomponent",{"_index":727,"title":{"components/ToggleComponent.html":{}},"body":{"components/AccordionCommonComponent.html":{},"components/ButtonComponent.html":{},"components/ButtonGroupComponent.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"components/ConfirmTemplateComponent.html":{},"components/CoreBreadcrumbComponent.html":{},"components/DatepickerComponent.html":{},"components/DropdownComponent.html":{},"components/EmailComponent.html":{},"components/ErrorContainerComponent.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/FullNameComponent.html":{},"components/GeocoderInputComponent.html":{},"components/HeaderComponent.html":{},"components/NameComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"components/PhnComponent.html":{},"components/PhoneNumberComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"components/RadioComponent.html":{},"components/SampleModalComponent.html":{},"modules/SharedCoreModule.html":{},"components/SinComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{},"components/XiconButtonComponent.html":{},"changelog.html":{},"coverage.html":{},"overview.html":{}}}],["togo",{"_index":2238,"title":{},"body":{"interfaces/CountryList.html":{}}}],["tohse",{"_index":5493,"title":{},"body":{"additional-documentation/local-development/components.html":{}}}],["tojson",{"_index":1516,"title":{},"body":{"interfaces/CommonAttachmentJson.html":{},"classes/CommonImage.html":{},"classes/CommonImageProcessingError.html":{},"interfaces/CommonImageScaleFactors.html":{},"classes/CommonImageScaleFactorsImpl.html":{},"changelog.html":{}}}],["tokelau",{"_index":2240,"title":{},"body":{"interfaces/CountryList.html":{}}}],["told",{"_index":2743,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["tome",{"_index":2170,"title":{},"body":{"interfaces/CountryList.html":{}}}],["tomorrow",{"_index":2351,"title":{},"body":{"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{}}}],["ton",{"_index":2241,"title":{},"body":{"interfaces/CountryList.html":{}}}],["tonga",{"_index":2242,"title":{},"body":{"interfaces/CountryList.html":{}}}],["toobig",{"_index":1467,"title":{},"body":{"interfaces/CommonAttachmentJson.html":{},"classes/CommonImage.html":{},"classes/CommonImageProcessingError.html":{},"interfaces/CommonImageScaleFactors.html":{},"classes/CommonImageScaleFactorsImpl.html":{},"miscellaneous/enumerations.html":{}}}],["tools",{"_index":3880,"title":{},"body":{"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{}}}],["toosmall",{"_index":1466,"title":{},"body":{"interfaces/CommonAttachmentJson.html":{},"classes/CommonImage.html":{},"classes/CommonImageProcessingError.html":{},"interfaces/CommonImageScaleFactors.html":{},"classes/CommonImageScaleFactorsImpl.html":{},"miscellaneous/enumerations.html":{}}}],["top",{"_index":68,"title":{},"body":{"classes/AbstractBaseForm.html":{},"classes/AbstractForm.html":{},"classes/AbstractReactForm.html":{},"classes/AbstractTestPage.html":{},"components/CoreBreadcrumbComponent.html":{},"components/HeaderComponent.html":{},"changelog.html":{},"additional-documentation/local-development/schematics.html":{},"additional-documentation/local-development/components.html":{}}}],["tostring",{"_index":980,"title":{},"body":{"classes/Address.html":{}}}],["tostring()'d",{"_index":1623,"title":{},"body":{"interfaces/CommonLogMessage.html":{}}}],["touched",{"_index":185,"title":{},"body":{"classes/AbstractFormControl.html":{},"classes/AbstractReactForm.html":{},"interfaces/CountryList.html":{},"components/GeocoderInputComponent.html":{},"components/NameComponent.html":{},"components/PostalCodeComponent.html":{},"changelog.html":{}}}],["trace",{"_index":4561,"title":{},"body":{"components/XiconButtonComponent.html":{}}}],["track",{"_index":139,"title":{},"body":{"classes/AbstractFormControl.html":{},"classes/Base.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"components/ConfirmTemplateComponent.html":{},"components/DatepickerComponent.html":{},"components/DropdownComponent.html":{},"components/EmailComponent.html":{},"components/FullNameComponent.html":{},"components/GeocoderInputComponent.html":{},"components/NameComponent.html":{},"components/PasswordComponent.html":{},"classes/Person.html":{},"components/PhnComponent.html":{},"components/PhoneNumberComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"components/RadioComponent.html":{},"components/SampleModalComponent.html":{},"components/SinComponent.html":{},"components/ToggleComponent.html":{}}}],["tracking",{"_index":1484,"title":{},"body":{"interfaces/CommonAttachmentJson.html":{},"classes/CommonImage.html":{},"classes/CommonImageProcessingError.html":{},"interfaces/CommonImageScaleFactors.html":{},"classes/CommonImageScaleFactorsImpl.html":{}}}],["transclusion",{"_index":3530,"title":{},"body":{"interfaces/ISpaEnvResponse.html":{}}}],["transformed",{"_index":3005,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["translation",{"_index":1144,"title":{},"body":{"injectables/CaptchaDataService.html":{},"injectables/ServerPayload.html":{}}}],["tree",{"_index":630,"title":{},"body":{"components/AccordionCommonComponent.html":{},"components/ButtonComponent.html":{},"components/ButtonGroupComponent.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"components/ConfirmTemplateComponent.html":{},"components/CoreBreadcrumbComponent.html":{},"components/DatepickerComponent.html":{},"components/DropdownComponent.html":{},"components/EmailComponent.html":{},"components/ErrorContainerComponent.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/FullNameComponent.html":{},"components/GeocoderInputComponent.html":{},"components/HeaderComponent.html":{},"components/NameComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"components/PhnComponent.html":{},"components/PhoneNumberComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"components/RadioComponent.html":{},"components/SampleModalComponent.html":{},"components/SinComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{},"components/XiconButtonComponent.html":{}}}],["trigger",{"_index":318,"title":{},"body":{"classes/AbstractHttpService.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"components/GeocoderInputComponent.html":{},"changelog.html":{}}}],["triggers",{"_index":3126,"title":{},"body":{"interfaces/FileUploaderMsg.html":{},"components/GeocoderInputComponent.html":{}}}],["trimmed",{"_index":2455,"title":{},"body":{"directives/DateFieldFormatDirective.html":{}}}],["trimmed.replace(/[^\\d]/g",{"_index":2459,"title":{},"body":{"directives/DateFieldFormatDirective.html":{}}}],["trimmed.substr",{"_index":2460,"title":{},"body":{"directives/DateFieldFormatDirective.html":{}}}],["trimming",{"_index":3283,"title":{},"body":{"interfaces/GeoAddressResult.html":{},"injectables/GeocoderService.html":{}}}],["trinidad",{"_index":2244,"title":{},"body":{"interfaces/CountryList.html":{}}}],["tristan",{"_index":2147,"title":{},"body":{"interfaces/CountryList.html":{}}}],["true",{"_index":106,"title":{},"body":{"classes/AbstractForm.html":{},"classes/AbstractReactForm.html":{},"interfaces/AddrLabelList.html":{},"components/ButtonGroupComponent.html":{},"injectables/CheckCompleteBaseService.html":{},"interfaces/CountryList.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"components/DropdownComponent.html":{},"directives/DuplicateCheckDirective.html":{},"components/EmailComponent.html":{},"interfaces/FileUploaderMsg.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/FullNameComponent.html":{},"interfaces/FullNameErrorMsg.html":{},"interfaces/GeoAddressResult.html":{},"components/GeocoderInputComponent.html":{},"injectables/GeocoderService.html":{},"interfaces/IRadioItems.html":{},"interfaces/ISpaEnvResponse.html":{},"guards/LoadPageGuardService.html":{},"interfaces/Maxlengths.html":{},"interfaces/PageListInterface.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"components/PhnComponent.html":{},"components/PhoneNumberComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{},"components/RadioComponent.html":{},"interfaces/ReadOnlyFields.html":{},"guards/RouteGuardService.html":{},"components/SinComponent.html":{},"directives/ValidateBcPostalDirective.html":{},"directives/ValidateCityDirective.html":{},"directives/ValidateNameDirective.html":{},"directives/ValidatePostalcodeDirective.html":{},"directives/ValidateRegionDirective.html":{},"directives/ValidateStreetDirective.html":{},"additional-documentation/local-development/schematics.html":{},"additional-documentation/local-development/components.html":{}}}],["truncate",{"_index":5108,"title":{},"body":{"changelog.html":{}}}],["try",{"_index":3578,"title":{},"body":{"interfaces/ISpaEnvResponse.html":{},"components/WizardProgressBarComponent.html":{},"changelog.html":{}}}],["try/catch",{"_index":4536,"title":{},"body":{"components/WizardProgressBarComponent.html":{}}}],["ts",{"_index":5413,"title":{},"body":{"additional-documentation/local-development/schematics.html":{}}}],["tsconfig",{"_index":5119,"title":{},"body":{"changelog.html":{},"additional-documentation/local-development/schematics.html":{}}}],["tsdoc",{"_index":4892,"title":{},"body":{"changelog.html":{}}}],["tslint",{"_index":2661,"title":{},"body":{"interfaces/FileUploaderMsg.html":{},"interfaces/ISpaEnvResponse.html":{},"changelog.html":{}}}],["tslint:disable",{"_index":3597,"title":{},"body":{"interfaces/ISpaEnvResponse.html":{}}}],["tslint:disable:max",{"_index":2662,"title":{},"body":{"interfaces/FileUploaderMsg.html":{},"interfaces/ISpaEnvResponse.html":{}}}],["tto",{"_index":2243,"title":{},"body":{"interfaces/CountryList.html":{}}}],["tun",{"_index":2246,"title":{},"body":{"interfaces/CountryList.html":{}}}],["tunisia",{"_index":2247,"title":{},"body":{"interfaces/CountryList.html":{}}}],["tur",{"_index":2248,"title":{},"body":{"interfaces/CountryList.html":{}}}],["turkey",{"_index":2249,"title":{},"body":{"interfaces/CountryList.html":{}}}],["turkmenistan",{"_index":2251,"title":{},"body":{"interfaces/CountryList.html":{}}}],["turks",{"_index":2253,"title":{},"body":{"interfaces/CountryList.html":{}}}],["turn",{"_index":2793,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["turned",{"_index":1264,"title":{},"body":{"injectables/CheckCompleteBaseService.html":{},"interfaces/PageListInterface.html":{},"changelog.html":{}}}],["tuv",{"_index":2255,"title":{},"body":{"interfaces/CountryList.html":{}}}],["tuvalu",{"_index":2256,"title":{},"body":{"interfaces/CountryList.html":{}}}],["tweak",{"_index":4778,"title":{},"body":{"changelog.html":{}}}],["tweaks",{"_index":557,"title":{},"body":{"classes/AbstractTestPage.html":{}}}],["twn",{"_index":2225,"title":{},"body":{"interfaces/CountryList.html":{}}}],["two",{"_index":5481,"title":{},"body":{"additional-documentation/local-development/components.html":{}}}],["type",{"_index":27,"title":{},"body":{"classes/AbstractBaseForm.html":{},"classes/AbstractForm.html":{},"classes/AbstractFormControl.html":{},"classes/AbstractHttpService.html":{},"injectables/AbstractPageGuardService.html":{},"injectables/AbstractPgCheckService.html":{},"classes/AbstractReactForm.html":{},"classes/AbstractTestPage.html":{},"components/AccordionCommonComponent.html":{},"interfaces/AddrLabelList.html":{},"classes/Address.html":{},"classes/Base.html":{},"components/ButtonComponent.html":{},"components/ButtonGroupComponent.html":{},"injectables/CaptchaDataService.html":{},"injectables/CheckCompleteBaseService.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"interfaces/CommonAttachmentJson.html":{},"classes/CommonImage.html":{},"classes/CommonImageProcessingError.html":{},"interfaces/CommonImageScaleFactors.html":{},"classes/CommonImageScaleFactorsImpl.html":{},"interfaces/CommonLogMessage.html":{},"components/ConfirmTemplateComponent.html":{},"classes/Container.html":{},"interfaces/CountryList.html":{},"interfaces/DateErrorMsg.html":{},"directives/DateFieldFormatDirective.html":{},"components/DatepickerComponent.html":{},"injectables/DefaultPageGuardService.html":{},"components/DropdownComponent.html":{},"directives/DuplicateCheckDirective.html":{},"components/EmailComponent.html":{},"components/ErrorContainerComponent.html":{},"interfaces/ErrorMessage.html":{},"interfaces/FileUploaderMsg.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/FullNameComponent.html":{},"interfaces/FullNameErrorMsg.html":{},"interfaces/GeoAddressResult.html":{},"components/GeocoderInputComponent.html":{},"injectables/GeocoderService.html":{},"components/HeaderComponent.html":{},"interfaces/IRadioItems.html":{},"interfaces/ISpaEnvResponse.html":{},"guards/LoadPageGuardService.html":{},"interfaces/Maxlengths.html":{},"classes/MoHCommonLibraryError.html":{},"components/NameComponent.html":{},"components/PageFrameworkComponent.html":{},"interfaces/PageList.html":{},"interfaces/PageListInterface.html":{},"components/PageSectionComponent.html":{},"injectables/PageStateService.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"classes/Person.html":{},"components/PhnComponent.html":{},"components/PhoneNumberComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{},"components/RadioComponent.html":{},"interfaces/ReadOnlyFields.html":{},"guards/RouteGuardService.html":{},"interfaces/SampleImageInterface.html":{},"components/SampleModalComponent.html":{},"injectables/ServerPayload.html":{},"interfaces/SimpleDate.html":{},"components/SinComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"directives/ValidateBcPostalDirective.html":{},"directives/ValidateCityDirective.html":{},"directives/ValidateNameDirective.html":{},"directives/ValidatePostalcodeDirective.html":{},"directives/ValidateRegionDirective.html":{},"directives/ValidateStreetDirective.html":{},"components/WizardProgressBarComponent.html":{},"interfaces/WizardProgressItem.html":{},"components/XiconButtonComponent.html":{},"changelog.html":{},"coverage.html":{}}}],["typeahead",{"_index":3359,"title":{},"body":{"components/GeocoderInputComponent.html":{},"changelog.html":{}}}],["typeaheadlist",{"_index":3313,"title":{},"body":{"components/GeocoderInputComponent.html":{}}}],["typeaheadmatch",{"_index":3338,"title":{},"body":{"components/GeocoderInputComponent.html":{}}}],["typeaheadmodule",{"_index":4277,"title":{},"body":{"modules/SharedCoreModule.html":{}}}],["typeaheadmodule.forroot",{"_index":4346,"title":{},"body":{"modules/SharedCoreModule.html":{}}}],["typed",{"_index":3351,"title":{},"body":{"components/GeocoderInputComponent.html":{}}}],["typeof",{"_index":965,"title":{},"body":{"interfaces/AddrLabelList.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"interfaces/Maxlengths.html":{},"interfaces/ReadOnlyFields.html":{}}}],["typeoption",{"_index":436,"title":{},"body":{"classes/AbstractTestPage.html":{}}}],["typeoption(labelid",{"_index":568,"title":{},"body":{"classes/AbstractTestPage.html":{}}}],["typeroots",{"_index":5450,"title":{},"body":{"additional-documentation/local-development/schematics.html":{}}}],["types",{"_index":582,"title":{},"body":{"classes/AbstractTestPage.html":{},"interfaces/FileUploaderMsg.html":{},"changelog.html":{}}}],["types/pdfjs",{"_index":5286,"title":{},"body":{"dependencies.html":{}}}],["typescript",{"_index":4960,"title":{},"body":{"changelog.html":{},"additional-documentation/getting-started.html":{},"additional-documentation/local-development/components.html":{}}}],["typetext",{"_index":437,"title":{},"body":{"classes/AbstractTestPage.html":{}}}],["typetext(refnameval",{"_index":577,"title":{},"body":{"classes/AbstractTestPage.html":{}}}],["typetextfirstoccurrence",{"_index":438,"title":{},"body":{"classes/AbstractTestPage.html":{}}}],["typetextfirstoccurrence(refnameval",{"_index":580,"title":{},"body":{"classes/AbstractTestPage.html":{}}}],["typical",{"_index":3653,"title":{},"body":{"guards/LoadPageGuardService.html":{},"guards/RouteGuardService.html":{}}}],["typo",{"_index":532,"title":{},"body":{"classes/AbstractTestPage.html":{},"changelog.html":{}}}],["tza",{"_index":2229,"title":{},"body":{"interfaces/CountryList.html":{}}}],["u.s",{"_index":2280,"title":{},"body":{"interfaces/CountryList.html":{}}}],["uga",{"_index":2257,"title":{},"body":{"interfaces/CountryList.html":{}}}],["uganda",{"_index":2258,"title":{},"body":{"interfaces/CountryList.html":{}}}],["ui",{"_index":3405,"title":{},"body":{"components/GeocoderInputComponent.html":{}}}],["ukr",{"_index":2259,"title":{},"body":{"interfaces/CountryList.html":{}}}],["ukraine",{"_index":2260,"title":{},"body":{"interfaces/CountryList.html":{}}}],["umi",{"_index":2264,"title":{},"body":{"interfaces/CountryList.html":{}}}],["unable",{"_index":1628,"title":{},"body":{"interfaces/CommonLogMessage.html":{}}}],["unchecked",{"_index":4923,"title":{},"body":{"changelog.html":{}}}],["uncomment",{"_index":5457,"title":{},"body":{"additional-documentation/local-development/schematics.html":{}}}],["unde",{"_index":1390,"title":{},"body":{"components/CityComponent.html":{},"interfaces/CountryList.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"interfaces/FileUploaderMsg.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{}}}],["undefined",{"_index":312,"title":{},"body":{"classes/AbstractHttpService.html":{},"interfaces/AddrLabelList.html":{},"components/CityComponent.html":{},"interfaces/CountryList.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"interfaces/Maxlengths.html":{},"components/PhnComponent.html":{},"components/PhoneNumberComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{},"interfaces/ReadOnlyFields.html":{},"changelog.html":{}}}],["under",{"_index":3012,"title":{},"body":{"interfaces/FileUploaderMsg.html":{},"interfaces/ISpaEnvResponse.html":{},"changelog.html":{},"license.html":{},"additional-documentation/getting-started.html":{},"additional-documentation/local-development/components.html":{}}}],["underlines",{"_index":4028,"title":{},"body":{"components/PhnComponent.html":{},"components/PhoneNumberComponent.html":{},"components/SinComponent.html":{}}}],["underlying",{"_index":5327,"title":{},"body":{"index.html":{}}}],["understand",{"_index":3583,"title":{},"body":{"interfaces/ISpaEnvResponse.html":{}}}],["uniqness",{"_index":1511,"title":{},"body":{"interfaces/CommonAttachmentJson.html":{},"classes/CommonImage.html":{},"classes/CommonImageProcessingError.html":{},"interfaces/CommonImageScaleFactors.html":{},"classes/CommonImageScaleFactorsImpl.html":{}}}],["unique",{"_index":331,"title":{},"body":{"classes/AbstractHttpService.html":{},"changelog.html":{}}}],["unit",{"_index":3958,"title":{},"body":{"classes/Person.html":{},"changelog.html":{}}}],["united",{"_index":2231,"title":{},"body":{"interfaces/CountryList.html":{}}}],["united_states",{"_index":776,"title":{},"body":{"interfaces/AddrLabelList.html":{},"interfaces/CountryList.html":{},"interfaces/Maxlengths.html":{},"interfaces/ReadOnlyFields.html":{},"coverage.html":{}}}],["units",{"_index":4604,"title":{},"body":{"changelog.html":{}}}],["unknown",{"_index":1469,"title":{},"body":{"interfaces/CommonAttachmentJson.html":{},"classes/CommonImage.html":{},"classes/CommonImageProcessingError.html":{},"interfaces/CommonImageScaleFactors.html":{},"classes/CommonImageScaleFactorsImpl.html":{},"interfaces/FileUploaderMsg.html":{},"miscellaneous/enumerations.html":{}}}],["unless",{"_index":1099,"title":{},"body":{"components/ButtonGroupComponent.html":{},"components/PageFrameworkComponent.html":{}}}],["unnecessary",{"_index":4641,"title":{},"body":{"changelog.html":{}}}],["unreleased",{"_index":4568,"title":{},"body":{"changelog.html":{}}}],["unsuccessful",{"_index":1650,"title":{},"body":{"interfaces/CommonLogMessage.html":{},"interfaces/ISpaEnvResponse.html":{}}}],["unsure",{"_index":3044,"title":{},"body":{"interfaces/FileUploaderMsg.html":{},"additional-documentation/local-development/schematics.html":{}}}],["until",{"_index":2765,"title":{},"body":{"interfaces/FileUploaderMsg.html":{},"interfaces/ISpaEnvResponse.html":{}}}],["up",{"_index":539,"title":{},"body":{"classes/AbstractTestPage.html":{},"interfaces/AddrLabelList.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"interfaces/GeoAddressResult.html":{},"injectables/GeocoderService.html":{},"interfaces/Maxlengths.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"components/PhnComponent.html":{},"interfaces/ReadOnlyFields.html":{},"components/SinComponent.html":{},"changelog.html":{},"additional-documentation/getting-started.html":{},"additional-documentation/local-development/components.html":{}}}],["upcoming",{"_index":5454,"title":{},"body":{"additional-documentation/local-development/schematics.html":{}}}],["update",{"_index":504,"title":{},"body":{"classes/AbstractTestPage.html":{},"interfaces/AddrLabelList.html":{},"interfaces/CommonLogMessage.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"components/GeocoderInputComponent.html":{},"interfaces/Maxlengths.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"interfaces/ReadOnlyFields.html":{},"components/WizardProgressBarComponent.html":{},"changelog.html":{},"additional-documentation/local-development/schematics.html":{}}}],["updateangularjson",{"_index":5260,"title":{},"body":{"coverage.html":{}}}],["updateappcomponentts",{"_index":5274,"title":{},"body":{"coverage.html":{}}}],["updated",{"_index":2317,"title":{},"body":{"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"components/SinComponent.html":{},"changelog.html":{}}}],["updatepackagejson",{"_index":5275,"title":{},"body":{"coverage.html":{}}}],["updateprovlist",{"_index":911,"title":{},"body":{"interfaces/AddrLabelList.html":{},"interfaces/Maxlengths.html":{},"interfaces/ReadOnlyFields.html":{}}}],["updates",{"_index":904,"title":{},"body":{"interfaces/AddrLabelList.html":{},"interfaces/CommonLogMessage.html":{},"interfaces/Maxlengths.html":{},"interfaces/ReadOnlyFields.html":{}}}],["updateskipcontentlink",{"_index":3448,"title":{},"body":{"components/HeaderComponent.html":{}}}],["updatetsconfig",{"_index":5261,"title":{},"body":{"coverage.html":{}}}],["updating",{"_index":1072,"title":{},"body":{"components/ButtonComponent.html":{},"changelog.html":{}}}],["upload",{"_index":292,"title":{},"body":{"classes/AbstractHttpService.html":{},"interfaces/FileUploaderMsg.html":{},"injectables/GeocoderService.html":{}}}],["uploadattachment",{"_index":234,"title":{},"body":{"classes/AbstractHttpService.html":{},"injectables/GeocoderService.html":{},"changelog.html":{}}}],["uploadattachment(relativeurl",{"_index":276,"title":{},"body":{"classes/AbstractHttpService.html":{},"injectables/GeocoderService.html":{}}}],["uploaded",{"_index":1488,"title":{},"body":{"interfaces/CommonAttachmentJson.html":{},"classes/CommonImage.html":{},"classes/CommonImageProcessingError.html":{},"interfaces/CommonImageScaleFactors.html":{},"classes/CommonImageScaleFactorsImpl.html":{},"interfaces/FileUploaderMsg.html":{}}}],["uploader",{"_index":2664,"title":{},"body":{"interfaces/FileUploaderMsg.html":{},"changelog.html":{},"additional-documentation/getting-started.html":{}}}],["uploader'},{'name",{"_index":689,"title":{},"body":{"components/AccordionCommonComponent.html":{},"components/ButtonComponent.html":{},"components/ButtonGroupComponent.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"components/ConfirmTemplateComponent.html":{},"components/CoreBreadcrumbComponent.html":{},"components/DatepickerComponent.html":{},"components/DropdownComponent.html":{},"components/EmailComponent.html":{},"components/ErrorContainerComponent.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/FullNameComponent.html":{},"components/GeocoderInputComponent.html":{},"components/HeaderComponent.html":{},"components/NameComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"components/PhnComponent.html":{},"components/PhoneNumberComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"components/RadioComponent.html":{},"components/SampleModalComponent.html":{},"components/SinComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{},"components/XiconButtonComponent.html":{}}}],["uploader.component",{"_index":4283,"title":{},"body":{"modules/SharedCoreModule.html":{}}}],["uploader.component.html",{"_index":2665,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["uploader.component.scss",{"_index":2666,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["uploader.component.ts",{"_index":1463,"title":{},"body":{"interfaces/CommonAttachmentJson.html":{},"classes/CommonImage.html":{},"classes/CommonImageProcessingError.html":{},"interfaces/CommonImageScaleFactors.html":{},"classes/CommonImageScaleFactorsImpl.html":{},"interfaces/FileUploaderMsg.html":{},"coverage.html":{}}}],["uploader/file",{"_index":2613,"title":{},"body":{"interfaces/FileUploaderMsg.html":{},"modules/SharedCoreModule.html":{},"coverage.html":{}}}],["uploader_after_resize_attributes",{"_index":3025,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["uploader_error",{"_index":3100,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["uploadinstructionref",{"_index":2682,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["uploads",{"_index":280,"title":{},"body":{"classes/AbstractHttpService.html":{},"injectables/GeocoderService.html":{}}}],["upper",{"_index":877,"title":{},"body":{"interfaces/AddrLabelList.html":{},"interfaces/Maxlengths.html":{},"components/PostalCodeComponent.html":{},"interfaces/ReadOnlyFields.html":{}}}],["uppercasepipe",{"_index":4119,"title":{},"body":{"components/PostalCodeComponent.html":{}}}],["uppercasepipe(text",{"_index":4138,"title":{},"body":{"components/PostalCodeComponent.html":{}}}],["url",{"_index":69,"title":{},"body":{"classes/AbstractBaseForm.html":{},"classes/AbstractForm.html":{},"classes/AbstractHttpService.html":{},"injectables/AbstractPageGuardService.html":{},"injectables/AbstractPgCheckService.html":{},"classes/AbstractReactForm.html":{},"classes/AbstractTestPage.html":{},"injectables/CheckCompleteBaseService.html":{},"interfaces/CommonLogMessage.html":{},"injectables/DefaultPageGuardService.html":{},"injectables/GeocoderService.html":{},"components/HeaderComponent.html":{},"interfaces/ISpaEnvResponse.html":{},"interfaces/PageList.html":{},"interfaces/PageListInterface.html":{},"injectables/PageStateService.html":{},"components/WizardProgressBarComponent.html":{}}}],["url.com/fpcare/example#content",{"_index":3476,"title":{},"body":{"components/HeaderComponent.html":{}}}],["url.includes",{"_index":1279,"title":{},"body":{"injectables/CheckCompleteBaseService.html":{},"interfaces/PageListInterface.html":{}}}],["url.includes(x.route",{"_index":4530,"title":{},"body":{"components/WizardProgressBarComponent.html":{}}}],["urlbasename",{"_index":3451,"title":{},"body":{"components/HeaderComponent.html":{}}}],["urls",{"_index":285,"title":{},"body":{"classes/AbstractHttpService.html":{},"injectables/GeocoderService.html":{}}}],["urltree",{"_index":3676,"title":{},"body":{"guards/LoadPageGuardService.html":{},"guards/RouteGuardService.html":{}}}],["uruguay",{"_index":2267,"title":{},"body":{"interfaces/CountryList.html":{}}}],["ury",{"_index":2266,"title":{},"body":{"interfaces/CountryList.html":{}}}],["us/docs/web/http/basics_of_http/mime_types",{"_index":1504,"title":{},"body":{"interfaces/CommonAttachmentJson.html":{},"classes/CommonImage.html":{},"classes/CommonImageProcessingError.html":{},"interfaces/CommonImageScaleFactors.html":{},"classes/CommonImageScaleFactorsImpl.html":{}}}],["usa",{"_index":1743,"title":{},"body":{"interfaces/CountryList.html":{}}}],["usable",{"_index":5393,"title":{},"body":{"additional-documentation/getting-started.html":{}}}],["usage",{"_index":1731,"title":{},"body":{"components/CoreBreadcrumbComponent.html":{}}}],["use",{"_index":411,"title":{},"body":{"classes/AbstractTestPage.html":{},"interfaces/AddrLabelList.html":{},"classes/Address.html":{},"components/ButtonGroupComponent.html":{},"modules/CaptchaModule.html":{},"injectables/CheckCompleteBaseService.html":{},"components/CheckboxComponent.html":{},"components/CoreBreadcrumbComponent.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"components/EmailComponent.html":{},"components/GeocoderInputComponent.html":{},"interfaces/IRadioItems.html":{},"guards/LoadPageGuardService.html":{},"interfaces/Maxlengths.html":{},"components/NameComponent.html":{},"interfaces/PageListInterface.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"components/RadioComponent.html":{},"interfaces/ReadOnlyFields.html":{},"guards/RouteGuardService.html":{},"directives/ValidateBcPostalDirective.html":{},"components/XiconButtonComponent.html":{},"changelog.html":{},"license.html":{},"todo.html":{},"additional-documentation/getting-started.html":{},"additional-documentation/local-development/schematics.html":{},"additional-documentation/local-development/components.html":{}}}],["used",{"_index":171,"title":{},"body":{"classes/AbstractFormControl.html":{},"classes/AbstractHttpService.html":{},"classes/Address.html":{},"components/ButtonComponent.html":{},"injectables/CheckCompleteBaseService.html":{},"classes/Container.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"interfaces/ErrorMessage.html":{},"components/FormSubmitBarComponent.html":{},"interfaces/IRadioItems.html":{},"interfaces/ISpaEnvResponse.html":{},"components/PageFrameworkComponent.html":{},"interfaces/PageListInterface.html":{},"classes/Person.html":{},"components/PhnComponent.html":{},"components/PhoneNumberComponent.html":{},"components/RadioComponent.html":{},"interfaces/SimpleDate.html":{},"components/SinComponent.html":{},"directives/ValidateBcPostalDirective.html":{},"interfaces/WizardProgressItem.html":{},"changelog.html":{},"additional-documentation/local-development/components.html":{}}}],["usedropdownlist",{"_index":2299,"title":{},"body":{"interfaces/CountryList.html":{},"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{}}}],["useexisting",{"_index":360,"title":{},"body":{"injectables/AbstractPageGuardService.html":{},"injectables/AbstractPgCheckService.html":{},"interfaces/AddrLabelList.html":{},"components/ButtonComponent.html":{},"components/ButtonGroupComponent.html":{},"components/CheckboxComponent.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"injectables/DefaultPageGuardService.html":{},"directives/DuplicateCheckDirective.html":{},"interfaces/FileUploaderMsg.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/FullNameComponent.html":{},"interfaces/FullNameErrorMsg.html":{},"interfaces/ISpaEnvResponse.html":{},"guards/LoadPageGuardService.html":{},"interfaces/Maxlengths.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"interfaces/ReadOnlyFields.html":{},"guards/RouteGuardService.html":{},"directives/ValidateBcPostalDirective.html":{},"directives/ValidateCityDirective.html":{},"directives/ValidateNameDirective.html":{},"directives/ValidatePostalcodeDirective.html":{},"directives/ValidateRegionDirective.html":{},"directives/ValidateStreetDirective.html":{}}}],["useful",{"_index":2359,"title":{},"body":{"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{}}}],["usegeocoder",{"_index":944,"title":{},"body":{"interfaces/AddrLabelList.html":{},"interfaces/Maxlengths.html":{},"interfaces/ReadOnlyFields.html":{}}}],["user",{"_index":52,"title":{},"body":{"classes/AbstractBaseForm.html":{},"classes/AbstractForm.html":{},"classes/AbstractReactForm.html":{},"classes/AbstractTestPage.html":{},"interfaces/AddrLabelList.html":{},"interfaces/CommonAttachmentJson.html":{},"classes/CommonImage.html":{},"classes/CommonImageProcessingError.html":{},"interfaces/CommonImageScaleFactors.html":{},"classes/CommonImageScaleFactorsImpl.html":{},"classes/Container.html":{},"components/CoreBreadcrumbComponent.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"interfaces/FileUploaderMsg.html":{},"components/GeocoderInputComponent.html":{},"interfaces/ISpaEnvResponse.html":{},"guards/LoadPageGuardService.html":{},"interfaces/Maxlengths.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"components/PhoneNumberComponent.html":{},"interfaces/ReadOnlyFields.html":{},"guards/RouteGuardService.html":{},"interfaces/WizardProgressItem.html":{},"changelog.html":{}}}],["user's",{"_index":2819,"title":{},"body":{"interfaces/FileUploaderMsg.html":{},"interfaces/ISpaEnvResponse.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{}}}],["username",{"_index":3817,"title":{},"body":{"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{}}}],["users",{"_index":813,"title":{},"body":{"interfaces/AddrLabelList.html":{},"interfaces/Maxlengths.html":{},"interfaces/ReadOnlyFields.html":{},"changelog.html":{}}}],["uses",{"_index":931,"title":{},"body":{"interfaces/AddrLabelList.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"interfaces/FileUploaderMsg.html":{},"interfaces/Maxlengths.html":{},"interfaces/ReadOnlyFields.html":{},"changelog.html":{}}}],["using",{"_index":252,"title":{},"body":{"classes/AbstractHttpService.html":{},"interfaces/AddrLabelList.html":{},"interfaces/CommonLogMessage.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"interfaces/FileUploaderMsg.html":{},"injectables/GeocoderService.html":{},"interfaces/ISpaEnvResponse.html":{},"interfaces/Maxlengths.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"interfaces/ReadOnlyFields.html":{},"components/SinComponent.html":{},"components/WizardProgressBarComponent.html":{},"changelog.html":{},"index.html":{},"additional-documentation/getting-started.html":{},"additional-documentation/local-development/components.html":{}}}],["ut",{"_index":1420,"title":{},"body":{"components/CityComponent.html":{},"interfaces/CountryList.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"interfaces/FileUploaderMsg.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{}}}],["uuid",{"_index":303,"title":{},"body":{"classes/AbstractHttpService.html":{},"classes/Base.html":{},"modules/CaptchaModule.html":{},"interfaces/CommonAttachmentJson.html":{},"classes/CommonImage.html":{},"classes/CommonImageProcessingError.html":{},"interfaces/CommonImageScaleFactors.html":{},"classes/CommonImageScaleFactorsImpl.html":{},"interfaces/FileUploaderMsg.html":{},"changelog.html":{}}}],["uuid.uuid",{"_index":134,"title":{},"body":{"classes/AbstractFormControl.html":{},"classes/AbstractHttpService.html":{},"classes/Base.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"interfaces/CommonAttachmentJson.html":{},"classes/CommonImage.html":{},"classes/CommonImageProcessingError.html":{},"interfaces/CommonImageScaleFactors.html":{},"classes/CommonImageScaleFactorsImpl.html":{},"components/ConfirmTemplateComponent.html":{},"components/DatepickerComponent.html":{},"components/DropdownComponent.html":{},"components/EmailComponent.html":{},"components/FullNameComponent.html":{},"components/GeocoderInputComponent.html":{},"components/NameComponent.html":{},"components/PasswordComponent.html":{},"classes/Person.html":{},"components/PhnComponent.html":{},"components/PhoneNumberComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"components/RadioComponent.html":{},"components/SampleModalComponent.html":{},"components/SinComponent.html":{},"components/ToggleComponent.html":{}}}],["uuids",{"_index":287,"title":{},"body":{"classes/AbstractHttpService.html":{},"injectables/GeocoderService.html":{}}}],["uzb",{"_index":2268,"title":{},"body":{"interfaces/CountryList.html":{}}}],["uzbekistan",{"_index":2269,"title":{},"body":{"interfaces/CountryList.html":{}}}],["v3",{"_index":4690,"title":{},"body":{"changelog.html":{}}}],["val",{"_index":804,"title":{},"body":{"interfaces/AddrLabelList.html":{},"classes/Address.html":{},"components/ButtonGroupComponent.html":{},"components/CityComponent.html":{},"interfaces/CountryList.html":{},"components/EmailComponent.html":{},"components/GeocoderInputComponent.html":{},"interfaces/IRadioItems.html":{},"interfaces/Maxlengths.html":{},"components/NameComponent.html":{},"interfaces/PageList.html":{},"injectables/PageStateService.html":{},"components/PhnComponent.html":{},"components/PhoneNumberComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{},"components/RadioComponent.html":{},"interfaces/ReadOnlyFields.html":{},"components/SinComponent.html":{},"changelog.html":{}}}],["val.country",{"_index":926,"title":{},"body":{"interfaces/AddrLabelList.html":{},"interfaces/Maxlengths.html":{},"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{},"interfaces/ReadOnlyFields.html":{}}}],["val.countrycode",{"_index":940,"title":{},"body":{"interfaces/AddrLabelList.html":{},"interfaces/CountryList.html":{},"interfaces/Maxlengths.html":{},"interfaces/ReadOnlyFields.html":{}}}],["val.description",{"_index":925,"title":{},"body":{"interfaces/AddrLabelList.html":{},"interfaces/Maxlengths.html":{},"interfaces/ReadOnlyFields.html":{}}}],["val.label",{"_index":4226,"title":{},"body":{"components/RadioComponent.html":{}}}],["val.path",{"_index":3761,"title":{},"body":{"interfaces/PageList.html":{},"injectables/PageStateService.html":{}}}],["val.provincecode",{"_index":923,"title":{},"body":{"interfaces/AddrLabelList.html":{},"interfaces/Maxlengths.html":{},"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{},"interfaces/ReadOnlyFields.html":{}}}],["valid",{"_index":107,"title":{},"body":{"classes/AbstractForm.html":{},"classes/AbstractReactForm.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"components/PhoneNumberComponent.html":{},"directives/ValidateBcPostalDirective.html":{},"directives/ValidateCityDirective.html":{},"directives/ValidateNameDirective.html":{},"directives/ValidatePostalcodeDirective.html":{},"directives/ValidateRegionDirective.html":{},"directives/ValidateStreetDirective.html":{},"changelog.html":{}}}],["validate",{"_index":2540,"title":{},"body":{"directives/DuplicateCheckDirective.html":{},"directives/ValidateBcPostalDirective.html":{},"directives/ValidateCityDirective.html":{},"directives/ValidateNameDirective.html":{},"directives/ValidatePostalcodeDirective.html":{},"directives/ValidateRegionDirective.html":{},"directives/ValidateStreetDirective.html":{},"changelog.html":{}}}],["validate(control",{"_index":2543,"title":{},"body":{"directives/DuplicateCheckDirective.html":{},"directives/ValidateBcPostalDirective.html":{},"directives/ValidateCityDirective.html":{},"directives/ValidateNameDirective.html":{},"directives/ValidatePostalcodeDirective.html":{},"directives/ValidateRegionDirective.html":{},"directives/ValidateStreetDirective.html":{}}}],["validatebcpostaldirective",{"_index":739,"title":{"directives/ValidateBcPostalDirective.html":{}},"body":{"components/AccordionCommonComponent.html":{},"components/ButtonComponent.html":{},"components/ButtonGroupComponent.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"components/ConfirmTemplateComponent.html":{},"components/CoreBreadcrumbComponent.html":{},"components/DatepickerComponent.html":{},"components/DropdownComponent.html":{},"components/EmailComponent.html":{},"components/ErrorContainerComponent.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/FullNameComponent.html":{},"components/GeocoderInputComponent.html":{},"components/HeaderComponent.html":{},"components/NameComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"components/PhnComponent.html":{},"components/PhoneNumberComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"components/RadioComponent.html":{},"components/SampleModalComponent.html":{},"modules/SharedCoreModule.html":{},"components/SinComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"directives/ValidateBcPostalDirective.html":{},"components/WizardProgressBarComponent.html":{},"components/XiconButtonComponent.html":{},"coverage.html":{},"overview.html":{}}}],["validatecitydirective",{"_index":741,"title":{"directives/ValidateCityDirective.html":{}},"body":{"components/AccordionCommonComponent.html":{},"components/ButtonComponent.html":{},"components/ButtonGroupComponent.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"components/ConfirmTemplateComponent.html":{},"components/CoreBreadcrumbComponent.html":{},"components/DatepickerComponent.html":{},"components/DropdownComponent.html":{},"components/EmailComponent.html":{},"components/ErrorContainerComponent.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/FullNameComponent.html":{},"components/GeocoderInputComponent.html":{},"components/HeaderComponent.html":{},"components/NameComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"components/PhnComponent.html":{},"components/PhoneNumberComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"components/RadioComponent.html":{},"components/SampleModalComponent.html":{},"modules/SharedCoreModule.html":{},"components/SinComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"directives/ValidateCityDirective.html":{},"components/WizardProgressBarComponent.html":{},"components/XiconButtonComponent.html":{},"coverage.html":{},"overview.html":{}}}],["validatenamedirective",{"_index":743,"title":{"directives/ValidateNameDirective.html":{}},"body":{"components/AccordionCommonComponent.html":{},"components/ButtonComponent.html":{},"components/ButtonGroupComponent.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"components/ConfirmTemplateComponent.html":{},"components/CoreBreadcrumbComponent.html":{},"components/DatepickerComponent.html":{},"components/DropdownComponent.html":{},"components/EmailComponent.html":{},"components/ErrorContainerComponent.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/FullNameComponent.html":{},"components/GeocoderInputComponent.html":{},"components/HeaderComponent.html":{},"components/NameComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"components/PhnComponent.html":{},"components/PhoneNumberComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"components/RadioComponent.html":{},"components/SampleModalComponent.html":{},"modules/SharedCoreModule.html":{},"components/SinComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"directives/ValidateNameDirective.html":{},"components/WizardProgressBarComponent.html":{},"components/XiconButtonComponent.html":{},"coverage.html":{},"overview.html":{}}}],["validatepc",{"_index":4458,"title":{},"body":{"directives/ValidatePostalcodeDirective.html":{},"coverage.html":{}}}],["validatepc(control",{"_index":4449,"title":{},"body":{"directives/ValidatePostalcodeDirective.html":{}}}],["validatephn",{"_index":3987,"title":{},"body":{"components/PhnComponent.html":{}}}],["validatephnresult",{"_index":4016,"title":{},"body":{"components/PhnComponent.html":{}}}],["validatepostalcodedirective",{"_index":745,"title":{"directives/ValidatePostalcodeDirective.html":{}},"body":{"components/AccordionCommonComponent.html":{},"components/ButtonComponent.html":{},"components/ButtonGroupComponent.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"components/ConfirmTemplateComponent.html":{},"components/CoreBreadcrumbComponent.html":{},"components/DatepickerComponent.html":{},"components/DropdownComponent.html":{},"components/EmailComponent.html":{},"components/ErrorContainerComponent.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/FullNameComponent.html":{},"components/GeocoderInputComponent.html":{},"components/HeaderComponent.html":{},"components/NameComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"components/PhnComponent.html":{},"components/PhoneNumberComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"components/RadioComponent.html":{},"components/SampleModalComponent.html":{},"modules/SharedCoreModule.html":{},"components/SinComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"directives/ValidatePostalcodeDirective.html":{},"components/WizardProgressBarComponent.html":{},"components/XiconButtonComponent.html":{},"coverage.html":{},"overview.html":{}}}],["validateregiondirective",{"_index":747,"title":{"directives/ValidateRegionDirective.html":{}},"body":{"components/AccordionCommonComponent.html":{},"components/ButtonComponent.html":{},"components/ButtonGroupComponent.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"components/ConfirmTemplateComponent.html":{},"components/CoreBreadcrumbComponent.html":{},"components/DatepickerComponent.html":{},"components/DropdownComponent.html":{},"components/EmailComponent.html":{},"components/ErrorContainerComponent.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/FullNameComponent.html":{},"components/GeocoderInputComponent.html":{},"components/HeaderComponent.html":{},"components/NameComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"components/PhnComponent.html":{},"components/PhoneNumberComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"components/RadioComponent.html":{},"components/SampleModalComponent.html":{},"modules/SharedCoreModule.html":{},"components/SinComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"directives/ValidateRegionDirective.html":{},"components/WizardProgressBarComponent.html":{},"components/XiconButtonComponent.html":{},"coverage.html":{},"overview.html":{}}}],["validateresult",{"_index":4381,"title":{},"body":{"components/SinComponent.html":{}}}],["validates",{"_index":4618,"title":{},"body":{"changelog.html":{}}}],["validateself",{"_index":210,"title":{},"body":{"classes/AbstractFormControl.html":{},"components/EmailComponent.html":{},"components/PhnComponent.html":{},"components/PhoneNumberComponent.html":{},"components/SinComponent.html":{}}}],["validatesin",{"_index":4359,"title":{},"body":{"components/SinComponent.html":{}}}],["validatestreetdirective",{"_index":749,"title":{"directives/ValidateStreetDirective.html":{}},"body":{"components/AccordionCommonComponent.html":{},"components/ButtonComponent.html":{},"components/ButtonGroupComponent.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"components/ConfirmTemplateComponent.html":{},"components/CoreBreadcrumbComponent.html":{},"components/DatepickerComponent.html":{},"components/DropdownComponent.html":{},"components/EmailComponent.html":{},"components/ErrorContainerComponent.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/FullNameComponent.html":{},"components/GeocoderInputComponent.html":{},"components/HeaderComponent.html":{},"components/NameComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"components/PhnComponent.html":{},"components/PhoneNumberComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"components/RadioComponent.html":{},"components/SampleModalComponent.html":{},"modules/SharedCoreModule.html":{},"components/SinComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"directives/ValidateStreetDirective.html":{},"components/WizardProgressBarComponent.html":{},"components/XiconButtonComponent.html":{},"coverage.html":{},"overview.html":{}}}],["validating",{"_index":153,"title":{},"body":{"classes/AbstractFormControl.html":{},"components/CityComponent.html":{},"components/EmailComponent.html":{},"components/PhnComponent.html":{},"components/PhoneNumberComponent.html":{},"components/ProvinceComponent.html":{},"components/RadioComponent.html":{},"components/SinComponent.html":{},"changelog.html":{}}}],["validation",{"_index":93,"title":{},"body":{"classes/AbstractForm.html":{},"classes/AbstractReactForm.html":{},"injectables/CaptchaDataService.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"components/PhnComponent.html":{},"components/PhoneNumberComponent.html":{},"injectables/ServerPayload.html":{},"changelog.html":{}}}],["validationerrors",{"_index":149,"title":{},"body":{"classes/AbstractFormControl.html":{},"components/CityComponent.html":{},"components/EmailComponent.html":{},"components/PhnComponent.html":{},"components/PhoneNumberComponent.html":{},"components/ProvinceComponent.html":{},"components/RadioComponent.html":{},"components/SinComponent.html":{},"directives/ValidateBcPostalDirective.html":{},"directives/ValidateCityDirective.html":{},"directives/ValidateNameDirective.html":{},"directives/ValidateRegionDirective.html":{},"directives/ValidateStreetDirective.html":{}}}],["validations",{"_index":3814,"title":{},"body":{"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"changelog.html":{}}}],["validator",{"_index":211,"title":{},"body":{"classes/AbstractFormControl.html":{},"directives/DuplicateCheckDirective.html":{},"directives/ValidateBcPostalDirective.html":{},"directives/ValidateCityDirective.html":{},"directives/ValidateNameDirective.html":{},"directives/ValidatePostalcodeDirective.html":{},"directives/ValidateRegionDirective.html":{},"directives/ValidateStreetDirective.html":{},"changelog.html":{}}}],["validatorfn",{"_index":2546,"title":{},"body":{"directives/DuplicateCheckDirective.html":{},"directives/ValidateBcPostalDirective.html":{},"directives/ValidateCityDirective.html":{},"directives/ValidateNameDirective.html":{},"directives/ValidatePostalcodeDirective.html":{},"directives/ValidateRegionDirective.html":{},"directives/ValidateStreetDirective.html":{}}}],["validators",{"_index":4678,"title":{},"body":{"changelog.html":{}}}],["validing",{"_index":4603,"title":{},"body":{"changelog.html":{}}}],["value",{"_index":36,"title":{},"body":{"classes/AbstractBaseForm.html":{},"classes/AbstractForm.html":{},"classes/AbstractFormControl.html":{},"classes/AbstractHttpService.html":{},"classes/AbstractReactForm.html":{},"classes/AbstractTestPage.html":{},"components/AccordionCommonComponent.html":{},"interfaces/AddrLabelList.html":{},"classes/Address.html":{},"classes/Base.html":{},"components/ButtonComponent.html":{},"components/ButtonGroupComponent.html":{},"injectables/CheckCompleteBaseService.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"classes/CommonImage.html":{},"components/ConfirmTemplateComponent.html":{},"interfaces/CountryList.html":{},"components/DatepickerComponent.html":{},"injectables/DefaultPageGuardService.html":{},"components/DropdownComponent.html":{},"components/EmailComponent.html":{},"components/ErrorContainerComponent.html":{},"interfaces/ErrorMessage.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/FullNameComponent.html":{},"interfaces/FullNameErrorMsg.html":{},"components/GeocoderInputComponent.html":{},"injectables/GeocoderService.html":{},"components/HeaderComponent.html":{},"interfaces/IRadioItems.html":{},"interfaces/Maxlengths.html":{},"components/NameComponent.html":{},"components/PageFrameworkComponent.html":{},"interfaces/PageList.html":{},"interfaces/PageListInterface.html":{},"components/PageSectionComponent.html":{},"injectables/PageStateService.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"classes/Person.html":{},"components/PhnComponent.html":{},"components/PhoneNumberComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{},"components/RadioComponent.html":{},"interfaces/ReadOnlyFields.html":{},"components/SampleModalComponent.html":{},"components/SinComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"directives/ValidatePostalcodeDirective.html":{},"components/WizardProgressBarComponent.html":{},"changelog.html":{},"miscellaneous/enumerations.html":{}}}],["valuechange",{"_index":1328,"title":{},"body":{"components/CityComponent.html":{},"interfaces/CountryList.html":{},"components/EmailComponent.html":{},"interfaces/IRadioItems.html":{},"components/NameComponent.html":{},"components/PhnComponent.html":{},"components/PhoneNumberComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{},"components/RadioComponent.html":{},"components/SinComponent.html":{}}}],["valuemax=\"100",{"_index":3919,"title":{},"body":{"components/PasswordComponent.html":{}}}],["valuemin=\"0",{"_index":3918,"title":{},"body":{"components/PasswordComponent.html":{}}}],["valuenow]=\"strengthpercentage",{"_index":3916,"title":{},"body":{"components/PasswordComponent.html":{}}}],["values",{"_index":905,"title":{},"body":{"interfaces/AddrLabelList.html":{},"interfaces/CommonLogMessage.html":{},"components/GeocoderInputComponent.html":{},"interfaces/IRadioItems.html":{},"interfaces/Maxlengths.html":{},"components/RadioComponent.html":{},"interfaces/ReadOnlyFields.html":{},"changelog.html":{}}}],["vanuatu",{"_index":2271,"title":{},"body":{"interfaces/CountryList.html":{}}}],["var",{"_index":654,"title":{},"body":{"components/AccordionCommonComponent.html":{},"components/ButtonComponent.html":{},"components/ButtonGroupComponent.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"components/ConfirmTemplateComponent.html":{},"components/CoreBreadcrumbComponent.html":{},"components/DatepickerComponent.html":{},"components/DropdownComponent.html":{},"components/EmailComponent.html":{},"components/ErrorContainerComponent.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/FullNameComponent.html":{},"components/GeocoderInputComponent.html":{},"components/HeaderComponent.html":{},"components/NameComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"components/PhnComponent.html":{},"components/PhoneNumberComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"components/RadioComponent.html":{},"components/SampleModalComponent.html":{},"components/SinComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{},"components/XiconButtonComponent.html":{}}}],["variable",{"_index":897,"title":{},"body":{"interfaces/AddrLabelList.html":{},"interfaces/Maxlengths.html":{},"components/PhoneNumberComponent.html":{},"interfaces/ReadOnlyFields.html":{},"coverage.html":{}}}],["variablescss",{"_index":5254,"title":{},"body":{"coverage.html":{}}}],["vat",{"_index":1958,"title":{},"body":{"interfaces/CountryList.html":{}}}],["vatican",{"_index":1960,"title":{},"body":{"interfaces/CountryList.html":{}}}],["vct",{"_index":2161,"title":{},"body":{"interfaces/CountryList.html":{}}}],["ven",{"_index":2272,"title":{},"body":{"interfaces/CountryList.html":{}}}],["venezuela",{"_index":2273,"title":{},"body":{"interfaces/CountryList.html":{}}}],["verde",{"_index":1836,"title":{},"body":{"interfaces/CountryList.html":{}}}],["verify/captcha",{"_index":1165,"title":{},"body":{"injectables/CaptchaDataService.html":{},"injectables/ServerPayload.html":{}}}],["verifycaptcha",{"_index":1140,"title":{},"body":{"injectables/CaptchaDataService.html":{}}}],["verifycaptcha(apibaseurl",{"_index":1150,"title":{},"body":{"injectables/CaptchaDataService.html":{},"injectables/ServerPayload.html":{}}}],["verifying_answer",{"_index":5310,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["version",{"_index":2333,"title":{},"body":{"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"components/PageFrameworkComponent.html":{},"changelog.html":{},"license.html":{},"todo.html":{},"additional-documentation/local-development/schematics.html":{}}}],["versionjs",{"_index":5276,"title":{},"body":{"coverage.html":{}}}],["versions",{"_index":4716,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["vertical",{"_index":3486,"title":{},"body":{"interfaces/IRadioItems.html":{},"components/RadioComponent.html":{},"changelog.html":{}}}],["very",{"_index":4489,"title":{},"body":{"components/WizardProgressBarComponent.html":{},"index.html":{}}}],["vgb",{"_index":2277,"title":{},"body":{"interfaces/CountryList.html":{}}}],["via",{"_index":561,"title":{},"body":{"classes/AbstractTestPage.html":{},"interfaces/AddrLabelList.html":{},"interfaces/CommonLogMessage.html":{},"interfaces/FileUploaderMsg.html":{},"interfaces/ISpaEnvResponse.html":{},"interfaces/Maxlengths.html":{},"interfaces/ReadOnlyFields.html":{},"changelog.html":{},"additional-documentation/getting-started.html":{}}}],["viet",{"_index":2276,"title":{},"body":{"interfaces/CountryList.html":{}}}],["view",{"_index":4488,"title":{},"body":{"components/WizardProgressBarComponent.html":{},"additional-documentation/getting-started.html":{}}}],["viewchild",{"_index":72,"title":{},"body":{"classes/AbstractBaseForm.html":{},"classes/AbstractForm.html":{},"components/AccordionCommonComponent.html":{},"components/ButtonComponent.html":{},"components/ButtonGroupComponent.html":{},"components/CheckboxComponent.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"interfaces/FileUploaderMsg.html":{},"components/FullNameComponent.html":{},"interfaces/FullNameErrorMsg.html":{},"interfaces/ISpaEnvResponse.html":{},"interfaces/SampleImageInterface.html":{},"components/SampleModalComponent.html":{},"components/ThumbnailComponent.html":{},"components/WizardProgressBarComponent.html":{}}}],["viewchild('browsefileref",{"_index":2673,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["viewchild('button",{"_index":1093,"title":{},"body":{"components/ButtonComponent.html":{}}}],["viewchild('buttongroup",{"_index":1128,"title":{},"body":{"components/ButtonGroupComponent.html":{}}}],["viewchild('canvas",{"_index":2688,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["viewchild('capturefileref",{"_index":2675,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["viewchild('checkbox",{"_index":1308,"title":{},"body":{"components/CheckboxComponent.html":{}}}],["viewchild('consentmodal",{"_index":3571,"title":{},"body":{"interfaces/ISpaEnvResponse.html":{}}}],["viewchild('dp",{"_index":2367,"title":{},"body":{"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{}}}],["viewchild('dropzone",{"_index":2671,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["viewchild('formref",{"_index":90,"title":{},"body":{"classes/AbstractForm.html":{}}}],["viewchild('fullsizeviewmodal",{"_index":3586,"title":{},"body":{"interfaces/ISpaEnvResponse.html":{},"components/ThumbnailComponent.html":{}}}],["viewchild('imageplaceholderref",{"_index":2677,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["viewchild('samplesmodal",{"_index":4245,"title":{},"body":{"interfaces/SampleImageInterface.html":{},"components/SampleModalComponent.html":{}}}],["viewchild('selectfilelabel",{"_index":2679,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["viewchild('stepcontainer",{"_index":4494,"title":{},"body":{"components/WizardProgressBarComponent.html":{}}}],["viewchildren",{"_index":4499,"title":{},"body":{"components/WizardProgressBarComponent.html":{}}}],["viewchildren('steps",{"_index":4497,"title":{},"body":{"components/WizardProgressBarComponent.html":{}}}],["viewcontainerref",{"_index":4392,"title":{},"body":{"components/ThumbnailComponent.html":{}}}],["viewencapsulation",{"_index":2619,"title":{},"body":{"interfaces/FileUploaderMsg.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/ThumbnailComponent.html":{}}}],["viewencapsulation.none",{"_index":2668,"title":{},"body":{"interfaces/FileUploaderMsg.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/ThumbnailComponent.html":{}}}],["viewproviders",{"_index":794,"title":{},"body":{"interfaces/AddrLabelList.html":{},"components/ButtonComponent.html":{},"components/ButtonGroupComponent.html":{},"components/CheckboxComponent.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"interfaces/FileUploaderMsg.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"interfaces/ISpaEnvResponse.html":{},"interfaces/Maxlengths.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"interfaces/ReadOnlyFields.html":{},"additional-documentation/local-development/schematics.html":{}}}],["vincent",{"_index":2162,"title":{},"body":{"interfaces/CountryList.html":{}}}],["vir",{"_index":2279,"title":{},"body":{"interfaces/CountryList.html":{}}}],["virgin",{"_index":2278,"title":{},"body":{"interfaces/CountryList.html":{}}}],["visibility",{"_index":2353,"title":{},"body":{"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{}}}],["visible",{"_index":852,"title":{},"body":{"interfaces/AddrLabelList.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"interfaces/Maxlengths.html":{},"interfaces/ReadOnlyFields.html":{},"changelog.html":{}}}],["vitae",{"_index":1422,"title":{},"body":{"components/CityComponent.html":{},"interfaces/CountryList.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"interfaces/FileUploaderMsg.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{}}}],["vnm",{"_index":2275,"title":{},"body":{"interfaces/CountryList.html":{}}}],["void",{"_index":58,"title":{},"body":{"classes/AbstractBaseForm.html":{},"classes/AbstractForm.html":{},"classes/AbstractFormControl.html":{},"classes/AbstractReactForm.html":{},"classes/AbstractTestPage.html":{},"components/AccordionCommonComponent.html":{},"interfaces/AddrLabelList.html":{},"classes/Address.html":{},"components/ButtonComponent.html":{},"components/ButtonGroupComponent.html":{},"injectables/CheckCompleteBaseService.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"classes/Container.html":{},"components/CoreBreadcrumbComponent.html":{},"interfaces/CountryList.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"injectables/DefaultPageGuardService.html":{},"components/DropdownComponent.html":{},"components/EmailComponent.html":{},"interfaces/FileUploaderMsg.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/FullNameComponent.html":{},"interfaces/FullNameErrorMsg.html":{},"components/GeocoderInputComponent.html":{},"components/HeaderComponent.html":{},"interfaces/IRadioItems.html":{},"interfaces/ISpaEnvResponse.html":{},"interfaces/Maxlengths.html":{},"components/NameComponent.html":{},"components/PageFrameworkComponent.html":{},"interfaces/PageListInterface.html":{},"components/PageSectionComponent.html":{},"injectables/PageStateService.html":{},"components/PasswordComponent.html":{},"classes/Person.html":{},"components/PhnComponent.html":{},"components/PhoneNumberComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{},"components/RadioComponent.html":{},"interfaces/ReadOnlyFields.html":{},"interfaces/SampleImageInterface.html":{},"components/SampleModalComponent.html":{},"components/SinComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{},"interfaces/WizardProgressItem.html":{},"components/XiconButtonComponent.html":{}}}],["voluptatem",{"_index":1398,"title":{},"body":{"components/CityComponent.html":{},"interfaces/CountryList.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"interfaces/FileUploaderMsg.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{}}}],["voluptates",{"_index":1443,"title":{},"body":{"components/CityComponent.html":{},"interfaces/CountryList.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"interfaces/FileUploaderMsg.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{}}}],["voluptatibus",{"_index":1412,"title":{},"body":{"components/CityComponent.html":{},"interfaces/CountryList.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"interfaces/FileUploaderMsg.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{}}}],["voluptatum",{"_index":1416,"title":{},"body":{"components/CityComponent.html":{},"interfaces/CountryList.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"interfaces/FileUploaderMsg.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{}}}],["vs",{"_index":5389,"title":{},"body":{"additional-documentation/getting-started.html":{}}}],["vut",{"_index":2270,"title":{},"body":{"interfaces/CountryList.html":{}}}],["vv]\\\\d[abceghj",{"_index":992,"title":{},"body":{"classes/Address.html":{}}}],["w",{"_index":5418,"title":{},"body":{"additional-documentation/local-development/schematics.html":{}}}],["wait",{"_index":2764,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["walk",{"_index":4035,"title":{},"body":{"components/PhnComponent.html":{},"components/SinComponent.html":{}}}],["wallis",{"_index":2282,"title":{},"body":{"interfaces/CountryList.html":{}}}],["want",{"_index":567,"title":{},"body":{"classes/AbstractTestPage.html":{},"interfaces/CommonLogMessage.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{}}}],["warning",{"_index":1686,"title":{},"body":{"components/ConfirmTemplateComponent.html":{},"components/PasswordComponent.html":{},"miscellaneous/enumerations.html":{}}}],["warningcode",{"_index":1676,"title":{},"body":{"components/ConfirmTemplateComponent.html":{}}}],["warnings",{"_index":5359,"title":{},"body":{"todo.html":{}}}],["warranties",{"_index":5346,"title":{},"body":{"license.html":{}}}],["watch",{"_index":5453,"title":{},"body":{"additional-documentation/local-development/schematics.html":{}}}],["watches",{"_index":5419,"title":{},"body":{"additional-documentation/local-development/schematics.html":{}}}],["way",{"_index":1011,"title":{},"body":{"classes/Address.html":{},"interfaces/CommonLogMessage.html":{},"additional-documentation/getting-started.html":{}}}],["waze",{"_index":4885,"title":{},"body":{"changelog.html":{}}}],["we'll",{"_index":2433,"title":{},"body":{"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{}}}],["we're",{"_index":4534,"title":{},"body":{"components/WizardProgressBarComponent.html":{}}}],["we've",{"_index":4522,"title":{},"body":{"components/WizardProgressBarComponent.html":{}}}],["web",{"_index":3541,"title":{},"body":{"interfaces/ISpaEnvResponse.html":{},"changelog.html":{},"additional-documentation/local-development/components.html":{}}}],["webelement",{"_index":439,"title":{},"body":{"classes/AbstractTestPage.html":{}}}],["weight",{"_index":4038,"title":{},"body":{"components/PhnComponent.html":{}}}],["weights",{"_index":4020,"title":{},"body":{"components/PhnComponent.html":{},"components/SinComponent.html":{}}}],["weights[i",{"_index":4040,"title":{},"body":{"components/PhnComponent.html":{}}}],["well",{"_index":3386,"title":{},"body":{"components/GeocoderInputComponent.html":{},"additional-documentation/local-development/components.html":{}}}],["western",{"_index":2285,"title":{},"body":{"interfaces/CountryList.html":{}}}],["wfactor",{"_index":1527,"title":{},"body":{"interfaces/CommonAttachmentJson.html":{},"classes/CommonImage.html":{},"classes/CommonImageProcessingError.html":{},"interfaces/CommonImageScaleFactors.html":{},"classes/CommonImageScaleFactorsImpl.html":{}}}],["whatever",{"_index":351,"title":{},"body":{"injectables/AbstractPageGuardService.html":{},"injectables/AbstractPgCheckService.html":{}}}],["whether",{"_index":1227,"title":{},"body":{"injectables/CheckCompleteBaseService.html":{},"guards/LoadPageGuardService.html":{},"interfaces/PageListInterface.html":{},"guards/RouteGuardService.html":{},"directives/ValidateBcPostalDirective.html":{}}}],["whole",{"_index":5478,"title":{},"body":{"additional-documentation/local-development/components.html":{}}}],["wide",{"_index":1572,"title":{},"body":{"interfaces/CommonLogMessage.html":{}}}],["width",{"_index":2770,"title":{},"body":{"interfaces/FileUploaderMsg.html":{},"components/FormSubmitBarComponent.html":{},"components/ThumbnailComponent.html":{},"changelog.html":{}}}],["width/height",{"_index":2394,"title":{},"body":{"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{}}}],["widthfactor",{"_index":1520,"title":{},"body":{"interfaces/CommonAttachmentJson.html":{},"classes/CommonImage.html":{},"classes/CommonImageProcessingError.html":{},"interfaces/CommonImageScaleFactors.html":{},"classes/CommonImageScaleFactorsImpl.html":{}}}],["widthoption",{"_index":4963,"title":{},"body":{"changelog.html":{}}}],["widthoptions",{"_index":4905,"title":{},"body":{"changelog.html":{}}}],["window",{"_index":3579,"title":{},"body":{"interfaces/ISpaEnvResponse.html":{}}}],["window.location.hostname",{"_index":1577,"title":{},"body":{"interfaces/CommonLogMessage.html":{}}}],["window.location.href",{"_index":3479,"title":{},"body":{"components/HeaderComponent.html":{}}}],["window.location.href.indexof(this.skip_content_hash",{"_index":3478,"title":{},"body":{"components/HeaderComponent.html":{}}}],["window.location.origin}/${this.urlbasename",{"_index":3480,"title":{},"body":{"components/HeaderComponent.html":{}}}],["window.outerwidth",{"_index":4541,"title":{},"body":{"components/WizardProgressBarComponent.html":{}}}],["winds",{"_index":2411,"title":{},"body":{"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{}}}],["wip",{"_index":4943,"title":{},"body":{"changelog.html":{}}}],["wish",{"_index":3591,"title":{},"body":{"interfaces/ISpaEnvResponse.html":{},"additional-documentation/local-development/schematics.html":{}}}],["within",{"_index":513,"title":{},"body":{"classes/AbstractTestPage.html":{},"interfaces/FileUploaderMsg.html":{},"guards/LoadPageGuardService.html":{},"changelog.html":{},"additional-documentation/local-development/components.html":{}}}],["without",{"_index":3403,"title":{},"body":{"components/GeocoderInputComponent.html":{},"components/XiconButtonComponent.html":{},"license.html":{}}}],["wizard",{"_index":730,"title":{},"body":{"components/AccordionCommonComponent.html":{},"components/ButtonComponent.html":{},"components/ButtonGroupComponent.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"components/ConfirmTemplateComponent.html":{},"classes/Container.html":{},"components/CoreBreadcrumbComponent.html":{},"components/DatepickerComponent.html":{},"components/DropdownComponent.html":{},"components/EmailComponent.html":{},"components/ErrorContainerComponent.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/FullNameComponent.html":{},"components/GeocoderInputComponent.html":{},"components/HeaderComponent.html":{},"components/NameComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"components/PhnComponent.html":{},"components/PhoneNumberComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"components/RadioComponent.html":{},"components/SampleModalComponent.html":{},"components/SinComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{},"interfaces/WizardProgressItem.html":{},"components/XiconButtonComponent.html":{}}}],["wizardprogressbar",{"_index":5449,"title":{},"body":{"additional-documentation/local-development/schematics.html":{}}}],["wizardprogressbarcomponent",{"_index":729,"title":{"components/WizardProgressBarComponent.html":{}},"body":{"components/AccordionCommonComponent.html":{},"components/ButtonComponent.html":{},"components/ButtonGroupComponent.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"components/ConfirmTemplateComponent.html":{},"components/CoreBreadcrumbComponent.html":{},"components/DatepickerComponent.html":{},"components/DropdownComponent.html":{},"components/EmailComponent.html":{},"components/ErrorContainerComponent.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/FullNameComponent.html":{},"components/GeocoderInputComponent.html":{},"components/HeaderComponent.html":{},"components/NameComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"components/PhnComponent.html":{},"components/PhoneNumberComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"components/RadioComponent.html":{},"components/SampleModalComponent.html":{},"modules/SharedCoreModule.html":{},"components/SinComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{},"components/XiconButtonComponent.html":{},"coverage.html":{},"overview.html":{}}}],["wizardprogressitem",{"_index":1698,"title":{"interfaces/WizardProgressItem.html":{}},"body":{"classes/Container.html":{},"components/WizardProgressBarComponent.html":{},"interfaces/WizardProgressItem.html":{},"changelog.html":{},"coverage.html":{}}}],["wlf",{"_index":2281,"title":{},"body":{"interfaces/CountryList.html":{}}}],["won't",{"_index":1656,"title":{},"body":{"interfaces/CommonLogMessage.html":{},"components/WizardProgressBarComponent.html":{}}}],["work",{"_index":528,"title":{},"body":{"classes/AbstractTestPage.html":{},"injectables/CheckCompleteBaseService.html":{},"components/EmailComponent.html":{},"interfaces/FileUploaderMsg.html":{},"components/HeaderComponent.html":{},"components/NameComponent.html":{},"interfaces/PageListInterface.html":{},"changelog.html":{}}}],["workaround",{"_index":2698,"title":{},"body":{"interfaces/FileUploaderMsg.html":{},"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{}}}],["worker",{"_index":4699,"title":{},"body":{"changelog.html":{}}}],["working",{"_index":2703,"title":{},"body":{"interfaces/FileUploaderMsg.html":{},"changelog.html":{},"additional-documentation/getting-started.html":{}}}],["works",{"_index":551,"title":{},"body":{"classes/AbstractTestPage.html":{},"components/CoreBreadcrumbComponent.html":{},"directives/DuplicateCheckDirective.html":{},"interfaces/FileUploaderMsg.html":{},"components/FormSubmitBarComponent.html":{},"interfaces/GeoAddressResult.html":{},"injectables/GeocoderService.html":{},"changelog.html":{}}}],["wrap",{"_index":3792,"title":{},"body":{"components/PageSectionComponent.html":{}}}],["wrapped",{"_index":2369,"title":{},"body":{"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{}}}],["wrapper",{"_index":2329,"title":{},"body":{"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"components/HeaderComponent.html":{}}}],["wrapper/row",{"_index":3785,"title":{},"body":{"components/PageSectionComponent.html":{}}}],["wraps",{"_index":4741,"title":{},"body":{"changelog.html":{}}}],["write",{"_index":5412,"title":{},"body":{"additional-documentation/local-development/schematics.html":{},"additional-documentation/local-development/components.html":{}}}],["writevalue",{"_index":128,"title":{},"body":{"classes/AbstractFormControl.html":{},"interfaces/AddrLabelList.html":{},"components/ButtonGroupComponent.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"interfaces/CountryList.html":{},"components/DatepickerComponent.html":{},"components/DropdownComponent.html":{},"components/EmailComponent.html":{},"components/FullNameComponent.html":{},"components/GeocoderInputComponent.html":{},"interfaces/Maxlengths.html":{},"components/NameComponent.html":{},"components/PhnComponent.html":{},"components/PhoneNumberComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{},"components/RadioComponent.html":{},"interfaces/ReadOnlyFields.html":{},"components/SinComponent.html":{}}}],["writevalue(obj",{"_index":2436,"title":{},"body":{"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{}}}],["writevalue(value",{"_index":161,"title":{},"body":{"classes/AbstractFormControl.html":{},"components/ButtonGroupComponent.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"components/DropdownComponent.html":{},"components/EmailComponent.html":{},"components/FullNameComponent.html":{},"interfaces/FullNameErrorMsg.html":{},"components/GeocoderInputComponent.html":{},"interfaces/IRadioItems.html":{},"interfaces/ISpaEnvResponse.html":{},"components/NameComponent.html":{},"components/PhnComponent.html":{},"components/PhoneNumberComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"components/RadioComponent.html":{},"components/SinComponent.html":{}}}],["writing",{"_index":5342,"title":{},"body":{"license.html":{},"additional-documentation/local-development/schematics.html":{}}}],["wrong",{"_index":2777,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["wrongtype",{"_index":1465,"title":{},"body":{"interfaces/CommonAttachmentJson.html":{},"classes/CommonImage.html":{},"classes/CommonImageProcessingError.html":{},"interfaces/CommonImageScaleFactors.html":{},"classes/CommonImageScaleFactorsImpl.html":{},"miscellaneous/enumerations.html":{}}}],["wsm",{"_index":2164,"title":{},"body":{"interfaces/CountryList.html":{}}}],["x",{"_index":202,"title":{},"body":{"classes/AbstractFormControl.html":{},"classes/AbstractReactForm.html":{},"interfaces/AddrLabelList.html":{},"injectables/CheckCompleteBaseService.html":{},"classes/Container.html":{},"interfaces/CountryList.html":{},"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"directives/DuplicateCheckDirective.html":{},"interfaces/FileUploaderMsg.html":{},"interfaces/Maxlengths.html":{},"interfaces/PageList.html":{},"interfaces/PageListInterface.html":{},"injectables/PageStateService.html":{},"components/PostalCodeComponent.html":{},"interfaces/ReadOnlyFields.html":{},"interfaces/WizardProgressItem.html":{},"changelog.html":{}}}],["x.getdate",{"_index":2385,"title":{},"body":{"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{}}}],["x.iscomplete",{"_index":1276,"title":{},"body":{"injectables/CheckCompleteBaseService.html":{},"interfaces/PageList.html":{},"interfaces/PageListInterface.html":{},"injectables/PageStateService.html":{}}}],["x.markastouched",{"_index":399,"title":{},"body":{"classes/AbstractReactForm.html":{}}}],["x.path",{"_index":3757,"title":{},"body":{"interfaces/PageList.html":{},"injectables/PageStateService.html":{}}}],["x.route",{"_index":1280,"title":{},"body":{"injectables/CheckCompleteBaseService.html":{},"interfaces/PageListInterface.html":{}}}],["x.slice(1)).join",{"_index":1713,"title":{},"body":{"classes/Container.html":{},"interfaces/WizardProgressItem.html":{}}}],["x.uuid",{"_index":3124,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["x[0].touppercase",{"_index":1712,"title":{},"body":{"classes/Container.html":{},"interfaces/WizardProgressItem.html":{}}}],["xicon",{"_index":733,"title":{},"body":{"components/AccordionCommonComponent.html":{},"components/ButtonComponent.html":{},"components/ButtonGroupComponent.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"components/ConfirmTemplateComponent.html":{},"components/CoreBreadcrumbComponent.html":{},"components/DatepickerComponent.html":{},"components/DropdownComponent.html":{},"components/EmailComponent.html":{},"components/ErrorContainerComponent.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/FullNameComponent.html":{},"components/GeocoderInputComponent.html":{},"components/HeaderComponent.html":{},"components/NameComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"components/PhnComponent.html":{},"components/PhoneNumberComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"components/RadioComponent.html":{},"components/SampleModalComponent.html":{},"components/SinComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{},"components/XiconButtonComponent.html":{},"todo.html":{}}}],["xiconbutton",{"_index":4850,"title":{},"body":{"changelog.html":{}}}],["xiconbuttoncomponent",{"_index":732,"title":{"components/XiconButtonComponent.html":{}},"body":{"components/AccordionCommonComponent.html":{},"components/ButtonComponent.html":{},"components/ButtonGroupComponent.html":{},"components/CheckboxComponent.html":{},"components/CityComponent.html":{},"components/ConfirmTemplateComponent.html":{},"components/CoreBreadcrumbComponent.html":{},"components/DatepickerComponent.html":{},"components/DropdownComponent.html":{},"components/EmailComponent.html":{},"components/ErrorContainerComponent.html":{},"components/FormActionBarComponent.html":{},"components/FormSubmitBarComponent.html":{},"components/FullNameComponent.html":{},"components/GeocoderInputComponent.html":{},"components/HeaderComponent.html":{},"components/NameComponent.html":{},"components/PageFrameworkComponent.html":{},"components/PageSectionComponent.html":{},"components/PasswordComponent.html":{},"components/PhnComponent.html":{},"components/PhoneNumberComponent.html":{},"components/PostalCodeComponent.html":{},"components/ProvinceComponent.html":{},"components/RadioComponent.html":{},"components/SampleModalComponent.html":{},"modules/SharedCoreModule.html":{},"components/SinComponent.html":{},"components/ThumbnailComponent.html":{},"components/ToggleComponent.html":{},"components/WizardProgressBarComponent.html":{},"components/XiconButtonComponent.html":{},"changelog.html":{},"coverage.html":{},"overview.html":{}}}],["xiff",{"_index":2773,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["year",{"_index":2372,"title":{},"body":{"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"interfaces/SimpleDate.html":{},"changelog.html":{},"coverage.html":{}}}],["yeardistantfuture",{"_index":2313,"title":{},"body":{"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{}}}],["yeardistantpast",{"_index":2312,"title":{},"body":{"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{}}}],["yellow",{"_index":5361,"title":{},"body":{"todo.html":{}}}],["yem",{"_index":2287,"title":{},"body":{"interfaces/CountryList.html":{}}}],["yemen",{"_index":2288,"title":{},"body":{"interfaces/CountryList.html":{}}}],["yes",{"_index":70,"title":{},"body":{"classes/AbstractBaseForm.html":{},"classes/AbstractForm.html":{},"classes/AbstractHttpService.html":{},"classes/AbstractReactForm.html":{},"injectables/CaptchaDataService.html":{},"classes/CommonImage.html":{},"classes/CommonImageProcessingError.html":{},"injectables/GeocoderService.html":{},"interfaces/IRadioItems.html":{},"classes/MoHCommonLibraryError.html":{},"injectables/PageStateService.html":{},"components/RadioComponent.html":{}}}],["yes/no",{"_index":1102,"title":{},"body":{"components/ButtonGroupComponent.html":{},"changelog.html":{}}}],["yib",{"_index":2994,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["you'll",{"_index":5429,"title":{},"body":{"additional-documentation/local-development/schematics.html":{}}}],["you're",{"_index":1057,"title":{},"body":{"components/ButtonComponent.html":{},"components/ButtonGroupComponent.html":{},"index.html":{},"additional-documentation/local-development/components.html":{}}}],["you've",{"_index":5379,"title":{},"body":{"additional-documentation/getting-started.html":{},"additional-documentation/local-development/components.html":{}}}],["young",{"_index":5323,"title":{},"body":{"index.html":{}}}],["yt",{"_index":4206,"title":{},"body":{"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{}}}],["yugoslav",{"_index":2032,"title":{},"body":{"interfaces/CountryList.html":{}}}],["yukon",{"_index":4207,"title":{},"body":{"components/ProvinceComponent.html":{},"interfaces/ProvinceList.html":{}}}],["yyyy/mm/dd",{"_index":2363,"title":{},"body":{"interfaces/DateErrorMsg.html":{},"components/DatepickerComponent.html":{},"classes/Person.html":{}}}],["yyyymmdd",{"_index":3931,"title":{},"body":{"classes/Person.html":{}}}],["z",{"_index":995,"title":{},"body":{"classes/Address.html":{},"components/FullNameComponent.html":{},"interfaces/FullNameErrorMsg.html":{},"directives/ValidateBcPostalDirective.html":{},"directives/ValidateNameDirective.html":{},"directives/ValidatePostalcodeDirective.html":{},"directives/ValidateRegionDirective.html":{}}}],["z0",{"_index":4438,"title":{},"body":{"directives/ValidateCityDirective.html":{},"directives/ValidatePostalcodeDirective.html":{},"directives/ValidateStreetDirective.html":{}}}],["z])[a",{"_index":4437,"title":{},"body":{"directives/ValidateCityDirective.html":{},"directives/ValidateRegionDirective.html":{}}}],["z][0",{"_index":4451,"title":{},"body":{"directives/ValidatePostalcodeDirective.html":{}}}],["z][a",{"_index":3224,"title":{},"body":{"components/FullNameComponent.html":{},"interfaces/FullNameErrorMsg.html":{},"directives/ValidateNameDirective.html":{}}}],["z]\\\\d",{"_index":997,"title":{},"body":{"classes/Address.html":{},"directives/ValidateBcPostalDirective.html":{},"directives/ValidatePostalcodeDirective.html":{}}}],["z]\\s?[0",{"_index":4453,"title":{},"body":{"directives/ValidatePostalcodeDirective.html":{}}}],["za",{"_index":3223,"title":{},"body":{"components/FullNameComponent.html":{},"interfaces/FullNameErrorMsg.html":{},"directives/ValidateCityDirective.html":{},"directives/ValidateNameDirective.html":{},"directives/ValidatePostalcodeDirective.html":{},"directives/ValidateRegionDirective.html":{},"directives/ValidateStreetDirective.html":{}}}],["zabceghj",{"_index":994,"title":{},"body":{"classes/Address.html":{},"directives/ValidateBcPostalDirective.html":{}}}],["zaf",{"_index":2197,"title":{},"body":{"interfaces/CountryList.html":{}}}],["zambia",{"_index":2290,"title":{},"body":{"interfaces/CountryList.html":{}}}],["zealand",{"_index":2088,"title":{},"body":{"interfaces/CountryList.html":{}}}],["zero",{"_index":2927,"title":{},"body":{"interfaces/FileUploaderMsg.html":{},"changelog.html":{}}}],["zeros",{"_index":4026,"title":{},"body":{"components/PhnComponent.html":{},"components/SinComponent.html":{},"changelog.html":{}}}],["zib",{"_index":2993,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["zimbabwe",{"_index":2292,"title":{},"body":{"interfaces/CountryList.html":{}}}],["zip",{"_index":834,"title":{},"body":{"interfaces/AddrLabelList.html":{},"interfaces/Maxlengths.html":{},"interfaces/ReadOnlyFields.html":{}}}],["zmb",{"_index":2289,"title":{},"body":{"interfaces/CountryList.html":{}}}],["zone",{"_index":2693,"title":{},"body":{"interfaces/FileUploaderMsg.html":{}}}],["zone.js",{"_index":5295,"title":{},"body":{"dependencies.html":{}}}],["zoom",{"_index":1178,"title":{},"body":{"modules/CaptchaModule.html":{},"modules/SharedCoreModule.html":{},"overview.html":{}}}],["zwe",{"_index":2291,"title":{},"body":{"interfaces/CountryList.html":{}}}],["zxcvbn",{"_index":3877,"title":{},"body":{"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{},"coverage.html":{}}}],["zxcvbn_",{"_index":3876,"title":{},"body":{"components/PasswordComponent.html":{},"interfaces/PasswordErrorMsg.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"classes/AbstractBaseForm.html":{"url":"classes/AbstractBaseForm.html","title":"class - AbstractBaseForm","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  AbstractBaseForm\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/common/lib/models/abstract-base-form.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                disabled\n                            \n                            \n                                loading\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Abstract\n                                canContinue\n                            \n                            \n                                    Abstract\n                                continue\n                            \n                            \n                                    Protected\n                                navigate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(router: Router)\n                    \n                \n                        \n                            \n                                Defined in projects/common/lib/models/abstract-base-form.ts:14\n                            \n                        \n\n                \n                    \n                            Constructor\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            disabled\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/common/lib/models/abstract-base-form.ts:8\n                            \n                        \n\n                \n                    \n                        Disables all inputs (todo: not implemented) \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            loading\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in projects/common/lib/models/abstract-base-form.ts:10\n                            \n                        \n\n                \n                    \n                        Show or hide the loading spinner as required, should be passed to form action bar. \n\n                    \n                \n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Abstract\n                            canContinue\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    canContinue()\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/models/abstract-base-form.ts:14\n                \n            \n\n\n            \n                \n                    Determines if the Continue button is disabled on the form action bar \n\n\n                    \n                        Returns :         boolean\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Abstract\n                            continue\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    continue()\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/models/abstract-base-form.ts:12\n                \n            \n\n\n            \n                \n                    What happens when the user clicks the continue button. Generally navigating to another page. \n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            navigate\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    navigate(url: string, queryParams?: Params)\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/models/abstract-base-form.ts:24\n                \n            \n\n\n            \n                \n                    Navigates to a route then automatically scrolls to the top of the page. \n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    url\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    queryParams\n                                    \n                                                Params\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { ViewChild } from '@angular/core';\nimport { NgForm } from '@angular/forms';\nimport { Router, Params } from '@angular/router';\n\nexport abstract class AbstractBaseForm {\n\n  /** Disables all inputs (todo: not implemented) */\n  disabled: boolean;\n  /** Show or hide the loading spinner as required, should be passed to form action bar. */\n  loading: boolean = false;\n  /** What happens when the user clicks the continue button. Generally navigating to another page. */\n  abstract continue(): void;\n  /** Determines if the Continue button is disabled on the form action bar */\n  abstract canContinue(): boolean;\n\n  /**\n   * Constructor\n   */\n  constructor(protected router: Router) {\n    this.router = router;\n  }\n\n  /** Navigates to a route then automatically scrolls to the top of the page. */\n  protected navigate(url: string, queryParams?: Params ) {\n\n    this.router.navigate([url], { queryParams: queryParams })\n      .then((data) => {\n        scrollTo();\n      });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/AbstractForm.html":{"url":"classes/AbstractForm.html","title":"class - AbstractForm","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  AbstractForm\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/common/lib/models/abstract-form.ts\n        \n\n\n            \n                Extends\n            \n            \n                        AbstractBaseForm\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                form\n                            \n                            \n                                disabled\n                            \n                            \n                                loading\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                canContinue\n                            \n                            \n                                    Protected\n                                markAllInputsTouched\n                            \n                            \n                                    Abstract\n                                canContinue\n                            \n                            \n                                    Abstract\n                                continue\n                            \n                            \n                                    Protected\n                                navigate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(router: Router)\n                    \n                \n                        \n                            \n                                Defined in projects/common/lib/models/abstract-form.ts:8\n                            \n                        \n\n                \n                    \n                            Constructor\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            form\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         NgForm\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ViewChild('formRef')\n                            \n                        \n                    \n                        \n                            \n                                    Defined in projects/common/lib/models/abstract-form.ts:8\n                            \n                        \n\n                \n                    \n                        Access to the form elements for validation \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            disabled\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                            \n                                \n                                    Inherited from         AbstractBaseForm\n\n                                \n                            \n                        \n                            \n                                    Defined in         AbstractBaseForm:8\n\n                            \n                        \n\n                \n                    \n                        Disables all inputs (todo: not implemented) \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            loading\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                    \n                        \n                            Default value : false\n                        \n                    \n                            \n                                \n                                    Inherited from         AbstractBaseForm\n\n                                \n                            \n                        \n                            \n                                    Defined in         AbstractBaseForm:10\n\n                            \n                        \n\n                \n                    \n                        Show or hide the loading spinner as required, should be passed to form action bar. \n\n                    \n                \n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            canContinue\n                        \n                        \n                    \n                \n            \n            \n                \ncanContinue()\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/models/abstract-form.ts:20\n                \n            \n\n\n            \n                \n                    Determines if the Continue button is disabled on the form action bar\n\n\n                    \n                        Returns :         boolean\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            markAllInputsTouched\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    markAllInputsTouched()\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/models/abstract-form.ts:26\n                \n            \n\n\n            \n                \n                    Runs the angular 'markAsTouched()' on all form inputs. \n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Abstract\n                            canContinue\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    canContinue()\n                \n            \n\n\n            \n                \n                    Inherited from         AbstractBaseForm\n\n                \n            \n            \n                \n                        Defined in         AbstractBaseForm:14\n\n                \n            \n\n\n            \n                \n                    Determines if the Continue button is disabled on the form action bar \n\n\n                    \n                        Returns :         boolean\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Abstract\n                            continue\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    continue()\n                \n            \n\n\n            \n                \n                    Inherited from         AbstractBaseForm\n\n                \n            \n            \n                \n                        Defined in         AbstractBaseForm:12\n\n                \n            \n\n\n            \n                \n                    What happens when the user clicks the continue button. Generally navigating to another page. \n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            navigate\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    navigate(url: string, queryParams?: Params)\n                \n            \n\n\n            \n                \n                    Inherited from         AbstractBaseForm\n\n                \n            \n            \n                \n                        Defined in         AbstractBaseForm:24\n\n                \n            \n\n\n            \n                \n                    Navigates to a route then automatically scrolls to the top of the page. \n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    url\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    queryParams\n                                    \n                                                Params\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { ViewChild } from '@angular/core';\nimport { NgForm } from '@angular/forms';\nimport { Router } from '@angular/router';\nimport { AbstractBaseForm } from './abstract-base-form';\n\nexport abstract class AbstractForm extends AbstractBaseForm {\n  /** Access to the form elements for validation */\n  @ViewChild('formRef') form: NgForm;\n\n  /**\n   * Constructor\n   */\n  constructor(protected router: Router) {\n    super(router);\n  }\n\n  /**\n   * Determines if the Continue button is disabled on the form action bar\n   */\n  canContinue(): boolean {\n    // Returns true if form is valid\n    return this.form.valid;\n  }\n\n  /** Runs the angular 'markAsTouched()' on all form inputs. */\n  protected markAllInputsTouched(): void {\n    Object.keys(this.form.form.controls).forEach(x => {\n      this.form.form.get(x).markAsTouched();\n    });\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/AbstractFormControl.html":{"url":"classes/AbstractFormControl.html","title":"class - AbstractFormControl","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  AbstractFormControl\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/common/lib/models/abstract-form-control.ts\n        \n\n\n            \n                Extends\n            \n            \n                        Base\n            \n\n            \n                Implements\n            \n            \n                            OnInit\n                            ControlValueAccessor\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Abstract\n                                _defaultErrMsg\n                            \n                            \n                                _onChange\n                            \n                            \n                                _onTouched\n                            \n                            \n                                    Public\n                                objectId\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                            \n                                registerOnChange\n                            \n                            \n                                registerOnTouched\n                            \n                            \n                                    Protected\n                                registerValidation\n                            \n                            \n                                setDisabledState\n                            \n                            \n                                    Protected\n                                setErrorMsg\n                            \n                            \n                                    Abstract\n                                writeValue\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                disabled\n                            \n                            \n                                errorMessage\n                            \n                            \n                                label\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Abstract\n                            _defaultErrMsg\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         ErrorMessage\n\n                        \n                    \n                    \n                        \n                            Default value : {}\n                        \n                    \n                        \n                            \n                                    Defined in projects/common/lib/models/abstract-form-control.ts:10\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            _onChange\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : () => {...}\n                        \n                    \n                        \n                            \n                                    Defined in projects/common/lib/models/abstract-form-control.ts:22\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            _onTouched\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : () => {...}\n                        \n                    \n                        \n                            \n                                    Defined in projects/common/lib/models/abstract-form-control.ts:23\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            objectId\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : UUID.UUID()\n                        \n                    \n                            \n                                \n                                    Inherited from         Base\n\n                                \n                            \n                        \n                            \n                                    Defined in         Base:11\n\n                            \n                        \n\n                \n                    \n                        An identifier for parents to keep track of components \n\n                    \n                \n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/models/abstract-form-control.ts:26\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            registerOnChange\n                        \n                        \n                    \n                \n            \n            \n                \nregisterOnChange(fn: any)\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/models/abstract-form-control.ts:34\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    fn\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            registerOnTouched\n                        \n                        \n                    \n                \n            \n            \n                \nregisterOnTouched(fn: any)\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/models/abstract-form-control.ts:39\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    fn\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            registerValidation\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    registerValidation(ngControl: NgControl, fn: ValidationErrors)\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/models/abstract-form-control.ts:65\n                \n            \n\n\n            \n                \n                    Register self validating method\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    ngControl\n                                    \n                                                NgControl\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                    \n                                \n                                \n                                    fn\n                                    \n                                                ValidationErrors\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        function for validating self\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            setDisabledState\n                        \n                        \n                    \n                \n            \n            \n                \nsetDisabledState(isDisabled: boolean)\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/models/abstract-form-control.ts:44\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    isDisabled\n                                    \n                                                boolean\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            setErrorMsg\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    setErrorMsg()\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/models/abstract-form-control.ts:48\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Abstract\n                            writeValue\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    writeValue(value: any)\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/models/abstract-form-control.ts:31\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n            \n    Inputs\n        \n            \n                \n                    \n                        \n                        disabled\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/models/abstract-form-control.ts:15\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        errorMessage\n                    \n                \n                \n                    \n                        Type :         ErrorMessage\n\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/models/abstract-form-control.ts:18\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        label\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/models/abstract-form-control.ts:13\n                            \n                        \n            \n        \n\n\n\n\n    \n\n\n    \n        import { ErrorMessage, replaceLabelTag } from './error-message.interface';\nimport { Input, OnInit } from '@angular/core';\nimport { Base } from './base';\nimport { ControlValueAccessor, NgControl, ValidationErrors } from '@angular/forms';\n\n// Class does not get exported - used internally\nexport abstract class AbstractFormControl extends Base implements OnInit, ControlValueAccessor {\n\n  // Default messages - must be defined in each component\n  abstract _defaultErrMsg: ErrorMessage = {};\n\n  // Must be defined in component as default labels are specific to component\n  @Input() abstract label: string;\n\n  @Input() disabled: boolean = false;\n\n  // Input to allow developers to change default messages\n  @Input() errorMessage: ErrorMessage;\n\n\n  // Required for implementing ControlValueAccessor\n  _onChange = (_: any) => {};\n  _onTouched = (_?: any) => {};\n\n\n  ngOnInit() {\n    this.setErrorMsg();\n  }\n\n  // Required for implementing ControlValueAccessor\n  abstract writeValue( value: any ): void;\n\n  // Register change function\n  registerOnChange( fn: any ): void {\n    this._onChange = fn;\n  }\n\n  // Register touched function\n  registerOnTouched( fn: any ): void {\n    this._onTouched = fn;\n  }\n\n  // Disable control\n  setDisabledState( isDisabled: boolean ): void {\n    this.disabled = isDisabled;\n  }\n\n  protected setErrorMsg() {\n    // Some components have logic based off no label being submitted - strip off '(optional)'\n    const _label = this.label ? this.label.replace( '(optional)' , '' ) : 'Field';\n\n    if ( this.errorMessage ) {\n      Object.keys(this.errorMessage).map( x => this._defaultErrMsg[x] = this.errorMessage[x] );\n    }\n\n    // Replace label tags with label\n    Object.keys(this._defaultErrMsg).map( x => this._defaultErrMsg[x] = replaceLabelTag( this._defaultErrMsg[x] , _label ) );\n  }\n\n  /**\n   * Register self validating method\n   * @param control control directive\n   * @param fn function for validating self\n   */\n  protected registerValidation( ngControl: NgControl, fn: ValidationErrors ) {\n\n    // Register validateSelf validator so that it will be added on component initialization.\n    // Makes the component a self validating component.\n    Promise.resolve().then(() => {\n\n      if ( ngControl ) {\n\n        const allValidators = [fn.bind(this)];\n        if ( ngControl.control.validator ) {\n          allValidators.push( ngControl.control.validator );\n        }\n        ngControl.control.setValidators(allValidators);\n        ngControl.control.updateValueAndValidity();\n      }\n    });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/AbstractHttpService.html":{"url":"classes/AbstractHttpService.html","title":"class - AbstractHttpService","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  AbstractHttpService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/common/lib/services/abstract-api-service.ts\n        \n\n            \n                Description\n            \n            \n                Abstract class for HTTP Service\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                    Abstract\n                                _headers\n                            \n                            \n                                    Protected\n                                logHTTPRequestsToConsole\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                generateUUID\n                            \n                            \n                                    Protected\n                                get\n                            \n                            \n                                    Protected\n                                    Abstract\n                                handleError\n                            \n                            \n                                    Protected\n                                post\n                            \n                            \n                                    Protected\n                                setupRequest\n                            \n                            \n                                    Protected\n                                uploadAttachment\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    httpOptions\n                                \n                            \n                        \n                    \n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(http: HttpClient)\n                    \n                \n                        \n                            \n                                Defined in projects/common/lib/services/abstract-api-service.ts:13\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                        HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                                Abstract\n                            _headers\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         HttpHeaders\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/common/lib/services/abstract-api-service.ts:18\n                            \n                        \n\n                \n                    \n                        The headers to send along with every GET and POST. \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            logHTTPRequestsToConsole\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in projects/common/lib/services/abstract-api-service.ts:13\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            generateUUID\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    generateUUID()\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/services/abstract-api-service.ts:64\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            get\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    get(url, queryParams?: HttpParams)\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/services/abstract-api-service.ts:24\n                \n            \n\n            \n                \n                    Type parameters :\n                    \n                        T\n                    \n                \n            \n\n            \n                \n                    Makes a GET request to the specified URL, using headers and HTTP options specified in their respective methods.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    url\n                                    \n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Target URL to make the GET request\n\n                                    \n                                \n                                \n                                    queryParams\n                                    \n                                                HttpParams\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                    \n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            Abstract\n                            handleError\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    handleError(error: HttpErrorResponse)\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/services/abstract-api-service.ts:61\n                \n            \n\n\n            \n                \n                    Handles all failed requests that throw either a server error (400/500) or a client error (e.g. lost internet). \n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    error\n                                    \n                                                HttpErrorResponse\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            post\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    post(url, body)\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/services/abstract-api-service.ts:32\n                \n            \n\n            \n                \n                    Type parameters :\n                    \n                        T\n                    \n                \n            \n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    url\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    body\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            setupRequest\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    setupRequest(observable: Observable)\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/services/abstract-api-service.ts:40\n                \n            \n\n            \n                \n                    Type parameters :\n                    \n                        T\n                    \n                \n            \n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    observable\n                                    \n                                            Observable\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            uploadAttachment\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    uploadAttachment(relativeUrl: string, attachment: CommonImage)\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/services/abstract-api-service.ts:75\n                \n            \n\n\n            \n                \n                    Uploads an individual attachment.  All you need to do is set the url.\nNote: urls often include UUIDs, so this must be an application decision.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    relativeUrl\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        URL to hit, must include UUIDs of application and CommonImage\n\n                                    \n                                \n                                \n                                    attachment\n                                    \n                                                CommonImage\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        CommonImage to upload\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        httpOptions\n                    \n                \n\n                \n                    \n                        gethttpOptions()\n                    \n                \n                            \n                                \n                                    Defined in projects/common/lib/services/abstract-api-service.ts:54\n                                \n                            \n                    \n                        \n                                The HttpOptions object that Angular takes for GET and POST requests. Used in every HTTP request from this service. \n\n\n                                \n                                    Returns :     literal type\n\n                                \n                        \n                    \n\n            \n        \n\n    \n\n\n    \n        import { HttpClient, HttpErrorResponse, HttpHeaders, HttpParams } from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { catchError, tap } from 'rxjs/operators';\nimport { UUID } from 'angular2-uuid';\nimport { CommonImage } from '../models/images.model';\n\n\n/**\n * Abstract class for HTTP Service\n */\nexport abstract class AbstractHttpService {\n\n  protected logHTTPRequestsToConsole: boolean = false;\n\n  constructor(protected http: HttpClient) {}\n\n  /** The headers to send along with every GET and POST. */\n  protected abstract _headers: HttpHeaders;\n\n  /**\n   * Makes a GET request to the specified URL, using headers and HTTP options specified in their respective methods.\n   * @param url Target URL to make the GET request\n   */\n  protected get(url, queryParams?: HttpParams): Observable {\n    /** The HTTP request observer with always on error handling */\n    const httpOpts = this.httpOptions;\n    httpOpts.params = queryParams ? queryParams : undefined;\n    const observable = this.http.get(url, httpOpts);\n    return this.setupRequest(observable);\n  }\n\n  protected post(url, body): Observable {\n    if (this.logHTTPRequestsToConsole) {\n      console.log( 'Post Request: ', body );\n    }\n    const observable = this.http.post(url, body, this.httpOptions);\n    return this.setupRequest(observable);\n  }\n\n  protected setupRequest(observable: Observable ): Observable {\n    // All failed requests should trigger the abstract method handleError\n    observable = observable.pipe(catchError(this.handleError.bind(this)));\n    // Optionally add console logging\n    if (this.logHTTPRequestsToConsole) {\n      observable = observable.pipe(tap(\n        data => console.log('HTTP Success: ', data),\n        error => console.log('HTTP Error: ', error)\n      ));\n    }\n    return observable;\n  }\n\n  /** The HttpOptions object that Angular takes for GET and POST requests. Used in every HTTP request from this service. */\n  protected get httpOptions(): {headers: HttpHeaders, params?: HttpParams} {\n    return {\n      headers: this._headers\n    };\n  }\n\n  /** Handles all failed requests that throw either a server error (400/500) or a client error (e.g. lost internet). */\n  protected abstract handleError(error: HttpErrorResponse);\n\n  /* Helper function for generating a unique UUID per request for logging. */\n  protected generateUUID() {\n    return UUID.UUID();\n  }\n\n  /**\n   * Uploads an individual attachment.  All you need to do is set the url.\n   * Note: urls often include UUIDs, so this must be an application decision.\n   *\n   * @param relativeUrl URL to hit, must include UUIDs of application and CommonImage\n   * @param attachment CommonImage to upload\n   */\n  protected uploadAttachment(relativeUrl: string, attachment: CommonImage) {\n    const options = {headers: this._headers, responseType: 'text' as 'text'};\n\n    const binary = atob(attachment.fileContent.split(',')[1]);\n    const array = [];\n    for (let i = 0; i \n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AbstractPageGuardService.html":{"url":"injectables/AbstractPageGuardService.html","title":"injectable - AbstractPageGuardService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  AbstractPageGuardService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/common/lib/services/abstract-page-guard.service.ts\n        \n\n            \n                Description\n            \n            \n                The abstract class for our route guard service.  You MUST setup the NgModule\nto provide your application's service in place of AbstractGuardService.\nYour application's load page guard service can do whatever it wants as long as it\nimplements these methods.\nMore information on setup can be found in @see LoadPageGuardService.\n\n            \n\n\n            \n                Example\n            \n            \n                        \n                            providers: [\n         ...\n         { provide: AbstractPageGuardService, useExisting: EnrolService },\n         LoadPageGuardService\n]\n                        \n            \n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Abstract\n                                canBypassGuards\n                            \n                            \n                                    Public\n                                    Abstract\n                                canNavigateToUrl\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            Abstract\n                            canBypassGuards\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    canBypassGuards()\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/services/abstract-page-guard.service.ts:24\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         boolean\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            Abstract\n                            canNavigateToUrl\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    canNavigateToUrl(url: string)\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/services/abstract-page-guard.service.ts:25\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    url\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\n\n/**\n * The abstract class for our route guard service.  You MUST setup the NgModule\n * to provide your application's service in place of AbstractGuardService.\n *\n * Your application's load page guard service can do whatever it wants as long as it\n * implements these methods.\n *\n * More information on setup can be found in @see LoadPageGuardService.\n *\n *  @example\n *\n *                providers: [\n *                        ...\n *                        { provide: AbstractPageGuardService, useExisting: EnrolService },\n *                        LoadPageGuardService\n *                ]\n *\n */\n@Injectable()\nexport abstract class AbstractPageGuardService {\n\n  public abstract canBypassGuards(): boolean;\n  public abstract canNavigateToUrl( url: string ): boolean;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AbstractPgCheckService.html":{"url":"injectables/AbstractPgCheckService.html","title":"injectable - AbstractPgCheckService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  AbstractPgCheckService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/common/lib/services/abstract-pg-check.service.ts\n        \n\n\n\n            \n                Example\n            \n            \n                        \n                            //registration.module.ts\nproviders: [\n...\n{ provide: AbstractPgCheckService, useExisting: RegistrationService },\nRouteGuardService\n]\n                        \n            \n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Abstract\n                                canBypassGuards\n                            \n                            \n                                    Public\n                                    Abstract\n                                getStartUrl\n                            \n                            \n                                    Public\n                                    Abstract\n                                isPageComplete\n                            \n                            \n                                    Public\n                                    Abstract\n                                isPrerequisiteComplete\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            Abstract\n                            canBypassGuards\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    canBypassGuards()\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/services/abstract-pg-check.service.ts:25\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         boolean\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            Abstract\n                            getStartUrl\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getStartUrl()\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/services/abstract-pg-check.service.ts:28\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            Abstract\n                            isPageComplete\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    isPageComplete(url: string)\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/services/abstract-pg-check.service.ts:26\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    url\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            Abstract\n                            isPrerequisiteComplete\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    isPrerequisiteComplete()\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/services/abstract-pg-check.service.ts:27\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         boolean\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\n\n/**\n * @deprecated\n * The abstract class for our route guard service.  You MUST setup the NgModule\n * to provide your application's service in place of AbstractPgCheckService.\n *\n * Your application's route guard service can do whatever it wants as long as it\n * implements these methods.\n *\n * More information on setup can be found in @see RouteGuardService.\n *\n *  @example\n *                //registration.module.ts\n *                providers: [\n *                        ...\n *                        { provide: AbstractPgCheckService, useExisting: RegistrationService },\n *                        RouteGuardService\n *                ]\n *\n */\n@Injectable()\nexport abstract class AbstractPgCheckService {\n\n  public abstract canBypassGuards(): boolean;\n  public abstract isPageComplete( url: string ): boolean;\n  public abstract isPrerequisiteComplete(): boolean;\n  public abstract getStartUrl(): string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/AbstractReactForm.html":{"url":"classes/AbstractReactForm.html","title":"class - AbstractReactForm","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  AbstractReactForm\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/common/lib/models/abstract-react-form.ts\n        \n\n\n            \n                Extends\n            \n            \n                        AbstractBaseForm\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                formGroup\n                            \n                            \n                                disabled\n                            \n                            \n                                loading\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                canContinue\n                            \n                            \n                                    Protected\n                                markAllInputsTouched\n                            \n                            \n                                    Abstract\n                                canContinue\n                            \n                            \n                                    Abstract\n                                continue\n                            \n                            \n                                    Protected\n                                navigate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(router: Router)\n                    \n                \n                        \n                            \n                                Defined in projects/common/lib/models/abstract-react-form.ts:9\n                            \n                        \n\n                \n                    \n                            Constructor\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            formGroup\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         FormGroup\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/common/lib/models/abstract-react-form.ts:9\n                            \n                        \n\n                \n                    \n                        Access to the form elements for validation \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            disabled\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                            \n                                \n                                    Inherited from         AbstractBaseForm\n\n                                \n                            \n                        \n                            \n                                    Defined in         AbstractBaseForm:8\n\n                            \n                        \n\n                \n                    \n                        Disables all inputs (todo: not implemented) \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            loading\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                    \n                        \n                            Default value : false\n                        \n                    \n                            \n                                \n                                    Inherited from         AbstractBaseForm\n\n                                \n                            \n                        \n                            \n                                    Defined in         AbstractBaseForm:10\n\n                            \n                        \n\n                \n                    \n                        Show or hide the loading spinner as required, should be passed to form action bar. \n\n                    \n                \n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            canContinue\n                        \n                        \n                    \n                \n            \n            \n                \ncanContinue()\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/models/abstract-react-form.ts:22\n                \n            \n\n\n            \n                \n                    Determines if the Continue button is disabled on the form action bar\nCan be overrided\n\n\n                    \n                        Returns :         boolean\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            markAllInputsTouched\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    markAllInputsTouched(fg: FormGroup | FormGroup[])\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/models/abstract-react-form.ts:29\n                \n            \n\n\n            \n                \n                    Runs the angular 'markAsTouched()' on all form inputs. \n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                \n                            \n                            \n                                \n                                    fg\n                                    \n                                            FormGroup | FormGroup[]\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        null\n                                    \n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Abstract\n                            canContinue\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    canContinue()\n                \n            \n\n\n            \n                \n                    Inherited from         AbstractBaseForm\n\n                \n            \n            \n                \n                        Defined in         AbstractBaseForm:14\n\n                \n            \n\n\n            \n                \n                    Determines if the Continue button is disabled on the form action bar \n\n\n                    \n                        Returns :         boolean\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Abstract\n                            continue\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    continue()\n                \n            \n\n\n            \n                \n                    Inherited from         AbstractBaseForm\n\n                \n            \n            \n                \n                        Defined in         AbstractBaseForm:12\n\n                \n            \n\n\n            \n                \n                    What happens when the user clicks the continue button. Generally navigating to another page. \n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            navigate\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    navigate(url: string, queryParams?: Params)\n                \n            \n\n\n            \n                \n                    Inherited from         AbstractBaseForm\n\n                \n            \n            \n                \n                        Defined in         AbstractBaseForm:24\n\n                \n            \n\n\n            \n                \n                    Navigates to a route then automatically scrolls to the top of the page. \n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    url\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    queryParams\n                                    \n                                                Params\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { FormGroup } from '@angular/forms';\nimport { Router } from '@angular/router';\nimport { AbstractBaseForm } from './abstract-base-form';\n\n\nexport abstract class AbstractReactForm extends AbstractBaseForm {\n\n  /** Access to the form elements for validation */\n  formGroup: FormGroup;\n\n  /**\n   * Constructor\n   */\n  constructor(protected router: Router) {\n    super(router);\n  }\n\n  /**\n   * Determines if the Continue button is disabled on the form action bar\n   * Can be overrided\n   */\n  canContinue(): boolean {\n\n    // Returns true if form is valid\n    return this.formGroup.valid;\n  }\n\n  /** Runs the angular 'markAsTouched()' on all form inputs. */\n  protected markAllInputsTouched(fg: FormGroup | FormGroup[] = null): void {\n\n    // Passed in parameter, set each as touched\n    if ( fg ) {\n      if ( Array.isArray( fg ) ) {\n        // For each form mark as touched to display errors\n        return fg.forEach( x => {\n          x.markAsTouched();\n        });\n      }\n      // Returns true if form is valid\n      fg.markAsTouched();\n    } else {\n      this.formGroup.markAsTouched();\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/AbstractTestPage.html":{"url":"classes/AbstractTestPage.html","title":"class - AbstractTestPage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  AbstractTestPage\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/common/e2e/src/abstract-test-page.ts\n        \n\n            \n                Description\n            \n            \n                AbstractTestPage provides common functionality for e2e tests that make use of\nthe MoH Common Lib.  For example, getNameComponent() and\ngetNameComponentVal()  both correspond to the NameComponent.\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                continueButton\n                            \n                            \n                                    Public\n                                skipToContentButton\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                agreeConsentModal\n                            \n                            \n                                checkConsentModal\n                            \n                            \n                                clickButton\n                            \n                            \n                                clickCheckBox\n                            \n                            \n                                clickConsentModalContinue\n                            \n                            \n                                clickLink\n                            \n                            \n                                clickSkipToContent\n                            \n                            \n                                continue\n                            \n                            \n                                countLength\n                            \n                            \n                                formErrors\n                            \n                            \n                                getContinueButton\n                            \n                            \n                                    Async\n                                getNameComponent\n                            \n                            \n                                    Async\n                                getNameComponentVal\n                            \n                            \n                                    Abstract\n                                navigateTo\n                            \n                            \n                                scrollDown\n                            \n                            \n                                scrollUp\n                            \n                            \n                                selectOption\n                            \n                            \n                                typeOption\n                            \n                            \n                                typeText\n                            \n                            \n                                typeTextFirstOccurrence\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            continueButton\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     WebElement\n\n                        \n                    \n                    \n                        \n                            Default value : element(by.css('.form-bar .submit'))\n                        \n                    \n                        \n                            \n                                    Defined in projects/common/e2e/src/abstract-test-page.ts:13\n                            \n                        \n\n                \n                    \n                        Clicking this button should complete the page, navigate to the next one.\nWe default it to .form-bar .submit but you may overwrite as necessary.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            skipToContentButton\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     WebElement\n\n                        \n                    \n                    \n                        \n                            Default value : element(by.css('.skip-to-content'))\n                        \n                    \n                        \n                            \n                                    Defined in projects/common/e2e/src/abstract-test-page.ts:18\n                            \n                        \n\n                \n                    \n                        This is the 'Skip To Content' button for Screen Readers that appears when\ntabbed to. May be overwritten as necessary.\n\n                    \n                \n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            agreeConsentModal\n                        \n                        \n                    \n                \n            \n            \n                \nagreeConsentModal()\n                \n            \n\n\n            \n                \n                    Defined in projects/common/e2e/src/abstract-test-page.ts:138\n                \n            \n\n\n            \n                \n                    Clicks the checkbox which means the user agrees with the info collection notice.\nInfoColectionNoticeComponent \n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            checkConsentModal\n                        \n                        \n                    \n                \n            \n            \n                \ncheckConsentModal()\n                \n            \n\n\n            \n                \n                    Defined in projects/common/e2e/src/abstract-test-page.ts:153\n                \n            \n\n\n            \n                \n                    Checks if the consent modal is currently displayed or not\n\n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            clickButton\n                        \n                        \n                    \n                \n            \n            \n                \nclickButton(classVal: string, text: string)\n                \n            \n\n\n            \n                \n                    Defined in projects/common/e2e/src/abstract-test-page.ts:122\n                \n            \n\n\n            \n                \n                    Clicks the button based on the text specified\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    classVal\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Human readable class value for a button\n\n                                    \n                                \n                                \n                                    text\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Text inside the button\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            clickCheckBox\n                        \n                        \n                    \n                \n            \n            \n                \nclickCheckBox(refNameVal: string)\n                \n            \n\n\n            \n                \n                    Defined in projects/common/e2e/src/abstract-test-page.ts:130\n                \n            \n\n\n            \n                \n                    Clicks the check box based on the ng-reflect-name component\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    refNameVal\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Value of ng-reflect-name component\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            clickConsentModalContinue\n                        \n                        \n                    \n                \n            \n            \n                \nclickConsentModalContinue()\n                \n            \n\n\n            \n                \n                    Defined in projects/common/e2e/src/abstract-test-page.ts:146\n                \n            \n\n\n            \n                \n                    Clicks continue inside the modal\nInfoColectionNoticeComponent \n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            clickLink\n                        \n                        \n                    \n                \n            \n            \n                \nclickLink(label: string, text: string)\n                \n            \n\n\n            \n                \n                    Defined in projects/common/e2e/src/abstract-test-page.ts:178\n                \n            \n\n\n            \n                \n                    Clicks the link based from the label and text provided\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    label\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    text\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            clickSkipToContent\n                        \n                        \n                    \n                \n            \n            \n                \nclickSkipToContent()\n                \n            \n\n\n            \n                \n                    Defined in projects/common/e2e/src/abstract-test-page.ts:47\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            continue\n                        \n                        \n                    \n                \n            \n            \n                \ncontinue()\n                \n            \n\n\n            \n                \n                    Defined in projects/common/e2e/src/abstract-test-page.ts:34\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            countLength\n                        \n                        \n                    \n                \n            \n            \n                \ncountLength(refNameVal: string)\n                \n            \n\n\n            \n                \n                    Defined in projects/common/e2e/src/abstract-test-page.ts:186\n                \n            \n\n\n            \n                \n                    Counts the number of options inside a dropdown box\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    refNameVal\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            formErrors\n                        \n                        \n                    \n                \n            \n            \n                \nformErrors()\n                \n            \n\n\n            \n                \n                    Defined in projects/common/e2e/src/abstract-test-page.ts:76\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getContinueButton\n                        \n                        \n                    \n                \n            \n            \n                \ngetContinueButton()\n                \n            \n\n\n            \n                \n                    Defined in projects/common/e2e/src/abstract-test-page.ts:38\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            getNameComponent\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getNameComponent(labelName: string)\n                \n            \n\n\n            \n                \n                    Defined in projects/common/e2e/src/abstract-test-page.ts:60\n                \n            \n\n\n            \n                \n                    NameComponent - Returns the NameComponent for an associated human\nreadable label. If the label is a duplicate it will grab the first one\nonly.\nTODO: Update to \"common-name\" component when it's imported from PRIME\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    labelName\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Human redable label name.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            getNameComponentVal\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getNameComponentVal(labelName: string)\n                \n            \n\n\n            \n                \n                    Defined in projects/common/e2e/src/abstract-test-page.ts:72\n                \n            \n\n\n            \n                \n                    NameComponent - Returns the value within a given NameComponent\nTODO: Update to \"common-name\" component when it's imported from PRIME\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    labelName\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Human readable label name\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Abstract\n                            navigateTo\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    navigateTo()\n                \n            \n\n\n            \n                \n                    Defined in projects/common/e2e/src/abstract-test-page.ts:32\n                \n            \n\n\n            \n                \n                    Every class should override this to point to the page it is testing.\nCalling navigateTo should go to the corresponding url this page tests.   *\nNote - We encourage hardcoding all links in e2e tests and not sharing a\nconstants file with the application. While this leads to more work, it\navoids the case where incorrect constants (e.g. a typo in a URL) pass the\ntests.\n\n\n                    \n                        Example :\n                        \n                            return browser.get(&#39;/enrolment/profile&#39;);\n                        \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            scrollDown\n                        \n                        \n                    \n                \n            \n            \n                \nscrollDown()\n                \n            \n\n\n            \n                \n                    Defined in projects/common/e2e/src/abstract-test-page.ts:43\n                \n            \n\n\n            \n                \n                    Scrolls down to the bottom of the page \n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            scrollUp\n                        \n                        \n                    \n                \n            \n            \n                \nscrollUp()\n                \n            \n\n\n            \n                \n                    Defined in projects/common/e2e/src/abstract-test-page.ts:160\n                \n            \n\n\n            \n                \n                    Scrolls up to the top of the page\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            selectOption\n                        \n                        \n                    \n                \n            \n            \n                \nselectOption(labelId: string, optionText: string)\n                \n            \n\n\n            \n                \n                    Defined in projects/common/e2e/src/abstract-test-page.ts:91\n                \n            \n\n\n            \n                \n                    Selects from an ng-select component. This includes DropdownComponent\nothers, like country, province, etc.\nTODO - Need to test this works! Right now just copied from GitHub with\nminor tweaks. IDEA - Mirror getNameComponent, where we lookup via the label\ntext and use the 'for' attribute.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    labelId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        corresponds to labelForId on the \n\n                                    \n                                \n                                \n                                    optionText\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        the option we want to select\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            typeOption\n                        \n                        \n                    \n                \n            \n            \n                \ntypeOption(labelId: string, data: string)\n                \n            \n\n\n            \n                \n                    Defined in projects/common/e2e/src/abstract-test-page.ts:102\n                \n            \n\n\n            \n                \n                    Works on same NgSelect components but it sends custom text instead of\nselecting a given choice.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    labelId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        corresponds to labelForId on the \n\n                                    \n                                \n                                \n                                    data\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        the text we want to type\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            typeText\n                        \n                        \n                    \n                \n            \n            \n                \ntypeText(refNameVal: string, text: string)\n                \n            \n\n\n            \n                \n                    Defined in projects/common/e2e/src/abstract-test-page.ts:113\n                \n            \n\n\n            \n                \n                    Enter text into an input via ng-reflect-name component\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    refNameVal\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Value of ng-reflect-name component\n\n                                    \n                                \n                                \n                                    text\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Text to enter into the input\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            typeTextFirstOccurrence\n                        \n                        \n                    \n                \n            \n            \n                \ntypeTextFirstOccurrence(refNameVal: string, text: string)\n                \n            \n\n\n            \n                \n                    Defined in projects/common/e2e/src/abstract-test-page.ts:169\n                \n            \n\n\n            \n                \n                    Types the text inside the first ocurrence of input field\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    refNameVal\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Value of ng-reflect-name component\n\n                                    \n                                \n                                \n                                    text\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Text to enter into the input\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { browser, by, element, WebElement, $$, protractor } from 'protractor';\n\n/**\n * AbstractTestPage provides common functionality for e2e tests that make use of\n * the MoH Common Lib.  For example, `getNameComponent()` and\n * `getNameComponentVal()`  both correspond to the NameComponent.\n */\nexport abstract class AbstractTestPage {\n  /**\n   * Clicking this button should complete the page, navigate to the next one.\n   * We default it to `.form-bar .submit` but you may overwrite as necessary.\n   */\n  public continueButton: WebElement = element(by.css('.form-bar .submit'));\n  /**\n   * This is the 'Skip To Content' button for Screen Readers that appears when\n   * tabbed to. May be overwritten as necessary.\n   */\n  public skipToContentButton: WebElement = element(by.css('.skip-to-content'));\n\n  /**\n   * Every class should override this to point to the page it is testing.\n   * Calling navigateTo should go to the corresponding url this page tests.   *\n   *\n   * Note - We encourage hardcoding all links in e2e tests and _not_ sharing a\n   * constants file with the application. While this leads to more work, it\n   * avoids the case where incorrect constants (e.g. a typo in a URL) pass the\n   * tests.\n   *\n   @example\n   *    return browser.get('/enrolment/profile');\n   */\n  abstract navigateTo(): any;\n\n  continue() {\n    this.continueButton.click();\n  }\n\n  getContinueButton() {\n    return this.continueButton;\n  }\n\n  /** Scrolls down to the bottom of the page */\n  scrollDown() {\n    browser.executeScript('window.scrollTo(0, document.body.scrollHeight)');\n  }\n\n  clickSkipToContent() {\n    this.skipToContentButton.click();\n  }\n\n  /**\n   * **NameComponent** - Returns the NameComponent for an associated human\n   * readable label. If the label is a duplicate it will grab the first one\n   * only.\n   *\n   * TODO: Update to \"common-name\" component when it's imported from PRIME\n   *\n   * @param labelName Human redable label name.\n   */\n  async getNameComponent(labelName: string): Promise {\n    const label = element.all(by.cssContainingText('lib-prime-name label', labelName)).first();\n    return element(by.id(await label.getAttribute('for')));\n  }\n\n  /**\n   * **NameComponent** - Returns the value within a given NameComponent\n   *\n   * TODO: Update to \"common-name\" component when it's imported from PRIME\n   *\n   * @param labelName Human readable label name\n   */\n  async getNameComponentVal(labelName: string): Promise {\n    return (await this.getNameComponent(labelName)).getAttribute('value');\n  }\n\n  formErrors() {\n    return $$('[role=alert] .text-danger');\n  }\n\n  /**\n   * Selects from an ng-select component. This includes DropdownComponent\n   * others, like country, province, etc.\n   *\n   * TODO - Need to test this works! Right now just copied from GitHub with\n   * minor tweaks. IDEA - Mirror getNameComponent, where we lookup via the label\n   * text and use the 'for' attribute.\n   *\n   * @param labelId corresponds to labelForId on the \n   * @param optionText the option we want to select\n   */\n  selectOption(labelId: string, optionText: string) {\n    element(by.css(`ng-select[id=\"${labelId}\"]`)).click(); // opens dropdown\n    element(by.cssContainingText('span.ng-option-label', optionText)).click(); // selects option by provided text\n  }\n\n  /**\n   * Works on same NgSelect components but it sends custom text instead of\n   * selecting a given choice.\n   * @param labelId corresponds to labelForId on the \n   * @param data the text we want to type\n   */\n  typeOption(labelId: string, data: string) {\n    element(by.css(`ng-select[id=\"${labelId}\"]`)).click(); // opens dropdown\n    element(by.css(`input[role=\"combobox\"]`)).sendKeys(data); // type option\n    browser.actions().sendKeys(protractor.Key.ENTER).perform(); // hit enter key\n  }\n\n  /**\n   * Enter text into an input via ng-reflect-name component\n   * @param refNameVal Value of ng-reflect-name component\n   * @param text Text to enter into the input\n   */\n  typeText(refNameVal: string, text: string) {\n    element(by.css(`input[ng-reflect-name^=\"${refNameVal}\"]`)).sendKeys(text);\n  }\n\n  /**\n   * Clicks the button based on the text specified\n   * @param classVal Human readable class value for a button\n   * @param text Text inside the button\n   */\n  clickButton(classVal: string, text: string) {\n    element(by.cssContainingText(`button[class*=\"${classVal}\"]`, text)).click();\n  }\n\n  /**\n   * Clicks the check box based on the ng-reflect-name component\n   * @param refNameVal Value of ng-reflect-name component\n   */\n  clickCheckBox(refNameVal: string) {\n    element(by.css(`input[ng-reflect-name=\"${refNameVal}\"]`)).click();\n  }\n\n  /**\n   * Clicks the checkbox which means the user agrees with the info collection notice.\n   * InfoColectionNoticeComponent \n   */\n  agreeConsentModal() {\n    element(by.css('label[for=\"agree\"]')).element(by.css('strong')).click();\n  }\n\n  /**\n   * Clicks continue inside the modal\n   * InfoColectionNoticeComponent \n   */\n  clickConsentModalContinue() {\n    element(by.css('div[class=\"modal-footer\"]')).element(by.css('button[type=\"submit\"]')).click();\n  }\n\n  /**\n   * Checks if the consent modal is currently displayed or not\n   */\n  checkConsentModal() {\n    return element(by.css('common-consent-modal')).element(by.css('div[aria-labelledby=\"myLargeModalLabel\"]')).isDisplayed();\n  }\n\n  /**\n   * Scrolls up to the top of the page\n   */\n  scrollUp() {\n      browser.executeScript('window.scrollTo(0,0)');\n  }\n\n  /**\n   * Types the text inside the first ocurrence of input field\n   * @param refNameVal Value of ng-reflect-name component\n   * @param text Text to enter into the input\n   */\n  typeTextFirstOccurrence(refNameVal: string, text: string) {\n      element.all(by.css(`input[ng-reflect-name^=\"${refNameVal}\"]`)).first().sendKeys(text);\n  }\n\n  /**\n   * Clicks the link based from the label and text provided\n   * @param label\n   * @param text\n   */\n  clickLink(label: string, text: string) {\n      element(by.cssContainingText(label, text)).click();\n  }\n\n  /**\n   * Counts the number of options inside a dropdown box\n   * @param refNameVal\n   */\n  countLength(refNameVal: string){\n      return $$(`select[ng-reflect-name^=\"${refNameVal}\"] option`);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/AccordionCommonComponent.html":{"url":"components/AccordionCommonComponent.html","title":"component - AccordionCommonComponent","body":"\n                   \n\n\n\n\n\n  Components\n  AccordionCommonComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    projects/common/lib/components/accordion/accordion.component.ts\n\n\n    \n        Description\n    \n    \n        AccordionComponent is a\n\n    \n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n    \n        Example\n    \n    \n                \n                    \n\n                \n    \n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                common-accordion\n            \n\n            \n                styleUrls\n                ./accordion.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./accordion.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                expandText\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                isOpen\n                            \n                            \n                                title\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in projects/common/lib/components/accordion/accordion.component.ts:26\n                            \n                        \n\n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        isOpen\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/accordion/accordion.component.ts:22\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        title\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/accordion/accordion.component.ts:21\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/components/accordion/accordion.component.ts:25\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            expandText\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : '(click to expand)'\n                        \n                    \n                        \n                            \n                                    Defined in projects/common/lib/components/accordion/accordion.component.ts:24\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit, Input, ViewChild } from '@angular/core';\nimport { AccordionComponent } from 'ngx-bootstrap';\n/**\n * AccordionComponent is a\n *\n * @example\n *       \t\n  *       \n * @export\n */\n\n@Component({\n  selector: 'common-accordion',\n  templateUrl: './accordion.component.html',\n  styleUrls: ['./accordion.component.scss']\n})\nexport class AccordionCommonComponent implements OnInit {\n\n  @Input() title: string;\n  @Input() isOpen: boolean = false;\n\n  public expandText: string =  '(click to expand)';\n  ngOnInit() {\n  }\n\n  constructor() { }\n\n\n}\n\n    \n\n    \n        \n    \n        \n          {{title}} \n          \n          {{expandText}}\n        \n      \n    \n  \n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                      {{title}}                     {{expandText}}                    '\n    var COMPONENTS = [{'name': 'AccordionCommonComponent', 'selector': 'common-accordion'},{'name': 'AddressComponent', 'selector': 'common-address'},{'name': 'ButtonComponent', 'selector': 'common-button'},{'name': 'ButtonGroupComponent', 'selector': 'common-button-group'},{'name': 'CaptchaComponent', 'selector': 'common-captcha'},{'name': 'CheckboxComponent', 'selector': 'common-checkbox'},{'name': 'CityComponent', 'selector': 'common-city'},{'name': 'ConfirmTemplateComponent', 'selector': 'common-confirm-template'},{'name': 'ConsentModalComponent', 'selector': 'common-consent-modal'},{'name': 'CoreBreadcrumbComponent', 'selector': 'common-core-breadcrumb'},{'name': 'CountryComponent', 'selector': 'common-country'},{'name': 'DateComponent', 'selector': 'common-date'},{'name': 'DatepickerComponent', 'selector': 'common-datepicker'},{'name': 'DropdownComponent', 'selector': 'common-dropdown'},{'name': 'EmailComponent', 'selector': 'common-email'},{'name': 'ErrorContainerComponent', 'selector': 'common-error-container'},{'name': 'FileUploaderComponent', 'selector': 'common-file-uploader'},{'name': 'FormActionBarComponent', 'selector': 'common-form-action-bar'},{'name': 'FormSubmitBarComponent', 'selector': 'common-form-submit-bar'},{'name': 'FullNameComponent', 'selector': 'common-full-name'},{'name': 'GeocoderInputComponent', 'selector': 'common-geocoder-input'},{'name': 'HeaderComponent', 'selector': 'common-header'},{'name': 'NameComponent', 'selector': 'common-name'},{'name': 'PageFrameworkComponent', 'selector': 'common-page-framework'},{'name': 'PageSectionComponent', 'selector': 'common-page-section'},{'name': 'PasswordComponent', 'selector': 'common-password'},{'name': 'PhnComponent', 'selector': 'common-phn'},{'name': 'PhoneNumberComponent', 'selector': 'common-phone-number'},{'name': 'PostalCodeComponent', 'selector': 'common-postal-code'},{'name': 'ProvinceComponent', 'selector': 'common-province'},{'name': 'RadioComponent', 'selector': 'common-radio'},{'name': 'SampleModalComponent', 'selector': 'common-sample-modal'},{'name': 'SinComponent', 'selector': 'common-sin'},{'name': 'StreetComponent', 'selector': 'common-street'},{'name': 'ThumbnailComponent', 'selector': 'common-thumbnail'},{'name': 'ToggleComponent', 'selector': 'common-toggle'},{'name': 'WizardProgressBarComponent', 'selector': 'common-wizard-progress-bar'},{'name': 'XiconButtonComponent', 'selector': 'common-xicon-button'}];\n    var DIRECTIVES = [{'name': 'DateFieldFormatDirective', 'selector': '[commonDateFieldFormat]'},{'name': 'DuplicateCheckDirective', 'selector': '[commonDuplicateCheck]'},{'name': 'ValidateBcPostalDirective', 'selector': '[commonValidateBcPostal]'},{'name': 'ValidateCityDirective', 'selector': '[commonValidateCity]'},{'name': 'ValidateNameDirective', 'selector': '[commonValidateName]'},{'name': 'ValidatePostalcodeDirective', 'selector': '[commonValidatePostalcode]'},{'name': 'ValidateRegionDirective', 'selector': '[commonValidateRegion]'},{'name': 'ValidateStreetDirective', 'selector': '[commonValidateStreet]'}];\n    var ACTUAL_COMPONENT = {'name': 'AccordionCommonComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/AddrLabelList.html":{"url":"interfaces/AddrLabelList.html","title":"interface - AddrLabelList","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  AddrLabelList\n\n\n\n        \n            Info\n        \n        \n            Design Guidelines\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/common/lib/components/address/address.component.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        address1\n                                \n                                \n                                            Optional\n                                        address2\n                                \n                                \n                                            Optional\n                                        address3\n                                \n                                \n                                            Optional\n                                        city\n                                \n                                \n                                            Optional\n                                        country\n                                \n                                \n                                            Optional\n                                        postalCode\n                                \n                                \n                                            Optional\n                                        province\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        address1\n                                    \n                                \n                                \n                                    \n                                        address1:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        address2\n                                    \n                                \n                                \n                                    \n                                        address2:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        address3\n                                    \n                                \n                                \n                                    \n                                        address3:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        city\n                                    \n                                \n                                \n                                    \n                                        city:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        country\n                                    \n                                \n                                \n                                    \n                                        country:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        postalCode\n                                    \n                                \n                                \n                                    \n                                        postalCode:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        province\n                                    \n                                \n                                \n                                    \n                                        province:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n    \n        Design Guidelines\ntodo\n\n    \n\n    \n        import {\n  Component,\n  Input,\n  Output,\n  EventEmitter,\n  OnChanges,\n  forwardRef,\n  OnInit\n} from '@angular/core';\nimport { ControlContainer, ControlValueAccessor, NgForm, NG_VALUE_ACCESSOR } from '@angular/forms';\nimport { Base } from '../../models/base';\nimport { GeoAddressResult } from '../../services/geocoder.service';\nimport { Address } from '../../models/address.model';\nimport { CountryList, CANADA, UNITED_STATES, COUNTRY_LIST } from '../country/country.component';\nimport { ProvinceList, BRITISH_COLUMBIA, PROVINCE_LIST } from '../province/province.component';\n\nexport interface AddrLabelList {\n  address1?: string;\n  address2?: string;\n  address3?: string;\n  city?: string;\n  province?: string;\n  country?: string;\n  postalCode?: string;\n}\n\nexport interface Maxlengths {\n  address?: string;\n  city?: string;\n  province?: string;\n  country?: string;\n  postalCode?: string;\n}\n\nexport interface ReadOnlyFields {\n  address?: boolean;\n  city?: boolean;\n  province?: boolean;\n  country?: boolean;\n  postalCode?: boolean;\n}\n\n/**\n *\n * Note - This component REQUIRES that `HttpClientModule` is registered in your NgModule.\n */\n@Component({\n  selector: 'common-address',\n  templateUrl: './address.component.html',\n  styleUrls: ['./address.component.scss'],\n  /* Re-use the same ngForm that it's parent is using. The component will show\n   * up in its parents `this.form`, and will auto-update `this.form.valid`\n   */\n  viewProviders: [\n    { provide: ControlContainer, useExisting: forwardRef(() => NgForm) }\n  ],\n  providers: [\n    { provide: NG_VALUE_ACCESSOR, useExisting: forwardRef(() => AddressComponent) }\n  ]\n})\nexport class AddressComponent extends Base\n  implements OnInit, OnChanges, ControlValueAccessor {\n\n  /* Disable all fields by sending in boolean,\n   * disable specific fields by sending in ReadOnlyFields structure\n   */\n  @Input() disabled: boolean | ReadOnlyFields = false;\n  @Input() isRequired: boolean = false;\n  @Input() countryList: CountryList[] = COUNTRY_LIST;\n  @Input() defaultCountry: string = CANADA;\n  @Input() provinceList: ProvinceList[] = PROVINCE_LIST;\n  @Input() defaultProvince: string = BRITISH_COLUMBIA;\n  @Input() disableGeocoder: boolean = false;\n  @Input() labels: AddrLabelList;\n  @Input() maxlengths: Maxlengths;\n  @Input() bcOnly: boolean = false;\n\n  @Input()\n  set address(val: Address) {\n    if (val) {\n      this.addr = val;\n    }\n  }\n  get address(): Address {\n    return this.addr;\n  }\n\n  @Output() addressChange: EventEmitter = new EventEmitter();\n  /**\n   * If true, adds a plus icon next to street and enables users to add a second\n   * address line.  This value binds to `address.addressLine2`\n   */\n  @Input() allowExtralines: boolean = false;\n\n  addr: Address;\n  provList: ProvinceList[];\n  showLine2 = false;\n  showLine3 = false;\n\n  // Labels defaulted to MSP\n  addrLabels: AddrLabelList =  {\n    address1: 'Full street address, rural route, PO box or general delivery',\n    address2: 'Address Line 2',\n    address3: 'Address Line 3',\n    city: 'City',\n    province: 'Province or state',\n    country: 'Country',\n    postalCode: 'Postal Code or Zip Code'\n  };\n\n  // Lengths defaulted to MSP\n  fieldMaxLenghts: Maxlengths = {\n    address: '25',\n    city: '25',\n    province: '25',\n    country: '250',\n    postalCode: '25'\n  };\n\n  readOnlyFields: ReadOnlyFields = {\n    address: false,\n    city: false,\n    province: false,\n    country: false,\n    postalCode: false,\n  };\n\n  _onChange = (_: any) => { };\n  _onTouched = (_: any) => { };\n\n  constructor() {\n    super();\n  }\n\n  ngOnInit() {\n\n    // console.log( 'address: ', this.bcOnly );\n\n    this.setLabels();\n    this.setMaxlengths();\n    this.setReadOnlyFields();\n\n    if (this.addr) {\n\n      if (!this.addr.country) {\n        this.addr.country = this.setDefaultCountryAsOption();\n      } else {\n        // If string for country submitted, need to find code to display value in select box\n        this.addr.country = this.findCountryCode( this.addr.country );\n      }\n\n      if (!this.addr.province) {\n        this.addr.province = this.setDefaultProvinceAsOption(this.addr.country);\n      }\n\n      // Make sure addressLine2 is visible if there is data persisted to display there.\n      if (this.allowExtralines) {\n        if (this.addr.addressLine2) {\n          this.addLine(2);\n        }\n\n        if (this.addr.addressLine3) {\n          this.addLine(3);\n        }\n      }\n    }\n\n    this.updateProvList();\n  }\n\n  /**\n   * Set country province blank\n   * @param value\n   */\n  setCountry(value: string) {\n    this.addr.province = this.setDefaultProvinceAsOption( value );\n    this.addr.country = value;\n    this.updateProvList();\n\n   if ( this.isCanada() ) {\n      // If Canada, clear postal code to display mask\n      this.addr.postal = '';\n    }\n\n    this._onChange(this.addr);\n    this.addressChange.emit(this.addr);\n    this._onTouched(this.addr);\n  }\n\n  setProvince(value: string) {\n    this.addr.province = value;\n    this._onChange(this.addr);\n    this.addressChange.emit(this.addr);\n    this._onTouched(this.addr);\n  }\n\n  setStreetAddress(value: string) {\n    this.addr.addressLine1 = value;\n    this._onChange(this.addr);\n    this.addressChange.emit(this.addr);\n    this._onTouched(this.addr);\n  }\n\n  setCity(value: string) {\n    this.addr.city = value;\n    this._onChange(this.addr);\n    this.addressChange.emit(this.addr);\n    this._onTouched(this.addr);\n  }\n\n  /**\n   * Sets string after converted upper case\n   * @param text\n   */\n  setPostalCode(value: string) {\n    this.addr.postal = value;\n    this._onChange(this.addr);\n    this.addressChange.emit(this.addr);\n    this._onTouched(this.addr);\n  }\n\n  isCanada(): boolean {\n    return this.addr && CANADA === this.addr.country;\n  }\n\n  ngOnChanges(changes) {\n    if (changes['countryList'] && changes['countryList'].currentValue) {\n\n      if (this.addr && !this.addr.country) {\n        // Set defaults\n        this.addr.country = this.setDefaultCountryAsOption();\n\n        // Set defaults\n        this.addr.province = this.setDefaultProvinceAsOption(this.addr.country);\n      }\n      this.updateProvList();\n    }\n    if (changes['provinceList'] && changes['provinceList'].currentValue) {\n      if (this.addr && !this.addr.province) {\n        // Set defaults\n        this.addr.province = this.setDefaultProvinceAsOption(this.addr.country);\n      }\n      this.updateProvList();\n    }\n  }\n\n  addLine(line: 2 | 3 = null) {\n\n    // Add lines in order\n    if (line === null) {\n      if (!this.showLine2) {\n        this.showLine2 = true;\n      } else if (!this.showLine3) {\n        this.showLine3 = true;\n      }\n    } else {\n      // Add specific line number\n      const lookup = `showLine${line}`;\n      this[lookup] = true;\n    }\n  }\n\n  removeLine(line: 2 | 3) {\n    // We can remove lines in any order, depending on user input\n    // Dynamically lookup variable based on line number input.\n    const lookup = `showLine${line}`;\n    this[lookup] = false;\n\n    // TODO - Need to clear the data in the appropriate field, just null/undefined it out.\n    const addrLookup = `addressLine${line}`;\n    this.address[addrLookup] = undefined;\n  }\n\n  /**\n   * Updates the provList variable. Values must be stored in a variable and not\n   * accessed via function invocation for performance.\n   */\n  private updateProvList() {\n    if (!this.provinceList) { return; } // When data is async and hasn't loaded\n    this.provList = this.provinceList\n      .map(prov => {\n        if (prov.country === this.addr.country) {\n          return prov;\n        }\n      })\n      .filter(x => x);\n  }\n\n  /**\n   * Sets the default province option value\n   */\n  private setDefaultProvinceAsOption(country: string): string {\n    const provObj = !this.provinceList ? null : this.provinceList.find(\n      val => (val.provinceCode === this.defaultProvince ||\n        val.description === this.defaultProvince) &&\n        val.country === country\n    );\n    return (provObj ? provObj.provinceCode : '');\n  }\n\n  private findProvinceDescription(prov: string): string {\n    const provObj = !this.provinceList ? null : this.provinceList.find(\n      val => val.provinceCode === prov ||\n        val.description === prov\n    );\n    return (provObj ? provObj.description : null);\n  }\n\n  /**\n   * Set country to default\n   * Search uses country code or country name to find item is list.\n   */\n  private setDefaultCountryAsOption(): string {\n    return this.findCountryCode( this.defaultCountry );\n  }\n\n  private findCountryCode( country: string ): string {\n    const countryObj = !this.countryList\n      ? null\n      : this.countryList.find(\n        val =>\n          val.countryCode === country ||\n          val.description === country\n      );\n    return countryObj ? countryObj.countryCode : null;\n  }\n\n  // GeoCoder\n\n  /**\n   * GeoCoder only is applicable when address is BC, Canada.\n   */\n  useGeoCoder(): boolean {\n    if (this.disableGeocoder) {\n      return false;\n    }\n    return this.isCanada() && BRITISH_COLUMBIA === this.addr.province;\n  }\n\n  // Only BC addresses therefore no need to copy province into structure.\n  setAddress(data: GeoAddressResult) {\n    this.addr.addressLine1 = data.street;\n    this.addr.city = data.city;\n    this.addr.province = data.province;\n    this.addr.country = data.country;\n    this.addressChange.emit(this.addr);\n  }\n\n  writeValue( value: Address) {\n    if ( value ) {\n      this.addr = value;\n    }\n  }\n\n  registerOnChange(fn: any): void {\n    this._onChange = fn;\n  }\n\n  registerOnTouched(fn: any): void {\n    this._onTouched = fn;\n  }\n\n  setDisabledState(isDisabled: boolean): void {\n    this.disabled = isDisabled;\n    this.setReadOnlyFields();\n  }\n\n  private setLabels() {\n    if ( this.labels ) {\n      Object.keys(this.labels).map( x => this.addrLabels[x] = this.labels[x] );\n    }\n  }\n\n  private setMaxlengths() {\n    if ( this.maxlengths ) {\n      Object.keys(this.fieldMaxLenghts).map( x => this.maxlengths[x] = this.fieldMaxLenghts[x]);\n    }\n  }\n\n  private setReadOnlyFields() {\n    if ( typeof this.disabled === 'boolean' ) {\n      Object.keys(this.readOnlyFields).map( x => this.readOnlyFields[x] = this.disabled );\n    } else {\n      Object.keys(this.disabled).map( x => this.readOnlyFields[x] = this.disabled[x] );\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Address.html":{"url":"classes/Address.html","title":"class - Address","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Address\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/common/lib/models/address.model.ts\n        \n\n            \n                Description\n            \n            \n                Address class, each project can extend this address class\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                addressLine1\n                            \n                            \n                                    Public\n                                addressLine2\n                            \n                            \n                                    Public\n                                addressLine3\n                            \n                            \n                                    Public\n                                city\n                            \n                            \n                                    Public\n                                country\n                            \n                            \n                                    Public\n                                hasValue\n                            \n                            \n                                    Public\n                                isValid\n                            \n                            \n                                    Public\n                                postal\n                            \n                            \n                                    Static\n                                PostalCodeBCRegEx\n                            \n                            \n                                    Public\n                                province\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                copy\n                            \n                            \n                                isComplete\n                            \n                            \n                                toString\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    street\n                                \n                                \n                                    isBCOnly\n                                \n                            \n                        \n                    \n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            addressLine1\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/common/lib/models/address.model.ts:9\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            addressLine2\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/common/lib/models/address.model.ts:11\n                            \n                        \n\n                \n                    \n                        Used to store optional extra address fields. Can be used with addressLine1 OR street. \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            addressLine3\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/common/lib/models/address.model.ts:13\n                            \n                        \n\n                \n                    \n                        Used to store optional extra address fields. Can be used with addressLine1 OR street. \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            city\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/common/lib/models/address.model.ts:17\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            country\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/common/lib/models/address.model.ts:15\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            hasValue\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/common/lib/models/address.model.ts:18\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            isValid\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/common/lib/models/address.model.ts:19\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            postal\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/common/lib/models/address.model.ts:14\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Static\n                            PostalCodeBCRegEx\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : '^[Vv]\\\\d[ABCEGHJ-NPRSTV-Zabceghj-nprstv-z][ ]?\\\\d[ABCEGHJ-NPRSTV-Zabceghj-nprstv-z]\\\\d$'\n                        \n                    \n                        \n                            \n                                    Defined in projects/common/lib/models/address.model.ts:7\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            province\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/common/lib/models/address.model.ts:16\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            copy\n                        \n                        \n                    \n                \n            \n            \n                \ncopy(object: Address)\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/models/address.model.ts:61\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    object\n                                    \n                                                Address\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            isComplete\n                        \n                        \n                    \n                \n            \n            \n                \nisComplete()\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/models/address.model.ts:44\n                \n            \n\n\n            \n                \n                    Address must have all fields filled out to be considered\ncomplete\n\n\n                    \n                        Returns :         boolean\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            toString\n                        \n                        \n                    \n                \n            \n            \n                \ntoString()\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/models/address.model.ts:36\n                \n            \n\n\n            \n                \n                    Overwrite the native JavaScript toString method to determine how the\nobject should be printed, instead of [object Object].  This provides a\nstandard way to print out an address. If you need something specific you\nshould access the properties directly. We omit Province/Country because of\nPharmaCare's BC focus. \n\n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        street\n                    \n                \n\n                \n                    \n                        getstreet()\n                    \n                \n                            \n                                \n                                    Defined in projects/common/lib/models/address.model.ts:23\n                                \n                            \n\n                \n                    \n                        setstreet(val: string)\n                    \n                \n                            \n                                \n                                    Defined in projects/common/lib/models/address.model.ts:27\n                                \n                            \n                    \n                        \n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                        Type\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                            val\n                                                    \n                                                            \n                                                                            string\n                                                            \n                                                    \n                                                        \n                                                                No\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :         void\n\n                                \n                        \n                    \n            \n        \n        \n            \n                \n                    \n                        \n                        isBCOnly\n                    \n                \n\n                \n                    \n                        getisBCOnly()\n                    \n                \n                            \n                                \n                                    Defined in projects/common/lib/models/address.model.ts:50\n                                \n                            \n\n            \n        \n\n    \n\n\n    \n        export class Address {\n\n  static PostalCodeBCRegEx = '^[Vv]\\\\d[ABCEGHJ-NPRSTV-Zabceghj-nprstv-z][ ]?\\\\d[ABCEGHJ-NPRSTV-Zabceghj-nprstv-z]\\\\d$';\n\n  public addressLine1: string;\n  /** Used to store optional extra address fields. Can be used with addressLine1 OR street. */\n  public addressLine2: string;\n  /** Used to store optional extra address fields. Can be used with addressLine1 OR street. */\n  public addressLine3: string;\n  public postal: string;\n  public country: string;\n  public province: string;\n  public city: string;\n  public hasValue: boolean; // TODO: Why do we need this? - Remove - breaking change\n  public isValid: boolean; // TODO: Why do we need this? - Remove - breaking change\n\n\n  // For backward compatibilty with applications that use street.\n  get street() {\n    return this.addressLine1;\n  }\n\n  set street( val: string ) {\n    this.addressLine1 = val;\n  }\n\n  /** Overwrite the native JavaScript toString method to determine how the\n   * object should be printed, instead of [object Object].  This provides a\n   * standard way to print out an address. If you need something specific you\n   * should access the properties directly. We omit Province/Country because of\n   * PharmaCare's BC focus. */\n  toString() {\n    return `${this.addressLine1}, ${this.city}`;\n  }\n\n  /**\n   * Address must have all fields filled out to be considered\n   * complete\n   */\n  isComplete(): boolean {\n    // All fields have data - not empty\n    return !!(this.addressLine1 && this.city && this.country &&\n             this.province && this.postal);\n  }\n\n  get isBCOnly(): boolean {\n    let isValid = false;\n    if (this.postal &&\n      this.postal.length > 0) {\n      const regEx = new RegExp(Address.PostalCodeBCRegEx);\n      isValid = regEx.test(this.postal);\n    }\n    return isValid;\n  }\n\n  /* Copy function */\n  copy(object: Address) {\n    this.addressLine1 = object.addressLine1;\n    this.addressLine2 = object.addressLine2;\n    this.addressLine3 = object.addressLine3;\n\n    this.city = object.city;\n    this.country = object.country;\n    this.postal = object.postal;\n    this.province = object.province;\n  }\n}\n\n\n\n\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Base.html":{"url":"classes/Base.html","title":"class - Base","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Base\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/common/lib/models/base.ts\n        \n\n            \n                Description\n            \n            \n                Base class.  Components extend this class to have object IDs.\nNPM package dependencies:\n  a) moment\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                objectId\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in projects/common/lib/models/base.ts:11\n                            \n                        \n\n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            objectId\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : UUID.UUID()\n                        \n                    \n                        \n                            \n                                    Defined in projects/common/lib/models/base.ts:11\n                            \n                        \n\n                \n                    \n                        An identifier for parents to keep track of components \n\n                    \n                \n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { UUID } from 'angular2-uuid';\n\n/**\n * Base class.  Components extend this class to have object IDs.\n * NPM package dependencies:\n *  a) moment\n */\nexport class Base {\n\n  /** An identifier for parents to keep track of components */\n  public objectId: string = UUID.UUID();\n\n  constructor() {}\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ButtonComponent.html":{"url":"components/ButtonComponent.html","title":"component - ButtonComponent","body":"\n                   \n\n\n\n\n\n  Components\n  ButtonComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    projects/common/lib/components/button/button.component.ts\n\n\n    \n        Description\n    \n    \n        Button Component is a button which can be used across the application to have\nsame button style.\nYou're free to create custom (bootstrap) buttons as your application\nrequires. The main advantages to this component are:\n\nconsistency\nsimplicity (less markup)\nmaking future changes easier, such as automatically updating any changes\nto button colour stylings.\n\n\n    \n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n    \n        Example\n    \n    \n                \n                    \n\n                \n    \n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                common-button\n            \n\n            \n                styleUrls\n                ./button.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./button.component.html\n            \n\n            \n                viewProviders\n                \n                    \n                                { provide: ControlContainer, useExisting: forwardRef(() => NgForm) }\n                    \n                \n            \n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                button\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                            \n                                onClick\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                buttonType\n                            \n                            \n                                disabled\n                            \n                            \n                                label\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                btnClick\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in projects/common/lib/components/button/button.component.ts:40\n                            \n                        \n\n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        buttonType\n                    \n                \n                \n                    \n                        Type :     \"default\" | \"primary\" | \"secondary\"\n\n                    \n                \n                \n                    \n                        Default value : 'default'\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/button/button.component.ts:36\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        disabled\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/button/button.component.ts:37\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        label\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'Button'\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/button/button.component.ts:38\n                            \n                        \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        btnClick\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/button/button.component.ts:39\n                            \n                        \n            \n        \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/components/button/button.component.ts:44\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            onClick\n                        \n                        \n                    \n                \n            \n            \n                \nonClick($event)\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/components/button/button.component.ts:47\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    $event\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            button\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         ElementRef\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ViewChild('button')\n                            \n                        \n                    \n                        \n                            \n                                    Defined in projects/common/lib/components/button/button.component.ts:40\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { forwardRef, Component, OnInit, ViewChild, EventEmitter, Input, Output, ElementRef } from '@angular/core';\nimport { ControlContainer, NgForm, NG_VALUE_ACCESSOR } from '@angular/forms';\n\n/**\n * Button Component is a button which can be used across the application to have\n * same button style.\n *\n * You're free to create custom (bootstrap) buttons as your application\n * requires. The main advantages to this component are:\n *\n *  - consistency\n *  - simplicity (less markup)\n *  - making future changes easier, such as automatically updating any changes\n * to button colour stylings.\n *\n *\n * @example\n *        \n *        \n * @export\n */\n@Component({\n  selector: 'common-button',\n  templateUrl: './button.component.html',\n  styleUrls: ['./button.component.scss'],\n  viewProviders: [\n    { provide: ControlContainer, useExisting: forwardRef(() => NgForm ) }\n  ]\n})\n\nexport class ButtonComponent implements OnInit {\n\n  // Can pass the Style class of a button e.g. For primary, btn btn-primary. Default, btn btn-default. Error, btn btn-danger\n  @Input() buttonType: 'default' | 'primary' | 'secondary' = 'default';\n  @Input() disabled: boolean = false;\n  @Input() label: string = 'Button';\n  @Output() btnClick: EventEmitter = new EventEmitter();\n  @ViewChild('button') button: ElementRef;\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n  onClick($event) {\n    this.btnClick.emit($event);\n  }\n}\n\n    \n\n    \n        \n\t\t\t{{label}}\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '\t\t\t{{label}}'\n    var COMPONENTS = [{'name': 'AccordionCommonComponent', 'selector': 'common-accordion'},{'name': 'AddressComponent', 'selector': 'common-address'},{'name': 'ButtonComponent', 'selector': 'common-button'},{'name': 'ButtonGroupComponent', 'selector': 'common-button-group'},{'name': 'CaptchaComponent', 'selector': 'common-captcha'},{'name': 'CheckboxComponent', 'selector': 'common-checkbox'},{'name': 'CityComponent', 'selector': 'common-city'},{'name': 'ConfirmTemplateComponent', 'selector': 'common-confirm-template'},{'name': 'ConsentModalComponent', 'selector': 'common-consent-modal'},{'name': 'CoreBreadcrumbComponent', 'selector': 'common-core-breadcrumb'},{'name': 'CountryComponent', 'selector': 'common-country'},{'name': 'DateComponent', 'selector': 'common-date'},{'name': 'DatepickerComponent', 'selector': 'common-datepicker'},{'name': 'DropdownComponent', 'selector': 'common-dropdown'},{'name': 'EmailComponent', 'selector': 'common-email'},{'name': 'ErrorContainerComponent', 'selector': 'common-error-container'},{'name': 'FileUploaderComponent', 'selector': 'common-file-uploader'},{'name': 'FormActionBarComponent', 'selector': 'common-form-action-bar'},{'name': 'FormSubmitBarComponent', 'selector': 'common-form-submit-bar'},{'name': 'FullNameComponent', 'selector': 'common-full-name'},{'name': 'GeocoderInputComponent', 'selector': 'common-geocoder-input'},{'name': 'HeaderComponent', 'selector': 'common-header'},{'name': 'NameComponent', 'selector': 'common-name'},{'name': 'PageFrameworkComponent', 'selector': 'common-page-framework'},{'name': 'PageSectionComponent', 'selector': 'common-page-section'},{'name': 'PasswordComponent', 'selector': 'common-password'},{'name': 'PhnComponent', 'selector': 'common-phn'},{'name': 'PhoneNumberComponent', 'selector': 'common-phone-number'},{'name': 'PostalCodeComponent', 'selector': 'common-postal-code'},{'name': 'ProvinceComponent', 'selector': 'common-province'},{'name': 'RadioComponent', 'selector': 'common-radio'},{'name': 'SampleModalComponent', 'selector': 'common-sample-modal'},{'name': 'SinComponent', 'selector': 'common-sin'},{'name': 'StreetComponent', 'selector': 'common-street'},{'name': 'ThumbnailComponent', 'selector': 'common-thumbnail'},{'name': 'ToggleComponent', 'selector': 'common-toggle'},{'name': 'WizardProgressBarComponent', 'selector': 'common-wizard-progress-bar'},{'name': 'XiconButtonComponent', 'selector': 'common-xicon-button'}];\n    var DIRECTIVES = [{'name': 'DateFieldFormatDirective', 'selector': '[commonDateFieldFormat]'},{'name': 'DuplicateCheckDirective', 'selector': '[commonDuplicateCheck]'},{'name': 'ValidateBcPostalDirective', 'selector': '[commonValidateBcPostal]'},{'name': 'ValidateCityDirective', 'selector': '[commonValidateCity]'},{'name': 'ValidateNameDirective', 'selector': '[commonValidateName]'},{'name': 'ValidatePostalcodeDirective', 'selector': '[commonValidatePostalcode]'},{'name': 'ValidateRegionDirective', 'selector': '[commonValidateRegion]'},{'name': 'ValidateStreetDirective', 'selector': '[commonValidateStreet]'}];\n    var ACTUAL_COMPONENT = {'name': 'ButtonComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ButtonGroupComponent.html":{"url":"components/ButtonGroupComponent.html","title":"component - ButtonGroupComponent","body":"\n                   \n\n\n\n\n\n  Components\n  ButtonGroupComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    projects/common/lib/components/button-group/button-group.component.ts\n\n\n    \n        Description\n    \n    \n        BUTTONGROUPCOMPONENT IS DEPRECATED!  DO NOT USE UNLESS YOU KNOW WHAT YOU'RE\nDOING.\nIf you need a Yes/No toggle, @see RadioComponent\n\n    \n\n\n    \n        Implements\n    \n    \n                    ControlValueAccessor\n    \n\n    \n        Example\n    \n    \n                \n                    \n\n                \n    \n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n            \n                providers\n                \n                                { provide: NG_VALUE_ACCESSOR, multi: true, useExisting: forwardRef(() => ButtonGroupComponent) }\n                \n            \n\n\n            \n                selector\n                common-button-group\n            \n\n            \n                styleUrls\n                ./button-group.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./button-group.component.html\n            \n\n            \n                viewProviders\n                \n                    \n                                { provide: ControlContainer, useExisting: forwardRef(() => NgForm) }\n                    \n                \n            \n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                _onChange\n                            \n                            \n                                    Public\n                                _onTouched\n                            \n                            \n                                buttonGroup\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                focus\n                            \n                            \n                                registerOnChange\n                            \n                            \n                                registerOnTouched\n                            \n                            \n                                setButtonGrpVal\n                            \n                            \n                                writeValue\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                data\n                            \n                            \n                                disabled\n                            \n                            \n                                errorMessageRequired\n                            \n                            \n                                label\n                            \n                            \n                                required\n                            \n                            \n                                showError\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                dataChange\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in projects/common/lib/components/button-group/button-group.component.ts:48\n                            \n                        \n\n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        data\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/button-group/button-group.component.ts:38\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        disabled\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/button-group/button-group.component.ts:41\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        errorMessageRequired\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'Field is required.'\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/button-group/button-group.component.ts:42\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        label\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'Default Checkbox'\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/button-group/button-group.component.ts:43\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        required\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : true\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/button-group/button-group.component.ts:39\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        showError\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/button-group/button-group.component.ts:40\n                            \n                        \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        dataChange\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/button-group/button-group.component.ts:44\n                            \n                        \n            \n        \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            focus\n                        \n                        \n                    \n                \n            \n            \n                \nfocus()\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/components/button-group/button-group.component.ts:61\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            registerOnChange\n                        \n                        \n                    \n                \n            \n            \n                \nregisterOnChange(fn: any)\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/components/button-group/button-group.component.ts:66\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    fn\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            registerOnTouched\n                        \n                        \n                    \n                \n            \n            \n                \nregisterOnTouched(fn: any)\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/components/button-group/button-group.component.ts:70\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    fn\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            setButtonGrpVal\n                        \n                        \n                    \n                \n            \n            \n                \nsetButtonGrpVal(val: any)\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/components/button-group/button-group.component.ts:55\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    val\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            writeValue\n                        \n                        \n                    \n                \n            \n            \n                \nwriteValue(value: any)\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/components/button-group/button-group.component.ts:74\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            _onChange\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : () => {...}\n                        \n                    \n                        \n                            \n                                    Defined in projects/common/lib/components/button-group/button-group.component.ts:47\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            _onTouched\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : () => {...}\n                        \n                    \n                        \n                            \n                                    Defined in projects/common/lib/components/button-group/button-group.component.ts:48\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            buttonGroup\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         ElementRef\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ViewChild('buttonGroup')\n                            \n                        \n                    \n                        \n                            \n                                    Defined in projects/common/lib/components/button-group/button-group.component.ts:45\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit, Input, Output, EventEmitter, ViewChild, ElementRef, forwardRef } from '@angular/core';\nimport { ControlContainer, ControlValueAccessor, NgForm, NG_VALUE_ACCESSOR } from '@angular/forms';\n\n/**\n * BUTTONGROUPCOMPONENT IS **DEPRECATED**!  **DO NOT USE** UNLESS YOU KNOW WHAT YOU'RE\n * DOING.\n *\n * If you need a Yes/No toggle, @see RadioComponent\n * @deprecated\n *\n *\n *\n *\n * @example\n *       \n *         \n *\n * @export\n */\n\n\n@Component({\n  selector: 'common-button-group',\n  templateUrl: './button-group.component.html',\n  styleUrls: ['./button-group.component.scss'],\n  viewProviders: [\n    { provide: ControlContainer, useExisting: forwardRef(() => NgForm ) }\n  ],\n  providers: [\n    { provide: NG_VALUE_ACCESSOR, multi: true, useExisting: forwardRef(() => ButtonGroupComponent )}\n  ]\n})\nexport class ButtonGroupComponent implements ControlValueAccessor {\n\n  @Input() data: boolean;\n  @Input() required: boolean = true;\n  @Input() showError: boolean = false;\n  @Input() disabled: boolean = false;\n  @Input() errorMessageRequired: string = 'Field is required.';\n  @Input() label: string = 'Default Checkbox';\n  @Output() dataChange: EventEmitter = new EventEmitter();\n  @ViewChild('buttonGroup') buttonGroup: ElementRef;\n\n  public _onChange = (_: any) => {};\n  public _onTouched = () => {};\n\n  constructor() {\n\n  }\n\n\n  setButtonGrpVal(val: any) {\n    this.dataChange.emit(val);\n    this._onChange(val);\n    this._onTouched();\n  }\n\n  focus() {\n    this.buttonGroup.nativeElement.focus();\n    this._onTouched();\n  }\n\n  registerOnChange(fn: any): void {\n    this._onChange = fn;\n  }\n\n  registerOnTouched(fn: any): void {\n    this._onTouched = fn;\n  }\n\n  writeValue(value: any): void {\n    this.data = value;\n  }\n}\n\n    \n\n    \n        \n  {{label}}\n  \n     {{answer.label}} \n    \n  \n  \n    {{errorMessageRequired}}\n  \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  {{label}}       {{answer.label}}             {{errorMessageRequired}}  '\n    var COMPONENTS = [{'name': 'AccordionCommonComponent', 'selector': 'common-accordion'},{'name': 'AddressComponent', 'selector': 'common-address'},{'name': 'ButtonComponent', 'selector': 'common-button'},{'name': 'ButtonGroupComponent', 'selector': 'common-button-group'},{'name': 'CaptchaComponent', 'selector': 'common-captcha'},{'name': 'CheckboxComponent', 'selector': 'common-checkbox'},{'name': 'CityComponent', 'selector': 'common-city'},{'name': 'ConfirmTemplateComponent', 'selector': 'common-confirm-template'},{'name': 'ConsentModalComponent', 'selector': 'common-consent-modal'},{'name': 'CoreBreadcrumbComponent', 'selector': 'common-core-breadcrumb'},{'name': 'CountryComponent', 'selector': 'common-country'},{'name': 'DateComponent', 'selector': 'common-date'},{'name': 'DatepickerComponent', 'selector': 'common-datepicker'},{'name': 'DropdownComponent', 'selector': 'common-dropdown'},{'name': 'EmailComponent', 'selector': 'common-email'},{'name': 'ErrorContainerComponent', 'selector': 'common-error-container'},{'name': 'FileUploaderComponent', 'selector': 'common-file-uploader'},{'name': 'FormActionBarComponent', 'selector': 'common-form-action-bar'},{'name': 'FormSubmitBarComponent', 'selector': 'common-form-submit-bar'},{'name': 'FullNameComponent', 'selector': 'common-full-name'},{'name': 'GeocoderInputComponent', 'selector': 'common-geocoder-input'},{'name': 'HeaderComponent', 'selector': 'common-header'},{'name': 'NameComponent', 'selector': 'common-name'},{'name': 'PageFrameworkComponent', 'selector': 'common-page-framework'},{'name': 'PageSectionComponent', 'selector': 'common-page-section'},{'name': 'PasswordComponent', 'selector': 'common-password'},{'name': 'PhnComponent', 'selector': 'common-phn'},{'name': 'PhoneNumberComponent', 'selector': 'common-phone-number'},{'name': 'PostalCodeComponent', 'selector': 'common-postal-code'},{'name': 'ProvinceComponent', 'selector': 'common-province'},{'name': 'RadioComponent', 'selector': 'common-radio'},{'name': 'SampleModalComponent', 'selector': 'common-sample-modal'},{'name': 'SinComponent', 'selector': 'common-sin'},{'name': 'StreetComponent', 'selector': 'common-street'},{'name': 'ThumbnailComponent', 'selector': 'common-thumbnail'},{'name': 'ToggleComponent', 'selector': 'common-toggle'},{'name': 'WizardProgressBarComponent', 'selector': 'common-wizard-progress-bar'},{'name': 'XiconButtonComponent', 'selector': 'common-xicon-button'}];\n    var DIRECTIVES = [{'name': 'DateFieldFormatDirective', 'selector': '[commonDateFieldFormat]'},{'name': 'DuplicateCheckDirective', 'selector': '[commonDuplicateCheck]'},{'name': 'ValidateBcPostalDirective', 'selector': '[commonValidateBcPostal]'},{'name': 'ValidateCityDirective', 'selector': '[commonValidateCity]'},{'name': 'ValidateNameDirective', 'selector': '[commonValidateName]'},{'name': 'ValidatePostalcodeDirective', 'selector': '[commonValidatePostalcode]'},{'name': 'ValidateRegionDirective', 'selector': '[commonValidateRegion]'},{'name': 'ValidateStreetDirective', 'selector': '[commonValidateStreet]'}];\n    var ACTUAL_COMPONENT = {'name': 'ButtonGroupComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/CaptchaDataService.html":{"url":"injectables/CaptchaDataService.html","title":"injectable - CaptchaDataService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  CaptchaDataService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/common/captcha/src/captcha-data.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                fetchAudio\n                            \n                            \n                                    Public\n                                fetchData\n                            \n                            \n                                    Public\n                                verifyCaptcha\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(httpClient: HttpClient)\n                    \n                \n                        \n                            \n                                Defined in projects/common/captcha/src/captcha-data.service.ts:16\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        httpClient\n                                                  \n                                                        \n                                                                        HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            fetchAudio\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    fetchAudio(apiBaseUrl: string, validation: string, translation?: string)\n                \n            \n\n\n            \n                \n                    Defined in projects/common/captcha/src/captcha-data.service.ts:40\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    apiBaseUrl\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    validation\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    translation\n                                    \n                                                string\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            fetchData\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    fetchData(apiBaseUrl: string, nonce: string)\n                \n            \n\n\n            \n                \n                    Defined in projects/common/captcha/src/captcha-data.service.ts:21\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    apiBaseUrl\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    nonce\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Observable>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            verifyCaptcha\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    verifyCaptcha(apiBaseUrl: string, nonce: string, answer: string, encryptedAnswer: string)\n                \n            \n\n\n            \n                \n                    Defined in projects/common/captcha/src/captcha-data.service.ts:29\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    apiBaseUrl\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    nonce\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    answer\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    encryptedAnswer\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Observable>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { HttpClient, HttpResponse } from '@angular/common/http';\n// import { Http, Response } from '@angular/http';\nimport { Observable } from 'rxjs';\n\n// payload returned from the server\n@Injectable()\nexport class ServerPayload {\n    nonce: string;\n    captcha: string;\n    validation: string;\n    expiry: string;\n}\n\n@Injectable()\nexport class CaptchaDataService {\n\n    constructor(private httpClient: HttpClient) { }\n    // private http: Http) { }\n\n    public fetchData(apiBaseUrl: string, nonce: string): Observable> {\n        return this.httpClient\n            .post(\n                apiBaseUrl + '/captcha',\n                { nonce: nonce },\n                { observe: 'response' });\n    }\n\n    public verifyCaptcha(apiBaseUrl: string,\n                            nonce: string,\n                            answer: string,\n                            encryptedAnswer: string): Observable> {\n        return this.httpClient\n            .post(\n                apiBaseUrl + '/verify/captcha',\n                { nonce: nonce, answer: answer, validation: encryptedAnswer },\n                { observe: 'response' });\n    }\n\n    public fetchAudio(apiBaseUrl: string, validation: string, translation?: string) {\n        const payload: any = { validation: validation };\n        if (translation) {\n            payload.translation = translation;\n        }\n        return this.httpClient\n            .post(\n                apiBaseUrl + '/captcha/audio',\n                payload,\n                { observe: 'response' });\n    }\n    /*\n      fetchData(apiBaseUrl: string, nonce: string): Observable {\n        return this.http.post(apiBaseUrl + '/captcha', {nonce: nonce}, {});\n      }\n\n      verifyCaptcha(apiBaseUrl: string, nonce: string, answer: string, encryptedAnswer: string): Observable {\n        return this.http.post(apiBaseUrl + '/verify/captcha', {nonce: nonce, answer: answer, validation: encryptedAnswer}, {});\n      }\n\n      fetchAudio(apiBaseUrl: string, validation: string): Observable {\n        return this.http.post(apiBaseUrl + '/captcha/audio', {validation: validation}, {});\n      }\n    */\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/CaptchaModule.html":{"url":"modules/CaptchaModule.html","title":"module - CaptchaModule","body":"\n                   \n\n\n\n\n    Modules\n    CaptchaModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_CaptchaModule\n\n\n\ncluster_CaptchaModule_declarations\n\n\n\ncluster_CaptchaModule_exports\n\n\n\ncluster_CaptchaModule_providers\n\n\n\n\nCaptchaComponent\n\nCaptchaComponent\n\n\n\nCaptchaModule\n\nCaptchaModule\n\nCaptchaModule -->\n\nCaptchaComponent->CaptchaModule\n\n\n\n\n\nCaptchaComponent \n\nCaptchaComponent \n\nCaptchaComponent  -->\n\nCaptchaModule->CaptchaComponent \n\n\n\n\n\nCaptchaDataService\n\nCaptchaDataService\n\nCaptchaModule -->\n\nCaptchaDataService->CaptchaModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Design Guidelines\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            projects/common/captcha/src/captcha.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            CaptchaComponent\n                        \n                    \n                \n                \n                    Providers\n                    \n                        \n                            CaptchaDataService\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            CaptchaComponent\n                        \n                    \n                \n            \n        \n\n        \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Static\n                            forRoot\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    forRoot()\n                \n            \n\n\n            \n                \n                    Defined in projects/common/captcha/src/captcha.module.ts:27\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     ModuleWithProviders\n\n                    \n                \n            \n        \n    \n\n    \n\n    \n        CAPTCHA Module\nExample:\nimport { CaptchaModule } from 'moh-common-lib/captcha'\n@NgModule({\n    declarations: [ ... ],\n    providers: [ ... ],\n    imports: [\n        ...\n        CaptchaModule\n    ]\n})\nimport { CaptchaModule } from 'moh-common-lib/captcha';\n\n@NgModule({\n    declarations: [ ... ],\n    providers: [ ... ],\n    imports: [\n        ...\n        CaptchaModule\n    ]\n})Then register your application module and use \n// tip: set nonce to a UUID().\nThere must be a configured CAPTCHA service deployed to OpenShift to use this component. You then must point apiBaseUrl to point to the service.\nKnown Issues\n\n    \n\n    \n        import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule, ModuleWithProviders } from '@angular/core';\nimport { HttpClientModule } from '@angular/common/http';\nimport { FormsModule } from '@angular/forms';\n\nimport { CaptchaComponent } from './captcha.component';\nimport { CaptchaDataService } from './captcha-data.service';\nimport { CommonModule } from '@angular/common';\n\n@NgModule({\n  declarations: [\n    CaptchaComponent\n  ],\n  imports: [\n    HttpClientModule,\n    CommonModule,\n    FormsModule\n  ],\n  providers: [\n    CaptchaDataService\n  ],\n  exports: [\n    CaptchaComponent\n  ],\n})\nexport class CaptchaModule {\n  static forRoot(): ModuleWithProviders {\n    return {\n      ngModule: CaptchaModule,\n      providers: [CaptchaDataService]\n    };\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/CheckCompleteBaseService.html":{"url":"injectables/CheckCompleteBaseService.html","title":"injectable - CheckCompleteBaseService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  CheckCompleteBaseService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/common/lib/services/check-complete-base.service.ts\n        \n\n            \n                Description\n            \n            \n                Extend this class when creating a service to create your custom Route Guard\nlogic.  This class should work as-is for simple use-cases.  For Route Guard\nsetup @see RouteGuardService.\n\n            \n\n\n            \n                Example\n            \n            \n            \n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                _bypassGuards\n                            \n                            \n                                    Private\n                                _startUrl\n                            \n                            \n                                    Public\n                                pageCheckList\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                canBypassGuards\n                            \n                            \n                                    Public\n                                getStartUrl\n                            \n                            \n                                    Protected\n                                getUrlIndex\n                            \n                            \n                                    Public\n                                isComplete\n                            \n                            \n                                    Public\n                                isPageComplete\n                            \n                            \n                                    Protected\n                                isPageListEmpty\n                            \n                            \n                                    Public\n                                isPrerequisiteComplete\n                            \n                            \n                                    Public\n                                setPageComplete\n                            \n                            \n                                    Public\n                                setPageIncomplete\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    startUrl\n                                \n                                \n                                    bypassGuards\n                                \n                            \n                        \n                    \n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(router: Router)\n                    \n                \n                        \n                            \n                                Defined in projects/common/lib/services/check-complete-base.service.ts:35\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            canBypassGuards\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    canBypassGuards()\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/services/check-complete-base.service.ts:47\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         boolean\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            getStartUrl\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getStartUrl()\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/services/check-complete-base.service.ts:51\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            getUrlIndex\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getUrlIndex(url: string)\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/services/check-complete-base.service.ts:107\n                \n            \n\n\n            \n                \n                    Index of URL in the items list, -1 if not exist\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    url\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         number\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            isComplete\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    isComplete()\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/services/check-complete-base.service.ts:99\n                \n            \n\n\n            \n                \n                    Check for incomplete pages\n\n\n                    \n                        Returns :         boolean\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            isPageComplete\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    isPageComplete(url: string)\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/services/check-complete-base.service.ts:88\n                \n            \n\n\n            \n                \n                    Indicates whether page has been completed or not.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    url\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            isPageListEmpty\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    isPageListEmpty()\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/services/check-complete-base.service.ts:111\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         boolean\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            isPrerequisiteComplete\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    isPrerequisiteComplete()\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/services/check-complete-base.service.ts:56\n                \n            \n\n\n            \n                \n                    Any prerequisites that need list of pages \n\n\n                    \n                        Returns :         boolean\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            setPageComplete\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    setPageComplete()\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/services/check-complete-base.service.ts:78\n                \n            \n\n\n            \n                \n                    Sets the page to completed, allowing applicant to proceed to next page.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            setPageIncomplete\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    setPageIncomplete()\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/services/check-complete-base.service.ts:63\n                \n            \n\n\n            \n                \n                    Sets page to not be completed, so applicants cannot complete application out of sequence\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            _bypassGuards\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in projects/common/lib/services/check-complete-base.service.ts:35\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            _startUrl\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : ''\n                        \n                    \n                        \n                            \n                                    Defined in projects/common/lib/services/check-complete-base.service.ts:34\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            pageCheckList\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     PageListInterface[]\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in projects/common/lib/services/check-complete-base.service.ts:32\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        startUrl\n                    \n                \n\n\n                \n                    \n                        setstartUrl(url: string)\n                    \n                \n                            \n                                \n                                    Defined in projects/common/lib/services/check-complete-base.service.ts:39\n                                \n                            \n                    \n                        \n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                        Type\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                            url\n                                                    \n                                                            \n                                                                            string\n                                                            \n                                                    \n                                                        \n                                                                No\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :         void\n\n                                \n                        \n                    \n            \n        \n        \n            \n                \n                    \n                        \n                        bypassGuards\n                    \n                \n\n\n                \n                    \n                        setbypassGuards(bypass: boolean)\n                    \n                \n                            \n                                \n                                    Defined in projects/common/lib/services/check-complete-base.service.ts:43\n                                \n                            \n                    \n                        \n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                        Type\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                            bypass\n                                                    \n                                                            \n                                                                            boolean\n                                                            \n                                                    \n                                                        \n                                                                No\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :         void\n\n                                \n                        \n                    \n            \n        \n\n    \n\n\n    \n        import { Router } from '@angular/router';\nimport { AbstractPgCheckService } from './abstract-pg-check.service';\nimport { Injectable } from '@angular/core';\n\n/* TODO: Revise - does not work quite correct when there is no landing page.\n * @depreciated\n */\n\n\n\n/**\n * Interface for used when checking completeness of item\n */\nexport interface PageListInterface {\n  route: string;\n  isComplete: boolean;\n  [key: string]: any;\n}\n\n/**\n * Extend this class when creating a service to create your custom Route Guard\n * logic.  This class should work as-is for simple use-cases.  For Route Guard\n * setup @see RouteGuardService.\n *\n * @see RouteGuardService\n */\n@Injectable({\n  providedIn: 'root'\n})\nexport class CheckCompleteBaseService implements AbstractPgCheckService {\n\n  public pageCheckList: PageListInterface [] = [];\n\n  private _startUrl: string = '';\n  private _bypassGuards: boolean = false;\n\n  constructor( protected router: Router ) {}\n\n  set startUrl( url: string ) {\n    this._startUrl = url;\n  }\n\n  set bypassGuards( bypass: boolean) {\n    this._bypassGuards = bypass;\n  }\n\n  public canBypassGuards(): boolean {\n    return this._bypassGuards;\n  }\n\n  public getStartUrl(): string {\n    return this._startUrl;\n  }\n\n  /** Any prerequisites that need list of pages */\n  public isPrerequisiteComplete(): boolean {\n    return !this.isPageListEmpty();\n  }\n\n  /**\n   *  Sets page to not be completed, so applicants cannot complete application out of sequence\n   */\n  public setPageIncomplete(): void {\n    const idx = this.getUrlIndex( this.router.url );\n    if ( !this.isPageListEmpty() ) { // Check guards could be turned off in dev environment\n      this.pageCheckList = this.pageCheckList.map((item, index) => {\n        if (index >= idx) {\n          item.isComplete = false;\n        }\n        return item;\n      });\n    }\n  }\n\n  /**\n   * Sets the page to completed, allowing applicant to proceed to next page.\n   */\n  public setPageComplete(): void {\n    const idx = this.getUrlIndex( this.router.url );\n    if ( !this.isPageListEmpty() ) { // Check guards could be turned in dev environment\n      this.pageCheckList[idx].isComplete = true;\n    }\n  }\n\n  /**\n   * Indicates whether page has been completed or not.\n   */\n  public isPageComplete( url: string ): boolean {\n\n    const idx = this.getUrlIndex( url );\n\n    // returns previous items isComplete value\n    return (idx - 1 >= 0) ? this.pageCheckList[idx - 1].isComplete : true;\n  }\n\n  /**\n   * Check for incomplete pages\n   */\n  public isComplete(): boolean {\n    const incompletePages = this.pageCheckList.filter( x => x.isComplete !== true );\n    return (incompletePages.length !== 0 ? false : true );\n  }\n\n  /**\n   * Index of URL in the items list, -1 if not exist\n   */\n  protected getUrlIndex( url: string ): number {\n    return this.pageCheckList.findIndex( x => url.includes( x.route ) );\n  }\n\n  protected isPageListEmpty() {\n    return ( this.pageCheckList.length === 0 );\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/CheckboxComponent.html":{"url":"components/CheckboxComponent.html","title":"component - CheckboxComponent","body":"\n                   \n\n\n\n\n\n  Components\n  CheckboxComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    projects/common/lib/components/checkbox/checkbox.component.ts\n\n\n    \n        Description\n    \n    \n        Checkbox component is a input checkbox\n\n    \n\n    \n        Extends\n    \n    \n                Base\n    \n\n    \n        Implements\n    \n    \n                    OnInit\n                    ControlValueAccessor\n    \n\n    \n        Example\n    \n    \n                \n                    \n\n                \n    \n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                common-checkbox\n            \n\n            \n                styleUrls\n                ./checkbox.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./checkbox.component.html\n            \n\n            \n                viewProviders\n                \n                    \n                                { provide: ControlContainer, useExisting: forwardRef(() => NgForm) }\n                    \n                \n            \n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                _onChange\n                            \n                            \n                                    Public\n                                _onTouched\n                            \n                            \n                                checkbox\n                            \n                            \n                                    Public\n                                controlDir\n                            \n                            \n                                defaultErrorMessage\n                            \n                            \n                                    Public\n                                objectId\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                focus\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                registerOnChange\n                            \n                            \n                                registerOnTouched\n                            \n                            \n                                setCheckboxVal\n                            \n                            \n                                writeValue\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                data\n                            \n                            \n                                disabled\n                            \n                            \n                                errorMessageRequired\n                            \n                            \n                                label\n                            \n                            \n                                required\n                            \n                            \n                                showError\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                dataChange\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(controlDir: NgControl)\n                    \n                \n                        \n                            \n                                Defined in projects/common/lib/components/checkbox/checkbox.component.ts:47\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        controlDir\n                                                  \n                                                        \n                                                                        NgControl\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        data\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/checkbox/checkbox.component.ts:36\n                            \n                        \n                \n                    \n                        You can bind to [(data)] OR you can use [(ngModel)] but don't use both.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        disabled\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/checkbox/checkbox.component.ts:38\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        errorMessageRequired\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/checkbox/checkbox.component.ts:40\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        label\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'Default Checkbox'\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/checkbox/checkbox.component.ts:39\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        required\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/checkbox/checkbox.component.ts:37\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        showError\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/checkbox/checkbox.component.ts:41\n                            \n                        \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        dataChange\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/checkbox/checkbox.component.ts:42\n                            \n                        \n            \n        \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            focus\n                        \n                        \n                    \n                \n            \n            \n                \nfocus()\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/components/checkbox/checkbox.component.ts:71\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/components/checkbox/checkbox.component.ts:56\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            registerOnChange\n                        \n                        \n                    \n                \n            \n            \n                \nregisterOnChange(fn: any)\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/components/checkbox/checkbox.component.ts:75\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    fn\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            registerOnTouched\n                        \n                        \n                    \n                \n            \n            \n                \nregisterOnTouched(fn: any)\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/components/checkbox/checkbox.component.ts:79\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    fn\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            setCheckboxVal\n                        \n                        \n                    \n                \n            \n            \n                \nsetCheckboxVal(event: boolean)\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/components/checkbox/checkbox.component.ts:64\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    event\n                                    \n                                                boolean\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            writeValue\n                        \n                        \n                    \n                \n            \n            \n                \nwriteValue(value: any)\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/components/checkbox/checkbox.component.ts:83\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            _onChange\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : () => {...}\n                        \n                    \n                        \n                            \n                                    Defined in projects/common/lib/components/checkbox/checkbox.component.ts:46\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            _onTouched\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : () => {...}\n                        \n                    \n                        \n                            \n                                    Defined in projects/common/lib/components/checkbox/checkbox.component.ts:47\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            checkbox\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         ElementRef\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ViewChild('checkbox')\n                            \n                        \n                    \n                        \n                            \n                                    Defined in projects/common/lib/components/checkbox/checkbox.component.ts:43\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            controlDir\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         NgControl\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Optional()@Self()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in projects/common/lib/components/checkbox/checkbox.component.ts:49\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            defaultErrorMessage\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : ''\n                        \n                    \n                        \n                            \n                                    Defined in projects/common/lib/components/checkbox/checkbox.component.ts:31\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            objectId\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : UUID.UUID()\n                        \n                    \n                            \n                                \n                                    Inherited from         Base\n\n                                \n                            \n                        \n                            \n                                    Defined in         Base:11\n\n                            \n                        \n\n                \n                    \n                        An identifier for parents to keep track of components \n\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import { forwardRef, Component, OnInit, Input, Output, EventEmitter, ViewChild, ElementRef, Optional, Self} from '@angular/core';\nimport { Base } from '../../models/base';\nimport { ControlContainer, ControlValueAccessor, NgForm, NG_VALUE_ACCESSOR, NgControl } from '@angular/forms';\n/**\n * Checkbox component is a input checkbox\n *\n * @example\n *       \n *       \n *\n * @export\n */\n\n\n@Component({\n  selector: 'common-checkbox',\n  templateUrl: './checkbox.component.html',\n  styleUrls: ['./checkbox.component.scss'],\n\n  // TODO: Remove to make custom form control -- possible breaking change\n  viewProviders: [\n    { provide: ControlContainer, useExisting: forwardRef(() => NgForm ) }\n  ]\n})\nexport class CheckboxComponent extends Base implements  OnInit, ControlValueAccessor {\n  defaultErrorMessage: string = '';\n\n  /**\n   * You can bind to [(data)] OR you can use [(ngModel)] but don't use both.\n   */\n  @Input() data: boolean = false;\n  @Input() required: boolean = false;  // TODO: Remove - breaking change\n  @Input() disabled: boolean = false;\n  @Input() label: string = 'Default Checkbox';\n  @Input() errorMessageRequired: string;\n  @Input() showError: boolean;\n  @Output() dataChange: EventEmitter = new EventEmitter();\n  @ViewChild('checkbox') checkbox: ElementRef;\n\n\n  public _onChange = (_: any) => {};\n  public _onTouched = () => {};\n\n  constructor( @Optional() @Self() public controlDir: NgControl ) {\n    super();\n    if ( controlDir ) {\n      controlDir.valueAccessor = this;\n    }\n  }\n\n  ngOnInit() {\n    if ( this.errorMessageRequired ) {\n      this.defaultErrorMessage = this.errorMessageRequired;\n    } else {\n      this.defaultErrorMessage = this.label + ' is required.';\n    }\n  }\n\n  setCheckboxVal(event: boolean) {\n    this.data = event;\n    this.dataChange.emit(this.data);\n    this._onChange(event);\n    this._onTouched();\n  }\n\n  focus() {\n    this.checkbox.nativeElement.focus();\n  }\n\n  registerOnChange(fn: any): void {\n    this._onChange = fn;\n  }\n\n  registerOnTouched(fn: any): void {\n    this._onTouched = fn;\n  }\n\n  writeValue(value: any): void {\n    this.data = value;\n  }\n}\n\n    \n\n    \n        \n\n{{label}}\n\n\n\n    {{defaultErrorMessage}}\n\n\n\n  {{defaultErrorMessage}}\n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '{{label}}    {{defaultErrorMessage}}  {{defaultErrorMessage}}'\n    var COMPONENTS = [{'name': 'AccordionCommonComponent', 'selector': 'common-accordion'},{'name': 'AddressComponent', 'selector': 'common-address'},{'name': 'ButtonComponent', 'selector': 'common-button'},{'name': 'ButtonGroupComponent', 'selector': 'common-button-group'},{'name': 'CaptchaComponent', 'selector': 'common-captcha'},{'name': 'CheckboxComponent', 'selector': 'common-checkbox'},{'name': 'CityComponent', 'selector': 'common-city'},{'name': 'ConfirmTemplateComponent', 'selector': 'common-confirm-template'},{'name': 'ConsentModalComponent', 'selector': 'common-consent-modal'},{'name': 'CoreBreadcrumbComponent', 'selector': 'common-core-breadcrumb'},{'name': 'CountryComponent', 'selector': 'common-country'},{'name': 'DateComponent', 'selector': 'common-date'},{'name': 'DatepickerComponent', 'selector': 'common-datepicker'},{'name': 'DropdownComponent', 'selector': 'common-dropdown'},{'name': 'EmailComponent', 'selector': 'common-email'},{'name': 'ErrorContainerComponent', 'selector': 'common-error-container'},{'name': 'FileUploaderComponent', 'selector': 'common-file-uploader'},{'name': 'FormActionBarComponent', 'selector': 'common-form-action-bar'},{'name': 'FormSubmitBarComponent', 'selector': 'common-form-submit-bar'},{'name': 'FullNameComponent', 'selector': 'common-full-name'},{'name': 'GeocoderInputComponent', 'selector': 'common-geocoder-input'},{'name': 'HeaderComponent', 'selector': 'common-header'},{'name': 'NameComponent', 'selector': 'common-name'},{'name': 'PageFrameworkComponent', 'selector': 'common-page-framework'},{'name': 'PageSectionComponent', 'selector': 'common-page-section'},{'name': 'PasswordComponent', 'selector': 'common-password'},{'name': 'PhnComponent', 'selector': 'common-phn'},{'name': 'PhoneNumberComponent', 'selector': 'common-phone-number'},{'name': 'PostalCodeComponent', 'selector': 'common-postal-code'},{'name': 'ProvinceComponent', 'selector': 'common-province'},{'name': 'RadioComponent', 'selector': 'common-radio'},{'name': 'SampleModalComponent', 'selector': 'common-sample-modal'},{'name': 'SinComponent', 'selector': 'common-sin'},{'name': 'StreetComponent', 'selector': 'common-street'},{'name': 'ThumbnailComponent', 'selector': 'common-thumbnail'},{'name': 'ToggleComponent', 'selector': 'common-toggle'},{'name': 'WizardProgressBarComponent', 'selector': 'common-wizard-progress-bar'},{'name': 'XiconButtonComponent', 'selector': 'common-xicon-button'}];\n    var DIRECTIVES = [{'name': 'DateFieldFormatDirective', 'selector': '[commonDateFieldFormat]'},{'name': 'DuplicateCheckDirective', 'selector': '[commonDuplicateCheck]'},{'name': 'ValidateBcPostalDirective', 'selector': '[commonValidateBcPostal]'},{'name': 'ValidateCityDirective', 'selector': '[commonValidateCity]'},{'name': 'ValidateNameDirective', 'selector': '[commonValidateName]'},{'name': 'ValidatePostalcodeDirective', 'selector': '[commonValidatePostalcode]'},{'name': 'ValidateRegionDirective', 'selector': '[commonValidateRegion]'},{'name': 'ValidateStreetDirective', 'selector': '[commonValidateStreet]'}];\n    var ACTUAL_COMPONENT = {'name': 'CheckboxComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/CityComponent.html":{"url":"components/CityComponent.html","title":"component - CityComponent","body":"\n                   \n\n\n\n\n\n  Components\n  CityComponent\n\n\n\n        \n            Info\n        \n        \n            Design Guidelines\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    projects/common/lib/components/city/city.component.ts\n\n\n\n    \n        Extends\n    \n    \n                AbstractFormControl\n    \n\n    \n        Implements\n    \n    \n                    OnInit\n                    ControlValueAccessor\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                common-city\n            \n\n            \n                styleUrls\n                ./city.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./city.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                _defaultErrMsg\n                            \n                            \n                                city\n                            \n                            \n                                    Public\n                                controlDir\n                            \n                            \n                                    Abstract\n                                _defaultErrMsg\n                            \n                            \n                                _onChange\n                            \n                            \n                                _onTouched\n                            \n                            \n                                    Public\n                                objectId\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                            \n                                onBlur\n                            \n                            \n                                onValueChange\n                            \n                            \n                                writeValue\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                registerOnChange\n                            \n                            \n                                registerOnTouched\n                            \n                            \n                                    Protected\n                                registerValidation\n                            \n                            \n                                setDisabledState\n                            \n                            \n                                    Protected\n                                setErrorMsg\n                            \n                            \n                                    Abstract\n                                writeValue\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                label\n                            \n                            \n                                labelforId\n                            \n                            \n                                maxlength\n                            \n                            \n                                placeholder\n                            \n                            \n                                value\n                            \n                            \n                                disabled\n                            \n                            \n                                errorMessage\n                            \n                            \n                                label\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                blur\n                            \n                            \n                                valueChange\n                            \n                        \n                    \n                \n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    value\n                                \n                            \n                        \n                    \n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(controlDir: NgControl)\n                    \n                \n                        \n                            \n                                Defined in projects/common/lib/components/city/city.component.ts:38\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        controlDir\n                                                  \n                                                        \n                                                                        NgControl\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        label\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'City'\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/city/city.component.ts:14\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        labelforId\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'city_' + this.objectId\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/city/city.component.ts:16\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        maxlength\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : '100'\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/city/city.component.ts:15\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        placeholder\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'City name'\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/city/city.component.ts:17\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        value\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/city/city.component.ts:20\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        disabled\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                            \n                                \n                                    Inherited from         AbstractFormControl\n\n                                \n                            \n                        \n                            \n                                    Defined in         AbstractFormControl:15\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        errorMessage\n                    \n                \n                \n                    \n                        Type :         ErrorMessage\n\n                    \n                \n                            \n                                \n                                    Inherited from         AbstractFormControl\n\n                                \n                            \n                        \n                            \n                                    Defined in         AbstractFormControl:18\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        label\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                            \n                                \n                                    Inherited from         AbstractFormControl\n\n                                \n                            \n                        \n                            \n                                    Defined in         AbstractFormControl:13\n\n                            \n                        \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        blur\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/city/city.component.ts:30\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        valueChange\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/city/city.component.ts:29\n                            \n                        \n            \n        \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/components/city/city.component.ts:47\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            onBlur\n                        \n                        \n                    \n                \n            \n            \n                \nonBlur(event: any)\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/components/city/city.component.ts:57\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    event\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            onValueChange\n                        \n                        \n                    \n                \n            \n            \n                \nonValueChange(value: string)\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/components/city/city.component.ts:51\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            writeValue\n                        \n                        \n                    \n                \n            \n            \n                \nwriteValue(value: string)\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/components/city/city.component.ts:62\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Inherited from         AbstractFormControl\n\n                \n            \n            \n                \n                        Defined in         AbstractFormControl:26\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            registerOnChange\n                        \n                        \n                    \n                \n            \n            \n                \nregisterOnChange(fn: any)\n                \n            \n\n\n            \n                \n                    Inherited from         AbstractFormControl\n\n                \n            \n            \n                \n                        Defined in         AbstractFormControl:34\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    fn\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            registerOnTouched\n                        \n                        \n                    \n                \n            \n            \n                \nregisterOnTouched(fn: any)\n                \n            \n\n\n            \n                \n                    Inherited from         AbstractFormControl\n\n                \n            \n            \n                \n                        Defined in         AbstractFormControl:39\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    fn\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            registerValidation\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    registerValidation(ngControl: NgControl, fn: ValidationErrors)\n                \n            \n\n\n            \n                \n                    Inherited from         AbstractFormControl\n\n                \n            \n            \n                \n                        Defined in         AbstractFormControl:65\n\n                \n            \n\n\n            \n                \n                    Register self validating method\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    ngControl\n                                    \n                                                NgControl\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                    \n                                \n                                \n                                    fn\n                                    \n                                                ValidationErrors\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        function for validating self\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            setDisabledState\n                        \n                        \n                    \n                \n            \n            \n                \nsetDisabledState(isDisabled: boolean)\n                \n            \n\n\n            \n                \n                    Inherited from         AbstractFormControl\n\n                \n            \n            \n                \n                        Defined in         AbstractFormControl:44\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    isDisabled\n                                    \n                                                boolean\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            setErrorMsg\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    setErrorMsg()\n                \n            \n\n\n            \n                \n                    Inherited from         AbstractFormControl\n\n                \n            \n            \n                \n                        Defined in         AbstractFormControl:48\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Abstract\n                            writeValue\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    writeValue(value: any)\n                \n            \n\n\n            \n                \n                    Inherited from         AbstractFormControl\n\n                \n            \n            \n                \n                        Defined in         AbstractFormControl:31\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            _defaultErrMsg\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         ErrorMessage\n\n                        \n                    \n                    \n                        \n                            Default value : {\n    required: LabelReplacementTag + ' is required.',\n    invalidChar: LabelReplacementTag + ' must contain letters and may include numbers and special characters ' +\n                 'such as hyphens, periods, apostrophes and blank characters.'\n  }\n                        \n                    \n                        \n                            \n                                    Defined in projects/common/lib/components/city/city.component.ts:34\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            city\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : ''\n                        \n                    \n                        \n                            \n                                    Defined in projects/common/lib/components/city/city.component.ts:32\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            controlDir\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         NgControl\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Optional()@Self()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in projects/common/lib/components/city/city.component.ts:40\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Abstract\n                            _defaultErrMsg\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         ErrorMessage\n\n                        \n                    \n                    \n                        \n                            Default value : {}\n                        \n                    \n                            \n                                \n                                    Inherited from         AbstractFormControl\n\n                                \n                            \n                        \n                            \n                                    Defined in         AbstractFormControl:10\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            _onChange\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : () => {...}\n                        \n                    \n                            \n                                \n                                    Inherited from         AbstractFormControl\n\n                                \n                            \n                        \n                            \n                                    Defined in         AbstractFormControl:22\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            _onTouched\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : () => {...}\n                        \n                    \n                            \n                                \n                                    Inherited from         AbstractFormControl\n\n                                \n                            \n                        \n                            \n                                    Defined in         AbstractFormControl:23\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            objectId\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : UUID.UUID()\n                        \n                    \n                            \n                                \n                                    Inherited from         Base\n\n                                \n                            \n                        \n                            \n                                    Defined in         Base:11\n\n                            \n                        \n\n                \n                    \n                        An identifier for parents to keep track of components \n\n                    \n                \n\n            \n        \n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        value\n                    \n                \n\n                \n                    \n                        getvalue()\n                    \n                \n                            \n                                \n                                    Defined in projects/common/lib/components/city/city.component.ts:25\n                                \n                            \n\n                \n                    \n                        setvalue(val: string)\n                    \n                \n                            \n                                \n                                    Defined in projects/common/lib/components/city/city.component.ts:20\n                                \n                            \n                    \n                        \n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                        Type\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                            val\n                                                    \n                                                            \n                                                                            string\n                                                            \n                                                    \n                                                        \n                                                                No\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :         void\n\n                                \n                        \n                    \n            \n        \n\n\n\n    \n        Design Guidelines\nLorem ipsum dolor sit amet consectetur adipisicing elit. Sapiente, magnam ipsam. Sit quasi natus architecto rerum unde non provident! Quia nisi facere amet iste mollitia voluptatem non molestias esse optio?\nAperiam fugiat consectetur temporibus, iste repellat, quisquam sapiente nisi distinctio optio, autem nemo tenetur error eum voluptatibus ab accusamus quis voluptatum blanditiis. Quam et ut reprehenderit vitae nobis, at ipsum!\nExercitationem pariatur animi repudiandae corporis obcaecati ratione ducimus beatae quam, nostrum magnam unde numquam quidem cupiditate odit id. Beatae alias molestiae, optio incidunt harum quia voluptates deserunt sequi. Nesciunt, optio.\n\n    \n\n    \n        import { Component, OnInit, Input, Output, EventEmitter, Optional, Self } from '@angular/core';\nimport { ControlValueAccessor, NgControl } from '@angular/forms';\n\nimport { AbstractFormControl } from '../../models/abstract-form-control';\nimport { ErrorMessage, LabelReplacementTag } from '../../models/error-message.interface';\n\n@Component({\n  selector: 'common-city',\n  templateUrl: './city.component.html',\n  styleUrls: ['./city.component.scss']\n})\nexport class CityComponent extends AbstractFormControl implements OnInit, ControlValueAccessor  {\n\n  @Input() label: string = 'City';\n  @Input() maxlength: string = '100';\n  @Input() labelforId: string = 'city_' + this.objectId;\n  @Input() placeholder: string = 'City name';\n\n  @Input()\n  set value( val: string ) {\n    if ( val ) {\n      this.city = val;\n    }\n  }\n  get value() {\n    return this.city;\n  }\n\n  @Output() valueChange: EventEmitter = new EventEmitter();\n  @Output() blur: EventEmitter = new EventEmitter();\n\n  city: string = '';\n\n  _defaultErrMsg: ErrorMessage = {\n    required: LabelReplacementTag + ' is required.',\n    invalidChar: LabelReplacementTag + ' must contain letters and may include numbers and special characters ' +\n                 'such as hyphens, periods, apostrophes and blank characters.'\n  };\n\n  constructor( @Optional() @Self() public controlDir: NgControl ) {\n    super();\n    if ( controlDir ) {\n      controlDir.valueAccessor = this;\n    }\n  }\n\n  ngOnInit() {\n    super.ngOnInit();\n  }\n\n  onValueChange( value: string ) {\n    this.city = value;\n    this._onChange( value );\n    this.valueChange.emit( value );\n  }\n\n  onBlur( event: any ) {\n    this._onTouched( event );\n    this.blur.emit( event );\n  }\n\n  writeValue( value: string ): void {\n    if ( value !== undefined ) {\n      this.city = value;\n    }\n  }\n}\n\n    \n\n    \n        {{label}}\n\n\n \n\n  \n    {{_defaultErrMsg.required}}\n  \n  \n    {{_defaultErrMsg.invalidChar}}\n  \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '{{label}}       {{_defaultErrMsg.required}}        {{_defaultErrMsg.invalidChar}}  '\n    var COMPONENTS = [{'name': 'AccordionCommonComponent', 'selector': 'common-accordion'},{'name': 'AddressComponent', 'selector': 'common-address'},{'name': 'ButtonComponent', 'selector': 'common-button'},{'name': 'ButtonGroupComponent', 'selector': 'common-button-group'},{'name': 'CaptchaComponent', 'selector': 'common-captcha'},{'name': 'CheckboxComponent', 'selector': 'common-checkbox'},{'name': 'CityComponent', 'selector': 'common-city'},{'name': 'ConfirmTemplateComponent', 'selector': 'common-confirm-template'},{'name': 'ConsentModalComponent', 'selector': 'common-consent-modal'},{'name': 'CoreBreadcrumbComponent', 'selector': 'common-core-breadcrumb'},{'name': 'CountryComponent', 'selector': 'common-country'},{'name': 'DateComponent', 'selector': 'common-date'},{'name': 'DatepickerComponent', 'selector': 'common-datepicker'},{'name': 'DropdownComponent', 'selector': 'common-dropdown'},{'name': 'EmailComponent', 'selector': 'common-email'},{'name': 'ErrorContainerComponent', 'selector': 'common-error-container'},{'name': 'FileUploaderComponent', 'selector': 'common-file-uploader'},{'name': 'FormActionBarComponent', 'selector': 'common-form-action-bar'},{'name': 'FormSubmitBarComponent', 'selector': 'common-form-submit-bar'},{'name': 'FullNameComponent', 'selector': 'common-full-name'},{'name': 'GeocoderInputComponent', 'selector': 'common-geocoder-input'},{'name': 'HeaderComponent', 'selector': 'common-header'},{'name': 'NameComponent', 'selector': 'common-name'},{'name': 'PageFrameworkComponent', 'selector': 'common-page-framework'},{'name': 'PageSectionComponent', 'selector': 'common-page-section'},{'name': 'PasswordComponent', 'selector': 'common-password'},{'name': 'PhnComponent', 'selector': 'common-phn'},{'name': 'PhoneNumberComponent', 'selector': 'common-phone-number'},{'name': 'PostalCodeComponent', 'selector': 'common-postal-code'},{'name': 'ProvinceComponent', 'selector': 'common-province'},{'name': 'RadioComponent', 'selector': 'common-radio'},{'name': 'SampleModalComponent', 'selector': 'common-sample-modal'},{'name': 'SinComponent', 'selector': 'common-sin'},{'name': 'StreetComponent', 'selector': 'common-street'},{'name': 'ThumbnailComponent', 'selector': 'common-thumbnail'},{'name': 'ToggleComponent', 'selector': 'common-toggle'},{'name': 'WizardProgressBarComponent', 'selector': 'common-wizard-progress-bar'},{'name': 'XiconButtonComponent', 'selector': 'common-xicon-button'}];\n    var DIRECTIVES = [{'name': 'DateFieldFormatDirective', 'selector': '[commonDateFieldFormat]'},{'name': 'DuplicateCheckDirective', 'selector': '[commonDuplicateCheck]'},{'name': 'ValidateBcPostalDirective', 'selector': '[commonValidateBcPostal]'},{'name': 'ValidateCityDirective', 'selector': '[commonValidateCity]'},{'name': 'ValidateNameDirective', 'selector': '[commonValidateName]'},{'name': 'ValidatePostalcodeDirective', 'selector': '[commonValidatePostalcode]'},{'name': 'ValidateRegionDirective', 'selector': '[commonValidateRegion]'},{'name': 'ValidateStreetDirective', 'selector': '[commonValidateStreet]'}];\n    var ACTUAL_COMPONENT = {'name': 'CityComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/CommonAttachmentJson.html":{"url":"interfaces/CommonAttachmentJson.html","title":"interface - CommonAttachmentJson","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  CommonAttachmentJson\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/common/lib/models/images.model.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        attachmentDocumentType\n                                \n                                \n                                        attachmentOrder\n                                \n                                \n                                        attachmentUuid\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        attachmentDocumentType\n                                    \n                                \n                                \n                                    \n                                        attachmentDocumentType:     T\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     T\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        attachmentOrder\n                                    \n                                \n                                \n                                    \n                                        attachmentOrder:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        attachmentUuid\n                                    \n                                \n                                \n                                    \n                                        attachmentUuid:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { UUID } from 'angular2-uuid';\n\n// NOTE: If you change anything in this enum, check image-error-modal.component.html for tests and file-uploader.component.ts:\nexport enum CommonImageError {\n  WrongType,\n  TooSmall,\n  TooBig,\n  AlreadyExists,\n  Unknown,\n  CannotOpen,\n  PDFnotSupported,\n  CannotOpenPDF,\n}\n\nexport class CommonImageProcessingError {\n  commonImage?: CommonImage;\n  rawImageFile?: File;\n  maxSizeAllowed?: number;\n  // added errorDescription.PDF.JS gives proper error messages as invalid pdf structure or password protected pdf.Good for splunk tracking\n  constructor(public errorCode: CommonImageError, public errorDescription?: string) {\n\n  }\n}\n\n/**\n * Image as uploaded by user\n */\nexport class CommonImage {\n\n  uuid: string;\n\n  /**\n   * @param fileContent (optional) The base64 of an image. See `fileContent` property.\n   */\n  constructor(fileContent?: string) {\n    this.uuid = UUID.UUID();\n    if (fileContent) {\n      this.fileContent = fileContent;\n    }\n  }\n\n  /**\n   * The base64 content of an image.  Must already be base64 or some other stringable data-type.\n   * \n   * You should be able to do  to render the image.\n   */\n  fileContent: string;\n  documentType: T;\n\n  /**\n   * ContentType should generally match the MIME type, but can be set as needed by application.\n   * https://developer.mozilla.org/en-US/docs/Web/HTTP/Basics_of_HTTP/MIME_types\n   */\n  contentType: string;\n  // number of bytes.\n  size: number;\n  sizeUnit: string;\n  sizeTxt: string;\n  naturalHeight: number;\n  naturalWidth: number;\n  name: string;\n\n  // file uniqness checksum\n  id: string;\n\n  error?: CommonImageError;\n  attachmentOrder: number = 0;\n\n  /**\n   * Returns the JSON of an image ready to be submitted to the API.  You may\n   * have to set attachmentOrder before calling this.\n   */\n  toJSON(): CommonAttachmentJson {\n    return {\n      attachmentOrder: this.attachmentOrder, // will be 0 - should it be 1?\n      attachmentUuid: this.uuid,\n      attachmentDocumentType: this.documentType\n    };\n  }\n\n}\n\nexport interface CommonAttachmentJson {\n  attachmentOrder: number;\n  attachmentUuid: string;\n  attachmentDocumentType: T;\n}\n\nexport interface CommonImageScaleFactors {\n  widthFactor: number;\n  heightFactor: number;\n\n  scaleDown(scale: number): CommonImageScaleFactors;\n}\n\nexport class CommonImageScaleFactorsImpl implements CommonImageScaleFactors {\n  widthFactor: number;\n  heightFactor: number;\n\n  constructor(wFactor: number, hFactor: number) {\n    this.widthFactor = wFactor;\n    this.heightFactor = hFactor;\n  }\n\n  scaleDown(scale: number): CommonImageScaleFactors {\n    return new CommonImageScaleFactorsImpl(\n      this.widthFactor * scale,\n      this.heightFactor * scale);\n  }\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CommonImage.html":{"url":"classes/CommonImage.html","title":"class - CommonImage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CommonImage\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/common/lib/models/images.model.ts\n        \n\n            \n                Description\n            \n            \n                Image as uploaded by user\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                attachmentOrder\n                            \n                            \n                                contentType\n                            \n                            \n                                documentType\n                            \n                            \n                                    Optional\n                                error\n                            \n                            \n                                fileContent\n                            \n                            \n                                id\n                            \n                            \n                                name\n                            \n                            \n                                naturalHeight\n                            \n                            \n                                naturalWidth\n                            \n                            \n                                size\n                            \n                            \n                                sizeTxt\n                            \n                            \n                                sizeUnit\n                            \n                            \n                                uuid\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                toJSON\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(fileContent?: string)\n                    \n                \n                        \n                            \n                                Defined in projects/common/lib/models/images.model.ts:30\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        fileContent\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                        \n                                                                (optional) The base64 of an image. See fileContent property.\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            attachmentOrder\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Default value : 0\n                        \n                    \n                        \n                            \n                                    Defined in projects/common/lib/models/images.model.ts:67\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            contentType\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/common/lib/models/images.model.ts:54\n                            \n                        \n\n                \n                    \n                        ContentType should generally match the MIME type, but can be set as needed by application.\nhttps://developer.mozilla.org/en-US/docs/Web/HTTP/Basics_of_HTTP/MIME_types\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            documentType\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     T\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/common/lib/models/images.model.ts:48\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            error\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         CommonImageError\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/common/lib/models/images.model.ts:66\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            fileContent\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/common/lib/models/images.model.ts:47\n                            \n                        \n\n                \n                    \n                        The base64 content of an image.  Must already be base64 or some other stringable data-type.\nYou should be able to do  to render the image.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/common/lib/models/images.model.ts:64\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            name\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/common/lib/models/images.model.ts:61\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            naturalHeight\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/common/lib/models/images.model.ts:59\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            naturalWidth\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/common/lib/models/images.model.ts:60\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            size\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/common/lib/models/images.model.ts:56\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            sizeTxt\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/common/lib/models/images.model.ts:58\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            sizeUnit\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/common/lib/models/images.model.ts:57\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            uuid\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/common/lib/models/images.model.ts:30\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            toJSON\n                        \n                        \n                    \n                \n            \n            \n                \ntoJSON()\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/models/images.model.ts:73\n                \n            \n\n\n            \n                \n                    Returns the JSON of an image ready to be submitted to the API.  You may\nhave to set attachmentOrder before calling this.\n\n\n                    \n                        Returns :         CommonAttachmentJson\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { UUID } from 'angular2-uuid';\n\n// NOTE: If you change anything in this enum, check image-error-modal.component.html for tests and file-uploader.component.ts:\nexport enum CommonImageError {\n  WrongType,\n  TooSmall,\n  TooBig,\n  AlreadyExists,\n  Unknown,\n  CannotOpen,\n  PDFnotSupported,\n  CannotOpenPDF,\n}\n\nexport class CommonImageProcessingError {\n  commonImage?: CommonImage;\n  rawImageFile?: File;\n  maxSizeAllowed?: number;\n  // added errorDescription.PDF.JS gives proper error messages as invalid pdf structure or password protected pdf.Good for splunk tracking\n  constructor(public errorCode: CommonImageError, public errorDescription?: string) {\n\n  }\n}\n\n/**\n * Image as uploaded by user\n */\nexport class CommonImage {\n\n  uuid: string;\n\n  /**\n   * @param fileContent (optional) The base64 of an image. See `fileContent` property.\n   */\n  constructor(fileContent?: string) {\n    this.uuid = UUID.UUID();\n    if (fileContent) {\n      this.fileContent = fileContent;\n    }\n  }\n\n  /**\n   * The base64 content of an image.  Must already be base64 or some other stringable data-type.\n   * \n   * You should be able to do  to render the image.\n   */\n  fileContent: string;\n  documentType: T;\n\n  /**\n   * ContentType should generally match the MIME type, but can be set as needed by application.\n   * https://developer.mozilla.org/en-US/docs/Web/HTTP/Basics_of_HTTP/MIME_types\n   */\n  contentType: string;\n  // number of bytes.\n  size: number;\n  sizeUnit: string;\n  sizeTxt: string;\n  naturalHeight: number;\n  naturalWidth: number;\n  name: string;\n\n  // file uniqness checksum\n  id: string;\n\n  error?: CommonImageError;\n  attachmentOrder: number = 0;\n\n  /**\n   * Returns the JSON of an image ready to be submitted to the API.  You may\n   * have to set attachmentOrder before calling this.\n   */\n  toJSON(): CommonAttachmentJson {\n    return {\n      attachmentOrder: this.attachmentOrder, // will be 0 - should it be 1?\n      attachmentUuid: this.uuid,\n      attachmentDocumentType: this.documentType\n    };\n  }\n\n}\n\nexport interface CommonAttachmentJson {\n  attachmentOrder: number;\n  attachmentUuid: string;\n  attachmentDocumentType: T;\n}\n\nexport interface CommonImageScaleFactors {\n  widthFactor: number;\n  heightFactor: number;\n\n  scaleDown(scale: number): CommonImageScaleFactors;\n}\n\nexport class CommonImageScaleFactorsImpl implements CommonImageScaleFactors {\n  widthFactor: number;\n  heightFactor: number;\n\n  constructor(wFactor: number, hFactor: number) {\n    this.widthFactor = wFactor;\n    this.heightFactor = hFactor;\n  }\n\n  scaleDown(scale: number): CommonImageScaleFactors {\n    return new CommonImageScaleFactorsImpl(\n      this.widthFactor * scale,\n      this.heightFactor * scale);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CommonImageProcessingError.html":{"url":"classes/CommonImageProcessingError.html","title":"class - CommonImageProcessingError","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CommonImageProcessingError\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/common/lib/models/images.model.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Optional\n                                commonImage\n                            \n                            \n                                    Public\n                                errorCode\n                            \n                            \n                                    Public\n                                    Optional\n                                errorDescription\n                            \n                            \n                                    Optional\n                                maxSizeAllowed\n                            \n                            \n                                    Optional\n                                rawImageFile\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(errorCode: CommonImageError, errorDescription?: string)\n                    \n                \n                        \n                            \n                                Defined in projects/common/lib/models/images.model.ts:18\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        errorCode\n                                                  \n                                                        \n                                                                        CommonImageError\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        errorDescription\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            commonImage\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         CommonImage\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/common/lib/models/images.model.ts:16\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            errorCode\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         CommonImageError\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/common/lib/models/images.model.ts:20\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Optional\n                            errorDescription\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/common/lib/models/images.model.ts:20\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            maxSizeAllowed\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/common/lib/models/images.model.ts:18\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            rawImageFile\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     File\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/common/lib/models/images.model.ts:17\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { UUID } from 'angular2-uuid';\n\n// NOTE: If you change anything in this enum, check image-error-modal.component.html for tests and file-uploader.component.ts:\nexport enum CommonImageError {\n  WrongType,\n  TooSmall,\n  TooBig,\n  AlreadyExists,\n  Unknown,\n  CannotOpen,\n  PDFnotSupported,\n  CannotOpenPDF,\n}\n\nexport class CommonImageProcessingError {\n  commonImage?: CommonImage;\n  rawImageFile?: File;\n  maxSizeAllowed?: number;\n  // added errorDescription.PDF.JS gives proper error messages as invalid pdf structure or password protected pdf.Good for splunk tracking\n  constructor(public errorCode: CommonImageError, public errorDescription?: string) {\n\n  }\n}\n\n/**\n * Image as uploaded by user\n */\nexport class CommonImage {\n\n  uuid: string;\n\n  /**\n   * @param fileContent (optional) The base64 of an image. See `fileContent` property.\n   */\n  constructor(fileContent?: string) {\n    this.uuid = UUID.UUID();\n    if (fileContent) {\n      this.fileContent = fileContent;\n    }\n  }\n\n  /**\n   * The base64 content of an image.  Must already be base64 or some other stringable data-type.\n   * \n   * You should be able to do  to render the image.\n   */\n  fileContent: string;\n  documentType: T;\n\n  /**\n   * ContentType should generally match the MIME type, but can be set as needed by application.\n   * https://developer.mozilla.org/en-US/docs/Web/HTTP/Basics_of_HTTP/MIME_types\n   */\n  contentType: string;\n  // number of bytes.\n  size: number;\n  sizeUnit: string;\n  sizeTxt: string;\n  naturalHeight: number;\n  naturalWidth: number;\n  name: string;\n\n  // file uniqness checksum\n  id: string;\n\n  error?: CommonImageError;\n  attachmentOrder: number = 0;\n\n  /**\n   * Returns the JSON of an image ready to be submitted to the API.  You may\n   * have to set attachmentOrder before calling this.\n   */\n  toJSON(): CommonAttachmentJson {\n    return {\n      attachmentOrder: this.attachmentOrder, // will be 0 - should it be 1?\n      attachmentUuid: this.uuid,\n      attachmentDocumentType: this.documentType\n    };\n  }\n\n}\n\nexport interface CommonAttachmentJson {\n  attachmentOrder: number;\n  attachmentUuid: string;\n  attachmentDocumentType: T;\n}\n\nexport interface CommonImageScaleFactors {\n  widthFactor: number;\n  heightFactor: number;\n\n  scaleDown(scale: number): CommonImageScaleFactors;\n}\n\nexport class CommonImageScaleFactorsImpl implements CommonImageScaleFactors {\n  widthFactor: number;\n  heightFactor: number;\n\n  constructor(wFactor: number, hFactor: number) {\n    this.widthFactor = wFactor;\n    this.heightFactor = hFactor;\n  }\n\n  scaleDown(scale: number): CommonImageScaleFactors {\n    return new CommonImageScaleFactorsImpl(\n      this.widthFactor * scale,\n      this.heightFactor * scale);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/CommonImageScaleFactors.html":{"url":"interfaces/CommonImageScaleFactors.html","title":"interface - CommonImageScaleFactors","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  CommonImageScaleFactors\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/common/lib/models/images.model.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        heightFactor\n                                \n                                \n                                        widthFactor\n                                \n                            \n                        \n                    \n                    \n                        \n                            Methods\n                        \n                    \n                    \n                        \n                            \n                                \n                                    scaleDown\n                                \n                            \n                        \n                    \n                \n            \n        \n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            scaleDown\n                        \n                        \n                    \n                \n            \n            \n                \nscaleDown(scale: number)\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/models/images.model.ts:93\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    scale\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         CommonImageScaleFactors\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        heightFactor\n                                    \n                                \n                                \n                                    \n                                        heightFactor:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        widthFactor\n                                    \n                                \n                                \n                                    \n                                        widthFactor:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { UUID } from 'angular2-uuid';\n\n// NOTE: If you change anything in this enum, check image-error-modal.component.html for tests and file-uploader.component.ts:\nexport enum CommonImageError {\n  WrongType,\n  TooSmall,\n  TooBig,\n  AlreadyExists,\n  Unknown,\n  CannotOpen,\n  PDFnotSupported,\n  CannotOpenPDF,\n}\n\nexport class CommonImageProcessingError {\n  commonImage?: CommonImage;\n  rawImageFile?: File;\n  maxSizeAllowed?: number;\n  // added errorDescription.PDF.JS gives proper error messages as invalid pdf structure or password protected pdf.Good for splunk tracking\n  constructor(public errorCode: CommonImageError, public errorDescription?: string) {\n\n  }\n}\n\n/**\n * Image as uploaded by user\n */\nexport class CommonImage {\n\n  uuid: string;\n\n  /**\n   * @param fileContent (optional) The base64 of an image. See `fileContent` property.\n   */\n  constructor(fileContent?: string) {\n    this.uuid = UUID.UUID();\n    if (fileContent) {\n      this.fileContent = fileContent;\n    }\n  }\n\n  /**\n   * The base64 content of an image.  Must already be base64 or some other stringable data-type.\n   * \n   * You should be able to do  to render the image.\n   */\n  fileContent: string;\n  documentType: T;\n\n  /**\n   * ContentType should generally match the MIME type, but can be set as needed by application.\n   * https://developer.mozilla.org/en-US/docs/Web/HTTP/Basics_of_HTTP/MIME_types\n   */\n  contentType: string;\n  // number of bytes.\n  size: number;\n  sizeUnit: string;\n  sizeTxt: string;\n  naturalHeight: number;\n  naturalWidth: number;\n  name: string;\n\n  // file uniqness checksum\n  id: string;\n\n  error?: CommonImageError;\n  attachmentOrder: number = 0;\n\n  /**\n   * Returns the JSON of an image ready to be submitted to the API.  You may\n   * have to set attachmentOrder before calling this.\n   */\n  toJSON(): CommonAttachmentJson {\n    return {\n      attachmentOrder: this.attachmentOrder, // will be 0 - should it be 1?\n      attachmentUuid: this.uuid,\n      attachmentDocumentType: this.documentType\n    };\n  }\n\n}\n\nexport interface CommonAttachmentJson {\n  attachmentOrder: number;\n  attachmentUuid: string;\n  attachmentDocumentType: T;\n}\n\nexport interface CommonImageScaleFactors {\n  widthFactor: number;\n  heightFactor: number;\n\n  scaleDown(scale: number): CommonImageScaleFactors;\n}\n\nexport class CommonImageScaleFactorsImpl implements CommonImageScaleFactors {\n  widthFactor: number;\n  heightFactor: number;\n\n  constructor(wFactor: number, hFactor: number) {\n    this.widthFactor = wFactor;\n    this.heightFactor = hFactor;\n  }\n\n  scaleDown(scale: number): CommonImageScaleFactors {\n    return new CommonImageScaleFactorsImpl(\n      this.widthFactor * scale,\n      this.heightFactor * scale);\n  }\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CommonImageScaleFactorsImpl.html":{"url":"classes/CommonImageScaleFactorsImpl.html","title":"class - CommonImageScaleFactorsImpl","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CommonImageScaleFactorsImpl\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/common/lib/models/images.model.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                            CommonImageScaleFactors\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                heightFactor\n                            \n                            \n                                widthFactor\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                scaleDown\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(wFactor: number, hFactor: number)\n                    \n                \n                        \n                            \n                                Defined in projects/common/lib/models/images.model.ts:98\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        wFactor\n                                                  \n                                                        \n                                                                        number\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        hFactor\n                                                  \n                                                        \n                                                                        number\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            heightFactor\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/common/lib/models/images.model.ts:98\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            widthFactor\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/common/lib/models/images.model.ts:97\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            scaleDown\n                        \n                        \n                    \n                \n            \n            \n                \nscaleDown(scale: number)\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/models/images.model.ts:105\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    scale\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         CommonImageScaleFactors\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { UUID } from 'angular2-uuid';\n\n// NOTE: If you change anything in this enum, check image-error-modal.component.html for tests and file-uploader.component.ts:\nexport enum CommonImageError {\n  WrongType,\n  TooSmall,\n  TooBig,\n  AlreadyExists,\n  Unknown,\n  CannotOpen,\n  PDFnotSupported,\n  CannotOpenPDF,\n}\n\nexport class CommonImageProcessingError {\n  commonImage?: CommonImage;\n  rawImageFile?: File;\n  maxSizeAllowed?: number;\n  // added errorDescription.PDF.JS gives proper error messages as invalid pdf structure or password protected pdf.Good for splunk tracking\n  constructor(public errorCode: CommonImageError, public errorDescription?: string) {\n\n  }\n}\n\n/**\n * Image as uploaded by user\n */\nexport class CommonImage {\n\n  uuid: string;\n\n  /**\n   * @param fileContent (optional) The base64 of an image. See `fileContent` property.\n   */\n  constructor(fileContent?: string) {\n    this.uuid = UUID.UUID();\n    if (fileContent) {\n      this.fileContent = fileContent;\n    }\n  }\n\n  /**\n   * The base64 content of an image.  Must already be base64 or some other stringable data-type.\n   * \n   * You should be able to do  to render the image.\n   */\n  fileContent: string;\n  documentType: T;\n\n  /**\n   * ContentType should generally match the MIME type, but can be set as needed by application.\n   * https://developer.mozilla.org/en-US/docs/Web/HTTP/Basics_of_HTTP/MIME_types\n   */\n  contentType: string;\n  // number of bytes.\n  size: number;\n  sizeUnit: string;\n  sizeTxt: string;\n  naturalHeight: number;\n  naturalWidth: number;\n  name: string;\n\n  // file uniqness checksum\n  id: string;\n\n  error?: CommonImageError;\n  attachmentOrder: number = 0;\n\n  /**\n   * Returns the JSON of an image ready to be submitted to the API.  You may\n   * have to set attachmentOrder before calling this.\n   */\n  toJSON(): CommonAttachmentJson {\n    return {\n      attachmentOrder: this.attachmentOrder, // will be 0 - should it be 1?\n      attachmentUuid: this.uuid,\n      attachmentDocumentType: this.documentType\n    };\n  }\n\n}\n\nexport interface CommonAttachmentJson {\n  attachmentOrder: number;\n  attachmentUuid: string;\n  attachmentDocumentType: T;\n}\n\nexport interface CommonImageScaleFactors {\n  widthFactor: number;\n  heightFactor: number;\n\n  scaleDown(scale: number): CommonImageScaleFactors;\n}\n\nexport class CommonImageScaleFactorsImpl implements CommonImageScaleFactors {\n  widthFactor: number;\n  heightFactor: number;\n\n  constructor(wFactor: number, hFactor: number) {\n    this.widthFactor = wFactor;\n    this.heightFactor = hFactor;\n  }\n\n  scaleDown(scale: number): CommonImageScaleFactors {\n    return new CommonImageScaleFactorsImpl(\n      this.widthFactor * scale,\n      this.heightFactor * scale);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/CommonLogMessage.html":{"url":"interfaces/CommonLogMessage.html","title":"interface - CommonLogMessage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  CommonLogMessage\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/common/lib/services/logger.service.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        event\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n            \n    Indexable\n        \n            \n                \n                    \n                        [key: string]:        any\n\n                    \n                \n                        \n                            \n                                Defined in projects/common/lib/services/logger.service.ts:21\n                            \n                        \n            \n        \n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        event\n                                    \n                                \n                                \n                                    \n                                        event:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The type of event being logged. \n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { HttpClient, HttpErrorResponse, HttpHeaders } from '@angular/common/http';\nimport { AbstractHttpService } from './abstract-api-service';\nimport { throwError } from 'rxjs';\nimport * as moment_ from 'moment';\nconst moment = moment_;\n\nenum SeverityLevels {\n  INFO = 'info',\n  ERROR = 'error',\n}\n\nexport enum CommonLogEvents {\n  navigation = 'navigation',\n  error = 'error',\n  submission = 'submission'\n}\n\nexport interface CommonLogMessage {\n  /** The type of event being logged. */\n  event: string; // Should be subclasses into multiple string literals\n  // We allow any other properties/values in the interface\n  [key: string]: any;\n}\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class CommonLogger extends AbstractHttpService {\n  /**\n   * The HTTP Headers which go with each request.  These MUST be set if you are\n   * using the logger.  Fields include:\n   *\n   * - program (REQUIRED, the application wide code)\n   * - applicationId (REQUIRED, like sessionId)\n   * - request_method (REQUIRED, 'POST')\n   * - logsource: (REQUIRED, window.location.hostname)\n   * - http_x_forwarded_host (REQUIRED, window.location.hostname)\n   *\n   */\n  protected _headers: HttpHeaders = new HttpHeaders({\n    request_method: 'POST',\n    logsource: window.location.hostname,\n    http_x_forwarded_host: window.location.hostname\n  });\n\n  private url: string = null;\n\n  constructor(protected http: HttpClient) {\n    super(http);\n  }\n\n  set applicationId( id: string ) {\n    this._headers = this._headers.set( 'applicationId', id );\n  }\n\n  get applicationId() {\n    return this._headers.get( 'applicationId' );\n  }\n\n  set programName( name: string ) {\n    this._headers = this._headers.set( 'program', name );\n  }\n\n  get programName() {\n    return this._headers.get( 'name' );\n  }\n\n  setURL(newURL: string) {\n    this.url = newURL;\n  }\n\n  public log( message: any ) {\n    this._log( message as CommonLogMessage );\n  }\n\n  public logError( errorMessage: any ) {\n    this._logError( errorMessage as CommonLogMessage );\n  }\n\n  /**\n   * Log a message to Splunk. This is the main way to send logs and\n   * automatically includes meta-data. You do **not** need to subscribe to the\n   * response, as the service already does that. The input object must have an\n   * 'event' property set, everything else is optional.\n   *\n   * Example:\n   * ```\n    this.logService.log({\n       event: 'submission',\n       dateObj: new Date()\n    });\n    ```\n   * @param message A JavaScript object, nesting is fine, with `event` property\n   * set.\n   */\n  protected _log(message: CommonLogMessage) {\n    this.setSeverity(SeverityLevels.INFO);\n    return this._sendLog(message);\n  }\n\n  protected _logError(errorMessage: CommonLogMessage) {\n    this.setSeverity(SeverityLevels.ERROR);\n    return this._sendLog(errorMessage);\n  }\n\n  /**\n   * Log HTTP errors, e.g. when losing network connectivity or receiving an\n   * error response code.\n   */\n  public logHttpError(error: HttpErrorResponse) {\n    return this._logError({\n      event: CommonLogEvents.error,\n      message: error.message,\n      errorName: error.name,\n      statusText: error.statusText\n    });\n  }\n\n  /**\n   * Internal method to send logs to Splunk, includes meta-data except that's\n   * consistent across all requests, but not specific values like severity\n   * level.\n   *\n   * @param message A JavaScript object or anything that can be toString()'d,\n   * like Date\n   */\n  private _sendLog(message: CommonLogMessage) {\n    // Update headers\n    this.setTimestamp();\n    this.setTags(message.event);\n\n    if (this.url === null) {\n        const msg = 'Unable to send logs as URL as not been set via setURL()';\n        console.error(msg);\n        return throwError(msg);\n    }\n\n    // Configure request\n    const body = { message: message };\n\n    // We call .subscribe() here because we don't care about the response and\n    // we want to ensure that we never forget to call subscribe.\n    return this.post(this.url, body).subscribe();\n  }\n\n  protected handleError(error: HttpErrorResponse) {\n    console.log('logService handleError()', error);\n    if (error.error instanceof ErrorEvent) {\n      // Client-side / network error occured\n      console.error('An error occured: ', error.error.message);\n    } else {\n      // The backend returned an unsuccessful response code\n      console.error(`Backend returned error code: ${error.status}.  Error body: ${error.error}`);\n    }\n\n    return throwError(error);\n  }\n\n  /**\n   * Overwrite the inherited httpOptions so we can set responseType to text.\n   * This updates Angular's parsing, and it won't error out due to the server\n   * not responding with JSON.\n   */\n  protected get httpOptions(): any {\n    return {\n      headers: this._headers,\n      responseType: 'text'\n    };\n  }\n\n  // TODO: Remove moment dependency\n  private setTimestamp() {\n    this._headers = this._headers.set('timestamp', moment().toISOString());\n  }\n\n  private setSeverity(severity: SeverityLevels) {\n    this._headers = this._headers.set('severity', severity);\n  }\n\n  /**\n   * The headers are easier to search in splunk, and we aren't using tags, so\n   * repurpose it to event type.\n   */\n  private setTags(message: string ) {\n    this._headers = this._headers.set('tags', message);\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ConfirmTemplateComponent.html":{"url":"components/ConfirmTemplateComponent.html","title":"component - ConfirmTemplateComponent","body":"\n                   \n\n\n\n\n\n  Components\n  ConfirmTemplateComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    projects/common/lib/components/confirm-template/confirm-template.component.ts\n\n\n\n    \n        Extends\n    \n    \n                Base\n    \n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                common-confirm-template\n            \n\n            \n                styleUrls\n                ./confirm-template.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./confirm-template.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                objectId\n                            \n                        \n                    \n                \n\n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                displayIcon\n                            \n                        \n                    \n                \n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    successCode\n                                \n                                \n                                    errorCode\n                                \n                                \n                                    warningCode\n                                \n                            \n                        \n                    \n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in projects/common/lib/components/confirm-template/confirm-template.component.ts:18\n                            \n                        \n\n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        displayIcon\n                    \n                \n                \n                    \n                        Type :         ApiStatusCodes\n\n                    \n                \n                \n                    \n                        Default value : ApiStatusCodes.SUCCESS\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/confirm-template/confirm-template.component.ts:18\n                            \n                        \n            \n        \n\n\n\n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            objectId\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : UUID.UUID()\n                        \n                    \n                            \n                                \n                                    Inherited from         Base\n\n                                \n                            \n                        \n                            \n                                    Defined in         Base:11\n\n                            \n                        \n\n                \n                    \n                        An identifier for parents to keep track of components \n\n                    \n                \n\n            \n        \n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        successCode\n                    \n                \n\n                \n                    \n                        getsuccessCode()\n                    \n                \n                            \n                                \n                                    Defined in projects/common/lib/components/confirm-template/confirm-template.component.ts:25\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        errorCode\n                    \n                \n\n                \n                    \n                        geterrorCode()\n                    \n                \n                            \n                                \n                                    Defined in projects/common/lib/components/confirm-template/confirm-template.component.ts:29\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        warningCode\n                    \n                \n\n                \n                    \n                        getwarningCode()\n                    \n                \n                            \n                                \n                                    Defined in projects/common/lib/components/confirm-template/confirm-template.component.ts:33\n                                \n                            \n\n            \n        \n\n\n\n\n    \n        import { Component, Input } from '@angular/core';\nimport { Base } from '../../models/base';\n\n\nexport enum ApiStatusCodes {\n  SUCCESS = '0',\n  ERROR = '1',\n  WARNING = '2'\n}\n\n@Component({\n  selector: 'common-confirm-template',\n  templateUrl: './confirm-template.component.html',\n  styleUrls: ['./confirm-template.component.scss']\n})\nexport class ConfirmTemplateComponent extends Base {\n\n  @Input() displayIcon: ApiStatusCodes = ApiStatusCodes.SUCCESS;\n\n  constructor() {\n    super();\n  }\n\n  // Status codes\n  get successCode() {\n    return ApiStatusCodes.SUCCESS;\n  }\n\n  get errorCode() {\n    return ApiStatusCodes.ERROR;\n  }\n\n  get warningCode() {\n    return ApiStatusCodes.WARNING;\n  }\n}\n\n    \n\n    \n        \n\n\n  \n  \n    \n      \n        \n          \n        \n        \n      \n    \n\n    \n      \n        \n          \n        \n        \n      \n    \n\n    \n      \n        \n          \n        \n        \n      \n    \n  \n\n\n\n\n\n  \n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                                                                                                                                                          '\n    var COMPONENTS = [{'name': 'AccordionCommonComponent', 'selector': 'common-accordion'},{'name': 'AddressComponent', 'selector': 'common-address'},{'name': 'ButtonComponent', 'selector': 'common-button'},{'name': 'ButtonGroupComponent', 'selector': 'common-button-group'},{'name': 'CaptchaComponent', 'selector': 'common-captcha'},{'name': 'CheckboxComponent', 'selector': 'common-checkbox'},{'name': 'CityComponent', 'selector': 'common-city'},{'name': 'ConfirmTemplateComponent', 'selector': 'common-confirm-template'},{'name': 'ConsentModalComponent', 'selector': 'common-consent-modal'},{'name': 'CoreBreadcrumbComponent', 'selector': 'common-core-breadcrumb'},{'name': 'CountryComponent', 'selector': 'common-country'},{'name': 'DateComponent', 'selector': 'common-date'},{'name': 'DatepickerComponent', 'selector': 'common-datepicker'},{'name': 'DropdownComponent', 'selector': 'common-dropdown'},{'name': 'EmailComponent', 'selector': 'common-email'},{'name': 'ErrorContainerComponent', 'selector': 'common-error-container'},{'name': 'FileUploaderComponent', 'selector': 'common-file-uploader'},{'name': 'FormActionBarComponent', 'selector': 'common-form-action-bar'},{'name': 'FormSubmitBarComponent', 'selector': 'common-form-submit-bar'},{'name': 'FullNameComponent', 'selector': 'common-full-name'},{'name': 'GeocoderInputComponent', 'selector': 'common-geocoder-input'},{'name': 'HeaderComponent', 'selector': 'common-header'},{'name': 'NameComponent', 'selector': 'common-name'},{'name': 'PageFrameworkComponent', 'selector': 'common-page-framework'},{'name': 'PageSectionComponent', 'selector': 'common-page-section'},{'name': 'PasswordComponent', 'selector': 'common-password'},{'name': 'PhnComponent', 'selector': 'common-phn'},{'name': 'PhoneNumberComponent', 'selector': 'common-phone-number'},{'name': 'PostalCodeComponent', 'selector': 'common-postal-code'},{'name': 'ProvinceComponent', 'selector': 'common-province'},{'name': 'RadioComponent', 'selector': 'common-radio'},{'name': 'SampleModalComponent', 'selector': 'common-sample-modal'},{'name': 'SinComponent', 'selector': 'common-sin'},{'name': 'StreetComponent', 'selector': 'common-street'},{'name': 'ThumbnailComponent', 'selector': 'common-thumbnail'},{'name': 'ToggleComponent', 'selector': 'common-toggle'},{'name': 'WizardProgressBarComponent', 'selector': 'common-wizard-progress-bar'},{'name': 'XiconButtonComponent', 'selector': 'common-xicon-button'}];\n    var DIRECTIVES = [{'name': 'DateFieldFormatDirective', 'selector': '[commonDateFieldFormat]'},{'name': 'DuplicateCheckDirective', 'selector': '[commonDuplicateCheck]'},{'name': 'ValidateBcPostalDirective', 'selector': '[commonValidateBcPostal]'},{'name': 'ValidateCityDirective', 'selector': '[commonValidateCity]'},{'name': 'ValidateNameDirective', 'selector': '[commonValidateName]'},{'name': 'ValidatePostalcodeDirective', 'selector': '[commonValidatePostalcode]'},{'name': 'ValidateRegionDirective', 'selector': '[commonValidateRegion]'},{'name': 'ValidateStreetDirective', 'selector': '[commonValidateStreet]'}];\n    var ACTUAL_COMPONENT = {'name': 'ConfirmTemplateComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Container.html":{"url":"classes/Container.html","title":"class - Container","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Container\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/common/lib/models/container.ts\n        \n\n            \n                Description\n            \n            \n                Base functionality for container that is used to display bread crumbs \n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                progressSteps\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                convertRouteToTitle\n                            \n                            \n                                    Protected\n                                setProgressSteps\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            progressSteps\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         WizardProgressItem[]\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/common/lib/models/container.ts:12\n                            \n                        \n\n                \n                    \n                        Route items for the stepper \n\n                    \n                \n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            convertRouteToTitle\n                        \n                        \n                    \n                \n            \n            \n                \nconvertRouteToTitle(routePath: string)\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/models/container.ts:18\n                \n            \n\n\n            \n                \n                    Converts a lower case string of a route in a user readable title.  e.g.\n\"personal-info\" -> \"Personal Info\"\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    routePath\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            setProgressSteps\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    setProgressSteps(pageRoutes: Route[])\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/models/container.ts:22\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    pageRoutes\n                                    \n                                            Route[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { Route } from '@angular/router';\n\nexport interface WizardProgressItem {\n  title: string;\n  route: string;\n}\n\n/** Base functionality for container that is used to display bread crumbs */\nexport class Container {\n\n  /** Route items for the stepper */\n  progressSteps: WizardProgressItem[];\n\n  /**\n   * Converts a lower case string of a route in a user readable title.  e.g.\n   * \"personal-info\" -> \"Personal Info\"\n   */\n  convertRouteToTitle(routePath: string): string {\n    return routePath.split('-').map(x => x[0].toUpperCase() + x.slice(1)).join(' ');\n  }\n\n  protected setProgressSteps( pageRoutes: Route[] ): void {\n        // Interface for wizard progress items\n        this.progressSteps = pageRoutes.map(page => {\n          if (page.path !== '') {\n            return {\n              title: this.convertRouteToTitle(page.path),\n              route: page.path\n            };\n          }\n        }).filter(x => x);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/CoreBreadcrumbComponent.html":{"url":"components/CoreBreadcrumbComponent.html","title":"component - CoreBreadcrumbComponent","body":"\n                   \n\n\n\n\n\n  Components\n  CoreBreadcrumbComponent\n\n\n\n        \n            Info\n        \n        \n            Design Guidelines\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    projects/common/lib/components/core-breadcrumb/core-breadcrumb.component.ts\n\n\n    \n        Description\n    \n    \n        The base styles for a breadcrumb with slots for content to go.  If you need a\ncomplex breadcrumb, the idea is you can extend this CoreBreadcrumb and use\nthe base styles.  There are 3 slots: left, center, and right - all are\noptional and any configuration works. You select the slot by adding it as an\nattribute to the top level elements inside of the breadcrumb element.\n   Example usage:\n   \n    \n      Dashboard /\n      Provision by {{ IS_SHOWING_PERSON ? \"User\" : \"Site\" }}\n    \n    \n    \n   \n\n\n    \n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n    \n        Example\n    \n    \n    \n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                common-core-breadcrumb\n            \n\n            \n                styleUrls\n                ./core-breadcrumb.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./core-breadcrumb.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in projects/common/lib/components/core-breadcrumb/core-breadcrumb.component.ts:29\n                            \n                        \n\n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/components/core-breadcrumb/core-breadcrumb.component.ts:33\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n\n\n    \n        Design Guidelines\ntodo\n\n    \n\n    \n        import { Component, OnInit } from '@angular/core';\n\n/**\n *\n * The base styles for a breadcrumb with slots for content to go.  If you need a\n * complex breadcrumb, the idea is you can extend this CoreBreadcrumb and use\n * the base styles.  There are 3 slots: left, center, and right - all are\n * optional and any configuration works. You select the slot by adding it as an\n * attribute to the top level elements inside of the breadcrumb element.\n *\n *   Example usage:\n *\n *   \n *    \n *      Dashboard /\n *      Provision by {{ IS_SHOWING_PERSON ? \"User\" : \"Site\" }}\n *    \n *    \n *    \n *   \n *\n *   @export\n */\n@Component({\n  selector: 'common-core-breadcrumb',\n  templateUrl: './core-breadcrumb.component.html',\n  styleUrls: ['./core-breadcrumb.component.scss']\n})\nexport class CoreBreadcrumbComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n\n    \n\n    \n        \n    \n    \n    \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '            '\n    var COMPONENTS = [{'name': 'AccordionCommonComponent', 'selector': 'common-accordion'},{'name': 'AddressComponent', 'selector': 'common-address'},{'name': 'ButtonComponent', 'selector': 'common-button'},{'name': 'ButtonGroupComponent', 'selector': 'common-button-group'},{'name': 'CaptchaComponent', 'selector': 'common-captcha'},{'name': 'CheckboxComponent', 'selector': 'common-checkbox'},{'name': 'CityComponent', 'selector': 'common-city'},{'name': 'ConfirmTemplateComponent', 'selector': 'common-confirm-template'},{'name': 'ConsentModalComponent', 'selector': 'common-consent-modal'},{'name': 'CoreBreadcrumbComponent', 'selector': 'common-core-breadcrumb'},{'name': 'CountryComponent', 'selector': 'common-country'},{'name': 'DateComponent', 'selector': 'common-date'},{'name': 'DatepickerComponent', 'selector': 'common-datepicker'},{'name': 'DropdownComponent', 'selector': 'common-dropdown'},{'name': 'EmailComponent', 'selector': 'common-email'},{'name': 'ErrorContainerComponent', 'selector': 'common-error-container'},{'name': 'FileUploaderComponent', 'selector': 'common-file-uploader'},{'name': 'FormActionBarComponent', 'selector': 'common-form-action-bar'},{'name': 'FormSubmitBarComponent', 'selector': 'common-form-submit-bar'},{'name': 'FullNameComponent', 'selector': 'common-full-name'},{'name': 'GeocoderInputComponent', 'selector': 'common-geocoder-input'},{'name': 'HeaderComponent', 'selector': 'common-header'},{'name': 'NameComponent', 'selector': 'common-name'},{'name': 'PageFrameworkComponent', 'selector': 'common-page-framework'},{'name': 'PageSectionComponent', 'selector': 'common-page-section'},{'name': 'PasswordComponent', 'selector': 'common-password'},{'name': 'PhnComponent', 'selector': 'common-phn'},{'name': 'PhoneNumberComponent', 'selector': 'common-phone-number'},{'name': 'PostalCodeComponent', 'selector': 'common-postal-code'},{'name': 'ProvinceComponent', 'selector': 'common-province'},{'name': 'RadioComponent', 'selector': 'common-radio'},{'name': 'SampleModalComponent', 'selector': 'common-sample-modal'},{'name': 'SinComponent', 'selector': 'common-sin'},{'name': 'StreetComponent', 'selector': 'common-street'},{'name': 'ThumbnailComponent', 'selector': 'common-thumbnail'},{'name': 'ToggleComponent', 'selector': 'common-toggle'},{'name': 'WizardProgressBarComponent', 'selector': 'common-wizard-progress-bar'},{'name': 'XiconButtonComponent', 'selector': 'common-xicon-button'}];\n    var DIRECTIVES = [{'name': 'DateFieldFormatDirective', 'selector': '[commonDateFieldFormat]'},{'name': 'DuplicateCheckDirective', 'selector': '[commonDuplicateCheck]'},{'name': 'ValidateBcPostalDirective', 'selector': '[commonValidateBcPostal]'},{'name': 'ValidateCityDirective', 'selector': '[commonValidateCity]'},{'name': 'ValidateNameDirective', 'selector': '[commonValidateName]'},{'name': 'ValidatePostalcodeDirective', 'selector': '[commonValidatePostalcode]'},{'name': 'ValidateRegionDirective', 'selector': '[commonValidateRegion]'},{'name': 'ValidateStreetDirective', 'selector': '[commonValidateStreet]'}];\n    var ACTUAL_COMPONENT = {'name': 'CoreBreadcrumbComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/CountryList.html":{"url":"interfaces/CountryList.html","title":"interface - CountryList","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  CountryList\n\n\n\n        \n            Info\n        \n        \n            Design Guidelines\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/common/lib/components/country/country.component.ts\n        \n\n            \n                Description\n            \n            \n                Interface for countries \n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        countryCode\n                                \n                                \n                                        description\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        countryCode\n                                    \n                                \n                                \n                                    \n                                        countryCode:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        description\n                                    \n                                \n                                \n                                    \n                                        description:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n    \n        Design Guidelines\nLorem ipsum dolor sit amet consectetur adipisicing elit. Sapiente, magnam ipsam. Sit quasi natus architecto rerum unde non provident! Quia nisi facere amet iste mollitia voluptatem non molestias esse optio?\nAperiam fugiat consectetur temporibus, iste repellat, quisquam sapiente nisi distinctio optio, autem nemo tenetur error eum voluptatibus ab accusamus quis voluptatum blanditiis. Quam et ut reprehenderit vitae nobis, at ipsum!\nExercitationem pariatur animi repudiandae corporis obcaecati ratione ducimus beatae quam, nostrum magnam unde numquam quidem cupiditate odit id. Beatae alias molestiae, optio incidunt harum quia voluptates deserunt sequi. Nesciunt, optio.\n\n    \n\n    \n        import { Component, Input, Output, EventEmitter, Optional, Self, OnInit } from '@angular/core';\nimport { Base } from '../../models/base';\nimport { ControlValueAccessor, NgControl } from '@angular/forms';\nimport { ErrorMessage } from '../../models/error-message.interface';\n\n/** Interface for countries */\nexport interface CountryList {\n  countryCode: string;\n  description: string;\n}\n\nexport const CANADA = 'CAN';\nexport const UNITED_STATES = 'USA';\n\n/** Default list of countries */\nexport const COUNTRY_LIST: CountryList[] = [\n  { countryCode: 'AFG', description: 'Afghanistan' },\n  { countryCode: 'ALA', description: 'Åland Islands' },\n  { countryCode: 'ALB', description: 'Albania' },\n  { countryCode: 'DZA', description: 'Algeria' },\n  { countryCode: 'ASM', description: 'American Samoa' },\n  { countryCode: 'AND', description: 'Andorra' },\n  { countryCode: 'AGO', description: 'Angola' },\n  { countryCode: 'AIA', description: 'Anguilla' },\n  { countryCode: 'ATA', description: 'Antarctica' },\n  { countryCode: 'ATG', description: 'Antigua and Barbuda' },\n  { countryCode: 'ARG', description: 'Argentina' },\n  { countryCode: 'ARM', description: 'Armenia' },\n  { countryCode: 'ABW', description: 'Aruba' },\n  { countryCode: 'AUS', description: 'Australia' },\n  { countryCode: 'AUT', description: 'Austria' },\n  { countryCode: 'AZE', description: 'Azerbaijan' },\n  { countryCode: 'BHS', description: 'Bahamas' },\n  { countryCode: 'BHR', description: 'Bahrain' },\n  { countryCode: 'BGD', description: 'Bangladesh' },\n  { countryCode: 'BRB', description: 'Barbados' },\n  { countryCode: 'BLR', description: 'Belarus' },\n  { countryCode: 'BEL', description: 'Belgium' },\n  { countryCode: 'BLZ', description: 'Belize' },\n  { countryCode: 'BEN', description: 'Benin' },\n  { countryCode: 'BMU', description: 'Bermuda' },\n  { countryCode: 'BTN', description: 'Bhutan' },\n  { countryCode: 'BOL', description: 'Bolivia, Plurinational State of' },\n  { countryCode: 'BES', description: 'Bonaire, Sint Eustatius and Saba' },\n  { countryCode: 'BIH', description: 'Bosnia and Herzegovina' },\n  { countryCode: 'BWA', description: 'Botswana' },\n  { countryCode: 'BVT', description: 'Bouvet Island' },\n  { countryCode: 'BRA', description: 'Brazil' },\n  { countryCode: 'IOT', description: 'British Indian Ocean Territory' },\n  { countryCode: 'BRN', description: 'Brunei Darussalam' },\n  { countryCode: 'BGR', description: 'Bulgaria' },\n  { countryCode: 'BFA', description: 'Burkina Faso' },\n  { countryCode: 'BDI', description: 'Burundi' },\n  { countryCode: 'KHM', description: 'Cambodia' },\n  { countryCode: 'CMR', description: 'Cameroon' },\n  { countryCode: 'CAN', description: 'Canada' },\n  { countryCode: 'CPV', description: 'Cape Verde' },\n  { countryCode: 'CYM', description: 'Cayman Islands' },\n  { countryCode: 'CAF', description: 'Central African Republic' },\n  { countryCode: 'TCD', description: 'Chad' },\n  { countryCode: 'CHL', description: 'Chile' },\n  { countryCode: 'CHN', description: 'China' },\n  { countryCode: 'CXR', description: 'Christmas Island' },\n  { countryCode: 'CCK', description: 'Cocos (Keeling) Islands' },\n  { countryCode: 'COL', description: 'Colombia' },\n  { countryCode: 'COM', description: 'Comoros' },\n  { countryCode: 'COG', description: 'Congo' },\n  { countryCode: 'COD', description: 'Congo, the Democratic Republic of the' },\n  { countryCode: 'COK', description: 'Cook Islands' },\n  { countryCode: 'CRI', description: 'Costa Rica' },\n  { countryCode: 'CIV', description: 'Côte d\\'Ivoire' },\n  { countryCode: 'HRV', description: 'Croatia' },\n  { countryCode: 'CUB', description: 'Cuba' },\n  { countryCode: 'CUW', description: 'Curaçao' },\n  { countryCode: 'CYP', description: 'Cyprus' },\n  { countryCode: 'CZE', description: 'Czech Republic' },\n  { countryCode: 'DNK', description: 'Denmark' },\n  { countryCode: 'DJI', description: 'Djibouti' },\n  { countryCode: 'DMA', description: 'Dominica' },\n  { countryCode: 'DOM', description: 'Dominican Republic' },\n  { countryCode: 'ECU', description: 'Ecuador' },\n  { countryCode: 'EGY', description: 'Egypt' },\n  { countryCode: 'SLV', description: 'El Salvador' },\n  { countryCode: 'GNQ', description: 'Equatorial Guinea' },\n  { countryCode: 'ERI', description: 'Eritrea' },\n  { countryCode: 'EST', description: 'Estonia' },\n  { countryCode: 'ETH', description: 'Ethiopia' },\n  { countryCode: 'FLK', description: 'Falkland Islands (Malvinas)' },\n  { countryCode: 'FRO', description: 'Faroe Islands' },\n  { countryCode: 'FJI', description: 'Fiji' },\n  { countryCode: 'FIN', description: 'Finland' },\n  { countryCode: 'FRA', description: 'France' },\n  { countryCode: 'GUF', description: 'French Guiana' },\n  { countryCode: 'PYF', description: 'French Polynesia' },\n  { countryCode: 'ATF', description: 'French Southern Territories' },\n  { countryCode: 'GAB', description: 'Gabon' },\n  { countryCode: 'GMB', description: 'Gambia' },\n  { countryCode: 'GEO', description: 'Georgia' },\n  { countryCode: 'DEU', description: 'Germany' },\n  { countryCode: 'GHA', description: 'Ghana' },\n  { countryCode: 'GIB', description: 'Gibraltar' },\n  { countryCode: 'GRC', description: 'Greece' },\n  { countryCode: 'GRL', description: 'Greenland' },\n  { countryCode: 'GRD', description: 'Grenada' },\n  { countryCode: 'GLP', description: 'Guadeloupe' },\n  { countryCode: 'GUM', description: 'Guam' },\n  { countryCode: 'GTM', description: 'Guatemala' },\n  { countryCode: 'GGY', description: 'Guernsey' },\n  { countryCode: 'GIN', description: 'Guinea' },\n  { countryCode: 'GNB', description: 'Guinea-Bissau' },\n  { countryCode: 'GUY', description: 'Guyana' },\n  { countryCode: 'HTI', description: 'Haiti' },\n  { countryCode: 'HMD', description: 'Heard Island and McDonald Islands' },\n  { countryCode: 'VAT', description: 'Holy See (Vatican City State)' },\n  { countryCode: 'HND', description: 'Honduras' },\n  { countryCode: 'HKG', description: 'Hong Kong' },\n  { countryCode: 'HUN', description: 'Hungary' },\n  { countryCode: 'ISL', description: 'Iceland' },\n  { countryCode: 'IND', description: 'India' },\n  { countryCode: 'IDN', description: 'Indonesia' },\n  { countryCode: 'IRN', description: 'Iran, Islamic Republic of' },\n  { countryCode: 'IRQ', description: 'Iraq' },\n  { countryCode: 'IRL', description: 'Ireland' },\n  { countryCode: 'IMN', description: 'Isle of Man' },\n  { countryCode: 'ISR', description: 'Israel' },\n  { countryCode: 'ITA', description: 'Italy' },\n  { countryCode: 'JAM', description: 'Jamaica' },\n  { countryCode: 'JPN', description: 'Japan' },\n  { countryCode: 'JEY', description: 'Jersey' },\n  { countryCode: 'JOR', description: 'Jordan' },\n  { countryCode: 'KAZ', description: 'Kazakhstan' },\n  { countryCode: 'KEN', description: 'Kenya' },\n  { countryCode: 'KIR', description: 'Kiribati' },\n  { countryCode: 'PRK', description: 'Korea, Democratic People\\'s Republic of' },\n  { countryCode: 'KOR', description: 'Korea, Republic of' },\n  { countryCode: 'KWT', description: 'Kuwait' },\n  { countryCode: 'KGZ', description: 'Kyrgyzstan' },\n  { countryCode: 'LAO', description: 'Lao People\\'s Democratic Republic' },\n  { countryCode: 'LVA', description: 'Latvia' },\n  { countryCode: 'LBN', description: 'Lebanon' },\n  { countryCode: 'LSO', description: 'Lesotho' },\n  { countryCode: 'LBR', description: 'Liberia' },\n  { countryCode: 'LBY', description: 'Libya' },\n  { countryCode: 'LIE', description: 'Liechtenstein' },\n  { countryCode: 'LTU', description: 'Lithuania' },\n  { countryCode: 'LUX', description: 'Luxembourg' },\n  { countryCode: 'MAC', description: 'Macao' },\n  { countryCode: 'MKD', description: 'Macedonia, the former Yugoslav Republic of' },\n  { countryCode: 'MDG', description: 'Madagascar' },\n  { countryCode: 'MWI', description: 'Malawi' },\n  { countryCode: 'MYS', description: 'Malaysia' },\n  { countryCode: 'MDV', description: 'Maldives' },\n  { countryCode: 'MLI', description: 'Mali' },\n  { countryCode: 'MLT', description: 'Malta' },\n  { countryCode: 'MHL', description: 'Marshall Islands' },\n  { countryCode: 'MTQ', description: 'Martinique' },\n  { countryCode: 'MRT', description: 'Mauritania' },\n  { countryCode: 'MUS', description: 'Mauritius' },\n  { countryCode: 'MYT', description: 'Mayotte' },\n  { countryCode: 'MEX', description: 'Mexico' },\n  { countryCode: 'FSM', description: 'Micronesia, Federated States of' },\n  { countryCode: 'MDA', description: 'Moldova, Republic of' },\n  { countryCode: 'MCO', description: 'Monaco' },\n  { countryCode: 'MNG', description: 'Mongolia' },\n  { countryCode: 'MNE', description: 'Montenegro' },\n  { countryCode: 'MSR', description: 'Montserrat' },\n  { countryCode: 'MAR', description: 'Morocco' },\n  { countryCode: 'MOZ', description: 'Mozambique' },\n  { countryCode: 'MMR', description: 'Myanmar' },\n  { countryCode: 'NAM', description: 'Namibia' },\n  { countryCode: 'NRU', description: 'Nauru' },\n  { countryCode: 'NPL', description: 'Nepal' },\n  { countryCode: 'NLD', description: 'Netherlands' },\n  { countryCode: 'NCL', description: 'New Caledonia' },\n  { countryCode: 'NZL', description: 'New Zealand' },\n  { countryCode: 'NIC', description: 'Nicaragua' },\n  { countryCode: 'NER', description: 'Niger' },\n  { countryCode: 'NGA', description: 'Nigeria' },\n  { countryCode: 'NIU', description: 'Niue' },\n  { countryCode: 'NFK', description: 'Norfolk Island' },\n  { countryCode: 'MNP', description: 'Northern Mariana Islands' },\n  { countryCode: 'NOR', description: 'Norway' },\n  { countryCode: 'OMN', description: 'Oman' },\n  { countryCode: 'PAK', description: 'Pakistan' },\n  { countryCode: 'PLW', description: 'Palau' },\n  { countryCode: 'PSE', description: 'Palestinian Territory, Occupied' },\n  { countryCode: 'PAN', description: 'Panama' },\n  { countryCode: 'PNG', description: 'Papua New Guinea' },\n  { countryCode: 'PRY', description: 'Paraguay' },\n  { countryCode: 'PER', description: 'Peru' },\n  { countryCode: 'PHL', description: 'Philippines' },\n  { countryCode: 'PCN', description: 'Pitcairn' },\n  { countryCode: 'POL', description: 'Poland' },\n  { countryCode: 'PRT', description: 'Portugal' },\n  { countryCode: 'PRI', description: 'Puerto Rico' },\n  { countryCode: 'QAT', description: 'Qatar' },\n  { countryCode: 'REU', description: 'Réunion' },\n  { countryCode: 'ROU', description: 'Romania' },\n  { countryCode: 'RUS', description: 'Russian Federation' },\n  { countryCode: 'RWA', description: 'Rwanda' },\n  { countryCode: 'BLM', description: 'Saint Barthélemy' },\n  { countryCode: 'SHN', description: 'Saint Helena, Ascension and Tristan da Cunha' },\n  { countryCode: 'KNA', description: 'Saint Kitts and Nevis' },\n  { countryCode: 'LCA', description: 'Saint Lucia' },\n  { countryCode: 'MAF', description: 'Saint Martin (French part)' },\n  { countryCode: 'SPM', description: 'Saint Pierre and Miquelon' },\n  { countryCode: 'VCT', description: 'Saint Vincent and the Grenadines' },\n  { countryCode: 'WSM', description: 'Samoa' },\n  { countryCode: 'SMR', description: 'San Marino' },\n  { countryCode: 'STP', description: 'Sao Tome and Principe' },\n  { countryCode: 'SAU', description: 'Saudi Arabia' },\n  { countryCode: 'SEN', description: 'Senegal' },\n  { countryCode: 'SRB', description: 'Serbia' },\n  { countryCode: 'SYC', description: 'Seychelles' },\n  { countryCode: 'SLE', description: 'Sierra Leone' },\n  { countryCode: 'SGP', description: 'Singapore' },\n  { countryCode: 'SXM', description: 'Sint Maarten (Dutch part)' },\n  { countryCode: 'SVK', description: 'Slovakia' },\n  { countryCode: 'SVN', description: 'Slovenia' },\n  { countryCode: 'SLB', description: 'Solomon Islands' },\n  { countryCode: 'SOM', description: 'Somalia' },\n  { countryCode: 'ZAF', description: 'South Africa' },\n  { countryCode: 'SGS', description: 'South Georgia and the South Sandwich Islands' },\n  { countryCode: 'SSD', description: 'South Sudan' },\n  { countryCode: 'ESP', description: 'Spain' },\n  { countryCode: 'LKA', description: 'Sri Lanka' },\n  { countryCode: 'SDN', description: 'Sudan' },\n  { countryCode: 'SUR', description: 'Suriname' },\n  { countryCode: 'SJM', description: 'Svalbard and Jan Mayen' },\n  { countryCode: 'SWZ', description: 'Swaziland' },\n  { countryCode: 'SWE', description: 'Sweden' },\n  { countryCode: 'CHE', description: 'Switzerland' },\n  { countryCode: 'SYR', description: 'Syrian Arab Republic' },\n  { countryCode: 'TWN', description: 'Taiwan, Province of China' },\n  { countryCode: 'TJK', description: 'Tajikistan' },\n  { countryCode: 'TZA', description: 'Tanzania, United Republic of' },\n  { countryCode: 'THA', description: 'Thailand' },\n  { countryCode: 'TLS', description: 'Timor-Leste' },\n  { countryCode: 'TGO', description: 'Togo' },\n  { countryCode: 'TKL', description: 'Tokelau' },\n  { countryCode: 'TON', description: 'Tonga' },\n  { countryCode: 'TTO', description: 'Trinidad and Tobago' },\n  { countryCode: 'TUN', description: 'Tunisia' },\n  { countryCode: 'TUR', description: 'Turkey' },\n  { countryCode: 'TKM', description: 'Turkmenistan' },\n  { countryCode: 'TCA', description: 'Turks and Caicos Islands' },\n  { countryCode: 'TUV', description: 'Tuvalu' },\n  { countryCode: 'UGA', description: 'Uganda' },\n  { countryCode: 'UKR', description: 'Ukraine' },\n  { countryCode: 'ARE', description: 'United Arab Emirates' },\n  { countryCode: 'GBR', description: 'United Kingdom' },\n  { countryCode: 'USA', description: 'United States' },\n  { countryCode: 'UMI', description: 'United States Minor Outlying Islands' },\n  { countryCode: 'URY', description: 'Uruguay' },\n  { countryCode: 'UZB', description: 'Uzbekistan' },\n  { countryCode: 'VUT', description: 'Vanuatu' },\n  { countryCode: 'VEN', description: 'Venezuela, Bolivarian Republic of' },\n  { countryCode: 'VNM', description: 'Viet Nam' },\n  { countryCode: 'VGB', description: 'Virgin Islands, British' },\n  { countryCode: 'VIR', description: 'Virgin Islands, U.S.' },\n  { countryCode: 'WLF', description: 'Wallis and Futuna' },\n  { countryCode: 'ESH', description: 'Western Sahara' },\n  { countryCode: 'YEM', description: 'Yemen' },\n  { countryCode: 'ZMB', description: 'Zambia' },\n  { countryCode: 'ZWE', description: 'Zimbabwe' }\n];\n\nexport function getCountryDescription( countryCode: string ) {\n  const countryObj = COUNTRY_LIST.find( val => countryCode === val.countryCode );\n  return countryObj ? countryObj.description : countryCode;\n}\n\n@Component({\n  selector: 'common-country',\n  templateUrl: './country.component.html',\n  styleUrls: ['./country.component.scss']\n})\nexport class CountryComponent extends Base implements OnInit, ControlValueAccessor {\n\n  @Input() label: string = 'Country';\n  @Input() countryList: CountryList[] = COUNTRY_LIST;\n  @Input() labelforId: string = 'country_' + this.objectId;\n  @Input() disabled: boolean = false;\n  @Input() required: boolean = false;\n  @Input() useDropDownList: boolean = true;\n  @Input() maxlen: string = '250';\n  @Input() errorMessage: ErrorMessage;\n  @Input() placeholder: string = 'Please select a country';\n\n  @Input()\n  set value( val: string ) {\n    if ( val ) {\n      this.country = val;\n    }\n  }\n  get value() {\n    return this.country;\n  }\n\n  @Output() valueChange: EventEmitter = new EventEmitter();\n  @Output() blurEvent: EventEmitter = new EventEmitter();\n\n  country: string = '';\n\n  defaultErrMsg: ErrorMessage = {\n    required: 'is required.',\n    invalidChar: 'must contain letters and may include special characters such as hyphens, periods, apostrophes and blank characters.',\n  };\n\n  _onChange = (_: any) => {};\n  _onTouched = (_: any) => {};\n\n  constructor( @Optional() @Self() public controlDir: NgControl ) {\n    super();\n    if ( controlDir ) {\n      controlDir.valueAccessor = this;\n    }\n  }\n\n  ngOnInit() {\n    this.setErrorMsg();\n  }\n\n  onValueChange( value: any ) {\n    if ( value !== this.country ) {\n      this._onChange( value );\n      this.valueChange.emit( value );\n      this.country = value;\n    }\n  }\n\n  onBlurEvent( event: any ) {\n    this._onTouched( event );\n    this.blurEvent.emit( event );\n  }\n\n  writeValue( value: any ): void {\n    if ( value !== undefined ) {\n      this.country = value;\n    }\n  }\n\n  // Register change function\n  registerOnChange( fn: any ): void {\n    this._onChange = fn;\n  }\n\n  // Register touched function\n  registerOnTouched( fn: any ): void {\n    this._onTouched = fn;\n  }\n\n  setDisabledState(isDisabled: boolean): void {\n    this.disabled = isDisabled;\n  }\n\n  private setErrorMsg() {\n    if ( this.errorMessage ) {\n      Object.keys(this.errorMessage).map( x => this.defaultErrMsg[x] = this.errorMessage[x] );\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/DateErrorMsg.html":{"url":"interfaces/DateErrorMsg.html","title":"interface - DateErrorMsg","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  DateErrorMsg\n\n\n\n        \n            Info\n        \n        \n            Design Guidelines\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/common/lib/components/datepicker/datepicker.component.ts\n        \n\n            \n                Description\n            \n            \n                Component NPM package dependencies:\na) moment\nThis component reports the following errors.\n    required\n    dayOutOfRange\n    yearDistantPast\n    yearDistantFuture\n    noFutureDatesAllowed\n    invalidValue\n  These messages can be changed by updated messages using the errorMessages interface/\n  Ex. { required: 'This field is required', invalidValue: '{label} is invalid' }\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        dayOutOfRange\n                                \n                                \n                                            Optional\n                                        invalidValue\n                                \n                                \n                                            Optional\n                                        noFutureDatesAllowed\n                                \n                                \n                                            Optional\n                                        noPastDatesAllowed\n                                \n                                \n                                            Optional\n                                        required\n                                \n                                \n                                            Optional\n                                        yearDistantFuture\n                                \n                                \n                                            Optional\n                                        yearDistantPast\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        dayOutOfRange\n                                    \n                                \n                                \n                                    \n                                        dayOutOfRange:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        invalidValue\n                                    \n                                \n                                \n                                    \n                                        invalidValue:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        noFutureDatesAllowed\n                                    \n                                \n                                \n                                    \n                                        noFutureDatesAllowed:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        noPastDatesAllowed\n                                    \n                                \n                                \n                                    \n                                        noPastDatesAllowed:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        required\n                                    \n                                \n                                \n                                    \n                                        required:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        yearDistantFuture\n                                    \n                                \n                                \n                                    \n                                        yearDistantFuture:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        yearDistantPast\n                                    \n                                \n                                \n                                    \n                                        yearDistantPast:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n    \n        Design Guidelines\nLorem ipsum dolor sit amet consectetur adipisicing elit. Sapiente, magnam ipsam. Sit quasi natus architecto rerum unde non provident! Quia nisi facere amet iste mollitia voluptatem non molestias esse optio?\nAperiam fugiat consectetur temporibus, iste repellat, quisquam sapiente nisi distinctio optio, autem nemo tenetur error eum voluptatibus ab accusamus quis voluptatum blanditiis. Quam et ut reprehenderit vitae nobis, at ipsum!\nExercitationem pariatur animi repudiandae corporis obcaecati ratione ducimus beatae quam, nostrum magnam unde numquam quidem cupiditate odit id. Beatae alias molestiae, optio incidunt harum quia voluptates deserunt sequi. Nesciunt, optio.\n\n    \n\n    \n        import { Component, OnInit, Input, Output, EventEmitter, SimpleChanges, ViewChild, OnChanges, forwardRef } from '@angular/core';\nimport { INgxMyDpOptions, IMyDate, NgxMyDatePickerDirective } from 'ngx-mydatepicker';\nimport * as moment_ from 'moment';\nimport { NgForm, ControlContainer, FormControl, NG_VALUE_ACCESSOR, ControlValueAccessor } from '@angular/forms';\nimport { Base } from '../../models/base';\nconst moment = moment_;\n\n/**\n * Component NPM package dependencies:\n * a) moment\n *\n * This component reports the following errors.\n *    required\n *    dayOutOfRange\n *    yearDistantPast\n *    yearDistantFuture\n *    noFutureDatesAllowed\n *    invalidValue\n *\n *  These messages can be changed by updated messages using the errorMessages interface/\n *  Ex. { required: 'This field is required', invalidValue: '{label} is invalid' }\n */\n\nexport interface DateErrorMsg { // TODO: Remove - possible breaking change - currently datepicker uses it\n  required?: string;\n  dayOutOfRange?: string;\n  yearDistantPast?: string;\n  yearDistantFuture?: string;\n  noPastDatesAllowed?: string;\n  noFutureDatesAllowed?: string;\n  invalidValue?: string;\n}\n\n\n/**\n * PRIME datepicker component. Largely a wrapper for ngx-mydatepicker\n * https://github.com/kekeh/ngx-mydatepicker\n *\n * NOTE - YOU MUST INCLUDE NGX-MYDATEPICKER IN YOUR PARENT APPLICATION TO USE\n * THIS COMPONENT!  This is due to some poor implementation in ngx-mydatepicker.\n * Make sure to use the same version that this library uses.\n */\n@Component({\n  selector: 'common-datepicker',\n  templateUrl: './datepicker.component.html',\n  styleUrls: ['./datepicker.component.scss'],\n  /* Re-use the same ngForm that it's parent is using. The component will show\n   * up in its parents `this.form`, and will auto-update `this.form.valid`\n   */\n  viewProviders: [ { provide: ControlContainer, useExisting: forwardRef(() => NgForm ) } ],\n  providers: [\n    {\n      provide: NG_VALUE_ACCESSOR,\n      multi: true,\n      useExisting: forwardRef(() => DatepickerComponent)\n    }\n  ]\n})\nexport class DatepickerComponent extends Base implements OnInit, OnChanges, ControlValueAccessor {\n  /** Component size can be reduced, see Datepickersizes for options */\n  @Input() size: DatepickerSizes = DatepickerSizes.DEFAULT;\n  @Input() date: Date;\n  @Output() dateChange = new EventEmitter();\n  @Input() disabled: boolean;\n  @Input() labelText: string;\n\n  @Input() required: boolean = false;\n\n\n  /** Dates **before** disableUntil will not be valid selections.  Maps to a ngx-mydatepicker option, but we convert IMyDate to Date  */\n  @Input() disableUntil: Date;\n\n  /** Dates **after** disableSince will not be valid selections.  Maps to a ngx-mydatepicker option, but we convert IMyDate to Date */\n  @Input() disableSince: Date;\n\n  /** Equivalent to setting disableBefore to tomorrow. */\n  @Input() onlyFutureDates: boolean;\n\n  /**\n   * Control visibility of the clear 'x' button on the mini datepicker.\n   *\n   * **'visible'** is default, button exists\n   *\n   * **'none'** means the element does not exist\n   *\n   * **'invisible'** means the element takes up space but is not visible / cannot be\n   * used.\n   *\n   * Invisible is useful when you want to make sure a datepicker is the same\n   * size as a visible one.\n   */\n  @Input() clearButton: 'visible' | 'invisible' | 'none' = 'visible';\n\n\n\n  /** Format for how to display the date to the user. */\n  @Input() dateFormat: string = 'yyyy/mm/dd';\n\n  @Input() errorMessages: DateErrorMsg;\n\n  /** Datetime model used to interface with ngx-datepicker. */\n  // model: any;\n  model: any;\n\n  // Make enum accessible in HTML\n  DatepickerSizes: typeof DatepickerSizes = DatepickerSizes;\n\n  @ViewChild('dp') ngxdp: NgxMyDatePickerDirective;\n\n  /** Default options for wrapped ngx-datepicker. */\n  datepickerOptions: INgxMyDpOptions;\n\n  public _onChange = (_: any) => {};\n  public _onTouched = () => {};\n\n  constructor() {\n    super();\n   }\n\n  convertDateToSimpleDate(date: Date): IMyDate {\n    if (date === null || date === undefined) { return null; }\n    return {\n      year: date.getFullYear(),\n      month: date.getMonth() + 1,\n      day: date.getDate(),\n    };\n  }\n  convertSimpleDateToDate(date: IMyDate): Date {\n    // When ngx-mydatepicker is cleared, it returns {year: 0, month: 0, day: 0}\n    if (date.year === 0) {\n      return null;\n    }\n    return new Date(date.year, date.month - 1, date.day);\n  }\n\n  isDate(x: any): x is Date {\n    if (!x) { return false; }\n    return x.getDate !== undefined;\n  }\n\n  ngOnInit() {\n    if (!this.errorMessages) {\n      this.errorMessages = {\n        required: this.labelText + ' is required.',\n        dayOutOfRange: 'Invalid ' + this.labelText + '.',\n        yearDistantPast: 'Invalid ' + this.labelText + '.',\n        yearDistantFuture: 'Invalid ' + this.labelText + '.',\n        noFutureDatesAllowed: 'Invalid ' + this.labelText + '.',\n        invalidValue: 'Invalid ' + this.labelText + '.'\n      };\n    }\n\n    this.datepickerOptions = {\n      dateFormat: this.dateFormat,\n      sunHighlight: false,\n      appendSelectorToBody: true,\n    };\n\n    if (this.size === DatepickerSizes.MINI) {\n      // Set width/height to 4/5 of default\n      this.datepickerOptions.selectorHeight = '185px';\n      this.datepickerOptions.selectorWidth = '201px';\n    }\n\n    if (this.isDate(this.disableSince)) {\n      this.datepickerOptions.disableSince = this.convertDateToSimpleDate(this.disableSince);\n    }\n\n    if (this.isDate(this.disableUntil)) {\n      this.datepickerOptions.disableUntil = this.convertDateToSimpleDate(this.disableSince);\n    }\n\n    if (this.onlyFutureDates) {\n      const today = new Date();\n      this.datepickerOptions.disableUntil = this.convertDateToSimpleDate(today);\n    }\n\n\n    if (this.date) {\n      // Even if jsdate winds up being undefined, even defining this.model will\n      // set the input as non-empty and it'll satisfy the 'required' validation.\n      // So, we only add the model if there's actual data.\n      this.model = {\n        jsdate: this.date\n      };\n    }\n\n\n  }\n\n\n  ngOnChanges(changes: SimpleChanges) {\n    // Parent component has passed in null, so we have to manually clear the input. This leads to 2 change detection cycles.\n    // We could refactor it down to one, but the performance hit is minimal for such a simple component.\n    if (this.date === null) {\n      this.clearDate();\n      this._onChange(null);\n      this._onTouched();\n    }\n  }\n\n  onDateChanged(event): void {\n    if (event.jsdate || event.jsdate === null) {\n      // Always emit a Date (or null)\n      this.dateChange.emit(event.jsdate);\n      this._onChange(event.jsdate);\n      this._onTouched();\n    }\n  }\n\n  clearDate() {\n    if (this.ngxdp) {\n      // We don't need to emit here, because by changing date we'll trigger onDateChanged automatically.\n      this.date = null;\n      this.ngxdp.clearDate();\n    }\n  }\n\n  registerOnChange(fn: any): void {\n    this._onChange = fn;\n  }\n\n  registerOnTouched(fn: any): void {\n    this._onTouched = fn;\n  }\n\n  writeValue(obj: any): void {\n    this.model = {\n      jsdate: obj\n    };\n  }\n\n}\n\nexport enum DatepickerSizes {\n  MINI = 'mini',\n  DEFAULT = 'default'\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"directives/DateFieldFormatDirective.html":{"url":"directives/DateFieldFormatDirective.html","title":"directive - DateFieldFormatDirective","body":"\n                   \n\n\n\n\n\n\n\n  Directives\n  DateFieldFormatDirective\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/common/lib/components/date/date-field-format.directive.ts\n        \n\n\n\n\n        \n            Metadata\n            \n                \n\n                    \n                        Selector\n                        [commonDateFieldFormat]\n                    \n\n                \n            \n        \n\n            \n    Index\n    \n        \n\n\n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                ngModelChange\n                            \n                        \n                    \n                \n\n\n                \n                    \n                        HostListeners\n                    \n                \n                \n                    \n                        \n                            \n                                input\n                            \n                        \n                    \n                \n\n        \n    \n\n\n\n\n            \n    Outputs\n        \n            \n                \n                    \n                        \n                        ngModelChange\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/date/date-field-format.directive.ts:8\n                            \n                        \n            \n        \n\n\n            \n    HostListeners    \n        \n            \n                \n                    \n                    \n                        \n                            input\n                        \n                        \n                    \n                \n            \n            \n                \n                    Arguments : '$event' \n                \n            \n            \n                \ninput(event: KeyboardEvent)\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/components/date/date-field-format.directive.ts:11\n                \n            \n\n\n        \n    \n\n\n\n\n    \n\n\n    \n        import { Directive, Output, EventEmitter, HostListener } from '@angular/core';\n\n@Directive({\n  selector: '[commonDateFieldFormat]'\n})\nexport class DateFieldFormatDirective {\n\n  @Output() ngModelChange: EventEmitter = new EventEmitter(false);\n\n  @HostListener('input', ['$event'])\n  onInput( event: KeyboardEvent ) {\n    const input = event.target as HTMLInputElement;\n    const maxlen = input.getAttribute( 'maxlength' );\n\n    let trimmed = input.value.trim();\n    if (/[^\\d]+/.test( input.value ) ) {\n\n      trimmed = trimmed.replace(/[^\\d]/g, '');\n    }\n\n    trimmed = trimmed.substr( 0, Number( maxlen ) );\n\n    input.value = trimmed;\n    this.ngModelChange.emit( trimmed );\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/DatepickerComponent.html":{"url":"components/DatepickerComponent.html","title":"component - DatepickerComponent","body":"\n                   \n\n\n\n\n\n  Components\n  DatepickerComponent\n\n\n\n        \n            Info\n        \n        \n            Design Guidelines\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    projects/common/lib/components/datepicker/datepicker.component.ts\n\n\n    \n        Description\n    \n    \n        PRIME datepicker component. Largely a wrapper for ngx-mydatepicker\nhttps://github.com/kekeh/ngx-mydatepicker\nNOTE - YOU MUST INCLUDE NGX-MYDATEPICKER IN YOUR PARENT APPLICATION TO USE\nTHIS COMPONENT!  This is due to some poor implementation in ngx-mydatepicker.\nMake sure to use the same version that this library uses.\n\n    \n\n    \n        Extends\n    \n    \n                Base\n    \n\n    \n        Implements\n    \n    \n                    OnInit\n                    OnChanges\n                    ControlValueAccessor\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n            \n                providers\n                \n                                {\n    provide: NG_VALUE_ACCESSOR, multi: true, useExisting: forwardRef(() => DatepickerComponent)\n}\n                \n            \n\n\n            \n                selector\n                common-datepicker\n            \n\n            \n                styleUrls\n                ./datepicker.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./datepicker.component.html\n            \n\n            \n                viewProviders\n                \n                    \n                                { provide: ControlContainer, useExisting: forwardRef(() => NgForm) }\n                    \n                \n            \n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                _onChange\n                            \n                            \n                                    Public\n                                _onTouched\n                            \n                            \n                                datepickerOptions\n                            \n                            \n                                DatepickerSizes\n                            \n                            \n                                model\n                            \n                            \n                                ngxdp\n                            \n                            \n                                    Public\n                                objectId\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                clearDate\n                            \n                            \n                                convertDateToSimpleDate\n                            \n                            \n                                convertSimpleDateToDate\n                            \n                            \n                                isDate\n                            \n                            \n                                ngOnChanges\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                onDateChanged\n                            \n                            \n                                registerOnChange\n                            \n                            \n                                registerOnTouched\n                            \n                            \n                                writeValue\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                clearButton\n                            \n                            \n                                date\n                            \n                            \n                                dateFormat\n                            \n                            \n                                disabled\n                            \n                            \n                                disableSince\n                            \n                            \n                                disableUntil\n                            \n                            \n                                errorMessages\n                            \n                            \n                                labelText\n                            \n                            \n                                onlyFutureDates\n                            \n                            \n                                required\n                            \n                            \n                                size\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                dateChange\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in projects/common/lib/components/datepicker/datepicker.component.ts:114\n                            \n                        \n\n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        clearButton\n                    \n                \n                \n                    \n                        Type :     \"visible\" | \"invisible\" | \"none\"\n\n                    \n                \n                \n                    \n                        Default value : 'visible'\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/datepicker/datepicker.component.ts:92\n                            \n                        \n                \n                    \n                        Control visibility of the clear 'x' button on the mini datepicker.\n'visible' is default, button exists\n'none' means the element does not exist\n'invisible' means the element takes up space but is not visible / cannot be\nused.\nInvisible is useful when you want to make sure a datepicker is the same\nsize as a visible one.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        date\n                    \n                \n                \n                    \n                        Type :         Date\n\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/datepicker/datepicker.component.ts:62\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        dateFormat\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'yyyy/mm/dd'\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/datepicker/datepicker.component.ts:97\n                            \n                        \n                \n                    \n                        Format for how to display the date to the user. \n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        disabled\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/datepicker/datepicker.component.ts:64\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        disableSince\n                    \n                \n                \n                    \n                        Type :         Date\n\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/datepicker/datepicker.component.ts:74\n                            \n                        \n                \n                    \n                        Dates after disableSince will not be valid selections.  Maps to a ngx-mydatepicker option, but we convert IMyDate to Date \n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        disableUntil\n                    \n                \n                \n                    \n                        Type :         Date\n\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/datepicker/datepicker.component.ts:71\n                            \n                        \n                \n                    \n                        Dates before disableUntil will not be valid selections.  Maps to a ngx-mydatepicker option, but we convert IMyDate to Date  \n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        errorMessages\n                    \n                \n                \n                    \n                        Type :         DateErrorMsg\n\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/datepicker/datepicker.component.ts:99\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        labelText\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/datepicker/datepicker.component.ts:65\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        onlyFutureDates\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/datepicker/datepicker.component.ts:77\n                            \n                        \n                \n                    \n                        Equivalent to setting disableBefore to tomorrow. \n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        required\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/datepicker/datepicker.component.ts:67\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        size\n                    \n                \n                \n                    \n                        Type :         DatepickerSizes\n\n                    \n                \n                \n                    \n                        Default value : DatepickerSizes.DEFAULT\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/datepicker/datepicker.component.ts:61\n                            \n                        \n                \n                    \n                        Component size can be reduced, see Datepickersizes for options \n\n                    \n                \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        dateChange\n                    \n                \n                \n                    \n                        Type :         EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/datepicker/datepicker.component.ts:63\n                            \n                        \n            \n        \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            clearDate\n                        \n                        \n                    \n                \n            \n            \n                \nclearDate()\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/components/datepicker/datepicker.component.ts:211\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            convertDateToSimpleDate\n                        \n                        \n                    \n                \n            \n            \n                \nconvertDateToSimpleDate(date: Date)\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/components/datepicker/datepicker.component.ts:120\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    date\n                                    \n                                                Date\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     IMyDate\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            convertSimpleDateToDate\n                        \n                        \n                    \n                \n            \n            \n                \nconvertSimpleDateToDate(date: IMyDate)\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/components/datepicker/datepicker.component.ts:128\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    date\n                                    \n                                            IMyDate\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Date\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            isDate\n                        \n                        \n                    \n                \n            \n            \n                \nisDate(x: any)\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/components/datepicker/datepicker.component.ts:136\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    x\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Date\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnChanges\n                        \n                        \n                    \n                \n            \n            \n                \nngOnChanges(changes: SimpleChanges)\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/components/datepicker/datepicker.component.ts:192\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    changes\n                                    \n                                                SimpleChanges\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/components/datepicker/datepicker.component.ts:141\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            onDateChanged\n                        \n                        \n                    \n                \n            \n            \n                \nonDateChanged(event)\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/components/datepicker/datepicker.component.ts:202\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    event\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            registerOnChange\n                        \n                        \n                    \n                \n            \n            \n                \nregisterOnChange(fn: any)\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/components/datepicker/datepicker.component.ts:219\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    fn\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            registerOnTouched\n                        \n                        \n                    \n                \n            \n            \n                \nregisterOnTouched(fn: any)\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/components/datepicker/datepicker.component.ts:223\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    fn\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            writeValue\n                        \n                        \n                    \n                \n            \n            \n                \nwriteValue(obj: any)\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/components/datepicker/datepicker.component.ts:227\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    obj\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            _onChange\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : () => {...}\n                        \n                    \n                        \n                            \n                                    Defined in projects/common/lib/components/datepicker/datepicker.component.ts:113\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            _onTouched\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : () => {...}\n                        \n                    \n                        \n                            \n                                    Defined in projects/common/lib/components/datepicker/datepicker.component.ts:114\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            datepickerOptions\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     INgxMyDpOptions\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/common/lib/components/datepicker/datepicker.component.ts:111\n                            \n                        \n\n                \n                    \n                        Default options for wrapped ngx-datepicker. \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            DatepickerSizes\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : DatepickerSizes\n                        \n                    \n                        \n                            \n                                    Defined in projects/common/lib/components/datepicker/datepicker.component.ts:106\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            model\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/common/lib/components/datepicker/datepicker.component.ts:103\n                            \n                        \n\n                \n                    \n                        Datetime model used to interface with ngx-datepicker. \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngxdp\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     NgxMyDatePickerDirective\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ViewChild('dp')\n                            \n                        \n                    \n                        \n                            \n                                    Defined in projects/common/lib/components/datepicker/datepicker.component.ts:108\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            objectId\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : UUID.UUID()\n                        \n                    \n                            \n                                \n                                    Inherited from         Base\n\n                                \n                            \n                        \n                            \n                                    Defined in         Base:11\n\n                            \n                        \n\n                \n                    \n                        An identifier for parents to keep track of components \n\n                    \n                \n\n            \n        \n\n\n\n\n    \n        Design Guidelines\nLorem ipsum dolor sit amet consectetur adipisicing elit. Sapiente, magnam ipsam. Sit quasi natus architecto rerum unde non provident! Quia nisi facere amet iste mollitia voluptatem non molestias esse optio?\nAperiam fugiat consectetur temporibus, iste repellat, quisquam sapiente nisi distinctio optio, autem nemo tenetur error eum voluptatibus ab accusamus quis voluptatum blanditiis. Quam et ut reprehenderit vitae nobis, at ipsum!\nExercitationem pariatur animi repudiandae corporis obcaecati ratione ducimus beatae quam, nostrum magnam unde numquam quidem cupiditate odit id. Beatae alias molestiae, optio incidunt harum quia voluptates deserunt sequi. Nesciunt, optio.\n\n    \n\n    \n        import { Component, OnInit, Input, Output, EventEmitter, SimpleChanges, ViewChild, OnChanges, forwardRef } from '@angular/core';\nimport { INgxMyDpOptions, IMyDate, NgxMyDatePickerDirective } from 'ngx-mydatepicker';\nimport * as moment_ from 'moment';\nimport { NgForm, ControlContainer, FormControl, NG_VALUE_ACCESSOR, ControlValueAccessor } from '@angular/forms';\nimport { Base } from '../../models/base';\nconst moment = moment_;\n\n/**\n * Component NPM package dependencies:\n * a) moment\n *\n * This component reports the following errors.\n *    required\n *    dayOutOfRange\n *    yearDistantPast\n *    yearDistantFuture\n *    noFutureDatesAllowed\n *    invalidValue\n *\n *  These messages can be changed by updated messages using the errorMessages interface/\n *  Ex. { required: 'This field is required', invalidValue: '{label} is invalid' }\n */\n\nexport interface DateErrorMsg { // TODO: Remove - possible breaking change - currently datepicker uses it\n  required?: string;\n  dayOutOfRange?: string;\n  yearDistantPast?: string;\n  yearDistantFuture?: string;\n  noPastDatesAllowed?: string;\n  noFutureDatesAllowed?: string;\n  invalidValue?: string;\n}\n\n\n/**\n * PRIME datepicker component. Largely a wrapper for ngx-mydatepicker\n * https://github.com/kekeh/ngx-mydatepicker\n *\n * NOTE - YOU MUST INCLUDE NGX-MYDATEPICKER IN YOUR PARENT APPLICATION TO USE\n * THIS COMPONENT!  This is due to some poor implementation in ngx-mydatepicker.\n * Make sure to use the same version that this library uses.\n */\n@Component({\n  selector: 'common-datepicker',\n  templateUrl: './datepicker.component.html',\n  styleUrls: ['./datepicker.component.scss'],\n  /* Re-use the same ngForm that it's parent is using. The component will show\n   * up in its parents `this.form`, and will auto-update `this.form.valid`\n   */\n  viewProviders: [ { provide: ControlContainer, useExisting: forwardRef(() => NgForm ) } ],\n  providers: [\n    {\n      provide: NG_VALUE_ACCESSOR,\n      multi: true,\n      useExisting: forwardRef(() => DatepickerComponent)\n    }\n  ]\n})\nexport class DatepickerComponent extends Base implements OnInit, OnChanges, ControlValueAccessor {\n  /** Component size can be reduced, see Datepickersizes for options */\n  @Input() size: DatepickerSizes = DatepickerSizes.DEFAULT;\n  @Input() date: Date;\n  @Output() dateChange = new EventEmitter();\n  @Input() disabled: boolean;\n  @Input() labelText: string;\n\n  @Input() required: boolean = false;\n\n\n  /** Dates **before** disableUntil will not be valid selections.  Maps to a ngx-mydatepicker option, but we convert IMyDate to Date  */\n  @Input() disableUntil: Date;\n\n  /** Dates **after** disableSince will not be valid selections.  Maps to a ngx-mydatepicker option, but we convert IMyDate to Date */\n  @Input() disableSince: Date;\n\n  /** Equivalent to setting disableBefore to tomorrow. */\n  @Input() onlyFutureDates: boolean;\n\n  /**\n   * Control visibility of the clear 'x' button on the mini datepicker.\n   *\n   * **'visible'** is default, button exists\n   *\n   * **'none'** means the element does not exist\n   *\n   * **'invisible'** means the element takes up space but is not visible / cannot be\n   * used.\n   *\n   * Invisible is useful when you want to make sure a datepicker is the same\n   * size as a visible one.\n   */\n  @Input() clearButton: 'visible' | 'invisible' | 'none' = 'visible';\n\n\n\n  /** Format for how to display the date to the user. */\n  @Input() dateFormat: string = 'yyyy/mm/dd';\n\n  @Input() errorMessages: DateErrorMsg;\n\n  /** Datetime model used to interface with ngx-datepicker. */\n  // model: any;\n  model: any;\n\n  // Make enum accessible in HTML\n  DatepickerSizes: typeof DatepickerSizes = DatepickerSizes;\n\n  @ViewChild('dp') ngxdp: NgxMyDatePickerDirective;\n\n  /** Default options for wrapped ngx-datepicker. */\n  datepickerOptions: INgxMyDpOptions;\n\n  public _onChange = (_: any) => {};\n  public _onTouched = () => {};\n\n  constructor() {\n    super();\n   }\n\n  convertDateToSimpleDate(date: Date): IMyDate {\n    if (date === null || date === undefined) { return null; }\n    return {\n      year: date.getFullYear(),\n      month: date.getMonth() + 1,\n      day: date.getDate(),\n    };\n  }\n  convertSimpleDateToDate(date: IMyDate): Date {\n    // When ngx-mydatepicker is cleared, it returns {year: 0, month: 0, day: 0}\n    if (date.year === 0) {\n      return null;\n    }\n    return new Date(date.year, date.month - 1, date.day);\n  }\n\n  isDate(x: any): x is Date {\n    if (!x) { return false; }\n    return x.getDate !== undefined;\n  }\n\n  ngOnInit() {\n    if (!this.errorMessages) {\n      this.errorMessages = {\n        required: this.labelText + ' is required.',\n        dayOutOfRange: 'Invalid ' + this.labelText + '.',\n        yearDistantPast: 'Invalid ' + this.labelText + '.',\n        yearDistantFuture: 'Invalid ' + this.labelText + '.',\n        noFutureDatesAllowed: 'Invalid ' + this.labelText + '.',\n        invalidValue: 'Invalid ' + this.labelText + '.'\n      };\n    }\n\n    this.datepickerOptions = {\n      dateFormat: this.dateFormat,\n      sunHighlight: false,\n      appendSelectorToBody: true,\n    };\n\n    if (this.size === DatepickerSizes.MINI) {\n      // Set width/height to 4/5 of default\n      this.datepickerOptions.selectorHeight = '185px';\n      this.datepickerOptions.selectorWidth = '201px';\n    }\n\n    if (this.isDate(this.disableSince)) {\n      this.datepickerOptions.disableSince = this.convertDateToSimpleDate(this.disableSince);\n    }\n\n    if (this.isDate(this.disableUntil)) {\n      this.datepickerOptions.disableUntil = this.convertDateToSimpleDate(this.disableSince);\n    }\n\n    if (this.onlyFutureDates) {\n      const today = new Date();\n      this.datepickerOptions.disableUntil = this.convertDateToSimpleDate(today);\n    }\n\n\n    if (this.date) {\n      // Even if jsdate winds up being undefined, even defining this.model will\n      // set the input as non-empty and it'll satisfy the 'required' validation.\n      // So, we only add the model if there's actual data.\n      this.model = {\n        jsdate: this.date\n      };\n    }\n\n\n  }\n\n\n  ngOnChanges(changes: SimpleChanges) {\n    // Parent component has passed in null, so we have to manually clear the input. This leads to 2 change detection cycles.\n    // We could refactor it down to one, but the performance hit is minimal for such a simple component.\n    if (this.date === null) {\n      this.clearDate();\n      this._onChange(null);\n      this._onTouched();\n    }\n  }\n\n  onDateChanged(event): void {\n    if (event.jsdate || event.jsdate === null) {\n      // Always emit a Date (or null)\n      this.dateChange.emit(event.jsdate);\n      this._onChange(event.jsdate);\n      this._onTouched();\n    }\n  }\n\n  clearDate() {\n    if (this.ngxdp) {\n      // We don't need to emit here, because by changing date we'll trigger onDateChanged automatically.\n      this.date = null;\n      this.ngxdp.clearDate();\n    }\n  }\n\n  registerOnChange(fn: any): void {\n    this._onChange = fn;\n  }\n\n  registerOnTouched(fn: any): void {\n    this._onTouched = fn;\n  }\n\n  writeValue(obj: any): void {\n    this.model = {\n      jsdate: obj\n    };\n  }\n\n}\n\nexport enum DatepickerSizes {\n  MINI = 'mini',\n  DEFAULT = 'default'\n}\n\n    \n\n    \n        \n    {{labelText}}\n        \n\n                \n\n            \n                \n                    \n                \n            \n        \n    \n\n\n\n\n  \n       {{errorMessages.required}}\n  \n  \n  \n       {{errorMessages.dayOutOfRange}}\n  \n  \n       {{errorMessages.yearDistantPast}}\n  \n  \n       {{errorMessages.yearDistantFuture}}\n  \n  \n        {{errorMessages.noPastDatesAllowed}}\n  \n\n  \n       {{errorMessages.noFutureDatesAllowed}}\n   -->\n  \n       {{errorMessages.invalidValue}}\n  \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '    {{labelText}}                                                                                                                         {{errorMessages.required}}             {{errorMessages.dayOutOfRange}}           {{errorMessages.yearDistantPast}}           {{errorMessages.yearDistantFuture}}            {{errorMessages.noPastDatesAllowed}}           {{errorMessages.noFutureDatesAllowed}}   -->         {{errorMessages.invalidValue}}  '\n    var COMPONENTS = [{'name': 'AccordionCommonComponent', 'selector': 'common-accordion'},{'name': 'AddressComponent', 'selector': 'common-address'},{'name': 'ButtonComponent', 'selector': 'common-button'},{'name': 'ButtonGroupComponent', 'selector': 'common-button-group'},{'name': 'CaptchaComponent', 'selector': 'common-captcha'},{'name': 'CheckboxComponent', 'selector': 'common-checkbox'},{'name': 'CityComponent', 'selector': 'common-city'},{'name': 'ConfirmTemplateComponent', 'selector': 'common-confirm-template'},{'name': 'ConsentModalComponent', 'selector': 'common-consent-modal'},{'name': 'CoreBreadcrumbComponent', 'selector': 'common-core-breadcrumb'},{'name': 'CountryComponent', 'selector': 'common-country'},{'name': 'DateComponent', 'selector': 'common-date'},{'name': 'DatepickerComponent', 'selector': 'common-datepicker'},{'name': 'DropdownComponent', 'selector': 'common-dropdown'},{'name': 'EmailComponent', 'selector': 'common-email'},{'name': 'ErrorContainerComponent', 'selector': 'common-error-container'},{'name': 'FileUploaderComponent', 'selector': 'common-file-uploader'},{'name': 'FormActionBarComponent', 'selector': 'common-form-action-bar'},{'name': 'FormSubmitBarComponent', 'selector': 'common-form-submit-bar'},{'name': 'FullNameComponent', 'selector': 'common-full-name'},{'name': 'GeocoderInputComponent', 'selector': 'common-geocoder-input'},{'name': 'HeaderComponent', 'selector': 'common-header'},{'name': 'NameComponent', 'selector': 'common-name'},{'name': 'PageFrameworkComponent', 'selector': 'common-page-framework'},{'name': 'PageSectionComponent', 'selector': 'common-page-section'},{'name': 'PasswordComponent', 'selector': 'common-password'},{'name': 'PhnComponent', 'selector': 'common-phn'},{'name': 'PhoneNumberComponent', 'selector': 'common-phone-number'},{'name': 'PostalCodeComponent', 'selector': 'common-postal-code'},{'name': 'ProvinceComponent', 'selector': 'common-province'},{'name': 'RadioComponent', 'selector': 'common-radio'},{'name': 'SampleModalComponent', 'selector': 'common-sample-modal'},{'name': 'SinComponent', 'selector': 'common-sin'},{'name': 'StreetComponent', 'selector': 'common-street'},{'name': 'ThumbnailComponent', 'selector': 'common-thumbnail'},{'name': 'ToggleComponent', 'selector': 'common-toggle'},{'name': 'WizardProgressBarComponent', 'selector': 'common-wizard-progress-bar'},{'name': 'XiconButtonComponent', 'selector': 'common-xicon-button'}];\n    var DIRECTIVES = [{'name': 'DateFieldFormatDirective', 'selector': '[commonDateFieldFormat]'},{'name': 'DuplicateCheckDirective', 'selector': '[commonDuplicateCheck]'},{'name': 'ValidateBcPostalDirective', 'selector': '[commonValidateBcPostal]'},{'name': 'ValidateCityDirective', 'selector': '[commonValidateCity]'},{'name': 'ValidateNameDirective', 'selector': '[commonValidateName]'},{'name': 'ValidatePostalcodeDirective', 'selector': '[commonValidatePostalcode]'},{'name': 'ValidateRegionDirective', 'selector': '[commonValidateRegion]'},{'name': 'ValidateStreetDirective', 'selector': '[commonValidateStreet]'}];\n    var ACTUAL_COMPONENT = {'name': 'DatepickerComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/DefaultPageGuardService.html":{"url":"injectables/DefaultPageGuardService.html","title":"injectable - DefaultPageGuardService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  DefaultPageGuardService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/common/lib/services/default-page-guard.service.ts\n        \n\n            \n                Description\n            \n            \n                Default page guard servicd\n\n            \n\n\n            \n                Example\n            \n            \n                        \n                            providers: [\n         ...\n         { provide: AbstractPageGuardService, useExisting: DefaultPageGuardService },\n         LoadPageGuardService\n]\n                        \n            \n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                _bypassGuards\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                canBypassGuards\n                            \n                            \n                                    Public\n                                canNavigateToUrl\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    bypassGuards\n                                \n                            \n                        \n                    \n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(pageStateService: PageStateService)\n                    \n                \n                        \n                            \n                                Defined in projects/common/lib/services/default-page-guard.service.ts:22\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        pageStateService\n                                                  \n                                                        \n                                                                        PageStateService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            canBypassGuards\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    canBypassGuards()\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/services/default-page-guard.service.ts:30\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         boolean\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            canNavigateToUrl\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    canNavigateToUrl(url: string)\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/services/default-page-guard.service.ts:34\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    url\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            _bypassGuards\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in projects/common/lib/services/default-page-guard.service.ts:22\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        bypassGuards\n                    \n                \n\n\n                \n                    \n                        setbypassGuards(bypass: boolean)\n                    \n                \n                            \n                                \n                                    Defined in projects/common/lib/services/default-page-guard.service.ts:26\n                                \n                            \n                    \n                        \n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                        Type\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                            bypass\n                                                    \n                                                            \n                                                                            boolean\n                                                            \n                                                    \n                                                        \n                                                                No\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :         void\n\n                                \n                        \n                    \n            \n        \n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { PageStateService } from './page-state.service';\nimport { AbstractPageGuardService } from './abstract-page-guard.service';\n\n/**\n * Default page guard servicd\n *\n *  @example\n *\n *                providers: [\n *                        ...\n *                        { provide: AbstractPageGuardService, useExisting: DefaultPageGuardService },\n *                        LoadPageGuardService\n *                ]\n *\n */\n@Injectable({\n  providedIn: 'root'\n})\nexport class DefaultPageGuardService implements AbstractPageGuardService {\n\n  private _bypassGuards: boolean = false;\n\n  constructor( private pageStateService: PageStateService ) {}\n\n  set bypassGuards( bypass: boolean) {\n    this._bypassGuards = bypass;\n  }\n\n  public canBypassGuards(): boolean {\n    return this._bypassGuards;\n  }\n\n  public canNavigateToUrl( url: string ): boolean {\n    return this.pageStateService.canNavigateToPage( url );\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/DropdownComponent.html":{"url":"components/DropdownComponent.html","title":"component - DropdownComponent","body":"\n                   \n\n\n\n\n\n  Components\n  DropdownComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    projects/common/lib/components/dropdown/dropdown.component.ts\n\n\n\n    \n        Extends\n    \n    \n                Base\n    \n\n    \n        Implements\n    \n    \n                    ControlValueAccessor\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                common-dropdown\n            \n\n            \n                styleUrls\n                ./dropdown.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./dropdown.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                _onChange\n                            \n                            \n                                    Public\n                                _onTouched\n                            \n                            \n                                    Public\n                                controlDir\n                            \n                            \n                                    Public\n                                model\n                            \n                            \n                                    Public\n                                objectId\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                registerOnChange\n                            \n                            \n                                registerOnTouched\n                            \n                            \n                                writeValue\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                addTag\n                            \n                            \n                                addTagText\n                            \n                            \n                                autocorrect\n                            \n                            \n                                clearable\n                            \n                            \n                                items\n                            \n                            \n                                label\n                            \n                            \n                                placeholder\n                            \n                            \n                                required\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(controlDir: NgControl)\n                    \n                \n                        \n                            \n                                Defined in projects/common/lib/components/dropdown/dropdown.component.ts:23\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        controlDir\n                                                  \n                                                        \n                                                                        NgControl\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        addTag\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/dropdown/dropdown.component.ts:17\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        addTagText\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'Add'\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/dropdown/dropdown.component.ts:18\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        autocorrect\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/dropdown/dropdown.component.ts:16\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        clearable\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : true\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/dropdown/dropdown.component.ts:20\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        items\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/dropdown/dropdown.component.ts:13\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        label\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'Default label'\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/dropdown/dropdown.component.ts:14\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        placeholder\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/dropdown/dropdown.component.ts:15\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        required\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/dropdown/dropdown.component.ts:19\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            registerOnChange\n                        \n                        \n                    \n                \n            \n            \n                \nregisterOnChange(fn: any)\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/components/dropdown/dropdown.component.ts:36\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    fn\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            registerOnTouched\n                        \n                        \n                    \n                \n            \n            \n                \nregisterOnTouched(fn: any)\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/components/dropdown/dropdown.component.ts:40\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    fn\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            writeValue\n                        \n                        \n                    \n                \n            \n            \n                \nwriteValue(value: any)\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/components/dropdown/dropdown.component.ts:32\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            _onChange\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : () => {...}\n                        \n                    \n                        \n                            \n                                    Defined in projects/common/lib/components/dropdown/dropdown.component.ts:22\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            _onTouched\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : () => {...}\n                        \n                    \n                        \n                            \n                                    Defined in projects/common/lib/components/dropdown/dropdown.component.ts:23\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            controlDir\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         NgControl\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Optional()@Self()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in projects/common/lib/components/dropdown/dropdown.component.ts:25\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            model\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/common/lib/components/dropdown/dropdown.component.ts:11\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            objectId\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : UUID.UUID()\n                        \n                    \n                            \n                                \n                                    Inherited from         Base\n\n                                \n                            \n                        \n                            \n                                    Defined in         Base:11\n\n                            \n                        \n\n                \n                    \n                        An identifier for parents to keep track of components \n\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit, Input, forwardRef, Optional, Self } from '@angular/core';\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR, NgControl } from '@angular/forms';\nimport { Base } from '../../models/base';\n\n@Component({\n  selector: 'common-dropdown',\n  templateUrl: './dropdown.component.html',\n  styleUrls: ['./dropdown.component.scss']\n})\nexport class DropdownComponent extends Base implements ControlValueAccessor {\n  public model: any;\n\n  @Input() items = [];\n  @Input() label: string = 'Default label';\n  @Input() placeholder: string;\n  @Input() autocorrect: string;\n  @Input() addTag: boolean = false;\n  @Input() addTagText: string = 'Add';\n  @Input() required: boolean;\n  @Input() clearable: boolean = true;\n\n  public _onChange = (_: any) => {};\n  public _onTouched = () => {};\n\n  constructor( @Optional() @Self() public controlDir: NgControl ) {\n    super();\n    if ( controlDir ) {\n      controlDir.valueAccessor = this;\n    }\n  }\n\n  writeValue(value: any): void {\n    this.model = value;\n  }\n\n  registerOnChange(fn: any): void {\n    this._onChange = fn;\n  }\n\n  registerOnTouched(fn: any): void {\n    this._onTouched = fn;\n  }\n\n}\n\n    \n\n    \n        \n{{label}}\n\n\n\n\n  {{label}} is required.\n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '{{label}}  {{label}} is required.'\n    var COMPONENTS = [{'name': 'AccordionCommonComponent', 'selector': 'common-accordion'},{'name': 'AddressComponent', 'selector': 'common-address'},{'name': 'ButtonComponent', 'selector': 'common-button'},{'name': 'ButtonGroupComponent', 'selector': 'common-button-group'},{'name': 'CaptchaComponent', 'selector': 'common-captcha'},{'name': 'CheckboxComponent', 'selector': 'common-checkbox'},{'name': 'CityComponent', 'selector': 'common-city'},{'name': 'ConfirmTemplateComponent', 'selector': 'common-confirm-template'},{'name': 'ConsentModalComponent', 'selector': 'common-consent-modal'},{'name': 'CoreBreadcrumbComponent', 'selector': 'common-core-breadcrumb'},{'name': 'CountryComponent', 'selector': 'common-country'},{'name': 'DateComponent', 'selector': 'common-date'},{'name': 'DatepickerComponent', 'selector': 'common-datepicker'},{'name': 'DropdownComponent', 'selector': 'common-dropdown'},{'name': 'EmailComponent', 'selector': 'common-email'},{'name': 'ErrorContainerComponent', 'selector': 'common-error-container'},{'name': 'FileUploaderComponent', 'selector': 'common-file-uploader'},{'name': 'FormActionBarComponent', 'selector': 'common-form-action-bar'},{'name': 'FormSubmitBarComponent', 'selector': 'common-form-submit-bar'},{'name': 'FullNameComponent', 'selector': 'common-full-name'},{'name': 'GeocoderInputComponent', 'selector': 'common-geocoder-input'},{'name': 'HeaderComponent', 'selector': 'common-header'},{'name': 'NameComponent', 'selector': 'common-name'},{'name': 'PageFrameworkComponent', 'selector': 'common-page-framework'},{'name': 'PageSectionComponent', 'selector': 'common-page-section'},{'name': 'PasswordComponent', 'selector': 'common-password'},{'name': 'PhnComponent', 'selector': 'common-phn'},{'name': 'PhoneNumberComponent', 'selector': 'common-phone-number'},{'name': 'PostalCodeComponent', 'selector': 'common-postal-code'},{'name': 'ProvinceComponent', 'selector': 'common-province'},{'name': 'RadioComponent', 'selector': 'common-radio'},{'name': 'SampleModalComponent', 'selector': 'common-sample-modal'},{'name': 'SinComponent', 'selector': 'common-sin'},{'name': 'StreetComponent', 'selector': 'common-street'},{'name': 'ThumbnailComponent', 'selector': 'common-thumbnail'},{'name': 'ToggleComponent', 'selector': 'common-toggle'},{'name': 'WizardProgressBarComponent', 'selector': 'common-wizard-progress-bar'},{'name': 'XiconButtonComponent', 'selector': 'common-xicon-button'}];\n    var DIRECTIVES = [{'name': 'DateFieldFormatDirective', 'selector': '[commonDateFieldFormat]'},{'name': 'DuplicateCheckDirective', 'selector': '[commonDuplicateCheck]'},{'name': 'ValidateBcPostalDirective', 'selector': '[commonValidateBcPostal]'},{'name': 'ValidateCityDirective', 'selector': '[commonValidateCity]'},{'name': 'ValidateNameDirective', 'selector': '[commonValidateName]'},{'name': 'ValidatePostalcodeDirective', 'selector': '[commonValidatePostalcode]'},{'name': 'ValidateRegionDirective', 'selector': '[commonValidateRegion]'},{'name': 'ValidateStreetDirective', 'selector': '[commonValidateStreet]'}];\n    var ACTUAL_COMPONENT = {'name': 'DropdownComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"directives/DuplicateCheckDirective.html":{"url":"directives/DuplicateCheckDirective.html","title":"directive - DuplicateCheckDirective","body":"\n                   \n\n\n\n\n\n\n\n  Directives\n  DuplicateCheckDirective\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/common/lib/components/duplicate-check/duplicate-check.directive.ts\n        \n\n\n            \n                Implements\n            \n            \n                            Validator\n            \n\n\n        \n            Metadata\n            \n                \n                    \n                        Providers\n                        \n                            \n                                { provide: NG_VALIDATORS, useExisting: DuplicateCheckDirective, multi: true }\n                            \n                        \n                    \n\n                    \n                        Selector\n                        [commonDuplicateCheck]\n                    \n\n                \n            \n        \n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                validate\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                dupList\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n\n            \n    Inputs\n        \n            \n                \n                    \n                        \n                        dupList\n                    \n                \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/duplicate-check/duplicate-check.directive.ts:32\n                            \n                        \n            \n        \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            validate\n                        \n                        \n                    \n                \n            \n            \n                \nvalidate(control: AbstractControl)\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/components/duplicate-check/duplicate-check.directive.ts:34\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    control\n                                    \n                                                AbstractControl\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     literal type | null\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n    \n\n\n    \n        import { Directive, Input } from '@angular/core';\nimport { ValidatorFn, AbstractControl, NG_VALIDATORS, Validator } from '@angular/forms';\n\n// Local function\nfunction checkForDuplicates( control: AbstractControl,\n                             dupList: string[] ): { [key: string]: boolean } | null {\n  // Duplicate check\n  if ( dupList && dupList.length ) {\n\n  const duplicate = dupList.find( x => x === control.value );\n  return (duplicate ? { 'duplicate': true } : null);\n  }\n  return null;\n}\n\n// TODO: Need to confirm this works with reactive forms\nexport function commonDuplicateCheck( dupList: string[] ): ValidatorFn {\n\n  return ( control: AbstractControl ): { [key: string]: boolean } | null => {\n    return checkForDuplicates( control, dupList );\n  };\n}\n\n@Directive({\n  selector: '[commonDuplicateCheck]',\n  providers: [\n    {provide: NG_VALIDATORS, useExisting: DuplicateCheckDirective, multi: true}\n    ]\n})\nexport class DuplicateCheckDirective implements Validator {\n\n  @Input() dupList: string[];\n\n  validate( control: AbstractControl ): {[key: string]: any} | null {\n  return checkForDuplicates( control, this.dupList );\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/EmailComponent.html":{"url":"components/EmailComponent.html","title":"component - EmailComponent","body":"\n                   \n\n\n\n\n\n  Components\n  EmailComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    projects/common/lib/components/email/email.component.ts\n\n\n    \n        Description\n    \n    \n        TODO DOCUMENT NEED TO USE NGMODEL FOR REQUIRED TO WORK. Also test with reactive forms to see if still nec\n\n    \n\n    \n        Extends\n    \n    \n                AbstractFormControl\n    \n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                common-email\n            \n\n            \n                styleUrls\n                ./email.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./email.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                _defaultErrMsg\n                            \n                            \n                                    Public\n                                controlDir\n                            \n                            \n                                    Private\n                                criteria\n                            \n                            \n                                email\n                            \n                            \n                                    Abstract\n                                _defaultErrMsg\n                            \n                            \n                                _onChange\n                            \n                            \n                                _onTouched\n                            \n                            \n                                    Public\n                                objectId\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                            \n                                onBlur\n                            \n                            \n                                onValueChange\n                            \n                            \n                                    Private\n                                validateSelf\n                            \n                            \n                                writeValue\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                registerOnChange\n                            \n                            \n                                registerOnTouched\n                            \n                            \n                                    Protected\n                                registerValidation\n                            \n                            \n                                setDisabledState\n                            \n                            \n                                    Protected\n                                setErrorMsg\n                            \n                            \n                                    Abstract\n                                writeValue\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                label\n                            \n                            \n                                labelforId\n                            \n                            \n                                maxlength\n                            \n                            \n                                value\n                            \n                            \n                                disabled\n                            \n                            \n                                errorMessage\n                            \n                            \n                                label\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                blur\n                            \n                            \n                                valueChange\n                            \n                        \n                    \n                \n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    value\n                                \n                            \n                        \n                    \n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(controlDir: NgControl)\n                    \n                \n                        \n                            \n                                Defined in projects/common/lib/components/email/email.component.ts:47\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        controlDir\n                                                  \n                                                        \n                                                                        NgControl\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        label\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'Email'\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/email/email.component.ts:23\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        labelforId\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'email_' + this.objectId\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/email/email.component.ts:25\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        maxlength\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : '255'\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/email/email.component.ts:24\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        value\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/email/email.component.ts:28\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        disabled\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                            \n                                \n                                    Inherited from         AbstractFormControl\n\n                                \n                            \n                        \n                            \n                                    Defined in         AbstractFormControl:15\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        errorMessage\n                    \n                \n                \n                    \n                        Type :         ErrorMessage\n\n                    \n                \n                            \n                                \n                                    Inherited from         AbstractFormControl\n\n                                \n                            \n                        \n                            \n                                    Defined in         AbstractFormControl:18\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        label\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                            \n                                \n                                    Inherited from         AbstractFormControl\n\n                                \n                            \n                        \n                            \n                                    Defined in         AbstractFormControl:13\n\n                            \n                        \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        blur\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/email/email.component.ts:38\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        valueChange\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/email/email.component.ts:37\n                            \n                        \n            \n        \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/components/email/email.component.ts:56\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            onBlur\n                        \n                        \n                    \n                \n            \n            \n                \nonBlur(event: any)\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/components/email/email.component.ts:68\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    event\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            onValueChange\n                        \n                        \n                    \n                \n            \n            \n                \nonValueChange(value: any)\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/components/email/email.component.ts:62\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            validateSelf\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    validateSelf()\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/components/email/email.component.ts:79\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     ValidationErrors | null\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            writeValue\n                        \n                        \n                    \n                \n            \n            \n                \nwriteValue(value: any)\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/components/email/email.component.ts:73\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Inherited from         AbstractFormControl\n\n                \n            \n            \n                \n                        Defined in         AbstractFormControl:26\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            registerOnChange\n                        \n                        \n                    \n                \n            \n            \n                \nregisterOnChange(fn: any)\n                \n            \n\n\n            \n                \n                    Inherited from         AbstractFormControl\n\n                \n            \n            \n                \n                        Defined in         AbstractFormControl:34\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    fn\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            registerOnTouched\n                        \n                        \n                    \n                \n            \n            \n                \nregisterOnTouched(fn: any)\n                \n            \n\n\n            \n                \n                    Inherited from         AbstractFormControl\n\n                \n            \n            \n                \n                        Defined in         AbstractFormControl:39\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    fn\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            registerValidation\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    registerValidation(ngControl: NgControl, fn: ValidationErrors)\n                \n            \n\n\n            \n                \n                    Inherited from         AbstractFormControl\n\n                \n            \n            \n                \n                        Defined in         AbstractFormControl:65\n\n                \n            \n\n\n            \n                \n                    Register self validating method\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    ngControl\n                                    \n                                                NgControl\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                    \n                                \n                                \n                                    fn\n                                    \n                                                ValidationErrors\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        function for validating self\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            setDisabledState\n                        \n                        \n                    \n                \n            \n            \n                \nsetDisabledState(isDisabled: boolean)\n                \n            \n\n\n            \n                \n                    Inherited from         AbstractFormControl\n\n                \n            \n            \n                \n                        Defined in         AbstractFormControl:44\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    isDisabled\n                                    \n                                                boolean\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            setErrorMsg\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    setErrorMsg()\n                \n            \n\n\n            \n                \n                    Inherited from         AbstractFormControl\n\n                \n            \n            \n                \n                        Defined in         AbstractFormControl:48\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Abstract\n                            writeValue\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    writeValue(value: any)\n                \n            \n\n\n            \n                \n                    Inherited from         AbstractFormControl\n\n                \n            \n            \n                \n                        Defined in         AbstractFormControl:31\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            _defaultErrMsg\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         ErrorMessage\n\n                        \n                    \n                    \n                        \n                            Default value : {\n    required: `${LabelReplacementTag} is required.`,\n    invalidEmail: `${LabelReplacementTag} must be properly formatted (e.g. name@domain.com)`\n  }\n                        \n                    \n                        \n                            \n                                    Defined in projects/common/lib/components/email/email.component.ts:42\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            controlDir\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         NgControl\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Optional()@Self()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in projects/common/lib/components/email/email.component.ts:49\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            criteria\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     RegExp\n\n                        \n                    \n                    \n                        \n                            Default value : /^(\\S+)@(\\S+)\\.(\\S+)$/\n                        \n                    \n                        \n                            \n                                    Defined in projects/common/lib/components/email/email.component.ts:47\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            email\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : ''\n                        \n                    \n                        \n                            \n                                    Defined in projects/common/lib/components/email/email.component.ts:40\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Abstract\n                            _defaultErrMsg\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         ErrorMessage\n\n                        \n                    \n                    \n                        \n                            Default value : {}\n                        \n                    \n                            \n                                \n                                    Inherited from         AbstractFormControl\n\n                                \n                            \n                        \n                            \n                                    Defined in         AbstractFormControl:10\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            _onChange\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : () => {...}\n                        \n                    \n                            \n                                \n                                    Inherited from         AbstractFormControl\n\n                                \n                            \n                        \n                            \n                                    Defined in         AbstractFormControl:22\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            _onTouched\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : () => {...}\n                        \n                    \n                            \n                                \n                                    Inherited from         AbstractFormControl\n\n                                \n                            \n                        \n                            \n                                    Defined in         AbstractFormControl:23\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            objectId\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : UUID.UUID()\n                        \n                    \n                            \n                                \n                                    Inherited from         Base\n\n                                \n                            \n                        \n                            \n                                    Defined in         Base:11\n\n                            \n                        \n\n                \n                    \n                        An identifier for parents to keep track of components \n\n                    \n                \n\n            \n        \n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        value\n                    \n                \n\n                \n                    \n                        getvalue()\n                    \n                \n                            \n                                \n                                    Defined in projects/common/lib/components/email/email.component.ts:33\n                                \n                            \n\n                \n                    \n                        setvalue(val: string)\n                    \n                \n                            \n                                \n                                    Defined in projects/common/lib/components/email/email.component.ts:28\n                                \n                            \n                    \n                        \n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                        Type\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                            val\n                                                    \n                                                            \n                                                                            string\n                                                            \n                                                    \n                                                        \n                                                                No\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :         void\n\n                                \n                        \n                    \n            \n        \n\n\n\n\n    \n        import {\n  Component,\n  Input,\n  Optional,\n  Self,\n  Output,\n  EventEmitter,\n  OnInit} from '@angular/core';\nimport { NgControl, ValidationErrors } from '@angular/forms';\nimport { AbstractFormControl } from '../../models/abstract-form-control';\nimport { ErrorMessage, LabelReplacementTag } from '../../models/error-message.interface';\n\n/**\n * TODO DOCUMENT NEED TO USE NGMODEL FOR REQUIRED TO WORK. Also test with reactive forms to see if still nec\n */\n@Component({\n  selector: 'common-email',\n  templateUrl: './email.component.html',\n  styleUrls: ['./email.component.scss']\n})\nexport class EmailComponent extends AbstractFormControl implements OnInit {\n\n  @Input() label: string = 'Email';\n  @Input() maxlength: string = '255';\n  @Input() labelforId: string = 'email_' + this.objectId;\n\n  @Input()\n  set value( val: string ) {\n    if ( val ) {\n      this.email = val;\n    }\n  }\n  get value() {\n    return this.email;\n  }\n\n  @Output() valueChange: EventEmitter = new EventEmitter();\n  @Output() blur: EventEmitter = new EventEmitter();\n\n  email: string = '';\n\n  _defaultErrMsg: ErrorMessage = {\n    required: `${LabelReplacementTag} is required.`,\n    invalidEmail: `${LabelReplacementTag} must be properly formatted (e.g. name@domain.com)`\n  };\n\n  private criteria: RegExp = /^(\\S+)@(\\S+)\\.(\\S+)$/;\n\n  constructor( @Optional() @Self() public controlDir: NgControl ) {\n    super();\n    if ( controlDir ) {\n      controlDir.valueAccessor = this;\n    }\n  }\n\n  ngOnInit() {\n    super.ngOnInit();\n\n    this.registerValidation( this.controlDir, this.validateSelf );\n  }\n\n  onValueChange( value: any ) {\n    this.email = value;\n    this._onChange( value );\n    this.valueChange.emit( value );\n  }\n\n  onBlur( event: any ) {\n    this._onTouched( event );\n    this.blur.emit( event.target.value );\n  }\n\n  writeValue( value: any ): void {\n    if ( value ) {\n      this.email = value;\n    }\n  }\n\n  private validateSelf(): ValidationErrors | null {\n\n    if ( this.email ) {\n      const result = this.criteria.test( this.email );\n      return result ? null : { invalidEmail: true };\n    }\n    return null;\n  }\n}\n\n    \n\n    \n        \n{{label}}\n\n\n\n  \n    {{_defaultErrMsg.required}}\n  \n  \n    {{_defaultErrMsg.invalidEmail}}\n  \n\n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '{{label}}      {{_defaultErrMsg.required}}        {{_defaultErrMsg.invalidEmail}}  '\n    var COMPONENTS = [{'name': 'AccordionCommonComponent', 'selector': 'common-accordion'},{'name': 'AddressComponent', 'selector': 'common-address'},{'name': 'ButtonComponent', 'selector': 'common-button'},{'name': 'ButtonGroupComponent', 'selector': 'common-button-group'},{'name': 'CaptchaComponent', 'selector': 'common-captcha'},{'name': 'CheckboxComponent', 'selector': 'common-checkbox'},{'name': 'CityComponent', 'selector': 'common-city'},{'name': 'ConfirmTemplateComponent', 'selector': 'common-confirm-template'},{'name': 'ConsentModalComponent', 'selector': 'common-consent-modal'},{'name': 'CoreBreadcrumbComponent', 'selector': 'common-core-breadcrumb'},{'name': 'CountryComponent', 'selector': 'common-country'},{'name': 'DateComponent', 'selector': 'common-date'},{'name': 'DatepickerComponent', 'selector': 'common-datepicker'},{'name': 'DropdownComponent', 'selector': 'common-dropdown'},{'name': 'EmailComponent', 'selector': 'common-email'},{'name': 'ErrorContainerComponent', 'selector': 'common-error-container'},{'name': 'FileUploaderComponent', 'selector': 'common-file-uploader'},{'name': 'FormActionBarComponent', 'selector': 'common-form-action-bar'},{'name': 'FormSubmitBarComponent', 'selector': 'common-form-submit-bar'},{'name': 'FullNameComponent', 'selector': 'common-full-name'},{'name': 'GeocoderInputComponent', 'selector': 'common-geocoder-input'},{'name': 'HeaderComponent', 'selector': 'common-header'},{'name': 'NameComponent', 'selector': 'common-name'},{'name': 'PageFrameworkComponent', 'selector': 'common-page-framework'},{'name': 'PageSectionComponent', 'selector': 'common-page-section'},{'name': 'PasswordComponent', 'selector': 'common-password'},{'name': 'PhnComponent', 'selector': 'common-phn'},{'name': 'PhoneNumberComponent', 'selector': 'common-phone-number'},{'name': 'PostalCodeComponent', 'selector': 'common-postal-code'},{'name': 'ProvinceComponent', 'selector': 'common-province'},{'name': 'RadioComponent', 'selector': 'common-radio'},{'name': 'SampleModalComponent', 'selector': 'common-sample-modal'},{'name': 'SinComponent', 'selector': 'common-sin'},{'name': 'StreetComponent', 'selector': 'common-street'},{'name': 'ThumbnailComponent', 'selector': 'common-thumbnail'},{'name': 'ToggleComponent', 'selector': 'common-toggle'},{'name': 'WizardProgressBarComponent', 'selector': 'common-wizard-progress-bar'},{'name': 'XiconButtonComponent', 'selector': 'common-xicon-button'}];\n    var DIRECTIVES = [{'name': 'DateFieldFormatDirective', 'selector': '[commonDateFieldFormat]'},{'name': 'DuplicateCheckDirective', 'selector': '[commonDuplicateCheck]'},{'name': 'ValidateBcPostalDirective', 'selector': '[commonValidateBcPostal]'},{'name': 'ValidateCityDirective', 'selector': '[commonValidateCity]'},{'name': 'ValidateNameDirective', 'selector': '[commonValidateName]'},{'name': 'ValidatePostalcodeDirective', 'selector': '[commonValidatePostalcode]'},{'name': 'ValidateRegionDirective', 'selector': '[commonValidateRegion]'},{'name': 'ValidateStreetDirective', 'selector': '[commonValidateStreet]'}];\n    var ACTUAL_COMPONENT = {'name': 'EmailComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ErrorContainerComponent.html":{"url":"components/ErrorContainerComponent.html","title":"component - ErrorContainerComponent","body":"\n                   \n\n\n\n\n\n  Components\n  ErrorContainerComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    projects/common/lib/components/error-container/error-container.component.ts\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                common-error-container\n            \n\n            \n                styleUrls\n                ./error-container.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./error-container.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                displayError\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in projects/common/lib/components/error-container/error-container.component.ts:10\n                            \n                        \n\n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        displayError\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/error-container/error-container.component.ts:10\n                            \n                        \n            \n        \n\n\n\n\n\n\n\n\n\n    \n        import { Component, Input } from '@angular/core';\n\n@Component({\n  selector: 'common-error-container',\n  templateUrl: './error-container.component.html',\n  styleUrls: ['./error-container.component.scss']\n})\nexport class ErrorContainerComponent {\n\n  @Input() displayError: boolean = false;\n\n  constructor() { }\n}\n\n    \n\n    \n        \n  \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  '\n    var COMPONENTS = [{'name': 'AccordionCommonComponent', 'selector': 'common-accordion'},{'name': 'AddressComponent', 'selector': 'common-address'},{'name': 'ButtonComponent', 'selector': 'common-button'},{'name': 'ButtonGroupComponent', 'selector': 'common-button-group'},{'name': 'CaptchaComponent', 'selector': 'common-captcha'},{'name': 'CheckboxComponent', 'selector': 'common-checkbox'},{'name': 'CityComponent', 'selector': 'common-city'},{'name': 'ConfirmTemplateComponent', 'selector': 'common-confirm-template'},{'name': 'ConsentModalComponent', 'selector': 'common-consent-modal'},{'name': 'CoreBreadcrumbComponent', 'selector': 'common-core-breadcrumb'},{'name': 'CountryComponent', 'selector': 'common-country'},{'name': 'DateComponent', 'selector': 'common-date'},{'name': 'DatepickerComponent', 'selector': 'common-datepicker'},{'name': 'DropdownComponent', 'selector': 'common-dropdown'},{'name': 'EmailComponent', 'selector': 'common-email'},{'name': 'ErrorContainerComponent', 'selector': 'common-error-container'},{'name': 'FileUploaderComponent', 'selector': 'common-file-uploader'},{'name': 'FormActionBarComponent', 'selector': 'common-form-action-bar'},{'name': 'FormSubmitBarComponent', 'selector': 'common-form-submit-bar'},{'name': 'FullNameComponent', 'selector': 'common-full-name'},{'name': 'GeocoderInputComponent', 'selector': 'common-geocoder-input'},{'name': 'HeaderComponent', 'selector': 'common-header'},{'name': 'NameComponent', 'selector': 'common-name'},{'name': 'PageFrameworkComponent', 'selector': 'common-page-framework'},{'name': 'PageSectionComponent', 'selector': 'common-page-section'},{'name': 'PasswordComponent', 'selector': 'common-password'},{'name': 'PhnComponent', 'selector': 'common-phn'},{'name': 'PhoneNumberComponent', 'selector': 'common-phone-number'},{'name': 'PostalCodeComponent', 'selector': 'common-postal-code'},{'name': 'ProvinceComponent', 'selector': 'common-province'},{'name': 'RadioComponent', 'selector': 'common-radio'},{'name': 'SampleModalComponent', 'selector': 'common-sample-modal'},{'name': 'SinComponent', 'selector': 'common-sin'},{'name': 'StreetComponent', 'selector': 'common-street'},{'name': 'ThumbnailComponent', 'selector': 'common-thumbnail'},{'name': 'ToggleComponent', 'selector': 'common-toggle'},{'name': 'WizardProgressBarComponent', 'selector': 'common-wizard-progress-bar'},{'name': 'XiconButtonComponent', 'selector': 'common-xicon-button'}];\n    var DIRECTIVES = [{'name': 'DateFieldFormatDirective', 'selector': '[commonDateFieldFormat]'},{'name': 'DuplicateCheckDirective', 'selector': '[commonDuplicateCheck]'},{'name': 'ValidateBcPostalDirective', 'selector': '[commonValidateBcPostal]'},{'name': 'ValidateCityDirective', 'selector': '[commonValidateCity]'},{'name': 'ValidateNameDirective', 'selector': '[commonValidateName]'},{'name': 'ValidatePostalcodeDirective', 'selector': '[commonValidatePostalcode]'},{'name': 'ValidateRegionDirective', 'selector': '[commonValidateRegion]'},{'name': 'ValidateStreetDirective', 'selector': '[commonValidateStreet]'}];\n    var ACTUAL_COMPONENT = {'name': 'ErrorContainerComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ErrorMessage.html":{"url":"interfaces/ErrorMessage.html","title":"interface - ErrorMessage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  ErrorMessage\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/common/lib/models/error-message.interface.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        required\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n            \n    Indexable\n        \n            \n                \n                    \n                        [key: string]:        string\n\n                    \n                \n                        \n                            \n                                Defined in projects/common/lib/models/error-message.interface.ts:13\n                            \n                        \n            \n        \n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        required\n                                    \n                                \n                                \n                                    \n                                        required:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export const LabelReplacementTag = '{label}';\nexport interface ErrorMessage {\n  required?: string;\n  [key: string]: string;\n}\n\n// To catch all occurances of the label tag in the message\nconst regExpLabel = new RegExp( LabelReplacementTag, 'g' );\n\n// Function only used with library\nexport function replaceLabelTag( str: string, value: string ) {\n  return str.replace( regExpLabel, value );\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/FileUploaderMsg.html":{"url":"interfaces/FileUploaderMsg.html","title":"interface - FileUploaderMsg","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  FileUploaderMsg\n\n\n\n        \n            Info\n        \n        \n            Design Guidelines\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/common/lib/components/file-uploader/file-uploader.component.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        required\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        required\n                                    \n                                \n                                \n                                    \n                                        required:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n    \n        Design Guidelines\nLorem ipsum dolor sit amet consectetur adipisicing elit. Sapiente, magnam ipsam. Sit quasi natus architecto rerum unde non provident! Quia nisi facere amet iste mollitia voluptatem non molestias esse optio?\nAperiam fugiat consectetur temporibus, iste repellat, quisquam sapiente nisi distinctio optio, autem nemo tenetur error eum voluptatibus ab accusamus quis voluptatum blanditiis. Quam et ut reprehenderit vitae nobis, at ipsum!\nExercitationem pariatur animi repudiandae corporis obcaecati ratione ducimus beatae quam, nostrum magnam unde numquam quidem cupiditate odit id. Beatae alias molestiae, optio incidunt harum quia voluptates deserunt sequi. Nesciunt, optio.\n\n    \n\n    \n        import { AfterContentInit, ChangeDetectorRef, Component,\n    ContentChild, ElementRef, EventEmitter, Input, NgZone, OnChanges,\n    OnInit, Output, SimpleChanges, ViewChild, forwardRef, AfterViewInit, ViewEncapsulation } from '@angular/core';\nimport { NgForm, ControlContainer } from '@angular/forms';\nimport * as moment from 'moment';\nimport { ModalDirective} from 'ngx-bootstrap';\nimport { PDFJSStatic } from 'pdfjs-dist';\nimport { Observable ,  Observer, fromEvent, merge } from 'rxjs';\nimport {map, filter, flatMap, scan, delay, retryWhen} from 'rxjs/operators';\nimport { CommonImage, CommonImageError, CommonImageProcessingError,\nCommonImageScaleFactors, CommonImageScaleFactorsImpl } from '../../models/images.model';\n// import { MspLogService } from '../../service/log.service';\n// import { MspDataService } from '../../service/msp-data.service';\n// import { BaseComponent } from '../base.component';\n// import { LogEntry } from '../logging/log-entry.model';\n// import {Person} from '../../model/application.model';\nimport {Router} from '@angular/router';\nimport { Base } from '../../models/base';\n// import {ApplicationBase} from '../../model/application-base.model';\n\n// const loadImage = require('blueimp-load-image');\n// const sha1 = require('sha1');\n\nimport * as loadImage_ from 'blueimp-load-image';\nconst loadImage = loadImage_;\nimport * as sha1_ from 'sha1';\nconst sha1 = sha1_;\n\n// const PDFJS: PDFJSStatic = require('pdfjs-dist');\nimport * as PDFJS_ from 'pdfjs-dist';\nconst PDFJS: PDFJSStatic = (PDFJS_ as any);\n\n// const pdfjs = import('pdfjs-dist/build/pdf');\n// const pdfjsWorker = import('pdfjs-dist/build/pdf.worker.entry');\nimport { pdfJsWorker } from 'pdfjs-dist/build/pdf.worker.entry';\nPDFJS.workerSrc=pdfJsWorker;\n\nexport interface FileUploaderMsg {\n    required: string;\n}\n\n// TODO - Remove this and fix tslint issues\n/* tslint:disable:max-line-length*/\n\n@Component({\n    selector: 'common-file-uploader',\n    templateUrl: './file-uploader.component.html',\n    styleUrls: ['./file-uploader.component.scss'],\n    encapsulation: ViewEncapsulation.None,\n    viewProviders: [ { provide: ControlContainer, useExisting: forwardRef(() => NgForm ) } ]\n})\nexport class FileUploaderComponent extends Base\n    implements OnInit, OnChanges, AfterContentInit {\n    noIdImage: Boolean = false;\n    private appConstants;\n    @ViewChild('dropZone') dropZone: ElementRef;\n    @ViewChild('browseFileRef') browseFileRef: ElementRef;\n    // @ViewChild('captureFileRef') captureFileRef: ElementRef;\n    @ViewChild('imagePlaceholderRef') imagePlaceholderRef: ElementRef;\n    @ViewChild('selectFileLabel') selectFileLabelRef: ElementRef;\n\n    // @ContentChild('uploadInstruction') uploadInstructionRef: ElementRef;\n    @Input() images: Array = new Array(0);\n    @Output() imagesChange: EventEmitter> = new EventEmitter>();\n    @Input() id: string;\n    @Input() showError: boolean;\n    @Input() required: boolean = false;\n    @Input() instructionText: string = 'Please upload required ID documents.';\n    @Input() errorMessages: FileUploaderMsg = {required: 'File is required.'};\n\n    @ViewChild('canvas') canvas: ElementRef;\n\n\n    @Output() errorDocument: EventEmitter = new EventEmitter();\n\n    constructor(\n                // private dataService: MspDataService,\n                // private logService: MspLogService,\n                private zone: NgZone,\n                private cd: ChangeDetectorRef , private router: Router,\n                private controlContainer: ControlContainer) {\n        super();\n        // this.application = this.getApplicationType();\n    }\n\n    /**\n     * This is created as a workaround to access the form control that binds to\n     * the input[type='file']. We can't access it via the template name bindings\n     * as that isn't working, so instead we access the parent form and then find\n     * the input by name.\n     */\n    get fileControl() {\n        const INPUT_NAME = `fileUploadBrowse-${this.id}`;\n        // note - should be \"this.controlContainer as NgForm\" here, which works,\n        // but fails on compiliation due to secondary entries\n        return (this.controlContainer as any).controls[INPUT_NAME];\n    }\n\n    /**\n     * Return true if file already exists in the list; false otherwise.\n     */\n    static checkImageExists(file: CommonImage, imageList: Array) {\n        if (!imageList || imageList.length = 0; i--) {\n                // console.log(`compare  ${imageList[i].id} with ${sha1Sum}, result ${imageList[i].id === sha1Sum}`);\n                if (imageList[i].id === sha1Sum) {\n                    console.log(`This file ${file.name} has already been uploaded.`);\n                    return true;\n                }\n            }\n            return false;\n        }\n    }\n\n    /**\n     * A special method to force the rendering of this component.  This is a workaround\n     * because for some unknown reason, AngularJS2 change detector does not detect the\n     * change of the images Array.\n     */\n    forceRender() {\n        this.zone.run(() => {\n        });\n    }\n\n\n    ngOnChanges(changes: SimpleChanges): void {\n        if (changes['images'] && (\n            (changes['images'].currentValue && changes['images'].currentValue.length === 0)\n            && changes['images'].previousValue\n            && changes['images'].previousValue.length > 0)\n        ) {\n            this.noIdImage = true;\n        } else {\n            this.noIdImage = false;\n        }\n    }\n\n    /*\n     System processing steps\n\n     1. User clicks browse or drag-n-drops an file\n     2. For browse case, the browser is told to only accept mime type image/*, .JPG, .GIF, .PNG, etc,\n     however user can override and for drag-n-drop we don't can't impose this filter\n     4. Using the HTML5 File API, we open a handle on the file\n     5. Read the filename for later display to the user\n     6. Create a hidden Image element in the browser's DOM\n     7. Read the file's bytes as a DataUrl and copy them into the Image element\n     8. Wait until the Image finishes loading the image\n     9. Read the image element's natural width and height\n     10. Pass the File handle into a HTML5 Canvas lib (we need the XIFF headers to auto rotate, XIFF headers are not available in DataUrl)\n     11. The Canvas errors because it's a wrong type, e.g., TIFF, we abort and notify user\n     12. Instruct the Canvas lib to keep resizing the image if it exceeds a maximum width or height,\n     extract meta data, and auto-orient based on XIFF metadata.  It uses a \"contain\" operation which retains\n     it's width to height pixel ratio.\n     13. Call a function on the Canvas element to turn the Canvas into a JPEG of quality 50%.\n     14. Once in a Blob with get the blob size in bytes and a human friendly display size\n     15. In order to more easily manage the image, we convert the Blob to a DataUrl again.\n     16. Pass the DataUrl into a hash algorithm to create an identifier and to check if the image has already been uploaded\n     17. Next we check the final size of the image to ensure it's not to small in resolution\n     (arguably this could've been done earlier), if too small we notify user\n     18. Finally, the image is saved into the user's ongoing EA/PA application including localstorage\n     19. The image is displayed to user as a thumbnail\n\n     */\n\n    ngOnInit(): void {\n\n\n        const dragOverStream =\n            fromEvent(this.dropZone.nativeElement, 'dragover');\n\n        /**\n         * Must cancel the dragover event in order for the drop event to work.\n         */\n        dragOverStream.pipe(map(evt => {\n            return event;\n        })).subscribe(evt => {\n            // console.log('Cancel dragover event.');\n            evt.preventDefault();\n        });\n\n        const dropStream = fromEvent(this.dropZone.nativeElement, 'drop');\n        const filesArrayFromDrop = dropStream.pipe(\n            map(\n                function (event) {\n                    event.preventDefault();\n                    return event.dataTransfer.files;\n                }\n            ));\n\n        const browseFileStream = fromEvent(this.browseFileRef.nativeElement, 'change');\n        // const captureFileStream = fromEvent(this.captureFileRef.nativeElement, 'change');\n\n        merge(merge(browseFileStream).pipe(\n            map(\n                (event) => {\n                    event.preventDefault();\n                    return event.target['files'];\n\n                }\n            )),\n            filesArrayFromDrop).pipe(\n                filter(files => {\n                    // console.log('files');\n                    return !!files && files.length && files.length > 0;\n                }),\n                flatMap(\n                    (fileList: FileList) => {\n\n                        return this.observableFromFiles(fileList, new CommonImageScaleFactorsImpl(1, 1));\n                    }\n                ),\n                filter(\n                    (mspImage: CommonImage) => {\n\n                        const imageExists = FileUploaderComponent.checkImageExists(mspImage, this.images);\n                        if (imageExists) {\n                            this.handleError(CommonImageError.AlreadyExists, mspImage);\n                            this.resetInputFields();\n                        }\n                        return !imageExists;\n                    }\n                ),\n                // TODO - Is this necessary? Can likely be removed as it's exactly identical to the preceding.\n                filter((mspImage: CommonImage) => {\n\n                    const imageExists = FileUploaderComponent.checkImageExists(mspImage, this.images);\n                        if (imageExists) {\n                            this.handleError(CommonImageError.AlreadyExists, mspImage);\n                            this.resetInputFields();\n                        }\n                        return !imageExists;\n                    }\n                ),\n                filter((mspImage: CommonImage) => {\n\n                    const imageSizeOk = this.checkImageDimensions(mspImage);\n                        if (!imageSizeOk) {\n                            this.handleError(CommonImageError.TooSmall, mspImage);\n                            this.resetInputFields();\n                        }\n                        return imageSizeOk;\n                    }\n                )\n            ).subscribe(\n            (file: CommonImage) => {\n\n                this.handleImageFile(file);\n                this.resetInputFields();\n            },\n\n            (error) => {\n                console.log('Error in loading image: %o', error);\n\n                /**\n                 * Handle the error if the image is gigantic that after\n                 * 100 times of scaling down by 30% on each step, the image\n                 * is still over 1 MB.\n                 */\n                if (error.errorCode) {\n                    if (CommonImageError.TooBig === error.errorCode) {\n                        this.handleError(CommonImageError.TooBig, error.image);\n                    } else if (CommonImageError.CannotOpen === error.errorCode) {\n                        if (!error.image) {\n                            error.image = new CommonImage();\n                            if (error.rawImageFile) {\n                                error.image.name = error.rawImageFile.name;\n                            }\n                        }\n                        this.handleError(CommonImageError.CannotOpen, error.image);\n                    } else if (CommonImageError.CannotOpenPDF === error.errorCode) {\n                        this.handleError(CommonImageError.CannotOpenPDF, error.image, error.errorDescription);\n                    } else {\n                        throw error;\n                    }\n                }\n\n\n            },\n            () => {\n                console.log('completed loading image');\n            }\n        );\n    }\n\n    test(var1) {\n        console.log(var1);\n    }\n\n    ngAfterContentInit() {\n\n        const imagePlaceholderEnterKeyStream = merge(\n            fromEvent(this.imagePlaceholderRef.nativeElement, 'keyup'),\n            fromEvent(this.selectFileLabelRef.nativeElement, 'keyup'),\n            // fromEvent(this.uploadInstructionRef.nativeElement, 'keyup')\n        ).pipe(filter((evt: KeyboardEvent) => evt.key === 'Enter'));\n\n        merge(\n            fromEvent(this.imagePlaceholderRef.nativeElement, 'click'),\n            // fromEvent(this.uploadInstructionRef.nativeElement, 'click'),\n            imagePlaceholderEnterKeyStream\n        ).pipe(\n            map((event) => {\n                event.preventDefault();\n                return event;\n            })\n        ).subscribe( (event) => { this.browseFileRef.nativeElement.click(); });\n    }\n\n\n    /** Opens the file upload dialog from the browser. */\n    openFileDialog() {\n        console.log('opening file dialog');\n        this.browseFileRef.nativeElement.click();\n    }\n\n    /**\n     * Solve size in this equation: size * 0.8to-the-power-of30 ) => {\n            const mspImages = [];\n            scaleFactors = scaleFactors.scaleDown(reductionScaleFactor);\n            for (let fileIndex = 0; fileIndex  {\n\n\n                        // this.logService.log({name: file.name + 'is successfully split into ' + images.length + ' images',\n                            // UUID: self.dataService.getMspUuid()}, 'File_Upload');\n\n                        images.map((image, index) => {\n                            image.name = pdfFile.name;\n                            this.resizeImage( image, self, scaleFactors, observer, pageNumber , true); // index starts from zero\n                            pageNumber = pageNumber + 1  ;\n                        });\n                    }, (error: string) => {\n                        console.log('error' + JSON.stringify(error));\n                        const imageReadError: CommonImageProcessingError =\n                            new CommonImageProcessingError(CommonImageError.CannotOpenPDF, error);\n                        observer.error(imageReadError);\n                    });\n                } else {\n                    // Load image into img element to read natural height and width\n                    this.readImage(file, pageNumber , (image: HTMLImageElement , imageFile: File , nextPageNumber: number)  => {\n                            image.id = imageFile.name; // .name deprecated, changed image.name to image.id\n                            this.resizeImage(image, self, scaleFactors, observer , nextPageNumber );\n                        },\n\n                        // can be ignored for bug, the log line is never called\n                        (error: CommonImageProcessingError) => {\n                            console.log('error' + JSON.stringify(error));\n                            observer.error(error);\n                        });\n                    pageNumber = pageNumber + 1  ;\n                }\n            }\n\n            // retryWhen is potential issue!\n        }).pipe(retryWhen(this.retryStrategy(32)));\n        return fileObservable;\n    }\n\n\n    private resizeImage( image: HTMLImageElement, self: this, scaleFactors: CommonImageScaleFactors, observer: Observer, pageNumber: number = 0 , isPdf: boolean = false) {\n// While it's still in an image, get it's height and width\n        const mspImage: CommonImage = new CommonImage();\n        const reader: FileReader = new FileReader();\n        console.log('image.name:' + image.id); // .name deprecated, changed image.name to image.id\n        // Copy file properties\n        mspImage.name = image.id ;\n        if (isPdf) {\n            mspImage.name = image.name + '-page' + pageNumber;  // Just give name to pdf\n        }\n        // Temporary so we don't have duplicate file names. TODO: Improve.\n        //   mspImage.name += Math.ceil(Math.random()*100);\n        mspImage.attachmentOrder = pageNumber ;\n\n\n        mspImage.naturalWidth = image.naturalWidth;\n        mspImage.naturalHeight = image.naturalHeight;\n\n        console.log(`image file natural height and width:\n            ${mspImage.naturalHeight} x ${mspImage.naturalWidth}`);\n\n        // Canvas will force the change to a JPEG\n        mspImage.contentType = 'image/jpeg'; // previously in appConstants\n\n        // Scale the image by loading into a canvas\n\n        console.log('Start scaling down the image using blueimp-load-image lib: ');\n        const scaledImage = loadImage(\n            image.src, // NOTE: we pass the File ref here again even though its already read because we need the XIFF metadata\n            function (canvas: HTMLCanvasElement, metadata: any) {\n\n                // Canvas may be an Event when errors happens\n                if (canvas instanceof Event) {\n                    self.handleError(CommonImageError.WrongType, mspImage);\n                    self.resetInputFields();\n                    return;\n                }\n                // Convert to blob to get size\n                canvas.toBlob((blob: Blob) => {\n                        // Copy the blob properties\n                        mspImage.size = blob.size;\n\n                        // log image info (but only for the first time before any scaling)\n                        // if (s\n\n                        const fileName = mspImage.name;\n                        const nBytes = mspImage.size;\n                        let fileSize = '';\n                        let fileSizeUnit = '';\n                        let sOutput: string = nBytes + ' bytes';\n                        // optional code for multiples approximation\n                        for (let aMultiples = ['KiB', 'MiB', 'GiB', 'TiB', 'PiB', 'EiB', 'ZiB', 'YiB'],\n                                 nMultiple = 0, nApprox = nBytes / 1024; nApprox > 1; nApprox /= 1024, nMultiple++) {\n\n                            sOutput = nApprox.toFixed(3) + ' ' + aMultiples[nMultiple] + ' (' + nBytes + ' bytes)';\n                            fileSize = nApprox.toFixed(0);\n                            fileSizeUnit = aMultiples[nMultiple];\n                            mspImage.sizeUnit = fileSizeUnit;\n                        }\n\n                        console.log(`File ${fileName} is scaled down to: ${sOutput}`);\n                        mspImage.sizeTxt = sOutput;\n\n                        // call reader with new transformed image\n                        reader.onload = function (evt: any) {\n\n                            mspImage.fileContent = evt.target.result;\n                            mspImage.id = sha1(mspImage.fileContent);\n\n                            // keep scaling down the image until the image size is\n                            // under max image size\n\n                            /** previously in appConstants */\n                            const maxSizeBytes = 1048576;\n                            if (mspImage.size > maxSizeBytes) {\n\n                                console.log('File size after scaling down: %d, max file size allowed: %d',\n                                    mspImage.size, maxSizeBytes);\n\n                                const imageTooBigError: CommonImageProcessingError =\n                                    new CommonImageProcessingError(CommonImageError.TooBig);\n\n                                imageTooBigError.maxSizeAllowed = maxSizeBytes;\n                                imageTooBigError.commonImage = mspImage;\n\n                                observer.error(imageTooBigError);\n                            } else {\n                                // log image info\n                                //   self.logImageInfo(\"msp_file-uploader_after_resize_attributes\", self.dataService.getMspUuid(), mspImage);\n                                observer.next(mspImage);\n                            }\n                        };\n                        reader.readAsDataURL(blob);\n                    },\n\n                    // What mime type to make the blob as and jpeg quality\n                    'image/jpeg', 0.5);\n            },\n            {\n                maxWidth: 2600 * scaleFactors.widthFactor,\n                maxHeight: 3300 * scaleFactors.heightFactor,\n                contain: true,\n                canvas: true,\n                meta: true,\n                orientation: true\n            }\n        );\n    }\n\n    /**\n     * Max retry scaling down for maxRetry times.\n     */\n    retryStrategy(maxRetry: number) {\n        return function (errors: Observable) {\n\n            /**Done: COMPLETE THIS! For some reason can't get scan() to work, types always malformed.*/\n\n            // return errors.pipe(\n            //     // scan((acc, curr) => {acc + curr}, 0)\n            //     scan((acc, error, index) => {\n            //         return acc + error;\n            //     }, 0)\n            // );\n\n            // Done: Unsure if we have to re-implement this line. It causes errors, but simply removing it may not be appropriate.\n            // NOTE: RxJS-compat might be saving us here and \"fixing\" the errors. See if errors return when we remove rxjs-compat.\n            // return errors.pipe(scan((acc, curr) => acc + curr, 0))\n\n\n            return errors.pipe(scan(\n                // return errors.pipe(\n                (acc, error: any, index) => {\n                    // console.log('Error encountered: %o', error);;\n\n                    /**\n                     * If the error is about file too big and we have not reach max retry\n                     * yet, theyt keep going to scaling down.\n                     */\n                    if (acc  void,\n                      invalidImageHanlder: (error: CommonImageProcessingError) => void) {\n        const reader = new FileReader();\n\n        reader.onload = function (progressEvt: ProgressEvent) {\n\n            console.log('loading image into an img tag: %o', progressEvt);\n            // Load into an image element\n            const imgEl: HTMLImageElement = document.createElement('img');\n            imgEl.src = (reader.result as string);\n\n            // Wait for onload so all properties are populated\n            imgEl.onload = (args) => {\n                console.log('Completed image loading into an img tag: %o', args);\n                return callback(imgEl, imageFile, nextPageNumber);\n            };\n\n            imgEl.onerror =\n                (args) => {\n\n                    // log it to the console\n                    console.log('This image cannot be opened/read, it is probably an invalid image. %o', args);\n\n                    // throw new Error('This image cannot be opened/read');\n                    const imageReadError: CommonImageProcessingError =\n                        new CommonImageProcessingError(CommonImageError.CannotOpen);\n\n                    imageReadError.rawImageFile = imageFile;\n\n                    return invalidImageHanlder(imageReadError);\n                };\n        };\n\n        reader.readAsDataURL(imageFile);\n    }\n\n    private readPDF(pdfFile: File, pdfScaleFactor: number,\n                    callback: (image: HTMLImageElement[], pdfFile: File) => void, error: (errorReason: any) => void) {\n\n        PDFJS.disableWorker = true;\n        PDFJS.disableStream = true;\n\n        const reader = new FileReader();\n        let currentPage = 1;\n        const canvas = document.createElement('canvas');\n        const imgElsArray: HTMLImageElement[] = [];\n        const ctx = canvas.getContext('2d');\n        reader.onload = function (progressEvt: ProgressEvent) {\n\n            const docInitParams = {data: reader.result};\n            // TODO - The 'as any' was added when porting to common library from MSP\n            PDFJS.getDocument((docInitParams as any)).then((pdfdoc) => {\n                const numPages = pdfdoc.numPages;\n                if (currentPage = 50) {\n\n            // log it\n            // this.logImageInfo('msp_file-uploader_error', this.dataService.getMspUuid(),\n            //     mspImage, `Number of image files exceeds max of ${50}`);\n\n            // log to console\n            console.log(`Max number of image file you can upload is ${50}.\n      This file ${mspImage.name} was not uploaded.`);\n        } else {\n            this.images.push(mspImage);\n            this.imagesChange.emit(this.images);\n            this.showError = false;\n            this.noIdImage = false;\n        }\n    }\n\n    handleError(error: CommonImageError, mspImage: CommonImage, errorDescription?: string) {\n\n        if (!mspImage) {\n            mspImage = new CommonImage();\n        }\n        // just add the error to mspImage\n        mspImage.error = error;\n\n        // log the error\n        if (error !== CommonImageError.PDFnotSupported) {\n            // this.logImageInfo('msp_file-uploader_error', this.dataService.getMspUuid(), mspImage,\n            //     '  mspImageFile: ' + mspImage.name + '  mspErrorNum: ' + error + '  mspError: ' +\n            //     error + '-' + errorDescription);\n        }\n\n        // console.log(\"error with image: \", mspImage);\n        this.errorDocument.emit(mspImage);\n    }\n\n    /**\n     * Reset input fields so that user can delete a file and\n     * immediately upload that file again.\n     */\n    resetInputFields() {\n        // let brosweFileInputElement = this.browseFileRef.nativeElement;\n        // let captureFileInputElement = this.captureFileRef.nativeElement;\n        this.browseFileRef.nativeElement.value = '';\n        // this.captureFileRef.nativeElement.value = '';\n    }\n\n    deleteImage(mspImage: CommonImage) {\n        this.resetInputFields();\n        this.images = this.images.filter(x => x.uuid !== mspImage.uuid);\n        this.imagesChange.emit(this.images);\n\n        // If there are no images yet, we have to reset the input so it triggers 'required'.\n        if ( this.required && this.images.length  {\n        //         // console.log('log rest service response: ');\n        //         // console.log(response);\n        //     },\n        //     (error) => {\n        //         console.log('HTTP error response from logging service: ');\n        //         console.log(error);\n        //     },\n        //     () => {\n        //         // console.log('log rest service completed!');\n        //     }\n        // );\n    }\n\n\n\n    /**\n     * Return true if the image size is within range\n     * @param file\n     */\n    checkImageDimensions(file: CommonImage): boolean {\n        if (file.naturalHeight  0;\n        }\n        return true;\n    }\n\n}\n\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/FormActionBarComponent.html":{"url":"components/FormActionBarComponent.html","title":"component - FormActionBarComponent","body":"\n                   \n\n\n\n\n\n  Components\n  FormActionBarComponent\n\n\n\n        \n            Info\n        \n        \n            Design Guidelines\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    projects/common/lib/components/form-action-bar/form-action-bar.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                common-form-action-bar\n            \n\n            \n                styleUrls\n                ./form-action-bar.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./form-action-bar.component.html\n            \n\n            \n                viewProviders\n                \n                    \n                                { provide: ControlContainer, useExisting: forwardRef(() => NgForm) }\n                    \n                \n            \n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                            \n                                onClick\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                canContinue\n                            \n                            \n                                defaultColor\n                            \n                            \n                                isLoading\n                            \n                            \n                                scrollToErrorsOnSubmit\n                            \n                            \n                                submitLabel\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                btnClick\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in projects/common/lib/components/form-action-bar/form-action-bar.component.ts:18\n                            \n                        \n\n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        canContinue\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : true\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/form-action-bar/form-action-bar.component.ts:13\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        defaultColor\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : true\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/form-action-bar/form-action-bar.component.ts:15\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        isLoading\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/form-action-bar/form-action-bar.component.ts:14\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        scrollToErrorsOnSubmit\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : true\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/form-action-bar/form-action-bar.component.ts:18\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        submitLabel\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'Continue'\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/form-action-bar/form-action-bar.component.ts:12\n                            \n                        \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        btnClick\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/form-action-bar/form-action-bar.component.ts:16\n                            \n                        \n            \n        \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/components/form-action-bar/form-action-bar.component.ts:22\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            onClick\n                        \n                        \n                    \n                \n            \n            \n                \nonClick($event)\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/components/form-action-bar/form-action-bar.component.ts:25\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    $event\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n    \n        Design Guidelines\nLorem ipsum dolor sit amet consectetur adipisicing elit. Sapiente, magnam ipsam. Sit quasi natus architecto rerum unde non provident! Quia nisi facere amet iste mollitia voluptatem non molestias esse optio?\nAperiam fugiat consectetur temporibus, iste repellat, quisquam sapiente nisi distinctio optio, autem nemo tenetur error eum voluptatibus ab accusamus quis voluptatum blanditiis. Quam et ut reprehenderit vitae nobis, at ipsum!\nExercitationem pariatur animi repudiandae corporis obcaecati ratione ducimus beatae quam, nostrum magnam unde numquam quidem cupiditate odit id. Beatae alias molestiae, optio incidunt harum quia voluptates deserunt sequi. Nesciunt, optio.\n\n    \n\n    \n        import { Component, OnInit, Input, Output, EventEmitter, forwardRef } from '@angular/core';\nimport { ControlContainer, NgForm } from '@angular/forms';\nimport { scrollToError } from '../../../helpers/scroll-helpers';\n\n@Component({\n  selector: 'common-form-action-bar',\n  templateUrl: './form-action-bar.component.html',\n  styleUrls: ['./form-action-bar.component.scss'],\n  viewProviders: [ { provide: ControlContainer, useExisting: forwardRef(() => NgForm ) } ]\n})\nexport class FormActionBarComponent implements OnInit {\n  @Input() submitLabel: string = 'Continue';\n  @Input() canContinue: boolean = true;\n  @Input() isLoading: boolean = false;\n  @Input() defaultColor: boolean = true;\n  @Output() btnClick: EventEmitter = new EventEmitter();\n\n  @Input() scrollToErrorsOnSubmit: boolean = true;\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n  onClick($event) {\n    if (!this.isLoading && this.canContinue) {\n      this.btnClick.emit($event);\n\n      if (this.scrollToErrorsOnSubmit) {\n        // Scroll to error after 50ms, give time for errors to display etc.\n        // This timeout is outside of Angular change detection.\n        setTimeout(scrollToError, 50);\n      }\n    }\n    $event.stopPropagation();\n    return false;\n  }\n}\n\n    \n\n    \n        \n    \n       {{submitLabel}} \n      \n    \n\n\n\n    \n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '           {{submitLabel}}               '\n    var COMPONENTS = [{'name': 'AccordionCommonComponent', 'selector': 'common-accordion'},{'name': 'AddressComponent', 'selector': 'common-address'},{'name': 'ButtonComponent', 'selector': 'common-button'},{'name': 'ButtonGroupComponent', 'selector': 'common-button-group'},{'name': 'CaptchaComponent', 'selector': 'common-captcha'},{'name': 'CheckboxComponent', 'selector': 'common-checkbox'},{'name': 'CityComponent', 'selector': 'common-city'},{'name': 'ConfirmTemplateComponent', 'selector': 'common-confirm-template'},{'name': 'ConsentModalComponent', 'selector': 'common-consent-modal'},{'name': 'CoreBreadcrumbComponent', 'selector': 'common-core-breadcrumb'},{'name': 'CountryComponent', 'selector': 'common-country'},{'name': 'DateComponent', 'selector': 'common-date'},{'name': 'DatepickerComponent', 'selector': 'common-datepicker'},{'name': 'DropdownComponent', 'selector': 'common-dropdown'},{'name': 'EmailComponent', 'selector': 'common-email'},{'name': 'ErrorContainerComponent', 'selector': 'common-error-container'},{'name': 'FileUploaderComponent', 'selector': 'common-file-uploader'},{'name': 'FormActionBarComponent', 'selector': 'common-form-action-bar'},{'name': 'FormSubmitBarComponent', 'selector': 'common-form-submit-bar'},{'name': 'FullNameComponent', 'selector': 'common-full-name'},{'name': 'GeocoderInputComponent', 'selector': 'common-geocoder-input'},{'name': 'HeaderComponent', 'selector': 'common-header'},{'name': 'NameComponent', 'selector': 'common-name'},{'name': 'PageFrameworkComponent', 'selector': 'common-page-framework'},{'name': 'PageSectionComponent', 'selector': 'common-page-section'},{'name': 'PasswordComponent', 'selector': 'common-password'},{'name': 'PhnComponent', 'selector': 'common-phn'},{'name': 'PhoneNumberComponent', 'selector': 'common-phone-number'},{'name': 'PostalCodeComponent', 'selector': 'common-postal-code'},{'name': 'ProvinceComponent', 'selector': 'common-province'},{'name': 'RadioComponent', 'selector': 'common-radio'},{'name': 'SampleModalComponent', 'selector': 'common-sample-modal'},{'name': 'SinComponent', 'selector': 'common-sin'},{'name': 'StreetComponent', 'selector': 'common-street'},{'name': 'ThumbnailComponent', 'selector': 'common-thumbnail'},{'name': 'ToggleComponent', 'selector': 'common-toggle'},{'name': 'WizardProgressBarComponent', 'selector': 'common-wizard-progress-bar'},{'name': 'XiconButtonComponent', 'selector': 'common-xicon-button'}];\n    var DIRECTIVES = [{'name': 'DateFieldFormatDirective', 'selector': '[commonDateFieldFormat]'},{'name': 'DuplicateCheckDirective', 'selector': '[commonDuplicateCheck]'},{'name': 'ValidateBcPostalDirective', 'selector': '[commonValidateBcPostal]'},{'name': 'ValidateCityDirective', 'selector': '[commonValidateCity]'},{'name': 'ValidateNameDirective', 'selector': '[commonValidateName]'},{'name': 'ValidatePostalcodeDirective', 'selector': '[commonValidatePostalcode]'},{'name': 'ValidateRegionDirective', 'selector': '[commonValidateRegion]'},{'name': 'ValidateStreetDirective', 'selector': '[commonValidateStreet]'}];\n    var ACTUAL_COMPONENT = {'name': 'FormActionBarComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/FormSubmitBarComponent.html":{"url":"components/FormSubmitBarComponent.html","title":"component - FormSubmitBarComponent","body":"\n                   \n\n\n\n\n\n  Components\n  FormSubmitBarComponent\n\n\n\n        \n            Info\n        \n        \n            Design Guidelines\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    projects/common/lib/components/form-submit-bar/form-submit-bar.component.ts\n\n\n    \n        Description\n    \n    \n        FormSubmitBar is similar to FormActionBar, but it is meant to be used with\n(ngSubmit) on the form. Make sure to enclose FormSubmitBar inside of the form\nin question.\n\n    \n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                common-form-submit-bar\n            \n\n            \n                styleUrls\n                ./form-submit-bar.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./form-submit-bar.component.html\n            \n\n            \n                viewProviders\n                \n                    \n                                { provide: ControlContainer, useExisting: forwardRef(() => NgForm) }\n                    \n                \n            \n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                canContinue\n                            \n                            \n                                defaultColor\n                            \n                            \n                                increaseWidth\n                            \n                            \n                                isLoading\n                            \n                            \n                                submitLabel\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                btnClick\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in projects/common/lib/components/form-submit-bar/form-submit-bar.component.ts:31\n                            \n                        \n\n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        canContinue\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : true\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/form-submit-bar/form-submit-bar.component.ts:18\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        defaultColor\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : true\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/form-submit-bar/form-submit-bar.component.ts:20\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        increaseWidth\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/form-submit-bar/form-submit-bar.component.ts:31\n                            \n                        \n                \n                    \n                        Is the component nested inside a form, and not properly full-width in a\npage layout? We add negative margins to space out.\nCurrently tihs only works for the 'blank' layout type for the page\nframework, but would be easy to extend by adding more negative classes as\nneed be.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        isLoading\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/form-submit-bar/form-submit-bar.component.ts:19\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        submitLabel\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'Continue'\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/form-submit-bar/form-submit-bar.component.ts:17\n                            \n                        \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        btnClick\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/form-submit-bar/form-submit-bar.component.ts:21\n                            \n                        \n            \n        \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/components/form-submit-bar/form-submit-bar.component.ts:35\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n\n\n    \n        Design Guidelines\nLorem ipsum dolor sit amet consectetur adipisicing elit. Sapiente, magnam ipsam. Sit quasi natus architecto rerum unde non provident! Quia nisi facere amet iste mollitia voluptatem non molestias esse optio?\nAperiam fugiat consectetur temporibus, iste repellat, quisquam sapiente nisi distinctio optio, autem nemo tenetur error eum voluptatibus ab accusamus quis voluptatum blanditiis. Quam et ut reprehenderit vitae nobis, at ipsum!\nExercitationem pariatur animi repudiandae corporis obcaecati ratione ducimus beatae quam, nostrum magnam unde numquam quidem cupiditate odit id. Beatae alias molestiae, optio incidunt harum quia voluptates deserunt sequi. Nesciunt, optio.\n\n    \n\n    \n        import { Component, OnInit, Input, Output, EventEmitter, forwardRef } from '@angular/core';\nimport { ControlContainer, NgForm } from '@angular/forms';\n\n\n/**\n * FormSubmitBar is similar to FormActionBar, but it is meant to be used with\n * (ngSubmit) on the form. Make sure to enclose FormSubmitBar inside of the form\n * in question.\n */\n@Component({\n  selector: 'common-form-submit-bar',\n  templateUrl: './form-submit-bar.component.html',\n  styleUrls: ['./form-submit-bar.component.scss'],\n  viewProviders: [ { provide: ControlContainer, useExisting: forwardRef(() => NgForm ) } ]\n})\nexport class FormSubmitBarComponent implements OnInit {\n  @Input() submitLabel: string = 'Continue';\n  @Input() canContinue: boolean = true;\n  @Input() isLoading: boolean = false;\n  @Input() defaultColor: boolean = true;\n  @Output() btnClick: EventEmitter = new EventEmitter();\n\n  /**\n   * Is the component nested inside a form, and not properly full-width in a\n   * page layout? We add negative margins to space out.\n   *\n   * Currently tihs only works for the 'blank' layout type for the page\n   * framework, but would be easy to extend by adding more negative classes as\n   * need be.\n   */\n  @Input() increaseWidth: boolean = false;\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n}\n\n    \n\n    \n        \n        \n           {{submitLabel}} \n          \n        \n    \n    \n    \n        \n    \n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                   {{submitLabel}}                                           '\n    var COMPONENTS = [{'name': 'AccordionCommonComponent', 'selector': 'common-accordion'},{'name': 'AddressComponent', 'selector': 'common-address'},{'name': 'ButtonComponent', 'selector': 'common-button'},{'name': 'ButtonGroupComponent', 'selector': 'common-button-group'},{'name': 'CaptchaComponent', 'selector': 'common-captcha'},{'name': 'CheckboxComponent', 'selector': 'common-checkbox'},{'name': 'CityComponent', 'selector': 'common-city'},{'name': 'ConfirmTemplateComponent', 'selector': 'common-confirm-template'},{'name': 'ConsentModalComponent', 'selector': 'common-consent-modal'},{'name': 'CoreBreadcrumbComponent', 'selector': 'common-core-breadcrumb'},{'name': 'CountryComponent', 'selector': 'common-country'},{'name': 'DateComponent', 'selector': 'common-date'},{'name': 'DatepickerComponent', 'selector': 'common-datepicker'},{'name': 'DropdownComponent', 'selector': 'common-dropdown'},{'name': 'EmailComponent', 'selector': 'common-email'},{'name': 'ErrorContainerComponent', 'selector': 'common-error-container'},{'name': 'FileUploaderComponent', 'selector': 'common-file-uploader'},{'name': 'FormActionBarComponent', 'selector': 'common-form-action-bar'},{'name': 'FormSubmitBarComponent', 'selector': 'common-form-submit-bar'},{'name': 'FullNameComponent', 'selector': 'common-full-name'},{'name': 'GeocoderInputComponent', 'selector': 'common-geocoder-input'},{'name': 'HeaderComponent', 'selector': 'common-header'},{'name': 'NameComponent', 'selector': 'common-name'},{'name': 'PageFrameworkComponent', 'selector': 'common-page-framework'},{'name': 'PageSectionComponent', 'selector': 'common-page-section'},{'name': 'PasswordComponent', 'selector': 'common-password'},{'name': 'PhnComponent', 'selector': 'common-phn'},{'name': 'PhoneNumberComponent', 'selector': 'common-phone-number'},{'name': 'PostalCodeComponent', 'selector': 'common-postal-code'},{'name': 'ProvinceComponent', 'selector': 'common-province'},{'name': 'RadioComponent', 'selector': 'common-radio'},{'name': 'SampleModalComponent', 'selector': 'common-sample-modal'},{'name': 'SinComponent', 'selector': 'common-sin'},{'name': 'StreetComponent', 'selector': 'common-street'},{'name': 'ThumbnailComponent', 'selector': 'common-thumbnail'},{'name': 'ToggleComponent', 'selector': 'common-toggle'},{'name': 'WizardProgressBarComponent', 'selector': 'common-wizard-progress-bar'},{'name': 'XiconButtonComponent', 'selector': 'common-xicon-button'}];\n    var DIRECTIVES = [{'name': 'DateFieldFormatDirective', 'selector': '[commonDateFieldFormat]'},{'name': 'DuplicateCheckDirective', 'selector': '[commonDuplicateCheck]'},{'name': 'ValidateBcPostalDirective', 'selector': '[commonValidateBcPostal]'},{'name': 'ValidateCityDirective', 'selector': '[commonValidateCity]'},{'name': 'ValidateNameDirective', 'selector': '[commonValidateName]'},{'name': 'ValidatePostalcodeDirective', 'selector': '[commonValidatePostalcode]'},{'name': 'ValidateRegionDirective', 'selector': '[commonValidateRegion]'},{'name': 'ValidateStreetDirective', 'selector': '[commonValidateStreet]'}];\n    var ACTUAL_COMPONENT = {'name': 'FormSubmitBarComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/FullNameComponent.html":{"url":"components/FullNameComponent.html","title":"component - FullNameComponent","body":"\n                   \n\n\n\n\n\n  Components\n  FullNameComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    projects/common/lib/components/full-name/full-name.component.ts\n\n\n    \n        Description\n    \n    \n        FullNameComponent includes a first, middle, and last name field.  If you only\nneed an individual field, @see NameComponent.\nNote This component is in dev, there are issues around \"required\"\nTODO - Properly handle \"required\"\n\n    \n\n    \n        Extends\n    \n    \n                Base\n    \n\n    \n        Implements\n    \n    \n                    ControlValueAccessor\n                    OnInit\n    \n\n    \n        Example\n    \n    \n                \n                    \n                \n    \n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n            \n                providers\n                \n                            { provide: NG_VALUE_ACCESSOR, multi: true, useExisting: forwardRef(() => FullNameComponent) }\n                \n            \n\n\n            \n                selector\n                common-full-name\n            \n\n            \n                styleUrls\n                ./full-name.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./full-name.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                _onChange\n                            \n                            \n                                    Public\n                                _onTouched\n                            \n                            \n                                    Public\n                                errMsg\n                            \n                            \n                                firstName\n                            \n                            \n                                lastName\n                            \n                            \n                                middleName\n                            \n                            \n                                    Public\n                                NameRegEx\n                            \n                            \n                                    Private\n                                pattern\n                            \n                            \n                                    Private\n                                requiredMsgSeg\n                            \n                            \n                                    Public\n                                objectId\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                            \n                                registerOnChange\n                            \n                            \n                                registerOnTouched\n                            \n                            \n                                writeValue\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                disabled\n                            \n                            \n                                firstNamelabel\n                            \n                            \n                                lastNamelabel\n                            \n                            \n                                middleNamelabel\n                            \n                            \n                                person\n                            \n                            \n                                showError\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                personChange\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in projects/common/lib/components/full-name/full-name.component.ts:57\n                            \n                        \n\n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        disabled\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/full-name/full-name.component.ts:42\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        firstNamelabel\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'First Name'\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/full-name/full-name.component.ts:39\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        lastNamelabel\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'Last Name'\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/full-name/full-name.component.ts:41\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        middleNamelabel\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'Middle Name'\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/full-name/full-name.component.ts:40\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        person\n                    \n                \n                \n                    \n                        Type :         Person\n\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/full-name/full-name.component.ts:36\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        showError\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/full-name/full-name.component.ts:38\n                            \n                        \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        personChange\n                    \n                \n                \n                    \n                        Type :         EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/full-name/full-name.component.ts:37\n                            \n                        \n            \n        \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/components/full-name/full-name.component.ts:63\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            registerOnChange\n                        \n                        \n                    \n                \n            \n            \n                \nregisterOnChange(fn: any)\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/components/full-name/full-name.component.ts:113\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    fn\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            registerOnTouched\n                        \n                        \n                    \n                \n            \n            \n                \nregisterOnTouched(fn: any)\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/components/full-name/full-name.component.ts:117\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    fn\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            writeValue\n                        \n                        \n                    \n                \n            \n            \n                \nwriteValue(value: any)\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/components/full-name/full-name.component.ts:121\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            _onChange\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : () => {...}\n                        \n                    \n                        \n                            \n                                    Defined in projects/common/lib/components/full-name/full-name.component.ts:56\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            _onTouched\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : () => {...}\n                        \n                    \n                        \n                            \n                                    Defined in projects/common/lib/components/full-name/full-name.component.ts:57\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            errMsg\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         FullNameErrorMsg\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/common/lib/components/full-name/full-name.component.ts:51\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            firstName\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/common/lib/components/full-name/full-name.component.ts:45\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            lastName\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/common/lib/components/full-name/full-name.component.ts:47\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            middleName\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/common/lib/components/full-name/full-name.component.ts:46\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            NameRegEx\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : '^[a-zA-Z][a-zA-Z\\\\-.\\' ]*$'\n                        \n                    \n                        \n                            \n                                    Defined in projects/common/lib/components/full-name/full-name.component.ts:49\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            pattern\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'Must begin with a letter followed by a letters, hyphen, period, apostrophe, or blank character'\n                        \n                    \n                        \n                            \n                                    Defined in projects/common/lib/components/full-name/full-name.component.ts:54\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            requiredMsgSeg\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'is required'\n                        \n                    \n                        \n                            \n                                    Defined in projects/common/lib/components/full-name/full-name.component.ts:53\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            objectId\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : UUID.UUID()\n                        \n                    \n                            \n                                \n                                    Inherited from         Base\n\n                                \n                            \n                        \n                            \n                                    Defined in         Base:11\n\n                            \n                        \n\n                \n                    \n                        An identifier for parents to keep track of components \n\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import {forwardRef, Component, Input, Output, EventEmitter, ViewChild, ChangeDetectorRef, OnInit} from '@angular/core';\nimport {Person} from '../../models/person.model';\nimport {Base} from '../../models/base';\nimport {debounceTime} from 'rxjs/operators';\nimport { ControlContainer, ControlValueAccessor, NgForm, NG_VALUE_ACCESSOR } from '@angular/forms';\n\n\nexport interface FullNameErrorMsg {\n  required?: string;\n  pattern?: string;\n}\n\n/**\n * FullNameComponent includes a first, middle, and last name field.  If you only\n * need an individual field, @see NameComponent.\n *\n * **Note** This component is in dev, there are issues around \"required\"\n * TODO - Properly handle \"required\"\n *\n * @example\n *          \n *\n * @export\n */\n@Component({\n  selector: 'common-full-name',\n  templateUrl: './full-name.component.html',\n  styleUrls: ['./full-name.component.scss'],\n  providers: [\n    { provide: NG_VALUE_ACCESSOR, multi: true, useExisting: forwardRef(() => FullNameComponent )}\n  ]\n})\n\nexport class FullNameComponent extends Base implements ControlValueAccessor, OnInit {\n\n  @Input() person: Person;\n  @Output() personChange = new EventEmitter();\n  @Input() showError: boolean;\n  @Input() firstNamelabel: string = 'First Name';\n  @Input() middleNamelabel: string = 'Middle Name';\n  @Input() lastNamelabel: string = 'Last Name';\n  @Input() disabled: boolean = false;\n\n\n  firstName: string ;\n  middleName: string;\n  lastName: string ;\n\n  public NameRegEx: string = '^[a-zA-Z][a-zA-Z\\\\-.\\' ]*$';\n\n  public errMsg: FullNameErrorMsg ;\n  // default messages\n  private requiredMsgSeg: string = 'is required';\n  private pattern: string = 'Must begin with a letter followed by a letters, hyphen, period, apostrophe, or blank character';\n\n  public _onChange = (_: any) => {};\n  public _onTouched = () => {};\n\n  constructor() {\n    super();\n  }\n\n  ngOnInit() {\n\n    if (this.person) {\n      this.firstName = this.person.firstName ? this.person.firstName : '';\n      this.lastName = this.person.lastName ? this.person.lastName : '';\n      this.middleName = this.person.middleName ? this.person.middleName : '';\n    }\n\n    this.errMsg =    {\n      required: this.requiredMsgSeg,\n      pattern: this.pattern\n    };\n  }\n\n  /*ngAfterViewInit(): void {\n      // https://github.com/angular/angular/issues/24818\n      this.form.valueChanges.pipe(debounceTime(0)).subscribe((values) => {\n        this.onChange.emit(values);\n        this._onChange(values);\n        this._onTouched();\n      }\n    );\n\n  }*/\n\n  // setFirstName(value: any) {\n  //   this.person.firstName = value;\n  //   this.onChange.emit(this.person);\n  //   this._onChange(this.person);\n  //   this._onTouched();\n  // }\n\n  // setMiddleName(value: any) {\n\n  //   this.person.middleName = value;\n  //   this.onChange.emit(this.person);\n  //   this._onChange(this.person);\n  //   this._onTouched();\n\n  // }\n\n  // setLastName(value: any) {\n\n  //   this.person.lastName = value;\n  //   this.onChange.emit(this.person);\n  //   this._onChange(this.person);\n  //   this._onTouched();\n\n  // }\n\n  registerOnChange(fn: any): void {\n    this._onChange = fn;\n  }\n\n  registerOnTouched(fn: any): void {\n    this._onTouched = fn;\n  }\n\n  writeValue(value: any): void {\n    this.person = value;\n  }\n\n\n}\n\n    \n\n    \n        \n    \n                 \n\n\n\n    \n\n\n\n    \n\n\n\n\n    \n        \n            {{firstNamelabel}}\n            \n            \n                {{firstNamelabel}} {{errMsg.required}}\n                {{errMsg.pattern}}\n            \n        \n    \n    \n        \n            {{middleNamelabel}}\n            \n            \n                {{middleNamelabel}} {{errMsg.required}}\n                {{errMsg.pattern}}\n            \n        \n    \n    \n        \n            {{lastNamelabel}}\n            \n            \n                {{lastNamelabel}} {{errMsg.required}}\n                {{errMsg.pattern}}\n            \n\n        \n    \n -->\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                                     {{firstNamelabel}}                                        {{firstNamelabel}} {{errMsg.required}}                {{errMsg.pattern}}                                                {{middleNamelabel}}                                        {{middleNamelabel}} {{errMsg.required}}                {{errMsg.pattern}}                                                {{lastNamelabel}}                                        {{lastNamelabel}} {{errMsg.required}}                {{errMsg.pattern}}                         -->'\n    var COMPONENTS = [{'name': 'AccordionCommonComponent', 'selector': 'common-accordion'},{'name': 'AddressComponent', 'selector': 'common-address'},{'name': 'ButtonComponent', 'selector': 'common-button'},{'name': 'ButtonGroupComponent', 'selector': 'common-button-group'},{'name': 'CaptchaComponent', 'selector': 'common-captcha'},{'name': 'CheckboxComponent', 'selector': 'common-checkbox'},{'name': 'CityComponent', 'selector': 'common-city'},{'name': 'ConfirmTemplateComponent', 'selector': 'common-confirm-template'},{'name': 'ConsentModalComponent', 'selector': 'common-consent-modal'},{'name': 'CoreBreadcrumbComponent', 'selector': 'common-core-breadcrumb'},{'name': 'CountryComponent', 'selector': 'common-country'},{'name': 'DateComponent', 'selector': 'common-date'},{'name': 'DatepickerComponent', 'selector': 'common-datepicker'},{'name': 'DropdownComponent', 'selector': 'common-dropdown'},{'name': 'EmailComponent', 'selector': 'common-email'},{'name': 'ErrorContainerComponent', 'selector': 'common-error-container'},{'name': 'FileUploaderComponent', 'selector': 'common-file-uploader'},{'name': 'FormActionBarComponent', 'selector': 'common-form-action-bar'},{'name': 'FormSubmitBarComponent', 'selector': 'common-form-submit-bar'},{'name': 'FullNameComponent', 'selector': 'common-full-name'},{'name': 'GeocoderInputComponent', 'selector': 'common-geocoder-input'},{'name': 'HeaderComponent', 'selector': 'common-header'},{'name': 'NameComponent', 'selector': 'common-name'},{'name': 'PageFrameworkComponent', 'selector': 'common-page-framework'},{'name': 'PageSectionComponent', 'selector': 'common-page-section'},{'name': 'PasswordComponent', 'selector': 'common-password'},{'name': 'PhnComponent', 'selector': 'common-phn'},{'name': 'PhoneNumberComponent', 'selector': 'common-phone-number'},{'name': 'PostalCodeComponent', 'selector': 'common-postal-code'},{'name': 'ProvinceComponent', 'selector': 'common-province'},{'name': 'RadioComponent', 'selector': 'common-radio'},{'name': 'SampleModalComponent', 'selector': 'common-sample-modal'},{'name': 'SinComponent', 'selector': 'common-sin'},{'name': 'StreetComponent', 'selector': 'common-street'},{'name': 'ThumbnailComponent', 'selector': 'common-thumbnail'},{'name': 'ToggleComponent', 'selector': 'common-toggle'},{'name': 'WizardProgressBarComponent', 'selector': 'common-wizard-progress-bar'},{'name': 'XiconButtonComponent', 'selector': 'common-xicon-button'}];\n    var DIRECTIVES = [{'name': 'DateFieldFormatDirective', 'selector': '[commonDateFieldFormat]'},{'name': 'DuplicateCheckDirective', 'selector': '[commonDuplicateCheck]'},{'name': 'ValidateBcPostalDirective', 'selector': '[commonValidateBcPostal]'},{'name': 'ValidateCityDirective', 'selector': '[commonValidateCity]'},{'name': 'ValidateNameDirective', 'selector': '[commonValidateName]'},{'name': 'ValidatePostalcodeDirective', 'selector': '[commonValidatePostalcode]'},{'name': 'ValidateRegionDirective', 'selector': '[commonValidateRegion]'},{'name': 'ValidateStreetDirective', 'selector': '[commonValidateStreet]'}];\n    var ACTUAL_COMPONENT = {'name': 'FullNameComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/FullNameErrorMsg.html":{"url":"interfaces/FullNameErrorMsg.html","title":"interface - FullNameErrorMsg","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  FullNameErrorMsg\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/common/lib/components/full-name/full-name.component.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        pattern\n                                \n                                \n                                            Optional\n                                        required\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        pattern\n                                    \n                                \n                                \n                                    \n                                        pattern:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        required\n                                    \n                                \n                                \n                                    \n                                        required:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import {forwardRef, Component, Input, Output, EventEmitter, ViewChild, ChangeDetectorRef, OnInit} from '@angular/core';\nimport {Person} from '../../models/person.model';\nimport {Base} from '../../models/base';\nimport {debounceTime} from 'rxjs/operators';\nimport { ControlContainer, ControlValueAccessor, NgForm, NG_VALUE_ACCESSOR } from '@angular/forms';\n\n\nexport interface FullNameErrorMsg {\n  required?: string;\n  pattern?: string;\n}\n\n/**\n * FullNameComponent includes a first, middle, and last name field.  If you only\n * need an individual field, @see NameComponent.\n *\n * **Note** This component is in dev, there are issues around \"required\"\n * TODO - Properly handle \"required\"\n *\n * @example\n *          \n *\n * @export\n */\n@Component({\n  selector: 'common-full-name',\n  templateUrl: './full-name.component.html',\n  styleUrls: ['./full-name.component.scss'],\n  providers: [\n    { provide: NG_VALUE_ACCESSOR, multi: true, useExisting: forwardRef(() => FullNameComponent )}\n  ]\n})\n\nexport class FullNameComponent extends Base implements ControlValueAccessor, OnInit {\n\n  @Input() person: Person;\n  @Output() personChange = new EventEmitter();\n  @Input() showError: boolean;\n  @Input() firstNamelabel: string = 'First Name';\n  @Input() middleNamelabel: string = 'Middle Name';\n  @Input() lastNamelabel: string = 'Last Name';\n  @Input() disabled: boolean = false;\n\n\n  firstName: string ;\n  middleName: string;\n  lastName: string ;\n\n  public NameRegEx: string = '^[a-zA-Z][a-zA-Z\\\\-.\\' ]*$';\n\n  public errMsg: FullNameErrorMsg ;\n  // default messages\n  private requiredMsgSeg: string = 'is required';\n  private pattern: string = 'Must begin with a letter followed by a letters, hyphen, period, apostrophe, or blank character';\n\n  public _onChange = (_: any) => {};\n  public _onTouched = () => {};\n\n  constructor() {\n    super();\n  }\n\n  ngOnInit() {\n\n    if (this.person) {\n      this.firstName = this.person.firstName ? this.person.firstName : '';\n      this.lastName = this.person.lastName ? this.person.lastName : '';\n      this.middleName = this.person.middleName ? this.person.middleName : '';\n    }\n\n    this.errMsg =    {\n      required: this.requiredMsgSeg,\n      pattern: this.pattern\n    };\n  }\n\n  /*ngAfterViewInit(): void {\n      // https://github.com/angular/angular/issues/24818\n      this.form.valueChanges.pipe(debounceTime(0)).subscribe((values) => {\n        this.onChange.emit(values);\n        this._onChange(values);\n        this._onTouched();\n      }\n    );\n\n  }*/\n\n  // setFirstName(value: any) {\n  //   this.person.firstName = value;\n  //   this.onChange.emit(this.person);\n  //   this._onChange(this.person);\n  //   this._onTouched();\n  // }\n\n  // setMiddleName(value: any) {\n\n  //   this.person.middleName = value;\n  //   this.onChange.emit(this.person);\n  //   this._onChange(this.person);\n  //   this._onTouched();\n\n  // }\n\n  // setLastName(value: any) {\n\n  //   this.person.lastName = value;\n  //   this.onChange.emit(this.person);\n  //   this._onChange(this.person);\n  //   this._onTouched();\n\n  // }\n\n  registerOnChange(fn: any): void {\n    this._onChange = fn;\n  }\n\n  registerOnTouched(fn: any): void {\n    this._onTouched = fn;\n  }\n\n  writeValue(value: any): void {\n    this.person = value;\n  }\n\n\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/GeoAddressResult.html":{"url":"interfaces/GeoAddressResult.html","title":"interface - GeoAddressResult","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  GeoAddressResult\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/common/lib/services/geocoder.service.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        city\n                                \n                                \n                                        country\n                                \n                                \n                                        fullAddress\n                                \n                                \n                                        province\n                                \n                                \n                                        street\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        city\n                                    \n                                \n                                \n                                    \n                                        city:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        country\n                                    \n                                \n                                \n                                    \n                                        country:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        fullAddress\n                                    \n                                \n                                \n                                    \n                                        fullAddress:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    String from the API that includes street, city, province, and country. \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        province\n                                    \n                                \n                                \n                                    \n                                        province:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        street\n                                    \n                                \n                                \n                                    \n                                        street:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { AbstractHttpService } from './abstract-api-service';\nimport { HttpClient, HttpHeaders, HttpErrorResponse, HttpParams } from '@angular/common/http';\nimport { map } from 'rxjs/operators';\nimport { Observable, throwError } from 'rxjs';\nimport { CANADA } from '../components/country/country.component';\n\nexport interface GeoAddressResult {\n    /** String from the API that includes street, city, province, and country. */\n    fullAddress: string;\n    city: string;\n    street: string;\n    // Set to defaults in response\n    country: string;\n    province: string;\n}\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class GeocoderService extends AbstractHttpService {\n\n    protected _headers: HttpHeaders = new HttpHeaders();\n    protected BASE_URL = 'https://geocoder.api.gov.bc.ca';\n    protected  ADDRESS_URL = `${this.BASE_URL}/addresses.json?`;\n\n    constructor(protected http: HttpClient) {\n        super(http);\n    }\n\n    // https://geocoder.api.gov.bc.ca/addresses.json?minScore=50&maxResults=5&echo=false&brief=true&autoComplete=true&addressString=784+Hock\n    lookup(address: string): Observable {\n        const params = new HttpParams()\n            .set('minScore', '50')\n            .set('maxResults', '10')\n            .set('echo', 'false')\n            .set('brief', 'false') // API splits address string up into sub-attributes, like city  / street name\n            .set('autoComplete', 'true')\n            .set('matchPrecisionNot', 'LOCALITY,STREET')\n            .set('addressString', address);\n\n        return this.get(this.ADDRESS_URL, params).pipe(map(this.processResponse));\n    }\n\n    /**\n     * Formats the response from ADDRESS_URL, trimming irrelevant fields.\n     *\n     * This works for other requests for the same API too, however it may error\n     * out on some items if matchPrecisionNot is not set.\n     *\n     * @param obj The response from ADDRESS_URL\n     */\n    protected processResponse(obj): GeoAddressResult[] {\n        return obj.features.map(feature => {\n            const props = feature.properties;\n            const city = props.localityName;\n            // We get street just by trimming everything before city, more\n            // stable than looking for commas, etc.\n            const cityIndex = props.fullAddress.indexOf(`, ${city}`);\n            const street = props.fullAddress.slice(0, cityIndex);\n            const province = props.provinceCode;\n            const country = CANADA; // ALWAYS return Canada\n\n            return {\n              fullAddress: props.fullAddress,\n              city,\n              street,\n              province,\n              country\n            };\n        });\n    }\n\n    protected handleError(error: HttpErrorResponse) {\n        console.error('GeoCoder network error', { error });\n        return throwError('Geocoder error');\n    }\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/GeocoderInputComponent.html":{"url":"components/GeocoderInputComponent.html","title":"component - GeocoderInputComponent","body":"\n                   \n\n\n\n\n\n  Components\n  GeocoderInputComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    projects/common/lib/components/geocoder-input/geocoder-input.component.ts\n\n\n    \n        Description\n    \n    \n        For TemplateForms, pass in an Address and recieve an Address\n\n    \n\n    \n        Extends\n    \n    \n                Base\n    \n\n    \n        Implements\n    \n    \n                    OnInit\n                    OnChanges\n                    ControlValueAccessor\n    \n\n    \n        Example\n    \n    \n                \n                    \n\n                \n                \n                    \n\n                \n    \n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                common-geocoder-input\n            \n\n            \n                styleUrls\n                ./geocoder-input.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./geocoder-input.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                _onChange\n                            \n                            \n                                _onTouched\n                            \n                            \n                                    Public\n                                controlDir\n                            \n                            \n                                    Public\n                                hasError\n                            \n                            \n                                    Public\n                                hasNoResults\n                            \n                            \n                                    Public\n                                isTypeaheadLoading\n                            \n                            \n                                    Public\n                                search\n                            \n                            \n                                    Private\n                                searchText$\n                            \n                            \n                                    Public\n                                selectedAddress\n                            \n                            \n                                    Public\n                                typeaheadList$\n                            \n                            \n                                    Public\n                                objectId\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnChanges\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                onBlur\n                            \n                            \n                                onError\n                            \n                            \n                                onKeyUp\n                            \n                            \n                                onLoading\n                            \n                            \n                                onNoResults\n                            \n                            \n                                onSelect\n                            \n                            \n                                registerOnChange\n                            \n                            \n                                registerOnTouched\n                            \n                            \n                                    Private\n                                stripStringToMaxLength\n                            \n                            \n                                writeValue\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                address\n                            \n                            \n                                label\n                            \n                            \n                                maxlength\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                addressChange\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(controlDir: NgControl, geocoderService: GeocoderService, cd: ChangeDetectorRef)\n                    \n                \n                        \n                            \n                                Defined in projects/common/lib/components/geocoder-input/geocoder-input.component.ts:60\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        controlDir\n                                                  \n                                                        \n                                                                        NgControl\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        geocoderService\n                                                  \n                                                        \n                                                                        GeocoderService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        cd\n                                                  \n                                                        \n                                                                        ChangeDetectorRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        address\n                    \n                \n                \n                    \n                        Type :         Address\n\n                    \n                \n                \n                    \n                        Default value : new Address()\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/geocoder-input/geocoder-input.component.ts:40\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        label\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'Address Lookup'\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/geocoder-input/geocoder-input.component.ts:39\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        maxlength\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : '255'\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/geocoder-input/geocoder-input.component.ts:42\n                            \n                        \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        addressChange\n                    \n                \n                \n                    \n                        Type :         EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/geocoder-input/geocoder-input.component.ts:41\n                            \n                        \n            \n        \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnChanges\n                        \n                        \n                    \n                \n            \n            \n                \nngOnChanges(changes: SimpleChanges)\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/components/geocoder-input/geocoder-input.component.ts:80\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    changes\n                                    \n                                                SimpleChanges\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/components/geocoder-input/geocoder-input.component.ts:69\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            onBlur\n                        \n                        \n                    \n                \n            \n            \n                \nonBlur(event)\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/components/geocoder-input/geocoder-input.component.ts:153\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    event\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            onError\n                        \n                        \n                    \n                \n            \n            \n                \nonError(err)\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/components/geocoder-input/geocoder-input.component.ts:94\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    err\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            onKeyUp\n                        \n                        \n                    \n                \n            \n            \n                \nonKeyUp(event: KeyboardEvent)\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/components/geocoder-input/geocoder-input.component.ts:140\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    event\n                                    \n                                            KeyboardEvent\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            onLoading\n                        \n                        \n                    \n                \n            \n            \n                \nonLoading(val: boolean)\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/components/geocoder-input/geocoder-input.component.ts:100\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    val\n                                    \n                                                boolean\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            onNoResults\n                        \n                        \n                    \n                \n            \n            \n                \nonNoResults(val: boolean)\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/components/geocoder-input/geocoder-input.component.ts:105\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    val\n                                    \n                                                boolean\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            onSelect\n                        \n                        \n                    \n                \n            \n            \n                \nonSelect(event: TypeaheadMatch)\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/components/geocoder-input/geocoder-input.component.ts:122\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    event\n                                    \n                                            TypeaheadMatch\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            registerOnChange\n                        \n                        \n                    \n                \n            \n            \n                \nregisterOnChange(fn: any)\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/components/geocoder-input/geocoder-input.component.ts:166\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    fn\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            registerOnTouched\n                        \n                        \n                    \n                \n            \n            \n                \nregisterOnTouched(fn: any)\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/components/geocoder-input/geocoder-input.component.ts:171\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    fn\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            stripStringToMaxLength\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    stripStringToMaxLength(str: string)\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/components/geocoder-input/geocoder-input.component.ts:175\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    str\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            writeValue\n                        \n                        \n                    \n                \n            \n            \n                \nwriteValue(value: any)\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/components/geocoder-input/geocoder-input.component.ts:159\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            _onChange\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : () => {...}\n                        \n                    \n                        \n                            \n                                    Defined in projects/common/lib/components/geocoder-input/geocoder-input.component.ts:59\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            _onTouched\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : () => {...}\n                        \n                    \n                        \n                            \n                                    Defined in projects/common/lib/components/geocoder-input/geocoder-input.component.ts:60\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            controlDir\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         NgControl\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Optional()@Self()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in projects/common/lib/components/geocoder-input/geocoder-input.component.ts:62\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            hasError\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in projects/common/lib/components/geocoder-input/geocoder-input.component.ts:50\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            hasNoResults\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in projects/common/lib/components/geocoder-input/geocoder-input.component.ts:49\n                            \n                        \n\n                \n                    \n                        Geocoder API has returned and has no results, an empty array. \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            isTypeaheadLoading\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in projects/common/lib/components/geocoder-input/geocoder-input.component.ts:47\n                            \n                        \n\n                \n                    \n                        Is the Geocoder API request still in progress? \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            search\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/common/lib/components/geocoder-input/geocoder-input.component.ts:45\n                            \n                        \n\n                \n                    \n                        The string in the box the user has typed \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            searchText$\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new Subject()\n                        \n                    \n                        \n                            \n                                    Defined in projects/common/lib/components/geocoder-input/geocoder-input.component.ts:57\n                            \n                        \n\n                \n                    \n                        The subject that triggers on user text input and gets typeaheadList$ to update.  \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            selectedAddress\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Address\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/common/lib/components/geocoder-input/geocoder-input.component.ts:53\n                            \n                        \n\n                \n                    \n                        Similar to this.address, but we can null it when user is searching for new addresses \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            typeaheadList$\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Observable\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/common/lib/components/geocoder-input/geocoder-input.component.ts:55\n                            \n                        \n\n                \n                    \n                        The list of results, from API, that is passed to the typeahead list \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            objectId\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : UUID.UUID()\n                        \n                    \n                            \n                                \n                                    Inherited from         Base\n\n                                \n                            \n                        \n                            \n                                    Defined in         Base:11\n\n                            \n                        \n\n                \n                    \n                        An identifier for parents to keep track of components \n\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit, Input, ChangeDetectorRef, Output, EventEmitter, SimpleChanges, OnChanges, Optional, Self } from '@angular/core';\nimport { Subject, Observable, of } from 'rxjs';\nimport { debounceTime, distinctUntilChanged, switchMap, tap, catchError } from 'rxjs/operators';\nimport { TypeaheadMatch } from 'ngx-bootstrap';\nimport { Base } from '../../models/base';\nimport { GeocoderService, GeoAddressResult } from '../../services/geocoder.service';\nimport { CANADA } from '../country/country.component';\nimport { BRITISH_COLUMBIA } from '../province/province.component';\nimport { Address } from '../../models/address.model';\nimport { NgControl, ControlValueAccessor } from '@angular/forms';\n\n\n/**\n * For TemplateForms, pass in an Address and recieve an Address\n * @example\n *           \n *           \n *\n * @note\n * For ReactiveForms, pass in a string and recieve a string.  If you need the\n * Address object you can use (addressChange) in addition.\n *\n * @example\n *           \n *          \n */\n@Component({\n  selector: 'common-geocoder-input',\n  templateUrl: './geocoder-input.component.html',\n  styleUrls: ['./geocoder-input.component.scss']\n})\nexport class GeocoderInputComponent extends Base implements OnInit, OnChanges, ControlValueAccessor {\n\n  @Input() label: string = 'Address Lookup';\n  @Input() address: Address = new Address();\n  @Output() addressChange = new EventEmitter();\n  @Input() maxlength: string = '255';\n\n  /** The string in the box the user has typed */\n  public search: string;\n  /** Is the Geocoder API request still in progress? */\n  public isTypeaheadLoading: boolean = false;\n  /** Geocoder API has returned and has no results, an empty array. */\n  public hasNoResults: boolean = false;\n  public hasError: boolean = false;\n\n  /** Similar to this.address, but we can null it when user is searching for new addresses */\n  public selectedAddress: Address;\n  /** The list of results, from API, that is passed to the typeahead list */\n  public typeaheadList$: Observable; // Result from GeoCoderService address lookup\n  /** The subject that triggers on user text input and gets typeaheadList$ to update.  */\n  private searchText$ = new Subject();\n\n  _onChange = (_: any) => {};\n  _onTouched = (_?: any) => {};\n\n  constructor(@Optional() @Self() public controlDir: NgControl, private geocoderService: GeocoderService, private cd: ChangeDetectorRef) {\n    super();\n    if ( controlDir ) {\n      controlDir.valueAccessor = this;\n    }\n  }\n\n  ngOnInit() {\n    this.typeaheadList$ = this.searchText$.pipe(\n      debounceTime(500),\n      distinctUntilChanged(),\n      // Trigger the network request, get results\n      switchMap(searchPhrase => this.geocoderService.lookup(searchPhrase)),\n      catchError(err => this.onError(err))\n    );\n\n  }\n\n  ngOnChanges(changes: SimpleChanges) {\n    if (changes &&\n      changes.address &&\n      changes.address.currentValue._geocoderFullAddress) {\n        const stripped = this.stripStringToMaxLength(changes.address.currentValue._geocoderFullAddress);\n\n        this.search = stripped;\n        this.isTypeaheadLoading = false;\n        this.hasNoResults = false;\n        this.selectedAddress = changes.address.currentValue;\n      }\n\n  }\n\n  onError(err): Observable {\n    this.hasError = true;\n    // Empty array simulates no result response, nothing for typeahead to iterate over\n    return of([]);\n  }\n\n  onLoading(val: boolean): void {\n    this.isTypeaheadLoading = val;\n  }\n\n  // Note - this will fire after an onError as well\n  onNoResults(val: boolean): void {\n    this._onChange(null);\n    \n    // If we have results, the error has resolved (e.g. network has re-connected)\n    if (val === false) {\n      this.hasError = false;\n    }\n\n    // If we have no search text, hide the no results errors\n    if (this.search.length === 0) {\n      this.hasNoResults = false;\n      return;\n    }\n\n    this.hasNoResults = val;\n  }\n\n  onSelect(event: TypeaheadMatch): void {\n    const data: GeoAddressResult = event.item;\n\n    const addr = new Address();\n    addr.city = data.city;\n    // GeoCoder is only for BC, Canada, values can be set.\n    addr.country = CANADA; // Default country is Canda\n    addr.province = BRITISH_COLUMBIA;  // Default province is BC\n    addr.street = data.street;\n    // Save and emit Address for (addressChange)\n    this.selectedAddress = addr;\n    this.addressChange.emit(this.selectedAddress);\n\n    // Output string to FormControl.\n    const stripped = this.stripStringToMaxLength(data.fullAddress);\n    this._onChange(stripped);\n  }\n\n  onKeyUp(event: KeyboardEvent): void {\n    // Filter out 'enter' and other similar keyboard events that can trigger\n    // when user is selecting a typeahead option instead of entering new text.\n    // Without this filter, we do another HTTP request + force disiplay the UI\n    // for now reason\n    if (event.keyCode === 13 || event.keyCode === 9) {  // enter & tab\n      return;\n    }\n    // Clear out selection\n    this.selectedAddress = null;\n    this.searchText$.next(this.search);\n  }\n\n  onBlur(event): void {\n    this._onTouched();\n    this._onChange(this.search);\n  }\n\n\n  writeValue( value: any ): void {\n    if ( value ) {\n      this.search = value;\n    }\n  }\n\n  // Register change function\n  registerOnChange( fn: any ): void {\n    this._onChange = fn;\n  }\n\n  // Register touched function\n  registerOnTouched( fn: any ): void {\n    this._onTouched = fn;\n  }\n\n  private stripStringToMaxLength(str: string){\n    const maxlength = parseInt(this.maxlength, 10);\n    return str.slice(0, maxlength);\n  }\n\n}\n\n    \n\n    \n        \n{{label}}\n  \n     &mdash; Loading\n      \n    \n  \n\n  \n    \n  \n\n\n        \n\n\n\n     &mdash; Selected\n        \n    \n\n\n\n     &mdash; No Results\n        \n    \n\n\n\n\n     &mdash; Error\n        \n    \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '{{label}}       — Loading                                 — Selected                 — No Results                 — Error            '\n    var COMPONENTS = [{'name': 'AccordionCommonComponent', 'selector': 'common-accordion'},{'name': 'AddressComponent', 'selector': 'common-address'},{'name': 'ButtonComponent', 'selector': 'common-button'},{'name': 'ButtonGroupComponent', 'selector': 'common-button-group'},{'name': 'CaptchaComponent', 'selector': 'common-captcha'},{'name': 'CheckboxComponent', 'selector': 'common-checkbox'},{'name': 'CityComponent', 'selector': 'common-city'},{'name': 'ConfirmTemplateComponent', 'selector': 'common-confirm-template'},{'name': 'ConsentModalComponent', 'selector': 'common-consent-modal'},{'name': 'CoreBreadcrumbComponent', 'selector': 'common-core-breadcrumb'},{'name': 'CountryComponent', 'selector': 'common-country'},{'name': 'DateComponent', 'selector': 'common-date'},{'name': 'DatepickerComponent', 'selector': 'common-datepicker'},{'name': 'DropdownComponent', 'selector': 'common-dropdown'},{'name': 'EmailComponent', 'selector': 'common-email'},{'name': 'ErrorContainerComponent', 'selector': 'common-error-container'},{'name': 'FileUploaderComponent', 'selector': 'common-file-uploader'},{'name': 'FormActionBarComponent', 'selector': 'common-form-action-bar'},{'name': 'FormSubmitBarComponent', 'selector': 'common-form-submit-bar'},{'name': 'FullNameComponent', 'selector': 'common-full-name'},{'name': 'GeocoderInputComponent', 'selector': 'common-geocoder-input'},{'name': 'HeaderComponent', 'selector': 'common-header'},{'name': 'NameComponent', 'selector': 'common-name'},{'name': 'PageFrameworkComponent', 'selector': 'common-page-framework'},{'name': 'PageSectionComponent', 'selector': 'common-page-section'},{'name': 'PasswordComponent', 'selector': 'common-password'},{'name': 'PhnComponent', 'selector': 'common-phn'},{'name': 'PhoneNumberComponent', 'selector': 'common-phone-number'},{'name': 'PostalCodeComponent', 'selector': 'common-postal-code'},{'name': 'ProvinceComponent', 'selector': 'common-province'},{'name': 'RadioComponent', 'selector': 'common-radio'},{'name': 'SampleModalComponent', 'selector': 'common-sample-modal'},{'name': 'SinComponent', 'selector': 'common-sin'},{'name': 'StreetComponent', 'selector': 'common-street'},{'name': 'ThumbnailComponent', 'selector': 'common-thumbnail'},{'name': 'ToggleComponent', 'selector': 'common-toggle'},{'name': 'WizardProgressBarComponent', 'selector': 'common-wizard-progress-bar'},{'name': 'XiconButtonComponent', 'selector': 'common-xicon-button'}];\n    var DIRECTIVES = [{'name': 'DateFieldFormatDirective', 'selector': '[commonDateFieldFormat]'},{'name': 'DuplicateCheckDirective', 'selector': '[commonDuplicateCheck]'},{'name': 'ValidateBcPostalDirective', 'selector': '[commonValidateBcPostal]'},{'name': 'ValidateCityDirective', 'selector': '[commonValidateCity]'},{'name': 'ValidateNameDirective', 'selector': '[commonValidateName]'},{'name': 'ValidatePostalcodeDirective', 'selector': '[commonValidatePostalcode]'},{'name': 'ValidateRegionDirective', 'selector': '[commonValidateRegion]'},{'name': 'ValidateStreetDirective', 'selector': '[commonValidateStreet]'}];\n    var ACTUAL_COMPONENT = {'name': 'GeocoderInputComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/GeocoderService.html":{"url":"injectables/GeocoderService.html","title":"injectable - GeocoderService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  GeocoderService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/common/lib/services/geocoder.service.ts\n        \n\n\n            \n                Extends\n            \n            \n                        AbstractHttpService\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                _headers\n                            \n                            \n                                    Protected\n                                ADDRESS_URL\n                            \n                            \n                                    Protected\n                                BASE_URL\n                            \n                            \n                                    Protected\n                                    Abstract\n                                _headers\n                            \n                            \n                                    Protected\n                                logHTTPRequestsToConsole\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                handleError\n                            \n                            \n                                lookup\n                            \n                            \n                                    Protected\n                                processResponse\n                            \n                            \n                                    Protected\n                                generateUUID\n                            \n                            \n                                    Protected\n                                get\n                            \n                            \n                                    Protected\n                                    Abstract\n                                handleError\n                            \n                            \n                                    Protected\n                                post\n                            \n                            \n                                    Protected\n                                setupRequest\n                            \n                            \n                                    Protected\n                                uploadAttachment\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(http: HttpClient)\n                    \n                \n                        \n                            \n                                Defined in projects/common/lib/services/geocoder.service.ts:25\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                        HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            handleError\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    handleError(error: HttpErrorResponse)\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/services/geocoder.service.ts:74\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    error\n                                    \n                                                HttpErrorResponse\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            lookup\n                        \n                        \n                    \n                \n            \n            \n                \nlookup(address: string)\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/services/geocoder.service.ts:32\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    address\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            processResponse\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    processResponse(obj)\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/services/geocoder.service.ts:53\n                \n            \n\n\n            \n                \n                    Formats the response from ADDRESS_URL, trimming irrelevant fields.\nThis works for other requests for the same API too, however it may error\nout on some items if matchPrecisionNot is not set.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    obj\n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The response from ADDRESS_URL\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         GeoAddressResult[]\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            generateUUID\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    generateUUID()\n                \n            \n\n\n            \n                \n                    Inherited from         AbstractHttpService\n\n                \n            \n            \n                \n                        Defined in         AbstractHttpService:64\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            get\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    get(url, queryParams?: HttpParams)\n                \n            \n\n\n            \n                \n                    Inherited from         AbstractHttpService\n\n                \n            \n            \n                \n                        Defined in         AbstractHttpService:24\n\n                \n            \n\n            \n                \n                    Type parameters :\n                    \n                        T\n                    \n                \n            \n\n            \n                \n                    Makes a GET request to the specified URL, using headers and HTTP options specified in their respective methods.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    url\n                                    \n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Target URL to make the GET request\n\n                                    \n                                \n                                \n                                    queryParams\n                                    \n                                                HttpParams\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                    \n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            Abstract\n                            handleError\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    handleError(error: HttpErrorResponse)\n                \n            \n\n\n            \n                \n                    Inherited from         AbstractHttpService\n\n                \n            \n            \n                \n                        Defined in         AbstractHttpService:61\n\n                \n            \n\n\n            \n                \n                    Handles all failed requests that throw either a server error (400/500) or a client error (e.g. lost internet). \n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    error\n                                    \n                                                HttpErrorResponse\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            post\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    post(url, body)\n                \n            \n\n\n            \n                \n                    Inherited from         AbstractHttpService\n\n                \n            \n            \n                \n                        Defined in         AbstractHttpService:32\n\n                \n            \n\n            \n                \n                    Type parameters :\n                    \n                        T\n                    \n                \n            \n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    url\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    body\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            setupRequest\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    setupRequest(observable: Observable)\n                \n            \n\n\n            \n                \n                    Inherited from         AbstractHttpService\n\n                \n            \n            \n                \n                        Defined in         AbstractHttpService:40\n\n                \n            \n\n            \n                \n                    Type parameters :\n                    \n                        T\n                    \n                \n            \n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    observable\n                                    \n                                            Observable\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            uploadAttachment\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    uploadAttachment(relativeUrl: string, attachment: CommonImage)\n                \n            \n\n\n            \n                \n                    Inherited from         AbstractHttpService\n\n                \n            \n            \n                \n                        Defined in         AbstractHttpService:75\n\n                \n            \n\n\n            \n                \n                    Uploads an individual attachment.  All you need to do is set the url.\nNote: urls often include UUIDs, so this must be an application decision.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    relativeUrl\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        URL to hit, must include UUIDs of application and CommonImage\n\n                                    \n                                \n                                \n                                    attachment\n                                    \n                                                CommonImage\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        CommonImage to upload\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            _headers\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         HttpHeaders\n\n                        \n                    \n                    \n                        \n                            Default value : new HttpHeaders()\n                        \n                    \n                        \n                            \n                                    Defined in projects/common/lib/services/geocoder.service.ts:23\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            ADDRESS_URL\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : `${this.BASE_URL}/addresses.json?`\n                        \n                    \n                        \n                            \n                                    Defined in projects/common/lib/services/geocoder.service.ts:25\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            BASE_URL\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'https://geocoder.api.gov.bc.ca'\n                        \n                    \n                        \n                            \n                                    Defined in projects/common/lib/services/geocoder.service.ts:24\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                                Abstract\n                            _headers\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         HttpHeaders\n\n                        \n                    \n                            \n                                \n                                    Inherited from         AbstractHttpService\n\n                                \n                            \n                        \n                            \n                                    Defined in         AbstractHttpService:18\n\n                            \n                        \n\n                \n                    \n                        The headers to send along with every GET and POST. \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            logHTTPRequestsToConsole\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                    \n                        \n                            Default value : false\n                        \n                    \n                            \n                                \n                                    Inherited from         AbstractHttpService\n\n                                \n                            \n                        \n                            \n                                    Defined in         AbstractHttpService:13\n\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { AbstractHttpService } from './abstract-api-service';\nimport { HttpClient, HttpHeaders, HttpErrorResponse, HttpParams } from '@angular/common/http';\nimport { map } from 'rxjs/operators';\nimport { Observable, throwError } from 'rxjs';\nimport { CANADA } from '../components/country/country.component';\n\nexport interface GeoAddressResult {\n    /** String from the API that includes street, city, province, and country. */\n    fullAddress: string;\n    city: string;\n    street: string;\n    // Set to defaults in response\n    country: string;\n    province: string;\n}\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class GeocoderService extends AbstractHttpService {\n\n    protected _headers: HttpHeaders = new HttpHeaders();\n    protected BASE_URL = 'https://geocoder.api.gov.bc.ca';\n    protected  ADDRESS_URL = `${this.BASE_URL}/addresses.json?`;\n\n    constructor(protected http: HttpClient) {\n        super(http);\n    }\n\n    // https://geocoder.api.gov.bc.ca/addresses.json?minScore=50&maxResults=5&echo=false&brief=true&autoComplete=true&addressString=784+Hock\n    lookup(address: string): Observable {\n        const params = new HttpParams()\n            .set('minScore', '50')\n            .set('maxResults', '10')\n            .set('echo', 'false')\n            .set('brief', 'false') // API splits address string up into sub-attributes, like city  / street name\n            .set('autoComplete', 'true')\n            .set('matchPrecisionNot', 'LOCALITY,STREET')\n            .set('addressString', address);\n\n        return this.get(this.ADDRESS_URL, params).pipe(map(this.processResponse));\n    }\n\n    /**\n     * Formats the response from ADDRESS_URL, trimming irrelevant fields.\n     *\n     * This works for other requests for the same API too, however it may error\n     * out on some items if matchPrecisionNot is not set.\n     *\n     * @param obj The response from ADDRESS_URL\n     */\n    protected processResponse(obj): GeoAddressResult[] {\n        return obj.features.map(feature => {\n            const props = feature.properties;\n            const city = props.localityName;\n            // We get street just by trimming everything before city, more\n            // stable than looking for commas, etc.\n            const cityIndex = props.fullAddress.indexOf(`, ${city}`);\n            const street = props.fullAddress.slice(0, cityIndex);\n            const province = props.provinceCode;\n            const country = CANADA; // ALWAYS return Canada\n\n            return {\n              fullAddress: props.fullAddress,\n              city,\n              street,\n              province,\n              country\n            };\n        });\n    }\n\n    protected handleError(error: HttpErrorResponse) {\n        console.error('GeoCoder network error', { error });\n        return throwError('Geocoder error');\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/HeaderComponent.html":{"url":"components/HeaderComponent.html","title":"component - HeaderComponent","body":"\n                   \n\n\n\n\n\n  Components\n  HeaderComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    projects/common/lib/components/header/header.component.ts\n\n\n    \n        Description\n    \n    \n        HeaderComponent is the stylized blue header at the top of every single\napplication.  It has a built-in \"Skip to Content\" tab-accessible section\nthat's best practice for screen readers.  You must create an element with\nid='content' for this to work!  Best practice is to put this \"content\"\nelement as a wrapper aroud your \n\n    \n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                common-header\n            \n\n            \n                styleUrls\n                ./header.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./header.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                SKIP_CONTENT_HASH\n                            \n                            \n                                    Public\n                                skipLinkPath\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                generateSkipToContentLink\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                routeIsActive\n                            \n                            \n                                updateSkipContentLink\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                logoSrc\n                            \n                            \n                                serviceName\n                            \n                            \n                                urlBaseName\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(router: Router)\n                    \n                \n                        \n                            \n                                Defined in projects/common/lib/components/header/header.component.ts:25\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        logoSrc\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'assets/gov3_bc_logo.png'\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/header/header.component.ts:22\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        serviceName\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/header/header.component.ts:20\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        urlBaseName\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/header/header.component.ts:21\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            generateSkipToContentLink\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    generateSkipToContentLink()\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/components/header/header.component.ts:51\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/components/header/header.component.ts:30\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            routeIsActive\n                        \n                        \n                    \n                \n            \n            \n                \nrouteIsActive(url: string)\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/components/header/header.component.ts:39\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    url\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            updateSkipContentLink\n                        \n                        \n                    \n                \n            \n            \n                \nupdateSkipContentLink()\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/components/header/header.component.ts:43\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            SKIP_CONTENT_HASH\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : '#content'\n                        \n                    \n                        \n                            \n                                    Defined in projects/common/lib/components/header/header.component.ts:25\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            skipLinkPath\n                            \n                        \n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/header/header.component.ts:24\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit, Input } from '@angular/core';\nimport { Router, NavigationEnd } from '@angular/router';\nimport { filter } from 'rxjs/operators';\n\n/**\n * HeaderComponent is the stylized blue header at the top of every single\n * application.  It has a built-in \"Skip to Content\" tab-accessible section\n * that's best practice for screen readers.  **You must create an element with\n * `id='content'` for this to work!**  Best practice is to put this \"content\"\n * element as a wrapper aroud your ``\n *\n */\n@Component({\n  selector: 'common-header',\n  templateUrl: './header.component.html',\n  styleUrls: ['./header.component.scss']\n})\nexport class HeaderComponent implements OnInit {\n\n  @Input() serviceName: string = '';\n  @Input() urlBaseName: string = '';\n  @Input() logoSrc: string = 'assets/gov3_bc_logo.png';\n\n  public skipLinkPath;\n  private SKIP_CONTENT_HASH = '#content';\n\n  constructor(private router: Router ) {\n  }\n\n  ngOnInit() {\n\n    this.router.events.pipe(\n      filter(ev => ev instanceof NavigationEnd),\n    ).subscribe(this.updateSkipContentLink.bind(this));\n\n    this.updateSkipContentLink();\n  }\n\n  routeIsActive(url: string): boolean {\n    return this.router.url.includes(url);\n  }\n\n  updateSkipContentLink() {\n    this.skipLinkPath = this.generateSkipToContentLink();\n  }\n\n  // Slightly complicated because we have to include the deployUrl in manually.\n  // If deployUrl changes this code must too.\n  //\n  // \"http://full-url.com/fpcare/example#content\"\n  private generateSkipToContentLink(): string {\n    // don't add duplicate #contents\n    if (window.location.href.indexOf(this.SKIP_CONTENT_HASH) !== -1) {\n      return window.location.href;\n    }\n\n    return `${window.location.origin}/${this.urlBaseName + this.router.url}#content`;\n  }\n}\n\n    \n\n    \n        \n  \n    \n      \n        \n      \n      {{serviceName}}\n      Skip to main content\n    \n\n      \n        \n      \n      \n        \n      \n      \n        \n      \n  \n-->\n  \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                {{serviceName}}      Skip to main content                                                                  -->  '\n    var COMPONENTS = [{'name': 'AccordionCommonComponent', 'selector': 'common-accordion'},{'name': 'AddressComponent', 'selector': 'common-address'},{'name': 'ButtonComponent', 'selector': 'common-button'},{'name': 'ButtonGroupComponent', 'selector': 'common-button-group'},{'name': 'CaptchaComponent', 'selector': 'common-captcha'},{'name': 'CheckboxComponent', 'selector': 'common-checkbox'},{'name': 'CityComponent', 'selector': 'common-city'},{'name': 'ConfirmTemplateComponent', 'selector': 'common-confirm-template'},{'name': 'ConsentModalComponent', 'selector': 'common-consent-modal'},{'name': 'CoreBreadcrumbComponent', 'selector': 'common-core-breadcrumb'},{'name': 'CountryComponent', 'selector': 'common-country'},{'name': 'DateComponent', 'selector': 'common-date'},{'name': 'DatepickerComponent', 'selector': 'common-datepicker'},{'name': 'DropdownComponent', 'selector': 'common-dropdown'},{'name': 'EmailComponent', 'selector': 'common-email'},{'name': 'ErrorContainerComponent', 'selector': 'common-error-container'},{'name': 'FileUploaderComponent', 'selector': 'common-file-uploader'},{'name': 'FormActionBarComponent', 'selector': 'common-form-action-bar'},{'name': 'FormSubmitBarComponent', 'selector': 'common-form-submit-bar'},{'name': 'FullNameComponent', 'selector': 'common-full-name'},{'name': 'GeocoderInputComponent', 'selector': 'common-geocoder-input'},{'name': 'HeaderComponent', 'selector': 'common-header'},{'name': 'NameComponent', 'selector': 'common-name'},{'name': 'PageFrameworkComponent', 'selector': 'common-page-framework'},{'name': 'PageSectionComponent', 'selector': 'common-page-section'},{'name': 'PasswordComponent', 'selector': 'common-password'},{'name': 'PhnComponent', 'selector': 'common-phn'},{'name': 'PhoneNumberComponent', 'selector': 'common-phone-number'},{'name': 'PostalCodeComponent', 'selector': 'common-postal-code'},{'name': 'ProvinceComponent', 'selector': 'common-province'},{'name': 'RadioComponent', 'selector': 'common-radio'},{'name': 'SampleModalComponent', 'selector': 'common-sample-modal'},{'name': 'SinComponent', 'selector': 'common-sin'},{'name': 'StreetComponent', 'selector': 'common-street'},{'name': 'ThumbnailComponent', 'selector': 'common-thumbnail'},{'name': 'ToggleComponent', 'selector': 'common-toggle'},{'name': 'WizardProgressBarComponent', 'selector': 'common-wizard-progress-bar'},{'name': 'XiconButtonComponent', 'selector': 'common-xicon-button'}];\n    var DIRECTIVES = [{'name': 'DateFieldFormatDirective', 'selector': '[commonDateFieldFormat]'},{'name': 'DuplicateCheckDirective', 'selector': '[commonDuplicateCheck]'},{'name': 'ValidateBcPostalDirective', 'selector': '[commonValidateBcPostal]'},{'name': 'ValidateCityDirective', 'selector': '[commonValidateCity]'},{'name': 'ValidateNameDirective', 'selector': '[commonValidateName]'},{'name': 'ValidatePostalcodeDirective', 'selector': '[commonValidatePostalcode]'},{'name': 'ValidateRegionDirective', 'selector': '[commonValidateRegion]'},{'name': 'ValidateStreetDirective', 'selector': '[commonValidateStreet]'}];\n    var ACTUAL_COMPONENT = {'name': 'HeaderComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IRadioItems.html":{"url":"interfaces/IRadioItems.html","title":"interface - IRadioItems","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  IRadioItems\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/common/lib/components/radio/radio.component.ts\n        \n\n            \n                Description\n            \n            \n                RadioComponent is a single radio which can be used to have multiple radios\nbased on the radio label values.\nTo display radio in a vertical style use display=\"table-row-group\" by default\nit shows in horizontal or inline display, display='inline-block' You can\nhave many radio's and the number is based on the Radio label Value. For 3\nradio buttons, radioLabels value is of type IRadioItems[].\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        label\n                                \n                                \n                                        value\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        label\n                                    \n                                \n                                \n                                    \n                                        label:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        value\n                                    \n                                \n                                \n                                    \n                                        value:         any\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         any\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import {Component, EventEmitter, Input, Output, Optional, Self, OnInit} from '@angular/core';\nimport { AbstractFormControl } from '../../models/abstract-form-control';\nimport { LabelReplacementTag, ErrorMessage } from '../../models/error-message.interface';\nimport { NgControl } from '@angular/forms';\n\n/**\n * RadioComponent is a single radio which can be used to have multiple radios\n * based on the radio label values.\n *\n * To display radio in a vertical style use display=\"table-row-group\" by default\n * it shows in horizontal or inline display, display='inline-block' You can\n * have many radio's and the number is based on the Radio label Value. For 3\n * radio buttons, radioLabels value is of type IRadioItems[].\n*\n * @example\n *        \n *        \n *\n *  Reactive Form\n *        \n *        \n *\n *  Template Form\n *        \n *        \n *\n * @export\n *\n */\nexport interface IRadioItems {\n  label: string;\n  value: any;\n  // TODO: Make value generic \n}\n@Component({\n  selector: 'common-radio',\n  templateUrl: './radio.component.html',\n  styleUrls: ['./radio.component.scss']\n})\nexport class RadioComponent extends AbstractFormControl implements OnInit {\n\n  _value: any = '';\n  _defaultErrMsg: ErrorMessage = {\n    required: `${LabelReplacementTag} is required.`\n  };\n\n  @Input() radioLabels: IRadioItems[] = [\n    {label: 'No', value: false},\n    {label: 'Yes', value: true}\n  ];\n\n  @Input() label: string;\n  @Input()\n  set value( val: string ) {\n    this._value = val;\n  }\n  get value() {\n    return this._value;\n  }\n\n  @Input() display: 'table-row-group' | 'inline-block'  = 'inline-block';\n  @Input() instructionText: string;\n\n  @Output() valueChange: EventEmitter = new EventEmitter();\n\n  constructor( @Optional() @Self() public controlDir: NgControl ) {\n    super();\n    if ( controlDir ) {\n      controlDir.valueAccessor = this;\n    }\n  }\n\n  ngOnInit() {\n    super.ngOnInit();\n  }\n\n  setStatus(val: any) {\n    this._value = val;\n\n    this._onChange(val);\n    this._onTouched();\n    this.valueChange.emit(val);\n  }\n\n  registerOnChange(fn: any): void {\n    this._onChange = fn;\n  }\n\n  registerOnTouched(fn: any): void {\n    this._onTouched = fn;\n  }\n\n  writeValue(value: any): void {\n    this._value = value;\n  }\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ISpaEnvResponse.html":{"url":"interfaces/ISpaEnvResponse.html","title":"interface - ISpaEnvResponse","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  ISpaEnvResponse\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/common/lib/components/consent-modal/consent-modal.component.ts\n        \n\n            \n                Description\n            \n            \n                Consent Modal is a Modal with the Information or Notice. It can be used to get the User's consent an\nthen proceed with the application. It also makes an API call to the SPA-ENV server to see if the app is under\nmaintenance.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        SPA_ENV_ACL_MAINTENANCE_FLAG\n                                \n                                \n                                        SPA_ENV_ACL_MAINTENANCE_MESSAGE\n                                \n                                \n                                        SPA_ENV_MSP_MAINTENANCE_FLAG\n                                \n                                \n                                        SPA_ENV_MSP_MAINTENANCE_MESSAGE\n                                \n                                \n                                        SPA_ENV_NOW\n                                \n                                \n                                        SPA_ENV_PACUTOFF_MAINTENANCE_END\n                                \n                                \n                                        SPA_ENV_PACUTOFF_MAINTENANCE_START\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        SPA_ENV_ACL_MAINTENANCE_FLAG\n                                    \n                                \n                                \n                                    \n                                        SPA_ENV_ACL_MAINTENANCE_FLAG:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        SPA_ENV_ACL_MAINTENANCE_MESSAGE\n                                    \n                                \n                                \n                                    \n                                        SPA_ENV_ACL_MAINTENANCE_MESSAGE:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        SPA_ENV_MSP_MAINTENANCE_FLAG\n                                    \n                                \n                                \n                                    \n                                        SPA_ENV_MSP_MAINTENANCE_FLAG:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        SPA_ENV_MSP_MAINTENANCE_MESSAGE\n                                    \n                                \n                                \n                                    \n                                        SPA_ENV_MSP_MAINTENANCE_MESSAGE:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        SPA_ENV_NOW\n                                    \n                                \n                                \n                                    \n                                        SPA_ENV_NOW:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        SPA_ENV_PACUTOFF_MAINTENANCE_END\n                                    \n                                \n                                \n                                    \n                                        SPA_ENV_PACUTOFF_MAINTENANCE_END:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        SPA_ENV_PACUTOFF_MAINTENANCE_START\n                                    \n                                \n                                \n                                    \n                                        SPA_ENV_PACUTOFF_MAINTENANCE_START:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { forwardRef, Component, EventEmitter, Input, Output, ViewChild, OnInit} from '@angular/core';\nimport {ModalDirective} from 'ngx-bootstrap';\nimport { Observable, of } from 'rxjs';\nimport { HttpClient, HttpHeaders, HttpErrorResponse } from '@angular/common/http';\nimport { Response } from '@angular/http';\nimport { CommonLogger } from '../../services/logger.service';\nimport { AbstractHttpService } from '../../services/abstract-api-service';\nimport { ControlContainer, ControlValueAccessor, NgForm, NG_VALUE_ACCESSOR } from '@angular/forms';\n\n\n/**\n * Consent Modal is a Modal with the Information or Notice. It can be used to get the User's consent an\n * then proceed with the application. It also makes an API call to the SPA-ENV server to see if the app is under\n * maintenance.\n *\n *\n * @example\n*       \t\n*           \n * @export\n */\n\nexport interface ISpaEnvResponse {\n  SPA_ENV_MSP_MAINTENANCE_FLAG: string;\n  SPA_ENV_MSP_MAINTENANCE_MESSAGE: string;\n  SPA_ENV_ACL_MAINTENANCE_FLAG: string;\n  SPA_ENV_ACL_MAINTENANCE_MESSAGE: string;\n  SPA_ENV_PACUTOFF_MAINTENANCE_START: string;\n  SPA_ENV_NOW: string;\n  SPA_ENV_PACUTOFF_MAINTENANCE_END: string;\n}\n\n// Disabling tslint for @example below.\n// tslint:disable:max-line-length\n\n/**\n * ConsentModalComponent, aka the \"Information Collection Notice\", is a modal\n * designed to be shown at the beginning of an application. It is a boilerplate\n * checkbox to consent to information collection.\n *\n * Currently this component requires the body to be manually set as a child\n * element (via transclusion)\n *\n * TODO - Set default body if none is passed in.\n *\n * @example\n *       \n *                      Keep your personal information secure – especially when using a shared device like a computer at a library, school or café. To delete any information that was entered, either complete the application and submit it or, if you don’t finish, close the web browser.Need to take a break and come back later? The data you enter on this form is saved locally to the computer or device you are using until you close the web browser or submit your application.Information in this application is collected by the Ministry of Health under section 26(a), (c) and (e) of the Freedom of Information and Protection of Privacy Act and will be used to determine eligibility for provincial health care benefits in BC and administer Premium Assistance. Should you have any questions about the collection of this personal information please contact Health Insurance BC .\n *       \n *\n *\n *        // Component code - Remove backticks when copying (necessary to render docs)\n *        `@ViewChild('consentModal') consentModal: ConsentModalComponent`\n *        ...\n *        openModal(){\n *          this.consentModal.showFullSizeView();\n *        }\n */\n@Component({\n  selector: 'common-consent-modal',\n  templateUrl: './consent-modal.component.html',\n  styleUrls: ['./consent-modal.component.scss'],\n  viewProviders: [\n    { provide: ControlContainer, useExisting: forwardRef(() => NgForm ) }\n  ],\n  providers: [\n    { provide: NG_VALUE_ACCESSOR, multi: true, useExisting: forwardRef(() => ConsentModalComponent )}\n  ]\n})\n\nexport class ConsentModalComponent extends AbstractHttpService implements ControlValueAccessor, OnInit  {\n\n    protected _headers: HttpHeaders = new HttpHeaders();\n    @Input() processName: string;\n\n    /**\n     * If `isUnderMaintenance` is true, then this will automatically try and\n     * make a request to the SPA ENV server to determine if it's in a\n     * maintenance window.  If your application determines this manually, leave\n     * this alone.\n     */\n    @Input() isUnderMaintenance: boolean = false;\n    @Input() title: string;\n    @Input() body: string; // = 'Keep your personal information secure – especially when using a shared device like a computer at a library, school or café. To delete any information that was entered, either complete the application and submit it or, if you don’t finish, close the web browser.Need to take a break and come back later? The data you enter on this form is saved locally to the computer or device you are using until you close the web browser or submit your application.Information in this application is collected by the Ministry of Health under section 26(a), (c) and (e) of the Freedom of Information and Protection of Privacy Act and will be used to determine eligibility for provincial health care benefits in BC and administer Premium Assistance. Should you have any questions about the collection of this personal information please contact Health Insurance BC .';\n    @Input() agreeLabel: string = 'I have read and understand this info';\n    @Input() continueButton: string = 'Continue';\n    @Input() maintenanceFlag: string = 'false';\n    @Input() url: string = '/msp/api/env';\n    @ViewChild('fullSizeViewModal') public fullSizeViewModal: ModalDirective;\n    @Output() close = new EventEmitter();\n    @Output() cutOffDate: EventEmitter = new EventEmitter();\n    @Output() accept = new EventEmitter();\n\n    /**\n     * Used in cases where we have custom form controls inside NgContent that we\n     * wish to be satisifed before user can continue through modal.\n     */\n    @Input() disableContinue: boolean = false;\n\n    public spaEnvRes: ISpaEnvResponse = {} as any;\n    public maintenanceMessage: string;\n\n    // public maintenanceFlag: string ;\n\n\n    // tslint:disable-next-line:max-line-length\n    private _applicationHeaderMap: Map = new Map([['ACL', '{\"SPA_ENV_MSP_ACL_MAINTENANCE_FLAG\":\"\",\"SPA_ENV_MSP_ACL_MAINTENANCE_MESSAGE\":\"\"}'], ['MSP', '{\"SPA_ENV_MSP_MAINTENANCE_FLAG\":\"\",\"SPA_ENV_MSP_MAINTENANCE_MESSAGE\":\"\"}'], ['PA', '{\"SPA_ENV_PACUTOFF_MAINTENANCE_START\":\"\",\"SPA_ENV_PACUTOFF_MAINTENANCE_END\":\"\",\"SPA_ENV_NOW\":\"\"}']]);\n    agreeCheck: boolean = false;\n\n    public _onChange = (_: any) => {};\n    public _onTouched = () => {};\n\n\n    constructor(protected http: HttpClient,  private logService: CommonLogger) {\n        super(http);\n    }\n\n\n\n    ngOnInit(): void {\n      // Called after ngOnInit when the component's or directive's content has been initialized.\n      // Add 'implements AfterContentInit' to the class.\n      if (this.isUnderMaintenance) {\n        this.inMaintenance();\n      }\n\n    }\n\n    /**\n     * Call this method to display the modal.\n     */\n    showFullSizeView() {\n        this.fullSizeViewModal.config.keyboard = false;\n        this.fullSizeViewModal.show();\n    }\n\n    continue() {\n        this.accept.emit(true);\n        this.fullSizeViewModal.hide();\n        this.close.emit();\n        this._onChange(true);\n        this._onTouched();\n    }\n\n    // Api callout to get the message from the Rapid code\n    sendSpaEnvServer(rapidResponseCode: string): Observable {\n        this._headers = new HttpHeaders({\n            'SPA_ENV_NAME': rapidResponseCode\n        });\n        return this.post(this.url, null);\n    }\n\n    protected handleError(error: HttpErrorResponse) {\n      console.log('handleError', JSON.stringify(error));\n      if (error.error instanceof ErrorEvent) {\n          // Client-side / network error occured\n          console.error('MspMaintenanceService error: ', error.error.message);\n      } else {\n          // The backend returned an unsuccessful response code\n          console.error(`MspMaintenanceService Backend returned error code: ${error.status}.  Error body: ${error.error}`);\n      }\n      // this.logService.log({event: 'error', key: 'Cannot get maintenance flag from spa-env-server'});\n\n      // A user facing erorr message /could/ go here; we shouldn't log dev info through the throwError observable\n      return of(error);\n  }\n\n\n  inMaintenance() {\n        const headerName = this._applicationHeaderMap.get(this.processName);\n\n        this.sendSpaEnvServer(headerName)\n                .subscribe(response => {\n                    this.spaEnvRes =  response;\n                    console.log(this.spaEnvRes);\n                    if (this.spaEnvRes.SPA_ENV_ACL_MAINTENANCE_FLAG === 'true') {\n                        this.maintenanceFlag = 'true';\n                        this.maintenanceMessage = this.spaEnvRes.SPA_ENV_ACL_MAINTENANCE_MESSAGE;\n                    } else if (this.spaEnvRes.SPA_ENV_MSP_MAINTENANCE_FLAG === 'true') {\n                        this.maintenanceFlag = 'true';\n                        this.maintenanceMessage =  this.spaEnvRes.SPA_ENV_MSP_MAINTENANCE_MESSAGE;\n                    }\n                    if (this.spaEnvRes.SPA_ENV_PACUTOFF_MAINTENANCE_START) {\n                        this.cutOffDate.emit(this.spaEnvRes);\n                    }\n\n            }, (error: Response | any) => {\n                console.log('Error when calling the MSP Maintenance: ' + error);\n                this.logService.log({\n                  event: 'ACL - SPA Env System Error',\n                  success: false,\n                  errMsg: 'ACL - SPA Env Rapid Response Error' + error\n                });\n        }\n\n      );\n  }\n\n  registerOnChange(fn: any): void {\n    this.accept.emit(fn) ;\n    this._onChange = fn;\n  }\n\n  registerOnTouched(fn: any): void {\n    this._onTouched = fn;\n  }\n\n  writeValue(value: any): void {\n\n    //\n  }\n\n  isContinueDisabled(): boolean {\n    return !this.agreeCheck || this.disableContinue;\n  }\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"guards/LoadPageGuardService.html":{"url":"guards/LoadPageGuardService.html","title":"guard - LoadPageGuardService","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n    Guards\n    LoadPageGuardService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n        \n            \n            File\n            \n            \n                projects/common/lib/services/load-page-guard.service.ts\n            \n\n                \n                Description\n                \n                \n                    Use this service to implement Load Page Route Guards in your application. This is for a\ntypical form flow, where the user must proceed sequentially from one page to\nthe next.\nTo setup, you must:\n\nCreate a service implementing the abstract methods in AbstractPageGuardService\nSetup AbstractPageGuardService in NgModule providers, to useExisting the service from previous step.\nAdd this LoadPageGuardService to same providers from previous step.\nConfigure routes to use LoadPageGuardService - canActivate or canActivateChild\nHave each \"page\" in the form call setPageIncomplete() or setPageComplete() (from the \"PageStateService\")\n\nYou must make sure to setup AbstractPageGuardService in NgModules correctly.\n\n                \n\n\n\n                \n                Example\n                \n                \n                            \n                                //STEP 2 + STEP 3\n//registration.module.ts\nproviders: [\n...\n{ provide: AbstractPageGuardService, useExisting: DefaultPageGuardService },\nLoadPageGuardService\n]\n\n\n//STEP 4\n//registration-routing.modle.ts\nconst routes: Routes = [{\npath: '',\ncanActivateChild: [LoadPageGuardService] //or canActivate\n}\n...\n]\n\n\n//STEP 5\n//example.component.ts\nngOnInit() { this.pageService.setPageIncomplete(); }\ncontinue() { this.pageService.setPageComplete(); }\n                            \n                \n\n                \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                _continue\n                            \n                            \n                                canActivate\n                            \n                            \n                                canActivateChild\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n                \n    Constructor\n        \n            \n                \n                    \nconstructor(router: Router, service: AbstractPageGuardService)\n                    \n                \n                        \n                            \n                                Defined in projects/common/lib/services/load-page-guard.service.ts:53\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        service\n                                                  \n                                                        \n                                                                        AbstractPageGuardService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n                \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            _continue\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    _continue(pageUrl: string)\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/services/load-page-guard.service.ts:73\n                \n            \n\n\n            \n                \n                    Logic to determine whether or not allow to continue to next page \n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    pageUrl\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            canActivate\n                        \n                        \n                    \n                \n            \n            \n                \ncanActivate(route: ActivatedRouteSnapshot, state: RouterStateSnapshot)\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/services/load-page-guard.service.ts:58\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    route\n                                    \n                                                ActivatedRouteSnapshot\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    state\n                                    \n                                                RouterStateSnapshot\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable | Promise | boolean | UrlTree\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            canActivateChild\n                        \n                        \n                    \n                \n            \n            \n                \ncanActivateChild(next: ActivatedRouteSnapshot, state: RouterStateSnapshot)\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/services/load-page-guard.service.ts:66\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    next\n                                    \n                                                ActivatedRouteSnapshot\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    state\n                                    \n                                                RouterStateSnapshot\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable | Promise | boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n        \n\n\n        \n            import { Injectable } from '@angular/core';\nimport { CanActivateChild, Router, ActivatedRouteSnapshot, RouterStateSnapshot, UrlTree, CanActivate } from '@angular/router';\nimport { Observable } from 'rxjs';\nimport { AbstractPageGuardService } from './abstract-page-guard.service';\n\n\n/**\n * Use this service to implement Load Page Route Guards in your application. This is for a\n * typical form flow, where the user must proceed sequentially from one page to\n * the next.\n *\n * To setup, you must:\n *\n * 1. Create a service implementing the abstract methods in `AbstractPageGuardService`\n * 2. Setup AbstractPageGuardService in NgModule providers, to `useExisting` the service from previous step.\n * 3. Add this LoadPageGuardService to same providers from previous step.\n * 4. Configure routes to use LoadPageGuardService - `canActivate` or `canActivateChild`\n * 5. Have each \"page\" in the form call `setPageIncomplete()` or `setPageComplete()` (from the \"PageStateService\")\n *\n *\n * You must make sure to setup AbstractPageGuardService in NgModules correctly.\n *\n *  @example\n *                //STEP 2 + STEP 3\n *                //registration.module.ts\n *                providers: [\n *                        ...\n *                        { provide: AbstractPageGuardService, useExisting: DefaultPageGuardService },\n *                        LoadPageGuardService\n *                ]\n *\n *\n *                //STEP 4\n *                //registration-routing.modle.ts\n *                const routes: Routes = [{\n *                   path: '',\n *                   canActivateChild: [LoadPageGuardService] //or canActivate\n *                  }\n *                   ...\n *                ]\n *\n *\n *                //STEP 5\n *                //example.component.ts\n *                ngOnInit() { this.pageService.setPageIncomplete(); }\n *                continue() { this.pageService.setPageComplete(); }\n *\n *\n */\n@Injectable({\n  providedIn: 'root'\n})\nexport class LoadPageGuardService implements CanActivate, CanActivateChild {\n\n  constructor(private router: Router, private service: AbstractPageGuardService) {\n  }\n\n  canActivate(\n    route: ActivatedRouteSnapshot,\n    state: RouterStateSnapshot\n  ): Observable | Promise | boolean | UrlTree {\n\n    return this._continue(state.url);\n  }\n\n  canActivateChild(\n    next: ActivatedRouteSnapshot,\n    state: RouterStateSnapshot): Observable | Promise | boolean {\n    return this._continue(state.url);\n  }\n\n  /** Logic to determine whether or not allow to continue to next page */\n  private _continue(pageUrl: string): boolean {\n\n    if (this.service.canBypassGuards()) {\n      return true;\n    }\n\n    /**\n     * Logic within method is specific to application\n     */\n    return this.service.canNavigateToUrl(pageUrl);\n  }\n}\n\n        \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Maxlengths.html":{"url":"interfaces/Maxlengths.html","title":"interface - Maxlengths","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  Maxlengths\n\n\n\n        \n            Info\n        \n        \n            Design Guidelines\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/common/lib/components/address/address.component.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        address\n                                \n                                \n                                            Optional\n                                        city\n                                \n                                \n                                            Optional\n                                        country\n                                \n                                \n                                            Optional\n                                        postalCode\n                                \n                                \n                                            Optional\n                                        province\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        address\n                                    \n                                \n                                \n                                    \n                                        address:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        city\n                                    \n                                \n                                \n                                    \n                                        city:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        country\n                                    \n                                \n                                \n                                    \n                                        country:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        postalCode\n                                    \n                                \n                                \n                                    \n                                        postalCode:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        province\n                                    \n                                \n                                \n                                    \n                                        province:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n    \n        Design Guidelines\ntodo\n\n    \n\n    \n        import {\n  Component,\n  Input,\n  Output,\n  EventEmitter,\n  OnChanges,\n  forwardRef,\n  OnInit\n} from '@angular/core';\nimport { ControlContainer, ControlValueAccessor, NgForm, NG_VALUE_ACCESSOR } from '@angular/forms';\nimport { Base } from '../../models/base';\nimport { GeoAddressResult } from '../../services/geocoder.service';\nimport { Address } from '../../models/address.model';\nimport { CountryList, CANADA, UNITED_STATES, COUNTRY_LIST } from '../country/country.component';\nimport { ProvinceList, BRITISH_COLUMBIA, PROVINCE_LIST } from '../province/province.component';\n\nexport interface AddrLabelList {\n  address1?: string;\n  address2?: string;\n  address3?: string;\n  city?: string;\n  province?: string;\n  country?: string;\n  postalCode?: string;\n}\n\nexport interface Maxlengths {\n  address?: string;\n  city?: string;\n  province?: string;\n  country?: string;\n  postalCode?: string;\n}\n\nexport interface ReadOnlyFields {\n  address?: boolean;\n  city?: boolean;\n  province?: boolean;\n  country?: boolean;\n  postalCode?: boolean;\n}\n\n/**\n *\n * Note - This component REQUIRES that `HttpClientModule` is registered in your NgModule.\n */\n@Component({\n  selector: 'common-address',\n  templateUrl: './address.component.html',\n  styleUrls: ['./address.component.scss'],\n  /* Re-use the same ngForm that it's parent is using. The component will show\n   * up in its parents `this.form`, and will auto-update `this.form.valid`\n   */\n  viewProviders: [\n    { provide: ControlContainer, useExisting: forwardRef(() => NgForm) }\n  ],\n  providers: [\n    { provide: NG_VALUE_ACCESSOR, useExisting: forwardRef(() => AddressComponent) }\n  ]\n})\nexport class AddressComponent extends Base\n  implements OnInit, OnChanges, ControlValueAccessor {\n\n  /* Disable all fields by sending in boolean,\n   * disable specific fields by sending in ReadOnlyFields structure\n   */\n  @Input() disabled: boolean | ReadOnlyFields = false;\n  @Input() isRequired: boolean = false;\n  @Input() countryList: CountryList[] = COUNTRY_LIST;\n  @Input() defaultCountry: string = CANADA;\n  @Input() provinceList: ProvinceList[] = PROVINCE_LIST;\n  @Input() defaultProvince: string = BRITISH_COLUMBIA;\n  @Input() disableGeocoder: boolean = false;\n  @Input() labels: AddrLabelList;\n  @Input() maxlengths: Maxlengths;\n  @Input() bcOnly: boolean = false;\n\n  @Input()\n  set address(val: Address) {\n    if (val) {\n      this.addr = val;\n    }\n  }\n  get address(): Address {\n    return this.addr;\n  }\n\n  @Output() addressChange: EventEmitter = new EventEmitter();\n  /**\n   * If true, adds a plus icon next to street and enables users to add a second\n   * address line.  This value binds to `address.addressLine2`\n   */\n  @Input() allowExtralines: boolean = false;\n\n  addr: Address;\n  provList: ProvinceList[];\n  showLine2 = false;\n  showLine3 = false;\n\n  // Labels defaulted to MSP\n  addrLabels: AddrLabelList =  {\n    address1: 'Full street address, rural route, PO box or general delivery',\n    address2: 'Address Line 2',\n    address3: 'Address Line 3',\n    city: 'City',\n    province: 'Province or state',\n    country: 'Country',\n    postalCode: 'Postal Code or Zip Code'\n  };\n\n  // Lengths defaulted to MSP\n  fieldMaxLenghts: Maxlengths = {\n    address: '25',\n    city: '25',\n    province: '25',\n    country: '250',\n    postalCode: '25'\n  };\n\n  readOnlyFields: ReadOnlyFields = {\n    address: false,\n    city: false,\n    province: false,\n    country: false,\n    postalCode: false,\n  };\n\n  _onChange = (_: any) => { };\n  _onTouched = (_: any) => { };\n\n  constructor() {\n    super();\n  }\n\n  ngOnInit() {\n\n    // console.log( 'address: ', this.bcOnly );\n\n    this.setLabels();\n    this.setMaxlengths();\n    this.setReadOnlyFields();\n\n    if (this.addr) {\n\n      if (!this.addr.country) {\n        this.addr.country = this.setDefaultCountryAsOption();\n      } else {\n        // If string for country submitted, need to find code to display value in select box\n        this.addr.country = this.findCountryCode( this.addr.country );\n      }\n\n      if (!this.addr.province) {\n        this.addr.province = this.setDefaultProvinceAsOption(this.addr.country);\n      }\n\n      // Make sure addressLine2 is visible if there is data persisted to display there.\n      if (this.allowExtralines) {\n        if (this.addr.addressLine2) {\n          this.addLine(2);\n        }\n\n        if (this.addr.addressLine3) {\n          this.addLine(3);\n        }\n      }\n    }\n\n    this.updateProvList();\n  }\n\n  /**\n   * Set country province blank\n   * @param value\n   */\n  setCountry(value: string) {\n    this.addr.province = this.setDefaultProvinceAsOption( value );\n    this.addr.country = value;\n    this.updateProvList();\n\n   if ( this.isCanada() ) {\n      // If Canada, clear postal code to display mask\n      this.addr.postal = '';\n    }\n\n    this._onChange(this.addr);\n    this.addressChange.emit(this.addr);\n    this._onTouched(this.addr);\n  }\n\n  setProvince(value: string) {\n    this.addr.province = value;\n    this._onChange(this.addr);\n    this.addressChange.emit(this.addr);\n    this._onTouched(this.addr);\n  }\n\n  setStreetAddress(value: string) {\n    this.addr.addressLine1 = value;\n    this._onChange(this.addr);\n    this.addressChange.emit(this.addr);\n    this._onTouched(this.addr);\n  }\n\n  setCity(value: string) {\n    this.addr.city = value;\n    this._onChange(this.addr);\n    this.addressChange.emit(this.addr);\n    this._onTouched(this.addr);\n  }\n\n  /**\n   * Sets string after converted upper case\n   * @param text\n   */\n  setPostalCode(value: string) {\n    this.addr.postal = value;\n    this._onChange(this.addr);\n    this.addressChange.emit(this.addr);\n    this._onTouched(this.addr);\n  }\n\n  isCanada(): boolean {\n    return this.addr && CANADA === this.addr.country;\n  }\n\n  ngOnChanges(changes) {\n    if (changes['countryList'] && changes['countryList'].currentValue) {\n\n      if (this.addr && !this.addr.country) {\n        // Set defaults\n        this.addr.country = this.setDefaultCountryAsOption();\n\n        // Set defaults\n        this.addr.province = this.setDefaultProvinceAsOption(this.addr.country);\n      }\n      this.updateProvList();\n    }\n    if (changes['provinceList'] && changes['provinceList'].currentValue) {\n      if (this.addr && !this.addr.province) {\n        // Set defaults\n        this.addr.province = this.setDefaultProvinceAsOption(this.addr.country);\n      }\n      this.updateProvList();\n    }\n  }\n\n  addLine(line: 2 | 3 = null) {\n\n    // Add lines in order\n    if (line === null) {\n      if (!this.showLine2) {\n        this.showLine2 = true;\n      } else if (!this.showLine3) {\n        this.showLine3 = true;\n      }\n    } else {\n      // Add specific line number\n      const lookup = `showLine${line}`;\n      this[lookup] = true;\n    }\n  }\n\n  removeLine(line: 2 | 3) {\n    // We can remove lines in any order, depending on user input\n    // Dynamically lookup variable based on line number input.\n    const lookup = `showLine${line}`;\n    this[lookup] = false;\n\n    // TODO - Need to clear the data in the appropriate field, just null/undefined it out.\n    const addrLookup = `addressLine${line}`;\n    this.address[addrLookup] = undefined;\n  }\n\n  /**\n   * Updates the provList variable. Values must be stored in a variable and not\n   * accessed via function invocation for performance.\n   */\n  private updateProvList() {\n    if (!this.provinceList) { return; } // When data is async and hasn't loaded\n    this.provList = this.provinceList\n      .map(prov => {\n        if (prov.country === this.addr.country) {\n          return prov;\n        }\n      })\n      .filter(x => x);\n  }\n\n  /**\n   * Sets the default province option value\n   */\n  private setDefaultProvinceAsOption(country: string): string {\n    const provObj = !this.provinceList ? null : this.provinceList.find(\n      val => (val.provinceCode === this.defaultProvince ||\n        val.description === this.defaultProvince) &&\n        val.country === country\n    );\n    return (provObj ? provObj.provinceCode : '');\n  }\n\n  private findProvinceDescription(prov: string): string {\n    const provObj = !this.provinceList ? null : this.provinceList.find(\n      val => val.provinceCode === prov ||\n        val.description === prov\n    );\n    return (provObj ? provObj.description : null);\n  }\n\n  /**\n   * Set country to default\n   * Search uses country code or country name to find item is list.\n   */\n  private setDefaultCountryAsOption(): string {\n    return this.findCountryCode( this.defaultCountry );\n  }\n\n  private findCountryCode( country: string ): string {\n    const countryObj = !this.countryList\n      ? null\n      : this.countryList.find(\n        val =>\n          val.countryCode === country ||\n          val.description === country\n      );\n    return countryObj ? countryObj.countryCode : null;\n  }\n\n  // GeoCoder\n\n  /**\n   * GeoCoder only is applicable when address is BC, Canada.\n   */\n  useGeoCoder(): boolean {\n    if (this.disableGeocoder) {\n      return false;\n    }\n    return this.isCanada() && BRITISH_COLUMBIA === this.addr.province;\n  }\n\n  // Only BC addresses therefore no need to copy province into structure.\n  setAddress(data: GeoAddressResult) {\n    this.addr.addressLine1 = data.street;\n    this.addr.city = data.city;\n    this.addr.province = data.province;\n    this.addr.country = data.country;\n    this.addressChange.emit(this.addr);\n  }\n\n  writeValue( value: Address) {\n    if ( value ) {\n      this.addr = value;\n    }\n  }\n\n  registerOnChange(fn: any): void {\n    this._onChange = fn;\n  }\n\n  registerOnTouched(fn: any): void {\n    this._onTouched = fn;\n  }\n\n  setDisabledState(isDisabled: boolean): void {\n    this.disabled = isDisabled;\n    this.setReadOnlyFields();\n  }\n\n  private setLabels() {\n    if ( this.labels ) {\n      Object.keys(this.labels).map( x => this.addrLabels[x] = this.labels[x] );\n    }\n  }\n\n  private setMaxlengths() {\n    if ( this.maxlengths ) {\n      Object.keys(this.fieldMaxLenghts).map( x => this.maxlengths[x] = this.fieldMaxLenghts[x]);\n    }\n  }\n\n  private setReadOnlyFields() {\n    if ( typeof this.disabled === 'boolean' ) {\n      Object.keys(this.readOnlyFields).map( x => this.readOnlyFields[x] = this.disabled );\n    } else {\n      Object.keys(this.disabled).map( x => this.readOnlyFields[x] = this.disabled[x] );\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/MoHCommonLibraryError.html":{"url":"classes/MoHCommonLibraryError.html","title":"class - MoHCommonLibraryError","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  MoHCommonLibraryError\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/common/helpers/library-error.ts\n        \n\n\n            \n                Extends\n            \n            \n                    Error\n            \n\n\n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(message?: string)\n                    \n                \n                        \n                            \n                                Defined in projects/common/helpers/library-error.ts:1\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        message\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class MoHCommonLibraryError extends Error {\n    constructor(message?: string) {\n        super(message); // 'Error' breaks prototype chain here\n        Object.setPrototypeOf(this, new.target.prototype); // restore prototype chain\n    }\n}\n\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/NameComponent.html":{"url":"components/NameComponent.html","title":"component - NameComponent","body":"\n                   \n\n\n\n\n\n  Components\n  NameComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    projects/common/lib/components/name/name.component.ts\n\n\n    \n        Description\n    \n    \n        TODO DOCUMENT NEED TO USE NGMODEL FOR REQUIRED TO WORK. Also test with reactive forms to see if still nec\n\n    \n\n    \n        Extends\n    \n    \n                Base\n    \n\n    \n        Implements\n    \n    \n                    ControlValueAccessor\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                common-name\n            \n\n            \n                styleUrls\n                ./name.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./name.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                _onChange\n                            \n                            \n                                _onTouched\n                            \n                            \n                                    Public\n                                controlDir\n                            \n                            \n                                    Public\n                                nameStr\n                            \n                            \n                                    Public\n                                objectId\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                onBlurEvent\n                            \n                            \n                                onValueChange\n                            \n                            \n                                registerOnChange\n                            \n                            \n                                registerOnTouched\n                            \n                            \n                                setDisabledState\n                            \n                            \n                                writeValue\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                disabled\n                            \n                            \n                                label\n                            \n                            \n                                labelforId\n                            \n                            \n                                maxlen\n                            \n                            \n                                value\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                blurEvent\n                            \n                            \n                                valueChange\n                            \n                        \n                    \n                \n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    value\n                                \n                                \n                                    maxLenAsNumber\n                                \n                            \n                        \n                    \n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(controlDir: NgControl)\n                    \n                \n                        \n                            \n                                Defined in projects/common/lib/components/name/name.component.ts:42\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        controlDir\n                                                  \n                                                        \n                                                                        NgControl\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        disabled\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/name/name.component.ts:21\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        label\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'Name'\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/name/name.component.ts:22\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        labelforId\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'name_' + this.objectId\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/name/name.component.ts:24\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        maxlen\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : '255'\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/name/name.component.ts:23\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        value\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/name/name.component.ts:27\n                            \n                        \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        blurEvent\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/name/name.component.ts:37\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        valueChange\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/name/name.component.ts:36\n                            \n                        \n            \n        \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            onBlurEvent\n                        \n                        \n                    \n                \n            \n            \n                \nonBlurEvent(event: any)\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/components/name/name.component.ts:56\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    event\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            onValueChange\n                        \n                        \n                    \n                \n            \n            \n                \nonValueChange(value: any)\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/components/name/name.component.ts:51\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            registerOnChange\n                        \n                        \n                    \n                \n            \n            \n                \nregisterOnChange(fn: any)\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/components/name/name.component.ts:68\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    fn\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            registerOnTouched\n                        \n                        \n                    \n                \n            \n            \n                \nregisterOnTouched(fn: any)\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/components/name/name.component.ts:73\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    fn\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            setDisabledState\n                        \n                        \n                    \n                \n            \n            \n                \nsetDisabledState(isDisabled: boolean)\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/components/name/name.component.ts:77\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    isDisabled\n                                    \n                                                boolean\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            writeValue\n                        \n                        \n                    \n                \n            \n            \n                \nwriteValue(value: any)\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/components/name/name.component.ts:61\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            _onChange\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : () => {...}\n                        \n                    \n                        \n                            \n                                    Defined in projects/common/lib/components/name/name.component.ts:41\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            _onTouched\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : () => {...}\n                        \n                    \n                        \n                            \n                                    Defined in projects/common/lib/components/name/name.component.ts:42\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            controlDir\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         NgControl\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Optional()@Self()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in projects/common/lib/components/name/name.component.ts:44\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            nameStr\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : ''\n                        \n                    \n                        \n                            \n                                    Defined in projects/common/lib/components/name/name.component.ts:39\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            objectId\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : UUID.UUID()\n                        \n                    \n                            \n                                \n                                    Inherited from         Base\n\n                                \n                            \n                        \n                            \n                                    Defined in         Base:11\n\n                            \n                        \n\n                \n                    \n                        An identifier for parents to keep track of components \n\n                    \n                \n\n            \n        \n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        value\n                    \n                \n\n                \n                    \n                        getvalue()\n                    \n                \n                            \n                                \n                                    Defined in projects/common/lib/components/name/name.component.ts:32\n                                \n                            \n\n                \n                    \n                        setvalue(val: string)\n                    \n                \n                            \n                                \n                                    Defined in projects/common/lib/components/name/name.component.ts:27\n                                \n                            \n                    \n                        \n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                        Type\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                            val\n                                                    \n                                                            \n                                                                            string\n                                                            \n                                                    \n                                                        \n                                                                No\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :         void\n\n                                \n                        \n                    \n            \n        \n        \n            \n                \n                    \n                        \n                        maxLenAsNumber\n                    \n                \n\n                \n                    \n                        getmaxLenAsNumber()\n                    \n                \n                            \n                                \n                                    Defined in projects/common/lib/components/name/name.component.ts:81\n                                \n                            \n\n            \n        \n\n\n\n\n    \n        import {\n  Component,\n  Input,\n  Optional,\n  Self,\n  Output,\n  EventEmitter } from '@angular/core';\nimport { ControlValueAccessor, NgControl } from '@angular/forms';\nimport { Base } from '../../models/base';\n\n/**\n * TODO DOCUMENT NEED TO USE NGMODEL FOR REQUIRED TO WORK. Also test with reactive forms to see if still nec\n */\n@Component({\n  selector: 'common-name',\n  templateUrl: './name.component.html',\n  styleUrls: ['./name.component.scss']\n})\nexport class NameComponent extends Base implements ControlValueAccessor {\n\n  @Input() disabled: boolean = false;\n  @Input() label: string = 'Name';\n  @Input() maxlen: string = '255';\n  @Input() labelforId: string = 'name_' + this.objectId;\n\n  @Input()\n  set value( val: string ) {\n    if ( val ) {\n      this.nameStr = val;\n    }\n  }\n  get value() {\n    return this.nameStr;\n  }\n\n  @Output() valueChange: EventEmitter = new EventEmitter();\n  @Output() blurEvent: EventEmitter = new EventEmitter();\n\n  public nameStr: string = '';\n\n  _onChange = (_: any) => {};\n  _onTouched = (_: any) => {};\n\n  constructor( @Optional() @Self() public controlDir: NgControl ) {\n    super();\n    if ( controlDir ) {\n      controlDir.valueAccessor = this;\n    }\n  }\n\n  onValueChange( value: any ) {\n      this._onChange( value );\n      this.valueChange.emit( value );\n  }\n\n  onBlurEvent( event: any ) {\n    this._onTouched( event );\n    this.blurEvent.emit( event.target.value );\n  }\n\n  writeValue( value: any ): void {\n    if ( value ) {\n      this.nameStr = value;\n    }\n  }\n\n  // Register change function\n  registerOnChange( fn: any ): void {\n    this._onChange = fn;\n  }\n\n  // Register touched function\n  registerOnTouched( fn: any ): void {\n    this._onTouched = fn;\n  }\n\n  setDisabledState(isDisabled: boolean): void {\n    this.disabled = isDisabled;\n  }\n\n  get maxLenAsNumber(): number {\n    return Number.parseInt( this.maxlen, 10 );\n  }\n}\n\n    \n\n    \n        \n{{label}}\n\n\n\n  \n    {{label}} is required.\n  \n  \n     1; else initInvalid;\">\n        {{label}} must begin with a letter and cannot include special characters except hyphens,\n        periods, apostrophes and blank characters.\n    \n  \n\n\n\n  {{label}} must be with a letter.\n\n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '{{label}}      {{label}} is required.         1; else initInvalid;\">        {{label}} must begin with a letter and cannot include special characters except hyphens,        periods, apostrophes and blank characters.        {{label}} must be with a letter.'\n    var COMPONENTS = [{'name': 'AccordionCommonComponent', 'selector': 'common-accordion'},{'name': 'AddressComponent', 'selector': 'common-address'},{'name': 'ButtonComponent', 'selector': 'common-button'},{'name': 'ButtonGroupComponent', 'selector': 'common-button-group'},{'name': 'CaptchaComponent', 'selector': 'common-captcha'},{'name': 'CheckboxComponent', 'selector': 'common-checkbox'},{'name': 'CityComponent', 'selector': 'common-city'},{'name': 'ConfirmTemplateComponent', 'selector': 'common-confirm-template'},{'name': 'ConsentModalComponent', 'selector': 'common-consent-modal'},{'name': 'CoreBreadcrumbComponent', 'selector': 'common-core-breadcrumb'},{'name': 'CountryComponent', 'selector': 'common-country'},{'name': 'DateComponent', 'selector': 'common-date'},{'name': 'DatepickerComponent', 'selector': 'common-datepicker'},{'name': 'DropdownComponent', 'selector': 'common-dropdown'},{'name': 'EmailComponent', 'selector': 'common-email'},{'name': 'ErrorContainerComponent', 'selector': 'common-error-container'},{'name': 'FileUploaderComponent', 'selector': 'common-file-uploader'},{'name': 'FormActionBarComponent', 'selector': 'common-form-action-bar'},{'name': 'FormSubmitBarComponent', 'selector': 'common-form-submit-bar'},{'name': 'FullNameComponent', 'selector': 'common-full-name'},{'name': 'GeocoderInputComponent', 'selector': 'common-geocoder-input'},{'name': 'HeaderComponent', 'selector': 'common-header'},{'name': 'NameComponent', 'selector': 'common-name'},{'name': 'PageFrameworkComponent', 'selector': 'common-page-framework'},{'name': 'PageSectionComponent', 'selector': 'common-page-section'},{'name': 'PasswordComponent', 'selector': 'common-password'},{'name': 'PhnComponent', 'selector': 'common-phn'},{'name': 'PhoneNumberComponent', 'selector': 'common-phone-number'},{'name': 'PostalCodeComponent', 'selector': 'common-postal-code'},{'name': 'ProvinceComponent', 'selector': 'common-province'},{'name': 'RadioComponent', 'selector': 'common-radio'},{'name': 'SampleModalComponent', 'selector': 'common-sample-modal'},{'name': 'SinComponent', 'selector': 'common-sin'},{'name': 'StreetComponent', 'selector': 'common-street'},{'name': 'ThumbnailComponent', 'selector': 'common-thumbnail'},{'name': 'ToggleComponent', 'selector': 'common-toggle'},{'name': 'WizardProgressBarComponent', 'selector': 'common-wizard-progress-bar'},{'name': 'XiconButtonComponent', 'selector': 'common-xicon-button'}];\n    var DIRECTIVES = [{'name': 'DateFieldFormatDirective', 'selector': '[commonDateFieldFormat]'},{'name': 'DuplicateCheckDirective', 'selector': '[commonDuplicateCheck]'},{'name': 'ValidateBcPostalDirective', 'selector': '[commonValidateBcPostal]'},{'name': 'ValidateCityDirective', 'selector': '[commonValidateCity]'},{'name': 'ValidateNameDirective', 'selector': '[commonValidateName]'},{'name': 'ValidatePostalcodeDirective', 'selector': '[commonValidatePostalcode]'},{'name': 'ValidateRegionDirective', 'selector': '[commonValidateRegion]'},{'name': 'ValidateStreetDirective', 'selector': '[commonValidateStreet]'}];\n    var ACTUAL_COMPONENT = {'name': 'NameComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/PageFrameworkComponent.html":{"url":"components/PageFrameworkComponent.html","title":"component - PageFrameworkComponent","body":"\n                   \n\n\n\n\n\n  Components\n  PageFrameworkComponent\n\n\n\n        \n            Info\n        \n        \n            Design Guidelines\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    projects/common/lib/components/page-framework/page-framework.component.ts\n\n\n    \n        Description\n    \n    \n        The \"Page Framework\" is a template to be used on FPCare pages to ensure\nconsistent layout.  It should be used on every page unless there is a good\nexception.\nNote: CommonFormActionBar (and SubmitBar) must come AFTER this element, not\ninside in version 2.0.0 and above.\n\n    \n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n    \n        Example\n    \n    \n                \n                    \nThis will go in the middle column\nSo will this\n This will go in the side column, or tips.\n\n\n                \n    \n\n\n    Metadata\n    \n        \n\n\n            \n                encapsulation\n                ViewEncapsulation.None\n            \n\n\n\n\n\n\n\n\n\n            \n                selector\n                common-page-framework\n            \n\n            \n                styleUrls\n                ./page-framework.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./page-framework.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                layout\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        layout\n                    \n                \n                \n                    \n                        Type :     \"single\" | \"double\" | \"blank\" | \"default\"\n\n                    \n                \n                \n                    \n                        Default value : 'default'\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/page-framework/page-framework.component.ts:29\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/components/page-framework/page-framework.component.ts:31\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n\n\n    \n        Design Guidelines\nLorem ipsum dolor sit amet consectetur adipisicing elit. Sapiente, magnam ipsam. Sit quasi natus architecto rerum unde non provident! Quia nisi facere amet iste mollitia voluptatem non molestias esse optio?\nAperiam fugiat consectetur temporibus, iste repellat, quisquam sapiente nisi distinctio optio, autem nemo tenetur error eum voluptatibus ab accusamus quis voluptatum blanditiis. Quam et ut reprehenderit vitae nobis, at ipsum!\nExercitationem pariatur animi repudiandae corporis obcaecati ratione ducimus beatae quam, nostrum magnam unde numquam quidem cupiditate odit id. Beatae alias molestiae, optio incidunt harum quia voluptates deserunt sequi. Nesciunt, optio.\n\n    \n\n    \n        import { Component, OnInit, Input, ViewEncapsulation } from '@angular/core';\n\n/**\n * The \"Page Framework\" is a template to be used on FPCare pages to ensure\n * consistent layout.  It should be used on every page unless there is a good\n * exception.\n *\n * Note: CommonFormActionBar (and SubmitBar) must come *AFTER* this element, not\n * inside in version 2.0.0 and above.\n *\n * @example\n * \n *        This will go in the middle column\n *        So will this\n *         This will go in the side column, or tips.\n * \n * \n *\n * @export\n */\n@Component({\n  selector: 'common-page-framework',\n  templateUrl: './page-framework.component.html',\n  styleUrls: ['./page-framework.component.scss'],\n  encapsulation: ViewEncapsulation.None,\n})\nexport class PageFrameworkComponent implements OnInit {\n\n  @Input() layout: 'single' | 'double' | 'blank' | 'default' = 'default';\n\n  ngOnInit() {\n  }\n\n}\n\n    \n\n    \n        \n\n  \n    \n      \n        \n      \n    \n    \n      \n        \n      \n    \n  \n\n\n  \n    \n      \n        \n      \n    \n    \n      \n        \n      \n    \n  \n\n    \n      \n        \n          \n        \n      \n    \n\n    \n      \n        \n          \n        \n      \n    \n\n\n\n\n\n\n  \n\n\n\n    \n\n\n\n  \n  \n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                                                                                                                                                                                                              '\n    var COMPONENTS = [{'name': 'AccordionCommonComponent', 'selector': 'common-accordion'},{'name': 'AddressComponent', 'selector': 'common-address'},{'name': 'ButtonComponent', 'selector': 'common-button'},{'name': 'ButtonGroupComponent', 'selector': 'common-button-group'},{'name': 'CaptchaComponent', 'selector': 'common-captcha'},{'name': 'CheckboxComponent', 'selector': 'common-checkbox'},{'name': 'CityComponent', 'selector': 'common-city'},{'name': 'ConfirmTemplateComponent', 'selector': 'common-confirm-template'},{'name': 'ConsentModalComponent', 'selector': 'common-consent-modal'},{'name': 'CoreBreadcrumbComponent', 'selector': 'common-core-breadcrumb'},{'name': 'CountryComponent', 'selector': 'common-country'},{'name': 'DateComponent', 'selector': 'common-date'},{'name': 'DatepickerComponent', 'selector': 'common-datepicker'},{'name': 'DropdownComponent', 'selector': 'common-dropdown'},{'name': 'EmailComponent', 'selector': 'common-email'},{'name': 'ErrorContainerComponent', 'selector': 'common-error-container'},{'name': 'FileUploaderComponent', 'selector': 'common-file-uploader'},{'name': 'FormActionBarComponent', 'selector': 'common-form-action-bar'},{'name': 'FormSubmitBarComponent', 'selector': 'common-form-submit-bar'},{'name': 'FullNameComponent', 'selector': 'common-full-name'},{'name': 'GeocoderInputComponent', 'selector': 'common-geocoder-input'},{'name': 'HeaderComponent', 'selector': 'common-header'},{'name': 'NameComponent', 'selector': 'common-name'},{'name': 'PageFrameworkComponent', 'selector': 'common-page-framework'},{'name': 'PageSectionComponent', 'selector': 'common-page-section'},{'name': 'PasswordComponent', 'selector': 'common-password'},{'name': 'PhnComponent', 'selector': 'common-phn'},{'name': 'PhoneNumberComponent', 'selector': 'common-phone-number'},{'name': 'PostalCodeComponent', 'selector': 'common-postal-code'},{'name': 'ProvinceComponent', 'selector': 'common-province'},{'name': 'RadioComponent', 'selector': 'common-radio'},{'name': 'SampleModalComponent', 'selector': 'common-sample-modal'},{'name': 'SinComponent', 'selector': 'common-sin'},{'name': 'StreetComponent', 'selector': 'common-street'},{'name': 'ThumbnailComponent', 'selector': 'common-thumbnail'},{'name': 'ToggleComponent', 'selector': 'common-toggle'},{'name': 'WizardProgressBarComponent', 'selector': 'common-wizard-progress-bar'},{'name': 'XiconButtonComponent', 'selector': 'common-xicon-button'}];\n    var DIRECTIVES = [{'name': 'DateFieldFormatDirective', 'selector': '[commonDateFieldFormat]'},{'name': 'DuplicateCheckDirective', 'selector': '[commonDuplicateCheck]'},{'name': 'ValidateBcPostalDirective', 'selector': '[commonValidateBcPostal]'},{'name': 'ValidateCityDirective', 'selector': '[commonValidateCity]'},{'name': 'ValidateNameDirective', 'selector': '[commonValidateName]'},{'name': 'ValidatePostalcodeDirective', 'selector': '[commonValidatePostalcode]'},{'name': 'ValidateRegionDirective', 'selector': '[commonValidateRegion]'},{'name': 'ValidateStreetDirective', 'selector': '[commonValidateStreet]'}];\n    var ACTUAL_COMPONENT = {'name': 'PageFrameworkComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/PageList.html":{"url":"interfaces/PageList.html","title":"interface - PageList","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  PageList\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/common/lib/services/page-state.service.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        index\n                                \n                                \n                                        isComplete\n                                \n                                \n                                        path\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n            \n    Indexable\n        \n            \n                \n                    \n                        [key: string]:        any\n\n                    \n                \n                        \n                            \n                                Defined in projects/common/lib/services/page-state.service.ts:7\n                            \n                        \n            \n        \n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        index\n                                    \n                                \n                                \n                                    \n                                        index:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        isComplete\n                                    \n                                \n                                \n                                    \n                                        isComplete:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        path\n                                    \n                                \n                                \n                                    \n                                        path:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { Route, Router } from '@angular/router';\n\nexport interface PageList {\n  index: number;\n  path: string;\n  isComplete: boolean;\n  [key: string]: any;\n}\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class PageStateService {\n\n  pageList: PageList[] = [];\n\n  constructor( protected router: Router ) { }\n\n  setPages( arr: Route[],\n            routeListConst: any,\n            fn?: (x: any) => {[key: string]: any} ): PageList[] {\n\n    if ( this.pageList && !this.pageList.length ) {\n\n      const routeConst = Object.keys( routeListConst ).map( x => routeListConst[x] );\n\n      let cnt = 0;\n      this.pageList = arr.filter((itm: any) => !itm.redirectTo)\n        .map((itm: any) => {\n          const val = routeConst.find( x => x.path === itm.path );\n\n          cnt = cnt + 1; // count for indices\n\n          // Page List to be returned\n          let obj = {\n            index: cnt,\n            path: val.path,\n            isComplete: false,\n          };\n\n          if ( fn ) {\n            obj = Object.assign( obj, fn( val ) );\n          }\n          return obj;\n        });\n    }\n    return this.pageList;\n  }\n\n  // Returns index parameter value\n  findIndex( url: string = null ): number {\n    let idx = 0;\n    if ( this.pageList ) {\n      const obj = this._find(url ? url : this.router.url);\n      if ( obj ) {\n        idx = obj.index;\n      }\n    }\n    return idx;\n  }\n\n  getPageAtIndex( idx: number ): PageList  | null {\n    const index = idx - 1;\n    if ( this.pageList && index >= 0 && this.pageList.length > index ) {\n      return this.pageList[index];\n    }\n    return null;\n  }\n\n  setPageIncomplete( url: string = null ) {\n    const obj = this._find(url ? url : this.router.url);\n    if ( obj ) {\n      obj.isComplete = false;\n      // Set future pages to not complete\n      this.pageList.map( x => {\n        if ( obj.index  {\n        x.isComplete = false;\n    });\n  }\n\n  // Find item in list\n  private _find( path: string ) {\n    return this.pageList.find( x => path.includes(x.path) || path.endsWith(x.path));\n  }\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/PageListInterface.html":{"url":"interfaces/PageListInterface.html","title":"interface - PageListInterface","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  PageListInterface\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/common/lib/services/check-complete-base.service.ts\n        \n\n            \n                Description\n            \n            \n                Interface for used when checking completeness of item\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        isComplete\n                                \n                                \n                                        route\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n            \n    Indexable\n        \n            \n                \n                    \n                        [key: string]:        any\n\n                    \n                \n                        \n                            \n                                Defined in projects/common/lib/services/check-complete-base.service.ts:16\n                            \n                        \n            \n        \n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        isComplete\n                                    \n                                \n                                \n                                    \n                                        isComplete:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        route\n                                    \n                                \n                                \n                                    \n                                        route:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Router } from '@angular/router';\nimport { AbstractPgCheckService } from './abstract-pg-check.service';\nimport { Injectable } from '@angular/core';\n\n/* TODO: Revise - does not work quite correct when there is no landing page.\n * @depreciated\n */\n\n\n\n/**\n * Interface for used when checking completeness of item\n */\nexport interface PageListInterface {\n  route: string;\n  isComplete: boolean;\n  [key: string]: any;\n}\n\n/**\n * Extend this class when creating a service to create your custom Route Guard\n * logic.  This class should work as-is for simple use-cases.  For Route Guard\n * setup @see RouteGuardService.\n *\n * @see RouteGuardService\n */\n@Injectable({\n  providedIn: 'root'\n})\nexport class CheckCompleteBaseService implements AbstractPgCheckService {\n\n  public pageCheckList: PageListInterface [] = [];\n\n  private _startUrl: string = '';\n  private _bypassGuards: boolean = false;\n\n  constructor( protected router: Router ) {}\n\n  set startUrl( url: string ) {\n    this._startUrl = url;\n  }\n\n  set bypassGuards( bypass: boolean) {\n    this._bypassGuards = bypass;\n  }\n\n  public canBypassGuards(): boolean {\n    return this._bypassGuards;\n  }\n\n  public getStartUrl(): string {\n    return this._startUrl;\n  }\n\n  /** Any prerequisites that need list of pages */\n  public isPrerequisiteComplete(): boolean {\n    return !this.isPageListEmpty();\n  }\n\n  /**\n   *  Sets page to not be completed, so applicants cannot complete application out of sequence\n   */\n  public setPageIncomplete(): void {\n    const idx = this.getUrlIndex( this.router.url );\n    if ( !this.isPageListEmpty() ) { // Check guards could be turned off in dev environment\n      this.pageCheckList = this.pageCheckList.map((item, index) => {\n        if (index >= idx) {\n          item.isComplete = false;\n        }\n        return item;\n      });\n    }\n  }\n\n  /**\n   * Sets the page to completed, allowing applicant to proceed to next page.\n   */\n  public setPageComplete(): void {\n    const idx = this.getUrlIndex( this.router.url );\n    if ( !this.isPageListEmpty() ) { // Check guards could be turned in dev environment\n      this.pageCheckList[idx].isComplete = true;\n    }\n  }\n\n  /**\n   * Indicates whether page has been completed or not.\n   */\n  public isPageComplete( url: string ): boolean {\n\n    const idx = this.getUrlIndex( url );\n\n    // returns previous items isComplete value\n    return (idx - 1 >= 0) ? this.pageCheckList[idx - 1].isComplete : true;\n  }\n\n  /**\n   * Check for incomplete pages\n   */\n  public isComplete(): boolean {\n    const incompletePages = this.pageCheckList.filter( x => x.isComplete !== true );\n    return (incompletePages.length !== 0 ? false : true );\n  }\n\n  /**\n   * Index of URL in the items list, -1 if not exist\n   */\n  protected getUrlIndex( url: string ): number {\n    return this.pageCheckList.findIndex( x => url.includes( x.route ) );\n  }\n\n  protected isPageListEmpty() {\n    return ( this.pageCheckList.length === 0 );\n  }\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/PageSectionComponent.html":{"url":"components/PageSectionComponent.html","title":"component - PageSectionComponent","body":"\n                   \n\n\n\n\n\n  Components\n  PageSectionComponent\n\n\n\n        \n            Info\n        \n        \n            Design Guidelines\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    projects/common/lib/components/page-section/page-section.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n            \n                encapsulation\n                ViewEncapsulation.None\n            \n\n\n\n\n\n\n\n\n\n            \n                selector\n                common-page-section\n            \n\n            \n                styleUrls\n                ./page-section.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./page-section.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                layout\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in projects/common/lib/components/page-section/page-section.component.ts:17\n                            \n                        \n\n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        layout\n                    \n                \n                \n                    \n                        Type :     \"double\" | \"tips\" | \"noTips\"\n\n                    \n                \n                \n                    \n                        Default value : 'tips'\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/page-section/page-section.component.ts:17\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/components/page-section/page-section.component.ts:21\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n\n\n    \n        Design Guidelines\nLorem ipsum dolor sit amet consectetur adipisicing elit. Sapiente, magnam ipsam. Sit quasi natus architecto rerum unde non provident! Quia nisi facere amet iste mollitia voluptatem non molestias esse optio?\nAperiam fugiat consectetur temporibus, iste repellat, quisquam sapiente nisi distinctio optio, autem nemo tenetur error eum voluptatibus ab accusamus quis voluptatum blanditiis. Quam et ut reprehenderit vitae nobis, at ipsum!\nExercitationem pariatur animi repudiandae corporis obcaecati ratione ducimus beatae quam, nostrum magnam unde numquam quidem cupiditate odit id. Beatae alias molestiae, optio incidunt harum quia voluptates deserunt sequi. Nesciunt, optio.\n\n    \n\n    \n        import { Component, OnInit, Input, ViewEncapsulation } from '@angular/core';\n\n// IMPROVEMENT: Add a 'flex' @Input(), that adds display flex.  Importantly, it\n// must set flex on the wrapper/row divs in the html.  There are some cases\n// (like SiteReg) where having flex layout is beneficial.  My first suggestion\n// was to simply style the , but the problem is that we\n// need flex on the child elements of page-section (that still wrap ng-content).\n\n@Component({\n  selector: 'common-page-section',\n  templateUrl: './page-section.component.html',\n  styleUrls: ['./page-section.component.scss'],\n  encapsulation: ViewEncapsulation.None\n})\nexport class PageSectionComponent implements OnInit {\n\n  @Input() layout: 'double' | 'tips' | 'noTips' = 'tips';\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n\n    \n\n    \n        \n\n  \n    \n      \n    \n    \n      \n    \n  \n\n  \n    \n      \n    \n    \n      \n    \n  \n\n  \n      \n      \n    \n  \n\n\n\n\n\n  \n\n\n\n  \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                                                                        '\n    var COMPONENTS = [{'name': 'AccordionCommonComponent', 'selector': 'common-accordion'},{'name': 'AddressComponent', 'selector': 'common-address'},{'name': 'ButtonComponent', 'selector': 'common-button'},{'name': 'ButtonGroupComponent', 'selector': 'common-button-group'},{'name': 'CaptchaComponent', 'selector': 'common-captcha'},{'name': 'CheckboxComponent', 'selector': 'common-checkbox'},{'name': 'CityComponent', 'selector': 'common-city'},{'name': 'ConfirmTemplateComponent', 'selector': 'common-confirm-template'},{'name': 'ConsentModalComponent', 'selector': 'common-consent-modal'},{'name': 'CoreBreadcrumbComponent', 'selector': 'common-core-breadcrumb'},{'name': 'CountryComponent', 'selector': 'common-country'},{'name': 'DateComponent', 'selector': 'common-date'},{'name': 'DatepickerComponent', 'selector': 'common-datepicker'},{'name': 'DropdownComponent', 'selector': 'common-dropdown'},{'name': 'EmailComponent', 'selector': 'common-email'},{'name': 'ErrorContainerComponent', 'selector': 'common-error-container'},{'name': 'FileUploaderComponent', 'selector': 'common-file-uploader'},{'name': 'FormActionBarComponent', 'selector': 'common-form-action-bar'},{'name': 'FormSubmitBarComponent', 'selector': 'common-form-submit-bar'},{'name': 'FullNameComponent', 'selector': 'common-full-name'},{'name': 'GeocoderInputComponent', 'selector': 'common-geocoder-input'},{'name': 'HeaderComponent', 'selector': 'common-header'},{'name': 'NameComponent', 'selector': 'common-name'},{'name': 'PageFrameworkComponent', 'selector': 'common-page-framework'},{'name': 'PageSectionComponent', 'selector': 'common-page-section'},{'name': 'PasswordComponent', 'selector': 'common-password'},{'name': 'PhnComponent', 'selector': 'common-phn'},{'name': 'PhoneNumberComponent', 'selector': 'common-phone-number'},{'name': 'PostalCodeComponent', 'selector': 'common-postal-code'},{'name': 'ProvinceComponent', 'selector': 'common-province'},{'name': 'RadioComponent', 'selector': 'common-radio'},{'name': 'SampleModalComponent', 'selector': 'common-sample-modal'},{'name': 'SinComponent', 'selector': 'common-sin'},{'name': 'StreetComponent', 'selector': 'common-street'},{'name': 'ThumbnailComponent', 'selector': 'common-thumbnail'},{'name': 'ToggleComponent', 'selector': 'common-toggle'},{'name': 'WizardProgressBarComponent', 'selector': 'common-wizard-progress-bar'},{'name': 'XiconButtonComponent', 'selector': 'common-xicon-button'}];\n    var DIRECTIVES = [{'name': 'DateFieldFormatDirective', 'selector': '[commonDateFieldFormat]'},{'name': 'DuplicateCheckDirective', 'selector': '[commonDuplicateCheck]'},{'name': 'ValidateBcPostalDirective', 'selector': '[commonValidateBcPostal]'},{'name': 'ValidateCityDirective', 'selector': '[commonValidateCity]'},{'name': 'ValidateNameDirective', 'selector': '[commonValidateName]'},{'name': 'ValidatePostalcodeDirective', 'selector': '[commonValidatePostalcode]'},{'name': 'ValidateRegionDirective', 'selector': '[commonValidateRegion]'},{'name': 'ValidateStreetDirective', 'selector': '[commonValidateStreet]'}];\n    var ACTUAL_COMPONENT = {'name': 'PageSectionComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/PageStateService.html":{"url":"injectables/PageStateService.html","title":"injectable - PageStateService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  PageStateService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/common/lib/services/page-state.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                pageList\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                _find\n                            \n                            \n                                canNavigateToPage\n                            \n                            \n                                clearCompletePages\n                            \n                            \n                                findIndex\n                            \n                            \n                                getPageAtIndex\n                            \n                            \n                                setPageComplete\n                            \n                            \n                                setPageIncomplete\n                            \n                            \n                                setPages\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(router: Router)\n                    \n                \n                        \n                            \n                                Defined in projects/common/lib/services/page-state.service.ts:16\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            _find\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    _find(path: string)\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/services/page-state.service.ts:110\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    path\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            canNavigateToPage\n                        \n                        \n                    \n                \n            \n            \n                \ncanNavigateToPage(path: string)\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/services/page-state.service.ts:92\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                \n                            \n                            \n                                \n                                    path\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        null\n                                    \n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            clearCompletePages\n                        \n                        \n                    \n                \n            \n            \n                \nclearCompletePages()\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/services/page-state.service.ts:103\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            findIndex\n                        \n                        \n                    \n                \n            \n            \n                \nfindIndex(url: string)\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/services/page-state.service.ts:52\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                \n                            \n                            \n                                \n                                    url\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        null\n                                    \n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         number\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getPageAtIndex\n                        \n                        \n                    \n                \n            \n            \n                \ngetPageAtIndex(idx: number)\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/services/page-state.service.ts:63\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    idx\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         PageList | null\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            setPageComplete\n                        \n                        \n                    \n                \n            \n            \n                \nsetPageComplete(path: string)\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/services/page-state.service.ts:84\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                \n                            \n                            \n                                \n                                    path\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        null\n                                    \n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            setPageIncomplete\n                        \n                        \n                    \n                \n            \n            \n                \nsetPageIncomplete(url: string)\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/services/page-state.service.ts:71\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                \n                            \n                            \n                                \n                                    url\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        null\n                                    \n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            setPages\n                        \n                        \n                    \n                \n            \n            \n                \nsetPages(arr: Route[], routeListConst: any, fn?: (x?: any) => void)\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/services/page-state.service.ts:20\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    arr\n                                    \n                                            Route[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    routeListConst\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    fn\n                                    \n                                                function\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         PageList[]\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            pageList\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         PageList[]\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in projects/common/lib/services/page-state.service.ts:16\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { Route, Router } from '@angular/router';\n\nexport interface PageList {\n  index: number;\n  path: string;\n  isComplete: boolean;\n  [key: string]: any;\n}\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class PageStateService {\n\n  pageList: PageList[] = [];\n\n  constructor( protected router: Router ) { }\n\n  setPages( arr: Route[],\n            routeListConst: any,\n            fn?: (x: any) => {[key: string]: any} ): PageList[] {\n\n    if ( this.pageList && !this.pageList.length ) {\n\n      const routeConst = Object.keys( routeListConst ).map( x => routeListConst[x] );\n\n      let cnt = 0;\n      this.pageList = arr.filter((itm: any) => !itm.redirectTo)\n        .map((itm: any) => {\n          const val = routeConst.find( x => x.path === itm.path );\n\n          cnt = cnt + 1; // count for indices\n\n          // Page List to be returned\n          let obj = {\n            index: cnt,\n            path: val.path,\n            isComplete: false,\n          };\n\n          if ( fn ) {\n            obj = Object.assign( obj, fn( val ) );\n          }\n          return obj;\n        });\n    }\n    return this.pageList;\n  }\n\n  // Returns index parameter value\n  findIndex( url: string = null ): number {\n    let idx = 0;\n    if ( this.pageList ) {\n      const obj = this._find(url ? url : this.router.url);\n      if ( obj ) {\n        idx = obj.index;\n      }\n    }\n    return idx;\n  }\n\n  getPageAtIndex( idx: number ): PageList  | null {\n    const index = idx - 1;\n    if ( this.pageList && index >= 0 && this.pageList.length > index ) {\n      return this.pageList[index];\n    }\n    return null;\n  }\n\n  setPageIncomplete( url: string = null ) {\n    const obj = this._find(url ? url : this.router.url);\n    if ( obj ) {\n      obj.isComplete = false;\n      // Set future pages to not complete\n      this.pageList.map( x => {\n        if ( obj.index  {\n        x.isComplete = false;\n    });\n  }\n\n  // Find item in list\n  private _find( path: string ) {\n    return this.pageList.find( x => path.includes(x.path) || path.endsWith(x.path));\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/PasswordComponent.html":{"url":"components/PasswordComponent.html","title":"component - PasswordComponent","body":"\n                   \n\n\n\n\n\n  Components\n  PasswordComponent\n\n\n\n        \n            Info\n        \n        \n            Design Guidelines\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    projects/common/lib/components/password/password.component.ts\n\n\n    \n        Description\n    \n    \n        PasswordComponent is a text input for a user's password. It includes:\n\nA password strength bar\nMinimum length validations\n\nNote - if your application has requirements to check things like username is not\npresent in password, we recommend doing this in the (passwordChange) callback.\n\n    \n\n    \n        Extends\n    \n    \n                Base\n    \n\n    \n        Implements\n    \n    \n                    OnInit\n                    OnChanges\n    \n\n    \n        Example\n    \n    \n                \n                    \n                \n    \n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                common-password\n            \n\n            \n                styleUrls\n                ./password.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./password.component.html\n            \n\n            \n                viewProviders\n                \n                    \n                                { provide: ControlContainer, useExisting: forwardRef(() => NgForm) }\n                    \n                \n            \n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                criteriaMsg\n                            \n                            \n                                    Public\n                                errMsg\n                            \n                            \n                                    Public\n                                hideValue\n                            \n                            \n                                    Private\n                                minLenMsgSeg1\n                            \n                            \n                                    Private\n                                minLenMsgSeg2\n                            \n                            \n                                    Public\n                                pswdStrength\n                            \n                            \n                                    Private\n                                requiredMsgSeg\n                            \n                            \n                                    Public\n                                strengthPercentage\n                            \n                            \n                                    Public\n                                objectId\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                getPasswordStrength\n                            \n                            \n                                ngOnChanges\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                onInputBlur\n                            \n                            \n                                setPassword\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                errorMessages\n                            \n                            \n                                isDisabled\n                            \n                            \n                                isRequired\n                            \n                            \n                                label\n                            \n                            \n                                maxLen\n                            \n                            \n                                minLen\n                            \n                            \n                                objectID\n                            \n                            \n                                password\n                            \n                            \n                                pwdCriteria\n                            \n                            \n                                showPasswordStrength\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                blurEvent\n                            \n                            \n                                passwordChange\n                            \n                        \n                    \n                \n\n\n                \n                    \n                        HostListeners\n                    \n                \n                \n                    \n                        \n                            \n                                document:paste\n                            \n                        \n                    \n                \n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in projects/common/lib/components/password/password.component.ts:85\n                            \n                        \n\n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        errorMessages\n                    \n                \n                \n                    \n                        Type :         PasswordErrorMsg\n\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/password/password.component.ts:65\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        isDisabled\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/password/password.component.ts:60\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        isRequired\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : true\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/password/password.component.ts:59\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        label\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'Password'\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/password/password.component.ts:58\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        maxLen\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : '32'\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/password/password.component.ts:64\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        minLen\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : '8'\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/password/password.component.ts:63\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        objectID\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'password_' + this.objectId\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/password/password.component.ts:67\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        password\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/password/password.component.ts:61\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        pwdCriteria\n                    \n                \n                \n                    \n                        Type :     string | RegExp\n\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/password/password.component.ts:62\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        showPasswordStrength\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/password/password.component.ts:66\n                            \n                        \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        blurEvent\n                    \n                \n                \n                    \n                        Type :         EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/password/password.component.ts:72\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        passwordChange\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/password/password.component.ts:71\n                            \n                        \n            \n        \n\n\n    \n    HostListeners    \n        \n            \n                \n                    \n                    \n                        \n                            document:paste\n                        \n                        \n                    \n                \n            \n            \n                \n                    Arguments : '$event' \n                \n            \n            \n                \ndocument:paste(event)\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/components/password/password.component.ts:142\n                \n            \n\n\n        \n    \n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            getPasswordStrength\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getPasswordStrength(password: string)\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/components/password/password.component.ts:157\n                \n            \n\n\n            \n                \n                    Get the strength of the password\n0 = too guessable: risky password. (guesses = 10^10)  https://github.com/dropbox/zxcvbn\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    password\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         number\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnChanges\n                        \n                        \n                    \n                \n            \n            \n                \nngOnChanges(changes)\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/components/password/password.component.ts:118\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    changes\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/components/password/password.component.ts:92\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            onInputBlur\n                        \n                        \n                    \n                \n            \n            \n                \nonInputBlur($event)\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/components/password/password.component.ts:135\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    $event\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            setPassword\n                        \n                        \n                    \n                \n            \n            \n                \nsetPassword(password: string)\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/components/password/password.component.ts:131\n                \n            \n\n\n            \n                \n                    Passes the value entered back to the calling component\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    password\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        value the was entered by\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            criteriaMsg\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : ' contains invalid characters.'\n                        \n                    \n                        \n                            \n                                    Defined in projects/common/lib/components/password/password.component.ts:85\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            errMsg\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         PasswordErrorMsg\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/common/lib/components/password/password.component.ts:79\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            hideValue\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : true\n                        \n                    \n                        \n                            \n                                    Defined in projects/common/lib/components/password/password.component.ts:75\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            minLenMsgSeg1\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : ' must be at least '\n                        \n                    \n                        \n                            \n                                    Defined in projects/common/lib/components/password/password.component.ts:83\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            minLenMsgSeg2\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : ' characters in length.'\n                        \n                    \n                        \n                            \n                                    Defined in projects/common/lib/components/password/password.component.ts:84\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            pswdStrength\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/common/lib/components/password/password.component.ts:76\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            requiredMsgSeg\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : ' is required.'\n                        \n                    \n                        \n                            \n                                    Defined in projects/common/lib/components/password/password.component.ts:82\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            strengthPercentage\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Default value : 0\n                        \n                    \n                        \n                            \n                                    Defined in projects/common/lib/components/password/password.component.ts:77\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            objectId\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : UUID.UUID()\n                        \n                    \n                            \n                                \n                                    Inherited from         Base\n\n                                \n                            \n                        \n                            \n                                    Defined in         Base:11\n\n                            \n                        \n\n                \n                    \n                        An identifier for parents to keep track of components \n\n                    \n                \n\n            \n        \n\n\n\n\n    \n        Design Guidelines\nLorem ipsum dolor sit amet consectetur adipisicing elit. Sapiente, magnam ipsam. Sit quasi natus architecto rerum unde non provident! Quia nisi facere amet iste mollitia voluptatem non molestias esse optio?\nAperiam fugiat consectetur temporibus, iste repellat, quisquam sapiente nisi distinctio optio, autem nemo tenetur error eum voluptatibus ab accusamus quis voluptatum blanditiis. Quam et ut reprehenderit vitae nobis, at ipsum!\nExercitationem pariatur animi repudiandae corporis obcaecati ratione ducimus beatae quam, nostrum magnam unde numquam quidem cupiditate odit id. Beatae alias molestiae, optio incidunt harum quia voluptates deserunt sequi. Nesciunt, optio.\n\n    \n\n    \n        import { Component, OnInit, Input, Output, EventEmitter, HostListener, OnChanges, Directive, forwardRef } from '@angular/core';\nimport { Base } from '../../models/base';\nimport { ControlContainer, NgForm } from '@angular/forms';\nimport * as zxcvbn_ from 'zxcvbn';\n// Awkward necessary workaround due to bug in build tools\n// https://github.com/jvandemo/generator-angular2-library/issues/221#issuecomment-355945207\nconst zxcvbn = zxcvbn_;\n\n\n/**\n * TODO:  Convert to custom form control - remove ngForm\n */\n/**\n * Interface for passing in error messages\n * Example:\n *  errorMessages = {\n *       required: this.componentLabel + ' is required.',\n *       minLength: this.componentLabel + ' must be ' + this.minLen + ' characters.',\n *       criteria: this.componentLabel + ' does not meet password criteria.'\n *     }\n */\nexport interface PasswordErrorMsg {\n  required?: string;\n  minLength?: string;\n  criteria?: string;\n}\n/**\n * PasswordComponent is a text input for a user's password. It includes:\n *\n * - A password strength bar\n * - Minimum length validations\n *\n * Note - if your application has requirements to check things like username is not\n * present in password, we recommend doing this in the (passwordChange) callback.\n *\n * @example\n *       \n *\n * @export\n */\n@Component({\n  selector: 'common-password',\n  templateUrl: './password.component.html',\n  styleUrls: ['./password.component.scss'],\n  /* Re-use the same ngForm that it's parent is using. The component will show\n   * up in its parents `this.form`, and will auto-update `this.form.valid`\n   */\n  viewProviders: [ { provide: ControlContainer, useExisting: forwardRef(() => NgForm ) } ]\n})\nexport class PasswordComponent extends Base implements OnInit, OnChanges {\n\n  // Inputs for the component\n  @Input() label: string = 'Password';\n  @Input() isRequired: boolean = true;\n  @Input() isDisabled: boolean = false;\n  @Input() password: string;\n  @Input() pwdCriteria: string | RegExp;\n  @Input() minLen: string  = '8';\n  @Input() maxLen: string  = '32';\n  @Input() errorMessages: PasswordErrorMsg;\n  @Input() showPasswordStrength: boolean = false;\n  @Input() objectID: string = 'password_' + this.objectId;\n\n\n  // Output from the component\n  @Output() passwordChange: EventEmitter = new EventEmitter();\n  @Output() blurEvent = new EventEmitter();\n\n  // Flag for the fa-eye to show or hide password\n  public hideValue = true;\n  public pswdStrength: number;\n  public strengthPercentage = 0;\n\n  public errMsg: PasswordErrorMsg;\n\n  // default messages\n  private requiredMsgSeg: string = ' is required.';\n  private minLenMsgSeg1: string = ' must be at least ';\n  private minLenMsgSeg2: string = ' characters in length.';\n  private criteriaMsg: string = ' contains invalid characters.';\n\n\n  constructor() {\n    super();\n  }\n\n  ngOnInit() {\n\n    // Set default messages\n    this.errMsg =    {\n      required: this.label + this.requiredMsgSeg,\n      minLength: this.label + this.minLenMsgSeg1 + this.minLen + this.minLenMsgSeg2,\n      criteria: this.label + this.criteriaMsg\n    };\n\n    // Replace default message if provided\n    if ( this.errorMessages ) {\n\n      if ( this.errorMessages.required ) {\n        this.errMsg.required = this.errorMessages.required;\n      }\n\n      if ( this.errorMessages.minLength ) {\n        this.errMsg.minLength = this.errorMessages.minLength;\n      }\n\n      if ( this.errorMessages.criteria ) {\n        this.errMsg.criteria = this.errorMessages.criteria;\n      }\n    }\n  }\n\n  ngOnChanges(changes) {\n    if (changes.password && this.password) {\n\n      // Check strength of password\n      this.pswdStrength = this.getPasswordStrength( this.password );\n      this.strengthPercentage = ((this.pswdStrength + 1) / 5 ) * 100;\n    }\n  }\n\n  /**\n   * Passes the value entered back to the calling component\n   * @param password value the was entered by\n   */\n  setPassword( password: string ) {\n    this.passwordChange.emit( password );\n  }\n\n  onInputBlur($event) {\n    console.log( 'onBlur: ', event );\n    this.blurEvent.emit( event );\n  }\n\n  // Prevent user from pasting data into the text box\n  @HostListener( 'document:paste', ['$event'] )\n  onPaste( event ) {\n      return false;\n  }\n\n  /**\n   * Get the strength of the password\n\n   *    0 = too guessable: risky password. (guesses = 10^10)\n   *\n   *  https://github.com/dropbox/zxcvbn\n   */\n  private getPasswordStrength( password: string ): number {\n    // Password strength feedback\n    const pswdFeedback = zxcvbn( password );\n    return pswdFeedback.score;\n  }\n}\n\n    \n\n    \n        {{label}}\n\n\n\n\n  \n    = 4? 'bg-success' : (pswdStrength >= 3? 'bg-warning' : 'bg-danger')}}\"\n        role=\"progressbar\"\n        [style.width]='strengthPercentage + \"%\"'\n        [attr.aria-valuenow]=\"strengthPercentage\"\n        aria-valuemin=\"0\"\n        aria-valuemax=\"100\">\n    \n  \n  = 4? 'text-success' : (pswdStrength >= 3? 'text-warning' : 'text-danger')}}\">\n\n\n\n  \n    {{errMsg.required}}\n  \n  \n      {{errMsg.minLength}}\n  \n  \n      {{errMsg.criteria}}\n  \n\n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '{{label}}      = 4? \\'bg-success\\' : (pswdStrength >= 3? \\'bg-warning\\' : \\'bg-danger\\')}}\"        role=\"progressbar\"        [style.width]=\\'strengthPercentage + \"%\"\\'        [attr.aria-valuenow]=\"strengthPercentage\"        aria-valuemin=\"0\"        aria-valuemax=\"100\">        = 4? \\'text-success\\' : (pswdStrength >= 3? \\'text-warning\\' : \\'text-danger\\')}}\">      {{errMsg.required}}          {{errMsg.minLength}}          {{errMsg.criteria}}  '\n    var COMPONENTS = [{'name': 'AccordionCommonComponent', 'selector': 'common-accordion'},{'name': 'AddressComponent', 'selector': 'common-address'},{'name': 'ButtonComponent', 'selector': 'common-button'},{'name': 'ButtonGroupComponent', 'selector': 'common-button-group'},{'name': 'CaptchaComponent', 'selector': 'common-captcha'},{'name': 'CheckboxComponent', 'selector': 'common-checkbox'},{'name': 'CityComponent', 'selector': 'common-city'},{'name': 'ConfirmTemplateComponent', 'selector': 'common-confirm-template'},{'name': 'ConsentModalComponent', 'selector': 'common-consent-modal'},{'name': 'CoreBreadcrumbComponent', 'selector': 'common-core-breadcrumb'},{'name': 'CountryComponent', 'selector': 'common-country'},{'name': 'DateComponent', 'selector': 'common-date'},{'name': 'DatepickerComponent', 'selector': 'common-datepicker'},{'name': 'DropdownComponent', 'selector': 'common-dropdown'},{'name': 'EmailComponent', 'selector': 'common-email'},{'name': 'ErrorContainerComponent', 'selector': 'common-error-container'},{'name': 'FileUploaderComponent', 'selector': 'common-file-uploader'},{'name': 'FormActionBarComponent', 'selector': 'common-form-action-bar'},{'name': 'FormSubmitBarComponent', 'selector': 'common-form-submit-bar'},{'name': 'FullNameComponent', 'selector': 'common-full-name'},{'name': 'GeocoderInputComponent', 'selector': 'common-geocoder-input'},{'name': 'HeaderComponent', 'selector': 'common-header'},{'name': 'NameComponent', 'selector': 'common-name'},{'name': 'PageFrameworkComponent', 'selector': 'common-page-framework'},{'name': 'PageSectionComponent', 'selector': 'common-page-section'},{'name': 'PasswordComponent', 'selector': 'common-password'},{'name': 'PhnComponent', 'selector': 'common-phn'},{'name': 'PhoneNumberComponent', 'selector': 'common-phone-number'},{'name': 'PostalCodeComponent', 'selector': 'common-postal-code'},{'name': 'ProvinceComponent', 'selector': 'common-province'},{'name': 'RadioComponent', 'selector': 'common-radio'},{'name': 'SampleModalComponent', 'selector': 'common-sample-modal'},{'name': 'SinComponent', 'selector': 'common-sin'},{'name': 'StreetComponent', 'selector': 'common-street'},{'name': 'ThumbnailComponent', 'selector': 'common-thumbnail'},{'name': 'ToggleComponent', 'selector': 'common-toggle'},{'name': 'WizardProgressBarComponent', 'selector': 'common-wizard-progress-bar'},{'name': 'XiconButtonComponent', 'selector': 'common-xicon-button'}];\n    var DIRECTIVES = [{'name': 'DateFieldFormatDirective', 'selector': '[commonDateFieldFormat]'},{'name': 'DuplicateCheckDirective', 'selector': '[commonDuplicateCheck]'},{'name': 'ValidateBcPostalDirective', 'selector': '[commonValidateBcPostal]'},{'name': 'ValidateCityDirective', 'selector': '[commonValidateCity]'},{'name': 'ValidateNameDirective', 'selector': '[commonValidateName]'},{'name': 'ValidatePostalcodeDirective', 'selector': '[commonValidatePostalcode]'},{'name': 'ValidateRegionDirective', 'selector': '[commonValidateRegion]'},{'name': 'ValidateStreetDirective', 'selector': '[commonValidateStreet]'}];\n    var ACTUAL_COMPONENT = {'name': 'PasswordComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/PasswordErrorMsg.html":{"url":"interfaces/PasswordErrorMsg.html","title":"interface - PasswordErrorMsg","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  PasswordErrorMsg\n\n\n\n        \n            Info\n        \n        \n            Design Guidelines\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/common/lib/components/password/password.component.ts\n        \n\n            \n                Description\n            \n            \n                TODO:  Convert to custom form control - remove ngForm\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        criteria\n                                \n                                \n                                            Optional\n                                        minLength\n                                \n                                \n                                            Optional\n                                        required\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        criteria\n                                    \n                                \n                                \n                                    \n                                        criteria:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        minLength\n                                    \n                                \n                                \n                                    \n                                        minLength:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        required\n                                    \n                                \n                                \n                                    \n                                        required:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n    \n        Design Guidelines\nLorem ipsum dolor sit amet consectetur adipisicing elit. Sapiente, magnam ipsam. Sit quasi natus architecto rerum unde non provident! Quia nisi facere amet iste mollitia voluptatem non molestias esse optio?\nAperiam fugiat consectetur temporibus, iste repellat, quisquam sapiente nisi distinctio optio, autem nemo tenetur error eum voluptatibus ab accusamus quis voluptatum blanditiis. Quam et ut reprehenderit vitae nobis, at ipsum!\nExercitationem pariatur animi repudiandae corporis obcaecati ratione ducimus beatae quam, nostrum magnam unde numquam quidem cupiditate odit id. Beatae alias molestiae, optio incidunt harum quia voluptates deserunt sequi. Nesciunt, optio.\n\n    \n\n    \n        import { Component, OnInit, Input, Output, EventEmitter, HostListener, OnChanges, Directive, forwardRef } from '@angular/core';\nimport { Base } from '../../models/base';\nimport { ControlContainer, NgForm } from '@angular/forms';\nimport * as zxcvbn_ from 'zxcvbn';\n// Awkward necessary workaround due to bug in build tools\n// https://github.com/jvandemo/generator-angular2-library/issues/221#issuecomment-355945207\nconst zxcvbn = zxcvbn_;\n\n\n/**\n * TODO:  Convert to custom form control - remove ngForm\n */\n/**\n * Interface for passing in error messages\n * Example:\n *  errorMessages = {\n *       required: this.componentLabel + ' is required.',\n *       minLength: this.componentLabel + ' must be ' + this.minLen + ' characters.',\n *       criteria: this.componentLabel + ' does not meet password criteria.'\n *     }\n */\nexport interface PasswordErrorMsg {\n  required?: string;\n  minLength?: string;\n  criteria?: string;\n}\n/**\n * PasswordComponent is a text input for a user's password. It includes:\n *\n * - A password strength bar\n * - Minimum length validations\n *\n * Note - if your application has requirements to check things like username is not\n * present in password, we recommend doing this in the (passwordChange) callback.\n *\n * @example\n *       \n *\n * @export\n */\n@Component({\n  selector: 'common-password',\n  templateUrl: './password.component.html',\n  styleUrls: ['./password.component.scss'],\n  /* Re-use the same ngForm that it's parent is using. The component will show\n   * up in its parents `this.form`, and will auto-update `this.form.valid`\n   */\n  viewProviders: [ { provide: ControlContainer, useExisting: forwardRef(() => NgForm ) } ]\n})\nexport class PasswordComponent extends Base implements OnInit, OnChanges {\n\n  // Inputs for the component\n  @Input() label: string = 'Password';\n  @Input() isRequired: boolean = true;\n  @Input() isDisabled: boolean = false;\n  @Input() password: string;\n  @Input() pwdCriteria: string | RegExp;\n  @Input() minLen: string  = '8';\n  @Input() maxLen: string  = '32';\n  @Input() errorMessages: PasswordErrorMsg;\n  @Input() showPasswordStrength: boolean = false;\n  @Input() objectID: string = 'password_' + this.objectId;\n\n\n  // Output from the component\n  @Output() passwordChange: EventEmitter = new EventEmitter();\n  @Output() blurEvent = new EventEmitter();\n\n  // Flag for the fa-eye to show or hide password\n  public hideValue = true;\n  public pswdStrength: number;\n  public strengthPercentage = 0;\n\n  public errMsg: PasswordErrorMsg;\n\n  // default messages\n  private requiredMsgSeg: string = ' is required.';\n  private minLenMsgSeg1: string = ' must be at least ';\n  private minLenMsgSeg2: string = ' characters in length.';\n  private criteriaMsg: string = ' contains invalid characters.';\n\n\n  constructor() {\n    super();\n  }\n\n  ngOnInit() {\n\n    // Set default messages\n    this.errMsg =    {\n      required: this.label + this.requiredMsgSeg,\n      minLength: this.label + this.minLenMsgSeg1 + this.minLen + this.minLenMsgSeg2,\n      criteria: this.label + this.criteriaMsg\n    };\n\n    // Replace default message if provided\n    if ( this.errorMessages ) {\n\n      if ( this.errorMessages.required ) {\n        this.errMsg.required = this.errorMessages.required;\n      }\n\n      if ( this.errorMessages.minLength ) {\n        this.errMsg.minLength = this.errorMessages.minLength;\n      }\n\n      if ( this.errorMessages.criteria ) {\n        this.errMsg.criteria = this.errorMessages.criteria;\n      }\n    }\n  }\n\n  ngOnChanges(changes) {\n    if (changes.password && this.password) {\n\n      // Check strength of password\n      this.pswdStrength = this.getPasswordStrength( this.password );\n      this.strengthPercentage = ((this.pswdStrength + 1) / 5 ) * 100;\n    }\n  }\n\n  /**\n   * Passes the value entered back to the calling component\n   * @param password value the was entered by\n   */\n  setPassword( password: string ) {\n    this.passwordChange.emit( password );\n  }\n\n  onInputBlur($event) {\n    console.log( 'onBlur: ', event );\n    this.blurEvent.emit( event );\n  }\n\n  // Prevent user from pasting data into the text box\n  @HostListener( 'document:paste', ['$event'] )\n  onPaste( event ) {\n      return false;\n  }\n\n  /**\n   * Get the strength of the password\n\n   *    0 = too guessable: risky password. (guesses = 10^10)\n   *\n   *  https://github.com/dropbox/zxcvbn\n   */\n  private getPasswordStrength( password: string ): number {\n    // Password strength feedback\n    const pswdFeedback = zxcvbn( password );\n    return pswdFeedback.score;\n  }\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Person.html":{"url":"classes/Person.html","title":"class - Person","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Person\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/common/lib/models/person.model.ts\n        \n\n            \n                Description\n            \n            \n                Person, each project can extend this person class\nNPM package dependencies:\n  a) moment\n\n            \n\n            \n                Extends\n            \n            \n                        Base\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                apiDobFormat\n                            \n                            \n                                    Public\n                                dateOfBirth\n                            \n                            \n                                    Public\n                                dobFormat\n                            \n                            \n                                    Public\n                                firstName\n                            \n                            \n                                    Public\n                                lastName\n                            \n                            \n                                    Public\n                                middleName\n                            \n                            \n                                    Public\n                                objectId\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                copy\n                            \n                            \n                                getAge\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    dateOfBirthShort\n                                \n                                \n                                    formatDateOfBirth\n                                \n                                \n                                    name\n                                \n                                \n                                    fullname\n                                \n                            \n                        \n                    \n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            apiDobFormat\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'yyyyMMdd'\n                        \n                    \n                        \n                            \n                                    Defined in projects/common/lib/models/person.model.ts:19\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            dateOfBirth\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/common/lib/models/person.model.ts:22\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            dobFormat\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'yyyy/MM/dd'\n                        \n                    \n                        \n                            \n                                    Defined in projects/common/lib/models/person.model.ts:18\n                            \n                        \n\n                \n                    \n                        Format to display birthdate \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            firstName\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/common/lib/models/person.model.ts:13\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            lastName\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/common/lib/models/person.model.ts:15\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            middleName\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/common/lib/models/person.model.ts:14\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            objectId\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : UUID.UUID()\n                        \n                    \n                            \n                                \n                                    Inherited from         Base\n\n                                \n                            \n                        \n                            \n                                    Defined in         Base:11\n\n                            \n                        \n\n                \n                    \n                        An identifier for parents to keep track of components \n\n                    \n                \n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            copy\n                        \n                        \n                    \n                \n            \n            \n                \ncopy(object: Person)\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/models/person.model.ts:91\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    object\n                                    \n                                                Person\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getAge\n                        \n                        \n                    \n                \n            \n            \n                \ngetAge()\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/models/person.model.ts:86\n                \n            \n\n\n            \n                \n                    Calculates the age from date of birth \n\n\n                    \n                        Returns :         Number\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        dateOfBirthShort\n                    \n                \n\n                \n                    \n                        getdateOfBirthShort()\n                    \n                \n                            \n                                \n                                    Defined in projects/common/lib/models/person.model.ts:25\n                                \n                            \n                    \n                        \n                                Returns DoB in YYYYMMDD format, used by API. \n\n\n                                \n                                    Returns :         string\n\n                                \n                        \n                    \n\n            \n        \n        \n            \n                \n                    \n                        \n                        formatDateOfBirth\n                    \n                \n\n                \n                    \n                        getformatDateOfBirth()\n                    \n                \n                            \n                                \n                                    Defined in projects/common/lib/models/person.model.ts:30\n                                \n                            \n                    \n                        \n                                Returns DoB in dobFormat (default: YYYY/MM/DD), for display purposes \n\n\n                                \n                                    Returns :         string\n\n                                \n                        \n                    \n\n            \n        \n        \n            \n                \n                    \n                        \n                        name\n                    \n                \n\n                \n                    \n                        getname()\n                    \n                \n                            \n                                \n                                    Defined in projects/common/lib/models/person.model.ts:35\n                                \n                            \n                    \n                        \n                                Concatenates the first and last name together \n\n\n                                \n                                    Returns :         string\n\n                                \n                        \n                    \n\n                \n                    \n                        setname(fullName: string)\n                    \n                \n                            \n                                \n                                    Defined in projects/common/lib/models/person.model.ts:53\n                                \n                            \n                    \n                        \n                                Sets the full name for the person (first, middle and last names)\nNOTE: Just for development with dummy data and unit tests\n\n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                        Type\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                            fullName\n                                                    \n                                                            \n                                                                            string\n                                                            \n                                                    \n                                                        \n                                                                No\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :         void\n\n                                \n                        \n                    \n            \n        \n        \n            \n                \n                    \n                        \n                        fullname\n                    \n                \n\n                \n                    \n                        getfullname()\n                    \n                \n                            \n                                \n                                    Defined in projects/common/lib/models/person.model.ts:67\n                                \n                            \n                    \n                        \n                                Returns the person's full name - first middle last name concatenated together \n\n\n                        \n                    \n\n            \n        \n\n    \n\n\n    \n        import { Base } from './base';\nimport { format, startOfToday, differenceInYears } from 'date-fns';\n\n/**\n * Person, each project can extend this person class\n * NPM package dependencies:\n *  a) moment\n */\nexport class Person extends Base {\n\n  // Parts of a person's name\n  public firstName: string;\n  public middleName: string;\n  public lastName: string;\n\n  /** Format to display birthdate */\n  public dobFormat = 'yyyy/MM/dd';\n  public apiDobFormat = 'yyyyMMdd';\n\n  // Initialize dob to nulls - To be removed\n  public dateOfBirth: Date;\n\n  /** Returns DoB in YYYYMMDD format, used by API. */\n  get dateOfBirthShort(): string {\n    return this.dateOfBirth ? format( this.dateOfBirth, this.apiDobFormat ) : null;\n  }\n\n  /** Returns DoB in dobFormat (default: YYYY/MM/DD), for display purposes */\n  get formatDateOfBirth(): string {\n    return this.dateOfBirth ? format( this.dateOfBirth, this.dobFormat ) : null;\n  }\n\n  /** Concatenates the first and last name together */\n  get name(): string {\n    let _name = null;\n\n    if ( this.firstName ) {\n      _name = this.firstName;\n    }\n\n    if ( this.lastName ) {\n      _name = _name ? _name.concat( ' ' + this.lastName ) : this.lastName;\n    }\n\n    return _name;\n  }\n\n  /**\n   * Sets the full name for the person (first, middle and last names)\n   * NOTE: Just for development with dummy data and unit tests\n   */\n  set name( fullName: string ) {\n\n    const names = fullName.split( ' ') ;\n    this.firstName = names[0];\n\n    if ( names.length === 2 ) {\n      this.lastName = names[1];\n    } else if ( names.length === 3 ) {\n      this.middleName = names[1];\n      this.lastName = names[2];\n    }\n  }\n\n  /** Returns the person's full name - first middle last name concatenated together */\n  get fullname() {\n    let _name = null;\n\n    if ( this.firstName ) {\n      _name = this.firstName;\n    }\n\n    if ( this.middleName ) {\n      _name = _name ? _name.concat( ' ' + this.middleName ) : this.middleName;\n    }\n\n    if ( this.lastName ) {\n      _name = _name ? _name.concat( ' ' + this.lastName ) : this.lastName;\n    }\n\n    return _name;\n  }\n\n  /** Calculates the age from date of birth */\n  getAge(): Number {\n    return differenceInYears( this.dateOfBirth, startOfToday() );\n  }\n\n  /* Copy function */\n  copy( object: Person ) {\n    this.firstName = object.firstName;\n    this.middleName = object.middleName;\n    this.lastName = object.lastName;\n    this.dateOfBirth = object.dateOfBirth;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/PhnComponent.html":{"url":"components/PhnComponent.html","title":"component - PhnComponent","body":"\n                   \n\n\n\n\n\n  Components\n  PhnComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    projects/common/lib/components/phn/phn.component.ts\n\n\n\n    \n        Extends\n    \n    \n                AbstractFormControl\n    \n\n    \n        Implements\n    \n    \n                    OnInit\n                    ControlValueAccessor\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                common-phn\n            \n\n            \n                styleUrls\n                ./phn.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./phn.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                _defaultErrMsg\n                            \n                            \n                                    Public\n                                controlDir\n                            \n                            \n                                mask\n                            \n                            \n                                phn\n                            \n                            \n                                    Abstract\n                                _defaultErrMsg\n                            \n                            \n                                _onChange\n                            \n                            \n                                _onTouched\n                            \n                            \n                                    Public\n                                objectId\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                            \n                                onBlur\n                            \n                            \n                                onValueChange\n                            \n                            \n                                    Private\n                                validatePhn\n                            \n                            \n                                    Private\n                                validateSelf\n                            \n                            \n                                writeValue\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                registerOnChange\n                            \n                            \n                                registerOnTouched\n                            \n                            \n                                    Protected\n                                registerValidation\n                            \n                            \n                                setDisabledState\n                            \n                            \n                                    Protected\n                                setErrorMsg\n                            \n                            \n                                    Abstract\n                                writeValue\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                isBCPhn\n                            \n                            \n                                label\n                            \n                            \n                                labelforId\n                            \n                            \n                                placeholder\n                            \n                            \n                                value\n                            \n                            \n                                disabled\n                            \n                            \n                                errorMessage\n                            \n                            \n                                label\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                blur\n                            \n                            \n                                valueChange\n                            \n                        \n                    \n                \n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    value\n                                \n                            \n                        \n                    \n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(controlDir: NgControl)\n                    \n                \n                        \n                            \n                                Defined in projects/common/lib/components/phn/phn.component.ts:41\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        controlDir\n                                                  \n                                                        \n                                                                        NgControl\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        isBCPhn\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : true\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/phn/phn.component.ts:19\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        label\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'Personal Health Number (PHN)'\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/phn/phn.component.ts:14\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        labelforId\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'phn_' + this.objectId\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/phn/phn.component.ts:16\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        placeholder\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : '1111 111 111'\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/phn/phn.component.ts:15\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        value\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/phn/phn.component.ts:28\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        disabled\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                            \n                                \n                                    Inherited from         AbstractFormControl\n\n                                \n                            \n                        \n                            \n                                    Defined in         AbstractFormControl:15\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        errorMessage\n                    \n                \n                \n                    \n                        Type :         ErrorMessage\n\n                    \n                \n                            \n                                \n                                    Inherited from         AbstractFormControl\n\n                                \n                            \n                        \n                            \n                                    Defined in         AbstractFormControl:18\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        label\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                            \n                                \n                                    Inherited from         AbstractFormControl\n\n                                \n                            \n                        \n                            \n                                    Defined in         AbstractFormControl:13\n\n                            \n                        \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        blur\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/phn/phn.component.ts:38\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        valueChange\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/phn/phn.component.ts:37\n                            \n                        \n            \n        \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/components/phn/phn.component.ts:53\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            onBlur\n                        \n                        \n                    \n                \n            \n            \n                \nonBlur(event: any)\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/components/phn/phn.component.ts:68\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    event\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            onValueChange\n                        \n                        \n                    \n                \n            \n            \n                \nonValueChange(value: any)\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/components/phn/phn.component.ts:59\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            validatePhn\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    validatePhn()\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/components/phn/phn.component.ts:88\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     ValidationErrors | null\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            validateSelf\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    validateSelf()\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/components/phn/phn.component.ts:79\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     ValidationErrors | null\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            writeValue\n                        \n                        \n                    \n                \n            \n            \n                \nwriteValue(value: any)\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/components/phn/phn.component.ts:73\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Inherited from         AbstractFormControl\n\n                \n            \n            \n                \n                        Defined in         AbstractFormControl:26\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            registerOnChange\n                        \n                        \n                    \n                \n            \n            \n                \nregisterOnChange(fn: any)\n                \n            \n\n\n            \n                \n                    Inherited from         AbstractFormControl\n\n                \n            \n            \n                \n                        Defined in         AbstractFormControl:34\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    fn\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            registerOnTouched\n                        \n                        \n                    \n                \n            \n            \n                \nregisterOnTouched(fn: any)\n                \n            \n\n\n            \n                \n                    Inherited from         AbstractFormControl\n\n                \n            \n            \n                \n                        Defined in         AbstractFormControl:39\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    fn\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            registerValidation\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    registerValidation(ngControl: NgControl, fn: ValidationErrors)\n                \n            \n\n\n            \n                \n                    Inherited from         AbstractFormControl\n\n                \n            \n            \n                \n                        Defined in         AbstractFormControl:65\n\n                \n            \n\n\n            \n                \n                    Register self validating method\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    ngControl\n                                    \n                                                NgControl\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                    \n                                \n                                \n                                    fn\n                                    \n                                                ValidationErrors\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        function for validating self\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            setDisabledState\n                        \n                        \n                    \n                \n            \n            \n                \nsetDisabledState(isDisabled: boolean)\n                \n            \n\n\n            \n                \n                    Inherited from         AbstractFormControl\n\n                \n            \n            \n                \n                        Defined in         AbstractFormControl:44\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    isDisabled\n                                    \n                                                boolean\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            setErrorMsg\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    setErrorMsg()\n                \n            \n\n\n            \n                \n                    Inherited from         AbstractFormControl\n\n                \n            \n            \n                \n                        Defined in         AbstractFormControl:48\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Abstract\n                            writeValue\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    writeValue(value: any)\n                \n            \n\n\n            \n                \n                    Inherited from         AbstractFormControl\n\n                \n            \n            \n                \n                        Defined in         AbstractFormControl:31\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            _defaultErrMsg\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         ErrorMessage\n\n                        \n                    \n                    \n                        \n                            Default value : {\n    required: `${LabelReplacementTag} is required.`,\n    invalid: `${LabelReplacementTag} is invalid.`,\n    duplicate: `${LabelReplacementTag} was already used for another family member.`,\n  }\n                        \n                    \n                        \n                            \n                                    Defined in projects/common/lib/components/phn/phn.component.ts:21\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            controlDir\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         NgControl\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Optional()@Self()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in projects/common/lib/components/phn/phn.component.ts:43\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            mask\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/common/lib/components/phn/phn.component.ts:41\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            phn\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : ''\n                        \n                    \n                        \n                            \n                                    Defined in projects/common/lib/components/phn/phn.component.ts:40\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Abstract\n                            _defaultErrMsg\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         ErrorMessage\n\n                        \n                    \n                    \n                        \n                            Default value : {}\n                        \n                    \n                            \n                                \n                                    Inherited from         AbstractFormControl\n\n                                \n                            \n                        \n                            \n                                    Defined in         AbstractFormControl:10\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            _onChange\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : () => {...}\n                        \n                    \n                            \n                                \n                                    Inherited from         AbstractFormControl\n\n                                \n                            \n                        \n                            \n                                    Defined in         AbstractFormControl:22\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            _onTouched\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : () => {...}\n                        \n                    \n                            \n                                \n                                    Inherited from         AbstractFormControl\n\n                                \n                            \n                        \n                            \n                                    Defined in         AbstractFormControl:23\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            objectId\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : UUID.UUID()\n                        \n                    \n                            \n                                \n                                    Inherited from         Base\n\n                                \n                            \n                        \n                            \n                                    Defined in         Base:11\n\n                            \n                        \n\n                \n                    \n                        An identifier for parents to keep track of components \n\n                    \n                \n\n            \n        \n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        value\n                    \n                \n\n                \n                    \n                        getvalue()\n                    \n                \n                            \n                                \n                                    Defined in projects/common/lib/components/phn/phn.component.ts:33\n                                \n                            \n\n                \n                    \n                        setvalue(val: string)\n                    \n                \n                            \n                                \n                                    Defined in projects/common/lib/components/phn/phn.component.ts:28\n                                \n                            \n                    \n                        \n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                        Type\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                            val\n                                                    \n                                                            \n                                                                            string\n                                                            \n                                                    \n                                                        \n                                                                No\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :         void\n\n                                \n                        \n                    \n            \n        \n\n\n\n\n    \n        import { Component, EventEmitter, Input, Output, Optional, Self, OnInit} from '@angular/core';\nimport { NUMBER, SPACE } from '../../models/mask.constants';\nimport { ControlValueAccessor, NgControl, ValidationErrors } from '@angular/forms';\nimport { ErrorMessage, LabelReplacementTag } from '../../models/error-message.interface';\nimport { AbstractFormControl } from '../../models/abstract-form-control';\n\n@Component({\n  selector: 'common-phn',\n  templateUrl: './phn.component.html',\n  styleUrls: ['./phn.component.scss']\n})\nexport class PhnComponent extends AbstractFormControl implements OnInit, ControlValueAccessor {\n\n  @Input() label: string = 'Personal Health Number (PHN)';\n  @Input() placeholder: string = '1111 111 111';\n  @Input() labelforId: string = 'phn_' + this.objectId;\n\n  // Self-Validation inputs\n  @Input() isBCPhn: boolean = true;\n\n  _defaultErrMsg: ErrorMessage = {\n    required: `${LabelReplacementTag} is required.`,\n    invalid: `${LabelReplacementTag} is invalid.`,\n    duplicate: `${LabelReplacementTag} was already used for another family member.`,\n  };\n\n  @Input()\n  set value( val: string ) {\n    if ( val) {\n      this.phn = val;\n    }\n  }\n  get value() {\n    return this.phn;\n  }\n\n  @Output() valueChange: EventEmitter = new EventEmitter();\n  @Output() blur: EventEmitter = new EventEmitter();\n\n  phn: string = '';\n  mask: any;\n\n  constructor( @Optional() @Self() public controlDir: NgControl ) {\n    super();\n    if ( controlDir ) {\n      controlDir.valueAccessor = this;\n    }\n\n    this.mask =\n      [NUMBER, NUMBER, NUMBER, NUMBER, SPACE, NUMBER, NUMBER, NUMBER, SPACE, NUMBER, NUMBER, NUMBER];\n  }\n\n  ngOnInit() {\n    super.ngOnInit();\n\n    this.registerValidation( this.controlDir, this.validateSelf );\n  }\n\n  onValueChange( value: any ) {\n\n    if ( value !== this.phn ) { // IE fix when focus does not display required error\n      this.phn = value;\n      this._onChange( value );\n      this.valueChange.emit( value );\n    }\n  }\n\n  onBlur( event: any ) {\n    this._onTouched( event );\n    this.blur.emit( event );\n  }\n\n  writeValue( value: any ): void {\n    if ( value !== undefined ) {\n      this.phn = value;\n    }\n  }\n\n  private validateSelf(): ValidationErrors | null {\n\n    const validatePhnResult = this.validatePhn();\n    if ( validatePhnResult ) {\n      return validatePhnResult;\n    }\n    return null;\n   }\n\n  private validatePhn(): ValidationErrors | null {\n\n    if ( this.phn && this.phn.trim().length > 0 ) {\n\n      // Init weights and other stuff\n      const weights: number[] = [-1, 2, 4, 8, 5, 10, 9, 7, 3, -1];\n      let sumOfRemainders = 0;\n\n      // Clean up string\n      const value = this.phn.trim();\n      this.phn = value\n                  .replace( /^0+/, '' ) // remove leading zeros\n                  .replace(/_/g, '') // remove underlines\n                  .replace(/\\s/g, ''); // spaces\n\n      // Test for length\n      if (this.phn.length !== 10) {\n        return { 'invalid': true };\n      }\n      // Look for a number that starts with 9 if BC only\n      if (this.isBCPhn && this.phn[0] !== '9') {\n        return { 'invalid': true };\n      } else if (!this.isBCPhn && this.phn[0] === '9') { // Number cannot have 9\n        return { 'invalid': true };\n      }\n\n      // Walk through each character\n      for (let i = 0; i  0) {\n          // multiply the value against the weight\n          result = num * weights[i];\n\n          // divide by 11 and save the remainder\n          result = result % 11;\n\n          // add it to our sum\n          sumOfRemainders += result;\n        }\n      }\n\n      // mod by 11\n      const checkDigit = 11 - (sumOfRemainders % 11);\n\n      // if the result is 10 or 11, it is an invalid PHN\n      if (checkDigit === 10 || checkDigit === 11) {\n        return { 'invalid': true };\n      }\n\n      // Compare against 10th digitfinalDigit\n      const finalDigit = Number(this.phn.substring(9, 10));\n      if (checkDigit !== finalDigit) {\n        return { 'invalid': true };\n      }\n    }\n    return null;\n  }\n\n\n}\n\n    \n\n    \n        \n{{label}}\n\n\n\n  \n  \n    \n      {{_defaultErrMsg.required}}\n    \n    \n      {{_defaultErrMsg.invalid}}\n    \n    \n      {{_defaultErrMsg.duplicate}}\n    \n  \n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '{{label}}              {{_defaultErrMsg.required}}              {{_defaultErrMsg.invalid}}              {{_defaultErrMsg.duplicate}}      '\n    var COMPONENTS = [{'name': 'AccordionCommonComponent', 'selector': 'common-accordion'},{'name': 'AddressComponent', 'selector': 'common-address'},{'name': 'ButtonComponent', 'selector': 'common-button'},{'name': 'ButtonGroupComponent', 'selector': 'common-button-group'},{'name': 'CaptchaComponent', 'selector': 'common-captcha'},{'name': 'CheckboxComponent', 'selector': 'common-checkbox'},{'name': 'CityComponent', 'selector': 'common-city'},{'name': 'ConfirmTemplateComponent', 'selector': 'common-confirm-template'},{'name': 'ConsentModalComponent', 'selector': 'common-consent-modal'},{'name': 'CoreBreadcrumbComponent', 'selector': 'common-core-breadcrumb'},{'name': 'CountryComponent', 'selector': 'common-country'},{'name': 'DateComponent', 'selector': 'common-date'},{'name': 'DatepickerComponent', 'selector': 'common-datepicker'},{'name': 'DropdownComponent', 'selector': 'common-dropdown'},{'name': 'EmailComponent', 'selector': 'common-email'},{'name': 'ErrorContainerComponent', 'selector': 'common-error-container'},{'name': 'FileUploaderComponent', 'selector': 'common-file-uploader'},{'name': 'FormActionBarComponent', 'selector': 'common-form-action-bar'},{'name': 'FormSubmitBarComponent', 'selector': 'common-form-submit-bar'},{'name': 'FullNameComponent', 'selector': 'common-full-name'},{'name': 'GeocoderInputComponent', 'selector': 'common-geocoder-input'},{'name': 'HeaderComponent', 'selector': 'common-header'},{'name': 'NameComponent', 'selector': 'common-name'},{'name': 'PageFrameworkComponent', 'selector': 'common-page-framework'},{'name': 'PageSectionComponent', 'selector': 'common-page-section'},{'name': 'PasswordComponent', 'selector': 'common-password'},{'name': 'PhnComponent', 'selector': 'common-phn'},{'name': 'PhoneNumberComponent', 'selector': 'common-phone-number'},{'name': 'PostalCodeComponent', 'selector': 'common-postal-code'},{'name': 'ProvinceComponent', 'selector': 'common-province'},{'name': 'RadioComponent', 'selector': 'common-radio'},{'name': 'SampleModalComponent', 'selector': 'common-sample-modal'},{'name': 'SinComponent', 'selector': 'common-sin'},{'name': 'StreetComponent', 'selector': 'common-street'},{'name': 'ThumbnailComponent', 'selector': 'common-thumbnail'},{'name': 'ToggleComponent', 'selector': 'common-toggle'},{'name': 'WizardProgressBarComponent', 'selector': 'common-wizard-progress-bar'},{'name': 'XiconButtonComponent', 'selector': 'common-xicon-button'}];\n    var DIRECTIVES = [{'name': 'DateFieldFormatDirective', 'selector': '[commonDateFieldFormat]'},{'name': 'DuplicateCheckDirective', 'selector': '[commonDuplicateCheck]'},{'name': 'ValidateBcPostalDirective', 'selector': '[commonValidateBcPostal]'},{'name': 'ValidateCityDirective', 'selector': '[commonValidateCity]'},{'name': 'ValidateNameDirective', 'selector': '[commonValidateName]'},{'name': 'ValidatePostalcodeDirective', 'selector': '[commonValidatePostalcode]'},{'name': 'ValidateRegionDirective', 'selector': '[commonValidateRegion]'},{'name': 'ValidateStreetDirective', 'selector': '[commonValidateStreet]'}];\n    var ACTUAL_COMPONENT = {'name': 'PhnComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/PhoneNumberComponent.html":{"url":"components/PhoneNumberComponent.html","title":"component - PhoneNumberComponent","body":"\n                   \n\n\n\n\n\n  Components\n  PhoneNumberComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    projects/common/lib/components/phone-number/phone-number.component.ts\n\n\n    \n        Description\n    \n    \n        PhoneNumberComponent is a used to show the Phone number.\n\n    \n\n    \n        Extends\n    \n    \n                AbstractFormControl\n    \n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n    \n        Example\n    \n    \n                \n                    \n                \n    \n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                common-phone-number\n            \n\n            \n                styleUrls\n                ./phone-number.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./phone-number.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                _defaultErrMsg\n                            \n                            \n                                    Public\n                                controlDir\n                            \n                            \n                                    Public\n                                mask\n                            \n                            \n                                    Public\n                                phoneNumber\n                            \n                            \n                                    Static\n                                PhoneNumberRegEx\n                            \n                            \n                                    Public\n                                placeholder\n                            \n                            \n                                    Abstract\n                                _defaultErrMsg\n                            \n                            \n                                _onChange\n                            \n                            \n                                _onTouched\n                            \n                            \n                                    Public\n                                objectId\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                            \n                                onBlur\n                            \n                            \n                                setPhoneNumber\n                            \n                            \n                                    Private\n                                validateSelf\n                            \n                            \n                                writeValue\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                registerOnChange\n                            \n                            \n                                registerOnTouched\n                            \n                            \n                                    Protected\n                                registerValidation\n                            \n                            \n                                setDisabledState\n                            \n                            \n                                    Protected\n                                setErrorMsg\n                            \n                            \n                                    Abstract\n                                writeValue\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                allowInternational\n                            \n                            \n                                displayMask\n                            \n                            \n                                label\n                            \n                            \n                                required\n                            \n                            \n                                value\n                            \n                            \n                                disabled\n                            \n                            \n                                errorMessage\n                            \n                            \n                                label\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                valueChange\n                            \n                        \n                    \n                \n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    value\n                                \n                            \n                        \n                    \n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(controlDir: NgControl)\n                    \n                \n                        \n                            \n                                Defined in projects/common/lib/components/phone-number/phone-number.component.ts:65\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        controlDir\n                                                  \n                                                        \n                                                                        NgControl\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        allowInternational\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : true\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/phone-number/phone-number.component.ts:41\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        displayMask\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : true\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/phone-number/phone-number.component.ts:37\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        label\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'Mobile'\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/phone-number/phone-number.component.ts:39\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        required\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/phone-number/phone-number.component.ts:38\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        value\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/phone-number/phone-number.component.ts:45\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        disabled\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                            \n                                \n                                    Inherited from         AbstractFormControl\n\n                                \n                            \n                        \n                            \n                                    Defined in         AbstractFormControl:15\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        errorMessage\n                    \n                \n                \n                    \n                        Type :         ErrorMessage\n\n                    \n                \n                            \n                                \n                                    Inherited from         AbstractFormControl\n\n                                \n                            \n                        \n                            \n                                    Defined in         AbstractFormControl:18\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        label\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                            \n                                \n                                    Inherited from         AbstractFormControl\n\n                                \n                            \n                        \n                            \n                                    Defined in         AbstractFormControl:13\n\n                            \n                        \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        valueChange\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/phone-number/phone-number.component.ts:54\n                            \n                        \n            \n        \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/components/phone-number/phone-number.component.ts:74\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            onBlur\n                        \n                        \n                    \n                \n            \n            \n                \nonBlur($event)\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/components/phone-number/phone-number.component.ts:112\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    $event\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            setPhoneNumber\n                        \n                        \n                    \n                \n            \n            \n                \nsetPhoneNumber(value)\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/components/phone-number/phone-number.component.ts:105\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            validateSelf\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    validateSelf()\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/components/phone-number/phone-number.component.ts:125\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     { incompleteValue: boolean; }\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            writeValue\n                        \n                        \n                    \n                \n            \n            \n                \nwriteValue(value: any)\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/components/phone-number/phone-number.component.ts:117\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Inherited from         AbstractFormControl\n\n                \n            \n            \n                \n                        Defined in         AbstractFormControl:26\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            registerOnChange\n                        \n                        \n                    \n                \n            \n            \n                \nregisterOnChange(fn: any)\n                \n            \n\n\n            \n                \n                    Inherited from         AbstractFormControl\n\n                \n            \n            \n                \n                        Defined in         AbstractFormControl:34\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    fn\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            registerOnTouched\n                        \n                        \n                    \n                \n            \n            \n                \nregisterOnTouched(fn: any)\n                \n            \n\n\n            \n                \n                    Inherited from         AbstractFormControl\n\n                \n            \n            \n                \n                        Defined in         AbstractFormControl:39\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    fn\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            registerValidation\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    registerValidation(ngControl: NgControl, fn: ValidationErrors)\n                \n            \n\n\n            \n                \n                    Inherited from         AbstractFormControl\n\n                \n            \n            \n                \n                        Defined in         AbstractFormControl:65\n\n                \n            \n\n\n            \n                \n                    Register self validating method\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    ngControl\n                                    \n                                                NgControl\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                    \n                                \n                                \n                                    fn\n                                    \n                                                ValidationErrors\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        function for validating self\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            setDisabledState\n                        \n                        \n                    \n                \n            \n            \n                \nsetDisabledState(isDisabled: boolean)\n                \n            \n\n\n            \n                \n                    Inherited from         AbstractFormControl\n\n                \n            \n            \n                \n                        Defined in         AbstractFormControl:44\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    isDisabled\n                                    \n                                                boolean\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            setErrorMsg\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    setErrorMsg()\n                \n            \n\n\n            \n                \n                    Inherited from         AbstractFormControl\n\n                \n            \n            \n                \n                        Defined in         AbstractFormControl:48\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Abstract\n                            writeValue\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    writeValue(value: any)\n                \n            \n\n\n            \n                \n                    Inherited from         AbstractFormControl\n\n                \n            \n            \n                \n                        Defined in         AbstractFormControl:31\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            _defaultErrMsg\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         ErrorMessage\n\n                        \n                    \n                    \n                        \n                            Default value : {\n    required: `${LabelReplacementTag} is required.`,\n    incompleteValue: `${LabelReplacementTag} does not appear to be valid.`\n  }\n                        \n                    \n                        \n                            \n                                    Defined in projects/common/lib/components/phone-number/phone-number.component.ts:62\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            controlDir\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         NgControl\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Optional()@Self()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in projects/common/lib/components/phone-number/phone-number.component.ts:67\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            mask\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/common/lib/components/phone-number/phone-number.component.ts:58\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            phoneNumber\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : ''\n                        \n                    \n                        \n                            \n                                    Defined in projects/common/lib/components/phone-number/phone-number.component.ts:56\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Static\n                            PhoneNumberRegEx\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : '^[2-9]{1}\\\\d{2}[\\\\-]?\\\\d{3}[\\\\-]?\\\\d{4}$'\n                        \n                    \n                        \n                            \n                                    Defined in projects/common/lib/components/phone-number/phone-number.component.ts:36\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            placeholder\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/common/lib/components/phone-number/phone-number.component.ts:59\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Abstract\n                            _defaultErrMsg\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         ErrorMessage\n\n                        \n                    \n                    \n                        \n                            Default value : {}\n                        \n                    \n                            \n                                \n                                    Inherited from         AbstractFormControl\n\n                                \n                            \n                        \n                            \n                                    Defined in         AbstractFormControl:10\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            _onChange\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : () => {...}\n                        \n                    \n                            \n                                \n                                    Inherited from         AbstractFormControl\n\n                                \n                            \n                        \n                            \n                                    Defined in         AbstractFormControl:22\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            _onTouched\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : () => {...}\n                        \n                    \n                            \n                                \n                                    Inherited from         AbstractFormControl\n\n                                \n                            \n                        \n                            \n                                    Defined in         AbstractFormControl:23\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            objectId\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : UUID.UUID()\n                        \n                    \n                            \n                                \n                                    Inherited from         Base\n\n                                \n                            \n                        \n                            \n                                    Defined in         Base:11\n\n                            \n                        \n\n                \n                    \n                        An identifier for parents to keep track of components \n\n                    \n                \n\n            \n        \n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        value\n                    \n                \n\n                \n                    \n                        getvalue()\n                    \n                \n                            \n                                \n                                    Defined in projects/common/lib/components/phone-number/phone-number.component.ts:50\n                                \n                            \n\n                \n                    \n                        setvalue(val: string)\n                    \n                \n                            \n                                \n                                    Defined in projects/common/lib/components/phone-number/phone-number.component.ts:45\n                                \n                            \n                    \n                        \n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                        Type\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                            val\n                                                    \n                                                            \n                                                                            string\n                                                            \n                                                    \n                                                        \n                                                                No\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :         void\n\n                                \n                        \n                    \n            \n        \n\n\n\n\n    \n        import {\n  Component,\n  Input,\n  forwardRef,\n  Output,\n  EventEmitter,\n  Optional,\n  Self,\n  OnInit\n} from '@angular/core';\nimport { ControlContainer, NgForm, NgControl } from '@angular/forms';\nimport { NUMBER, SPACE } from '../../models/mask.constants';\n\nimport { ErrorMessage, LabelReplacementTag } from '../../models/error-message.interface';\nimport { AbstractFormControl } from '../../models/abstract-form-control';\n/**\n * PhoneNumberComponent is a used to show the Phone number.\n *\n *\n * @example\n *         \n * @export\n */\n\n\n@Component({\n  selector: 'common-phone-number',\n  templateUrl: './phone-number.component.html',\n  styleUrls: ['./phone-number.component.scss'],\n})\n\nexport class PhoneNumberComponent extends AbstractFormControl implements OnInit {\n\n  static PhoneNumberRegEx = '^[2-9]{1}\\\\d{2}[\\\\-]?\\\\d{3}[\\\\-]?\\\\d{4}$';\n  @Input() displayMask: boolean = true;\n  @Input() required: boolean = false;\n  @Input() label: string = 'Mobile';\n\n  @Input() allowInternational: boolean = true;\n\n  // Setter/getter for when not used in form (ex. data dislayed but not edittable)\n  @Input()\n  set value( val: string ) {\n    if ( val !== undefined ) {\n      this.phoneNumber = val;\n    }\n  }\n  get value() {\n    return this.phoneNumber;\n  }\n\n  @Output() valueChange: EventEmitter = new EventEmitter();\n\n  public phoneNumber: string = '';\n\n  public mask: any;\n  public placeholder: string;\n\n  // Abstact variable defined\n  _defaultErrMsg: ErrorMessage = {\n    required: `${LabelReplacementTag} is required.`,\n    incompleteValue: `${LabelReplacementTag} does not appear to be valid.`\n  };\n\n  constructor(@Optional() @Self() public controlDir: NgControl) {\n    super();\n    if (controlDir) {\n      controlDir.valueAccessor = this;\n    }\n  }\n\n  ngOnInit() {\n    super.ngOnInit();\n\n    const internationalPrefix = '+1';\n    this.placeholder = '(555) 555-5555';\n    this.mask = ['(', /[2-9]/, NUMBER, NUMBER, ')', SPACE, NUMBER, NUMBER, NUMBER, '-', NUMBER, NUMBER, NUMBER, NUMBER];\n\n    if (this.allowInternational) {\n      this.placeholder = `${internationalPrefix} ${this.placeholder}`;\n      const prefixArrayOfChar = internationalPrefix.split(''); // ['+', '1']\n      this.mask = [...prefixArrayOfChar, SPACE, ...this.mask];\n    }\n\n\n\n    // Register self validation\n    Promise.resolve().then(() => {\n\n      if (this.controlDir) {\n\n        const allValidators = [this.validateSelf.bind(this)];\n        if (this.controlDir.control.validator) {\n          allValidators.push(this.controlDir.control.validator);\n        }\n        this.controlDir.control.setValidators(allValidators);\n        this.controlDir.control.updateValueAndValidity();\n      }\n    });\n\n  }\n\n  setPhoneNumber(value) {\n    // console.log( 'setPhoneNumber: ', value );\n    this.phoneNumber = value;\n    this.valueChange.emit(this.phoneNumber);\n    this._onChange(value);\n  }\n\n  onBlur( $event ) {\n    this._onTouched($event);\n  }\n\n\n  writeValue(value: any): void {\n    if  (value !== undefined ) {\n      // phoneNumber is where the actual data is displayed to user for this\n      // component\n      this.phoneNumber = value;\n    }\n  }\n\n  private validateSelf() {\n    const value = this.phoneNumber;\n    const phoneLength = this.allowInternational ? 11 : 10;\n\n    if (value) {\n      const stripped = value\n        .replace(/_/g, '') // remove underlines\n        .replace(/\\s/g, '') // spaces\n        .replace(/\\+|-/g, '') // + or - symbol\n        .replace('(', '')\n        .replace(')', '');\n\n      const valid = stripped.length === phoneLength;\n      return valid ? null : { incompleteValue: true };\n\n    }\n    return null;\n  }\n}\n\n    \n\n    \n        \n{{label}}\n\n  \n\n\n\n\n  \n    {{_defaultErrMsg.required}}\n  \n  \n    {{_defaultErrMsg.incompleteValue}}\n  \n\n\n\n\n  \n\n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '{{label}}        {{_defaultErrMsg.required}}        {{_defaultErrMsg.incompleteValue}}    '\n    var COMPONENTS = [{'name': 'AccordionCommonComponent', 'selector': 'common-accordion'},{'name': 'AddressComponent', 'selector': 'common-address'},{'name': 'ButtonComponent', 'selector': 'common-button'},{'name': 'ButtonGroupComponent', 'selector': 'common-button-group'},{'name': 'CaptchaComponent', 'selector': 'common-captcha'},{'name': 'CheckboxComponent', 'selector': 'common-checkbox'},{'name': 'CityComponent', 'selector': 'common-city'},{'name': 'ConfirmTemplateComponent', 'selector': 'common-confirm-template'},{'name': 'ConsentModalComponent', 'selector': 'common-consent-modal'},{'name': 'CoreBreadcrumbComponent', 'selector': 'common-core-breadcrumb'},{'name': 'CountryComponent', 'selector': 'common-country'},{'name': 'DateComponent', 'selector': 'common-date'},{'name': 'DatepickerComponent', 'selector': 'common-datepicker'},{'name': 'DropdownComponent', 'selector': 'common-dropdown'},{'name': 'EmailComponent', 'selector': 'common-email'},{'name': 'ErrorContainerComponent', 'selector': 'common-error-container'},{'name': 'FileUploaderComponent', 'selector': 'common-file-uploader'},{'name': 'FormActionBarComponent', 'selector': 'common-form-action-bar'},{'name': 'FormSubmitBarComponent', 'selector': 'common-form-submit-bar'},{'name': 'FullNameComponent', 'selector': 'common-full-name'},{'name': 'GeocoderInputComponent', 'selector': 'common-geocoder-input'},{'name': 'HeaderComponent', 'selector': 'common-header'},{'name': 'NameComponent', 'selector': 'common-name'},{'name': 'PageFrameworkComponent', 'selector': 'common-page-framework'},{'name': 'PageSectionComponent', 'selector': 'common-page-section'},{'name': 'PasswordComponent', 'selector': 'common-password'},{'name': 'PhnComponent', 'selector': 'common-phn'},{'name': 'PhoneNumberComponent', 'selector': 'common-phone-number'},{'name': 'PostalCodeComponent', 'selector': 'common-postal-code'},{'name': 'ProvinceComponent', 'selector': 'common-province'},{'name': 'RadioComponent', 'selector': 'common-radio'},{'name': 'SampleModalComponent', 'selector': 'common-sample-modal'},{'name': 'SinComponent', 'selector': 'common-sin'},{'name': 'StreetComponent', 'selector': 'common-street'},{'name': 'ThumbnailComponent', 'selector': 'common-thumbnail'},{'name': 'ToggleComponent', 'selector': 'common-toggle'},{'name': 'WizardProgressBarComponent', 'selector': 'common-wizard-progress-bar'},{'name': 'XiconButtonComponent', 'selector': 'common-xicon-button'}];\n    var DIRECTIVES = [{'name': 'DateFieldFormatDirective', 'selector': '[commonDateFieldFormat]'},{'name': 'DuplicateCheckDirective', 'selector': '[commonDuplicateCheck]'},{'name': 'ValidateBcPostalDirective', 'selector': '[commonValidateBcPostal]'},{'name': 'ValidateCityDirective', 'selector': '[commonValidateCity]'},{'name': 'ValidateNameDirective', 'selector': '[commonValidateName]'},{'name': 'ValidatePostalcodeDirective', 'selector': '[commonValidatePostalcode]'},{'name': 'ValidateRegionDirective', 'selector': '[commonValidateRegion]'},{'name': 'ValidateStreetDirective', 'selector': '[commonValidateStreet]'}];\n    var ACTUAL_COMPONENT = {'name': 'PhoneNumberComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/PostalCodeComponent.html":{"url":"components/PostalCodeComponent.html","title":"component - PostalCodeComponent","body":"\n                   \n\n\n\n\n\n  Components\n  PostalCodeComponent\n\n\n\n        \n            Info\n        \n        \n            Design Guidelines\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    projects/common/lib/components/postal-code/postal-code.component.ts\n\n\n\n    \n        Extends\n    \n    \n                Base\n    \n\n    \n        Implements\n    \n    \n                    OnInit\n                    ControlValueAccessor\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                common-postal-code\n            \n\n            \n                styleUrls\n                ./postal-code.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./postal-code.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                _onChange\n                            \n                            \n                                _onTouched\n                            \n                            \n                                    Public\n                                controlDir\n                            \n                            \n                                defaultErrMsg\n                            \n                            \n                                mask\n                            \n                            \n                                postalCode\n                            \n                            \n                                    Public\n                                objectId\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                            \n                                onBlurEvent\n                            \n                            \n                                onValueChange\n                            \n                            \n                                registerOnChange\n                            \n                            \n                                registerOnTouched\n                            \n                            \n                                setDisabledState\n                            \n                            \n                                    Private\n                                setErrorMsg\n                            \n                            \n                                upperCasePipe\n                            \n                            \n                                writeValue\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                disabled\n                            \n                            \n                                displayMask\n                            \n                            \n                                errorMessage\n                            \n                            \n                                label\n                            \n                            \n                                labelforId\n                            \n                            \n                                maxlen\n                            \n                            \n                                value\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                blurEvent\n                            \n                            \n                                valueChange\n                            \n                        \n                    \n                \n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    value\n                                \n                            \n                        \n                    \n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(controlDir: NgControl)\n                    \n                \n                        \n                            \n                                Defined in projects/common/lib/components/postal-code/postal-code.component.ts:48\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        controlDir\n                                                  \n                                                        \n                                                                        NgControl\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        disabled\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/postal-code/postal-code.component.ts:19\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        displayMask\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : true\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/postal-code/postal-code.component.ts:16\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        errorMessage\n                    \n                \n                \n                    \n                        Type :         ErrorMessage\n\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/postal-code/postal-code.component.ts:20\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        label\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'Postal Code'\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/postal-code/postal-code.component.ts:15\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        labelforId\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'postalCode_' + this.objectId\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/postal-code/postal-code.component.ts:18\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        maxlen\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : '250'\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/postal-code/postal-code.component.ts:17\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        value\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/postal-code/postal-code.component.ts:23\n                            \n                        \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        blurEvent\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/postal-code/postal-code.component.ts:35\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        valueChange\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/postal-code/postal-code.component.ts:34\n                            \n                        \n            \n        \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/components/postal-code/postal-code.component.ts:59\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            onBlurEvent\n                        \n                        \n                    \n                \n            \n            \n                \nonBlurEvent(event: any)\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/components/postal-code/postal-code.component.ts:73\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    event\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            onValueChange\n                        \n                        \n                    \n                \n            \n            \n                \nonValueChange(value: any)\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/components/postal-code/postal-code.component.ts:63\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            registerOnChange\n                        \n                        \n                    \n                \n            \n            \n                \nregisterOnChange(fn: any)\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/components/postal-code/postal-code.component.ts:85\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    fn\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            registerOnTouched\n                        \n                        \n                    \n                \n            \n            \n                \nregisterOnTouched(fn: any)\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/components/postal-code/postal-code.component.ts:90\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    fn\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            setDisabledState\n                        \n                        \n                    \n                \n            \n            \n                \nsetDisabledState(isDisabled: boolean)\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/components/postal-code/postal-code.component.ts:94\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    isDisabled\n                                    \n                                                boolean\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            setErrorMsg\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    setErrorMsg()\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/components/postal-code/postal-code.component.ts:105\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            upperCasePipe\n                        \n                        \n                    \n                \n            \n            \n                \nupperCasePipe(text: string)\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/components/postal-code/postal-code.component.ts:101\n                \n            \n\n\n            \n                \n                    Upper cases letters in string\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    text\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            writeValue\n                        \n                        \n                    \n                \n            \n            \n                \nwriteValue(value: any)\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/components/postal-code/postal-code.component.ts:78\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            _onChange\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : () => {...}\n                        \n                    \n                        \n                            \n                                    Defined in projects/common/lib/components/postal-code/postal-code.component.ts:47\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            _onTouched\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : () => {...}\n                        \n                    \n                        \n                            \n                                    Defined in projects/common/lib/components/postal-code/postal-code.component.ts:48\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            controlDir\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         NgControl\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Optional()@Self()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in projects/common/lib/components/postal-code/postal-code.component.ts:50\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            defaultErrMsg\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         ErrorMessage\n\n                        \n                    \n                    \n                        \n                            Default value : {\n    required: 'is required.',\n    invalidChar: 'must contain letters and/or numbers and may include blank characters.',\n    pattern: 'Must be in the format A1A 1A1',\n    invalidBCPostal: 'Invalid postal code for British Columbia.'\n  }\n                        \n                    \n                        \n                            \n                                    Defined in projects/common/lib/components/postal-code/postal-code.component.ts:40\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            mask\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/common/lib/components/postal-code/postal-code.component.ts:38\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            postalCode\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : ''\n                        \n                    \n                        \n                            \n                                    Defined in projects/common/lib/components/postal-code/postal-code.component.ts:37\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            objectId\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : UUID.UUID()\n                        \n                    \n                            \n                                \n                                    Inherited from         Base\n\n                                \n                            \n                        \n                            \n                                    Defined in         Base:11\n\n                            \n                        \n\n                \n                    \n                        An identifier for parents to keep track of components \n\n                    \n                \n\n            \n        \n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        value\n                    \n                \n\n                \n                    \n                        getvalue()\n                    \n                \n                            \n                                \n                                    Defined in projects/common/lib/components/postal-code/postal-code.component.ts:29\n                                \n                            \n\n                \n                    \n                        setvalue(val: string)\n                    \n                \n                            \n                                \n                                    Defined in projects/common/lib/components/postal-code/postal-code.component.ts:23\n                                \n                            \n                    \n                        \n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                        Type\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                            val\n                                                    \n                                                            \n                                                                            string\n                                                            \n                                                    \n                                                        \n                                                                No\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :         void\n\n                                \n                        \n                    \n            \n        \n\n\n\n    \n        Design Guidelines\nLorem ipsum dolor sit amet consectetur adipisicing elit. Sapiente, magnam ipsam. Sit quasi natus architecto rerum unde non provident! Quia nisi facere amet iste mollitia voluptatem non molestias esse optio?\nAperiam fugiat consectetur temporibus, iste repellat, quisquam sapiente nisi distinctio optio, autem nemo tenetur error eum voluptatibus ab accusamus quis voluptatum blanditiis. Quam et ut reprehenderit vitae nobis, at ipsum!\nExercitationem pariatur animi repudiandae corporis obcaecati ratione ducimus beatae quam, nostrum magnam unde numquam quidem cupiditate odit id. Beatae alias molestiae, optio incidunt harum quia voluptates deserunt sequi. Nesciunt, optio.\n\n    \n\n    \n        import { Component, Input, Output, EventEmitter, Optional, Self, OnInit } from '@angular/core';\nimport { ControlValueAccessor, NgControl } from '@angular/forms';\nimport { LETTER, NUMBER, SPACE } from '../../models/mask.constants';\nimport { Base } from '../../models/base';\nimport { ErrorMessage } from '../../../public_api';\n\n\n@Component({\n  selector: 'common-postal-code',\n  templateUrl: './postal-code.component.html',\n  styleUrls: ['./postal-code.component.scss']\n})\nexport class PostalCodeComponent extends Base implements OnInit, ControlValueAccessor  {\n\n  @Input() label: string = 'Postal Code';\n  @Input() displayMask: boolean = true;\n  @Input() maxlen: string = '250';\n  @Input() labelforId: string = 'postalCode_' + this.objectId;\n  @Input() disabled: boolean = false;\n  @Input() errorMessage: ErrorMessage;\n\n  @Input()\n  set value( val: string ) {\n    // console.log( 'set value: ', val );\n    if (val) {\n      this.postalCode = val;\n    }\n  }\n  get value() {\n    // console.log( 'get value: ', this.postalCode );\n    return this.postalCode;\n  }\n\n  @Output() valueChange: EventEmitter = new EventEmitter();\n  @Output() blurEvent: EventEmitter = new EventEmitter();\n\n  postalCode: string = '';\n  mask: any;\n\n  defaultErrMsg: ErrorMessage = {\n    required: 'is required.',\n    invalidChar: 'must contain letters and/or numbers and may include blank characters.',\n    pattern: 'Must be in the format A1A 1A1',\n    invalidBCPostal: 'Invalid postal code for British Columbia.'\n  };\n\n  _onChange = (_: any) => {};\n  _onTouched = (_: any) => {};\n\n  constructor( @Optional() @Self() public controlDir: NgControl ) {\n    super();\n    if ( controlDir ) {\n      controlDir.valueAccessor = this;\n    }\n\n    this.mask = [LETTER, NUMBER, LETTER, SPACE, NUMBER, LETTER, NUMBER];\n  }\n\n  ngOnInit() {\n    this.setErrorMsg();\n  }\n\n  onValueChange( value: any ) {\n     //console.log( 'onValueChange: ', value, this.postalCode );\n\n    if ( value !== this.postalCode ) { // IE fix when focus does not display required error\n      this._onChange( value );\n      this.valueChange.emit( value );\n      this.postalCode = value;\n    }\n  }\n\n  onBlurEvent( event: any ) {\n    this._onTouched( event );\n    this.blurEvent.emit( event );\n  }\n\n  writeValue( value: any ): void {\n    if ( value !== undefined ) {\n      this.postalCode = value;\n    }\n  }\n\n  // Register change functiong\n  registerOnChange( fn: any ): void {\n    this._onChange = fn;\n  }\n\n  // Register touched function\n  registerOnTouched( fn: any ): void {\n    this._onTouched = fn;\n  }\n\n  setDisabledState(isDisabled: boolean): void {\n    this.disabled = isDisabled;\n  }\n\n  /**\n   * Upper cases letters in string\n   */\n  upperCasePipe(text: string) {\n    return text.toUpperCase();\n  }\n\n  private setErrorMsg() {\n    if ( this.errorMessage ) {\n      Object.keys(this.errorMessage).map( x => this.defaultErrMsg[x] = this.errorMessage[x] );\n    }\n  }\n}\n\n    \n\n    \n        {{label}}\n\n\n  \n\n  \n  \n    \n      {{label}} {{defaultErrMsg.required}}\n    \n    \n      {{defaultErrMsg.pattern}}\n    \n    \n      {{defaultErrMsg.invalidBCPostal}}\n    \n    \n    {{label}} {{defaultErrMsg.invalidChar}}\n  \n  \n\n\n  \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '{{label}}                {{label}} {{defaultErrMsg.required}}              {{defaultErrMsg.pattern}}              {{defaultErrMsg.invalidBCPostal}}            {{label}} {{defaultErrMsg.invalidChar}}      '\n    var COMPONENTS = [{'name': 'AccordionCommonComponent', 'selector': 'common-accordion'},{'name': 'AddressComponent', 'selector': 'common-address'},{'name': 'ButtonComponent', 'selector': 'common-button'},{'name': 'ButtonGroupComponent', 'selector': 'common-button-group'},{'name': 'CaptchaComponent', 'selector': 'common-captcha'},{'name': 'CheckboxComponent', 'selector': 'common-checkbox'},{'name': 'CityComponent', 'selector': 'common-city'},{'name': 'ConfirmTemplateComponent', 'selector': 'common-confirm-template'},{'name': 'ConsentModalComponent', 'selector': 'common-consent-modal'},{'name': 'CoreBreadcrumbComponent', 'selector': 'common-core-breadcrumb'},{'name': 'CountryComponent', 'selector': 'common-country'},{'name': 'DateComponent', 'selector': 'common-date'},{'name': 'DatepickerComponent', 'selector': 'common-datepicker'},{'name': 'DropdownComponent', 'selector': 'common-dropdown'},{'name': 'EmailComponent', 'selector': 'common-email'},{'name': 'ErrorContainerComponent', 'selector': 'common-error-container'},{'name': 'FileUploaderComponent', 'selector': 'common-file-uploader'},{'name': 'FormActionBarComponent', 'selector': 'common-form-action-bar'},{'name': 'FormSubmitBarComponent', 'selector': 'common-form-submit-bar'},{'name': 'FullNameComponent', 'selector': 'common-full-name'},{'name': 'GeocoderInputComponent', 'selector': 'common-geocoder-input'},{'name': 'HeaderComponent', 'selector': 'common-header'},{'name': 'NameComponent', 'selector': 'common-name'},{'name': 'PageFrameworkComponent', 'selector': 'common-page-framework'},{'name': 'PageSectionComponent', 'selector': 'common-page-section'},{'name': 'PasswordComponent', 'selector': 'common-password'},{'name': 'PhnComponent', 'selector': 'common-phn'},{'name': 'PhoneNumberComponent', 'selector': 'common-phone-number'},{'name': 'PostalCodeComponent', 'selector': 'common-postal-code'},{'name': 'ProvinceComponent', 'selector': 'common-province'},{'name': 'RadioComponent', 'selector': 'common-radio'},{'name': 'SampleModalComponent', 'selector': 'common-sample-modal'},{'name': 'SinComponent', 'selector': 'common-sin'},{'name': 'StreetComponent', 'selector': 'common-street'},{'name': 'ThumbnailComponent', 'selector': 'common-thumbnail'},{'name': 'ToggleComponent', 'selector': 'common-toggle'},{'name': 'WizardProgressBarComponent', 'selector': 'common-wizard-progress-bar'},{'name': 'XiconButtonComponent', 'selector': 'common-xicon-button'}];\n    var DIRECTIVES = [{'name': 'DateFieldFormatDirective', 'selector': '[commonDateFieldFormat]'},{'name': 'DuplicateCheckDirective', 'selector': '[commonDuplicateCheck]'},{'name': 'ValidateBcPostalDirective', 'selector': '[commonValidateBcPostal]'},{'name': 'ValidateCityDirective', 'selector': '[commonValidateCity]'},{'name': 'ValidateNameDirective', 'selector': '[commonValidateName]'},{'name': 'ValidatePostalcodeDirective', 'selector': '[commonValidatePostalcode]'},{'name': 'ValidateRegionDirective', 'selector': '[commonValidateRegion]'},{'name': 'ValidateStreetDirective', 'selector': '[commonValidateStreet]'}];\n    var ACTUAL_COMPONENT = {'name': 'PostalCodeComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ProvinceComponent.html":{"url":"components/ProvinceComponent.html","title":"component - ProvinceComponent","body":"\n                   \n\n\n\n\n\n  Components\n  ProvinceComponent\n\n\n\n        \n            Info\n        \n        \n            Design Guidelines\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    projects/common/lib/components/province/province.component.ts\n\n\n\n    \n        Extends\n    \n    \n                AbstractFormControl\n    \n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                common-province\n            \n\n            \n                styleUrls\n                ./province.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./province.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                _defaultErrMsg\n                            \n                            \n                                    Public\n                                controlDir\n                            \n                            \n                                province\n                            \n                            \n                                    Abstract\n                                _defaultErrMsg\n                            \n                            \n                                _onChange\n                            \n                            \n                                _onTouched\n                            \n                            \n                                    Public\n                                objectId\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                            \n                                onBlur\n                            \n                            \n                                onValueChange\n                            \n                            \n                                writeValue\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                registerOnChange\n                            \n                            \n                                registerOnTouched\n                            \n                            \n                                    Protected\n                                registerValidation\n                            \n                            \n                                setDisabledState\n                            \n                            \n                                    Protected\n                                setErrorMsg\n                            \n                            \n                                    Abstract\n                                writeValue\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                label\n                            \n                            \n                                labelforId\n                            \n                            \n                                maxlength\n                            \n                            \n                                placeholder\n                            \n                            \n                                provinceList\n                            \n                            \n                                required\n                            \n                            \n                                useDropDownList\n                            \n                            \n                                value\n                            \n                            \n                                disabled\n                            \n                            \n                                errorMessage\n                            \n                            \n                                label\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                blur\n                            \n                            \n                                valueChange\n                            \n                        \n                    \n                \n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    value\n                                \n                            \n                        \n                    \n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(controlDir: NgControl)\n                    \n                \n                        \n                            \n                                Defined in projects/common/lib/components/province/province.component.ts:70\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        controlDir\n                                                  \n                                                        \n                                                                        NgControl\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        label\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'Province'\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/province/province.component.ts:43\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        labelforId\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'province_' + this.objectId\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/province/province.component.ts:45\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        maxlength\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : '250'\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/province/province.component.ts:48\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        placeholder\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'Please select a province'\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/province/province.component.ts:47\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        provinceList\n                    \n                \n                \n                    \n                        Type :         ProvinceList[]\n\n                    \n                \n                \n                    \n                        Default value : PROVINCE_LIST\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/province/province.component.ts:44\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        required\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/province/province.component.ts:46\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        useDropDownList\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : true\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/province/province.component.ts:49\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        value\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/province/province.component.ts:52\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        disabled\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                            \n                                \n                                    Inherited from         AbstractFormControl\n\n                                \n                            \n                        \n                            \n                                    Defined in         AbstractFormControl:15\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        errorMessage\n                    \n                \n                \n                    \n                        Type :         ErrorMessage\n\n                    \n                \n                            \n                                \n                                    Inherited from         AbstractFormControl\n\n                                \n                            \n                        \n                            \n                                    Defined in         AbstractFormControl:18\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        label\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                            \n                                \n                                    Inherited from         AbstractFormControl\n\n                                \n                            \n                        \n                            \n                                    Defined in         AbstractFormControl:13\n\n                            \n                        \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        blur\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/province/province.component.ts:62\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        valueChange\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/province/province.component.ts:61\n                            \n                        \n            \n        \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/components/province/province.component.ts:80\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            onBlur\n                        \n                        \n                    \n                \n            \n            \n                \nonBlur(event: any)\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/components/province/province.component.ts:92\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    event\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            onValueChange\n                        \n                        \n                    \n                \n            \n            \n                \nonValueChange(value: any)\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/components/province/province.component.ts:84\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            writeValue\n                        \n                        \n                    \n                \n            \n            \n                \nwriteValue(value: any)\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/components/province/province.component.ts:97\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Inherited from         AbstractFormControl\n\n                \n            \n            \n                \n                        Defined in         AbstractFormControl:26\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            registerOnChange\n                        \n                        \n                    \n                \n            \n            \n                \nregisterOnChange(fn: any)\n                \n            \n\n\n            \n                \n                    Inherited from         AbstractFormControl\n\n                \n            \n            \n                \n                        Defined in         AbstractFormControl:34\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    fn\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            registerOnTouched\n                        \n                        \n                    \n                \n            \n            \n                \nregisterOnTouched(fn: any)\n                \n            \n\n\n            \n                \n                    Inherited from         AbstractFormControl\n\n                \n            \n            \n                \n                        Defined in         AbstractFormControl:39\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    fn\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            registerValidation\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    registerValidation(ngControl: NgControl, fn: ValidationErrors)\n                \n            \n\n\n            \n                \n                    Inherited from         AbstractFormControl\n\n                \n            \n            \n                \n                        Defined in         AbstractFormControl:65\n\n                \n            \n\n\n            \n                \n                    Register self validating method\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    ngControl\n                                    \n                                                NgControl\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                    \n                                \n                                \n                                    fn\n                                    \n                                                ValidationErrors\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        function for validating self\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            setDisabledState\n                        \n                        \n                    \n                \n            \n            \n                \nsetDisabledState(isDisabled: boolean)\n                \n            \n\n\n            \n                \n                    Inherited from         AbstractFormControl\n\n                \n            \n            \n                \n                        Defined in         AbstractFormControl:44\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    isDisabled\n                                    \n                                                boolean\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            setErrorMsg\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    setErrorMsg()\n                \n            \n\n\n            \n                \n                    Inherited from         AbstractFormControl\n\n                \n            \n            \n                \n                        Defined in         AbstractFormControl:48\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Abstract\n                            writeValue\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    writeValue(value: any)\n                \n            \n\n\n            \n                \n                    Inherited from         AbstractFormControl\n\n                \n            \n            \n                \n                        Defined in         AbstractFormControl:31\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            _defaultErrMsg\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         ErrorMessage\n\n                        \n                    \n                    \n                        \n                            Default value : {\n    required: LabelReplacementTag + ' is required.',\n    invalidChar: LabelReplacementTag + ' must contain letters and may include special characters such as hyphens, ' +\n                 'periods, apostrophes and blank characters.'\n  }\n                        \n                    \n                        \n                            \n                                    Defined in projects/common/lib/components/province/province.component.ts:66\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            controlDir\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         NgControl\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Optional()@Self()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in projects/common/lib/components/province/province.component.ts:73\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            province\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/common/lib/components/province/province.component.ts:64\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Abstract\n                            _defaultErrMsg\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         ErrorMessage\n\n                        \n                    \n                    \n                        \n                            Default value : {}\n                        \n                    \n                            \n                                \n                                    Inherited from         AbstractFormControl\n\n                                \n                            \n                        \n                            \n                                    Defined in         AbstractFormControl:10\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            _onChange\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : () => {...}\n                        \n                    \n                            \n                                \n                                    Inherited from         AbstractFormControl\n\n                                \n                            \n                        \n                            \n                                    Defined in         AbstractFormControl:22\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            _onTouched\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : () => {...}\n                        \n                    \n                            \n                                \n                                    Inherited from         AbstractFormControl\n\n                                \n                            \n                        \n                            \n                                    Defined in         AbstractFormControl:23\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            objectId\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : UUID.UUID()\n                        \n                    \n                            \n                                \n                                    Inherited from         Base\n\n                                \n                            \n                        \n                            \n                                    Defined in         Base:11\n\n                            \n                        \n\n                \n                    \n                        An identifier for parents to keep track of components \n\n                    \n                \n\n            \n        \n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        value\n                    \n                \n\n                \n                    \n                        getvalue()\n                    \n                \n                            \n                                \n                                    Defined in projects/common/lib/components/province/province.component.ts:57\n                                \n                            \n\n                \n                    \n                        setvalue(val: string)\n                    \n                \n                            \n                                \n                                    Defined in projects/common/lib/components/province/province.component.ts:52\n                                \n                            \n                    \n                        \n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                        Type\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                            val\n                                                    \n                                                            \n                                                                            string\n                                                            \n                                                    \n                                                        \n                                                                No\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :         void\n\n                                \n                        \n                    \n            \n        \n\n\n\n    \n        Design Guidelines\nLorem ipsum dolor sit amet consectetur adipisicing elit. Sapiente, magnam ipsam. Sit quasi natus architecto rerum unde non provident! Quia nisi facere amet iste mollitia voluptatem non molestias esse optio?\nAperiam fugiat consectetur temporibus, iste repellat, quisquam sapiente nisi distinctio optio, autem nemo tenetur error eum voluptatibus ab accusamus quis voluptatum blanditiis. Quam et ut reprehenderit vitae nobis, at ipsum!\nExercitationem pariatur animi repudiandae corporis obcaecati ratione ducimus beatae quam, nostrum magnam unde numquam quidem cupiditate odit id. Beatae alias molestiae, optio incidunt harum quia voluptates deserunt sequi. Nesciunt, optio.\n\n    \n\n    \n        import { Component, Input, Output, EventEmitter, Optional, Self, OnInit } from '@angular/core';\nimport { Base } from '../../models/base';\nimport { ControlValueAccessor, NgControl } from '@angular/forms';\nimport { CANADA } from '../country/country.component';\nimport { AbstractFormControl } from '../../models/abstract-form-control';\nimport { ErrorMessage, LabelReplacementTag } from '../../models/error-message.interface';\n\nexport const BRITISH_COLUMBIA = 'BC';\nexport interface ProvinceList {\n  provinceCode: string;\n  description: string;\n  country: string;\n}\n\nexport const PROVINCE_LIST: ProvinceList[] = [\n  { provinceCode: 'AB', description: 'Alberta', country: CANADA },\n  { provinceCode: 'BC', description: 'British Columbia', country: CANADA },\n  { provinceCode: 'MB', description: 'Manitoba', country: CANADA },\n  { provinceCode: 'NB', description: 'New Brunswick', country: CANADA },\n  { provinceCode: 'NL', description: 'Newfoundland and Labrador', country: CANADA },\n  { provinceCode: 'NS', description: 'Nova Scotia', country: CANADA },\n  { provinceCode: 'ON', description: 'Ontario', country: CANADA },\n  { provinceCode: 'PE', description: 'Prince Edward Island', country: CANADA },\n  { provinceCode: 'QC', description: 'Quebec', country: CANADA },\n  { provinceCode: 'SK', description: 'Saskatchewan', country: CANADA },\n  { provinceCode: 'NT', description: 'Northwest Territories', country: CANADA },\n  { provinceCode: 'NU', description: 'Nunavut', country: CANADA },\n  { provinceCode: 'YT', description: 'Yukon', country: CANADA }\n];\n\nexport function getProvinceDescription( provinceCode: string ) {\n  const provObj = PROVINCE_LIST.find( val => provinceCode === val.provinceCode && CANADA === val.country );\n  return provObj ? provObj.description : provinceCode;\n}\n\n@Component({\n  selector: 'common-province',\n  templateUrl: './province.component.html',\n  styleUrls: ['./province.component.scss']\n})\nexport class ProvinceComponent extends AbstractFormControl implements OnInit {\n\n  @Input() label: string = 'Province';\n  @Input() provinceList: ProvinceList[] = PROVINCE_LIST;\n  @Input() labelforId: string = 'province_' + this.objectId;\n  @Input() required: boolean = false;\n  @Input() placeholder: string = 'Please select a province';\n  @Input() maxlength: string = '250';\n  @Input() useDropDownList: boolean = true;\n\n  @Input()\n  set value( val: string ) {\n    if ( val ) {\n      this.province = val;\n    }\n  }\n  get value() {\n    return this.province;\n  }\n\n  @Output() valueChange: EventEmitter = new EventEmitter();\n  @Output() blur: EventEmitter = new EventEmitter();\n\n  province: string;\n\n  _defaultErrMsg: ErrorMessage = {\n    required: LabelReplacementTag + ' is required.',\n    invalidChar: LabelReplacementTag + ' must contain letters and may include special characters such as hyphens, ' +\n                 'periods, apostrophes and blank characters.'\n  };\n\n\n  constructor( @Optional() @Self() public controlDir: NgControl ) {\n    super();\n    if ( controlDir ) {\n      controlDir.valueAccessor = this;\n    }\n  }\n\n  ngOnInit() {\n    super.ngOnInit();\n  }\n\n  onValueChange( value: any ) {\n    if ( value !== this.province ) {\n      this._onChange( value );\n      this.valueChange.emit( value );\n      this.province = value;\n    }\n  }\n\n  onBlur( event: any ) {\n    this._onTouched( event );\n    this.blur.emit( event );\n  }\n\n  writeValue( value: any ): void {\n    if ( value !== undefined ) {\n      this.province = value;\n    }\n  }\n}\n\n    \n\n    \n        {{label}}\n\n\n  \n\n\n\n\n  \n    {{_defaultErrMsg.required}}\n  \n  \n    {{_defaultErrMsg.invalidChar}}\n  \n\n\n\n  \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '{{label}}        {{_defaultErrMsg.required}}        {{_defaultErrMsg.invalidChar}}    '\n    var COMPONENTS = [{'name': 'AccordionCommonComponent', 'selector': 'common-accordion'},{'name': 'AddressComponent', 'selector': 'common-address'},{'name': 'ButtonComponent', 'selector': 'common-button'},{'name': 'ButtonGroupComponent', 'selector': 'common-button-group'},{'name': 'CaptchaComponent', 'selector': 'common-captcha'},{'name': 'CheckboxComponent', 'selector': 'common-checkbox'},{'name': 'CityComponent', 'selector': 'common-city'},{'name': 'ConfirmTemplateComponent', 'selector': 'common-confirm-template'},{'name': 'ConsentModalComponent', 'selector': 'common-consent-modal'},{'name': 'CoreBreadcrumbComponent', 'selector': 'common-core-breadcrumb'},{'name': 'CountryComponent', 'selector': 'common-country'},{'name': 'DateComponent', 'selector': 'common-date'},{'name': 'DatepickerComponent', 'selector': 'common-datepicker'},{'name': 'DropdownComponent', 'selector': 'common-dropdown'},{'name': 'EmailComponent', 'selector': 'common-email'},{'name': 'ErrorContainerComponent', 'selector': 'common-error-container'},{'name': 'FileUploaderComponent', 'selector': 'common-file-uploader'},{'name': 'FormActionBarComponent', 'selector': 'common-form-action-bar'},{'name': 'FormSubmitBarComponent', 'selector': 'common-form-submit-bar'},{'name': 'FullNameComponent', 'selector': 'common-full-name'},{'name': 'GeocoderInputComponent', 'selector': 'common-geocoder-input'},{'name': 'HeaderComponent', 'selector': 'common-header'},{'name': 'NameComponent', 'selector': 'common-name'},{'name': 'PageFrameworkComponent', 'selector': 'common-page-framework'},{'name': 'PageSectionComponent', 'selector': 'common-page-section'},{'name': 'PasswordComponent', 'selector': 'common-password'},{'name': 'PhnComponent', 'selector': 'common-phn'},{'name': 'PhoneNumberComponent', 'selector': 'common-phone-number'},{'name': 'PostalCodeComponent', 'selector': 'common-postal-code'},{'name': 'ProvinceComponent', 'selector': 'common-province'},{'name': 'RadioComponent', 'selector': 'common-radio'},{'name': 'SampleModalComponent', 'selector': 'common-sample-modal'},{'name': 'SinComponent', 'selector': 'common-sin'},{'name': 'StreetComponent', 'selector': 'common-street'},{'name': 'ThumbnailComponent', 'selector': 'common-thumbnail'},{'name': 'ToggleComponent', 'selector': 'common-toggle'},{'name': 'WizardProgressBarComponent', 'selector': 'common-wizard-progress-bar'},{'name': 'XiconButtonComponent', 'selector': 'common-xicon-button'}];\n    var DIRECTIVES = [{'name': 'DateFieldFormatDirective', 'selector': '[commonDateFieldFormat]'},{'name': 'DuplicateCheckDirective', 'selector': '[commonDuplicateCheck]'},{'name': 'ValidateBcPostalDirective', 'selector': '[commonValidateBcPostal]'},{'name': 'ValidateCityDirective', 'selector': '[commonValidateCity]'},{'name': 'ValidateNameDirective', 'selector': '[commonValidateName]'},{'name': 'ValidatePostalcodeDirective', 'selector': '[commonValidatePostalcode]'},{'name': 'ValidateRegionDirective', 'selector': '[commonValidateRegion]'},{'name': 'ValidateStreetDirective', 'selector': '[commonValidateStreet]'}];\n    var ACTUAL_COMPONENT = {'name': 'ProvinceComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ProvinceList.html":{"url":"interfaces/ProvinceList.html","title":"interface - ProvinceList","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  ProvinceList\n\n\n\n        \n            Info\n        \n        \n            Design Guidelines\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/common/lib/components/province/province.component.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        country\n                                \n                                \n                                        description\n                                \n                                \n                                        provinceCode\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        country\n                                    \n                                \n                                \n                                    \n                                        country:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        description\n                                    \n                                \n                                \n                                    \n                                        description:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        provinceCode\n                                    \n                                \n                                \n                                    \n                                        provinceCode:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n    \n        Design Guidelines\nLorem ipsum dolor sit amet consectetur adipisicing elit. Sapiente, magnam ipsam. Sit quasi natus architecto rerum unde non provident! Quia nisi facere amet iste mollitia voluptatem non molestias esse optio?\nAperiam fugiat consectetur temporibus, iste repellat, quisquam sapiente nisi distinctio optio, autem nemo tenetur error eum voluptatibus ab accusamus quis voluptatum blanditiis. Quam et ut reprehenderit vitae nobis, at ipsum!\nExercitationem pariatur animi repudiandae corporis obcaecati ratione ducimus beatae quam, nostrum magnam unde numquam quidem cupiditate odit id. Beatae alias molestiae, optio incidunt harum quia voluptates deserunt sequi. Nesciunt, optio.\n\n    \n\n    \n        import { Component, Input, Output, EventEmitter, Optional, Self, OnInit } from '@angular/core';\nimport { Base } from '../../models/base';\nimport { ControlValueAccessor, NgControl } from '@angular/forms';\nimport { CANADA } from '../country/country.component';\nimport { AbstractFormControl } from '../../models/abstract-form-control';\nimport { ErrorMessage, LabelReplacementTag } from '../../models/error-message.interface';\n\nexport const BRITISH_COLUMBIA = 'BC';\nexport interface ProvinceList {\n  provinceCode: string;\n  description: string;\n  country: string;\n}\n\nexport const PROVINCE_LIST: ProvinceList[] = [\n  { provinceCode: 'AB', description: 'Alberta', country: CANADA },\n  { provinceCode: 'BC', description: 'British Columbia', country: CANADA },\n  { provinceCode: 'MB', description: 'Manitoba', country: CANADA },\n  { provinceCode: 'NB', description: 'New Brunswick', country: CANADA },\n  { provinceCode: 'NL', description: 'Newfoundland and Labrador', country: CANADA },\n  { provinceCode: 'NS', description: 'Nova Scotia', country: CANADA },\n  { provinceCode: 'ON', description: 'Ontario', country: CANADA },\n  { provinceCode: 'PE', description: 'Prince Edward Island', country: CANADA },\n  { provinceCode: 'QC', description: 'Quebec', country: CANADA },\n  { provinceCode: 'SK', description: 'Saskatchewan', country: CANADA },\n  { provinceCode: 'NT', description: 'Northwest Territories', country: CANADA },\n  { provinceCode: 'NU', description: 'Nunavut', country: CANADA },\n  { provinceCode: 'YT', description: 'Yukon', country: CANADA }\n];\n\nexport function getProvinceDescription( provinceCode: string ) {\n  const provObj = PROVINCE_LIST.find( val => provinceCode === val.provinceCode && CANADA === val.country );\n  return provObj ? provObj.description : provinceCode;\n}\n\n@Component({\n  selector: 'common-province',\n  templateUrl: './province.component.html',\n  styleUrls: ['./province.component.scss']\n})\nexport class ProvinceComponent extends AbstractFormControl implements OnInit {\n\n  @Input() label: string = 'Province';\n  @Input() provinceList: ProvinceList[] = PROVINCE_LIST;\n  @Input() labelforId: string = 'province_' + this.objectId;\n  @Input() required: boolean = false;\n  @Input() placeholder: string = 'Please select a province';\n  @Input() maxlength: string = '250';\n  @Input() useDropDownList: boolean = true;\n\n  @Input()\n  set value( val: string ) {\n    if ( val ) {\n      this.province = val;\n    }\n  }\n  get value() {\n    return this.province;\n  }\n\n  @Output() valueChange: EventEmitter = new EventEmitter();\n  @Output() blur: EventEmitter = new EventEmitter();\n\n  province: string;\n\n  _defaultErrMsg: ErrorMessage = {\n    required: LabelReplacementTag + ' is required.',\n    invalidChar: LabelReplacementTag + ' must contain letters and may include special characters such as hyphens, ' +\n                 'periods, apostrophes and blank characters.'\n  };\n\n\n  constructor( @Optional() @Self() public controlDir: NgControl ) {\n    super();\n    if ( controlDir ) {\n      controlDir.valueAccessor = this;\n    }\n  }\n\n  ngOnInit() {\n    super.ngOnInit();\n  }\n\n  onValueChange( value: any ) {\n    if ( value !== this.province ) {\n      this._onChange( value );\n      this.valueChange.emit( value );\n      this.province = value;\n    }\n  }\n\n  onBlur( event: any ) {\n    this._onTouched( event );\n    this.blur.emit( event );\n  }\n\n  writeValue( value: any ): void {\n    if ( value !== undefined ) {\n      this.province = value;\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/RadioComponent.html":{"url":"components/RadioComponent.html","title":"component - RadioComponent","body":"\n                   \n\n\n\n\n\n  Components\n  RadioComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    projects/common/lib/components/radio/radio.component.ts\n\n\n\n    \n        Extends\n    \n    \n                AbstractFormControl\n    \n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                common-radio\n            \n\n            \n                styleUrls\n                ./radio.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./radio.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                _defaultErrMsg\n                            \n                            \n                                _value\n                            \n                            \n                                    Public\n                                controlDir\n                            \n                            \n                                    Abstract\n                                _defaultErrMsg\n                            \n                            \n                                _onChange\n                            \n                            \n                                _onTouched\n                            \n                            \n                                    Public\n                                objectId\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                            \n                                registerOnChange\n                            \n                            \n                                registerOnTouched\n                            \n                            \n                                setStatus\n                            \n                            \n                                writeValue\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                registerOnChange\n                            \n                            \n                                registerOnTouched\n                            \n                            \n                                    Protected\n                                registerValidation\n                            \n                            \n                                setDisabledState\n                            \n                            \n                                    Protected\n                                setErrorMsg\n                            \n                            \n                                    Abstract\n                                writeValue\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                display\n                            \n                            \n                                instructionText\n                            \n                            \n                                label\n                            \n                            \n                                radioLabels\n                            \n                            \n                                value\n                            \n                            \n                                disabled\n                            \n                            \n                                errorMessage\n                            \n                            \n                                label\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                valueChange\n                            \n                        \n                    \n                \n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    value\n                                \n                            \n                        \n                    \n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(controlDir: NgControl)\n                    \n                \n                        \n                            \n                                Defined in projects/common/lib/components/radio/radio.component.ts:76\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        controlDir\n                                                  \n                                                        \n                                                                        NgControl\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        display\n                    \n                \n                \n                    \n                        Type :     \"table-row-group\" | \"inline-block\"\n\n                    \n                \n                \n                    \n                        Default value : 'inline-block'\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/radio/radio.component.ts:73\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        instructionText\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/radio/radio.component.ts:74\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        label\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/radio/radio.component.ts:64\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        radioLabels\n                    \n                \n                \n                    \n                        Type :         IRadioItems[]\n\n                    \n                \n                \n                    \n                        Default value : [\n    {label: 'No', value: false},\n    {label: 'Yes', value: true}\n  ]\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/radio/radio.component.ts:59\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        value\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/radio/radio.component.ts:66\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        disabled\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                            \n                                \n                                    Inherited from         AbstractFormControl\n\n                                \n                            \n                        \n                            \n                                    Defined in         AbstractFormControl:15\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        errorMessage\n                    \n                \n                \n                    \n                        Type :         ErrorMessage\n\n                    \n                \n                            \n                                \n                                    Inherited from         AbstractFormControl\n\n                                \n                            \n                        \n                            \n                                    Defined in         AbstractFormControl:18\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        label\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                            \n                                \n                                    Inherited from         AbstractFormControl\n\n                                \n                            \n                        \n                            \n                                    Defined in         AbstractFormControl:13\n\n                            \n                        \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        valueChange\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/radio/radio.component.ts:76\n                            \n                        \n            \n        \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/components/radio/radio.component.ts:85\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            registerOnChange\n                        \n                        \n                    \n                \n            \n            \n                \nregisterOnChange(fn: any)\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/components/radio/radio.component.ts:97\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    fn\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            registerOnTouched\n                        \n                        \n                    \n                \n            \n            \n                \nregisterOnTouched(fn: any)\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/components/radio/radio.component.ts:101\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    fn\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            setStatus\n                        \n                        \n                    \n                \n            \n            \n                \nsetStatus(val: any)\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/components/radio/radio.component.ts:89\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    val\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            writeValue\n                        \n                        \n                    \n                \n            \n            \n                \nwriteValue(value: any)\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/components/radio/radio.component.ts:105\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Inherited from         AbstractFormControl\n\n                \n            \n            \n                \n                        Defined in         AbstractFormControl:26\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            registerOnChange\n                        \n                        \n                    \n                \n            \n            \n                \nregisterOnChange(fn: any)\n                \n            \n\n\n            \n                \n                    Inherited from         AbstractFormControl\n\n                \n            \n            \n                \n                        Defined in         AbstractFormControl:34\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    fn\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            registerOnTouched\n                        \n                        \n                    \n                \n            \n            \n                \nregisterOnTouched(fn: any)\n                \n            \n\n\n            \n                \n                    Inherited from         AbstractFormControl\n\n                \n            \n            \n                \n                        Defined in         AbstractFormControl:39\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    fn\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            registerValidation\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    registerValidation(ngControl: NgControl, fn: ValidationErrors)\n                \n            \n\n\n            \n                \n                    Inherited from         AbstractFormControl\n\n                \n            \n            \n                \n                        Defined in         AbstractFormControl:65\n\n                \n            \n\n\n            \n                \n                    Register self validating method\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    ngControl\n                                    \n                                                NgControl\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                    \n                                \n                                \n                                    fn\n                                    \n                                                ValidationErrors\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        function for validating self\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            setDisabledState\n                        \n                        \n                    \n                \n            \n            \n                \nsetDisabledState(isDisabled: boolean)\n                \n            \n\n\n            \n                \n                    Inherited from         AbstractFormControl\n\n                \n            \n            \n                \n                        Defined in         AbstractFormControl:44\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    isDisabled\n                                    \n                                                boolean\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            setErrorMsg\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    setErrorMsg()\n                \n            \n\n\n            \n                \n                    Inherited from         AbstractFormControl\n\n                \n            \n            \n                \n                        Defined in         AbstractFormControl:48\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Abstract\n                            writeValue\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    writeValue(value: any)\n                \n            \n\n\n            \n                \n                    Inherited from         AbstractFormControl\n\n                \n            \n            \n                \n                        Defined in         AbstractFormControl:31\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            _defaultErrMsg\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         ErrorMessage\n\n                        \n                    \n                    \n                        \n                            Default value : {\n    required: `${LabelReplacementTag} is required.`\n  }\n                        \n                    \n                        \n                            \n                                    Defined in projects/common/lib/components/radio/radio.component.ts:55\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            _value\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                    \n                        \n                            Default value : ''\n                        \n                    \n                        \n                            \n                                    Defined in projects/common/lib/components/radio/radio.component.ts:54\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            controlDir\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         NgControl\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Optional()@Self()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in projects/common/lib/components/radio/radio.component.ts:78\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Abstract\n                            _defaultErrMsg\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         ErrorMessage\n\n                        \n                    \n                    \n                        \n                            Default value : {}\n                        \n                    \n                            \n                                \n                                    Inherited from         AbstractFormControl\n\n                                \n                            \n                        \n                            \n                                    Defined in         AbstractFormControl:10\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            _onChange\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : () => {...}\n                        \n                    \n                            \n                                \n                                    Inherited from         AbstractFormControl\n\n                                \n                            \n                        \n                            \n                                    Defined in         AbstractFormControl:22\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            _onTouched\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : () => {...}\n                        \n                    \n                            \n                                \n                                    Inherited from         AbstractFormControl\n\n                                \n                            \n                        \n                            \n                                    Defined in         AbstractFormControl:23\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            objectId\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : UUID.UUID()\n                        \n                    \n                            \n                                \n                                    Inherited from         Base\n\n                                \n                            \n                        \n                            \n                                    Defined in         Base:11\n\n                            \n                        \n\n                \n                    \n                        An identifier for parents to keep track of components \n\n                    \n                \n\n            \n        \n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        value\n                    \n                \n\n                \n                    \n                        getvalue()\n                    \n                \n                            \n                                \n                                    Defined in projects/common/lib/components/radio/radio.component.ts:69\n                                \n                            \n\n                \n                    \n                        setvalue(val: string)\n                    \n                \n                            \n                                \n                                    Defined in projects/common/lib/components/radio/radio.component.ts:66\n                                \n                            \n                    \n                        \n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                        Type\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                            val\n                                                    \n                                                            \n                                                                            string\n                                                            \n                                                    \n                                                        \n                                                                No\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :         void\n\n                                \n                        \n                    \n            \n        \n\n\n\n\n    \n        import {Component, EventEmitter, Input, Output, Optional, Self, OnInit} from '@angular/core';\nimport { AbstractFormControl } from '../../models/abstract-form-control';\nimport { LabelReplacementTag, ErrorMessage } from '../../models/error-message.interface';\nimport { NgControl } from '@angular/forms';\n\n/**\n * RadioComponent is a single radio which can be used to have multiple radios\n * based on the radio label values.\n *\n * To display radio in a vertical style use display=\"table-row-group\" by default\n * it shows in horizontal or inline display, display='inline-block' You can\n * have many radio's and the number is based on the Radio label Value. For 3\n * radio buttons, radioLabels value is of type IRadioItems[].\n*\n * @example\n *        \n *        \n *\n *  Reactive Form\n *        \n *        \n *\n *  Template Form\n *        \n *        \n *\n * @export\n *\n */\nexport interface IRadioItems {\n  label: string;\n  value: any;\n  // TODO: Make value generic \n}\n@Component({\n  selector: 'common-radio',\n  templateUrl: './radio.component.html',\n  styleUrls: ['./radio.component.scss']\n})\nexport class RadioComponent extends AbstractFormControl implements OnInit {\n\n  _value: any = '';\n  _defaultErrMsg: ErrorMessage = {\n    required: `${LabelReplacementTag} is required.`\n  };\n\n  @Input() radioLabels: IRadioItems[] = [\n    {label: 'No', value: false},\n    {label: 'Yes', value: true}\n  ];\n\n  @Input() label: string;\n  @Input()\n  set value( val: string ) {\n    this._value = val;\n  }\n  get value() {\n    return this._value;\n  }\n\n  @Input() display: 'table-row-group' | 'inline-block'  = 'inline-block';\n  @Input() instructionText: string;\n\n  @Output() valueChange: EventEmitter = new EventEmitter();\n\n  constructor( @Optional() @Self() public controlDir: NgControl ) {\n    super();\n    if ( controlDir ) {\n      controlDir.valueAccessor = this;\n    }\n  }\n\n  ngOnInit() {\n    super.ngOnInit();\n  }\n\n  setStatus(val: any) {\n    this._value = val;\n\n    this._onChange(val);\n    this._onTouched();\n    this.valueChange.emit(val);\n  }\n\n  registerOnChange(fn: any): void {\n    this._onChange = fn;\n  }\n\n  registerOnTouched(fn: any): void {\n    this._onTouched = fn;\n  }\n\n  writeValue(value: any): void {\n    this._value = value;\n  }\n}\n\n    \n\n    \n        \n  {{label}}\n  {{instructionText}}\n  \n    \n      \n      \n      {{val.label}}\n      \n    \n  \n\n  \n    {{_defaultErrMsg.required}}\n  \n\n\n\n\n  \n    \n  \n\n\n\n    \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  {{label}}  {{instructionText}}                        {{val.label}}                  {{_defaultErrMsg.required}}              '\n    var COMPONENTS = [{'name': 'AccordionCommonComponent', 'selector': 'common-accordion'},{'name': 'AddressComponent', 'selector': 'common-address'},{'name': 'ButtonComponent', 'selector': 'common-button'},{'name': 'ButtonGroupComponent', 'selector': 'common-button-group'},{'name': 'CaptchaComponent', 'selector': 'common-captcha'},{'name': 'CheckboxComponent', 'selector': 'common-checkbox'},{'name': 'CityComponent', 'selector': 'common-city'},{'name': 'ConfirmTemplateComponent', 'selector': 'common-confirm-template'},{'name': 'ConsentModalComponent', 'selector': 'common-consent-modal'},{'name': 'CoreBreadcrumbComponent', 'selector': 'common-core-breadcrumb'},{'name': 'CountryComponent', 'selector': 'common-country'},{'name': 'DateComponent', 'selector': 'common-date'},{'name': 'DatepickerComponent', 'selector': 'common-datepicker'},{'name': 'DropdownComponent', 'selector': 'common-dropdown'},{'name': 'EmailComponent', 'selector': 'common-email'},{'name': 'ErrorContainerComponent', 'selector': 'common-error-container'},{'name': 'FileUploaderComponent', 'selector': 'common-file-uploader'},{'name': 'FormActionBarComponent', 'selector': 'common-form-action-bar'},{'name': 'FormSubmitBarComponent', 'selector': 'common-form-submit-bar'},{'name': 'FullNameComponent', 'selector': 'common-full-name'},{'name': 'GeocoderInputComponent', 'selector': 'common-geocoder-input'},{'name': 'HeaderComponent', 'selector': 'common-header'},{'name': 'NameComponent', 'selector': 'common-name'},{'name': 'PageFrameworkComponent', 'selector': 'common-page-framework'},{'name': 'PageSectionComponent', 'selector': 'common-page-section'},{'name': 'PasswordComponent', 'selector': 'common-password'},{'name': 'PhnComponent', 'selector': 'common-phn'},{'name': 'PhoneNumberComponent', 'selector': 'common-phone-number'},{'name': 'PostalCodeComponent', 'selector': 'common-postal-code'},{'name': 'ProvinceComponent', 'selector': 'common-province'},{'name': 'RadioComponent', 'selector': 'common-radio'},{'name': 'SampleModalComponent', 'selector': 'common-sample-modal'},{'name': 'SinComponent', 'selector': 'common-sin'},{'name': 'StreetComponent', 'selector': 'common-street'},{'name': 'ThumbnailComponent', 'selector': 'common-thumbnail'},{'name': 'ToggleComponent', 'selector': 'common-toggle'},{'name': 'WizardProgressBarComponent', 'selector': 'common-wizard-progress-bar'},{'name': 'XiconButtonComponent', 'selector': 'common-xicon-button'}];\n    var DIRECTIVES = [{'name': 'DateFieldFormatDirective', 'selector': '[commonDateFieldFormat]'},{'name': 'DuplicateCheckDirective', 'selector': '[commonDuplicateCheck]'},{'name': 'ValidateBcPostalDirective', 'selector': '[commonValidateBcPostal]'},{'name': 'ValidateCityDirective', 'selector': '[commonValidateCity]'},{'name': 'ValidateNameDirective', 'selector': '[commonValidateName]'},{'name': 'ValidatePostalcodeDirective', 'selector': '[commonValidatePostalcode]'},{'name': 'ValidateRegionDirective', 'selector': '[commonValidateRegion]'},{'name': 'ValidateStreetDirective', 'selector': '[commonValidateStreet]'}];\n    var ACTUAL_COMPONENT = {'name': 'RadioComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ReadOnlyFields.html":{"url":"interfaces/ReadOnlyFields.html","title":"interface - ReadOnlyFields","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  ReadOnlyFields\n\n\n\n        \n            Info\n        \n        \n            Design Guidelines\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/common/lib/components/address/address.component.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        address\n                                \n                                \n                                            Optional\n                                        city\n                                \n                                \n                                            Optional\n                                        country\n                                \n                                \n                                            Optional\n                                        postalCode\n                                \n                                \n                                            Optional\n                                        province\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        address\n                                    \n                                \n                                \n                                    \n                                        address:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        city\n                                    \n                                \n                                \n                                    \n                                        city:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        country\n                                    \n                                \n                                \n                                    \n                                        country:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        postalCode\n                                    \n                                \n                                \n                                    \n                                        postalCode:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        province\n                                    \n                                \n                                \n                                    \n                                        province:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n    \n        Design Guidelines\ntodo\n\n    \n\n    \n        import {\n  Component,\n  Input,\n  Output,\n  EventEmitter,\n  OnChanges,\n  forwardRef,\n  OnInit\n} from '@angular/core';\nimport { ControlContainer, ControlValueAccessor, NgForm, NG_VALUE_ACCESSOR } from '@angular/forms';\nimport { Base } from '../../models/base';\nimport { GeoAddressResult } from '../../services/geocoder.service';\nimport { Address } from '../../models/address.model';\nimport { CountryList, CANADA, UNITED_STATES, COUNTRY_LIST } from '../country/country.component';\nimport { ProvinceList, BRITISH_COLUMBIA, PROVINCE_LIST } from '../province/province.component';\n\nexport interface AddrLabelList {\n  address1?: string;\n  address2?: string;\n  address3?: string;\n  city?: string;\n  province?: string;\n  country?: string;\n  postalCode?: string;\n}\n\nexport interface Maxlengths {\n  address?: string;\n  city?: string;\n  province?: string;\n  country?: string;\n  postalCode?: string;\n}\n\nexport interface ReadOnlyFields {\n  address?: boolean;\n  city?: boolean;\n  province?: boolean;\n  country?: boolean;\n  postalCode?: boolean;\n}\n\n/**\n *\n * Note - This component REQUIRES that `HttpClientModule` is registered in your NgModule.\n */\n@Component({\n  selector: 'common-address',\n  templateUrl: './address.component.html',\n  styleUrls: ['./address.component.scss'],\n  /* Re-use the same ngForm that it's parent is using. The component will show\n   * up in its parents `this.form`, and will auto-update `this.form.valid`\n   */\n  viewProviders: [\n    { provide: ControlContainer, useExisting: forwardRef(() => NgForm) }\n  ],\n  providers: [\n    { provide: NG_VALUE_ACCESSOR, useExisting: forwardRef(() => AddressComponent) }\n  ]\n})\nexport class AddressComponent extends Base\n  implements OnInit, OnChanges, ControlValueAccessor {\n\n  /* Disable all fields by sending in boolean,\n   * disable specific fields by sending in ReadOnlyFields structure\n   */\n  @Input() disabled: boolean | ReadOnlyFields = false;\n  @Input() isRequired: boolean = false;\n  @Input() countryList: CountryList[] = COUNTRY_LIST;\n  @Input() defaultCountry: string = CANADA;\n  @Input() provinceList: ProvinceList[] = PROVINCE_LIST;\n  @Input() defaultProvince: string = BRITISH_COLUMBIA;\n  @Input() disableGeocoder: boolean = false;\n  @Input() labels: AddrLabelList;\n  @Input() maxlengths: Maxlengths;\n  @Input() bcOnly: boolean = false;\n\n  @Input()\n  set address(val: Address) {\n    if (val) {\n      this.addr = val;\n    }\n  }\n  get address(): Address {\n    return this.addr;\n  }\n\n  @Output() addressChange: EventEmitter = new EventEmitter();\n  /**\n   * If true, adds a plus icon next to street and enables users to add a second\n   * address line.  This value binds to `address.addressLine2`\n   */\n  @Input() allowExtralines: boolean = false;\n\n  addr: Address;\n  provList: ProvinceList[];\n  showLine2 = false;\n  showLine3 = false;\n\n  // Labels defaulted to MSP\n  addrLabels: AddrLabelList =  {\n    address1: 'Full street address, rural route, PO box or general delivery',\n    address2: 'Address Line 2',\n    address3: 'Address Line 3',\n    city: 'City',\n    province: 'Province or state',\n    country: 'Country',\n    postalCode: 'Postal Code or Zip Code'\n  };\n\n  // Lengths defaulted to MSP\n  fieldMaxLenghts: Maxlengths = {\n    address: '25',\n    city: '25',\n    province: '25',\n    country: '250',\n    postalCode: '25'\n  };\n\n  readOnlyFields: ReadOnlyFields = {\n    address: false,\n    city: false,\n    province: false,\n    country: false,\n    postalCode: false,\n  };\n\n  _onChange = (_: any) => { };\n  _onTouched = (_: any) => { };\n\n  constructor() {\n    super();\n  }\n\n  ngOnInit() {\n\n    // console.log( 'address: ', this.bcOnly );\n\n    this.setLabels();\n    this.setMaxlengths();\n    this.setReadOnlyFields();\n\n    if (this.addr) {\n\n      if (!this.addr.country) {\n        this.addr.country = this.setDefaultCountryAsOption();\n      } else {\n        // If string for country submitted, need to find code to display value in select box\n        this.addr.country = this.findCountryCode( this.addr.country );\n      }\n\n      if (!this.addr.province) {\n        this.addr.province = this.setDefaultProvinceAsOption(this.addr.country);\n      }\n\n      // Make sure addressLine2 is visible if there is data persisted to display there.\n      if (this.allowExtralines) {\n        if (this.addr.addressLine2) {\n          this.addLine(2);\n        }\n\n        if (this.addr.addressLine3) {\n          this.addLine(3);\n        }\n      }\n    }\n\n    this.updateProvList();\n  }\n\n  /**\n   * Set country province blank\n   * @param value\n   */\n  setCountry(value: string) {\n    this.addr.province = this.setDefaultProvinceAsOption( value );\n    this.addr.country = value;\n    this.updateProvList();\n\n   if ( this.isCanada() ) {\n      // If Canada, clear postal code to display mask\n      this.addr.postal = '';\n    }\n\n    this._onChange(this.addr);\n    this.addressChange.emit(this.addr);\n    this._onTouched(this.addr);\n  }\n\n  setProvince(value: string) {\n    this.addr.province = value;\n    this._onChange(this.addr);\n    this.addressChange.emit(this.addr);\n    this._onTouched(this.addr);\n  }\n\n  setStreetAddress(value: string) {\n    this.addr.addressLine1 = value;\n    this._onChange(this.addr);\n    this.addressChange.emit(this.addr);\n    this._onTouched(this.addr);\n  }\n\n  setCity(value: string) {\n    this.addr.city = value;\n    this._onChange(this.addr);\n    this.addressChange.emit(this.addr);\n    this._onTouched(this.addr);\n  }\n\n  /**\n   * Sets string after converted upper case\n   * @param text\n   */\n  setPostalCode(value: string) {\n    this.addr.postal = value;\n    this._onChange(this.addr);\n    this.addressChange.emit(this.addr);\n    this._onTouched(this.addr);\n  }\n\n  isCanada(): boolean {\n    return this.addr && CANADA === this.addr.country;\n  }\n\n  ngOnChanges(changes) {\n    if (changes['countryList'] && changes['countryList'].currentValue) {\n\n      if (this.addr && !this.addr.country) {\n        // Set defaults\n        this.addr.country = this.setDefaultCountryAsOption();\n\n        // Set defaults\n        this.addr.province = this.setDefaultProvinceAsOption(this.addr.country);\n      }\n      this.updateProvList();\n    }\n    if (changes['provinceList'] && changes['provinceList'].currentValue) {\n      if (this.addr && !this.addr.province) {\n        // Set defaults\n        this.addr.province = this.setDefaultProvinceAsOption(this.addr.country);\n      }\n      this.updateProvList();\n    }\n  }\n\n  addLine(line: 2 | 3 = null) {\n\n    // Add lines in order\n    if (line === null) {\n      if (!this.showLine2) {\n        this.showLine2 = true;\n      } else if (!this.showLine3) {\n        this.showLine3 = true;\n      }\n    } else {\n      // Add specific line number\n      const lookup = `showLine${line}`;\n      this[lookup] = true;\n    }\n  }\n\n  removeLine(line: 2 | 3) {\n    // We can remove lines in any order, depending on user input\n    // Dynamically lookup variable based on line number input.\n    const lookup = `showLine${line}`;\n    this[lookup] = false;\n\n    // TODO - Need to clear the data in the appropriate field, just null/undefined it out.\n    const addrLookup = `addressLine${line}`;\n    this.address[addrLookup] = undefined;\n  }\n\n  /**\n   * Updates the provList variable. Values must be stored in a variable and not\n   * accessed via function invocation for performance.\n   */\n  private updateProvList() {\n    if (!this.provinceList) { return; } // When data is async and hasn't loaded\n    this.provList = this.provinceList\n      .map(prov => {\n        if (prov.country === this.addr.country) {\n          return prov;\n        }\n      })\n      .filter(x => x);\n  }\n\n  /**\n   * Sets the default province option value\n   */\n  private setDefaultProvinceAsOption(country: string): string {\n    const provObj = !this.provinceList ? null : this.provinceList.find(\n      val => (val.provinceCode === this.defaultProvince ||\n        val.description === this.defaultProvince) &&\n        val.country === country\n    );\n    return (provObj ? provObj.provinceCode : '');\n  }\n\n  private findProvinceDescription(prov: string): string {\n    const provObj = !this.provinceList ? null : this.provinceList.find(\n      val => val.provinceCode === prov ||\n        val.description === prov\n    );\n    return (provObj ? provObj.description : null);\n  }\n\n  /**\n   * Set country to default\n   * Search uses country code or country name to find item is list.\n   */\n  private setDefaultCountryAsOption(): string {\n    return this.findCountryCode( this.defaultCountry );\n  }\n\n  private findCountryCode( country: string ): string {\n    const countryObj = !this.countryList\n      ? null\n      : this.countryList.find(\n        val =>\n          val.countryCode === country ||\n          val.description === country\n      );\n    return countryObj ? countryObj.countryCode : null;\n  }\n\n  // GeoCoder\n\n  /**\n   * GeoCoder only is applicable when address is BC, Canada.\n   */\n  useGeoCoder(): boolean {\n    if (this.disableGeocoder) {\n      return false;\n    }\n    return this.isCanada() && BRITISH_COLUMBIA === this.addr.province;\n  }\n\n  // Only BC addresses therefore no need to copy province into structure.\n  setAddress(data: GeoAddressResult) {\n    this.addr.addressLine1 = data.street;\n    this.addr.city = data.city;\n    this.addr.province = data.province;\n    this.addr.country = data.country;\n    this.addressChange.emit(this.addr);\n  }\n\n  writeValue( value: Address) {\n    if ( value ) {\n      this.addr = value;\n    }\n  }\n\n  registerOnChange(fn: any): void {\n    this._onChange = fn;\n  }\n\n  registerOnTouched(fn: any): void {\n    this._onTouched = fn;\n  }\n\n  setDisabledState(isDisabled: boolean): void {\n    this.disabled = isDisabled;\n    this.setReadOnlyFields();\n  }\n\n  private setLabels() {\n    if ( this.labels ) {\n      Object.keys(this.labels).map( x => this.addrLabels[x] = this.labels[x] );\n    }\n  }\n\n  private setMaxlengths() {\n    if ( this.maxlengths ) {\n      Object.keys(this.fieldMaxLenghts).map( x => this.maxlengths[x] = this.fieldMaxLenghts[x]);\n    }\n  }\n\n  private setReadOnlyFields() {\n    if ( typeof this.disabled === 'boolean' ) {\n      Object.keys(this.readOnlyFields).map( x => this.readOnlyFields[x] = this.disabled );\n    } else {\n      Object.keys(this.disabled).map( x => this.readOnlyFields[x] = this.disabled[x] );\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"guards/RouteGuardService.html":{"url":"guards/RouteGuardService.html","title":"guard - RouteGuardService","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n    Guards\n    RouteGuardService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n        \n            \n            File\n            \n            \n                projects/common/lib/services/route-guard.service.ts\n            \n\n\n\n\n                \n                Example\n                \n                \n                            \n                                //STEP 2 + STEP 3\n//registration.module.ts\nproviders: [\n...\n{ provide: AbstractPgCheckService, useExisting: RegistrationService },\nRouteGuardService\n]\n\n\n//STEP 4\n//registration-routing.modle.ts\nconst routes: Routes = [{\npath: '',\ncanActivateChild: [RouteGuardService] //or canActivate\n}\n...\n]\n\n\n//STEP 5\n//example.component.ts\nngOnInit() { this.setPageIncomplete(); }\ncontinue() { this.setPageComplete(); }\n                            \n                \n\n                \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                _continue\n                            \n                            \n                                canActivate\n                            \n                            \n                                canActivateChild\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n                \n    Constructor\n        \n            \n                \n                    \nconstructor(router: Router, service: AbstractPgCheckService)\n                    \n                \n                        \n                            \n                                Defined in projects/common/lib/services/route-guard.service.ts:53\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        service\n                                                  \n                                                        \n                                                                        AbstractPgCheckService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n                \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            _continue\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    _continue(pageUrl: string)\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/services/route-guard.service.ts:74\n                \n            \n\n\n            \n                \n                    Logic to determine whether or not allow to continue to next page \n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    pageUrl\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            canActivate\n                        \n                        \n                    \n                \n            \n            \n                \ncanActivate(route: ActivatedRouteSnapshot, state: RouterStateSnapshot)\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/services/route-guard.service.ts:59\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    route\n                                    \n                                                ActivatedRouteSnapshot\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    state\n                                    \n                                                RouterStateSnapshot\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable | Promise | boolean | UrlTree\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            canActivateChild\n                        \n                        \n                    \n                \n            \n            \n                \ncanActivateChild(next: ActivatedRouteSnapshot, state: RouterStateSnapshot)\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/services/route-guard.service.ts:67\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    next\n                                    \n                                                ActivatedRouteSnapshot\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    state\n                                    \n                                                RouterStateSnapshot\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable | Promise | boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n        \n\n\n        \n            import { Injectable, InjectionToken, Injector } from '@angular/core';\nimport { CanActivateChild, Router, ActivatedRouteSnapshot, RouterStateSnapshot, UrlTree, CanActivate } from '@angular/router';\nimport { Observable } from 'rxjs';\nimport { AbstractPgCheckService } from './abstract-pg-check.service';\n\n/**\n * @deprecated\n * Use this service to implement Route Guards in your application. This is for a\n * typical form flow, where the user must proceed sequentially from one page to\n * the next.\n *\n * To setup, you must:\n *\n * 1. Create a service implementing the abstract methods in `AbstractPgService` (\"RegistrationService\")\n * 2. Setup AbstractPgCheckService in NgModule providers, to `useExisting` the service from previous step.\n * 3. Add this RouteGuardService to same providers from previous step.\n * 4. Configure routes to use RouteGuardService - `canActivate` or `canActivateChild`\n * 5. Have each \"page\" in the form call `setPageIncomplete()` or `setPageComplete()` (from the \"RegistrationService\")\n *\n *\n * You must make sure to setup AbstractPgCheckService in NgModules correctly.\n *\n *  @example\n *                //STEP 2 + STEP 3\n *                //registration.module.ts\n *                providers: [\n *                        ...\n *                        { provide: AbstractPgCheckService, useExisting: RegistrationService },\n *                        RouteGuardService\n *                ]\n *\n *\n *                //STEP 4\n *                //registration-routing.modle.ts\n *                const routes: Routes = [{\n *                   path: '',\n *                   canActivateChild: [RouteGuardService] //or canActivate\n *                  }\n *                   ...\n *                ]\n *\n *\n *                //STEP 5\n *                //example.component.ts\n *                ngOnInit() { this.setPageIncomplete(); }\n *                continue() { this.setPageComplete(); }\n *\n *\n */\n@Injectable({\n  providedIn: 'root'\n})\nexport class RouteGuardService implements CanActivate, CanActivateChild {\n\n  constructor(private router: Router,\n    private service: AbstractPgCheckService) {\n  }\n\n  canActivate(\n    route: ActivatedRouteSnapshot,\n    state: RouterStateSnapshot\n  ): Observable | Promise | boolean | UrlTree {\n\n    return this._continue(state.url);\n  }\n\n  canActivateChild(\n    next: ActivatedRouteSnapshot,\n    state: RouterStateSnapshot): Observable | Promise | boolean {\n    return this._continue(state.url);\n  }\n\n  /** Logic to determine whether or not allow to continue to next page */\n  private _continue(pageUrl: string): boolean {\n\n    if (this.service.canBypassGuards()) {\n      return true;\n    }\n\n    /**\n     * Pre-requisite has not be completed\n     */\n    if (false === this.service.isPrerequisiteComplete()) {\n      this.router.navigate([this.service.getStartUrl()]);\n      return false;\n    }\n\n    if (false === this.service.isPageComplete(pageUrl)) {\n      return false;\n    }\n\n    return true;\n  }\n}\n\n\n        \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/SampleImageInterface.html":{"url":"interfaces/SampleImageInterface.html","title":"interface - SampleImageInterface","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  SampleImageInterface\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/common/lib/components/sample-modal/sample-modal.component.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        desc\n                                \n                                \n                                        path\n                                \n                                \n                                            Optional\n                                        title\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        desc\n                                    \n                                \n                                \n                                    \n                                        desc:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        path\n                                    \n                                \n                                \n                                    \n                                        path:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        title\n                                    \n                                \n                                \n                                    \n                                        title:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import {Component, Input, ViewChild} from '@angular/core';\nimport {ModalDirective} from 'ngx-bootstrap';\nimport { Base } from '../../models/base';\n\nexport interface SampleImageInterface {\n  path: string;\n  desc: string;\n  title?: string;\n}\n\n@Component({\n  selector: 'common-sample-modal',\n  templateUrl: './sample-modal.component.html',\n  styleUrls: ['./sample-modal.component.scss']\n})\nexport class SampleModalComponent extends Base {\n\n  @Input() title: string;\n  @Input() images: SampleImageInterface[] = [];\n\n  @ViewChild('samplesModal') public sampleModal: ModalDirective;\n\n  constructor() {\n    super();\n  }\n\n  public openModal(): void {\n    this.sampleModal.show();\n  }\n\n  public closeModal(): void {\n    this.sampleModal.hide();\n  }\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/SampleModalComponent.html":{"url":"components/SampleModalComponent.html","title":"component - SampleModalComponent","body":"\n                   \n\n\n\n\n\n  Components\n  SampleModalComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    projects/common/lib/components/sample-modal/sample-modal.component.ts\n\n\n\n    \n        Extends\n    \n    \n                Base\n    \n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                common-sample-modal\n            \n\n            \n                styleUrls\n                ./sample-modal.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./sample-modal.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                sampleModal\n                            \n                            \n                                    Public\n                                objectId\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                closeModal\n                            \n                            \n                                    Public\n                                openModal\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                images\n                            \n                            \n                                title\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in projects/common/lib/components/sample-modal/sample-modal.component.ts:21\n                            \n                        \n\n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        images\n                    \n                \n                \n                    \n                        Type :         SampleImageInterface[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/sample-modal/sample-modal.component.ts:19\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        title\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/sample-modal/sample-modal.component.ts:18\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            closeModal\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    closeModal()\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/components/sample-modal/sample-modal.component.ts:31\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            openModal\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    openModal()\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/components/sample-modal/sample-modal.component.ts:27\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            sampleModal\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     ModalDirective\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ViewChild('samplesModal')\n                            \n                        \n                    \n                        \n                            \n                                    Defined in projects/common/lib/components/sample-modal/sample-modal.component.ts:21\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            objectId\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : UUID.UUID()\n                        \n                    \n                            \n                                \n                                    Inherited from         Base\n\n                                \n                            \n                        \n                            \n                                    Defined in         Base:11\n\n                            \n                        \n\n                \n                    \n                        An identifier for parents to keep track of components \n\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import {Component, Input, ViewChild} from '@angular/core';\nimport {ModalDirective} from 'ngx-bootstrap';\nimport { Base } from '../../models/base';\n\nexport interface SampleImageInterface {\n  path: string;\n  desc: string;\n  title?: string;\n}\n\n@Component({\n  selector: 'common-sample-modal',\n  templateUrl: './sample-modal.component.html',\n  styleUrls: ['./sample-modal.component.scss']\n})\nexport class SampleModalComponent extends Base {\n\n  @Input() title: string;\n  @Input() images: SampleImageInterface[] = [];\n\n  @ViewChild('samplesModal') public sampleModal: ModalDirective;\n\n  constructor() {\n    super();\n  }\n\n  public openModal(): void {\n    this.sampleModal.show();\n  }\n\n  public closeModal(): void {\n    this.sampleModal.hide();\n  }\n}\n\n    \n\n    \n        \n  \n    \n      \n        {{title}}\n        \n          \n        \n      \n\n      \n        \n          {{image.title}}\n          \n        \n      \n\n      \n        Close\n      \n\n    \n  \n\n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                    {{title}}                                                        {{image.title}}                                      Close            '\n    var COMPONENTS = [{'name': 'AccordionCommonComponent', 'selector': 'common-accordion'},{'name': 'AddressComponent', 'selector': 'common-address'},{'name': 'ButtonComponent', 'selector': 'common-button'},{'name': 'ButtonGroupComponent', 'selector': 'common-button-group'},{'name': 'CaptchaComponent', 'selector': 'common-captcha'},{'name': 'CheckboxComponent', 'selector': 'common-checkbox'},{'name': 'CityComponent', 'selector': 'common-city'},{'name': 'ConfirmTemplateComponent', 'selector': 'common-confirm-template'},{'name': 'ConsentModalComponent', 'selector': 'common-consent-modal'},{'name': 'CoreBreadcrumbComponent', 'selector': 'common-core-breadcrumb'},{'name': 'CountryComponent', 'selector': 'common-country'},{'name': 'DateComponent', 'selector': 'common-date'},{'name': 'DatepickerComponent', 'selector': 'common-datepicker'},{'name': 'DropdownComponent', 'selector': 'common-dropdown'},{'name': 'EmailComponent', 'selector': 'common-email'},{'name': 'ErrorContainerComponent', 'selector': 'common-error-container'},{'name': 'FileUploaderComponent', 'selector': 'common-file-uploader'},{'name': 'FormActionBarComponent', 'selector': 'common-form-action-bar'},{'name': 'FormSubmitBarComponent', 'selector': 'common-form-submit-bar'},{'name': 'FullNameComponent', 'selector': 'common-full-name'},{'name': 'GeocoderInputComponent', 'selector': 'common-geocoder-input'},{'name': 'HeaderComponent', 'selector': 'common-header'},{'name': 'NameComponent', 'selector': 'common-name'},{'name': 'PageFrameworkComponent', 'selector': 'common-page-framework'},{'name': 'PageSectionComponent', 'selector': 'common-page-section'},{'name': 'PasswordComponent', 'selector': 'common-password'},{'name': 'PhnComponent', 'selector': 'common-phn'},{'name': 'PhoneNumberComponent', 'selector': 'common-phone-number'},{'name': 'PostalCodeComponent', 'selector': 'common-postal-code'},{'name': 'ProvinceComponent', 'selector': 'common-province'},{'name': 'RadioComponent', 'selector': 'common-radio'},{'name': 'SampleModalComponent', 'selector': 'common-sample-modal'},{'name': 'SinComponent', 'selector': 'common-sin'},{'name': 'StreetComponent', 'selector': 'common-street'},{'name': 'ThumbnailComponent', 'selector': 'common-thumbnail'},{'name': 'ToggleComponent', 'selector': 'common-toggle'},{'name': 'WizardProgressBarComponent', 'selector': 'common-wizard-progress-bar'},{'name': 'XiconButtonComponent', 'selector': 'common-xicon-button'}];\n    var DIRECTIVES = [{'name': 'DateFieldFormatDirective', 'selector': '[commonDateFieldFormat]'},{'name': 'DuplicateCheckDirective', 'selector': '[commonDuplicateCheck]'},{'name': 'ValidateBcPostalDirective', 'selector': '[commonValidateBcPostal]'},{'name': 'ValidateCityDirective', 'selector': '[commonValidateCity]'},{'name': 'ValidateNameDirective', 'selector': '[commonValidateName]'},{'name': 'ValidatePostalcodeDirective', 'selector': '[commonValidatePostalcode]'},{'name': 'ValidateRegionDirective', 'selector': '[commonValidateRegion]'},{'name': 'ValidateStreetDirective', 'selector': '[commonValidateStreet]'}];\n    var ACTUAL_COMPONENT = {'name': 'SampleModalComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ServerPayload.html":{"url":"injectables/ServerPayload.html","title":"injectable - ServerPayload","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  ServerPayload\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/common/captcha/src/captcha-data.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                captcha\n                            \n                            \n                                expiry\n                            \n                            \n                                nonce\n                            \n                            \n                                validation\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            captcha\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/common/captcha/src/captcha-data.service.ts:10\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            expiry\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/common/captcha/src/captcha-data.service.ts:12\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            nonce\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/common/captcha/src/captcha-data.service.ts:9\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            validation\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/common/captcha/src/captcha-data.service.ts:11\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { HttpClient, HttpResponse } from '@angular/common/http';\n// import { Http, Response } from '@angular/http';\nimport { Observable } from 'rxjs';\n\n// payload returned from the server\n@Injectable()\nexport class ServerPayload {\n    nonce: string;\n    captcha: string;\n    validation: string;\n    expiry: string;\n}\n\n@Injectable()\nexport class CaptchaDataService {\n\n    constructor(private httpClient: HttpClient) { }\n    // private http: Http) { }\n\n    public fetchData(apiBaseUrl: string, nonce: string): Observable> {\n        return this.httpClient\n            .post(\n                apiBaseUrl + '/captcha',\n                { nonce: nonce },\n                { observe: 'response' });\n    }\n\n    public verifyCaptcha(apiBaseUrl: string,\n                            nonce: string,\n                            answer: string,\n                            encryptedAnswer: string): Observable> {\n        return this.httpClient\n            .post(\n                apiBaseUrl + '/verify/captcha',\n                { nonce: nonce, answer: answer, validation: encryptedAnswer },\n                { observe: 'response' });\n    }\n\n    public fetchAudio(apiBaseUrl: string, validation: string, translation?: string) {\n        const payload: any = { validation: validation };\n        if (translation) {\n            payload.translation = translation;\n        }\n        return this.httpClient\n            .post(\n                apiBaseUrl + '/captcha/audio',\n                payload,\n                { observe: 'response' });\n    }\n    /*\n      fetchData(apiBaseUrl: string, nonce: string): Observable {\n        return this.http.post(apiBaseUrl + '/captcha', {nonce: nonce}, {});\n      }\n\n      verifyCaptcha(apiBaseUrl: string, nonce: string, answer: string, encryptedAnswer: string): Observable {\n        return this.http.post(apiBaseUrl + '/verify/captcha', {nonce: nonce, answer: answer, validation: encryptedAnswer}, {});\n      }\n\n      fetchAudio(apiBaseUrl: string, validation: string): Observable {\n        return this.http.post(apiBaseUrl + '/captcha/audio', {validation: validation}, {});\n      }\n    */\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/SharedCoreModule.html":{"url":"modules/SharedCoreModule.html","title":"module - SharedCoreModule","body":"\n                   \n\n\n\n\n    Modules\n    SharedCoreModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_SharedCoreModule\n\n\n\ncluster_SharedCoreModule_declarations\n\n\n\ncluster_SharedCoreModule_exports\n\n\n\n\nAccordionCommonComponent\n\nAccordionCommonComponent\n\n\n\nSharedCoreModule\n\nSharedCoreModule\n\nSharedCoreModule -->\n\nAccordionCommonComponent->SharedCoreModule\n\n\n\n\n\nAddressComponent\n\nAddressComponent\n\nSharedCoreModule -->\n\nAddressComponent->SharedCoreModule\n\n\n\n\n\nButtonComponent\n\nButtonComponent\n\nSharedCoreModule -->\n\nButtonComponent->SharedCoreModule\n\n\n\n\n\nButtonGroupComponent\n\nButtonGroupComponent\n\nSharedCoreModule -->\n\nButtonGroupComponent->SharedCoreModule\n\n\n\n\n\nCheckboxComponent\n\nCheckboxComponent\n\nSharedCoreModule -->\n\nCheckboxComponent->SharedCoreModule\n\n\n\n\n\nCityComponent\n\nCityComponent\n\nSharedCoreModule -->\n\nCityComponent->SharedCoreModule\n\n\n\n\n\nConfirmTemplateComponent\n\nConfirmTemplateComponent\n\nSharedCoreModule -->\n\nConfirmTemplateComponent->SharedCoreModule\n\n\n\n\n\nConsentModalComponent\n\nConsentModalComponent\n\nSharedCoreModule -->\n\nConsentModalComponent->SharedCoreModule\n\n\n\n\n\nCoreBreadcrumbComponent\n\nCoreBreadcrumbComponent\n\nSharedCoreModule -->\n\nCoreBreadcrumbComponent->SharedCoreModule\n\n\n\n\n\nCountryComponent\n\nCountryComponent\n\nSharedCoreModule -->\n\nCountryComponent->SharedCoreModule\n\n\n\n\n\nDateComponent\n\nDateComponent\n\nSharedCoreModule -->\n\nDateComponent->SharedCoreModule\n\n\n\n\n\nDateFieldFormatDirective\n\nDateFieldFormatDirective\n\nSharedCoreModule -->\n\nDateFieldFormatDirective->SharedCoreModule\n\n\n\n\n\nDatepickerComponent\n\nDatepickerComponent\n\nSharedCoreModule -->\n\nDatepickerComponent->SharedCoreModule\n\n\n\n\n\nDropdownComponent\n\nDropdownComponent\n\nSharedCoreModule -->\n\nDropdownComponent->SharedCoreModule\n\n\n\n\n\nDuplicateCheckDirective\n\nDuplicateCheckDirective\n\nSharedCoreModule -->\n\nDuplicateCheckDirective->SharedCoreModule\n\n\n\n\n\nEmailComponent\n\nEmailComponent\n\nSharedCoreModule -->\n\nEmailComponent->SharedCoreModule\n\n\n\n\n\nErrorContainerComponent\n\nErrorContainerComponent\n\nSharedCoreModule -->\n\nErrorContainerComponent->SharedCoreModule\n\n\n\n\n\nFileUploaderComponent\n\nFileUploaderComponent\n\nSharedCoreModule -->\n\nFileUploaderComponent->SharedCoreModule\n\n\n\n\n\nFormActionBarComponent\n\nFormActionBarComponent\n\nSharedCoreModule -->\n\nFormActionBarComponent->SharedCoreModule\n\n\n\n\n\nFormSubmitBarComponent\n\nFormSubmitBarComponent\n\nSharedCoreModule -->\n\nFormSubmitBarComponent->SharedCoreModule\n\n\n\n\n\nFullNameComponent\n\nFullNameComponent\n\nSharedCoreModule -->\n\nFullNameComponent->SharedCoreModule\n\n\n\n\n\nGeocoderInputComponent\n\nGeocoderInputComponent\n\nSharedCoreModule -->\n\nGeocoderInputComponent->SharedCoreModule\n\n\n\n\n\nHeaderComponent\n\nHeaderComponent\n\nSharedCoreModule -->\n\nHeaderComponent->SharedCoreModule\n\n\n\n\n\nNameComponent\n\nNameComponent\n\nSharedCoreModule -->\n\nNameComponent->SharedCoreModule\n\n\n\n\n\nPageFrameworkComponent\n\nPageFrameworkComponent\n\nSharedCoreModule -->\n\nPageFrameworkComponent->SharedCoreModule\n\n\n\n\n\nPageSectionComponent\n\nPageSectionComponent\n\nSharedCoreModule -->\n\nPageSectionComponent->SharedCoreModule\n\n\n\n\n\nPasswordComponent\n\nPasswordComponent\n\nSharedCoreModule -->\n\nPasswordComponent->SharedCoreModule\n\n\n\n\n\nPhnComponent\n\nPhnComponent\n\nSharedCoreModule -->\n\nPhnComponent->SharedCoreModule\n\n\n\n\n\nPhoneNumberComponent\n\nPhoneNumberComponent\n\nSharedCoreModule -->\n\nPhoneNumberComponent->SharedCoreModule\n\n\n\n\n\nPostalCodeComponent\n\nPostalCodeComponent\n\nSharedCoreModule -->\n\nPostalCodeComponent->SharedCoreModule\n\n\n\n\n\nProvinceComponent\n\nProvinceComponent\n\nSharedCoreModule -->\n\nProvinceComponent->SharedCoreModule\n\n\n\n\n\nRadioComponent\n\nRadioComponent\n\nSharedCoreModule -->\n\nRadioComponent->SharedCoreModule\n\n\n\n\n\nSampleModalComponent\n\nSampleModalComponent\n\nSharedCoreModule -->\n\nSampleModalComponent->SharedCoreModule\n\n\n\n\n\nSinComponent\n\nSinComponent\n\nSharedCoreModule -->\n\nSinComponent->SharedCoreModule\n\n\n\n\n\nStreetComponent\n\nStreetComponent\n\nSharedCoreModule -->\n\nStreetComponent->SharedCoreModule\n\n\n\n\n\nThumbnailComponent\n\nThumbnailComponent\n\nSharedCoreModule -->\n\nThumbnailComponent->SharedCoreModule\n\n\n\n\n\nToggleComponent\n\nToggleComponent\n\nSharedCoreModule -->\n\nToggleComponent->SharedCoreModule\n\n\n\n\n\nValidateBcPostalDirective\n\nValidateBcPostalDirective\n\nSharedCoreModule -->\n\nValidateBcPostalDirective->SharedCoreModule\n\n\n\n\n\nValidateCityDirective\n\nValidateCityDirective\n\nSharedCoreModule -->\n\nValidateCityDirective->SharedCoreModule\n\n\n\n\n\nValidateNameDirective\n\nValidateNameDirective\n\nSharedCoreModule -->\n\nValidateNameDirective->SharedCoreModule\n\n\n\n\n\nValidatePostalcodeDirective\n\nValidatePostalcodeDirective\n\nSharedCoreModule -->\n\nValidatePostalcodeDirective->SharedCoreModule\n\n\n\n\n\nValidateRegionDirective\n\nValidateRegionDirective\n\nSharedCoreModule -->\n\nValidateRegionDirective->SharedCoreModule\n\n\n\n\n\nValidateStreetDirective\n\nValidateStreetDirective\n\nSharedCoreModule -->\n\nValidateStreetDirective->SharedCoreModule\n\n\n\n\n\nWizardProgressBarComponent\n\nWizardProgressBarComponent\n\nSharedCoreModule -->\n\nWizardProgressBarComponent->SharedCoreModule\n\n\n\n\n\nXiconButtonComponent\n\nXiconButtonComponent\n\nSharedCoreModule -->\n\nXiconButtonComponent->SharedCoreModule\n\n\n\n\n\nAccordionCommonComponent \n\nAccordionCommonComponent \n\nAccordionCommonComponent  -->\n\nSharedCoreModule->AccordionCommonComponent \n\n\n\n\n\nAddressComponent \n\nAddressComponent \n\nAddressComponent  -->\n\nSharedCoreModule->AddressComponent \n\n\n\n\n\nButtonComponent \n\nButtonComponent \n\nButtonComponent  -->\n\nSharedCoreModule->ButtonComponent \n\n\n\n\n\nButtonGroupComponent \n\nButtonGroupComponent \n\nButtonGroupComponent  -->\n\nSharedCoreModule->ButtonGroupComponent \n\n\n\n\n\nCheckboxComponent \n\nCheckboxComponent \n\nCheckboxComponent  -->\n\nSharedCoreModule->CheckboxComponent \n\n\n\n\n\nCityComponent \n\nCityComponent \n\nCityComponent  -->\n\nSharedCoreModule->CityComponent \n\n\n\n\n\nConfirmTemplateComponent \n\nConfirmTemplateComponent \n\nConfirmTemplateComponent  -->\n\nSharedCoreModule->ConfirmTemplateComponent \n\n\n\n\n\nConsentModalComponent \n\nConsentModalComponent \n\nConsentModalComponent  -->\n\nSharedCoreModule->ConsentModalComponent \n\n\n\n\n\nCoreBreadcrumbComponent \n\nCoreBreadcrumbComponent \n\nCoreBreadcrumbComponent  -->\n\nSharedCoreModule->CoreBreadcrumbComponent \n\n\n\n\n\nCountryComponent \n\nCountryComponent \n\nCountryComponent  -->\n\nSharedCoreModule->CountryComponent \n\n\n\n\n\nDateComponent \n\nDateComponent \n\nDateComponent  -->\n\nSharedCoreModule->DateComponent \n\n\n\n\n\nDateFieldFormatDirective \n\nDateFieldFormatDirective \n\nDateFieldFormatDirective  -->\n\nSharedCoreModule->DateFieldFormatDirective \n\n\n\n\n\nDatepickerComponent \n\nDatepickerComponent \n\nDatepickerComponent  -->\n\nSharedCoreModule->DatepickerComponent \n\n\n\n\n\nDropdownComponent \n\nDropdownComponent \n\nDropdownComponent  -->\n\nSharedCoreModule->DropdownComponent \n\n\n\n\n\nDuplicateCheckDirective \n\nDuplicateCheckDirective \n\nDuplicateCheckDirective  -->\n\nSharedCoreModule->DuplicateCheckDirective \n\n\n\n\n\nEmailComponent \n\nEmailComponent \n\nEmailComponent  -->\n\nSharedCoreModule->EmailComponent \n\n\n\n\n\nErrorContainerComponent \n\nErrorContainerComponent \n\nErrorContainerComponent  -->\n\nSharedCoreModule->ErrorContainerComponent \n\n\n\n\n\nFileUploaderComponent \n\nFileUploaderComponent \n\nFileUploaderComponent  -->\n\nSharedCoreModule->FileUploaderComponent \n\n\n\n\n\nFormActionBarComponent \n\nFormActionBarComponent \n\nFormActionBarComponent  -->\n\nSharedCoreModule->FormActionBarComponent \n\n\n\n\n\nFormSubmitBarComponent \n\nFormSubmitBarComponent \n\nFormSubmitBarComponent  -->\n\nSharedCoreModule->FormSubmitBarComponent \n\n\n\n\n\nFullNameComponent \n\nFullNameComponent \n\nFullNameComponent  -->\n\nSharedCoreModule->FullNameComponent \n\n\n\n\n\nGeocoderInputComponent \n\nGeocoderInputComponent \n\nGeocoderInputComponent  -->\n\nSharedCoreModule->GeocoderInputComponent \n\n\n\n\n\nHeaderComponent \n\nHeaderComponent \n\nHeaderComponent  -->\n\nSharedCoreModule->HeaderComponent \n\n\n\n\n\nNameComponent \n\nNameComponent \n\nNameComponent  -->\n\nSharedCoreModule->NameComponent \n\n\n\n\n\nPageFrameworkComponent \n\nPageFrameworkComponent \n\nPageFrameworkComponent  -->\n\nSharedCoreModule->PageFrameworkComponent \n\n\n\n\n\nPageSectionComponent \n\nPageSectionComponent \n\nPageSectionComponent  -->\n\nSharedCoreModule->PageSectionComponent \n\n\n\n\n\nPasswordComponent \n\nPasswordComponent \n\nPasswordComponent  -->\n\nSharedCoreModule->PasswordComponent \n\n\n\n\n\nPhnComponent \n\nPhnComponent \n\nPhnComponent  -->\n\nSharedCoreModule->PhnComponent \n\n\n\n\n\nPhoneNumberComponent \n\nPhoneNumberComponent \n\nPhoneNumberComponent  -->\n\nSharedCoreModule->PhoneNumberComponent \n\n\n\n\n\nPostalCodeComponent \n\nPostalCodeComponent \n\nPostalCodeComponent  -->\n\nSharedCoreModule->PostalCodeComponent \n\n\n\n\n\nProvinceComponent \n\nProvinceComponent \n\nProvinceComponent  -->\n\nSharedCoreModule->ProvinceComponent \n\n\n\n\n\nRadioComponent \n\nRadioComponent \n\nRadioComponent  -->\n\nSharedCoreModule->RadioComponent \n\n\n\n\n\nSampleModalComponent \n\nSampleModalComponent \n\nSampleModalComponent  -->\n\nSharedCoreModule->SampleModalComponent \n\n\n\n\n\nSinComponent \n\nSinComponent \n\nSinComponent  -->\n\nSharedCoreModule->SinComponent \n\n\n\n\n\nStreetComponent \n\nStreetComponent \n\nStreetComponent  -->\n\nSharedCoreModule->StreetComponent \n\n\n\n\n\nThumbnailComponent \n\nThumbnailComponent \n\nThumbnailComponent  -->\n\nSharedCoreModule->ThumbnailComponent \n\n\n\n\n\nToggleComponent \n\nToggleComponent \n\nToggleComponent  -->\n\nSharedCoreModule->ToggleComponent \n\n\n\n\n\nValidateBcPostalDirective \n\nValidateBcPostalDirective \n\nValidateBcPostalDirective  -->\n\nSharedCoreModule->ValidateBcPostalDirective \n\n\n\n\n\nValidateCityDirective \n\nValidateCityDirective \n\nValidateCityDirective  -->\n\nSharedCoreModule->ValidateCityDirective \n\n\n\n\n\nValidateNameDirective \n\nValidateNameDirective \n\nValidateNameDirective  -->\n\nSharedCoreModule->ValidateNameDirective \n\n\n\n\n\nValidatePostalcodeDirective \n\nValidatePostalcodeDirective \n\nValidatePostalcodeDirective  -->\n\nSharedCoreModule->ValidatePostalcodeDirective \n\n\n\n\n\nValidateRegionDirective \n\nValidateRegionDirective \n\nValidateRegionDirective  -->\n\nSharedCoreModule->ValidateRegionDirective \n\n\n\n\n\nValidateStreetDirective \n\nValidateStreetDirective \n\nValidateStreetDirective  -->\n\nSharedCoreModule->ValidateStreetDirective \n\n\n\n\n\nWizardProgressBarComponent \n\nWizardProgressBarComponent \n\nWizardProgressBarComponent  -->\n\nSharedCoreModule->WizardProgressBarComponent \n\n\n\n\n\nXiconButtonComponent \n\nXiconButtonComponent \n\nXiconButtonComponent  -->\n\nSharedCoreModule->XiconButtonComponent \n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            projects/common/lib/shared-core.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            AccordionCommonComponent\n                        \n                        \n                            AddressComponent\n                        \n                        \n                            ButtonComponent\n                        \n                        \n                            ButtonGroupComponent\n                        \n                        \n                            CheckboxComponent\n                        \n                        \n                            CityComponent\n                        \n                        \n                            ConfirmTemplateComponent\n                        \n                        \n                            ConsentModalComponent\n                        \n                        \n                            CoreBreadcrumbComponent\n                        \n                        \n                            CountryComponent\n                        \n                        \n                            DateComponent\n                        \n                        \n                            DateFieldFormatDirective\n                        \n                        \n                            DatepickerComponent\n                        \n                        \n                            DropdownComponent\n                        \n                        \n                            DuplicateCheckDirective\n                        \n                        \n                            EmailComponent\n                        \n                        \n                            ErrorContainerComponent\n                        \n                        \n                            FileUploaderComponent\n                        \n                        \n                            FormActionBarComponent\n                        \n                        \n                            FormSubmitBarComponent\n                        \n                        \n                            FullNameComponent\n                        \n                        \n                            GeocoderInputComponent\n                        \n                        \n                            HeaderComponent\n                        \n                        \n                            NameComponent\n                        \n                        \n                            PageFrameworkComponent\n                        \n                        \n                            PageSectionComponent\n                        \n                        \n                            PasswordComponent\n                        \n                        \n                            PhnComponent\n                        \n                        \n                            PhoneNumberComponent\n                        \n                        \n                            PostalCodeComponent\n                        \n                        \n                            ProvinceComponent\n                        \n                        \n                            RadioComponent\n                        \n                        \n                            SampleModalComponent\n                        \n                        \n                            SinComponent\n                        \n                        \n                            StreetComponent\n                        \n                        \n                            ThumbnailComponent\n                        \n                        \n                            ToggleComponent\n                        \n                        \n                            ValidateBcPostalDirective\n                        \n                        \n                            ValidateCityDirective\n                        \n                        \n                            ValidateNameDirective\n                        \n                        \n                            ValidatePostalcodeDirective\n                        \n                        \n                            ValidateRegionDirective\n                        \n                        \n                            ValidateStreetDirective\n                        \n                        \n                            WizardProgressBarComponent\n                        \n                        \n                            XiconButtonComponent\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            AccordionCommonComponent\n                        \n                        \n                            AddressComponent\n                        \n                        \n                            ButtonComponent\n                        \n                        \n                            ButtonGroupComponent\n                        \n                        \n                            CheckboxComponent\n                        \n                        \n                            CityComponent\n                        \n                        \n                            ConfirmTemplateComponent\n                        \n                        \n                            ConsentModalComponent\n                        \n                        \n                            CoreBreadcrumbComponent\n                        \n                        \n                            CountryComponent\n                        \n                        \n                            DateComponent\n                        \n                        \n                            DateFieldFormatDirective\n                        \n                        \n                            DatepickerComponent\n                        \n                        \n                            DropdownComponent\n                        \n                        \n                            DuplicateCheckDirective\n                        \n                        \n                            EmailComponent\n                        \n                        \n                            ErrorContainerComponent\n                        \n                        \n                            FileUploaderComponent\n                        \n                        \n                            FormActionBarComponent\n                        \n                        \n                            FormSubmitBarComponent\n                        \n                        \n                            FullNameComponent\n                        \n                        \n                            GeocoderInputComponent\n                        \n                        \n                            HeaderComponent\n                        \n                        \n                            NameComponent\n                        \n                        \n                            PageFrameworkComponent\n                        \n                        \n                            PageSectionComponent\n                        \n                        \n                            PasswordComponent\n                        \n                        \n                            PhnComponent\n                        \n                        \n                            PhoneNumberComponent\n                        \n                        \n                            PostalCodeComponent\n                        \n                        \n                            ProvinceComponent\n                        \n                        \n                            RadioComponent\n                        \n                        \n                            SampleModalComponent\n                        \n                        \n                            SinComponent\n                        \n                        \n                            StreetComponent\n                        \n                        \n                            ThumbnailComponent\n                        \n                        \n                            ToggleComponent\n                        \n                        \n                            ValidateBcPostalDirective\n                        \n                        \n                            ValidateCityDirective\n                        \n                        \n                            ValidateNameDirective\n                        \n                        \n                            ValidatePostalcodeDirective\n                        \n                        \n                            ValidateRegionDirective\n                        \n                        \n                            ValidateStreetDirective\n                        \n                        \n                            WizardProgressBarComponent\n                        \n                        \n                            XiconButtonComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { CoreBreadcrumbComponent } from './components/core-breadcrumb/core-breadcrumb.component';\nimport { FormActionBarComponent } from './components/form-action-bar/form-action-bar.component';\nimport { PageFrameworkComponent } from './components/page-framework/page-framework.component';\nimport { PasswordComponent } from './components/password/password.component';\nimport { WizardProgressBarComponent } from './components/wizard-progress-bar/wizard-progress-bar.component';\nimport { NgForm, FormsModule } from '@angular/forms';\nimport { ProgressbarModule, ModalModule, TypeaheadModule } from 'ngx-bootstrap';\nimport { RouterModule } from '@angular/router';\nimport { DateComponent } from './components/date/date.component';\nimport { DatepickerComponent } from './components/datepicker/datepicker.component';\nimport { NgxMyDatePickerModule } from 'ngx-mydatepicker';\nimport { FileUploaderComponent } from './components/file-uploader/file-uploader.component';\nimport { ThumbnailComponent } from './components/thumbnail/thumbnail.component';\nimport { FormSubmitBarComponent } from './components/form-submit-bar/form-submit-bar.component';\nimport { TextMaskModule } from 'angular2-text-mask';\nimport { PostalCodeComponent } from './components/postal-code/postal-code.component';\nimport { PageSectionComponent } from './components/page-section/page-section.component';\nimport { DropdownComponent } from './components/dropdown/dropdown.component';\nimport { NgSelectModule } from '@ng-select/ng-select';\nimport { ToggleComponent } from './components/toggle/toggle.component';\nimport { AddressComponent } from './components/address/address.component';\nimport { CountryComponent } from './components/country/country.component';\nimport { ProvinceComponent } from './components/province/province.component';\nimport { CityComponent } from './components/city/city.component';\nimport { StreetComponent } from './components/street/street.component';\nimport { ButtonGroupComponent } from './components/button-group/button-group.component';\nimport { ButtonComponent } from './components/button/button.component';\nimport { CheckboxComponent } from './components/checkbox/checkbox.component';\nimport { ConsentModalComponent } from './components/consent-modal/consent-modal.component';\nimport { NameComponent } from './components/name/name.component';\nimport { PhoneNumberComponent } from './components/phone-number/phone-number.component';\nimport { RadioComponent } from './components/radio/radio.component';\nimport { AccordionModule } from 'ngx-bootstrap/accordion';\nimport { AccordionCommonComponent } from './components/accordion/accordion.component';\nimport { ValidateNameDirective } from './components/name/validate-name.directive';\nimport { SinComponent } from './components/sin/sin.component';\nimport { PhnComponent } from './components/phn/phn.component';\nimport { FullNameComponent } from './components/full-name/full-name.component';\nimport { HeaderComponent } from './components/header/header.component';\nimport { ValidateBcPostalDirective } from './components/postal-code/validate-bc-postal.directive';\nimport { XiconButtonComponent } from './components/xicon-button/xicon-button.component';\nimport { DuplicateCheckDirective } from './components/duplicate-check/duplicate-check.directive';\nimport { ErrorContainerComponent } from './components/error-container/error-container.component';\nimport { ValidateStreetDirective } from './components/street/validate-street.directive';\nimport { ValidateCityDirective } from './components/city/validate-city.directive';\nimport { ValidateRegionDirective } from './components/validate-region/validate-region.directive';\nimport { ValidatePostalcodeDirective } from './components/postal-code/validate-postalcode.directive';\nimport { SampleModalComponent } from './components/sample-modal/sample-modal.component';\nimport { EmailComponent } from './components/email/email.component';\nimport { ConfirmTemplateComponent } from './components/confirm-template/confirm-template.component';\nimport { GeocoderInputComponent } from './components/geocoder-input/geocoder-input.component';\nimport { DateFieldFormatDirective } from './components/date/date-field-format.directive';\n\n\nconst componentList = [\n  CoreBreadcrumbComponent,\n  FormActionBarComponent,\n  PageFrameworkComponent,\n  PasswordComponent,\n  WizardProgressBarComponent,\n  DateComponent,\n  DatepickerComponent,\n  FileUploaderComponent,\n  ThumbnailComponent,\n  FormSubmitBarComponent,\n  PostalCodeComponent,\n  PageSectionComponent,\n  DropdownComponent,\n  ToggleComponent,\n  AddressComponent,\n  CountryComponent,\n  ProvinceComponent,\n  CityComponent,\n  StreetComponent,\n  ButtonGroupComponent,\n  ButtonComponent,\n  CheckboxComponent,\n  ConsentModalComponent,\n  NameComponent,\n  FullNameComponent,\n  PhoneNumberComponent,\n  RadioComponent,\n  AccordionCommonComponent,\n  SinComponent,\n  PhnComponent,\n  HeaderComponent,\n  XiconButtonComponent,\n  ErrorContainerComponent,\n  SampleModalComponent,\n  EmailComponent,\n  ConfirmTemplateComponent,\n  GeocoderInputComponent,\n\n\n  // Directives\n  ValidateNameDirective,\n  DuplicateCheckDirective,\n  ValidateBcPostalDirective,\n  ValidateStreetDirective,\n  ValidateCityDirective,\n  ValidateRegionDirective,\n  ValidatePostalcodeDirective,\n  DateFieldFormatDirective\n];\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    ProgressbarModule.forRoot(),\n    RouterModule,\n    NgxMyDatePickerModule.forRoot(),\n    ModalModule.forRoot(),\n    TextMaskModule,\n    NgSelectModule,\n    TypeaheadModule.forRoot(),\n    AccordionModule.forRoot()\n  ],\n  declarations: [\n    componentList,\n  ],\n  exports: [\n    componentList\n  ],\n  providers: [\n    NgForm\n  ]\n})\nexport class SharedCoreModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/SimpleDate.html":{"url":"interfaces/SimpleDate.html","title":"interface - SimpleDate","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  SimpleDate\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/common/lib/models/simple-date.interface.ts\n        \n\n            \n                Description\n            \n            \n                Interface used in the following components/models:\n  a) person.model.ts\n  b) date.component.ts\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        day\n                                \n                                \n                                        month\n                                \n                                \n                                        year\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        day\n                                    \n                                \n                                \n                                    \n                                        day:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        month\n                                    \n                                \n                                \n                                    \n                                        month:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        year\n                                    \n                                \n                                \n                                    \n                                        year:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface SimpleDate {\n  day: number;\n  month: number;\n  year: number;\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/SinComponent.html":{"url":"components/SinComponent.html","title":"component - SinComponent","body":"\n                   \n\n\n\n\n\n  Components\n  SinComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    projects/common/lib/components/sin/sin.component.ts\n\n\n    \n        Description\n    \n    \n        This component reports the following errors.\n    required\n    invalid\n    duplicate\n  These messages can be changed by updated messages using the errorMessages interface\n  Ex. { required: 'This field is required', invalid: '{label} is invalid' }\n\n    \n\n    \n        Extends\n    \n    \n                AbstractFormControl\n    \n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                common-sin\n            \n\n            \n                styleUrls\n                ./sin.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./sin.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                _defaultErrMsg\n                            \n                            \n                                    Public\n                                controlDir\n                            \n                            \n                                mask\n                            \n                            \n                                sin\n                            \n                            \n                                    Abstract\n                                _defaultErrMsg\n                            \n                            \n                                _onChange\n                            \n                            \n                                _onTouched\n                            \n                            \n                                    Public\n                                objectId\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                            \n                                onBlur\n                            \n                            \n                                onValueChange\n                            \n                            \n                                    Private\n                                validateSelf\n                            \n                            \n                                    Private\n                                validateSin\n                            \n                            \n                                writeValue\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                registerOnChange\n                            \n                            \n                                registerOnTouched\n                            \n                            \n                                    Protected\n                                registerValidation\n                            \n                            \n                                setDisabledState\n                            \n                            \n                                    Protected\n                                setErrorMsg\n                            \n                            \n                                    Abstract\n                                writeValue\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                label\n                            \n                            \n                                labelforId\n                            \n                            \n                                maxlength\n                            \n                            \n                                placeholder\n                            \n                            \n                                value\n                            \n                            \n                                disabled\n                            \n                            \n                                errorMessage\n                            \n                            \n                                label\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                blur\n                            \n                            \n                                valueChange\n                            \n                        \n                    \n                \n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    value\n                                \n                            \n                        \n                    \n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(controlDir: NgControl)\n                    \n                \n                        \n                            \n                                Defined in projects/common/lib/components/sin/sin.component.ts:50\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        controlDir\n                                                  \n                                                        \n                                                                        NgControl\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        label\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'Social Insurance Number (SIN)'\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/sin/sin.component.ts:33\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        labelforId\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'sin_' + this.objectId\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/sin/sin.component.ts:36\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        maxlength\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : '15'\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/sin/sin.component.ts:34\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        placeholder\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : '111 111 111'\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/sin/sin.component.ts:35\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        value\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/sin/sin.component.ts:39\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        disabled\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                            \n                                \n                                    Inherited from         AbstractFormControl\n\n                                \n                            \n                        \n                            \n                                    Defined in         AbstractFormControl:15\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        errorMessage\n                    \n                \n                \n                    \n                        Type :         ErrorMessage\n\n                    \n                \n                            \n                                \n                                    Inherited from         AbstractFormControl\n\n                                \n                            \n                        \n                            \n                                    Defined in         AbstractFormControl:18\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        label\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                            \n                                \n                                    Inherited from         AbstractFormControl\n\n                                \n                            \n                        \n                            \n                                    Defined in         AbstractFormControl:13\n\n                            \n                        \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        blur\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/sin/sin.component.ts:50\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        valueChange\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/sin/sin.component.ts:49\n                            \n                        \n            \n        \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/components/sin/sin.component.ts:62\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            onBlur\n                        \n                        \n                    \n                \n            \n            \n                \nonBlur(event: any)\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/components/sin/sin.component.ts:77\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    event\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            onValueChange\n                        \n                        \n                    \n                \n            \n            \n                \nonValueChange(value: any)\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/components/sin/sin.component.ts:68\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            validateSelf\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    validateSelf()\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/components/sin/sin.component.ts:88\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     ValidationErrors | null\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            validateSin\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    validateSin()\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/components/sin/sin.component.ts:97\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     ValidationErrors | null\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            writeValue\n                        \n                        \n                    \n                \n            \n            \n                \nwriteValue(value: any)\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/components/sin/sin.component.ts:82\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Inherited from         AbstractFormControl\n\n                \n            \n            \n                \n                        Defined in         AbstractFormControl:26\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            registerOnChange\n                        \n                        \n                    \n                \n            \n            \n                \nregisterOnChange(fn: any)\n                \n            \n\n\n            \n                \n                    Inherited from         AbstractFormControl\n\n                \n            \n            \n                \n                        Defined in         AbstractFormControl:34\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    fn\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            registerOnTouched\n                        \n                        \n                    \n                \n            \n            \n                \nregisterOnTouched(fn: any)\n                \n            \n\n\n            \n                \n                    Inherited from         AbstractFormControl\n\n                \n            \n            \n                \n                        Defined in         AbstractFormControl:39\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    fn\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            registerValidation\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    registerValidation(ngControl: NgControl, fn: ValidationErrors)\n                \n            \n\n\n            \n                \n                    Inherited from         AbstractFormControl\n\n                \n            \n            \n                \n                        Defined in         AbstractFormControl:65\n\n                \n            \n\n\n            \n                \n                    Register self validating method\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    ngControl\n                                    \n                                                NgControl\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                    \n                                \n                                \n                                    fn\n                                    \n                                                ValidationErrors\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        function for validating self\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            setDisabledState\n                        \n                        \n                    \n                \n            \n            \n                \nsetDisabledState(isDisabled: boolean)\n                \n            \n\n\n            \n                \n                    Inherited from         AbstractFormControl\n\n                \n            \n            \n                \n                        Defined in         AbstractFormControl:44\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    isDisabled\n                                    \n                                                boolean\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            setErrorMsg\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    setErrorMsg()\n                \n            \n\n\n            \n                \n                    Inherited from         AbstractFormControl\n\n                \n            \n            \n                \n                        Defined in         AbstractFormControl:48\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Abstract\n                            writeValue\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    writeValue(value: any)\n                \n            \n\n\n            \n                \n                    Inherited from         AbstractFormControl\n\n                \n            \n            \n                \n                        Defined in         AbstractFormControl:31\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            _defaultErrMsg\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         ErrorMessage\n\n                        \n                    \n                    \n                        \n                            Default value : {\n    required: `${LabelReplacementTag} is required.`,\n    invalid: `${LabelReplacementTag} is invalid.`,\n    duplicate: `${LabelReplacementTag} was already used for another family member.`\n  }\n                        \n                    \n                        \n                            \n                                    Defined in projects/common/lib/components/sin/sin.component.ts:24\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            controlDir\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         NgControl\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Optional()@Self()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in projects/common/lib/components/sin/sin.component.ts:52\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            mask\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/common/lib/components/sin/sin.component.ts:31\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            sin\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : ''\n                        \n                    \n                        \n                            \n                                    Defined in projects/common/lib/components/sin/sin.component.ts:30\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Abstract\n                            _defaultErrMsg\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         ErrorMessage\n\n                        \n                    \n                    \n                        \n                            Default value : {}\n                        \n                    \n                            \n                                \n                                    Inherited from         AbstractFormControl\n\n                                \n                            \n                        \n                            \n                                    Defined in         AbstractFormControl:10\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            _onChange\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : () => {...}\n                        \n                    \n                            \n                                \n                                    Inherited from         AbstractFormControl\n\n                                \n                            \n                        \n                            \n                                    Defined in         AbstractFormControl:22\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            _onTouched\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : () => {...}\n                        \n                    \n                            \n                                \n                                    Inherited from         AbstractFormControl\n\n                                \n                            \n                        \n                            \n                                    Defined in         AbstractFormControl:23\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            objectId\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : UUID.UUID()\n                        \n                    \n                            \n                                \n                                    Inherited from         Base\n\n                                \n                            \n                        \n                            \n                                    Defined in         Base:11\n\n                            \n                        \n\n                \n                    \n                        An identifier for parents to keep track of components \n\n                    \n                \n\n            \n        \n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        value\n                    \n                \n\n                \n                    \n                        getvalue()\n                    \n                \n                            \n                                \n                                    Defined in projects/common/lib/components/sin/sin.component.ts:45\n                                \n                            \n\n                \n                    \n                        setvalue(val: string)\n                    \n                \n                            \n                                \n                                    Defined in projects/common/lib/components/sin/sin.component.ts:39\n                                \n                            \n                    \n                        \n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                        Type\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                            val\n                                                    \n                                                            \n                                                                            string\n                                                            \n                                                    \n                                                        \n                                                                No\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :         void\n\n                                \n                        \n                    \n            \n        \n\n\n\n\n    \n        import { Component, EventEmitter, Input, Output, Optional, Self, OnInit} from '@angular/core';\nimport { NUMBER, SPACE } from '../../models/mask.constants';\nimport { NgControl, ValidationErrors } from '@angular/forms';\nimport { AbstractFormControl } from '../../models/abstract-form-control';\nimport { LabelReplacementTag, ErrorMessage } from '../../models/error-message.interface';\n\n/**\n * This component reports the following errors.\n *    required\n *    invalid\n *    duplicate\n *\n *  These messages can be changed by updated messages using the errorMessages interface\n *  Ex. { required: 'This field is required', invalid: '{label} is invalid' }\n */\n\n@Component({\n  selector: 'common-sin',\n  templateUrl: './sin.component.html',\n  styleUrls: ['./sin.component.scss']\n})\nexport class SinComponent extends AbstractFormControl implements OnInit {\n\n  _defaultErrMsg: ErrorMessage = {\n    required: `${LabelReplacementTag} is required.`,\n    invalid: `${LabelReplacementTag} is invalid.`,\n    duplicate: `${LabelReplacementTag} was already used for another family member.`\n  };\n\n  sin: string = '';\n  mask: any;\n\n  @Input() label: string = 'Social Insurance Number (SIN)';\n  @Input() maxlength: string = '15';\n  @Input() placeholder: string = '111 111 111';\n  @Input() labelforId: string = 'sin_' + this.objectId;\n\n  @Input()\n  set value( val: string ) {\n    console.log( 'set value: ', val );\n    if ( val ) {\n      this.sin = val;\n    }\n  }\n  get value() {\n    return this.sin;\n  }\n\n  @Output() valueChange: EventEmitter = new EventEmitter();\n  @Output() blur: EventEmitter = new EventEmitter();\n\n  constructor( @Optional() @Self() public controlDir: NgControl ) {\n    super();\n    if ( controlDir ) {\n      controlDir.valueAccessor = this;\n    }\n\n    this.mask =\n    [NUMBER, NUMBER, NUMBER, SPACE, NUMBER, NUMBER, NUMBER, SPACE, NUMBER, NUMBER, NUMBER];\n  }\n\n  ngOnInit() {\n    super.ngOnInit();\n\n    this.registerValidation( this.controlDir, this.validateSelf );\n  }\n\n  onValueChange( value: any ) {\n\n    if ( value !== this.sin ) { // IE fix when focus does not display required error\n      this.sin = value;\n      this._onChange( value );\n      this.valueChange.emit( value );\n    }\n  }\n\n  onBlur( event: any ) {\n    this._onTouched( event );\n    this.blur.emit( event );\n  }\n\n  writeValue( value: any ): void {\n    if ( value ) {\n      this.sin = value;\n    }\n  }\n\n  private validateSelf(): ValidationErrors | null {\n\n    const validateResult = this.validateSin();\n    if ( validateResult ) {\n      return validateResult;\n    }\n    return null;\n   }\n\n   private validateSin(): ValidationErrors | null {\n\n    if ( this.sin && this.sin.trim().length > 0 ) {\n\n      // Init weights and other stuff\n      const weights: number[] = [1, 2, 1, 2, 1, 2, 1, 2, 1];\n      let sum = 0;\n\n      // Clean up string\n      const value = this.sin.trim();\n      this.sin = value\n                  .replace(/_/g, '') // remove underlines\n                  .replace(/\\s/g, ''); // spaces\n\n      // Test for length\n      if (this.sin.length !== 9) {\n        return { 'invalid': true };\n      }\n\n      // Test for string of zeros\n      if ( this.sin === '000000000') {\n        return { 'invalid': true };\n      }\n\n      // Walk through each character\n      for (let i = 0; i  9) {\n          result = result - 9;\n        }\n\n        // add it to our sum\n        sum += result;\n      }\n\n      // The sum must be divisible by 10\n      if (sum % 10 !== 0) {\n        return { 'invalid': true };\n      }\n\n    }\n\n    return null;\n  }\n}\n\n    \n\n    \n        \n{{label}}\n\n\n\n  \n  \n    \n      {{_defaultErrMsg.required}}\n    \n    \n      {{_defaultErrMsg.invalid}}\n    \n    \n      {{_defaultErrMsg.duplicate}}\n    \n  \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '{{label}}              {{_defaultErrMsg.required}}              {{_defaultErrMsg.invalid}}              {{_defaultErrMsg.duplicate}}      '\n    var COMPONENTS = [{'name': 'AccordionCommonComponent', 'selector': 'common-accordion'},{'name': 'AddressComponent', 'selector': 'common-address'},{'name': 'ButtonComponent', 'selector': 'common-button'},{'name': 'ButtonGroupComponent', 'selector': 'common-button-group'},{'name': 'CaptchaComponent', 'selector': 'common-captcha'},{'name': 'CheckboxComponent', 'selector': 'common-checkbox'},{'name': 'CityComponent', 'selector': 'common-city'},{'name': 'ConfirmTemplateComponent', 'selector': 'common-confirm-template'},{'name': 'ConsentModalComponent', 'selector': 'common-consent-modal'},{'name': 'CoreBreadcrumbComponent', 'selector': 'common-core-breadcrumb'},{'name': 'CountryComponent', 'selector': 'common-country'},{'name': 'DateComponent', 'selector': 'common-date'},{'name': 'DatepickerComponent', 'selector': 'common-datepicker'},{'name': 'DropdownComponent', 'selector': 'common-dropdown'},{'name': 'EmailComponent', 'selector': 'common-email'},{'name': 'ErrorContainerComponent', 'selector': 'common-error-container'},{'name': 'FileUploaderComponent', 'selector': 'common-file-uploader'},{'name': 'FormActionBarComponent', 'selector': 'common-form-action-bar'},{'name': 'FormSubmitBarComponent', 'selector': 'common-form-submit-bar'},{'name': 'FullNameComponent', 'selector': 'common-full-name'},{'name': 'GeocoderInputComponent', 'selector': 'common-geocoder-input'},{'name': 'HeaderComponent', 'selector': 'common-header'},{'name': 'NameComponent', 'selector': 'common-name'},{'name': 'PageFrameworkComponent', 'selector': 'common-page-framework'},{'name': 'PageSectionComponent', 'selector': 'common-page-section'},{'name': 'PasswordComponent', 'selector': 'common-password'},{'name': 'PhnComponent', 'selector': 'common-phn'},{'name': 'PhoneNumberComponent', 'selector': 'common-phone-number'},{'name': 'PostalCodeComponent', 'selector': 'common-postal-code'},{'name': 'ProvinceComponent', 'selector': 'common-province'},{'name': 'RadioComponent', 'selector': 'common-radio'},{'name': 'SampleModalComponent', 'selector': 'common-sample-modal'},{'name': 'SinComponent', 'selector': 'common-sin'},{'name': 'StreetComponent', 'selector': 'common-street'},{'name': 'ThumbnailComponent', 'selector': 'common-thumbnail'},{'name': 'ToggleComponent', 'selector': 'common-toggle'},{'name': 'WizardProgressBarComponent', 'selector': 'common-wizard-progress-bar'},{'name': 'XiconButtonComponent', 'selector': 'common-xicon-button'}];\n    var DIRECTIVES = [{'name': 'DateFieldFormatDirective', 'selector': '[commonDateFieldFormat]'},{'name': 'DuplicateCheckDirective', 'selector': '[commonDuplicateCheck]'},{'name': 'ValidateBcPostalDirective', 'selector': '[commonValidateBcPostal]'},{'name': 'ValidateCityDirective', 'selector': '[commonValidateCity]'},{'name': 'ValidateNameDirective', 'selector': '[commonValidateName]'},{'name': 'ValidatePostalcodeDirective', 'selector': '[commonValidatePostalcode]'},{'name': 'ValidateRegionDirective', 'selector': '[commonValidateRegion]'},{'name': 'ValidateStreetDirective', 'selector': '[commonValidateStreet]'}];\n    var ACTUAL_COMPONENT = {'name': 'SinComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ThumbnailComponent.html":{"url":"components/ThumbnailComponent.html","title":"component - ThumbnailComponent","body":"\n                   \n\n\n\n\n\n  Components\n  ThumbnailComponent\n\n\n\n        \n            Info\n        \n        \n            Design Guidelines\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    projects/common/lib/components/thumbnail/thumbnail.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n            \n                encapsulation\n                ViewEncapsulation.None\n            \n\n\n\n\n\n\n\n\n\n            \n                selector\n                common-thumbnail\n            \n\n            \n                styleUrls\n                ./thumbnail.scss\n            \n\n\n\n            \n                templateUrl\n                ./thumbnail.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                fullSizeViewModal\n                            \n                            \n                                scaledWidth\n                            \n                            \n                                    Private\n                                viewContainerRef\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                delete\n                            \n                            \n                                hideFullSizeView\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                showFullSizeView\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                imageObject\n                            \n                            \n                                reviewMode\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                deleteImage\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(viewContainerRef: ViewContainerRef)\n                    \n                \n                        \n                            \n                                Defined in projects/common/lib/components/thumbnail/thumbnail.component.ts:18\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        viewContainerRef\n                                                  \n                                                        \n                                                                        ViewContainerRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        imageObject\n                    \n                \n                \n                    \n                        Type :         CommonImage\n\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/thumbnail/thumbnail.component.ts:13\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        reviewMode\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/thumbnail/thumbnail.component.ts:14\n                            \n                        \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        deleteImage\n                    \n                \n                \n                    \n                        Type :         EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/thumbnail/thumbnail.component.ts:15\n                            \n                        \n            \n        \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            delete\n                        \n                        \n                    \n                \n            \n            \n                \ndelete(evt: any)\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/components/thumbnail/thumbnail.component.ts:42\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    evt\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            hideFullSizeView\n                        \n                        \n                    \n                \n            \n            \n                \nhideFullSizeView()\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/components/thumbnail/thumbnail.component.ts:53\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/components/thumbnail/thumbnail.component.ts:24\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            showFullSizeView\n                        \n                        \n                    \n                \n            \n            \n                \nshowFullSizeView()\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/components/thumbnail/thumbnail.component.ts:48\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            fullSizeViewModal\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     ModalDirective\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ViewChild('fullSizeViewModal')\n                            \n                        \n                    \n                        \n                            \n                                    Defined in projects/common/lib/components/thumbnail/thumbnail.component.ts:16\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            scaledWidth\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Default value : 300\n                        \n                    \n                        \n                            \n                                    Defined in projects/common/lib/components/thumbnail/thumbnail.component.ts:23\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            viewContainerRef\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         ViewContainerRef\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/common/lib/components/thumbnail/thumbnail.component.ts:18\n                            \n                        \n\n\n            \n        \n\n\n\n\n    \n        Design Guidelines\nLorem ipsum dolor sit amet consectetur adipisicing elit. Sapiente, magnam ipsam. Sit quasi natus architecto rerum unde non provident! Quia nisi facere amet iste mollitia voluptatem non molestias esse optio?\nAperiam fugiat consectetur temporibus, iste repellat, quisquam sapiente nisi distinctio optio, autem nemo tenetur error eum voluptatibus ab accusamus quis voluptatum blanditiis. Quam et ut reprehenderit vitae nobis, at ipsum!\nExercitationem pariatur animi repudiandae corporis obcaecati ratione ducimus beatae quam, nostrum magnam unde numquam quidem cupiditate odit id. Beatae alias molestiae, optio incidunt harum quia voluptates deserunt sequi. Nesciunt, optio.\n\n    \n\n    \n        import { Component, ViewChild, OnInit, Input, Output, EventEmitter, ViewContainerRef, ViewEncapsulation } from '@angular/core';\nimport { ModalDirective } from 'ngx-bootstrap';\n\nimport { CommonImage } from '../../models/images.model';\n\n@Component({\n  selector: 'common-thumbnail',\n  templateUrl: './thumbnail.html',\n  styleUrls: ['./thumbnail.scss'],\n  encapsulation: ViewEncapsulation.None\n})\nexport class ThumbnailComponent implements OnInit {\n  @Input() imageObject: CommonImage;\n  @Input() reviewMode: boolean = false;\n  @Output() deleteImage: EventEmitter = new EventEmitter();\n  @ViewChild('fullSizeViewModal') public fullSizeViewModal: ModalDirective;\n\n  private viewContainerRef: ViewContainerRef;\n  constructor(viewContainerRef: ViewContainerRef) {\n    this.viewContainerRef = viewContainerRef;\n  }\n\n  scaledWidth: number = 300;\n  ngOnInit() {\n\n    const scaledWidthString: string = (180 * this.imageObject.naturalWidth / this.imageObject.naturalHeight).toFixed(0);\n    // console.log('scaled width: ' + scaledWidthString);\n    this.scaledWidth = parseInt(scaledWidthString, 10);\n\n    if (this.scaledWidth > 250) {\n      // console.log('Scaled width > 250, drop it down to 250');\n      this.scaledWidth = 250;\n    } else if (this.scaledWidth \n    \n\n    \n        \n   300}\"\n    (click)=\"showFullSizeView()\">\n  \n    Remove\n  \n\n\n\n  \n    \n      \n        {{imageObject.name}}\n        \n          &times;\n        \n      \n      \n        \n          \n            \n          \n        \n      \n    \n  \n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '   300}\"    (click)=\"showFullSizeView()\">      Remove                      {{imageObject.name}}                  ×                                                                                '\n    var COMPONENTS = [{'name': 'AccordionCommonComponent', 'selector': 'common-accordion'},{'name': 'AddressComponent', 'selector': 'common-address'},{'name': 'ButtonComponent', 'selector': 'common-button'},{'name': 'ButtonGroupComponent', 'selector': 'common-button-group'},{'name': 'CaptchaComponent', 'selector': 'common-captcha'},{'name': 'CheckboxComponent', 'selector': 'common-checkbox'},{'name': 'CityComponent', 'selector': 'common-city'},{'name': 'ConfirmTemplateComponent', 'selector': 'common-confirm-template'},{'name': 'ConsentModalComponent', 'selector': 'common-consent-modal'},{'name': 'CoreBreadcrumbComponent', 'selector': 'common-core-breadcrumb'},{'name': 'CountryComponent', 'selector': 'common-country'},{'name': 'DateComponent', 'selector': 'common-date'},{'name': 'DatepickerComponent', 'selector': 'common-datepicker'},{'name': 'DropdownComponent', 'selector': 'common-dropdown'},{'name': 'EmailComponent', 'selector': 'common-email'},{'name': 'ErrorContainerComponent', 'selector': 'common-error-container'},{'name': 'FileUploaderComponent', 'selector': 'common-file-uploader'},{'name': 'FormActionBarComponent', 'selector': 'common-form-action-bar'},{'name': 'FormSubmitBarComponent', 'selector': 'common-form-submit-bar'},{'name': 'FullNameComponent', 'selector': 'common-full-name'},{'name': 'GeocoderInputComponent', 'selector': 'common-geocoder-input'},{'name': 'HeaderComponent', 'selector': 'common-header'},{'name': 'NameComponent', 'selector': 'common-name'},{'name': 'PageFrameworkComponent', 'selector': 'common-page-framework'},{'name': 'PageSectionComponent', 'selector': 'common-page-section'},{'name': 'PasswordComponent', 'selector': 'common-password'},{'name': 'PhnComponent', 'selector': 'common-phn'},{'name': 'PhoneNumberComponent', 'selector': 'common-phone-number'},{'name': 'PostalCodeComponent', 'selector': 'common-postal-code'},{'name': 'ProvinceComponent', 'selector': 'common-province'},{'name': 'RadioComponent', 'selector': 'common-radio'},{'name': 'SampleModalComponent', 'selector': 'common-sample-modal'},{'name': 'SinComponent', 'selector': 'common-sin'},{'name': 'StreetComponent', 'selector': 'common-street'},{'name': 'ThumbnailComponent', 'selector': 'common-thumbnail'},{'name': 'ToggleComponent', 'selector': 'common-toggle'},{'name': 'WizardProgressBarComponent', 'selector': 'common-wizard-progress-bar'},{'name': 'XiconButtonComponent', 'selector': 'common-xicon-button'}];\n    var DIRECTIVES = [{'name': 'DateFieldFormatDirective', 'selector': '[commonDateFieldFormat]'},{'name': 'DuplicateCheckDirective', 'selector': '[commonDuplicateCheck]'},{'name': 'ValidateBcPostalDirective', 'selector': '[commonValidateBcPostal]'},{'name': 'ValidateCityDirective', 'selector': '[commonValidateCity]'},{'name': 'ValidateNameDirective', 'selector': '[commonValidateName]'},{'name': 'ValidatePostalcodeDirective', 'selector': '[commonValidatePostalcode]'},{'name': 'ValidateRegionDirective', 'selector': '[commonValidateRegion]'},{'name': 'ValidateStreetDirective', 'selector': '[commonValidateStreet]'}];\n    var ACTUAL_COMPONENT = {'name': 'ThumbnailComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ToggleComponent.html":{"url":"components/ToggleComponent.html","title":"component - ToggleComponent","body":"\n                   \n\n\n\n\n\n  Components\n  ToggleComponent\n\n\n\n        \n            Info\n        \n        \n            Design Guidelines\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    projects/common/lib/components/toggle/toggle.component.ts\n\n\n\n    \n        Extends\n    \n    \n                Base\n    \n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                common-toggle\n            \n\n            \n                styleUrls\n                ./toggle.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./toggle.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                objectId\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                data\n                            \n                            \n                                label\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                dataChange\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in projects/common/lib/components/toggle/toggle.component.ts:13\n                            \n                        \n\n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        data\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/toggle/toggle.component.ts:11\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        label\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/toggle/toggle.component.ts:12\n                            \n                        \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        dataChange\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/toggle/toggle.component.ts:13\n                            \n                        \n            \n        \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/components/toggle/toggle.component.ts:19\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            objectId\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : UUID.UUID()\n                        \n                    \n                            \n                                \n                                    Inherited from         Base\n\n                                \n                            \n                        \n                            \n                                    Defined in         Base:11\n\n                            \n                        \n\n                \n                    \n                        An identifier for parents to keep track of components \n\n                    \n                \n\n            \n        \n\n\n\n\n    \n        Design Guidelines\nLorem ipsum dolor sit amet consectetur adipisicing elit. Sapiente, magnam ipsam. Sit quasi natus architecto rerum unde non provident! Quia nisi facere amet iste mollitia voluptatem non molestias esse optio?\nAperiam fugiat consectetur temporibus, iste repellat, quisquam sapiente nisi distinctio optio, autem nemo tenetur error eum voluptatibus ab accusamus quis voluptatum blanditiis. Quam et ut reprehenderit vitae nobis, at ipsum!\nExercitationem pariatur animi repudiandae corporis obcaecati ratione ducimus beatae quam, nostrum magnam unde numquam quidem cupiditate odit id. Beatae alias molestiae, optio incidunt harum quia voluptates deserunt sequi. Nesciunt, optio.\n\n    \n\n    \n        import { Component, OnInit, Input, Output, EventEmitter } from '@angular/core';\nimport { Base } from '../../models/base';\n\n@Component({\n  selector: 'common-toggle',\n  templateUrl: './toggle.component.html',\n  styleUrls: ['./toggle.component.scss']\n})\nexport class ToggleComponent extends Base implements OnInit {\n\n  @Input() data: boolean;\n  @Input() label: string;\n  @Output() dataChange: EventEmitter = new EventEmitter();\n\n  constructor() {\n    super();\n  }\n\n  ngOnInit() {\n  }\n\n}\n\n    \n\n    \n         \n \n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  '\n    var COMPONENTS = [{'name': 'AccordionCommonComponent', 'selector': 'common-accordion'},{'name': 'AddressComponent', 'selector': 'common-address'},{'name': 'ButtonComponent', 'selector': 'common-button'},{'name': 'ButtonGroupComponent', 'selector': 'common-button-group'},{'name': 'CaptchaComponent', 'selector': 'common-captcha'},{'name': 'CheckboxComponent', 'selector': 'common-checkbox'},{'name': 'CityComponent', 'selector': 'common-city'},{'name': 'ConfirmTemplateComponent', 'selector': 'common-confirm-template'},{'name': 'ConsentModalComponent', 'selector': 'common-consent-modal'},{'name': 'CoreBreadcrumbComponent', 'selector': 'common-core-breadcrumb'},{'name': 'CountryComponent', 'selector': 'common-country'},{'name': 'DateComponent', 'selector': 'common-date'},{'name': 'DatepickerComponent', 'selector': 'common-datepicker'},{'name': 'DropdownComponent', 'selector': 'common-dropdown'},{'name': 'EmailComponent', 'selector': 'common-email'},{'name': 'ErrorContainerComponent', 'selector': 'common-error-container'},{'name': 'FileUploaderComponent', 'selector': 'common-file-uploader'},{'name': 'FormActionBarComponent', 'selector': 'common-form-action-bar'},{'name': 'FormSubmitBarComponent', 'selector': 'common-form-submit-bar'},{'name': 'FullNameComponent', 'selector': 'common-full-name'},{'name': 'GeocoderInputComponent', 'selector': 'common-geocoder-input'},{'name': 'HeaderComponent', 'selector': 'common-header'},{'name': 'NameComponent', 'selector': 'common-name'},{'name': 'PageFrameworkComponent', 'selector': 'common-page-framework'},{'name': 'PageSectionComponent', 'selector': 'common-page-section'},{'name': 'PasswordComponent', 'selector': 'common-password'},{'name': 'PhnComponent', 'selector': 'common-phn'},{'name': 'PhoneNumberComponent', 'selector': 'common-phone-number'},{'name': 'PostalCodeComponent', 'selector': 'common-postal-code'},{'name': 'ProvinceComponent', 'selector': 'common-province'},{'name': 'RadioComponent', 'selector': 'common-radio'},{'name': 'SampleModalComponent', 'selector': 'common-sample-modal'},{'name': 'SinComponent', 'selector': 'common-sin'},{'name': 'StreetComponent', 'selector': 'common-street'},{'name': 'ThumbnailComponent', 'selector': 'common-thumbnail'},{'name': 'ToggleComponent', 'selector': 'common-toggle'},{'name': 'WizardProgressBarComponent', 'selector': 'common-wizard-progress-bar'},{'name': 'XiconButtonComponent', 'selector': 'common-xicon-button'}];\n    var DIRECTIVES = [{'name': 'DateFieldFormatDirective', 'selector': '[commonDateFieldFormat]'},{'name': 'DuplicateCheckDirective', 'selector': '[commonDuplicateCheck]'},{'name': 'ValidateBcPostalDirective', 'selector': '[commonValidateBcPostal]'},{'name': 'ValidateCityDirective', 'selector': '[commonValidateCity]'},{'name': 'ValidateNameDirective', 'selector': '[commonValidateName]'},{'name': 'ValidatePostalcodeDirective', 'selector': '[commonValidatePostalcode]'},{'name': 'ValidateRegionDirective', 'selector': '[commonValidateRegion]'},{'name': 'ValidateStreetDirective', 'selector': '[commonValidateStreet]'}];\n    var ACTUAL_COMPONENT = {'name': 'ToggleComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"directives/ValidateBcPostalDirective.html":{"url":"directives/ValidateBcPostalDirective.html","title":"directive - ValidateBcPostalDirective","body":"\n                   \n\n\n\n\n\n\n\n  Directives\n  ValidateBcPostalDirective\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/common/lib/components/postal-code/validate-bc-postal.directive.ts\n        \n\n\n            \n                Implements\n            \n            \n                            Validator\n            \n\n\n        \n            Metadata\n            \n                \n                    \n                        Providers\n                        \n                            \n                                { provide: NG_VALIDATORS, useExisting: ValidateBcPostalDirective, multi: true }\n                            \n                        \n                    \n\n                    \n                        Selector\n                        [commonValidateBcPostal]\n                    \n\n                \n            \n        \n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                validate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            validate\n                        \n                        \n                    \n                \n            \n            \n                \nvalidate(control: AbstractControl)\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/components/postal-code/validate-bc-postal.directive.ts:27\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    control\n                                    \n                                                AbstractControl\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     literal type | null\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n    \n\n\n    \n        import { Directive } from '@angular/core';\nimport { NG_VALIDATORS, Validator, AbstractControl, ValidatorFn, ValidationErrors } from '@angular/forms';\n\n\n// TODO: determine whether this is used or not.  If not use, maybe it can be removed\n//  @deprecated - logic added to validate-postalcode directive\nexport const commonValidateBcPostal: ValidatorFn = (control: AbstractControl): ValidationErrors | null => {\n  /**\n  * Valid characters for BC postal code\n  */\n const criteria: RegExp = RegExp('^[Vv]\\\\d[ABCEGHJ-NPRSTV-Zabceghj-nprstv-z][ ]?\\\\d[ABCEGHJ-NPRSTV-Zabceghj-nprstv-z]\\\\d$');\n\n  if ( control.value ) {\n    return criteria.test( control.value ) ? null : { 'invalidBCPostal': true };\n  }\n  return null;\n};\n\n@Directive({\n  selector: '[commonValidateBcPostal]',\n  providers: [\n    {provide: NG_VALIDATORS, useExisting: ValidateBcPostalDirective, multi: true}\n  ]\n})\nexport class ValidateBcPostalDirective implements Validator {\n\n  validate( control: AbstractControl ): {[key: string]: any} | null {\n    return commonValidateBcPostal( control );\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"directives/ValidateCityDirective.html":{"url":"directives/ValidateCityDirective.html","title":"directive - ValidateCityDirective","body":"\n                   \n\n\n\n\n\n\n\n  Directives\n  ValidateCityDirective\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/common/lib/components/city/validate-city.directive.ts\n        \n\n\n            \n                Implements\n            \n            \n                            Validator\n            \n\n\n        \n            Metadata\n            \n                \n                    \n                        Providers\n                        \n                            \n                                { provide: NG_VALIDATORS, useExisting: ValidateCityDirective, multi: true }\n                            \n                        \n                    \n\n                    \n                        Selector\n                        [commonValidateCity]\n                    \n\n                \n            \n        \n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                validate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            validate\n                        \n                        \n                    \n                \n            \n            \n                \nvalidate(control: AbstractControl)\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/components/city/validate-city.directive.ts:26\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    control\n                                    \n                                                AbstractControl\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     literal type | null\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n    \n\n\n    \n        import { Directive } from '@angular/core';\nimport { ValidatorFn, AbstractControl, ValidationErrors, NG_VALIDATORS, Validator } from '@angular/forms';\n\nexport const commonValidateCity: ValidatorFn = (control: AbstractControl): ValidationErrors | null => {\n\n  /**\n   * Valid characters for  city names\n   */\n const criteria: RegExp = RegExp( '^(?=.*[a-zA-Z])[a-zA-Z0-9\\-.\\' ]*$' );\n\n if ( control.value ) {\n    const result = criteria.test( control.value );\n    return result ? null : { 'invalidChar': true };\n }\n return null;\n};\n\n@Directive({\n  selector: '[commonValidateCity]',\n  providers: [\n    {provide: NG_VALIDATORS, useExisting: ValidateCityDirective, multi: true}\n  ]\n})\nexport class ValidateCityDirective implements Validator {\n\n  validate( control: AbstractControl ): {[key: string]: any} | null {\n\n    return commonValidateCity( control );\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"directives/ValidateNameDirective.html":{"url":"directives/ValidateNameDirective.html","title":"directive - ValidateNameDirective","body":"\n                   \n\n\n\n\n\n\n\n  Directives\n  ValidateNameDirective\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/common/lib/components/name/validate-name.directive.ts\n        \n\n\n            \n                Implements\n            \n            \n                            Validator\n            \n\n\n        \n            Metadata\n            \n                \n                    \n                        Providers\n                        \n                            \n                                { provide: NG_VALIDATORS, useExisting: ValidateNameDirective, multi: true }\n                            \n                        \n                    \n\n                    \n                        Selector\n                        [commonValidateName]\n                    \n\n                \n            \n        \n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                validate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            validate\n                        \n                        \n                    \n                \n            \n            \n                \nvalidate(control: AbstractControl)\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/components/name/validate-name.directive.ts:26\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    control\n                                    \n                                                AbstractControl\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     literal type | null\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n    \n\n\n    \n        import { Directive } from '@angular/core';\nimport { NG_VALIDATORS, Validator, AbstractControl, ValidatorFn, ValidationErrors } from '@angular/forms';\n\n\nexport const commonValidateName: ValidatorFn = (control: AbstractControl): ValidationErrors | null => {\n   /**\n   * Valid characters for name\n   */\n  const criteria: RegExp = RegExp( '^[a-zA-Z][a-zA-Z\\-.\\' ]*$' );\n\n  if ( control.value ) {\n    return criteria.test( control.value ) ? null : { 'invalidChar': true };\n  }\n  return null;\n};\n\n\n@Directive({\n  selector: '[commonValidateName]',\n  providers: [\n    {provide: NG_VALIDATORS, useExisting: ValidateNameDirective, multi: true}\n  ]\n})\nexport class ValidateNameDirective implements Validator {\n\n  validate( control: AbstractControl ): {[key: string]: any} | null {\n\n    return commonValidateName( control );\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"directives/ValidatePostalcodeDirective.html":{"url":"directives/ValidatePostalcodeDirective.html","title":"directive - ValidatePostalcodeDirective","body":"\n                   \n\n\n\n\n\n\n\n  Directives\n  ValidatePostalcodeDirective\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/common/lib/components/postal-code/validate-postalcode.directive.ts\n        \n\n\n            \n                Implements\n            \n            \n                            Validator\n            \n\n\n        \n            Metadata\n            \n                \n                    \n                        Providers\n                        \n                            \n                                { provide: NG_VALIDATORS, useExisting: ValidatePostalcodeDirective, multi: true }\n                            \n                        \n                    \n\n                    \n                        Selector\n                        [commonValidatePostalcode]\n                    \n\n                \n            \n        \n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                validate\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                bcOnly\n                            \n                            \n                                hasMask\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n\n            \n    Inputs\n        \n            \n                \n                    \n                        \n                        bcOnly\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/postal-code/validate-postalcode.directive.ts:49\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        hasMask\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : true\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/postal-code/validate-postalcode.directive.ts:48\n                            \n                        \n            \n        \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            validate\n                        \n                        \n                    \n                \n            \n            \n                \nvalidate(control: AbstractControl)\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/components/postal-code/validate-postalcode.directive.ts:51\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    control\n                                    \n                                                AbstractControl\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     literal type | null\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n    \n\n\n    \n        import { Directive, Input } from '@angular/core';\nimport { ValidatorFn, AbstractControl, NG_VALIDATORS, Validator } from '@angular/forms';\n\n// local function\nfunction validatePC(control: AbstractControl, hasMask: boolean, bcOnly: boolean): { [key: string]: boolean } | null {\n\n  if ( control.value ) {\n\n    if ( hasMask ) {\n      const cdnFormat: RegExp = /^[A-Za-z][0-9][A-Za-z]\\s?[0-9][A-Za-z][0-9]$/;\n\n      if ( !cdnFormat.test( control.value ) ) {\n        return { 'pattern': true };\n      }\n    } else {\n      const criteria: RegExp = RegExp( '^(?=.*[a-zA-Z0-9])[a-zA-Z0-9 ]*$' );\n\n      if ( !criteria.test( control.value ) ) {\n        return  { 'invalidChar': true };\n      }\n    }\n\n    if ( bcOnly ) {\n      // Valid characters for BC postal code\n      const bcFormat: RegExp = RegExp('^[Vv]\\\\d[ABCEGHJ-NPRSTV-Z][ ]?\\\\d[ABCEGHJ-NPRSTV-Z]\\\\d$');\n      if ( !bcFormat.test( control.value ) ) {\n        return { 'invalidBCPostal': true };\n      }\n    }\n  }\n  return null;\n}\n\nexport function commonValidatePostalcode( hasMask: boolean, bcOnly: boolean ): ValidatorFn {\n\n  return ( control: AbstractControl ): { [key: string]: boolean } | null => {\n    return validatePC( control, hasMask , bcOnly);\n  };\n}\n\n@Directive({\n  selector: '[commonValidatePostalcode]',\n  providers: [\n    {provide: NG_VALIDATORS, useExisting: ValidatePostalcodeDirective, multi: true}\n  ]\n})\nexport class ValidatePostalcodeDirective implements Validator {\n  @Input() hasMask: boolean = true;\n  @Input() bcOnly: boolean = false;\n\n  validate( control: AbstractControl ): {[key: string]: any} | null {\n\n    return validatePC( control, this.hasMask , this.bcOnly );\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"directives/ValidateRegionDirective.html":{"url":"directives/ValidateRegionDirective.html","title":"directive - ValidateRegionDirective","body":"\n                   \n\n\n\n\n\n\n\n  Directives\n  ValidateRegionDirective\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/common/lib/components/validate-region/validate-region.directive.ts\n        \n\n\n            \n                Implements\n            \n            \n                            Validator\n            \n\n\n        \n            Metadata\n            \n                \n                    \n                        Providers\n                        \n                            \n                                { provide: NG_VALIDATORS, useExisting: ValidateRegionDirective, multi: true }\n                            \n                        \n                    \n\n                    \n                        Selector\n                        [commonValidateRegion]\n                    \n\n                \n            \n        \n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                validate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            validate\n                        \n                        \n                    \n                \n            \n            \n                \nvalidate(control: AbstractControl)\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/components/validate-region/validate-region.directive.ts:26\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    control\n                                    \n                                                AbstractControl\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     literal type | null\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n    \n\n\n    \n        import { Directive } from '@angular/core';\nimport { ValidatorFn, AbstractControl, ValidationErrors, NG_VALIDATORS, Validator } from '@angular/forms';\n\nexport const commonValidateRegion: ValidatorFn = (control: AbstractControl): ValidationErrors | null => {\n\n  /**\n   * Valid characters for country/province/region names\n   */\n const criteria: RegExp = RegExp( '^(?=.*[a-zA-Z])[a-zA-Z\\-.\\' ]*$' );\n\n if ( control.value ) {\n    const result = criteria.test( control.value );\n    return result ? null : { 'invalidChar': true };\n }\n return null;\n};\n\n@Directive({\n  selector: '[commonValidateRegion]',\n  providers: [\n    {provide: NG_VALIDATORS, useExisting: ValidateRegionDirective, multi: true}\n  ]\n})\nexport class ValidateRegionDirective implements Validator {\n\n  validate( control: AbstractControl ): {[key: string]: any} | null {\n\n    return commonValidateRegion( control );\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"directives/ValidateStreetDirective.html":{"url":"directives/ValidateStreetDirective.html","title":"directive - ValidateStreetDirective","body":"\n                   \n\n\n\n\n\n\n\n  Directives\n  ValidateStreetDirective\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/common/lib/components/street/validate-street.directive.ts\n        \n\n\n            \n                Implements\n            \n            \n                            Validator\n            \n\n\n        \n            Metadata\n            \n                \n                    \n                        Providers\n                        \n                            \n                                { provide: NG_VALIDATORS, useExisting: ValidateStreetDirective, multi: true }\n                            \n                        \n                    \n\n                    \n                        Selector\n                        [commonValidateStreet]\n                    \n\n                \n            \n        \n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                validate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            validate\n                        \n                        \n                    \n                \n            \n            \n                \nvalidate(control: AbstractControl)\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/components/street/validate-street.directive.ts:25\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    control\n                                    \n                                                AbstractControl\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     literal type | null\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n    \n\n\n    \n        import { Directive } from '@angular/core';\nimport { ValidatorFn, AbstractControl, ValidationErrors, NG_VALIDATORS, Validator } from '@angular/forms';\n\nexport const commonValidateStreet: ValidatorFn = (control: AbstractControl): ValidationErrors | null => {\n  /**\n  * Valid characters for street\n  */\n const criteria: RegExp = RegExp( '^(?=.*[a-zA-Z0-9])[a-zA-Z0-9#/&\\-.\\' ]*$' );\n\n if ( control.value ) {\n    const result = criteria.test( control.value );\n    return result ? null : { 'invalidChar': true };\n }\n return null;\n};\n\n@Directive({\n  selector: '[commonValidateStreet]',\n  providers: [\n    {provide: NG_VALIDATORS, useExisting: ValidateStreetDirective, multi: true}\n  ]\n})\nexport class ValidateStreetDirective implements Validator {\n\n  validate( control: AbstractControl ): {[key: string]: any} | null {\n\n    return commonValidateStreet( control );\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/WizardProgressBarComponent.html":{"url":"components/WizardProgressBarComponent.html","title":"component - WizardProgressBarComponent","body":"\n                   \n\n\n\n\n\n  Components\n  WizardProgressBarComponent\n\n\n\n        \n            Info\n        \n        \n            Design Guidelines\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    projects/common/lib/components/wizard-progress-bar/wizard-progress-bar.component.ts\n\n\n    \n        Description\n    \n    \n        NPM Dependencies:\n  a) rxjs\n  b) ngx-bootstrap\n\n    \n\n\n    \n        Implements\n    \n    \n                    OnInit\n                    OnDestroy\n    \n\n\n\n    Metadata\n    \n        \n\n            \n                changeDetection\n                ChangeDetectionStrategy.OnPush\n            \n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                common-wizard-progress-bar\n            \n\n            \n                styleUrls\n                ./wizard-progress-bar.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./wizard-progress-bar.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                activeIndex\n                            \n                            \n                                    Private\n                                routerEvents$\n                            \n                            \n                                stepContainer\n                            \n                            \n                                steps\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                calculateProgressPercentage\n                            \n                            \n                                getActiveIndex\n                            \n                            \n                                ngOnDestroy\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                    Private\n                                scrollStepIntoView\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                progressSteps\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(router: Router, cd: ChangeDetectorRef)\n                    \n                \n                        \n                            \n                                Defined in projects/common/lib/components/wizard-progress-bar/wizard-progress-bar.component.ts:28\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        cd\n                                                  \n                                                        \n                                                                        ChangeDetectorRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        progressSteps\n                    \n                \n                \n                    \n                        Type :         WizardProgressItem[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/wizard-progress-bar/wizard-progress-bar.component.ts:22\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            calculateProgressPercentage\n                        \n                        \n                    \n                \n            \n            \n                \ncalculateProgressPercentage()\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/components/wizard-progress-bar/wizard-progress-bar.component.ts:55\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         Number\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getActiveIndex\n                        \n                        \n                    \n                \n            \n            \n                \ngetActiveIndex(url)\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/components/wizard-progress-bar/wizard-progress-bar.component.ts:70\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    url\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         number\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnDestroy\n                        \n                        \n                    \n                \n            \n            \n                \nngOnDestroy()\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/components/wizard-progress-bar/wizard-progress-bar.component.ts:50\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/components/wizard-progress-bar/wizard-progress-bar.component.ts:33\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            scrollStepIntoView\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    scrollStepIntoView()\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/components/wizard-progress-bar/wizard-progress-bar.component.ts:80\n                \n            \n\n\n            \n                \n                    Primarily for mobile, this horizontally scrolls the step into view.\nNote - be very careful with any changes to this function because it steps\noutside of Angular to call native browser functions.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            activeIndex\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/common/lib/components/wizard-progress-bar/wizard-progress-bar.component.ts:26\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            routerEvents$\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Subscription\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/common/lib/components/wizard-progress-bar/wizard-progress-bar.component.ts:28\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            stepContainer\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         ElementRef\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ViewChild('stepContainer')\n                            \n                        \n                    \n                        \n                            \n                                    Defined in projects/common/lib/components/wizard-progress-bar/wizard-progress-bar.component.ts:23\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            steps\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     QueryList>\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ViewChildren('steps')\n                            \n                        \n                    \n                        \n                            \n                                    Defined in projects/common/lib/components/wizard-progress-bar/wizard-progress-bar.component.ts:24\n                            \n                        \n\n\n            \n        \n\n\n\n\n    \n        Design Guidelines\nLorem ipsum dolor sit amet consectetur adipisicing elit. Sapiente, magnam ipsam. Sit quasi natus architecto rerum unde non provident! Quia nisi facere amet iste mollitia voluptatem non molestias esse optio?\nAperiam fugiat consectetur temporibus, iste repellat, quisquam sapiente nisi distinctio optio, autem nemo tenetur error eum voluptatibus ab accusamus quis voluptatum blanditiis. Quam et ut reprehenderit vitae nobis, at ipsum!\nExercitationem pariatur animi repudiandae corporis obcaecati ratione ducimus beatae quam, nostrum magnam unde numquam quidem cupiditate odit id. Beatae alias molestiae, optio incidunt harum quia voluptates deserunt sequi. Nesciunt, optio.\n\n    \n\n    \n        import { Component, OnInit, Input, ViewChild, ElementRef,\n         ViewChildren, QueryList, ChangeDetectionStrategy,\n         ChangeDetectorRef, OnDestroy } from '@angular/core';\nimport { Router, NavigationEnd } from '@angular/router';\nimport { filter, map } from 'rxjs/operators';\nimport { Subscription } from 'rxjs';\nimport { WizardProgressItem } from '../../models/container';\n\n/**\n * NPM Dependencies:\n *  a) rxjs\n *  b) ngx-bootstrap\n */\n\n@Component({\n  selector: 'common-wizard-progress-bar',\n  templateUrl: './wizard-progress-bar.component.html',\n  styleUrls: ['./wizard-progress-bar.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class WizardProgressBarComponent implements OnInit, OnDestroy {\n  @Input() progressSteps: WizardProgressItem[] = [];\n  @ViewChild('stepContainer') stepContainer: ElementRef;\n  @ViewChildren('steps') steps: QueryList>;\n\n  public activeIndex: number;\n\n  private routerEvents$: Subscription;\n\n  constructor(private router: Router, private cd: ChangeDetectorRef) {\n   }\n\n  ngOnInit() {\n\n    // Update the progress bar view on route change and _only_ route chaange.\n    // Skip most of Angular's ChangeDetection in favour of manually optimizing.\n    this.routerEvents$ = this.router.events.pipe(\n      filter(ev => ev instanceof NavigationEnd),\n      map((ev: NavigationEnd) => ev.url)\n    ).subscribe(url => {\n      this.activeIndex = this.getActiveIndex(url);\n      this.cd.detectChanges();\n      this.scrollStepIntoView();\n    });\n\n    // Must schedule first run manually, or bar won't be set.\n    this.activeIndex = this.getActiveIndex(this.router.url);\n  }\n\n  ngOnDestroy() {\n    this.cd.detach();\n    this.routerEvents$.unsubscribe();\n  }\n\n  calculateProgressPercentage(): Number {\n    const denominator = this.progressSteps.length;\n    const numerator = this.activeIndex + 1;\n\n    if (denominator === 0 || numerator > denominator) {\n      return 100;\n    }\n\n    // Because we've switched from space-evenly to space-around (for IE), we\n    // have to handle the half-space that space-around adds to the start/end of\n    // the container\n    const halfSpace = 1 / (denominator * 2);\n    return Math.round(((numerator / denominator) - halfSpace) * 100);\n  }\n\n  getActiveIndex(url): number {\n    return this.progressSteps.findIndex(x => url.includes(x.route));\n  }\n\n   /**\n   * Primarily for mobile, this horizontally scrolls the step into view.\n   *\n   * Note - be very careful with any changes to this function because it steps\n   * outside of Angular to call native browser functions.\n   */\n  private scrollStepIntoView() {\n    const target = this.steps.toArray()[this.activeIndex];\n    const container = document.getElementsByClassName('horizontal-scroll');\n    if (container.length === 1) {\n      // Since we're already breaking out of Angular, we try and be safe by using a try/catch.\n      // Otherwise an error here could halt execution,\n      try {\n        container[0].scrollLeft = Math.abs(target.nativeElement.offsetLeft - (window.outerWidth / 2));\n      } catch (error) {}\n    }\n  }\n\n}\n\n    \n\n    \n        \n\n\n\n\n  \n\n    \n      {{step.title}}\n    \n\n  \n\n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '            {{step.title}}      '\n    var COMPONENTS = [{'name': 'AccordionCommonComponent', 'selector': 'common-accordion'},{'name': 'AddressComponent', 'selector': 'common-address'},{'name': 'ButtonComponent', 'selector': 'common-button'},{'name': 'ButtonGroupComponent', 'selector': 'common-button-group'},{'name': 'CaptchaComponent', 'selector': 'common-captcha'},{'name': 'CheckboxComponent', 'selector': 'common-checkbox'},{'name': 'CityComponent', 'selector': 'common-city'},{'name': 'ConfirmTemplateComponent', 'selector': 'common-confirm-template'},{'name': 'ConsentModalComponent', 'selector': 'common-consent-modal'},{'name': 'CoreBreadcrumbComponent', 'selector': 'common-core-breadcrumb'},{'name': 'CountryComponent', 'selector': 'common-country'},{'name': 'DateComponent', 'selector': 'common-date'},{'name': 'DatepickerComponent', 'selector': 'common-datepicker'},{'name': 'DropdownComponent', 'selector': 'common-dropdown'},{'name': 'EmailComponent', 'selector': 'common-email'},{'name': 'ErrorContainerComponent', 'selector': 'common-error-container'},{'name': 'FileUploaderComponent', 'selector': 'common-file-uploader'},{'name': 'FormActionBarComponent', 'selector': 'common-form-action-bar'},{'name': 'FormSubmitBarComponent', 'selector': 'common-form-submit-bar'},{'name': 'FullNameComponent', 'selector': 'common-full-name'},{'name': 'GeocoderInputComponent', 'selector': 'common-geocoder-input'},{'name': 'HeaderComponent', 'selector': 'common-header'},{'name': 'NameComponent', 'selector': 'common-name'},{'name': 'PageFrameworkComponent', 'selector': 'common-page-framework'},{'name': 'PageSectionComponent', 'selector': 'common-page-section'},{'name': 'PasswordComponent', 'selector': 'common-password'},{'name': 'PhnComponent', 'selector': 'common-phn'},{'name': 'PhoneNumberComponent', 'selector': 'common-phone-number'},{'name': 'PostalCodeComponent', 'selector': 'common-postal-code'},{'name': 'ProvinceComponent', 'selector': 'common-province'},{'name': 'RadioComponent', 'selector': 'common-radio'},{'name': 'SampleModalComponent', 'selector': 'common-sample-modal'},{'name': 'SinComponent', 'selector': 'common-sin'},{'name': 'StreetComponent', 'selector': 'common-street'},{'name': 'ThumbnailComponent', 'selector': 'common-thumbnail'},{'name': 'ToggleComponent', 'selector': 'common-toggle'},{'name': 'WizardProgressBarComponent', 'selector': 'common-wizard-progress-bar'},{'name': 'XiconButtonComponent', 'selector': 'common-xicon-button'}];\n    var DIRECTIVES = [{'name': 'DateFieldFormatDirective', 'selector': '[commonDateFieldFormat]'},{'name': 'DuplicateCheckDirective', 'selector': '[commonDuplicateCheck]'},{'name': 'ValidateBcPostalDirective', 'selector': '[commonValidateBcPostal]'},{'name': 'ValidateCityDirective', 'selector': '[commonValidateCity]'},{'name': 'ValidateNameDirective', 'selector': '[commonValidateName]'},{'name': 'ValidatePostalcodeDirective', 'selector': '[commonValidatePostalcode]'},{'name': 'ValidateRegionDirective', 'selector': '[commonValidateRegion]'},{'name': 'ValidateStreetDirective', 'selector': '[commonValidateStreet]'}];\n    var ACTUAL_COMPONENT = {'name': 'WizardProgressBarComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/WizardProgressItem.html":{"url":"interfaces/WizardProgressItem.html","title":"interface - WizardProgressItem","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  WizardProgressItem\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/common/lib/models/container.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        route\n                                \n                                \n                                        title\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        route\n                                    \n                                \n                                \n                                    \n                                        route:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        title\n                                    \n                                \n                                \n                                    \n                                        title:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Route } from '@angular/router';\n\nexport interface WizardProgressItem {\n  title: string;\n  route: string;\n}\n\n/** Base functionality for container that is used to display bread crumbs */\nexport class Container {\n\n  /** Route items for the stepper */\n  progressSteps: WizardProgressItem[];\n\n  /**\n   * Converts a lower case string of a route in a user readable title.  e.g.\n   * \"personal-info\" -> \"Personal Info\"\n   */\n  convertRouteToTitle(routePath: string): string {\n    return routePath.split('-').map(x => x[0].toUpperCase() + x.slice(1)).join(' ');\n  }\n\n  protected setProgressSteps( pageRoutes: Route[] ): void {\n        // Interface for wizard progress items\n        this.progressSteps = pageRoutes.map(page => {\n          if (page.path !== '') {\n            return {\n              title: this.convertRouteToTitle(page.path),\n              route: page.path\n            };\n          }\n        }).filter(x => x);\n  }\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/XiconButtonComponent.html":{"url":"components/XiconButtonComponent.html","title":"component - XiconButtonComponent","body":"\n                   \n\n\n\n\n\n  Components\n  XiconButtonComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    projects/common/lib/components/xicon-button/xicon-button.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                common-xicon-button\n            \n\n            \n                styleUrls\n                ./xicon-button.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./xicon-button.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                            \n                                onBtnClick\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                label\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                click\n                            \n                            \n                                clickEvent\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in projects/common/lib/components/xicon-button/xicon-button.component.ts:20\n                            \n                        \n\n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        label\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/xicon-button/xicon-button.component.ts:15\n                            \n                        \n                \n                    \n                        Label to use for accessibility.\n\n                    \n                \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        click\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/xicon-button/xicon-button.component.ts:20\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        clickEvent\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in projects/common/lib/components/xicon-button/xicon-button.component.ts:19\n                            \n                        \n            \n        \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/components/xicon-button/xicon-button.component.ts:24\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            onBtnClick\n                        \n                        \n                    \n                \n            \n            \n                \nonBtnClick()\n                \n            \n\n\n            \n                \n                    Defined in projects/common/lib/components/xicon-button/xicon-button.component.ts:35\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n    \n        import { Component, Input, Output, EventEmitter, OnInit } from '@angular/core';\nimport { MoHCommonLibraryError } from '../../../helpers/library-error';\n\n@Component({\n  selector: 'common-xicon-button',\n  templateUrl: './xicon-button.component.html',\n  styleUrls: ['./xicon-button.component.scss']\n})\nexport class XiconButtonComponent implements OnInit {\n\n  /**\n   * Label to use for accessibility.\n   * @required\n   */\n  @Input() label: string;\n  /**\n   * @deprecated - Remove at breaking change and go to (click)\n   */\n  @Output() clickEvent: EventEmitter = new EventEmitter();\n  @Output() click: EventEmitter = new EventEmitter();\n\n  constructor() { }\n\n  ngOnInit() {\n    if (!this.label) {\n      // todo - change to MohCommmonLibraryError -> test in IE10\n      // throw Error('common-xicon-button initialized without label. You MUST supply a label attribute for accessibility.');\n      const msg = `common-xicon-button initialized without label. You MUST supply a label attribute for accessibility.\n      e.g. \n`; // Intentional to create a blank line between our error and stack trace.\n      throw new MoHCommonLibraryError(msg);\n    }\n  }\n\n  onBtnClick() {\n    this.clickEvent.emit();\n    this.click.emit();\n  }\n}\n\n    \n\n    \n        \n  \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  '\n    var COMPONENTS = [{'name': 'AccordionCommonComponent', 'selector': 'common-accordion'},{'name': 'AddressComponent', 'selector': 'common-address'},{'name': 'ButtonComponent', 'selector': 'common-button'},{'name': 'ButtonGroupComponent', 'selector': 'common-button-group'},{'name': 'CaptchaComponent', 'selector': 'common-captcha'},{'name': 'CheckboxComponent', 'selector': 'common-checkbox'},{'name': 'CityComponent', 'selector': 'common-city'},{'name': 'ConfirmTemplateComponent', 'selector': 'common-confirm-template'},{'name': 'ConsentModalComponent', 'selector': 'common-consent-modal'},{'name': 'CoreBreadcrumbComponent', 'selector': 'common-core-breadcrumb'},{'name': 'CountryComponent', 'selector': 'common-country'},{'name': 'DateComponent', 'selector': 'common-date'},{'name': 'DatepickerComponent', 'selector': 'common-datepicker'},{'name': 'DropdownComponent', 'selector': 'common-dropdown'},{'name': 'EmailComponent', 'selector': 'common-email'},{'name': 'ErrorContainerComponent', 'selector': 'common-error-container'},{'name': 'FileUploaderComponent', 'selector': 'common-file-uploader'},{'name': 'FormActionBarComponent', 'selector': 'common-form-action-bar'},{'name': 'FormSubmitBarComponent', 'selector': 'common-form-submit-bar'},{'name': 'FullNameComponent', 'selector': 'common-full-name'},{'name': 'GeocoderInputComponent', 'selector': 'common-geocoder-input'},{'name': 'HeaderComponent', 'selector': 'common-header'},{'name': 'NameComponent', 'selector': 'common-name'},{'name': 'PageFrameworkComponent', 'selector': 'common-page-framework'},{'name': 'PageSectionComponent', 'selector': 'common-page-section'},{'name': 'PasswordComponent', 'selector': 'common-password'},{'name': 'PhnComponent', 'selector': 'common-phn'},{'name': 'PhoneNumberComponent', 'selector': 'common-phone-number'},{'name': 'PostalCodeComponent', 'selector': 'common-postal-code'},{'name': 'ProvinceComponent', 'selector': 'common-province'},{'name': 'RadioComponent', 'selector': 'common-radio'},{'name': 'SampleModalComponent', 'selector': 'common-sample-modal'},{'name': 'SinComponent', 'selector': 'common-sin'},{'name': 'StreetComponent', 'selector': 'common-street'},{'name': 'ThumbnailComponent', 'selector': 'common-thumbnail'},{'name': 'ToggleComponent', 'selector': 'common-toggle'},{'name': 'WizardProgressBarComponent', 'selector': 'common-wizard-progress-bar'},{'name': 'XiconButtonComponent', 'selector': 'common-xicon-button'}];\n    var DIRECTIVES = [{'name': 'DateFieldFormatDirective', 'selector': '[commonDateFieldFormat]'},{'name': 'DuplicateCheckDirective', 'selector': '[commonDuplicateCheck]'},{'name': 'ValidateBcPostalDirective', 'selector': '[commonValidateBcPostal]'},{'name': 'ValidateCityDirective', 'selector': '[commonValidateCity]'},{'name': 'ValidateNameDirective', 'selector': '[commonValidateName]'},{'name': 'ValidatePostalcodeDirective', 'selector': '[commonValidatePostalcode]'},{'name': 'ValidateRegionDirective', 'selector': '[commonValidateRegion]'},{'name': 'ValidateStreetDirective', 'selector': '[commonValidateStreet]'}];\n    var ACTUAL_COMPONENT = {'name': 'XiconButtonComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"changelog.html":{"url":"changelog.html","title":"getting-started - changelog","body":"\n                   \n\nUnreleased \"moh-common-lib\" (2019-12-03)\n3.0.0-rc.20 \"moh-common-lib\" (2019-12-03)\nFeatures\n\nCommonImage: Make generic, add toJSON() method. Formatting. (8a9392e)\n\n3.0.0-rc.19 \"moh-common-lib\" (2019-12-02)\nBug Fixes\n\nset each field of date separately so year does not default to 1901 when year is 1. (CR18975) (dc606f1)\n\n3.0.0-rc.18 \"moh-common-lib\" (2019-12-02)\nFeatures\n\nAbstractHttpService: Create uploadAttachment method (bf0bcc2)\nCommonImage: Can set fileContent via optional constructor param (cd1cc3b)\n\n3.0.0-rc.17 \"moh-common-lib\" (2019-11-27)\nFeatures\n\nFormActionBar: Automatically call scrollToError on click. (3ff09e0)\nHelper: Create scrollToError() function. (7bf5025)\n\nStyles\n\nFileUpload: Reduce default size by removing a spacing element. (322d58c)\nPostalCode: Remove placeholder (f27b941)\n\n3.0.0-rc.16 \"moh-common-lib\" (2019-11-20)\nBug Fixes\n\nset sin value before call onChange (7e270d8)\nupdated email error message, strip off (optional) from labels (788c3d1)\nupdated phone error message (f0202f2)\n\n3.0.0-rc.15 \"moh-common-lib\" (2019-11-15)\nCode Refactoring\n\nemail component uses abstract control class and is self-validing, units tests started (f21d329)\n\n3.0.0-rc.14 \"moh-common-lib\" (2019-11-14)\nBug Fixes\n\nrange dates indicate no future or past dates allowed (see notes at top of file) (a73785f)\n\nCode Refactoring\n\nprovince component uses abstract control class, added ng-select to styles for testing (48e2120)\ncity component uses abstract control class (492934b)\ncommonPhnValidation deprecriated, phnComponent modified to be self-validating (cc9910b)\ncommonValidateSin removed, sin component self validates, reactive tests started for sin (e0bd207)\nstreet component uses abstract control class (36eeddb)\n\nFeatures\n\nAdded CommonLogEvents to commonLogger - common events that apps have when logging (a1b8211)\n\nTests\n\nrefactored tests so that call helper functions (21afb82)\n\n3.0.0-rc.13 \"moh-common-lib\" (2019-11-06)\nBug Fixes\n\nadded logic to abstract-form-control to check for no label submitted. (ed615a6)\ncheck for label not passed in set default value as 'Field' (655a0fd)\n\n3.0.0-rc.12 \"moh-common-lib\" (2019-11-05)\nBug Fixes\n\nGeocoderInput: Now emits an onChange with null if it has no results. (009d779)\n\n3.0.0-rc.11 \"moh-common-lib\" (2019-11-05)\nBug Fixes\n\nFileUploader: Fix a11y for danging aria label (3f6a466)\nCR18890 - added check for year (679ac15)\n\nTests\n\nRemove extra unnecessary tick() call. (8248e61)\nUnit tests for phone/radio passing.  Also internal refactoring. (14bce6e)\n\n3.0.0-rc.10 \"moh-common-lib\" (2019-11-01)\nFeatures\n\nPhone: Phone now has an 'incompleteValue' error and text. (a1bd381)\n\n3.0.0-rc.9 \"moh-common-lib\" (2019-10-30)\nBug Fixes\n\nDate: Remove debug label (a7efeee)\n\n3.0.0-rc.8 \"moh-common-lib\" (2019-10-30)\nBug Fixes\n\nDate: Replace (chance) event with (blur) for IE (61b54fd)\n\n3.0.0-rc.7 \"moh-common-lib\" (2019-10-29)\nBug Fixes\n\nPhoneNumber: IE fix by changing event (71eb531)\n\nFeatures\n\nPhoneNumber: Add allowInternational flag to disable the \"+1\" (108e46b)\nPhoneNumber: Now a self-validating component. (6650ef8)\n\nBREAKING CHANGES\n\nPhoneNumber: Deleted commonValidatePhone directive\n\n3.0.0-rc.6 \"moh-common-lib\" (2019-10-29)\nBug Fixes\n\nDate: Remove ngOnChanges (015602c)\nadded ngChanges to date to detect label changes, no longer can add question by default (38c822b)\nadded placeholder country & regexp for label (61c0cdc)\n\n3.0.0-rc.5 \"moh-common-lib\" (2019-10-28)\nFeatures\n\nadded fullname to person.model (28d9585)\nAbstractAPI: Has a generateUUID method. (5362c67)\n\n3.0.0-rc.4 \"moh-common-lib\" (2019-10-23)\nBug Fixes\n\nDate format string modified to use format from date-fns module (4bb54c0)\nFixed date component to handle no validators on the control. (5441be2)\n\n3.0.0-rc.3 \"moh-common-lib\" (2019-10-22)\n3.0.0-rc.2 \"moh-common-lib\" (2019-10-22)\nBug Fixes\n\nDate:  Setting restrictDate to \"past\" no longer includes today, matching previous behaviour (8fc79af)\n\n3.0.0-rc.1 \"moh-common-lib\" (2019-10-22)\nBuild\n\nAdd new command to build release candidates for v3 (e89e6f3)\n\nFeatures\n\nDate: DateComponent is NgControl (51f2ea4)\n\n3.0.0-rc.0 \"moh-common-lib\" (2019-10-22)\n2.28.0 \"moh-common-lib\" (2019-10-17)\nBug Fixes\n\ncall _onChange to trigger form validations (c91fef0)\n\n2.27.2 \"moh-common-lib\" (2019-10-17)\nBug Fixes\n\nFileUploader: Attempted fix at PDF parsing for Edge using worker. (2ebd235)\n\n2.27.1 \"moh-common-lib\" (2019-10-16)\nBug Fixes\n\nConsentModal: disableContinue works correctly (f18457b)\n\n2.27.0 \"moh-common-lib\" (2019-10-16)\nBug Fixes\n\nGeocoderService: Change default API filter (34f0a40)\nGeocoderService: Exendable methods via inheiritance (7355610)\n\nFeatures\n\nGeocoderInput: New Component CommonGeocoderInput (224e362)\nGeocoderInput: Now a ControlValueAccessor (730f9c7)\n\n2.26.0 \"moh-common-lib\" (2019-10-15)\nBug Fixes\n\nlogic in validate postal-code directive to handle bcOnly flag (88bc3f3)\n\nDocumentation\n\nPublishing: Make it more clear when to use \"patch\" or \"minor\" versions. (02cb2c5)\n\nFeatures\n\nCAPTCHA: Shows required error on touched (16be24b)\nadded bc only postal code check for address component (e6db87e)\nConsentModal: Add disableContinue @Input(), used with custom controls (8aa41ec)\n\n2.24.0 \"moh-common-lib\" (2019-10-11)\nFeatures\n\nFileUploader: Add a blank \"Add\" thumbnail user can click (1251212)\nAdded confirmation template for response pages (1f1a0f9)\nAdded confirmation template for response pages (aa2b7f9)\n\n2.23.0 \"moh-common-lib\" (2019-10-10)\nFeatures\n\nadded abilty to modify messages in date rather than replace. (2235059)\n\n2.22.0 \"moh-common-lib\" (2019-10-09)\nFeatures\n\ncommonValidatePhone: Phone format validation (510ad9e)\n\n2.21.0 \"moh-common-lib\" (2019-10-09)\nBug Fixes\n\nPhone: Can now use [ngModel] by itself (5910979)\n\nFeatures\n\nemail: Create EmailComponent (based on Name) (27b488b)\n\nStyles\n\nPageSection: Change bullet styles (f541d81)\n\n2.20.1 \"moh-common-lib\" (2019-10-09)\nStyles\n\nHeader: Header text wraps on mobile, no longer breaking mobile (1303722)\n\n2.20.0 \"moh-common-lib\" (2019-10-08)\nFeatures\n\nadded ability to set query parameters on navigate method in abstract form (4f3e59f)\n\n2.19.0 \"moh-common-lib\" (2019-10-01)\nBug Fixes\n\ndate component to check for null, undefined and zero, trigger year validation on month change (0ed3875)\nfile uploader - check to confirm have array to check length in onChange method (c6067fd)\n\n2.18.1 \"moh-common-lib\" (2019-09-27)\nBug Fixes\n\nfixed off by 1 date in year validator (9a38474)\n\n2.18.0 \"moh-common-lib\" (2019-09-26)\nBug Fixes\n\nbug in file uploader - check for null array (cf962bc)\n\nFeatures\n\nadded sample-modal component to display sample doc images (4f8f2e7)\n\n2.17.1 \"moh-common-lib\" (2019-09-25)\nBug Fixes\n\nadded check for errors when component not used as form control (7d274e8)\ncolor-success changed to 83D31D to match color on mockups (c64c066)\nerror in checkbox html check errors exist (29c5160)\n\nDocumentation\n\nTODO: Create TODO file with list of breaking changes for version 3 (9dc5375)\nTODO: Rename todo to a markdown file for GitHub support (496c252)\n\n2.17.0 \"moh-common-lib\" (2019-09-24)\nBug Fixes\n\nadded space in error message (radio) (6427f10)\nbug introduced when try to display errors when field touched (radio/checkbox) (aceb028)\ncheckbox fixed to be custom form control (1c51f01)\nset radio touched on blur, display required message when touched (c78856a)\n\nDocumentation\n\nTweak publishing so it passes markdownlint (901885e)\n\nFeatures\n\nAdded required error message to component (d5dd02f)\n\n2.16.0 \"moh-common-lib\" (2019-09-20)\nBug Fixes\n\nupdate address1 when street updated (29e521c)\n\n2.15.0 \"moh-common-lib\" (2019-09-19)\nBug Fixes\n\nremoved check for US from address component (996cad7)\n\n2.14.0 \"moh-common-lib\" (2019-09-17)\nFeatures\n\nSet label defaults to yes/no in radio component (66e58e7)\n\n2.13.0 \"moh-common-lib\" (2019-09-17)\nBug Fixes\n\nclear province when country changes, placeholders updated (8380850)\n\n2.12.0 \"moh-common-lib\" (2019-09-16)\nBug Fixes\n\nradio buttons working for more than 2 options as custom form control (f2ccfe6)\nRemoved check for undefined (7398e93)\n\nFeatures\n\nAdded ability to disable specfic fields in address component (5965aec)\n\n2.11.0 \"moh-common-lib\" (2019-09-12)\nBug Fixes\n\nPostal code clears when country changes to Canada (2c0b127)\n\nDocumentation\n\nAdd info on publishing new builds (9855d9c)\n\n2.10.0 \"moh-common-lib\" (2019-09-05)\nBug Fixes\n\nPhoneNumber: The first numbers within the brackets must be 2-9 now (5069fe8)\n\n2.9.0 \"moh-common-lib\" (2019-08-30)\nBug Fixes\n\nexport common image elementsgit (483b735)\n\n2.8.1 \"moh-common-lib\" (2019-08-22)\nBug Fixes\n\nDate: Capitalize placeholders (4d39002)\n\n2.8.0 \"moh-common-lib\" (2019-08-20)\nBug Fixes\n\nReorder address fields (cbbfaa8)\n\nFeatures\n\nadded validation for street component (0699178)\nadded validations for postal code, country/province, added abiltiy to update error messages (60befc2)\nvalidation for valid characters in city component (16da113)\n\n2.7.1 \"moh-common-lib\" (2019-08-15)\nBug Fixes\n\nDateComponent: Handles having 00 as day (67b6f78)\nFileUpload: Remove console log on ngchanges (7c99c1e)\n\n2.7.0 \"moh-common-lib\" (2019-08-13)\nBug Fixes\n\nFixed displaying of the error message in name component (1650a23)\nAddress:  Clear out address line data when removing the line (3f1149e)\n\n2.6.0 \"moh-common-lib\" (2019-08-09)\nCode Refactoring\n\nModified address to used MSP label and length defaults (5bb54fc)\n\nFeatures\n\nfunctions to retrieve country, prov descriptions,  maxlengths input for addresss (978250b)\n\n2.5.2 \"moh-common-lib\" (2019-08-02)\n2.5.1 \"moh-common-lib\" (2019-07-31)\nBug Fixes\n\nremoved plus sign used to concatenate string for aria-label (#32) (3a5677b), closes #32\n\n2.5.0 \"moh-common-lib\" (2019-07-31)\nFeatures\n\nAddress: added input to address component to allow users to change default labels on fields. (#31) (ebb6998), closes #31\n\n2.4.0 \"moh-common-lib\" (2019-07-29)\n2.3.0 \"moh-common-lib\" (2019-07-25)\nFeatures\n\nAddress: Now has default country/prov behaviour built in (8361a0e)\n\n2.2.0 \"moh-common-lib\" (2019-07-25)\nFeatures\n\nAddress: Additional lines must be removed in order (ac9d61c)\nAddress: Now can show 2 extra address lines (previously only one) (af91989)\n\nStyles\n\nXIconButton: Change icon from 'times' to 'times-circle' (aad93b5)\n\n2.1.5 \"moh-common-lib\" (2019-07-18)\nAccessibility\n\nRadio: Hide radio for FireFox but keep tab-focusable. (8f6886f)\nXIconButton: Add label (867f969)\n\n2.1.4 \"moh-common-lib\" (2019-07-16)\nAccessibility\n\nPhone: Fix association of labels for phone component (c122a2a)\n\n2.1.3 \"moh-common-lib\" (2019-07-11)\nAccessibility\n\nRadio: Convert radio to use fieldset. (2c2f322)\nRadio: New focus style for RadioComponent, styled better for mouse (c2fd959)\n\n2.1.2 \"moh-common-lib\" (2019-07-10)\nAccessibility\n\nRadio: Radio is now focusable via tab / screenreader (126d876)\n\nStyles\n\nConsentModal: Backdrop enabled when modal is open. (b901868)\n\n2.1.1 \"moh-common-lib\" (2019-07-09)\nBug Fixes\n\nAddress: Implement allowExtralines to opt-in to new multi-line (5a7c37b)\n\nBREAKING CHANGES\n\nAddress: This reverts an accidentally introduced breaking change in 2.1.0 where all address components would use the new line behaviour.  Now, it is opt-in.\n\n2.1.0 \"moh-common-lib\" (2019-07-09)\nAccessibility\n\nStepper/Wizard: Darken link text by 5% to get AA colour contrast (a27faa9)\n\nBug Fixes\n\nRadio: Fix empty label for RadioComponent for a11y (Waze) (7400a64)\n\nBuild\n\nAdd \"a11y\" type to changelog and commit types (edf0b2e)\n\nCode Refactoring\n\nAddressComponent: Reorganize order of inputs, add AddressLine1 (5d8f61d)\n\nDocumentation\n\nAddressModel: Add TSDOC descriptions on street and addressLine1 (6f093d2)\n\nFeatures\n\nAddressComponent: Add 'disableGeocoder' @Input (a512eb0)\n\n2.0.1 \"moh-common-lib\" (2019-07-04)\nBug Fixes\n\nPhoneNumber: Required @Input works properly (5b18c5f)\n\nCode Refactoring\n\nXIconButton: Add (click) event, @deprecate (clickEvent) (baee5ad)\n\n2.0.0 \"moh-common-lib\" (2019-06-28)\nBug Fixes\n\nDate: Remove console logs. (a9aaf59)\nPHN: Remove console logs when setting values. (d4f0e3b)\nStepper/WizardProgress: Add vertical padding (b555787)\n\nFeatures\n\nFormActionBar: Change to full-width,  remove widthOptions (6254d29)\nName, Postal: Update validators to be compatible with reactive forms (e35f16b)\n\nStyles\n\nPageFramework:  Full height page framework, pushes form bar down (6b8cedd)\n\nBREAKING CHANGES\n\nPageFramework: Shows an error when a FormActionBar is embedded\nFormActionBar: Width changes may break designs, @Input removed\n\n1.8.0 \"moh-common-lib\" (2019-06-25)\nBug Fixes\n\nDropdown: Add visible form label to input (2a511e7)\nProvince: Add placeholder when not using dropdown (8e823c5)\nProvince: Init val = undefined (was empty string); fix placeholder. (09ae712)\n\nFeatures\n\nCity: Add placeholder @Input with default (f103e7c)\nDropdown: Add 'clearable' property from ng-select (8f24e2e)\nProvince: Field is clearable when not required (47d614a)\nStreet: Add placeholder @Input with default (ae493e7)\n\n1.7.0 \"moh-common-lib\" (2019-06-24)\nBug Fixes\n\nCheckbox: Checkbox component now defaults to unchecked. (6775a4d)\n\nDocumentation\n\nAdditionalDocumentation:  preserveSymlinks in for npm link (e458627)\nRouteGuard: Document RouteGuardService and related classes. (fc7fe65)\nRouteGuard: Fix instruction examples for RouteGuard. (3a06f99)\n\nFeatures\n\nXIconButton: Add XIconButtonComponent. Include fixes to RadioComponent. (0ba1d1e)\n\n1.6.2 \"moh-common-lib\" (2019-06-20)\nBug Fixes\n\nCheckbox: Fix labels for checkbox to properly associate (af516d0)\n\n1.6.1 \"moh-common-lib\" (2019-06-19)\nBug Fixes\n\naddress and component - defaults now displaying (6c09982)\n\nFeatures\n\nroute guard implemented (befc319)\n\n1.6.0 \"moh-common-lib\" (2019-06-19)\nDocumentation\n\nContributing: Update contributing to show WIP option (3f42b31)\n\nFeatures\n\nPageFramework: Add 15px left/right padding, to counter taking padding from .container-fluid (7febf6d)\n\n1.5.0 \"moh-common-lib\" (2019-06-18)\nBug Fixes\n\nSIN, Address, RouteGuard: SIN all 0s fix, add RouteGuard service, and default address data. (4295b03)\nToggle: Switch order of Yes/No, so that 'No' comes first. (e485f67)\n\n1.4.0 \"moh-common-lib\" (2019-06-13)\nFeatures\n\ne2e: Add new methods in abstract-test-page (#19) (a702d6d), closes #19\n\n1.3.0 \"moh-common-lib\" (2019-06-13)\nDocumentation\n\nConsentModal: Add example typescript code to open modal. (7ff8510)\nConsentModal: Document consent modal with example (fbc012d)\n\nFeatures\n\nFormActionBar: Add 'extra-width' option to widthOption for all bps (5b88093)\n\n1.2.0 \"moh-common-lib\" (2019-06-10)\nFeatures\n\nFormActionBar: Add \"widthOption\" to for custom CSS width override (36476f8)\n\n1.1.1 \"moh-common-lib\" (2019-06-07)\nFeatures\n\nHeader: Logo image path can be overwritten (03c1243)\n\n1.1.0 \"moh-common-lib\" (2019-06-07)\nBug Fixes\n\nSIN string all zeros - invalid (96a58b1)\nSIN, PHN: SIN string all zeros is invalid, added isBCPHn to PHN. (51bfe3b)\n\nBuild\n\nnpm-scripts: Update what is committed after auto-buiding (c8fb31b)\n\nDocumentation\n\nReadme: Update to readme and docs homepage (f334faf)\n\nFeatures\n\nHeader: Create HeaderComponent with built-in \"Skip To Content\" (3868c50)\n\n1.0.2 \"moh-common-lib\" (2019-06-06)\nBug Fixes\n\nToggle: Properly emit value changes. Had a typo. (e2271b7)\n\n1.0.1 \"moh-common-lib\" (2019-06-06)\nBug Fixes\n\nRadio: Removed the default status label and changed the name of radio (#17) (acbbdc1), closes #17\n\nCode Refactoring\n\nSecurity: up to date in 10.256s (ac7406b)\nToggle: ToggleComponent now uses RadioComponent under the hood (e81927b)\n\n1.0.0 \"moh-common-lib\" (2019-06-05)\nBug Fixes\n\nImports: Merge /services, /models, /images entry points into main (151f173)\n\nFeatures\n\nFullName: Create FullNameComponent for first/middle/last (41f5609)\n\n0.0.34 \"moh-common-lib\" (2019-06-05)\nFeatures\n\nPHN, SIN components from FPC. Name majorly refactored. (c04b81d)\n\n0.0.33 \"moh-common-lib\" (2019-06-04)\nBug Fixes\n\nConsentModal:  ConsentModal passes TSLint rules (66f9608)\nConsentModal: Fixed multiple compile time issues with import paths (09ce95a)\nRadioComponent: Changed onStatusChange to statusChange (185148b)\n\nDocumentation\n\nButtonComponent: Updated documentation for ButtonComponent. (4d5992a)\nButtonGroupComponent: ButtonGroupComponent is DEPRECATED (c580225)\nRadioComponent: Re-organize docs for radio component (b80520f)\n\nFeatures\n\nCreate Button, Checkbox, Consent Modal, Radio, Name, Phone Number components (dd29a60)\nCreate Button, Checkbox, Consent Modal, radio, Name, Phone Number Components  (53a109b), closes PR#13\n\n0.0.32 \"moh-common-lib\" (2019-05-15)\nBug Fixes\n\nautocomplete turned off, fixed bug in postal to work with fpcare (1c8242e)\nDatepicker: Remove the IE provided 'X' to clear input (2ddfc23)\n\nDocumentation\n\nBasic styling to use BC Gov colours and fonts (7226b37)\nCreate design guidelines markdown file for each component (9f5a04e)\n\nFeatures\n\nButtonGroupComponent: Create ButtonGroupComponent with ControlValueAccessor (22710b7)\nDocumentation: Customize tabs in docs, adding \"Design Guidelines\" (df678e6)\n\n0.0.31 \"moh-common-lib\" (2019-05-07)\nBug Fixes\n\nAddressComponent: Include Typeahead module necessary to compile. (7d2e7cd)\nCaptchaComponent: Add autocomplete=\"false\" to CAPTCHA (18d69c6)\n\nFeatures\n\nAddressComponent: Create AddressComponent copied from prime-web. (238c01d)\nAddressComponent: Implement NG_VALUE_ACCESSOR for reactive forms. (8d79d30)\nAddressComponent: Split AddressComponent into City/Country/Province Components (3a98fb0)\nE2E: Create AbstractTestPage in moh-common-lib/e2e (c347c39)\n\n0.0.30 \"moh-common-lib\" (2019-04-25)\nBug Fixes\n\nDatepicker: Name attr is always unique thanks to UUID (1ea543d)\n\n0.0.29 \"moh-common-lib\" (2019-04-17)\nBug Fixes\n\nPostalCodeComponent: Placeholder default fixed, changed to @Input) (67c4797)\n\n0.0.28 \"moh-common-lib\" (2019-04-16)\nFeatures\n\nPostalCode: Add 'maxlen' attribute when not using mask (532a3ec)\n\n0.0.27 \"moh-common-lib\" (2019-04-16)\nFeatures\n\nDatepicker: Implement NG_VALUE_ACCESSOR handlers and remove logs (cb65dc6)\n\n0.0.26 \"moh-common-lib\" (2019-04-16)\nFeatures\n\nDatepicker: experimental Add NG_VALUE_ACCESSOR into DatePicker (f603e99)\n\n0.0.25 \"moh-common-lib\" (2019-04-12)\nBug Fixes\n\nFileUploaderComponent: Fix runtime issue with missing reference (a9cafca)\n\n0.0.24 \"moh-common-lib\" (2019-04-10)\nBug Fixes\n\nCommonLogger: Commmon Logger now can be used with application-defined interfaces. (4766a2b)\n\n0.0.23 \"moh-common-lib\" (2019-04-10)\nFeatures\n\nCommonLogger: CommonLogger is exported from moh-common-lib/services (85eab15)\n\n0.0.22 \"moh-common-lib\" (2019-04-08)\nBug Fixes\n\npostal-code-component: Postal Code Component Validation made to match FPC. (3d0a6bc)\n\n0.0.21 \"moh-common-lib\" (2019-04-02)\nBuild\n\nUpdate build scripts and commit hooks. (ca8bd7c)\nchangelog: Improve changelog generation, adding new categories (d5bf00b)\npackage.json: npm scripts for version should now build and package docs. (3ac6d4d)\n\nDocumentation\n\ncontributing: CONTRIBUTING.MD includes instructions on git hooks (c6befdf)\n\nFeatures\n\nToggleComponent: Import ToggleComponent from FPC (df26aa1)\n\n0.0.20 \"moh-common-lib\" (2019-04-01)\nBug Fixes\n\nMove WizardProgressItem to moh-common-lib/models and export (7fd6537)\nbuild: Refactor SimpleDate location but keep same public export API (7eaf326)\nbuild: Refactor SimpleDate location but keep same public export API (d5f44c4)\n\nFeatures\n\nbuild: Add npm run clean command to rimraf dist folders (65b8144)\nbuild: Auto-add githooks after running npm install. (3b90e60)\n\n0.0.19 \"moh-common-lib\" (2019-03-28)\nBug Fixes\n\nfile-uploader: Images array will be initialized if not provided (4e8eb9b)\n\nFeatures\n\ncomponent: Create DropdownComponent (7f968a4)\ncomponents: PasswordComponent emits on blur; page-section imported. (dbb94e1)\n\n0.0.18 \"moh-common-lib\" (2019-03-28)\nFeatures\n\ncaptcha: CaptchaModule successfully configured. (e762fc1)\n\n0.0.17 \"moh-common-lib\" (2019-03-28)\nBug Fixes\n\ncaptcha: Fix compile time bug in CAPTCHA (6caf36c)\nchangelog: Truncate duplicate sections in CHANGELOG.md (c054ca5)\ncomponent: FileUploader required properly flags on return (6242bea)\ndocs: Rename documentation/ to docs/ (650025e)\nschematics: moh-start schematic sets skipLibCheck=false in tsconfig (48dfa9d)\nsecurity: Fixed issues from npm audit. (479804f)\n\nBuild\n\npackaging: Release tagging, auto-version increment, and changelog. (8a22405)\npackaging: Update build scripts for changelog and commit hooks (aee4761)\nChange changelog generation and commit (48966c0)\n\nDocumentation\n\nlib: Generate first docs, update pageframework jsdocs (bf3cf23)\nAdd Getting Started and update main readme (2c5c994)\nCreate local-development subfolder of markdown files (2625608)\nRe-generate docs after updating PasswordComponent (017bd5f)\nUpdate link to issues instead of PR (4b884a6)\nUpdate readme to absolute paths to GitHub pages (8004583)\n\nFeatures\n\nbuild: Create \"setup:git-hooks\" npm script (1a288cd)\ncaptcha: CaptchaModule properly configured so docs are now correct. (35d0bba)\ncomponent: Create common-dropdown component (01d17d3)\ncomponents: Add 'form-bar' CSS class to both form bars (6d5649d)\ndocs: Create docs config file, .compodoccrc.json (c8cd6f4)\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                projects/common/captcha/src/captcha-data.service.ts\n            \n            injectable\n            CaptchaDataService\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                projects/common/captcha/src/captcha-data.service.ts\n            \n            injectable\n            ServerPayload\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                projects/common/captcha/src/captcha.component.ts\n            \n            component\n            CaptchaComponent\n            \n                10 %\n                (4/40)\n            \n        \n        \n            \n                \n                projects/common/e2e/src/abstract-test-page.ts\n            \n            class\n            AbstractTestPage\n            \n                82 %\n                (19/23)\n            \n        \n        \n            \n                \n                projects/common/helpers/library-error.ts\n            \n            class\n            MoHCommonLibraryError\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                projects/common/helpers/scroll-helpers.ts\n            \n            function\n            scrollTo\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/common/helpers/scroll-helpers.ts\n            \n            function\n            scrollToError\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                projects/common/helpers/test-helpers.ts\n            \n            function\n            createTestingModule\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/common/helpers/test-helpers.ts\n            \n            function\n            getInputElement\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/common/helpers/test-helpers.ts\n            \n            function\n            getLabel\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/common/helpers/test-helpers.ts\n            \n            function\n            getLegendContext\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/common/helpers/test-helpers.ts\n            \n            function\n            tickAndDetectChanges\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/common/lib/components/accordion/accordion.component.ts\n            \n            component\n            AccordionCommonComponent\n            \n                16 %\n                (1/6)\n            \n        \n        \n            \n                \n                projects/common/lib/components/address/address.component.ts\n            \n            component\n            AddressComponent\n            \n                18 %\n                (9/49)\n            \n        \n        \n            \n                \n                projects/common/lib/components/address/address.component.ts\n            \n            interface\n            AddrLabelList\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                projects/common/lib/components/address/address.component.ts\n            \n            interface\n            Maxlengths\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                projects/common/lib/components/address/address.component.ts\n            \n            interface\n            ReadOnlyFields\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                projects/common/lib/components/button-group/button-group.component.ts\n            \n            component\n            ButtonGroupComponent\n            \n                5 %\n                (1/17)\n            \n        \n        \n            \n                \n                projects/common/lib/components/button/button.component.ts\n            \n            component\n            ButtonComponent\n            \n                11 %\n                (1/9)\n            \n        \n        \n            \n                \n                projects/common/lib/components/checkbox/checkbox.component.ts\n            \n            component\n            CheckboxComponent\n            \n                14 %\n                (3/21)\n            \n        \n        \n            \n                \n                projects/common/lib/components/city/city.component.ts\n            \n            component\n            CityComponent\n            \n                6 %\n                (2/30)\n            \n        \n        \n            \n                \n                projects/common/lib/components/city/validate-city.directive.ts\n            \n            directive\n            ValidateCityDirective\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                projects/common/lib/components/city/validate-city.directive.ts\n            \n            variable\n            commonValidateCity\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/common/lib/components/confirm-template/confirm-template.component.ts\n            \n            component\n            ConfirmTemplateComponent\n            \n                25 %\n                (1/4)\n            \n        \n        \n            \n                \n                projects/common/lib/components/consent-modal/consent-modal.component.ts\n            \n            component\n            ConsentModalComponent\n            \n                20 %\n                (8/40)\n            \n        \n        \n            \n                \n                projects/common/lib/components/consent-modal/consent-modal.component.ts\n            \n            interface\n            ISpaEnvResponse\n            \n                12 %\n                (1/8)\n            \n        \n        \n            \n                \n                projects/common/lib/components/core-breadcrumb/core-breadcrumb.component.ts\n            \n            component\n            CoreBreadcrumbComponent\n            \n                33 %\n                (1/3)\n            \n        \n        \n            \n                \n                projects/common/lib/components/country/country.component.ts\n            \n            component\n            CountryComponent\n            \n                3 %\n                (1/28)\n            \n        \n        \n            \n                \n                projects/common/lib/components/country/country.component.ts\n            \n            interface\n            CountryList\n            \n                33 %\n                (1/3)\n            \n        \n        \n            \n                \n                projects/common/lib/components/country/country.component.ts\n            \n            function\n            getCountryDescription\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/common/lib/components/country/country.component.ts\n            \n            variable\n            CANADA\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/common/lib/components/country/country.component.ts\n            \n            variable\n            COUNTRY_LIST\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                projects/common/lib/components/country/country.component.ts\n            \n            variable\n            UNITED_STATES\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/common/lib/components/date/date-field-format.directive.ts\n            \n            directive\n            DateFieldFormatDirective\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                projects/common/lib/components/date/date.component.ts\n            \n            component\n            DateComponent\n            \n                18 %\n                (10/54)\n            \n        \n        \n            \n                \n                projects/common/lib/components/date/date.component.ts\n            \n            variable\n            distantFuture\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/common/lib/components/date/date.component.ts\n            \n            variable\n            distantPast\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/common/lib/components/date/date.component.ts\n            \n            variable\n            MAX_YEAR_RANGE\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                projects/common/lib/components/datepicker/datepicker.component.ts\n            \n            component\n            DatepickerComponent\n            \n                32 %\n                (10/31)\n            \n        \n        \n            \n                \n                projects/common/lib/components/datepicker/datepicker.component.ts\n            \n            interface\n            DateErrorMsg\n            \n                12 %\n                (1/8)\n            \n        \n        \n            \n                \n                projects/common/lib/components/datepicker/datepicker.component.ts\n            \n            variable\n            moment\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/common/lib/components/dropdown/dropdown.component.ts\n            \n            component\n            DropdownComponent\n            \n                5 %\n                (1/18)\n            \n        \n        \n            \n                \n                projects/common/lib/components/duplicate-check/duplicate-check.directive.ts\n            \n            directive\n            DuplicateCheckDirective\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                projects/common/lib/components/duplicate-check/duplicate-check.directive.ts\n            \n            function\n            checkForDuplicates\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/common/lib/components/duplicate-check/duplicate-check.directive.ts\n            \n            function\n            commonDuplicateCheck\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/common/lib/components/email/email.component.ts\n            \n            component\n            EmailComponent\n            \n                9 %\n                (3/31)\n            \n        \n        \n            \n                \n                projects/common/lib/components/error-container/error-container.component.ts\n            \n            component\n            ErrorContainerComponent\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                projects/common/lib/components/file-uploader/file-uploader.component.ts\n            \n            component\n            FileUploaderComponent\n            \n                26 %\n                (10/38)\n            \n        \n        \n            \n                \n                projects/common/lib/components/file-uploader/file-uploader.component.ts\n            \n            interface\n            FileUploaderMsg\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                projects/common/lib/components/file-uploader/file-uploader.component.ts\n            \n            variable\n            loadImage\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/common/lib/components/file-uploader/file-uploader.component.ts\n            \n            variable\n            PDFJS\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/common/lib/components/file-uploader/file-uploader.component.ts\n            \n            variable\n            sha1\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/common/lib/components/form-action-bar/form-action-bar.component.ts\n            \n            component\n            FormActionBarComponent\n            \n                0 %\n                (0/10)\n            \n        \n        \n            \n                \n                projects/common/lib/components/form-submit-bar/form-submit-bar.component.ts\n            \n            component\n            FormSubmitBarComponent\n            \n                22 %\n                (2/9)\n            \n        \n        \n            \n                \n                projects/common/lib/components/full-name/full-name.component.ts\n            \n            component\n            FullNameComponent\n            \n                8 %\n                (2/23)\n            \n        \n        \n            \n                \n                projects/common/lib/components/full-name/full-name.component.ts\n            \n            interface\n            FullNameErrorMsg\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                projects/common/lib/components/geocoder-input/geocoder-input.component.ts\n            \n            component\n            GeocoderInputComponent\n            \n                27 %\n                (8/29)\n            \n        \n        \n            \n                \n                projects/common/lib/components/header/header.component.ts\n            \n            component\n            HeaderComponent\n            \n                9 %\n                (1/11)\n            \n        \n        \n            \n                \n                projects/common/lib/components/name/name.component.ts\n            \n            component\n            NameComponent\n            \n                10 %\n                (2/20)\n            \n        \n        \n            \n                \n                projects/common/lib/components/name/validate-name.directive.ts\n            \n            directive\n            ValidateNameDirective\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                projects/common/lib/components/name/validate-name.directive.ts\n            \n            variable\n            commonValidateName\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/common/lib/components/page-framework/page-framework.component.ts\n            \n            component\n            PageFrameworkComponent\n            \n                33 %\n                (1/3)\n            \n        \n        \n            \n                \n                projects/common/lib/components/page-section/page-section.component.ts\n            \n            component\n            PageSectionComponent\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                projects/common/lib/components/password/password.component.ts\n            \n            component\n            PasswordComponent\n            \n                13 %\n                (4/29)\n            \n        \n        \n            \n                \n                projects/common/lib/components/password/password.component.ts\n            \n            interface\n            PasswordErrorMsg\n            \n                25 %\n                (1/4)\n            \n        \n        \n            \n                \n                projects/common/lib/components/password/password.component.ts\n            \n            variable\n            zxcvbn\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/common/lib/components/phn/phn.component.ts\n            \n            component\n            PhnComponent\n            \n                6 %\n                (2/33)\n            \n        \n        \n            \n                \n                projects/common/lib/components/phone-number/phone-number.component.ts\n            \n            component\n            PhoneNumberComponent\n            \n                9 %\n                (3/33)\n            \n        \n        \n            \n                \n                projects/common/lib/components/postal-code/postal-code.component.ts\n            \n            component\n            PostalCodeComponent\n            \n                7 %\n                (2/27)\n            \n        \n        \n            \n                \n                projects/common/lib/components/postal-code/validate-bc-postal.directive.ts\n            \n            directive\n            ValidateBcPostalDirective\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                projects/common/lib/components/postal-code/validate-bc-postal.directive.ts\n            \n            variable\n            commonValidateBcPostal\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/common/lib/components/postal-code/validate-postalcode.directive.ts\n            \n            directive\n            ValidatePostalcodeDirective\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                projects/common/lib/components/postal-code/validate-postalcode.directive.ts\n            \n            function\n            commonValidatePostalcode\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/common/lib/components/postal-code/validate-postalcode.directive.ts\n            \n            function\n            validatePC\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/common/lib/components/province/province.component.ts\n            \n            component\n            ProvinceComponent\n            \n                6 %\n                (2/33)\n            \n        \n        \n            \n                \n                projects/common/lib/components/province/province.component.ts\n            \n            interface\n            ProvinceList\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                projects/common/lib/components/province/province.component.ts\n            \n            function\n            getProvinceDescription\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/common/lib/components/province/province.component.ts\n            \n            variable\n            BRITISH_COLUMBIA\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/common/lib/components/province/province.component.ts\n            \n            variable\n            PROVINCE_LIST\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/common/lib/components/radio/radio.component.ts\n            \n            component\n            RadioComponent\n            \n                6 %\n                (2/30)\n            \n        \n        \n            \n                \n                projects/common/lib/components/radio/radio.component.ts\n            \n            interface\n            IRadioItems\n            \n                33 %\n                (1/3)\n            \n        \n        \n            \n                \n                projects/common/lib/components/sample-modal/sample-modal.component.ts\n            \n            component\n            SampleModalComponent\n            \n                12 %\n                (1/8)\n            \n        \n        \n            \n                \n                projects/common/lib/components/sample-modal/sample-modal.component.ts\n            \n            interface\n            SampleImageInterface\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                projects/common/lib/components/sin/sin.component.ts\n            \n            component\n            SinComponent\n            \n                9 %\n                (3/33)\n            \n        \n        \n            \n                \n                projects/common/lib/components/street/street.component.ts\n            \n            component\n            StreetComponent\n            \n                13 %\n                (5/38)\n            \n        \n        \n            \n                \n                projects/common/lib/components/street/validate-street.directive.ts\n            \n            directive\n            ValidateStreetDirective\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                projects/common/lib/components/street/validate-street.directive.ts\n            \n            variable\n            commonValidateStreet\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/common/lib/components/thumbnail/thumbnail.component.ts\n            \n            component\n            ThumbnailComponent\n            \n                0 %\n                (0/12)\n            \n        \n        \n            \n                \n                projects/common/lib/components/toggle/toggle.component.ts\n            \n            component\n            ToggleComponent\n            \n                14 %\n                (1/7)\n            \n        \n        \n            \n                \n                projects/common/lib/components/validate-region/validate-region.directive.ts\n            \n            directive\n            ValidateRegionDirective\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                projects/common/lib/components/validate-region/validate-region.directive.ts\n            \n            variable\n            commonValidateRegion\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/common/lib/components/wizard-progress-bar/wizard-progress-bar.component.ts\n            \n            component\n            WizardProgressBarComponent\n            \n                16 %\n                (2/12)\n            \n        \n        \n            \n                \n                projects/common/lib/components/xicon-button/xicon-button.component.ts\n            \n            component\n            XiconButtonComponent\n            \n                14 %\n                (1/7)\n            \n        \n        \n            \n                \n                projects/common/lib/models/abstract-base-form.ts\n            \n            class\n            AbstractBaseForm\n            \n                85 %\n                (6/7)\n            \n        \n        \n            \n                \n                projects/common/lib/models/abstract-form-control.ts\n            \n            class\n            AbstractFormControl\n            \n                16 %\n                (2/12)\n            \n        \n        \n            \n                \n                projects/common/lib/models/abstract-form.ts\n            \n            class\n            AbstractForm\n            \n                90 %\n                (9/10)\n            \n        \n        \n            \n                \n                projects/common/lib/models/abstract-react-form.ts\n            \n            class\n            AbstractReactForm\n            \n                90 %\n                (9/10)\n            \n        \n        \n            \n                \n                projects/common/lib/models/address.model.ts\n            \n            class\n            Address\n            \n                35 %\n                (5/14)\n            \n        \n        \n            \n                \n                projects/common/lib/models/base.ts\n            \n            class\n            Base\n            \n                66 %\n                (2/3)\n            \n        \n        \n            \n                \n                projects/common/lib/models/container.ts\n            \n            class\n            Container\n            \n                75 %\n                (3/4)\n            \n        \n        \n            \n                \n                projects/common/lib/models/container.ts\n            \n            interface\n            WizardProgressItem\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                projects/common/lib/models/error-message.interface.ts\n            \n            interface\n            ErrorMessage\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                projects/common/lib/models/error-message.interface.ts\n            \n            function\n            replaceLabelTag\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/common/lib/models/error-message.interface.ts\n            \n            variable\n            LabelReplacementTag\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                projects/common/lib/models/error-message.interface.ts\n            \n            variable\n            regExpLabel\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/common/lib/models/images.model.ts\n            \n            class\n            CommonImage\n            \n                25 %\n                (4/16)\n            \n        \n        \n            \n                \n                projects/common/lib/models/images.model.ts\n            \n            class\n            CommonImageProcessingError\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                projects/common/lib/models/images.model.ts\n            \n            class\n            CommonImageScaleFactorsImpl\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                projects/common/lib/models/images.model.ts\n            \n            interface\n            CommonAttachmentJson\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                projects/common/lib/models/images.model.ts\n            \n            interface\n            CommonImageScaleFactors\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                projects/common/lib/models/mask.constants.ts\n            \n            variable\n            LETTER\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/common/lib/models/mask.constants.ts\n            \n            variable\n            NUMBER\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/common/lib/models/mask.constants.ts\n            \n            variable\n            SPACE\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/common/lib/models/person.model.ts\n            \n            class\n            Person\n            \n                40 %\n                (4/10)\n            \n        \n        \n            \n                \n                projects/common/lib/models/simple-date.interface.ts\n            \n            interface\n            SimpleDate\n            \n                25 %\n                (1/4)\n            \n        \n        \n            \n                \n                projects/common/lib/services/abstract-api-service.ts\n            \n            class\n            AbstractHttpService\n            \n                50 %\n                (5/10)\n            \n        \n        \n            \n                \n                projects/common/lib/services/abstract-page-guard.service.ts\n            \n            injectable\n            AbstractPageGuardService\n            \n                33 %\n                (1/3)\n            \n        \n        \n            \n                \n                projects/common/lib/services/abstract-pg-check.service.ts\n            \n            injectable\n            AbstractPgCheckService\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                projects/common/lib/services/check-complete-base.service.ts\n            \n            injectable\n            CheckCompleteBaseService\n            \n                50 %\n                (7/14)\n            \n        \n        \n            \n                \n                projects/common/lib/services/check-complete-base.service.ts\n            \n            interface\n            PageListInterface\n            \n                33 %\n                (1/3)\n            \n        \n        \n            \n                \n                projects/common/lib/services/default-page-guard.service.ts\n            \n            injectable\n            DefaultPageGuardService\n            \n                20 %\n                (1/5)\n            \n        \n        \n            \n                \n                projects/common/lib/services/geocoder.service.ts\n            \n            injectable\n            GeocoderService\n            \n                31 %\n                (5/16)\n            \n        \n        \n            \n                \n                projects/common/lib/services/geocoder.service.ts\n            \n            interface\n            GeoAddressResult\n            \n                16 %\n                (1/6)\n            \n        \n        \n            \n                \n                projects/common/lib/services/load-page-guard.service.ts\n            \n            guard\n            LoadPageGuardService\n            \n                40 %\n                (2/5)\n            \n        \n        \n            \n                \n                projects/common/lib/services/logger.service.ts\n            \n            injectable\n            CommonLogger\n            \n                39 %\n                (9/23)\n            \n        \n        \n            \n                \n                projects/common/lib/services/logger.service.ts\n            \n            interface\n            CommonLogMessage\n            \n                50 %\n                (1/2)\n            \n        \n        \n            \n                \n                projects/common/lib/services/logger.service.ts\n            \n            variable\n            moment\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/common/lib/services/page-state.service.ts\n            \n            injectable\n            PageStateService\n            \n                0 %\n                (0/11)\n            \n        \n        \n            \n                \n                projects/common/lib/services/page-state.service.ts\n            \n            interface\n            PageList\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                projects/common/lib/services/route-guard.service.ts\n            \n            guard\n            RouteGuardService\n            \n                20 %\n                (1/5)\n            \n        \n        \n            \n                \n                projects/common/lib/shared-core.module.ts\n            \n            variable\n            componentList\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/common/schematics/src/copy-license/index.ts\n            \n            function\n            copyLicense\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                projects/common/schematics/src/copy-license/index.ts\n            \n            variable\n            LICENSE\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/common/schematics/src/copy-license/index.ts\n            \n            variable\n            year\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/common/schematics/src/helpers/json.ts\n            \n            function\n            modifyJSON\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/common/schematics/src/helpers/json.ts\n            \n            function\n            sortObjectByKeys\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                projects/common/schematics/src/moh-start/files/MyriadWebPro_ttf_base64.ts\n            \n            variable\n            MyriadWebProTTF_base64\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/common/schematics/src/moh-start/files/app_component_html.ts\n            \n            variable\n            appComponentCSS\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/common/schematics/src/moh-start/files/app_component_html.ts\n            \n            variable\n            appComponentHtml\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/common/schematics/src/moh-start/files/favicon_ico.ts\n            \n            variable\n            favicon_base64\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/common/schematics/src/moh-start/files/gov3_bc_logo_png_base64.ts\n            \n            variable\n            BCLogoBase64\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/common/schematics/src/moh-start/files/overrides_scss.ts\n            \n            variable\n            overridesScss\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/common/schematics/src/moh-start/files/styles.ts\n            \n            variable\n            stylesSCSS\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/common/schematics/src/moh-start/files/variables_scss.ts\n            \n            variable\n            variableScss\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/common/schematics/src/moh-start/index.ts\n            \n            function\n            createIfMissing\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/common/schematics/src/moh-start/index.ts\n            \n            function\n            installPackageJsonDependencies\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/common/schematics/src/moh-start/index.ts\n            \n            function\n            mohStart\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/common/schematics/src/moh-start/index.ts\n            \n            function\n            overwriteFile\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                projects/common/schematics/src/moh-start/index.ts\n            \n            function\n            updateAngularJson\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/common/schematics/src/moh-start/index.ts\n            \n            function\n            updateTsConfig\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                projects/common/schematics/src/moh-start/package-config.ts\n            \n            function\n            addPackageToPackageJson\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                projects/common/schematics/src/moh-start/package-config.ts\n            \n            function\n            getPackageVersionFromPackageJson\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                projects/common/schematics/src/moh-start/package-config.ts\n            \n            function\n            sortObjectByKeys\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                projects/common/schematics/src/version-js/files/version.GENERATED.ts\n            \n            variable\n            buildTime\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/common/schematics/src/version-js/files/version.GENERATED.ts\n            \n            variable\n            gitCommit\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/common/schematics/src/version-js/files/version.GENERATED.ts\n            \n            variable\n            message\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                projects/common/schematics/src/version-js/files/version.GENERATED.ts\n            \n            variable\n            projectVersion\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                projects/common/schematics/src/version-js/files/version.GENERATED.ts\n            \n            variable\n            success\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                projects/common/schematics/src/version-js/index.ts\n            \n            function\n            addPackageJsonScript\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/common/schematics/src/version-js/index.ts\n            \n            function\n            copyVersionFile\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/common/schematics/src/version-js/index.ts\n            \n            function\n            updateAppComponentTs\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                projects/common/schematics/src/version-js/index.ts\n            \n            function\n            updatePackageJson\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/common/schematics/src/version-js/index.ts\n            \n            function\n            versionJS\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                projects/common/test.ts\n            \n            variable\n            context\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/common/test.ts\n            \n            variable\n            require\n            \n                0 %\n                (0/1)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @angular/animations : ^7.2.7\n        \n            @angular/common : ^7.2.7\n        \n            @angular/compiler : ^7.2.7\n        \n            @angular/core : ^7.2.7\n        \n            @angular/forms : ^7.2.7\n        \n            @angular/http : ^7.2.7\n        \n            @angular/platform-browser : ^7.2.7\n        \n            @angular/platform-browser-dynamic : ^7.2.7\n        \n            @angular/router : ^7.2.7\n        \n            @ng-select/ng-select : ^2.16.2\n        \n            @types/pdfjs-dist : ^0.1.2\n        \n            angular2-text-mask : ^9.0.0\n        \n            blueimp-load-image : ^2.20.1\n        \n            bootstrap : ^4.3.1\n        \n            core-js : ^2.5.4\n        \n            date-fns : ^2.5.1\n        \n            moment : ^2.24.0\n        \n            ngx-bootstrap : ^3.2.0\n        \n            pdfjs-dist : ^2.0.550\n        \n            rxjs : 6.4.0\n        \n            sha1 : ^1.1.1\n        \n            zone.js : ^0.8.26\n    \n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/enumerations.html":{"url":"miscellaneous/enumerations.html","title":"miscellaneous-enumerations - enumerations","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Enumerations\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            ApiStatusCodes   (projects/.../confirm-template.component.ts)\n                        \n                        \n                            CAPTCHA_STATE   (projects/.../captcha.component.ts)\n                        \n                        \n                            CommonImageError   (projects/.../images.model.ts)\n                        \n                        \n                            CommonLogEvents   (projects/.../logger.service.ts)\n                        \n                        \n                            DatepickerSizes   (projects/.../datepicker.component.ts)\n                        \n                        \n                            SeverityLevels   (projects/.../logger.service.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    projects/common/lib/components/confirm-template/confirm-template.component.ts\n    \n        \n            \n                \n                    \n                        \n                        ApiStatusCodes\n                    \n                \n                        \n                            \n                                 SUCCESS\n                            \n                        \n                        \n                            \n                                Value : 0\n                            \n                        \n                        \n                            \n                                 ERROR\n                            \n                        \n                        \n                            \n                                Value : 1\n                            \n                        \n                        \n                            \n                                 WARNING\n                            \n                        \n                        \n                            \n                                Value : 2\n                            \n                        \n            \n        \n\n    projects/common/captcha/src/captcha.component.ts\n    \n        \n            \n                \n                    \n                        \n                        CAPTCHA_STATE\n                    \n                \n                    \n                        \n                            7 mutually exclusive states, the program can only be in one of these state\nat any given point..\n\n                        \n                    \n                        \n                            \n                                 FETCHING_CAPTCHA_IMG\n                            \n                        \n                        \n                            \n                                Value : 1\n                            \n                        \n                        \n                            \n                                 SUCCESS_FETCH_IMG\n                            \n                        \n                        \n                            \n                                Value : 2\n                            \n                        \n                        \n                            \n                                 ERROR_FETCH_IMG\n                            \n                        \n                        \n                            \n                                Value : 3\n                            \n                        \n                        \n                            \n                                 VERIFYING_ANSWER\n                            \n                        \n                        \n                            \n                                Value : 4\n                            \n                        \n                        \n                            \n                                 SUCCESS_VERIFY_ANSWER_CORRECT\n                            \n                        \n                        \n                            \n                                Value : 5\n                            \n                        \n                        \n                            \n                                 ERROR_VERIFY\n                            \n                        \n                        \n                            \n                                Value : 6\n                            \n                        \n            \n        \n\n    projects/common/lib/models/images.model.ts\n    \n        \n            \n                \n                    \n                        \n                        CommonImageError\n                    \n                \n                        \n                            \n                                 WrongType\n                            \n                        \n                        \n                            \n                                 TooSmall\n                            \n                        \n                        \n                            \n                                 TooBig\n                            \n                        \n                        \n                            \n                                 AlreadyExists\n                            \n                        \n                        \n                            \n                                 Unknown\n                            \n                        \n                        \n                            \n                                 CannotOpen\n                            \n                        \n                        \n                            \n                                 PDFnotSupported\n                            \n                        \n                        \n                            \n                                 CannotOpenPDF\n                            \n                        \n            \n        \n\n    projects/common/lib/services/logger.service.ts\n    \n        \n            \n                \n                    \n                        \n                        CommonLogEvents\n                    \n                \n                        \n                            \n                                 navigation\n                            \n                        \n                        \n                            \n                                Value : navigation\n                            \n                        \n                        \n                            \n                                 error\n                            \n                        \n                        \n                            \n                                Value : error\n                            \n                        \n                        \n                            \n                                 submission\n                            \n                        \n                        \n                            \n                                Value : submission\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        SeverityLevels\n                    \n                \n                        \n                            \n                                 INFO\n                            \n                        \n                        \n                            \n                                Value : info\n                            \n                        \n                        \n                            \n                                 ERROR\n                            \n                        \n                        \n                            \n                                Value : error\n                            \n                        \n            \n        \n\n    projects/common/lib/components/datepicker/datepicker.component.ts\n    \n        \n            \n                \n                    \n                        \n                        DatepickerSizes\n                    \n                \n                        \n                            \n                                 MINI\n                            \n                        \n                        \n                            \n                                Value : mini\n                            \n                        \n                        \n                            \n                                 DEFAULT\n                            \n                        \n                        \n                            \n                                Value : default\n                            \n                        \n            \n        \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\nMoH Common Styles\nDocumentation\nDocumentation - https://bcgov.github.io/moh-common-styles/\nRequirements\n\nnode (using 8.9.4, but older versions may be compatible)\nnpm (6.4.1, but older versions may be compatible)\n\nInstallation\nnpm install --save moh-common-libSetup (Shared Components)\nTo setup the shared components:\nimport { SharedCoreModule } from 'moh-common-lib';\n\n\n@NgModule({\n    declarations: [ ... ],\n    providers: [ ... ],\n    imports: [\n        ...\n        SharedCoreModule\n    ]\n})You can read more at the Getting Started Guide\nFeedback, Mistakes, and Pull Requests\nThis library and the documentation are still very young and there are bound to be growing pains.\nIf you find any mistakes with either this documentation or the underlying library please submit an Issue on GitHub. Or if you're able you can ask me in person.  Thanks\n- Adam Coard\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"license.html":{"url":"license.html","title":"getting-started - license","body":"\n                   \n\nCopyright © 2017, Province of British Columbia, Canada.\nLicensed under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License.\nYou may obtain a copy of the License at\nhttp://www.apache.org/licenses/LICENSE-2.0Unless required by applicable law or agreed to in writing, software\ndistributed under the License is distributed on an \"AS IS\" BASIS,\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\nSee the License for the specific language governing permissions and\nlimitations under the License.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        CaptchaModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        SharedCoreModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_CaptchaModule\n\n\n\ncluster_CaptchaModule_declarations\n\n\n\ncluster_CaptchaModule_exports\n\n\n\ncluster_CaptchaModule_providers\n\n\n\ncluster_SharedCoreModule\n\n\n\ncluster_SharedCoreModule_declarations\n\n\n\ncluster_SharedCoreModule_exports\n\n\n\n\nCaptchaComponent\n\nCaptchaComponent\n\n\n\nCaptchaModule\n\nCaptchaModule\n\nCaptchaModule -->\n\nCaptchaComponent->CaptchaModule\n\n\n\n\n\nCaptchaComponent \n\nCaptchaComponent \n\nCaptchaComponent  -->\n\nCaptchaModule->CaptchaComponent \n\n\n\n\n\nCaptchaDataService\n\nCaptchaDataService\n\nCaptchaModule -->\n\nCaptchaDataService->CaptchaModule\n\n\n\n\n\nAccordionCommonComponent\n\nAccordionCommonComponent\n\n\n\nSharedCoreModule\n\nSharedCoreModule\n\nSharedCoreModule -->\n\nAccordionCommonComponent->SharedCoreModule\n\n\n\n\n\nAddressComponent\n\nAddressComponent\n\nSharedCoreModule -->\n\nAddressComponent->SharedCoreModule\n\n\n\n\n\nButtonComponent\n\nButtonComponent\n\nSharedCoreModule -->\n\nButtonComponent->SharedCoreModule\n\n\n\n\n\nButtonGroupComponent\n\nButtonGroupComponent\n\nSharedCoreModule -->\n\nButtonGroupComponent->SharedCoreModule\n\n\n\n\n\nCheckboxComponent\n\nCheckboxComponent\n\nSharedCoreModule -->\n\nCheckboxComponent->SharedCoreModule\n\n\n\n\n\nCityComponent\n\nCityComponent\n\nSharedCoreModule -->\n\nCityComponent->SharedCoreModule\n\n\n\n\n\nConfirmTemplateComponent\n\nConfirmTemplateComponent\n\nSharedCoreModule -->\n\nConfirmTemplateComponent->SharedCoreModule\n\n\n\n\n\nConsentModalComponent\n\nConsentModalComponent\n\nSharedCoreModule -->\n\nConsentModalComponent->SharedCoreModule\n\n\n\n\n\nCoreBreadcrumbComponent\n\nCoreBreadcrumbComponent\n\nSharedCoreModule -->\n\nCoreBreadcrumbComponent->SharedCoreModule\n\n\n\n\n\nCountryComponent\n\nCountryComponent\n\nSharedCoreModule -->\n\nCountryComponent->SharedCoreModule\n\n\n\n\n\nDateComponent\n\nDateComponent\n\nSharedCoreModule -->\n\nDateComponent->SharedCoreModule\n\n\n\n\n\nDateFieldFormatDirective\n\nDateFieldFormatDirective\n\nSharedCoreModule -->\n\nDateFieldFormatDirective->SharedCoreModule\n\n\n\n\n\nDatepickerComponent\n\nDatepickerComponent\n\nSharedCoreModule -->\n\nDatepickerComponent->SharedCoreModule\n\n\n\n\n\nDropdownComponent\n\nDropdownComponent\n\nSharedCoreModule -->\n\nDropdownComponent->SharedCoreModule\n\n\n\n\n\nDuplicateCheckDirective\n\nDuplicateCheckDirective\n\nSharedCoreModule -->\n\nDuplicateCheckDirective->SharedCoreModule\n\n\n\n\n\nEmailComponent\n\nEmailComponent\n\nSharedCoreModule -->\n\nEmailComponent->SharedCoreModule\n\n\n\n\n\nErrorContainerComponent\n\nErrorContainerComponent\n\nSharedCoreModule -->\n\nErrorContainerComponent->SharedCoreModule\n\n\n\n\n\nFileUploaderComponent\n\nFileUploaderComponent\n\nSharedCoreModule -->\n\nFileUploaderComponent->SharedCoreModule\n\n\n\n\n\nFormActionBarComponent\n\nFormActionBarComponent\n\nSharedCoreModule -->\n\nFormActionBarComponent->SharedCoreModule\n\n\n\n\n\nFormSubmitBarComponent\n\nFormSubmitBarComponent\n\nSharedCoreModule -->\n\nFormSubmitBarComponent->SharedCoreModule\n\n\n\n\n\nFullNameComponent\n\nFullNameComponent\n\nSharedCoreModule -->\n\nFullNameComponent->SharedCoreModule\n\n\n\n\n\nGeocoderInputComponent\n\nGeocoderInputComponent\n\nSharedCoreModule -->\n\nGeocoderInputComponent->SharedCoreModule\n\n\n\n\n\nHeaderComponent\n\nHeaderComponent\n\nSharedCoreModule -->\n\nHeaderComponent->SharedCoreModule\n\n\n\n\n\nNameComponent\n\nNameComponent\n\nSharedCoreModule -->\n\nNameComponent->SharedCoreModule\n\n\n\n\n\nPageFrameworkComponent\n\nPageFrameworkComponent\n\nSharedCoreModule -->\n\nPageFrameworkComponent->SharedCoreModule\n\n\n\n\n\nPageSectionComponent\n\nPageSectionComponent\n\nSharedCoreModule -->\n\nPageSectionComponent->SharedCoreModule\n\n\n\n\n\nPasswordComponent\n\nPasswordComponent\n\nSharedCoreModule -->\n\nPasswordComponent->SharedCoreModule\n\n\n\n\n\nPhnComponent\n\nPhnComponent\n\nSharedCoreModule -->\n\nPhnComponent->SharedCoreModule\n\n\n\n\n\nPhoneNumberComponent\n\nPhoneNumberComponent\n\nSharedCoreModule -->\n\nPhoneNumberComponent->SharedCoreModule\n\n\n\n\n\nPostalCodeComponent\n\nPostalCodeComponent\n\nSharedCoreModule -->\n\nPostalCodeComponent->SharedCoreModule\n\n\n\n\n\nProvinceComponent\n\nProvinceComponent\n\nSharedCoreModule -->\n\nProvinceComponent->SharedCoreModule\n\n\n\n\n\nRadioComponent\n\nRadioComponent\n\nSharedCoreModule -->\n\nRadioComponent->SharedCoreModule\n\n\n\n\n\nSampleModalComponent\n\nSampleModalComponent\n\nSharedCoreModule -->\n\nSampleModalComponent->SharedCoreModule\n\n\n\n\n\nSinComponent\n\nSinComponent\n\nSharedCoreModule -->\n\nSinComponent->SharedCoreModule\n\n\n\n\n\nStreetComponent\n\nStreetComponent\n\nSharedCoreModule -->\n\nStreetComponent->SharedCoreModule\n\n\n\n\n\nThumbnailComponent\n\nThumbnailComponent\n\nSharedCoreModule -->\n\nThumbnailComponent->SharedCoreModule\n\n\n\n\n\nToggleComponent\n\nToggleComponent\n\nSharedCoreModule -->\n\nToggleComponent->SharedCoreModule\n\n\n\n\n\nValidateBcPostalDirective\n\nValidateBcPostalDirective\n\nSharedCoreModule -->\n\nValidateBcPostalDirective->SharedCoreModule\n\n\n\n\n\nValidateCityDirective\n\nValidateCityDirective\n\nSharedCoreModule -->\n\nValidateCityDirective->SharedCoreModule\n\n\n\n\n\nValidateNameDirective\n\nValidateNameDirective\n\nSharedCoreModule -->\n\nValidateNameDirective->SharedCoreModule\n\n\n\n\n\nValidatePostalcodeDirective\n\nValidatePostalcodeDirective\n\nSharedCoreModule -->\n\nValidatePostalcodeDirective->SharedCoreModule\n\n\n\n\n\nValidateRegionDirective\n\nValidateRegionDirective\n\nSharedCoreModule -->\n\nValidateRegionDirective->SharedCoreModule\n\n\n\n\n\nValidateStreetDirective\n\nValidateStreetDirective\n\nSharedCoreModule -->\n\nValidateStreetDirective->SharedCoreModule\n\n\n\n\n\nWizardProgressBarComponent\n\nWizardProgressBarComponent\n\nSharedCoreModule -->\n\nWizardProgressBarComponent->SharedCoreModule\n\n\n\n\n\nXiconButtonComponent\n\nXiconButtonComponent\n\nSharedCoreModule -->\n\nXiconButtonComponent->SharedCoreModule\n\n\n\n\n\nAccordionCommonComponent \n\nAccordionCommonComponent \n\nAccordionCommonComponent  -->\n\nSharedCoreModule->AccordionCommonComponent \n\n\n\n\n\nAddressComponent \n\nAddressComponent \n\nAddressComponent  -->\n\nSharedCoreModule->AddressComponent \n\n\n\n\n\nButtonComponent \n\nButtonComponent \n\nButtonComponent  -->\n\nSharedCoreModule->ButtonComponent \n\n\n\n\n\nButtonGroupComponent \n\nButtonGroupComponent \n\nButtonGroupComponent  -->\n\nSharedCoreModule->ButtonGroupComponent \n\n\n\n\n\nCheckboxComponent \n\nCheckboxComponent \n\nCheckboxComponent  -->\n\nSharedCoreModule->CheckboxComponent \n\n\n\n\n\nCityComponent \n\nCityComponent \n\nCityComponent  -->\n\nSharedCoreModule->CityComponent \n\n\n\n\n\nConfirmTemplateComponent \n\nConfirmTemplateComponent \n\nConfirmTemplateComponent  -->\n\nSharedCoreModule->ConfirmTemplateComponent \n\n\n\n\n\nConsentModalComponent \n\nConsentModalComponent \n\nConsentModalComponent  -->\n\nSharedCoreModule->ConsentModalComponent \n\n\n\n\n\nCoreBreadcrumbComponent \n\nCoreBreadcrumbComponent \n\nCoreBreadcrumbComponent  -->\n\nSharedCoreModule->CoreBreadcrumbComponent \n\n\n\n\n\nCountryComponent \n\nCountryComponent \n\nCountryComponent  -->\n\nSharedCoreModule->CountryComponent \n\n\n\n\n\nDateComponent \n\nDateComponent \n\nDateComponent  -->\n\nSharedCoreModule->DateComponent \n\n\n\n\n\nDateFieldFormatDirective \n\nDateFieldFormatDirective \n\nDateFieldFormatDirective  -->\n\nSharedCoreModule->DateFieldFormatDirective \n\n\n\n\n\nDatepickerComponent \n\nDatepickerComponent \n\nDatepickerComponent  -->\n\nSharedCoreModule->DatepickerComponent \n\n\n\n\n\nDropdownComponent \n\nDropdownComponent \n\nDropdownComponent  -->\n\nSharedCoreModule->DropdownComponent \n\n\n\n\n\nDuplicateCheckDirective \n\nDuplicateCheckDirective \n\nDuplicateCheckDirective  -->\n\nSharedCoreModule->DuplicateCheckDirective \n\n\n\n\n\nEmailComponent \n\nEmailComponent \n\nEmailComponent  -->\n\nSharedCoreModule->EmailComponent \n\n\n\n\n\nErrorContainerComponent \n\nErrorContainerComponent \n\nErrorContainerComponent  -->\n\nSharedCoreModule->ErrorContainerComponent \n\n\n\n\n\nFileUploaderComponent \n\nFileUploaderComponent \n\nFileUploaderComponent  -->\n\nSharedCoreModule->FileUploaderComponent \n\n\n\n\n\nFormActionBarComponent \n\nFormActionBarComponent \n\nFormActionBarComponent  -->\n\nSharedCoreModule->FormActionBarComponent \n\n\n\n\n\nFormSubmitBarComponent \n\nFormSubmitBarComponent \n\nFormSubmitBarComponent  -->\n\nSharedCoreModule->FormSubmitBarComponent \n\n\n\n\n\nFullNameComponent \n\nFullNameComponent \n\nFullNameComponent  -->\n\nSharedCoreModule->FullNameComponent \n\n\n\n\n\nGeocoderInputComponent \n\nGeocoderInputComponent \n\nGeocoderInputComponent  -->\n\nSharedCoreModule->GeocoderInputComponent \n\n\n\n\n\nHeaderComponent \n\nHeaderComponent \n\nHeaderComponent  -->\n\nSharedCoreModule->HeaderComponent \n\n\n\n\n\nNameComponent \n\nNameComponent \n\nNameComponent  -->\n\nSharedCoreModule->NameComponent \n\n\n\n\n\nPageFrameworkComponent \n\nPageFrameworkComponent \n\nPageFrameworkComponent  -->\n\nSharedCoreModule->PageFrameworkComponent \n\n\n\n\n\nPageSectionComponent \n\nPageSectionComponent \n\nPageSectionComponent  -->\n\nSharedCoreModule->PageSectionComponent \n\n\n\n\n\nPasswordComponent \n\nPasswordComponent \n\nPasswordComponent  -->\n\nSharedCoreModule->PasswordComponent \n\n\n\n\n\nPhnComponent \n\nPhnComponent \n\nPhnComponent  -->\n\nSharedCoreModule->PhnComponent \n\n\n\n\n\nPhoneNumberComponent \n\nPhoneNumberComponent \n\nPhoneNumberComponent  -->\n\nSharedCoreModule->PhoneNumberComponent \n\n\n\n\n\nPostalCodeComponent \n\nPostalCodeComponent \n\nPostalCodeComponent  -->\n\nSharedCoreModule->PostalCodeComponent \n\n\n\n\n\nProvinceComponent \n\nProvinceComponent \n\nProvinceComponent  -->\n\nSharedCoreModule->ProvinceComponent \n\n\n\n\n\nRadioComponent \n\nRadioComponent \n\nRadioComponent  -->\n\nSharedCoreModule->RadioComponent \n\n\n\n\n\nSampleModalComponent \n\nSampleModalComponent \n\nSampleModalComponent  -->\n\nSharedCoreModule->SampleModalComponent \n\n\n\n\n\nSinComponent \n\nSinComponent \n\nSinComponent  -->\n\nSharedCoreModule->SinComponent \n\n\n\n\n\nStreetComponent \n\nStreetComponent \n\nStreetComponent  -->\n\nSharedCoreModule->StreetComponent \n\n\n\n\n\nThumbnailComponent \n\nThumbnailComponent \n\nThumbnailComponent  -->\n\nSharedCoreModule->ThumbnailComponent \n\n\n\n\n\nToggleComponent \n\nToggleComponent \n\nToggleComponent  -->\n\nSharedCoreModule->ToggleComponent \n\n\n\n\n\nValidateBcPostalDirective \n\nValidateBcPostalDirective \n\nValidateBcPostalDirective  -->\n\nSharedCoreModule->ValidateBcPostalDirective \n\n\n\n\n\nValidateCityDirective \n\nValidateCityDirective \n\nValidateCityDirective  -->\n\nSharedCoreModule->ValidateCityDirective \n\n\n\n\n\nValidateNameDirective \n\nValidateNameDirective \n\nValidateNameDirective  -->\n\nSharedCoreModule->ValidateNameDirective \n\n\n\n\n\nValidatePostalcodeDirective \n\nValidatePostalcodeDirective \n\nValidatePostalcodeDirective  -->\n\nSharedCoreModule->ValidatePostalcodeDirective \n\n\n\n\n\nValidateRegionDirective \n\nValidateRegionDirective \n\nValidateRegionDirective  -->\n\nSharedCoreModule->ValidateRegionDirective \n\n\n\n\n\nValidateStreetDirective \n\nValidateStreetDirective \n\nValidateStreetDirective  -->\n\nSharedCoreModule->ValidateStreetDirective \n\n\n\n\n\nWizardProgressBarComponent \n\nWizardProgressBarComponent \n\nWizardProgressBarComponent  -->\n\nSharedCoreModule->WizardProgressBarComponent \n\n\n\n\n\nXiconButtonComponent \n\nXiconButtonComponent \n\nXiconButtonComponent  -->\n\nSharedCoreModule->XiconButtonComponent \n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        2 Modules\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    38 Components\n                \n            \n        \n        \n            \n                \n                    \n                    8 Directives\n                \n            \n        \n        \n            \n                \n                    \n                    9 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    14 Classes\n                \n            \n        \n        \n            \n                \n                    \n                    2 Guards\n                \n            \n        \n        \n            \n                \n                    \n                    21 Interfaces\n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"todo.html":{"url":"todo.html","title":"getting-started - todo","body":"\n                   \n\nMoh-Common-Lib:\n- [ ] Security warnings (GitHub)\nBreaking Changes for version 3.0.0:\n\n FormActionBar / FormSubmiBar - make the on load default colour yellow\nThis can fix a \"flash\" of the first colour on macbooks and faster computers (nonVDI)\n\n\n Delete all instances of showError. We never use it as an @Input.\n address.model.ts\n public hasValue: boolean; // TODO: Why do we need this? - Remove - breaking change\n public isValid: boolean; // TODO: Why do we need this? - Remove - breaking change\n\n\n radio.component.ts\n @Input() showError: boolean; // TODO: Remove - breaking change\n // TODO: remove status change - breaking change\n\n\n checkbox.component.ts\n Remove to make custom form control -- possible breaking change\n @Input() required: boolean = false;  // TODO: Remove - breaking change\n Remove the showError\n\n\n xicon-button.component.ts\n Remove clickEvent output. Should be able to just use \"click\", which follows conventional Angular naming.\n\n\n street.component.ts\n Replace \"maxlen\" with \"maxlength\" across this and other components. Maxlength is more semantic / consistent.  Search for this in other places too.\n\n\n date.component.ts - Should become a FormControl (NgControl)\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"additional-documentation/getting-started.html":{"url":"additional-documentation/getting-started.html","title":"additional-page - Getting Started","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nGetting Started\nAssumption: you've already installed moh-common-lib.\nImporting the Library (moh-common-lib)\nImport components via the SharedCoreModule.\nimport { SharedCoreModule } from 'moh-common-lib';\n\n\n@NgModule({\n    declarations: [ ... ],\n    providers: [ ... ],\n    imports: [\n        ...\n        SharedCoreModule\n    ]\n})By adding this module you will automatically get access to core components, each starting with  \"common-*\". View all components\nThis does not import Services, Models, and some specific components like FileUploader and Captcha. Those will be detailed below.\nImporting Dos and Don'ts\nAll imports from moh-common-lib should go to one of the secondary entry points listed above (e.g. /models or /captcha). You should never import from a deeper level. When auto-importing make sure to double-check the import paths because VS Code often likes to setup incorrect imports.\n// GOOD\nimport { GeocoderService } from 'moh-common-lib/services';\n\n// BAD\nimport { GeoAddressResult } from 'moh-common-lib/services/geocoder.service';If you need access to an export and can only get it this way, let us know and we can export it properly.\nImporting a Service (moh-common-lib/services)\nIf a service is usable as-is, you can find them in the Injectables section of the documentation in the menu.\nimport { GeocoderService } from 'moh-common-lib/services';Setting up an API Service (moh-common-lib/services)\nIn some cases, we provide abstract classes that provide the foundation of services you will create.   \nFor example, the AbstractHTTPService:\nimport { AbstractHttpService } from 'moh-common-lib/services';\n\n@Injectable()\nexport class APIService extends AbstractHTTPService {}\n// You will have to setup _headers, and handleError(), \n// and create your own methods for each API Request using this.get() and this.post()These Abstract classes are not injectables and as such are found under Classes.  The Classes folder section also includes other non-service classes, like models.\nImporting a Model (moh-common-lib/models)\nModels are all found under Classes.\nimport { Address } from 'moh-common-lib/models';\nconst addr = new Address();The address, and others like it, is a pure TypeScript model with no specific Angular integration. However, other components may expect an Address as an @Input.\nFile Uploader classes, interfaces, etc. (moh-common-lib/images)\nAll classes, interfaces, and enums related to the FileUploader are all in moh-common-lib/images\nimport { CommonImage, CommonImageError, CommonImageScaleFactorsImpl } from 'moh-common-lib/images';This does NOT include the actual FileUploader, which is currently in the SharedCoreModule.\nCAPTCHA\nNote: This is still in development and may not be working\nimport { CaptchaModule } from 'moh-common-lib/captcha';\n\n@NgModule({\n    declarations: [ ... ],\n    providers: [ ... ],\n    imports: [\n        ...\n        CaptchaModule\n    ]\n})Then register your application module and use \n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"additional-documentation/local-development.html":{"url":"additional-documentation/local-development.html","title":"additional-page - Local Development","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nLocal Development\n\ncomponents\nschematics\nschematics\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"additional-documentation/local-development/schematics.html":{"url":"additional-documentation/local-development/schematics.html","title":"additional-page - Schematics","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nSchematics\nThis file will help you get setup with building and running schematics. This is not necessary for publishing NPM builds of components, but is relevant if you wish to use these schematics for code-generation.\nWriting code & compiling changes\nMake sure to write all changes to .ts files, e.g. index.ts.   The schematics folder, and all schemtaics, must be in projects/common/schematics\n    npm run build # compiles one time - must be run in schematics folder\n    npm run build -- -w # watches for changes and re-compiles - in schematics folder\n    npm run build:schematics # helper command - can be run anywhere in project, even top levelThen use the above to compile to .d.ts, .js, and .map.js files. It's important to compile the files before running any schematics either locally or before publishing to npm, etc. \nUnsure: Potentially you may need to run npm install prior to your first build.\nLinking Schematics\nLinking schematics only has to be done once. You'll only have to do it again if you move this folder.\nWe have to link from the projects/common/schematics folder. You can tell it's the correct folder because it has package.json in it.\n    cd moh-common-styles/projects/common/schematics\n    npm link # creates moh-common-schematics link, name from package.jsonCreating a new project and running schematics\n    ng new example --style=scss --routing=true // both params required\n    npm link moh-common-schematics # creates a symlink to the schematics folder above\n    ng g moh-common-schematics:moh-start # runs the schematicCreating a new schematic\nFirst, you must make sure the schematics-cli is installed on your machine.\n    npm install -g @angular-devkit/schematics-cliTo create a new schematic, make sure to run the command from the right folder.  It should be in the same folder as the moh-common-schematics package.json. projects/common/schematics\n    cd projects/common/schematics\n    schematics blank  --name=schematic-name-exampleTODO\n\n ~~*High Priority Fix compilation errors when lodaing moh-common-lib (WizardProgressBar) in moh-start by adding to tsconfig:*~~ [2019-03-06]\n  \"typeRoots\": [ \"../node_modules/@types\" ],\n  \"skipLibCheck\": true\n Making changes to schematic + re-compiling (npm run build + watch command)\n\n Include integration with upcoming moh-common-styles library\n\n resolve issue with component viewProviders, ControlContainer + ngForms for \"nested\" components\n\n uncomment pollyfills.ts\n\n Package.json scripts from fpc (e.g. version, preversion)\n\n Document need for openshift/ folder to still be manually setup\n\n Configurable project name, e.g. change page title.\n\n Split moh-start schematic into multiple schematics, de-compose them. Will make path to future 'update' calls simpler (update-scss, update-assets, update-dependencies). Moh-start should just call each of them.\n\n Convert moh-start to use templates instead of base64 encoding (like version-js does)\n\n Add momentjs as dependency to package.json\n\n Add NgForm and other modules to appropriate angular modules\n\n angular.json - add preserveSymlinks to new projects\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"additional-documentation/local-development/components.html":{"url":"additional-documentation/local-development/components.html","title":"additional-page - Components","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nComponents\nThis file will help you get setup with local development for components, modules, and other importable objects. This includes local builds, but it is also a required step in order to create builds for NPM.\nThis does not include schematics which are not imported by projects but rather ran on them or used to generate code. \nNew Project Setup + Schematics\nThis project has 2 main parts to it, and this readme is broken in 2 to reflect that.\n\nThe Library - moh-common-lib - relates to this project as a component library for an Angular application, to appear in the node_modules/ folder of an Angular application\nThe Schematics - moh-common-schematics - relates to this project as a collection of Angular schematics and scripts to setup a whole project or files within a project. These schematics live in this project, but operate on an Angular application.\n\nThere are two different npm links for each of these facets.  Each one corresponds to a different package.json:\n\nmoh-common-lib (library) > projects/common/package.json\nmoh-common-schematics (schematics) > projects/common/schematics/package.json\n\nFor more information on schematics, look at the Schematics documentation.\nThe Library\nBuilding the Library\nFirst make sure to run npm install prior to building, to install necessary dependencies.  You must build the library prior to using and linking in local development.\n> ng build moh-commmon-libIf it runs well, the end of the output should show the following:\nBuilt moh-common-lib\nBuilt Angular Package!\n- from: /space/workspace/moh-common-styles/projects/common\n- to:   /space/workspace/moh-common-styles/dist/commonWe can see build artifacts are created in the \"to\" folder. For local development, we will npm link directly to that folder; when publishing to npm we will publish tohse artifacts.\nSetting up npm link for library\nOh the command line navigate to the \"to\" folder from above, the dist folder for the common project: moh-common-styles/dist/common. Then run the following command:\n> npm linkNote - the dist/common folder MUST have a package.json in it. The name in the package.json will be used as a reference when linking to this folder from other folders (e.g. when configuring PRIME to use this common library). In our case the name is moh-common-lib. Assuming all goes well you should see output at the end like this (paths may differ):\n.../example/path.../node/v8.9.4/lib/node_modules/moh-common-lib -> /space/workspace/moh-common-styles/projects/common\nIf the folder does not exist, or is empty, make sure to build the library.\nSetting up npm link for library\nYou must make sure to set \"preserveSymlinks\": true in angular.json under the project>architect>build>options.\nThen navigate to the application which will consume the library, make sure you're in the same folder as that application's package.json (this should be the top level, e.g. prime-web/).  From there, run npm link moh-common-lib.  That's it, the build artifacts from the library will now appear in node_modules/ and can be imported like any other library.  Now in the application you can write...\nTypeScript\nimport { example } from 'moh-common-lib'\nIf you've made any chanfges to the library make sure to re-build with ng build moh-commmon-lib from the library folder.\nAs for what specifically you can import from 'moh-common-lib', that is all defined in projects/common/src/public_api.ts.\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
